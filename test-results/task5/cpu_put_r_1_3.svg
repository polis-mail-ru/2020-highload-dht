<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (19,719 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.05%)</title><rect x="10.0" y="771.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.05%)</title><rect x="10.0" y="755.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.04%)</title><rect x="10.1" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.1" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.04%)</title><rect x="10.1" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.1" y="734.0"></text>
</g>
<g>
<title>[not_walkable_Java] (30 samples, 0.15%)</title><rect x="10.8" y="771.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.8" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="11.0" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.0" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (13 samples, 0.07%)</title><rect x="11.3" y="755.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.3" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (12 samples, 0.06%)</title><rect x="11.4" y="739.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.4" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.04%)</title><rect x="11.6" y="723.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.6" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="12.1" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="12.6" y="771.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (32 samples, 0.16%)</title><rect x="13.0" y="771.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="16.0" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="13.0" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.0" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.03%)</title><rect x="13.0" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.0" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (20 samples, 0.10%)</title><rect x="13.7" y="755.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="16.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.10%)</title><rect x="13.8" y="739.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.10%)</title><rect x="13.8" y="723.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.09%)</title><rect x="13.8" y="707.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.8" y="718.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.09%)</title><rect x="13.8" y="691.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="16.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.09%)</title><rect x="13.8" y="675.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.06%)</title><rect x="14.2" y="659.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="17.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.06%)</title><rect x="14.2" y="643.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.06%)</title><rect x="14.2" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="17.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,234 samples, 26.54%)</title><rect x="15.1" y="771.0" width="313.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.1" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,234 samples, 26.54%)</title><rect x="15.1" y="755.0" width="313.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.1" y="766.0">java/util/concurrent/ThreadPoolExecutor$Wo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,234 samples, 26.54%)</title><rect x="15.1" y="739.0" width="313.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.1" y="750.0">java/util/concurrent/ThreadPoolExecutor.ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,242 samples, 21.51%)</title><rect x="15.3" y="723.0" width="253.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="734.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,059 samples, 15.51%)</title><rect x="17.1" y="707.0" width="183.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.1" y="718.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (156 samples, 0.79%)</title><rect x="17.5" y="691.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (87 samples, 0.44%)</title><rect x="17.5" y="675.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (87 samples, 0.44%)</title><rect x="17.5" y="659.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$102/1868583790.apply (69 samples, 0.35%)</title><rect x="22.7" y="675.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$5 (69 samples, 0.35%)</title><rect x="22.7" y="659.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.7" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="22.7" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (63 samples, 0.32%)</title><rect x="23.1" y="643.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.05%)</title><rect x="25.5" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.5" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.05%)</title><rect x="25.5" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.5" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.05%)</title><rect x="25.5" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.05%)</title><rect x="25.5" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.5" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.05%)</title><rect x="25.5" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="28.5" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.04%)</title><rect x="25.6" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="28.6" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.04%)</title><rect x="25.6" y="531.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.6" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="25.6" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="28.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.03%)</title><rect x="25.6" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.05%)</title><rect x="26.0" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.05%)</title><rect x="26.0" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.03%)</title><rect x="26.2" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.2" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="26.2" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.2" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.03%)</title><rect x="26.2" y="563.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.2" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="26.2" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="29.2" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="26.2" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.2" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="26.6" y="627.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="29.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,894 samples, 14.68%)</title><rect x="26.9" y="691.0" width="173.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.9" y="702.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,891 samples, 14.66%)</title><rect x="27.1" y="675.0" width="173.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.1" y="686.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.05%)</title><rect x="27.1" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (10 samples, 0.05%)</title><rect x="27.1" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$104/1056165277.accept (2,880 samples, 14.61%)</title><rect x="27.7" y="659.0" width="172.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.7" y="670.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (2,880 samples, 14.61%)</title><rect x="27.7" y="643.0" width="172.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.7" y="654.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (2,880 samples, 14.61%)</title><rect x="27.7" y="627.0" width="172.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="638.0">ru/mail/polis/util/Uti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,877 samples, 14.59%)</title><rect x="27.8" y="611.0" width="172.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.8" y="622.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,524 samples, 12.80%)</title><rect x="33.2" y="595.0" width="151.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.2" y="606.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (120 samples, 0.61%)</title><rect x="33.5" y="579.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.06%)</title><rect x="36.8" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.8" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.06%)</title><rect x="36.8" y="547.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.8" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.06%)</title><rect x="36.8" y="531.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.8" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.05%)</title><rect x="36.9" y="515.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="39.9" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.04%)</title><rect x="37.0" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="40.0" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="37.2" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="40.2" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="37.2" y="467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="40.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (53 samples, 0.27%)</title><rect x="37.5" y="563.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (53 samples, 0.27%)</title><rect x="37.5" y="547.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (53 samples, 0.27%)</title><rect x="37.5" y="531.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,400 samples, 12.17%)</title><rect x="40.6" y="579.0" width="143.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.6" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="40.8" y="563.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="43.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,392 samples, 12.13%)</title><rect x="41.1" y="563.0" width="143.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.1" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,370 samples, 12.02%)</title><rect x="42.4" y="547.0" width="141.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,361 samples, 11.97%)</title><rect x="43.0" y="531.0" width="141.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.0" y="542.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (61 samples, 0.31%)</title><rect x="43.6" y="515.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="46.6" y="526.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (6 samples, 0.03%)</title><rect x="45.4" y="499.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="48.4" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (17 samples, 0.09%)</title><rect x="45.8" y="499.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="48.8" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (13 samples, 0.07%)</title><rect x="46.1" y="483.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="49.1" y="494.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (6 samples, 0.03%)</title><rect x="46.5" y="467.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="49.5" y="478.0"></text>
</g>
<g>
<title>jni_GetIntField (6 samples, 0.03%)</title><rect x="46.9" y="499.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.9" y="510.0"></text>
</g>
<g>
<title>__libc_send (2,282 samples, 11.57%)</title><rect x="47.2" y="515.0" width="136.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="50.2" y="526.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,254 samples, 11.43%)</title><rect x="48.9" y="499.0" width="134.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="51.9" y="510.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (2,254 samples, 11.43%)</title><rect x="48.9" y="483.0" width="134.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.9" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (2,230 samples, 11.31%)</title><rect x="50.3" y="467.0" width="133.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.3" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (2,229 samples, 11.30%)</title><rect x="50.4" y="451.0" width="133.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="53.4" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (8 samples, 0.04%)</title><rect x="51.4" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="54.4" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (2,158 samples, 10.94%)</title><rect x="51.9" y="435.0" width="129.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="54.9" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (12 samples, 0.06%)</title><rect x="52.2" y="419.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="55.2" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (6 samples, 0.03%)</title><rect x="52.6" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.6" y="414.0"></text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.07%)</title><rect x="53.0" y="419.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="56.0" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (11 samples, 0.06%)</title><rect x="53.1" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="56.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,128 samples, 10.79%)</title><rect x="53.7" y="419.0" width="127.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="56.7" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (19 samples, 0.10%)</title><rect x="53.8" y="403.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="56.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (18 samples, 0.09%)</title><rect x="53.9" y="387.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.9" y="398.0"></text>
</g>
<g>
<title>release_sock (11 samples, 0.06%)</title><rect x="54.9" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2,097 samples, 10.63%)</title><rect x="55.6" y="403.0" width="125.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.6" y="414.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (12 samples, 0.06%)</title><rect x="59.8" y="387.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.8" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.05%)</title><rect x="60.0" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.0" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,724 samples, 8.74%)</title><rect x="60.6" y="387.0" width="103.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.6" y="398.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (1,719 samples, 8.72%)</title><rect x="60.9" y="371.0" width="102.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.9" y="382.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,595 samples, 8.09%)</title><rect x="63.1" y="355.0" width="95.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.1" y="366.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (1,485 samples, 7.53%)</title><rect x="65.3" y="339.0" width="88.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="68.3" y="350.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (18 samples, 0.09%)</title><rect x="66.0" y="323.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="69.0" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (14 samples, 0.07%)</title><rect x="66.2" y="307.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="69.2" y="318.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 0.17%)</title><rect x="67.0" y="323.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.0" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (32 samples, 0.16%)</title><rect x="67.1" y="307.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.1" y="318.0"></text>
</g>
<g>
<title>ip_send_check (24 samples, 0.12%)</title><rect x="67.3" y="291.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.3" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="68.7" y="291.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="71.7" y="302.0"></text>
</g>
<g>
<title>ip_output (1,421 samples, 7.21%)</title><rect x="69.1" y="323.0" width="85.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="72.1" y="334.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (15 samples, 0.08%)</title><rect x="69.5" y="307.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="72.5" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.04%)</title><rect x="69.9" y="291.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="72.9" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,375 samples, 6.97%)</title><rect x="70.4" y="307.0" width="82.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.4" y="318.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (68 samples, 0.34%)</title><rect x="72.2" y="291.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="75.2" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (41 samples, 0.21%)</title><rect x="73.1" y="275.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="76.1" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (36 samples, 0.18%)</title><rect x="73.4" y="259.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.4" y="270.0"></text>
</g>
<g>
<title>netif_rx (20 samples, 0.10%)</title><rect x="74.0" y="243.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.0" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (20 samples, 0.10%)</title><rect x="74.0" y="227.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="77.0" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (18 samples, 0.09%)</title><rect x="74.1" y="211.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.1" y="222.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.04%)</title><rect x="75.7" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.7" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,276 samples, 6.47%)</title><rect x="76.3" y="291.0" width="76.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.3" y="302.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (1,273 samples, 6.46%)</title><rect x="76.5" y="275.0" width="76.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.5" y="286.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (1,235 samples, 6.26%)</title><rect x="78.8" y="259.0" width="73.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.8" y="270.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (1,235 samples, 6.26%)</title><rect x="78.8" y="243.0" width="73.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.8" y="254.0">__softir..</text>
</g>
<g>
<title>net_rx_action (1,210 samples, 6.14%)</title><rect x="80.3" y="227.0" width="72.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="83.3" y="238.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (1,192 samples, 6.04%)</title><rect x="81.3" y="211.0" width="71.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.3" y="222.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,168 samples, 5.92%)</title><rect x="82.8" y="195.0" width="69.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.8" y="206.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.07%)</title><rect x="83.1" y="179.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.1" y="190.0"></text>
</g>
<g>
<title>ip_rcv (1,149 samples, 5.83%)</title><rect x="83.9" y="179.0" width="68.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.9" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1,130 samples, 5.73%)</title><rect x="84.1" y="163.0" width="67.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.1" y="174.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,124 samples, 5.70%)</title><rect x="84.4" y="147.0" width="67.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.4" y="158.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1,118 samples, 5.67%)</title><rect x="84.8" y="131.0" width="66.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.8" y="142.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (7 samples, 0.04%)</title><rect x="85.9" y="115.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="88.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,092 samples, 5.54%)</title><rect x="86.4" y="115.0" width="65.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.4" y="126.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (37 samples, 0.19%)</title><rect x="89.3" y="99.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.3" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (40 samples, 0.20%)</title><rect x="91.6" y="99.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.6" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (39 samples, 0.20%)</title><rect x="91.7" y="83.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.7" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (37 samples, 0.19%)</title><rect x="91.8" y="67.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.8" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (18 samples, 0.09%)</title><rect x="92.9" y="51.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="95.9" y="62.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (7 samples, 0.04%)</title><rect x="93.4" y="35.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="96.4" y="46.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (958 samples, 4.86%)</title><rect x="94.1" y="99.0" width="57.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="97.1" y="110.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (948 samples, 4.81%)</title><rect x="94.7" y="83.0" width="56.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.7" y="94.0">tcp_rc..</text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="96.5" y="67.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (508 samples, 2.58%)</title><rect x="96.8" y="67.0" width="30.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.8" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (489 samples, 2.48%)</title><rect x="98.0" y="51.0" width="29.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.0" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (488 samples, 2.47%)</title><rect x="98.0" y="35.0" width="29.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.0" y="46.0">_r..</text>
</g>
<g>
<title>tcp_ack (327 samples, 1.66%)</title><rect x="127.2" y="67.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.2" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (114 samples, 0.58%)</title><rect x="133.3" y="51.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="136.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (24 samples, 0.12%)</title><rect x="133.3" y="35.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.3" y="46.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.05%)</title><rect x="134.8" y="35.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.8" y="46.0"></text>
</g>
<g>
<title>skb_release_data (80 samples, 0.41%)</title><rect x="135.4" y="35.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.4" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (28 samples, 0.14%)</title><rect x="140.2" y="51.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.2" y="62.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.04%)</title><rect x="141.9" y="51.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.9" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (27 samples, 0.14%)</title><rect x="142.4" y="51.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="145.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.06%)</title><rect x="143.3" y="35.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="146.3" y="46.0"></text>
</g>
<g>
<title>rb_first (13 samples, 0.07%)</title><rect x="144.0" y="51.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="147.0" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (11 samples, 0.06%)</title><rect x="144.8" y="51.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="147.8" y="62.0"></text>
</g>
<g>
<title>tcp_rate_gen (6 samples, 0.03%)</title><rect x="145.5" y="51.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="148.5" y="62.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (11 samples, 0.06%)</title><rect x="146.1" y="51.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="149.1" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (18 samples, 0.09%)</title><rect x="146.8" y="67.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="149.8" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (20 samples, 0.10%)</title><rect x="147.9" y="67.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.9" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (33 samples, 0.17%)</title><rect x="149.1" y="67.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="152.1" y="78.0"></text>
</g>
<g>
<title>ktime_get (19 samples, 0.10%)</title><rect x="150.0" y="51.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.0" y="62.0"></text>
</g>
<g>
<title>read_tsc (10 samples, 0.05%)</title><rect x="150.5" y="35.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.5" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.03%)</title><rect x="151.1" y="67.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.1" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (9 samples, 0.05%)</title><rect x="151.7" y="163.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="154.7" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.04%)</title><rect x="152.2" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="155.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.12%)</title><rect x="152.7" y="307.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="155.7" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (20 samples, 0.10%)</title><rect x="152.8" y="291.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="155.8" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (20 samples, 0.10%)</title><rect x="152.8" y="275.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.8" y="286.0"></text>
</g>
<g>
<title>avc_has_perm (11 samples, 0.06%)</title><rect x="153.1" y="259.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="156.1" y="270.0"></text>
</g>
<g>
<title>__skb_clone (26 samples, 0.13%)</title><rect x="154.2" y="339.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="157.2" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (8 samples, 0.04%)</title><rect x="155.2" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.2" y="334.0"></text>
</g>
<g>
<title>__tcp_select_window (26 samples, 0.13%)</title><rect x="155.7" y="339.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="158.7" y="350.0"></text>
</g>
<g>
<title>ktime_get (13 samples, 0.07%)</title><rect x="158.6" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="161.6" y="366.0"></text>
</g>
<g>
<title>read_tsc (9 samples, 0.05%)</title><rect x="158.8" y="339.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="161.8" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (62 samples, 0.31%)</title><rect x="159.4" y="355.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="162.4" y="366.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (20 samples, 0.10%)</title><rect x="161.8" y="339.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="164.8" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (11 samples, 0.06%)</title><rect x="163.1" y="355.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="166.1" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (45 samples, 0.23%)</title><rect x="163.7" y="387.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="166.7" y="398.0"></text>
</g>
<g>
<title>copyin (24 samples, 0.12%)</title><rect x="163.9" y="371.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="166.9" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (23 samples, 0.12%)</title><rect x="163.9" y="355.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="166.9" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (19 samples, 0.10%)</title><rect x="165.3" y="371.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="168.3" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (32 samples, 0.16%)</title><rect x="166.4" y="387.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.4" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (32 samples, 0.16%)</title><rect x="166.4" y="371.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.4" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (91 samples, 0.46%)</title><rect x="168.3" y="387.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.3" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (72 samples, 0.37%)</title><rect x="169.4" y="371.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.4" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (23 samples, 0.12%)</title><rect x="170.7" y="355.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="173.7" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (23 samples, 0.12%)</title><rect x="170.7" y="339.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="173.7" y="350.0"></text>
</g>
<g>
<title>__ksize (9 samples, 0.05%)</title><rect x="172.0" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="175.0" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.09%)</title><rect x="172.6" y="355.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="175.6" y="366.0"></text>
</g>
<g>
<title>skb_entail (28 samples, 0.14%)</title><rect x="173.8" y="387.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.8" y="398.0"></text>
</g>
<g>
<title>tcp_chrono_start (21 samples, 0.11%)</title><rect x="174.2" y="371.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.2" y="382.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.03%)</title><rect x="175.5" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="178.5" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (13 samples, 0.07%)</title><rect x="175.8" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="178.8" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (72 samples, 0.37%)</title><rect x="176.5" y="387.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.5" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (70 samples, 0.35%)</title><rect x="176.7" y="371.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="179.7" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (27 samples, 0.14%)</title><rect x="179.2" y="355.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="182.2" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (45 samples, 0.23%)</title><rect x="181.1" y="435.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.1" y="446.0"></text>
</g>
<g>
<title>__fget_light (45 samples, 0.23%)</title><rect x="181.1" y="419.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.1" y="430.0"></text>
</g>
<g>
<title>__fget (39 samples, 0.20%)</title><rect x="181.4" y="403.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (250 samples, 1.27%)</title><rect x="184.3" y="595.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (214 samples, 1.09%)</title><rect x="186.4" y="579.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (214 samples, 1.09%)</title><rect x="186.4" y="563.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.4" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (12 samples, 0.06%)</title><rect x="199.2" y="595.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="202.2" y="606.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.04%)</title><rect x="199.5" y="579.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="202.5" y="590.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.04%)</title><rect x="199.5" y="563.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="202.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$94/1605766242.get (1,152 samples, 5.84%)</title><rect x="200.2" y="707.0" width="68.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.2" y="718.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$4 (1,152 samples, 5.84%)</title><rect x="200.2" y="691.0" width="68.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.2" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/DaoService.put (1,152 samples, 5.84%)</title><rect x="200.2" y="675.0" width="68.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.2" y="686.0">ru/mail..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="200.5" y="659.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="203.5" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="200.5" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="203.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (97 samples, 0.49%)</title><rect x="200.8" y="659.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.8" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="204.9" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="207.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.03%)</title><rect x="205.6" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="205.6" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="205.6" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.6" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="205.6" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="208.6" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="205.6" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="208.6" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="205.6" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="208.6" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="205.6" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="208.6" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.06%)</title><rect x="205.9" y="643.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="208.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (1,044 samples, 5.29%)</title><rect x="206.6" y="659.0" width="62.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.6" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (69 samples, 0.35%)</title><rect x="206.6" y="643.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (69 samples, 0.35%)</title><rect x="206.6" y="627.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (20 samples, 0.10%)</title><rect x="209.6" y="611.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (16 samples, 0.08%)</title><rect x="209.6" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (16 samples, 0.08%)</title><rect x="209.6" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (7 samples, 0.04%)</title><rect x="210.8" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (7 samples, 0.04%)</title><rect x="210.8" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (900 samples, 4.56%)</title><rect x="211.2" y="643.0" width="53.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.2" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (894 samples, 4.53%)</title><rect x="211.2" y="627.0" width="53.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.2" y="638.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (849 samples, 4.31%)</title><rect x="213.8" y="611.0" width="50.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.8" y="622.0">java/..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.11%)</title><rect x="220.5" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (716 samples, 3.63%)</title><rect x="221.8" y="595.0" width="42.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.8" y="606.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (716 samples, 3.63%)</title><rect x="221.8" y="579.0" width="42.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.8" y="590.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (716 samples, 3.63%)</title><rect x="221.8" y="563.0" width="42.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.8" y="574.0">java..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (194 samples, 0.98%)</title><rect x="253.0" y="547.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.0" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (41 samples, 0.21%)</title><rect x="262.2" y="531.0" width="2.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="265.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.of (6 samples, 0.03%)</title><rect x="264.7" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.7" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="264.7" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="267.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="264.7" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="267.7" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="264.7" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="267.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="264.7" y="563.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="267.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.flush (68 samples, 0.34%)</title><rect x="265.0" y="643.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.save (68 samples, 0.34%)</title><rect x="265.0" y="627.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.saveTo (68 samples, 0.34%)</title><rect x="265.0" y="611.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (62 samples, 0.31%)</title><rect x="265.4" y="595.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (58 samples, 0.29%)</title><rect x="265.6" y="579.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (58 samples, 0.29%)</title><rect x="265.6" y="563.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (58 samples, 0.29%)</title><rect x="265.6" y="547.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (58 samples, 0.29%)</title><rect x="265.6" y="531.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.6" y="542.0"></text>
</g>
<g>
<title>__libc_write (55 samples, 0.28%)</title><rect x="265.7" y="515.0" width="3.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="268.7" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.28%)</title><rect x="265.7" y="499.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.7" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 0.28%)</title><rect x="265.7" y="483.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.7" y="494.0"></text>
</g>
<g>
<title>ksys_write (53 samples, 0.27%)</title><rect x="265.8" y="467.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="268.8" y="478.0"></text>
</g>
<g>
<title>vfs_write (51 samples, 0.26%)</title><rect x="265.9" y="451.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.9" y="462.0"></text>
</g>
<g>
<title>new_sync_write (48 samples, 0.24%)</title><rect x="266.1" y="435.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="269.1" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter?[ext4] (44 samples, 0.22%)</title><rect x="266.3" y="419.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="269.3" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (43 samples, 0.22%)</title><rect x="266.4" y="403.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.4" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (41 samples, 0.21%)</title><rect x="266.5" y="387.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="269.5" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin?[ext4] (9 samples, 0.05%)</title><rect x="266.7" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="269.7" y="382.0"></text>
</g>
<g>
<title>jbd2__journal_start?[jbd2] (6 samples, 0.03%)</title><rect x="266.9" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="269.9" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end?[ext4] (22 samples, 0.11%)</title><rect x="267.3" y="371.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.3" y="382.0"></text>
</g>
<g>
<title>generic_write_end (17 samples, 0.09%)</title><rect x="267.6" y="355.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="270.6" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (17 samples, 0.09%)</title><rect x="267.6" y="339.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="270.6" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode?[ext4] (17 samples, 0.09%)</title><rect x="267.6" y="323.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="270.6" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (16 samples, 0.08%)</title><rect x="267.6" y="307.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="270.6" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (16 samples, 0.08%)</title><rect x="267.6" y="291.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="270.6" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set?[ext4] (15 samples, 0.08%)</title><rect x="267.7" y="275.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="270.7" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0?[ext4] (15 samples, 0.08%)</title><rect x="267.7" y="259.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="270.7" y="270.0"></text>
</g>
<g>
<title>chksum_update (15 samples, 0.08%)</title><rect x="267.7" y="243.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="270.7" y="254.0"></text>
</g>
<g>
<title>__crc32c_le (14 samples, 0.07%)</title><rect x="267.7" y="227.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="270.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (90 samples, 0.46%)</title><rect x="269.1" y="723.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (90 samples, 0.46%)</title><rect x="269.1" y="707.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (90 samples, 0.46%)</title><rect x="269.1" y="691.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.03%)</title><rect x="272.8" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.12%)</title><rect x="273.1" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (891 samples, 4.52%)</title><rect x="274.5" y="723.0" width="53.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.5" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (877 samples, 4.45%)</title><rect x="275.3" y="707.0" width="52.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.3" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (497 samples, 2.52%)</title><rect x="275.6" y="691.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.6" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (278 samples, 1.41%)</title><rect x="275.9" y="675.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (278 samples, 1.41%)</title><rect x="275.9" y="659.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (233 samples, 1.18%)</title><rect x="278.4" y="643.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (233 samples, 1.18%)</title><rect x="278.4" y="627.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (229 samples, 1.16%)</title><rect x="278.6" y="611.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.10%)</title><rect x="279.0" y="595.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="282.0" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.04%)</title><rect x="279.5" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="282.5" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (204 samples, 1.03%)</title><rect x="280.1" y="595.0" width="12.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (185 samples, 0.94%)</title><rect x="281.3" y="579.0" width="11.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="284.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (185 samples, 0.94%)</title><rect x="281.3" y="563.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (177 samples, 0.90%)</title><rect x="281.7" y="547.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="284.7" y="558.0"></text>
</g>
<g>
<title>do_futex (176 samples, 0.89%)</title><rect x="281.8" y="531.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (174 samples, 0.88%)</title><rect x="281.9" y="515.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (166 samples, 0.84%)</title><rect x="282.4" y="499.0" width="9.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.4" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (165 samples, 0.84%)</title><rect x="282.5" y="483.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (161 samples, 0.82%)</title><rect x="282.7" y="467.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (5 samples, 0.03%)</title><rect x="292.6" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (5 samples, 0.03%)</title><rect x="292.6" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (209 samples, 1.06%)</title><rect x="292.9" y="675.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (208 samples, 1.05%)</title><rect x="292.9" y="659.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.9" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (63 samples, 0.32%)</title><rect x="293.3" y="643.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="296.3" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.06%)</title><rect x="294.9" y="627.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="297.9" y="638.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (6 samples, 0.03%)</title><rect x="295.9" y="627.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="298.9" y="638.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (5 samples, 0.03%)</title><rect x="296.7" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="299.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 0.70%)</title><rect x="297.1" y="643.0" width="8.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="300.1" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.04%)</title><rect x="297.1" y="627.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="300.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (126 samples, 0.64%)</title><rect x="297.5" y="627.0" width="7.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="300.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 0.51%)</title><rect x="299.0" y="611.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 0.51%)</title><rect x="299.0" y="595.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.0" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (86 samples, 0.44%)</title><rect x="299.9" y="579.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="302.9" y="590.0"></text>
</g>
<g>
<title>do_futex (80 samples, 0.41%)</title><rect x="300.2" y="563.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.2" y="574.0"></text>
</g>
<g>
<title>futex_wait (76 samples, 0.39%)</title><rect x="300.5" y="547.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="303.5" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (33 samples, 0.17%)</title><rect x="301.0" y="531.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.0" y="542.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.12%)</title><rect x="301.6" y="515.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.6" y="526.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.09%)</title><rect x="301.9" y="499.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.9" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (34 samples, 0.17%)</title><rect x="303.0" y="531.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="306.0" y="542.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.03%)</title><rect x="304.1" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="307.1" y="526.0"></text>
</g>
<g>
<title>get_futex_value_locked (7 samples, 0.04%)</title><rect x="304.4" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (21 samples, 0.11%)</title><rect x="305.4" y="691.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (21 samples, 0.11%)</title><rect x="305.4" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (21 samples, 0.11%)</title><rect x="305.4" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.05%)</title><rect x="306.0" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.05%)</title><rect x="306.0" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.04%)</title><rect x="306.0" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="306.1" y="595.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="309.1" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="306.2" y="579.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="309.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="306.2" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="309.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="306.2" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="309.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (354 samples, 1.80%)</title><rect x="306.6" y="691.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.6" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (354 samples, 1.80%)</title><rect x="306.6" y="675.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.6" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (354 samples, 1.80%)</title><rect x="306.6" y="659.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.6" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (354 samples, 1.80%)</title><rect x="306.6" y="643.0" width="21.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.6" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (334 samples, 1.69%)</title><rect x="307.8" y="627.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.8" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (27 samples, 0.14%)</title><rect x="308.5" y="611.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="311.5" y="622.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (6 samples, 0.03%)</title><rect x="309.5" y="595.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="312.5" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (296 samples, 1.50%)</title><rect x="310.1" y="611.0" width="17.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="313.1" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (280 samples, 1.42%)</title><rect x="311.1" y="595.0" width="16.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.1" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (280 samples, 1.42%)</title><rect x="311.1" y="579.0" width="16.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.1" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (275 samples, 1.39%)</title><rect x="311.4" y="563.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.4" y="574.0"></text>
</g>
<g>
<title>do_futex (273 samples, 1.38%)</title><rect x="311.5" y="547.0" width="16.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="314.5" y="558.0"></text>
</g>
<g>
<title>futex_wake (271 samples, 1.37%)</title><rect x="311.6" y="531.0" width="16.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.6" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.04%)</title><rect x="312.5" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="315.5" y="526.0"></text>
</g>
<g>
<title>wake_up_q (245 samples, 1.24%)</title><rect x="313.2" y="515.0" width="14.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="316.2" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (244 samples, 1.24%)</title><rect x="313.2" y="499.0" width="14.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="316.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (241 samples, 1.22%)</title><rect x="313.4" y="483.0" width="14.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.4" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (8 samples, 0.04%)</title><rect x="327.8" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.8" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.04%)</title><rect x="327.8" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.8" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$146/1420162154.run (8 samples, 0.04%)</title><rect x="327.8" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.8" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (8 samples, 0.04%)</title><rect x="327.8" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.8" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (8 samples, 0.04%)</title><rect x="327.8" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.8" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (8 samples, 0.04%)</title><rect x="327.8" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.8" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (8 samples, 0.04%)</title><rect x="327.8" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.8" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.04%)</title><rect x="327.8" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.8" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 0.04%)</title><rect x="327.8" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.8" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 0.04%)</title><rect x="327.8" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.8" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (8 samples, 0.04%)</title><rect x="327.8" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.8" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,182 samples, 66.85%)</title><rect x="328.3" y="771.0" width="788.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.3" y="782.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (8 samples, 0.04%)</title><rect x="331.2" y="755.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="334.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 0.10%)</title><rect x="331.8" y="755.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.03%)</title><rect x="333.0" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.03%)</title><rect x="333.0" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.03%)</title><rect x="333.0" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$000 (5 samples, 0.03%)</title><rect x="333.0" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (380 samples, 1.93%)</title><rect x="333.3" y="755.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.3" y="766.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="334.2" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="337.2" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="334.2" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="337.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="334.2" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="337.2" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="334.2" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="337.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (358 samples, 1.82%)</title><rect x="334.6" y="739.0" width="21.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.6" y="750.0">o..</text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.05%)</title><rect x="335.6" y="723.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="338.6" y="734.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.03%)</title><rect x="335.8" y="707.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="338.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.03%)</title><rect x="335.8" y="691.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="338.8" y="702.0"></text>
</g>
<g>
<title>epoll_wait (330 samples, 1.67%)</title><rect x="336.3" y="723.0" width="19.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="339.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (310 samples, 1.57%)</title><rect x="337.4" y="707.0" width="18.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (310 samples, 1.57%)</title><rect x="337.4" y="691.0" width="18.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="340.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (297 samples, 1.51%)</title><rect x="338.2" y="675.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.2" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (292 samples, 1.48%)</title><rect x="338.5" y="659.0" width="17.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="341.5" y="670.0"></text>
</g>
<g>
<title>__fget_light (33 samples, 0.17%)</title><rect x="338.6" y="643.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.6" y="654.0"></text>
</g>
<g>
<title>__fget (27 samples, 0.14%)</title><rect x="339.0" y="627.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.0" y="638.0"></text>
</g>
<g>
<title>ep_poll (255 samples, 1.29%)</title><rect x="340.6" y="643.0" width="15.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.6" y="654.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (212 samples, 1.08%)</title><rect x="341.2" y="627.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="344.2" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (189 samples, 0.96%)</title><rect x="342.0" y="611.0" width="11.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="345.0" y="622.0"></text>
</g>
<g>
<title>__list_del_entry_valid (11 samples, 0.06%)</title><rect x="344.3" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="347.3" y="606.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (140 samples, 0.71%)</title><rect x="344.9" y="595.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="347.9" y="606.0"></text>
</g>
<g>
<title>sock_poll (122 samples, 0.62%)</title><rect x="346.0" y="579.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.0" y="590.0"></text>
</g>
<g>
<title>tcp_poll (72 samples, 0.37%)</title><rect x="349.0" y="563.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.0" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (36 samples, 0.18%)</title><rect x="351.2" y="547.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="354.2" y="558.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.04%)</title><rect x="353.3" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.3" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (34 samples, 0.17%)</title><rect x="353.8" y="627.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="356.8" y="638.0"></text>
</g>
<g>
<title>schedule (33 samples, 0.17%)</title><rect x="353.9" y="611.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="356.9" y="622.0"></text>
</g>
<g>
<title>__schedule (26 samples, 0.13%)</title><rect x="354.3" y="595.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="357.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12,690 samples, 64.35%)</title><rect x="356.0" y="755.0" width="759.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.0" y="766.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12,681 samples, 64.31%)</title><rect x="356.5" y="739.0" width="758.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.5" y="750.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11,294 samples, 57.27%)</title><rect x="357.3" y="723.0" width="675.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.3" y="734.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.06%)</title><rect x="367.5" y="707.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="370.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,996 samples, 50.69%)</title><rect x="368.2" y="707.0" width="598.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.2" y="718.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,996 samples, 50.69%)</title><rect x="368.2" y="691.0" width="598.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.2" y="702.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (9,862 samples, 50.01%)</title><rect x="368.2" y="675.0" width="590.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.2" y="686.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (84 samples, 0.43%)</title><rect x="368.3" y="659.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.07%)</title><rect x="371.2" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.07%)</title><rect x="371.2" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.03%)</title><rect x="372.0" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="372.0" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.0" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (11 samples, 0.06%)</title><rect x="372.6" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.04%)</title><rect x="372.8" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.04%)</title><rect x="372.8" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.04%)</title><rect x="372.8" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (112 samples, 0.57%)</title><rect x="373.3" y="659.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (107 samples, 0.54%)</title><rect x="373.6" y="643.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.09%)</title><rect x="376.0" y="627.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.09%)</title><rect x="376.0" y="611.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="377.1" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="377.1" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.1" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.04%)</title><rect x="377.5" y="627.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="380.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (34 samples, 0.17%)</title><rect x="378.0" y="627.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.04%)</title><rect x="379.5" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.04%)</title><rect x="379.5" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.04%)</title><rect x="379.5" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/HttpService.entity (9,656 samples, 48.97%)</title><rect x="380.0" y="659.0" width="577.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.0" y="670.0">ru/mail/polis/service/s3ponia/HttpService.entity</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (9,642 samples, 48.90%)</title><rect x="380.8" y="643.0" width="577.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.8" y="654.0">ru/mail/polis/service/s3ponia/ReplicatedService.entity</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/544444343.linkToTargetMethod (15 samples, 0.08%)</title><rect x="392.7" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/999969171.invoke (15 samples, 0.08%)</title><rect x="392.7" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1401215963.invokeStatic (14 samples, 0.07%)</title><rect x="392.8" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (14 samples, 0.07%)</title><rect x="392.8" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (14 samples, 0.07%)</title><rect x="392.8" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (166 samples, 0.84%)</title><rect x="393.7" y="627.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (166 samples, 0.84%)</title><rect x="393.7" y="611.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (166 samples, 0.84%)</title><rect x="393.7" y="595.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (166 samples, 0.84%)</title><rect x="393.7" y="579.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (132 samples, 0.67%)</title><rect x="393.7" y="563.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.7" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (119 samples, 0.60%)</title><rect x="393.7" y="547.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (93 samples, 0.47%)</title><rect x="395.3" y="531.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (89 samples, 0.45%)</title><rect x="395.5" y="515.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$88/1090963215.apply (89 samples, 0.45%)</title><rect x="395.5" y="499.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (89 samples, 0.45%)</title><rect x="395.5" y="483.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (73 samples, 0.37%)</title><rect x="395.5" y="467.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.5" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (16 samples, 0.08%)</title><rect x="399.9" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (16 samples, 0.08%)</title><rect x="399.9" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (16 samples, 0.08%)</title><rect x="399.9" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (9 samples, 0.05%)</title><rect x="400.8" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (9 samples, 0.05%)</title><rect x="400.8" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (9 samples, 0.05%)</title><rect x="400.8" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$11/274773041.get (9 samples, 0.05%)</title><rect x="400.8" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.05%)</title><rect x="400.8" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.8" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (9 samples, 0.05%)</title><rect x="400.8" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (34 samples, 0.17%)</title><rect x="401.6" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (5 samples, 0.03%)</title><rect x="403.3" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (5 samples, 0.03%)</title><rect x="403.3" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (5 samples, 0.03%)</title><rect x="403.3" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,128 samples, 15.86%)</title><rect x="403.6" y="627.0" width="187.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.6" y="638.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="406.5" y="611.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="409.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,764 samples, 14.02%)</title><rect x="406.9" y="611.0" width="165.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.9" y="622.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (134 samples, 0.68%)</title><rect x="407.4" y="595.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.4" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="412.1" y="579.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="415.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (51 samples, 0.26%)</title><rect x="412.4" y="579.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (51 samples, 0.26%)</title><rect x="412.4" y="563.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (51 samples, 0.26%)</title><rect x="412.4" y="547.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,622 samples, 13.30%)</title><rect x="415.4" y="595.0" width="156.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.4" y="606.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session.write (2,622 samples, 13.30%)</title><rect x="415.4" y="579.0" width="156.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.4" y="590.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,598 samples, 13.18%)</title><rect x="416.9" y="563.0" width="155.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.9" y="574.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.04%)</title><rect x="417.4" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,581 samples, 13.09%)</title><rect x="417.9" y="547.0" width="154.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.9" y="558.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (49 samples, 0.25%)</title><rect x="418.8" y="531.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="421.8" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.07%)</title><rect x="420.4" y="515.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="423.4" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.04%)</title><rect x="420.8" y="499.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="423.8" y="510.0"></text>
</g>
<g>
<title>jni_GetIntField (5 samples, 0.03%)</title><rect x="421.3" y="515.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="424.3" y="526.0"></text>
</g>
<g>
<title>__libc_send (2,508 samples, 12.72%)</title><rect x="421.7" y="531.0" width="150.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="424.7" y="542.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,465 samples, 12.50%)</title><rect x="424.3" y="515.0" width="147.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.3" y="526.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (2,465 samples, 12.50%)</title><rect x="424.3" y="499.0" width="147.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.3" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (2,435 samples, 12.35%)</title><rect x="426.0" y="483.0" width="145.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.0" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (2,428 samples, 12.31%)</title><rect x="426.4" y="467.0" width="145.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.4" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="428.2" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.2" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (2,372 samples, 12.03%)</title><rect x="428.5" y="451.0" width="142.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="431.5" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (12 samples, 0.06%)</title><rect x="429.0" y="435.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.0" y="446.0"></text>
</g>
<g>
<title>inet_send_prepare (8 samples, 0.04%)</title><rect x="429.2" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.2" y="430.0"></text>
</g>
<g>
<title>security_socket_sendmsg (18 samples, 0.09%)</title><rect x="429.7" y="435.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="432.7" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.03%)</title><rect x="429.7" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.7" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (13 samples, 0.07%)</title><rect x="430.0" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="433.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,334 samples, 11.84%)</title><rect x="430.8" y="435.0" width="139.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="433.8" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (15 samples, 0.08%)</title><rect x="431.3" y="419.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.3" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2,311 samples, 11.72%)</title><rect x="432.2" y="419.0" width="138.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="435.2" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.04%)</title><rect x="436.1" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="439.1" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.04%)</title><rect x="436.1" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.1" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,985 samples, 10.07%)</title><rect x="436.5" y="403.0" width="118.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.5" y="414.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (1,982 samples, 10.05%)</title><rect x="436.7" y="387.0" width="118.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.7" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,850 samples, 9.38%)</title><rect x="439.2" y="371.0" width="110.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.2" y="382.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (1,773 samples, 8.99%)</title><rect x="441.0" y="355.0" width="106.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.0" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (16 samples, 0.08%)</title><rect x="441.6" y="339.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="444.6" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (13 samples, 0.07%)</title><rect x="441.8" y="323.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.8" y="334.0"></text>
</g>
<g>
<title>ip_local_out (31 samples, 0.16%)</title><rect x="442.5" y="339.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="445.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (29 samples, 0.15%)</title><rect x="442.6" y="323.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.6" y="334.0"></text>
</g>
<g>
<title>ip_send_check (18 samples, 0.09%)</title><rect x="442.8" y="307.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="443.9" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="446.9" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.03%)</title><rect x="444.1" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.1" y="302.0"></text>
</g>
<g>
<title>netlbl_enabled (5 samples, 0.03%)</title><rect x="444.1" y="275.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.1" y="286.0"></text>
</g>
<g>
<title>ip_output (1,717 samples, 8.71%)</title><rect x="444.4" y="339.0" width="102.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="447.4" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.03%)</title><rect x="445.2" y="323.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="448.2" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,664 samples, 8.44%)</title><rect x="445.6" y="323.0" width="99.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="448.6" y="334.0">ip_finish_ou..</text>
</g>
<g>
<title>__dev_queue_xmit (69 samples, 0.35%)</title><rect x="447.2" y="307.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="450.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (37 samples, 0.19%)</title><rect x="448.5" y="291.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="451.5" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (35 samples, 0.18%)</title><rect x="448.6" y="275.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.6" y="286.0"></text>
</g>
<g>
<title>netif_rx (18 samples, 0.09%)</title><rect x="449.1" y="259.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (18 samples, 0.09%)</title><rect x="449.1" y="243.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="452.1" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (16 samples, 0.08%)</title><rect x="449.2" y="227.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="452.2" y="238.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.04%)</title><rect x="450.7" y="291.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="453.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,568 samples, 7.95%)</title><rect x="451.3" y="307.0" width="93.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.3" y="318.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.0 (1,562 samples, 7.92%)</title><rect x="451.7" y="291.0" width="93.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="454.7" y="302.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (1,537 samples, 7.79%)</title><rect x="453.2" y="275.0" width="92.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="456.2" y="286.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (1,537 samples, 7.79%)</title><rect x="453.2" y="259.0" width="92.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.2" y="270.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (1,515 samples, 7.68%)</title><rect x="454.5" y="243.0" width="90.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="457.5" y="254.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (1,501 samples, 7.61%)</title><rect x="455.3" y="227.0" width="89.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="458.3" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,479 samples, 7.50%)</title><rect x="456.7" y="211.0" width="88.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="459.7" y="222.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (16 samples, 0.08%)</title><rect x="457.0" y="195.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="460.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (1,457 samples, 7.39%)</title><rect x="458.0" y="195.0" width="87.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="461.0" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1,432 samples, 7.26%)</title><rect x="458.3" y="179.0" width="85.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="461.3" y="190.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,419 samples, 7.20%)</title><rect x="459.1" y="163.0" width="84.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.1" y="174.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1,412 samples, 7.16%)</title><rect x="459.5" y="147.0" width="84.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.5" y="158.0">ip_protoco..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="460.8" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,386 samples, 7.03%)</title><rect x="461.1" y="131.0" width="82.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="464.1" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (41 samples, 0.21%)</title><rect x="464.0" y="115.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.0" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.03%)</title><rect x="466.1" y="99.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.1" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (36 samples, 0.18%)</title><rect x="466.5" y="115.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.5" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (34 samples, 0.17%)</title><rect x="466.6" y="99.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.6" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (27 samples, 0.14%)</title><rect x="467.0" y="83.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.0" y="94.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (12 samples, 0.06%)</title><rect x="467.9" y="67.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="470.9" y="78.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.03%)</title><rect x="468.0" y="51.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="471.0" y="62.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1,247 samples, 6.32%)</title><rect x="468.9" y="115.0" width="74.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.9" y="126.0">tcp_v4_d..</text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.04%)</title><rect x="469.2" y="99.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.2" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1,234 samples, 6.26%)</title><rect x="469.6" y="99.0" width="73.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.6" y="110.0">tcp_rcv_..</text>
</g>
<g>
<title>sk_reset_timer (18 samples, 0.09%)</title><rect x="472.2" y="83.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.2" y="94.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.08%)</title><rect x="472.3" y="67.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="475.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="472.4" y="51.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="475.4" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (830 samples, 4.21%)</title><rect x="473.2" y="83.0" width="49.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.2" y="94.0">sock_..</text>
</g>
<g>
<title>__wake_up_common_lock (805 samples, 4.08%)</title><rect x="474.7" y="67.0" width="48.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.7" y="78.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (803 samples, 4.07%)</title><rect x="474.8" y="51.0" width="48.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.8" y="62.0">_raw..</text>
</g>
<g>
<title>tcp_ack (282 samples, 1.43%)</title><rect x="522.9" y="83.0" width="16.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (98 samples, 0.50%)</title><rect x="528.5" y="67.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="531.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (30 samples, 0.15%)</title><rect x="528.5" y="51.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.5" y="62.0"></text>
</g>
<g>
<title>kfree (25 samples, 0.13%)</title><rect x="530.3" y="51.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="533.3" y="62.0"></text>
</g>
<g>
<title>skb_release_data (40 samples, 0.20%)</title><rect x="532.0" y="51.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="535.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (12 samples, 0.06%)</title><rect x="534.4" y="67.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.4" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (5 samples, 0.03%)</title><rect x="535.1" y="67.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="538.1" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (29 samples, 0.15%)</title><rect x="535.4" y="67.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="538.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.04%)</title><rect x="536.7" y="51.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="539.7" y="62.0"></text>
</g>
<g>
<title>rb_first (12 samples, 0.06%)</title><rect x="537.2" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="540.2" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (8 samples, 0.04%)</title><rect x="537.9" y="67.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="540.9" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (11 samples, 0.06%)</title><rect x="539.1" y="67.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="542.1" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (11 samples, 0.06%)</title><rect x="539.8" y="83.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="542.8" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.05%)</title><rect x="540.5" y="83.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (27 samples, 0.14%)</title><rect x="541.1" y="83.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.1" y="94.0"></text>
</g>
<g>
<title>ktime_get (15 samples, 0.08%)</title><rect x="541.8" y="67.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.8" y="78.0"></text>
</g>
<g>
<title>read_tsc (8 samples, 0.04%)</title><rect x="542.2" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="545.2" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (13 samples, 0.07%)</title><rect x="542.7" y="83.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="545.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (6 samples, 0.03%)</title><rect x="543.5" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.5" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.04%)</title><rect x="544.0" y="179.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 0.06%)</title><rect x="544.4" y="179.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="547.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (8 samples, 0.04%)</title><rect x="544.7" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="547.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.16%)</title><rect x="545.2" y="323.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="548.2" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute (29 samples, 0.15%)</title><rect x="545.3" y="307.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.3" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (27 samples, 0.14%)</title><rect x="545.4" y="291.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="548.4" y="302.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.05%)</title><rect x="545.8" y="275.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.8" y="286.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (11 samples, 0.06%)</title><rect x="546.3" y="275.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="549.3" y="286.0"></text>
</g>
<g>
<title>__skb_clone (15 samples, 0.08%)</title><rect x="547.1" y="355.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.1" y="366.0"></text>
</g>
<g>
<title>__tcp_select_window (6 samples, 0.03%)</title><rect x="548.0" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="551.0" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.03%)</title><rect x="548.4" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.4" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (7 samples, 0.04%)</title><rect x="549.3" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.3" y="366.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.03%)</title><rect x="549.9" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.9" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (71 samples, 0.36%)</title><rect x="550.2" y="371.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="553.2" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (26 samples, 0.13%)</title><rect x="552.3" y="355.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.3" y="366.0"></text>
</g>
<g>
<title>mod_timer (25 samples, 0.13%)</title><rect x="552.4" y="339.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="553.2" y="323.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.2" y="334.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (7 samples, 0.04%)</title><rect x="553.9" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.9" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (13 samples, 0.07%)</title><rect x="554.5" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="557.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.03%)</title><rect x="554.9" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.9" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (25 samples, 0.13%)</title><rect x="555.3" y="403.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="558.3" y="414.0"></text>
</g>
<g>
<title>copyin (12 samples, 0.06%)</title><rect x="555.4" y="387.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="558.4" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (11 samples, 0.06%)</title><rect x="555.4" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="558.4" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (12 samples, 0.06%)</title><rect x="556.1" y="387.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="559.1" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (29 samples, 0.15%)</title><rect x="556.8" y="403.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="559.8" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (28 samples, 0.14%)</title><rect x="556.9" y="387.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="559.9" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (100 samples, 0.51%)</title><rect x="558.6" y="403.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="561.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (84 samples, 0.43%)</title><rect x="559.5" y="387.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="562.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (22 samples, 0.11%)</title><rect x="560.8" y="371.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="563.8" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (21 samples, 0.11%)</title><rect x="560.8" y="355.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.8" y="366.0"></text>
</g>
<g>
<title>__ksize (21 samples, 0.11%)</title><rect x="562.1" y="371.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="565.1" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (20 samples, 0.10%)</title><rect x="563.3" y="371.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="566.3" y="382.0"></text>
</g>
<g>
<title>skb_entail (34 samples, 0.17%)</title><rect x="564.5" y="403.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="567.5" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (18 samples, 0.09%)</title><rect x="565.5" y="387.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="568.5" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (6 samples, 0.03%)</title><rect x="566.7" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="569.7" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (52 samples, 0.26%)</title><rect x="567.1" y="403.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.1" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (50 samples, 0.25%)</title><rect x="567.2" y="387.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.2" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (23 samples, 0.12%)</title><rect x="568.8" y="371.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.8" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.10%)</title><rect x="570.5" y="451.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.5" y="462.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.10%)</title><rect x="570.5" y="435.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.5" y="446.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.07%)</title><rect x="570.9" y="419.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (284 samples, 1.44%)</title><rect x="572.3" y="611.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (264 samples, 1.34%)</title><rect x="573.4" y="595.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (264 samples, 1.34%)</title><rect x="573.4" y="579.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.03%)</title><rect x="588.9" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.03%)</title><rect x="588.9" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="588.9" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="591.9" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (22 samples, 0.11%)</title><rect x="589.3" y="611.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="592.3" y="622.0"></text>
</g>
<g>
<title>gettimeofday (17 samples, 0.09%)</title><rect x="589.6" y="595.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="592.6" y="606.0"></text>
</g>
<g>
<title>[vdso] (16 samples, 0.08%)</title><rect x="589.7" y="579.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="592.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (92 samples, 0.47%)</title><rect x="590.8" y="627.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.8" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.06%)</title><rect x="595.5" y="611.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="598.5" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.07%)</title><rect x="596.4" y="627.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="599.4" y="638.0"></text>
</g>
<g>
<title>gettimeofday (12 samples, 0.06%)</title><rect x="596.4" y="611.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="599.4" y="622.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.05%)</title><rect x="596.6" y="595.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="599.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.entity (555 samples, 2.81%)</title><rect x="597.2" y="627.0" width="33.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.2" y="638.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.23%)</title><rect x="597.7" y="611.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.12%)</title><rect x="599.0" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.12%)</title><rect x="599.1" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$104/1056165277.accept (23 samples, 0.12%)</title><rect x="599.1" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (23 samples, 0.12%)</title><rect x="599.1" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (23 samples, 0.12%)</title><rect x="599.1" y="531.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.putAsync (430 samples, 2.18%)</title><rect x="600.4" y="611.0" width="25.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.4" y="622.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (421 samples, 2.13%)</title><rect x="600.5" y="595.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (354 samples, 1.80%)</title><rect x="604.1" y="579.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.1" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (352 samples, 1.79%)</title><rect x="604.2" y="563.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.2" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (352 samples, 1.79%)</title><rect x="604.2" y="547.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (58 samples, 0.29%)</title><rect x="607.7" y="531.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (58 samples, 0.29%)</title><rect x="607.7" y="515.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (58 samples, 0.29%)</title><rect x="607.7" y="499.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (58 samples, 0.29%)</title><rect x="607.7" y="483.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (58 samples, 0.29%)</title><rect x="607.7" y="467.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (25 samples, 0.13%)</title><rect x="611.2" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (25 samples, 0.13%)</title><rect x="611.2" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (24 samples, 0.12%)</title><rect x="611.2" y="499.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (24 samples, 0.12%)</title><rect x="611.2" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (24 samples, 0.12%)</title><rect x="611.2" y="467.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.10%)</title><rect x="611.4" y="451.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.4" y="462.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.06%)</title><rect x="611.4" y="435.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="614.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="612.1" y="435.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="615.1" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.05%)</title><rect x="612.1" y="419.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="615.1" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="612.1" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.1" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="612.1" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="615.1" y="398.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="612.3" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="615.3" y="382.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="612.3" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="615.3" y="366.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="612.3" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (210 samples, 1.06%)</title><rect x="612.7" y="531.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (210 samples, 1.06%)</title><rect x="612.7" y="515.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (210 samples, 1.06%)</title><rect x="612.7" y="499.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (210 samples, 1.06%)</title><rect x="612.7" y="483.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (194 samples, 0.98%)</title><rect x="613.7" y="467.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.7" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.20%)</title><rect x="613.9" y="451.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="616.9" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.03%)</title><rect x="614.4" y="435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="617.4" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.04%)</title><rect x="614.7" y="435.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="617.7" y="446.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (9 samples, 0.05%)</title><rect x="615.1" y="435.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="618.1" y="446.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (7 samples, 0.04%)</title><rect x="615.8" y="435.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="618.8" y="446.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (149 samples, 0.76%)</title><rect x="616.4" y="451.0" width="8.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="619.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (137 samples, 0.69%)</title><rect x="617.1" y="435.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (137 samples, 0.69%)</title><rect x="617.1" y="419.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (135 samples, 0.68%)</title><rect x="617.2" y="403.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.2" y="414.0"></text>
</g>
<g>
<title>do_futex (133 samples, 0.67%)</title><rect x="617.3" y="387.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="620.3" y="398.0"></text>
</g>
<g>
<title>futex_wake (132 samples, 0.67%)</title><rect x="617.4" y="371.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.4" y="382.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.05%)</title><rect x="618.2" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="621.2" y="366.0"></text>
</g>
<g>
<title>wake_q_add_safe (5 samples, 0.03%)</title><rect x="618.7" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="621.7" y="366.0"></text>
</g>
<g>
<title>wake_up_q (105 samples, 0.53%)</title><rect x="619.0" y="355.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.0" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (104 samples, 0.53%)</title><rect x="619.1" y="339.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (103 samples, 0.52%)</title><rect x="619.1" y="323.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="622.1" y="334.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.03%)</title><rect x="625.3" y="579.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="628.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8 samples, 0.04%)</title><rect x="625.7" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.04%)</title><rect x="625.7" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (68 samples, 0.34%)</title><rect x="626.2" y="611.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (68 samples, 0.34%)</title><rect x="626.2" y="595.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="628.6" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="628.6" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.03%)</title><rect x="628.6" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.05%)</title><rect x="629.0" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.05%)</title><rect x="629.0" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.0" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="630.0" y="579.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="633.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (96 samples, 0.49%)</title><rect x="630.4" y="627.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (92 samples, 0.47%)</title><rect x="630.6" y="611.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.05%)</title><rect x="632.6" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.05%)</title><rect x="632.6" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.05%)</title><rect x="632.6" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (41 samples, 0.21%)</title><rect x="633.2" y="595.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (41 samples, 0.21%)</title><rect x="633.2" y="579.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (57 samples, 0.29%)</title><rect x="636.1" y="627.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (36 samples, 0.18%)</title><rect x="637.1" y="611.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parseOrDefault (188 samples, 0.95%)</title><rect x="639.5" y="627.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (174 samples, 0.88%)</title><rect x="640.3" y="611.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (22 samples, 0.11%)</title><rect x="641.1" y="595.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (22 samples, 0.11%)</title><rect x="641.1" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (139 samples, 0.70%)</title><rect x="642.4" y="595.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (68 samples, 0.34%)</title><rect x="643.7" y="579.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (68 samples, 0.34%)</title><rect x="643.7" y="563.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (68 samples, 0.34%)</title><rect x="643.7" y="547.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (68 samples, 0.34%)</title><rect x="643.7" y="531.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (68 samples, 0.34%)</title><rect x="643.7" y="515.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (68 samples, 0.34%)</title><rect x="643.7" y="499.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (68 samples, 0.34%)</title><rect x="643.7" y="483.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.7" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.03%)</title><rect x="647.2" y="467.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="650.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (29 samples, 0.15%)</title><rect x="647.8" y="579.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (13 samples, 0.07%)</title><rect x="648.7" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (11 samples, 0.06%)</title><rect x="648.9" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (11 samples, 0.06%)</title><rect x="648.9" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (11 samples, 0.06%)</title><rect x="648.9" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (11 samples, 0.06%)</title><rect x="648.9" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.06%)</title><rect x="648.9" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.06%)</title><rect x="648.9" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.10%)</title><rect x="649.5" y="579.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.10%)</title><rect x="649.5" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.10%)</title><rect x="649.5" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.10%)</title><rect x="649.5" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.10%)</title><rect x="649.5" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxyReplicas (5,093 samples, 25.83%)</title><rect x="650.8" y="627.0" width="304.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.8" y="638.0">ru/mail/polis/util/Proxy.proxyReplicas</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (6 samples, 0.03%)</title><rect x="650.8" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (6 samples, 0.03%)</title><rect x="650.8" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (163 samples, 0.83%)</title><rect x="651.1" y="611.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (163 samples, 0.83%)</title><rect x="651.1" y="595.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (163 samples, 0.83%)</title><rect x="651.1" y="579.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (163 samples, 0.83%)</title><rect x="651.1" y="563.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (163 samples, 0.83%)</title><rect x="651.1" y="547.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxy (4,924 samples, 24.97%)</title><rect x="660.9" y="611.0" width="294.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.9" y="622.0">ru/mail/polis/util/Proxy.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,924 samples, 24.97%)</title><rect x="660.9" y="595.0" width="294.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.9" y="606.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,901 samples, 24.85%)</title><rect x="662.1" y="579.0" width="293.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.1" y="590.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (946 samples, 4.80%)</title><rect x="663.8" y="563.0" width="56.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.8" y="574.0">one/ni..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (96 samples, 0.49%)</title><rect x="687.8" y="547.0" width="5.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (91 samples, 0.46%)</title><rect x="688.1" y="531.0" width="5.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="691.1" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (91 samples, 0.46%)</title><rect x="688.1" y="515.0" width="5.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="691.1" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (89 samples, 0.45%)</title><rect x="688.2" y="499.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="691.2" y="510.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (8 samples, 0.04%)</title><rect x="688.4" y="483.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="691.4" y="494.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (14 samples, 0.07%)</title><rect x="688.9" y="483.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="691.9" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (7 samples, 0.04%)</title><rect x="689.0" y="467.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="692.0" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.03%)</title><rect x="689.4" y="467.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="692.4" y="478.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (63 samples, 0.32%)</title><rect x="689.7" y="483.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="692.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (439 samples, 2.23%)</title><rect x="693.6" y="547.0" width="26.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.6" y="558.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (146 samples, 0.74%)</title><rect x="695.0" y="531.0" width="8.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="698.0" y="542.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (14 samples, 0.07%)</title><rect x="696.7" y="515.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="699.7" y="526.0"></text>
</g>
<g>
<title>jni_GetIntField (15 samples, 0.08%)</title><rect x="697.5" y="515.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="700.5" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (89 samples, 0.45%)</title><rect x="698.4" y="515.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="701.4" y="526.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (25 samples, 0.13%)</title><rect x="701.5" y="499.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="704.5" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.04%)</title><rect x="703.2" y="499.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="706.2" y="510.0"></text>
</g>
<g>
<title>__libc_recv (248 samples, 1.26%)</title><rect x="703.7" y="531.0" width="14.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="706.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (235 samples, 1.19%)</title><rect x="704.5" y="515.0" width="14.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="707.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (235 samples, 1.19%)</title><rect x="704.5" y="499.0" width="14.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="707.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (222 samples, 1.13%)</title><rect x="705.2" y="483.0" width="13.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="708.2" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (218 samples, 1.11%)</title><rect x="705.5" y="467.0" width="13.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="708.5" y="478.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (180 samples, 0.91%)</title><rect x="705.9" y="451.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="708.9" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (169 samples, 0.86%)</title><rect x="706.6" y="435.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.6" y="446.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.04%)</title><rect x="708.3" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="711.3" y="430.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.03%)</title><rect x="708.3" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="711.3" y="414.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.03%)</title><rect x="708.3" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.3" y="398.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.03%)</title><rect x="708.3" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.3" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (25 samples, 0.13%)</title><rect x="708.8" y="419.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="711.8" y="430.0"></text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 0.13%)</title><rect x="708.8" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.8" y="414.0"></text>
</g>
<g>
<title>ip_output (24 samples, 0.12%)</title><rect x="708.8" y="387.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.8" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (24 samples, 0.12%)</title><rect x="708.8" y="371.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.8" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 0.11%)</title><rect x="708.9" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.9" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (22 samples, 0.11%)</title><rect x="708.9" y="339.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="711.9" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (22 samples, 0.11%)</title><rect x="708.9" y="323.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="711.9" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (22 samples, 0.11%)</title><rect x="708.9" y="307.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="711.9" y="318.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 0.11%)</title><rect x="708.9" y="291.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.9" y="302.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 0.11%)</title><rect x="708.9" y="275.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="711.9" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (21 samples, 0.11%)</title><rect x="709.0" y="259.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 0.11%)</title><rect x="709.0" y="243.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (21 samples, 0.11%)</title><rect x="709.0" y="227.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="712.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 0.10%)</title><rect x="709.1" y="211.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.1" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 0.10%)</title><rect x="709.1" y="195.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="712.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 0.10%)</title><rect x="709.1" y="179.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="712.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.07%)</title><rect x="709.5" y="163.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="712.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.06%)</title><rect x="709.5" y="147.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.5" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.04%)</title><rect x="709.7" y="131.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.7" y="142.0"></text>
</g>
<g>
<title>sk_wait_data (84 samples, 0.43%)</title><rect x="710.7" y="419.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="713.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.06%)</title><rect x="711.0" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.0" y="414.0"></text>
</g>
<g>
<title>add_wait_queue (6 samples, 0.03%)</title><rect x="711.7" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="714.7" y="414.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.03%)</title><rect x="712.1" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="715.1" y="414.0"></text>
</g>
<g>
<title>wait_woken (56 samples, 0.28%)</title><rect x="712.4" y="403.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.4" y="414.0"></text>
</g>
<g>
<title>schedule_timeout (55 samples, 0.28%)</title><rect x="712.4" y="387.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (32 samples, 0.16%)</title><rect x="712.7" y="371.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.7" y="382.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.07%)</title><rect x="714.9" y="371.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="717.9" y="382.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.04%)</title><rect x="715.2" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="718.2" y="366.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.04%)</title><rect x="715.7" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="718.7" y="430.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.04%)</title><rect x="715.8" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.8" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.03%)</title><rect x="716.4" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="719.4" y="430.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.07%)</title><rect x="716.7" y="451.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.7" y="462.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.07%)</title><rect x="716.8" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="719.8" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (11 samples, 0.06%)</title><rect x="716.9" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="719.9" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.08%)</title><rect x="717.6" y="451.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="720.6" y="462.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.08%)</title><rect x="717.6" y="435.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.6" y="446.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.06%)</title><rect x="717.9" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="720.9" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.03%)</title><rect x="718.6" y="531.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="721.6" y="542.0"></text>
</g>
<g>
<title>jni_GetIntField (9 samples, 0.05%)</title><rect x="718.9" y="531.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="721.9" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.03%)</title><rect x="720.1" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="723.1" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (6 samples, 0.03%)</title><rect x="720.1" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="723.1" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.03%)</title><rect x="720.1" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="723.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (498 samples, 2.53%)</title><rect x="720.4" y="563.0" width="29.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.4" y="574.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.07%)</title><rect x="721.3" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (13 samples, 0.07%)</title><rect x="721.3" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.coder (10 samples, 0.05%)</title><rect x="721.5" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="722.3" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.18%)</title><rect x="722.6" y="547.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.13%)</title><rect x="723.3" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="723.3" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.10%)</title><rect x="723.7" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (242 samples, 1.23%)</title><rect x="724.8" y="547.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (181 samples, 0.92%)</title><rect x="728.4" y="531.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (177 samples, 0.90%)</title><rect x="728.7" y="515.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.7" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="738.9" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="741.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (33 samples, 0.17%)</title><rect x="739.3" y="547.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (15 samples, 0.08%)</title><rect x="741.3" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (112 samples, 0.57%)</title><rect x="742.2" y="547.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (80 samples, 0.41%)</title><rect x="743.9" y="531.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (80 samples, 0.41%)</title><rect x="743.9" y="515.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (14 samples, 0.07%)</title><rect x="748.9" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.04%)</title><rect x="748.9" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.04%)</title><rect x="749.0" y="515.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="752.0" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="749.4" y="531.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="752.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.04%)</title><rect x="749.7" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (304 samples, 1.54%)</title><rect x="750.2" y="563.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.2" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.05%)</title><rect x="762.1" y="547.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="765.1" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (93 samples, 0.47%)</title><rect x="762.7" y="547.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (93 samples, 0.47%)</title><rect x="762.7" y="531.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.charAt (93 samples, 0.47%)</title><rect x="762.7" y="515.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (237 samples, 1.20%)</title><rect x="768.4" y="563.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (70 samples, 0.35%)</title><rect x="777.3" y="547.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (65 samples, 0.33%)</title><rect x="777.6" y="531.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.6" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.06%)</title><rect x="781.5" y="547.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="784.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.04%)</title><rect x="782.1" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 0.07%)</title><rect x="782.6" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (373 samples, 1.89%)</title><rect x="783.4" y="563.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.4" y="574.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (35 samples, 0.18%)</title><rect x="784.0" y="547.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="787.0" y="558.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (13 samples, 0.07%)</title><rect x="784.8" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="787.8" y="542.0"></text>
</g>
<g>
<title>jni_GetIntField (9 samples, 0.05%)</title><rect x="785.6" y="531.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="788.6" y="542.0"></text>
</g>
<g>
<title>setsockopt (324 samples, 1.64%)</title><rect x="786.3" y="547.0" width="19.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="789.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (297 samples, 1.51%)</title><rect x="787.9" y="531.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (297 samples, 1.51%)</title><rect x="787.9" y="515.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="790.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (269 samples, 1.36%)</title><rect x="789.5" y="499.0" width="16.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="792.5" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (261 samples, 1.32%)</title><rect x="790.0" y="483.0" width="15.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="793.0" y="494.0"></text>
</g>
<g>
<title>fput_many (18 samples, 0.09%)</title><rect x="790.5" y="467.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.5" y="478.0"></text>
</g>
<g>
<title>security_socket_setsockopt (47 samples, 0.24%)</title><rect x="791.6" y="467.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="794.6" y="478.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (45 samples, 0.23%)</title><rect x="791.7" y="451.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="794.7" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (25 samples, 0.13%)</title><rect x="792.9" y="435.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="795.9" y="446.0"></text>
</g>
<g>
<title>sock_setsockopt (145 samples, 0.74%)</title><rect x="794.4" y="467.0" width="8.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="797.4" y="478.0"></text>
</g>
<g>
<title>__get_user_4 (8 samples, 0.04%)</title><rect x="794.8" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="797.8" y="462.0"></text>
</g>
<g>
<title>lock_sock_nested (35 samples, 0.18%)</title><rect x="795.5" y="451.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="798.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (28 samples, 0.14%)</title><rect x="795.9" y="435.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="798.9" y="446.0"></text>
</g>
<g>
<title>release_sock (71 samples, 0.36%)</title><rect x="797.6" y="451.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="800.6" y="462.0"></text>
</g>
<g>
<title>tcp_release_cb (41 samples, 0.21%)</title><rect x="799.4" y="435.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="802.4" y="446.0"></text>
</g>
<g>
<title>sock_set_timeout (20 samples, 0.10%)</title><rect x="801.9" y="451.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="804.9" y="462.0"></text>
</g>
<g>
<title>_copy_from_user (16 samples, 0.08%)</title><rect x="802.1" y="435.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="805.1" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (14 samples, 0.07%)</title><rect x="802.2" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="805.2" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (43 samples, 0.22%)</title><rect x="803.1" y="467.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="806.1" y="478.0"></text>
</g>
<g>
<title>__fget_light (39 samples, 0.20%)</title><rect x="803.3" y="451.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="806.3" y="462.0"></text>
</g>
<g>
<title>__fget (33 samples, 0.17%)</title><rect x="803.7" y="435.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="806.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2,240 samples, 11.36%)</title><rect x="805.7" y="563.0" width="134.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.7" y="574.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (50 samples, 0.25%)</title><rect x="806.6" y="547.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="809.6" y="558.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (5 samples, 0.03%)</title><rect x="807.4" y="531.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="810.4" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.07%)</title><rect x="808.2" y="531.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="811.2" y="542.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (6 samples, 0.03%)</title><rect x="808.3" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="811.3" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.03%)</title><rect x="808.7" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="811.7" y="526.0"></text>
</g>
<g>
<title>jni_GetIntField (7 samples, 0.04%)</title><rect x="809.0" y="531.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="812.0" y="542.0"></text>
</g>
<g>
<title>__libc_send (2,164 samples, 10.97%)</title><rect x="809.6" y="547.0" width="129.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="812.6" y="558.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,134 samples, 10.82%)</title><rect x="811.3" y="531.0" width="127.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.3" y="542.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (2,134 samples, 10.82%)</title><rect x="811.3" y="515.0" width="127.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="814.3" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (2,112 samples, 10.71%)</title><rect x="812.3" y="499.0" width="126.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.3" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (2,109 samples, 10.70%)</title><rect x="812.5" y="483.0" width="126.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.5" y="494.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (7 samples, 0.04%)</title><rect x="813.1" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="816.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (2,085 samples, 10.57%)</title><rect x="813.6" y="467.0" width="124.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.6" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (6 samples, 0.03%)</title><rect x="814.3" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.3" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.05%)</title><rect x="814.7" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="817.7" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.03%)</title><rect x="814.9" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,058 samples, 10.44%)</title><rect x="815.2" y="451.0" width="123.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.2" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (6 samples, 0.03%)</title><rect x="815.6" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="818.6" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2,045 samples, 10.37%)</title><rect x="816.0" y="435.0" width="122.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.0" y="446.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (10 samples, 0.05%)</title><rect x="820.4" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="823.4" y="430.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.04%)</title><rect x="820.5" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="823.5" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,706 samples, 8.65%)</title><rect x="821.0" y="419.0" width="102.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.0" y="430.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (1,703 samples, 8.64%)</title><rect x="821.2" y="403.0" width="101.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="824.2" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,613 samples, 8.18%)</title><rect x="823.2" y="387.0" width="96.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="826.2" y="398.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (1,521 samples, 7.71%)</title><rect x="825.5" y="371.0" width="91.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.5" y="382.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (9 samples, 0.05%)</title><rect x="826.3" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.3" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.05%)</title><rect x="826.3" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.3" y="350.0"></text>
</g>
<g>
<title>ip_local_out (33 samples, 0.17%)</title><rect x="826.9" y="355.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.9" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (32 samples, 0.16%)</title><rect x="827.0" y="339.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="830.0" y="350.0"></text>
</g>
<g>
<title>ip_send_check (23 samples, 0.12%)</title><rect x="827.2" y="323.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.2" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="828.6" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="831.6" y="334.0"></text>
</g>
<g>
<title>ip_output (1,463 samples, 7.42%)</title><rect x="828.9" y="355.0" width="87.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="831.9" y="366.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.03%)</title><rect x="829.8" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,417 samples, 7.19%)</title><rect x="830.1" y="339.0" width="84.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.1" y="350.0">ip_finish_..</text>
</g>
<g>
<title>__dev_queue_xmit (67 samples, 0.34%)</title><rect x="831.7" y="323.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.7" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (34 samples, 0.17%)</title><rect x="833.0" y="307.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="836.0" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (30 samples, 0.15%)</title><rect x="833.2" y="291.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="836.2" y="302.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.03%)</title><rect x="833.6" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="836.6" y="286.0"></text>
</g>
<g>
<title>netif_rx (13 samples, 0.07%)</title><rect x="833.9" y="275.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="836.9" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.06%)</title><rect x="834.0" y="259.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="837.0" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.05%)</title><rect x="834.1" y="243.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="837.1" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.03%)</title><rect x="835.2" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="838.2" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,324 samples, 6.71%)</title><rect x="835.7" y="323.0" width="79.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="838.7" y="334.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (1,315 samples, 6.67%)</title><rect x="836.2" y="307.0" width="78.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.2" y="318.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (1,300 samples, 6.59%)</title><rect x="837.1" y="291.0" width="77.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="840.1" y="302.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (1,300 samples, 6.59%)</title><rect x="837.1" y="275.0" width="77.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="840.1" y="286.0">__softirq..</text>
</g>
<g>
<title>net_rx_action (1,268 samples, 6.43%)</title><rect x="839.0" y="259.0" width="75.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.0" y="270.0">net_rx_a..</text>
</g>
<g>
<title>__kfree_skb_flush (6 samples, 0.03%)</title><rect x="840.1" y="243.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (1,244 samples, 6.31%)</title><rect x="840.5" y="243.0" width="74.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="843.5" y="254.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,228 samples, 6.23%)</title><rect x="841.4" y="227.0" width="73.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.4" y="238.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (15 samples, 0.08%)</title><rect x="841.7" y="211.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="844.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1,209 samples, 6.13%)</title><rect x="842.6" y="211.0" width="72.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="845.6" y="222.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1,193 samples, 6.05%)</title><rect x="842.9" y="195.0" width="71.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.9" y="206.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,187 samples, 6.02%)</title><rect x="843.3" y="179.0" width="71.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.3" y="190.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1,184 samples, 6.00%)</title><rect x="843.5" y="163.0" width="70.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.5" y="174.0">ip_proto..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="844.3" y="147.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,165 samples, 5.91%)</title><rect x="844.6" y="147.0" width="69.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="847.6" y="158.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (29 samples, 0.15%)</title><rect x="847.4" y="131.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="850.4" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (28 samples, 0.14%)</title><rect x="849.1" y="131.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="852.1" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (28 samples, 0.14%)</title><rect x="849.1" y="115.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="852.1" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (22 samples, 0.11%)</title><rect x="849.5" y="99.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.5" y="110.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (9 samples, 0.05%)</title><rect x="850.3" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1,057 samples, 5.36%)</title><rect x="850.9" y="131.0" width="63.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.9" y="142.0">tcp_v4_..</text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.03%)</title><rect x="851.1" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="854.1" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1,050 samples, 5.32%)</title><rect x="851.4" y="115.0" width="62.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.4" y="126.0">tcp_rc..</text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="854.1" y="99.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="857.1" y="110.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.04%)</title><rect x="854.1" y="83.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.1" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (622 samples, 3.15%)</title><rect x="854.5" y="99.0" width="37.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="857.5" y="110.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (584 samples, 2.96%)</title><rect x="856.7" y="83.0" width="35.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="859.7" y="94.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (582 samples, 2.95%)</title><rect x="856.9" y="67.0" width="34.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="859.9" y="78.0">_r..</text>
</g>
<g>
<title>tcp_ack (297 samples, 1.51%)</title><rect x="891.8" y="99.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="894.8" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (101 samples, 0.51%)</title><rect x="897.7" y="83.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="900.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (26 samples, 0.13%)</title><rect x="897.7" y="67.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.7" y="78.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.04%)</title><rect x="899.2" y="67.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="902.2" y="78.0"></text>
</g>
<g>
<title>skb_release_data (66 samples, 0.33%)</title><rect x="899.8" y="67.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.8" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (20 samples, 0.10%)</title><rect x="903.7" y="83.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="906.7" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (8 samples, 0.04%)</title><rect x="905.1" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="908.1" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (14 samples, 0.07%)</title><rect x="905.6" y="83.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.6" y="94.0"></text>
</g>
<g>
<title>rb_first (13 samples, 0.07%)</title><rect x="906.4" y="83.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="909.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (12 samples, 0.06%)</title><rect x="907.2" y="83.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="910.2" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (17 samples, 0.09%)</title><rect x="908.5" y="83.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.5" y="94.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.03%)</title><rect x="909.5" y="99.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.5" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (25 samples, 0.13%)</title><rect x="909.9" y="99.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.9" y="110.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (13 samples, 0.07%)</title><rect x="911.4" y="99.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="914.4" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (30 samples, 0.15%)</title><rect x="912.2" y="99.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="915.2" y="110.0"></text>
</g>
<g>
<title>ktime_get (20 samples, 0.10%)</title><rect x="912.8" y="83.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="915.8" y="94.0"></text>
</g>
<g>
<title>read_tsc (12 samples, 0.06%)</title><rect x="913.3" y="67.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="916.3" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.04%)</title><rect x="914.3" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="917.3" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.13%)</title><rect x="915.0" y="339.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.0" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (21 samples, 0.11%)</title><rect x="915.0" y="323.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="918.0" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (16 samples, 0.08%)</title><rect x="915.3" y="307.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="918.3" y="318.0"></text>
</g>
<g>
<title>avc_has_perm (7 samples, 0.04%)</title><rect x="915.5" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.5" y="302.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (5 samples, 0.03%)</title><rect x="915.9" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="918.9" y="302.0"></text>
</g>
<g>
<title>__skb_clone (23 samples, 0.12%)</title><rect x="916.5" y="371.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.5" y="382.0"></text>
</g>
<g>
<title>__copy_skb_header (6 samples, 0.03%)</title><rect x="917.5" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="920.5" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (8 samples, 0.04%)</title><rect x="918.1" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="921.1" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (7 samples, 0.04%)</title><rect x="919.2" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.2" y="382.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.04%)</title><rect x="919.8" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="922.8" y="398.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="919.9" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.9" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (42 samples, 0.21%)</title><rect x="920.2" y="387.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="923.2" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.05%)</title><rect x="921.8" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.8" y="382.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.05%)</title><rect x="921.9" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.9" y="366.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (6 samples, 0.03%)</title><rect x="922.4" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="925.4" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.03%)</title><rect x="922.8" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="925.8" y="398.0"></text>
</g>
<g>
<title>_copy_from_iter_full (46 samples, 0.23%)</title><rect x="923.1" y="419.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="926.1" y="430.0"></text>
</g>
<g>
<title>copyin (21 samples, 0.11%)</title><rect x="923.2" y="403.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="926.2" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (20 samples, 0.10%)</title><rect x="923.2" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.2" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (24 samples, 0.12%)</title><rect x="924.4" y="403.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.4" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (20 samples, 0.10%)</title><rect x="925.9" y="419.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.9" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (20 samples, 0.10%)</title><rect x="925.9" y="403.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.9" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (91 samples, 0.46%)</title><rect x="927.1" y="419.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.1" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (74 samples, 0.38%)</title><rect x="928.1" y="403.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.1" y="414.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (17 samples, 0.09%)</title><rect x="929.9" y="387.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="932.9" y="398.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (17 samples, 0.09%)</title><rect x="929.9" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="932.9" y="382.0"></text>
</g>
<g>
<title>__ksize (13 samples, 0.07%)</title><rect x="930.9" y="387.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.9" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.07%)</title><rect x="931.7" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.7" y="398.0"></text>
</g>
<g>
<title>skb_entail (32 samples, 0.16%)</title><rect x="932.5" y="419.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.5" y="430.0"></text>
</g>
<g>
<title>tcp_chrono_start (17 samples, 0.09%)</title><rect x="933.4" y="403.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.4" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (12 samples, 0.06%)</title><rect x="934.5" y="419.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.5" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (46 samples, 0.23%)</title><rect x="935.3" y="419.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="938.3" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (44 samples, 0.22%)</title><rect x="935.4" y="403.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="938.4" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (24 samples, 0.12%)</title><rect x="936.6" y="387.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="939.6" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (5 samples, 0.03%)</title><rect x="938.0" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.0" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="938.4" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="941.4" y="478.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="938.4" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.4" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="938.7" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.7" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.04%)</title><rect x="939.1" y="547.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="942.1" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (122 samples, 0.62%)</title><rect x="939.7" y="563.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.7" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (36 samples, 0.18%)</title><rect x="943.6" y="547.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="946.6" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (32 samples, 0.16%)</title><rect x="943.6" y="531.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="946.6" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (25 samples, 0.13%)</title><rect x="943.9" y="515.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="946.9" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (6 samples, 0.03%)</title><rect x="945.0" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="948.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Object.wait (18 samples, 0.09%)</title><rect x="945.8" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.8" y="558.0"></text>
</g>
<g>
<title>JVM_MonitorWait (11 samples, 0.06%)</title><rect x="945.8" y="531.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="948.8" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::wait(Handle, long, Thread*) (6 samples, 0.03%)</title><rect x="946.0" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="949.0" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::wait(long, bool, Thread*) (5 samples, 0.03%)</title><rect x="946.0" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="949.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="946.5" y="531.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="949.5" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.03%)</title><rect x="946.5" y="515.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="949.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="946.5" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.5" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="946.5" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.5" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="946.5" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.5" y="478.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="946.5" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="949.5" y="462.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (137 samples, 0.69%)</title><rect x="947.0" y="563.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.0" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (34 samples, 0.17%)</title><rect x="952.1" y="547.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="955.1" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (31 samples, 0.16%)</title><rect x="952.3" y="531.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="955.3" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (26 samples, 0.13%)</title><rect x="952.4" y="515.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="955.4" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (8 samples, 0.04%)</title><rect x="953.4" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Object.notify (14 samples, 0.07%)</title><rect x="954.2" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.2" y="558.0"></text>
</g>
<g>
<title>JVM_MonitorNotify (8 samples, 0.04%)</title><rect x="954.3" y="531.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="957.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.arrayContains (36 samples, 0.18%)</title><rect x="955.5" y="627.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (8 samples, 0.04%)</title><rect x="957.2" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (9 samples, 0.05%)</title><rect x="957.8" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (132 samples, 0.67%)</title><rect x="958.4" y="675.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (132 samples, 0.67%)</title><rect x="958.4" y="659.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (42 samples, 0.21%)</title><rect x="958.4" y="643.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (90 samples, 0.46%)</title><rect x="960.9" y="643.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (90 samples, 0.46%)</title><rect x="960.9" y="627.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (90 samples, 0.46%)</title><rect x="960.9" y="611.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (506 samples, 2.57%)</title><rect x="966.4" y="707.0" width="30.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.4" y="718.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (30 samples, 0.15%)</title><rect x="967.8" y="691.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.8" y="702.0"></text>
</g>
<g>
<title>itable stub (34 samples, 0.17%)</title><rect x="969.6" y="691.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="972.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (110 samples, 0.56%)</title><rect x="971.6" y="691.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="971.6" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="974.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (105 samples, 0.53%)</title><rect x="971.9" y="675.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (105 samples, 0.53%)</title><rect x="971.9" y="659.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (105 samples, 0.53%)</title><rect x="971.9" y="643.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.06%)</title><rect x="977.5" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="980.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (257 samples, 1.30%)</title><rect x="978.2" y="691.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (255 samples, 1.29%)</title><rect x="978.3" y="675.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.3" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="993.1" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.1" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.03%)</title><rect x="993.1" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.1" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="993.1" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="993.1" y="611.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="996.1" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="993.1" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="996.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (51 samples, 0.26%)</title><rect x="993.6" y="691.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (344 samples, 1.74%)</title><rect x="996.8" y="707.0" width="20.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (68 samples, 0.34%)</title><rect x="1013.1" y="691.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (61 samples, 0.31%)</title><rect x="1013.5" y="675.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (260 samples, 1.32%)</title><rect x="1017.4" y="707.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (250 samples, 1.27%)</title><rect x="1018.0" y="691.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.0" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.06%)</title><rect x="1031.6" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1034.6" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.04%)</title><rect x="1031.7" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1034.7" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.04%)</title><rect x="1031.8" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1034.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="1031.8" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1034.8" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="1032.3" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1035.3" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="1032.3" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1035.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1032.6" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1035.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1032.6" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.03%)</title><rect x="1032.6" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.6" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1032.6" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1035.6" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1032.6" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1035.6" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1032.6" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.6" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1032.6" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1035.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.09%)</title><rect x="1033.1" y="723.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.1" y="734.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (17 samples, 0.09%)</title><rect x="1033.1" y="707.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,358 samples, 6.89%)</title><rect x="1034.1" y="723.0" width="81.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.1" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,294 samples, 6.56%)</title><rect x="1035.7" y="707.0" width="77.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.7" y="718.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (187 samples, 0.95%)</title><rect x="1036.6" y="691.0" width="11.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1039.6" y="702.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (27 samples, 0.14%)</title><rect x="1037.5" y="675.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1040.5" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.04%)</title><rect x="1039.1" y="675.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.1" y="686.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (22 samples, 0.11%)</title><rect x="1040.0" y="675.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1043.0" y="686.0"></text>
</g>
<g>
<title>jni_GetIntField (14 samples, 0.07%)</title><rect x="1042.0" y="675.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1045.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (72 samples, 0.37%)</title><rect x="1042.8" y="675.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1045.8" y="686.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (21 samples, 0.11%)</title><rect x="1043.6" y="659.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.6" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (32 samples, 0.16%)</title><rect x="1045.2" y="659.0" width="1.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1048.2" y="670.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (13 samples, 0.07%)</title><rect x="1046.3" y="643.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1049.3" y="654.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (5 samples, 0.03%)</title><rect x="1047.1" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.1" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.03%)</title><rect x="1047.4" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.4" y="686.0"></text>
</g>
<g>
<title>__libc_recv (1,063 samples, 5.39%)</title><rect x="1047.8" y="691.0" width="63.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1050.8" y="702.0">__libc_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,027 samples, 5.21%)</title><rect x="1049.9" y="675.0" width="61.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1052.9" y="686.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (1,027 samples, 5.21%)</title><rect x="1049.9" y="659.0" width="61.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1052.9" y="670.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (996 samples, 5.05%)</title><rect x="1051.8" y="643.0" width="59.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1054.8" y="654.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (990 samples, 5.02%)</title><rect x="1052.1" y="627.0" width="59.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1055.1" y="638.0">__sys_..</text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (890 samples, 4.51%)</title><rect x="1053.4" y="611.0" width="53.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1056.4" y="622.0">inet6..</text>
</g>
<g>
<title>tcp_recvmsg (880 samples, 4.46%)</title><rect x="1054.0" y="595.0" width="52.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1057.0" y="606.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (80 samples, 0.41%)</title><rect x="1062.7" y="579.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1065.7" y="590.0"></text>
</g>
<g>
<title>skb_release_all (66 samples, 0.33%)</title><rect x="1062.7" y="563.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1065.7" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (65 samples, 0.33%)</title><rect x="1062.8" y="547.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.8" y="558.0"></text>
</g>
<g>
<title>dst_release (42 samples, 0.21%)</title><rect x="1063.0" y="531.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.0" y="542.0"></text>
</g>
<g>
<title>sock_rfree (20 samples, 0.10%)</title><rect x="1065.5" y="531.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.5" y="542.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.07%)</title><rect x="1066.7" y="563.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1069.7" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (61 samples, 0.31%)</title><rect x="1067.7" y="579.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.7" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.03%)</title><rect x="1071.4" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.4" y="590.0"></text>
</g>
<g>
<title>release_sock (24 samples, 0.12%)</title><rect x="1071.7" y="579.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1074.7" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (18 samples, 0.09%)</title><rect x="1072.1" y="563.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1075.1" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (390 samples, 1.98%)</title><rect x="1073.1" y="579.0" width="23.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1076.1" y="590.0">s..</text>
</g>
<g>
<title>__skb_datagram_iter (384 samples, 1.95%)</title><rect x="1073.5" y="563.0" width="23.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1076.5" y="574.0">_..</text>
</g>
<g>
<title>_copy_to_iter (159 samples, 0.81%)</title><rect x="1080.3" y="547.0" width="9.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1083.3" y="558.0"></text>
</g>
<g>
<title>copyout (154 samples, 0.78%)</title><rect x="1080.6" y="531.0" width="9.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1083.6" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (152 samples, 0.77%)</title><rect x="1080.7" y="515.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1083.7" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (111 samples, 0.56%)</title><rect x="1089.8" y="547.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1092.8" y="558.0"></text>
</g>
<g>
<title>__check_object_size (107 samples, 0.54%)</title><rect x="1090.1" y="531.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1093.1" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (19 samples, 0.10%)</title><rect x="1094.7" y="515.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1097.7" y="526.0"></text>
</g>
<g>
<title>check_stack_object (10 samples, 0.05%)</title><rect x="1095.9" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1098.9" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (43 samples, 0.22%)</title><rect x="1096.5" y="579.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1099.5" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (127 samples, 0.64%)</title><rect x="1099.0" y="579.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.0" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (45 samples, 0.23%)</title><rect x="1103.9" y="563.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1106.9" y="574.0"></text>
</g>
<g>
<title>ktime_get (43 samples, 0.22%)</title><rect x="1104.1" y="547.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.1" y="558.0"></text>
</g>
<g>
<title>read_tsc (24 samples, 0.12%)</title><rect x="1105.2" y="531.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1108.2" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (35 samples, 0.18%)</title><rect x="1106.6" y="611.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.6" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (31 samples, 0.16%)</title><rect x="1106.9" y="595.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1109.9" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (25 samples, 0.13%)</title><rect x="1107.2" y="579.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1110.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (44 samples, 0.22%)</title><rect x="1108.7" y="611.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1111.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (43 samples, 0.22%)</title><rect x="1108.8" y="595.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1111.8" y="606.0"></text>
</g>
<g>
<title>__fget (34 samples, 0.17%)</title><rect x="1109.3" y="579.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1112.3" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.05%)</title><rect x="1111.4" y="691.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1114.4" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.03%)</title><rect x="1111.9" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1114.9" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.05%)</title><rect x="1112.4" y="691.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1115.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (38 samples, 0.19%)</title><rect x="1113.1" y="707.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.1" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (28 samples, 0.14%)</title><rect x="1115.4" y="755.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.4" y="766.0"></text>
</g>
<g>
<title>gettimeofday (22 samples, 0.11%)</title><rect x="1115.7" y="739.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1118.7" y="750.0"></text>
</g>
<g>
<title>[vdso] (19 samples, 0.10%)</title><rect x="1115.9" y="723.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1118.9" y="734.0"></text>
</g>
<g>
<title>start_thread (1,216 samples, 6.17%)</title><rect x="1117.2" y="771.0" width="72.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1120.2" y="782.0">start_th..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,216 samples, 6.17%)</title><rect x="1117.2" y="755.0" width="72.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1120.2" y="766.0">thread_n..</text>
</g>
<g>
<title>Thread::call_run() (1,216 samples, 6.17%)</title><rect x="1117.2" y="739.0" width="72.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.2" y="750.0">Thread::..</text>
</g>
<g>
<title>GangWorker::loop() (1,184 samples, 6.00%)</title><rect x="1117.2" y="723.0" width="70.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.2" y="734.0">GangWork..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (6 samples, 0.03%)</title><rect x="1117.3" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1120.3" y="718.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (6 samples, 0.03%)</title><rect x="1117.3" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.3" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1,142 samples, 5.79%)</title><rect x="1118.0" y="707.0" width="68.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1121.0" y="718.0">G1ParTa..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (90 samples, 0.46%)</title><rect x="1118.0" y="691.0" width="5.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.0" y="702.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (35 samples, 0.18%)</title><rect x="1118.2" y="675.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.2" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (19 samples, 0.10%)</title><rect x="1119.1" y="659.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.1" y="670.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (16 samples, 0.08%)</title><rect x="1120.3" y="675.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.3" y="686.0"></text>
</g>
<g>
<title>SpinPause (29 samples, 0.15%)</title><rect x="1121.5" y="675.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1124.5" y="686.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (982 samples, 4.98%)</title><rect x="1123.6" y="691.0" width="58.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1126.6" y="702.0">G1RemS..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (982 samples, 4.98%)</title><rect x="1123.6" y="675.0" width="58.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1126.6" y="686.0">G1RemS..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (981 samples, 4.97%)</title><rect x="1123.6" y="659.0" width="58.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.6" y="670.0">G1Coll..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (980 samples, 4.97%)</title><rect x="1123.6" y="643.0" width="58.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1126.6" y="654.0">DirtyC..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (959 samples, 4.86%)</title><rect x="1124.7" y="627.0" width="57.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1127.7" y="638.0">G1Refi..</text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (451 samples, 2.29%)</title><rect x="1124.9" y="611.0" width="27.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1127.9" y="622.0">G..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (71 samples, 0.36%)</title><rect x="1132.4" y="595.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1135.4" y="606.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (20 samples, 0.10%)</title><rect x="1135.5" y="579.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.5" y="590.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (89 samples, 0.45%)</title><rect x="1136.7" y="595.0" width="5.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.7" y="606.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (8 samples, 0.04%)</title><rect x="1141.5" y="579.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.5" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (161 samples, 0.82%)</title><rect x="1142.2" y="595.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1145.2" y="606.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (134 samples, 0.68%)</title><rect x="1143.9" y="579.0" width="8.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.9" y="590.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (6 samples, 0.03%)</title><rect x="1151.5" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.5" y="574.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (496 samples, 2.52%)</title><rect x="1151.9" y="611.0" width="29.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.9" y="622.0">G1..</text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (13 samples, 0.07%)</title><rect x="1165.8" y="595.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.8" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (241 samples, 1.22%)</title><rect x="1166.6" y="595.0" width="14.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.6" y="606.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (41 samples, 0.21%)</title><rect x="1178.6" y="579.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.6" y="590.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (30 samples, 0.15%)</title><rect x="1179.2" y="563.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.03%)</title><rect x="1181.1" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.1" y="606.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (6 samples, 0.03%)</title><rect x="1181.6" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.6" y="622.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (28 samples, 0.14%)</title><rect x="1182.3" y="691.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.3" y="702.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (27 samples, 0.14%)</title><rect x="1182.3" y="675.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.3" y="686.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (27 samples, 0.14%)</title><rect x="1182.3" y="659.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (25 samples, 0.13%)</title><rect x="1182.5" y="643.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.5" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (17 samples, 0.09%)</title><rect x="1182.6" y="627.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (7 samples, 0.04%)</title><rect x="1183.2" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.2" y="622.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringScanRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringScanRSClosure, OopClosure, G1ScanObjsDuringScanRSClosure&gt;(void (G1ScanObjsDuringScanRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringScanRSClosure*, unsigned int*) (6 samples, 0.03%)</title><rect x="1183.3" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.3" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (37 samples, 0.19%)</title><rect x="1184.0" y="691.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (30 samples, 0.15%)</title><rect x="1184.1" y="675.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.1" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (26 samples, 0.13%)</title><rect x="1184.4" y="659.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (26 samples, 0.13%)</title><rect x="1184.4" y="643.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.4" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (25 samples, 0.13%)</title><rect x="1184.4" y="627.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.4" y="638.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (12 samples, 0.06%)</title><rect x="1184.8" y="611.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.8" y="622.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (11 samples, 0.06%)</title><rect x="1184.9" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (7 samples, 0.04%)</title><rect x="1184.9" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="590.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (13 samples, 0.07%)</title><rect x="1186.4" y="707.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.05%)</title><rect x="1186.6" y="691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.6" y="702.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (10 samples, 0.05%)</title><rect x="1187.4" y="707.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (10 samples, 0.05%)</title><rect x="1187.4" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.4" y="702.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (6 samples, 0.03%)</title><rect x="1187.5" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="686.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 0.03%)</title><rect x="1188.1" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (27 samples, 0.14%)</title><rect x="1188.4" y="723.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="734.0"></text>
</g>
<g>
<title>VMThread::loop() (27 samples, 0.14%)</title><rect x="1188.4" y="707.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="718.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (5 samples, 0.03%)</title><rect x="1188.5" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (20 samples, 0.10%)</title><rect x="1188.8" y="691.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.8" y="702.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (20 samples, 0.10%)</title><rect x="1188.8" y="675.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.8" y="686.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (20 samples, 0.10%)</title><rect x="1188.8" y="659.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.8" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (20 samples, 0.10%)</title><rect x="1188.8" y="643.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.8" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (17 samples, 0.09%)</title><rect x="1188.8" y="627.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.8" y="638.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (15 samples, 0.08%)</title><rect x="1188.9" y="611.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="622.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (14 samples, 0.07%)</title><rect x="1189.0" y="595.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.0" y="606.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (14 samples, 0.07%)</title><rect x="1189.0" y="579.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.0" y="590.0"></text>
</g>
</g>
</svg>
