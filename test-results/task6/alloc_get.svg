<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (339 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.59%)</title><rect x="10.0" y="995.0" width="7.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.59%)</title><rect x="10.0" y="979.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (333 samples, 98.23%)</title><rect x="17.0" y="995.0" width="1159.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.0" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (10 samples, 2.95%)</title><rect x="17.0" y="979.0" width="34.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.0" y="990.0">co..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (10 samples, 2.95%)</title><rect x="17.0" y="963.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.0" y="974.0">co..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/271982333.linkToTargetMethod (10 samples, 2.95%)</title><rect x="17.0" y="947.0" width="34.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.0" y="958.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798850765.invoke (10 samples, 2.95%)</title><rect x="17.0" y="931.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.0" y="942.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 2.95%)</title><rect x="17.0" y="915.0" width="34.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="926.0">ja..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (6 samples, 1.77%)</title><rect x="17.0" y="899.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 1.77%)</title><rect x="17.0" y="883.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="894.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.77%)</title><rect x="17.0" y="867.0" width="20.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (4 samples, 1.18%)</title><rect x="37.8" y="899.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.8" y="910.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 1.18%)</title><rect x="37.8" y="883.0" width="14.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="40.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (323 samples, 95.28%)</title><rect x="51.8" y="979.0" width="1124.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.8" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (323 samples, 95.28%)</title><rect x="51.8" y="963.0" width="1124.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.8" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (323 samples, 95.28%)</title><rect x="51.8" y="947.0" width="1124.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.8" y="958.0">sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (323 samples, 95.28%)</title><rect x="51.8" y="931.0" width="1124.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.8" y="942.0">java/security/AccessController.doPrivileged</text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (323 samples, 95.28%)</title><rect x="51.8" y="915.0" width="1124.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.8" y="926.0">java/security/AccessController.executePrivileged</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$784/1712956940.run (323 samples, 95.28%)</title><rect x="51.8" y="899.0" width="1124.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.8" y="910.0">sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$784/1712956940.run</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (323 samples, 95.28%)</title><rect x="51.8" y="883.0" width="1124.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.8" y="894.0">sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (323 samples, 95.28%)</title><rect x="51.8" y="867.0" width="1124.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.8" y="878.0">sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (323 samples, 95.28%)</title><rect x="51.8" y="851.0" width="1124.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.8" y="862.0">sun/rmi/transport/tcp/TCPTransport.handleMessages</text>
</g>
<g>
<title>java.io.DataOutputStream (1 samples, 0.29%)</title><rect x="51.8" y="835.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="54.8" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (322 samples, 94.99%)</title><rect x="55.3" y="835.0" width="1120.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.3" y="846.0">sun/rmi/transport/Transport.serviceCall</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (311 samples, 91.74%)</title><rect x="55.3" y="819.0" width="1082.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.3" y="830.0">java/security/AccessController.doPrivileged</text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (311 samples, 91.74%)</title><rect x="55.3" y="803.0" width="1082.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.3" y="814.0">java/security/AccessController.executePrivileged</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (311 samples, 91.74%)</title><rect x="55.3" y="787.0" width="1082.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.3" y="798.0">sun/rmi/transport/Transport$1.run</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (311 samples, 91.74%)</title><rect x="55.3" y="771.0" width="1082.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.3" y="782.0">sun/rmi/transport/Transport$1.run</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (311 samples, 91.74%)</title><rect x="55.3" y="755.0" width="1082.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.3" y="766.0">sun/rmi/server/UnicastServerRef.dispatch</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (198 samples, 58.41%)</title><rect x="55.3" y="739.0" width="689.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.3" y="750.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (198 samples, 58.41%)</title><rect x="55.3" y="723.0" width="689.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.3" y="734.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.29%)</title><rect x="55.3" y="707.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.3" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.29%)</title><rect x="55.3" y="691.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.3" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.29%)</title><rect x="55.3" y="675.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.3" y="686.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation (1 samples, 0.29%)</title><rect x="55.3" y="659.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="58.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (194 samples, 57.23%)</title><rect x="58.7" y="707.0" width="675.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.7" y="718.0">jdk/internal/reflect/GeneratedMethodAccessor37.invoke</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (194 samples, 57.23%)</title><rect x="58.7" y="691.0" width="675.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.7" y="702.0">javax/management/remote/rmi/RMIConnectionImpl.invoke</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (182 samples, 53.69%)</title><rect x="58.7" y="675.0" width="633.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.7" y="686.0">javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (182 samples, 53.69%)</title><rect x="58.7" y="659.0" width="633.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.7" y="670.0">javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (182 samples, 53.69%)</title><rect x="58.7" y="643.0" width="633.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.7" y="654.0">javax/management/remote/rmi/RMIConnectionImpl.doOperation</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (182 samples, 53.69%)</title><rect x="58.7" y="627.0" width="633.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.7" y="638.0">com/sun/jmx/mbeanserver/JmxMBeanServer.invoke</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (182 samples, 53.69%)</title><rect x="58.7" y="611.0" width="633.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.7" y="622.0">com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (1 samples, 0.29%)</title><rect x="58.7" y="595.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.7" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (1 samples, 0.29%)</title><rect x="58.7" y="579.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.7" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (1 samples, 0.29%)</title><rect x="58.7" y="563.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.7" y="574.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (1 samples, 0.29%)</title><rect x="58.7" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.29%)</title><rect x="58.7" y="531.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.29%)</title><rect x="58.7" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.29%)</title><rect x="58.7" y="499.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="61.7" y="510.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (181 samples, 53.39%)</title><rect x="62.2" y="595.0" width="630.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.2" y="606.0">javax/management/StandardMBean.invoke</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (181 samples, 53.39%)</title><rect x="62.2" y="579.0" width="630.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.2" y="590.0">com/sun/jmx/mbeanserver/MBeanSupport.invoke</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (181 samples, 53.39%)</title><rect x="62.2" y="563.0" width="630.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.2" y="574.0">com/sun/jmx/mbeanserver/PerInterface.invoke</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (181 samples, 53.39%)</title><rect x="62.2" y="547.0" width="630.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.2" y="558.0">com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (181 samples, 53.39%)</title><rect x="62.2" y="531.0" width="630.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.2" y="542.0">com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (181 samples, 53.39%)</title><rect x="62.2" y="515.0" width="630.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.2" y="526.0">com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (181 samples, 53.39%)</title><rect x="62.2" y="499.0" width="630.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.2" y="510.0">com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (181 samples, 53.39%)</title><rect x="62.2" y="483.0" width="630.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.2" y="494.0">com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (165 samples, 48.67%)</title><rect x="62.2" y="467.0" width="574.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.2" y="478.0">com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenV..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (165 samples, 48.67%)</title><rect x="62.2" y="451.0" width="574.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.2" y="462.0">com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenVa..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (165 samples, 48.67%)</title><rect x="62.2" y="435.0" width="574.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.2" y="446.0">com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenV..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (165 samples, 48.67%)</title><rect x="62.2" y="419.0" width="574.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.2" y="430.0">com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOp..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (62 samples, 18.29%)</title><rect x="62.2" y="403.0" width="215.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.2" y="414.0">com/sun/jmx/mbeanserver/Defa..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (52 samples, 15.34%)</title><rect x="62.2" y="387.0" width="181.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.2" y="398.0">com/sun/jmx/mbeanserver..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (49 samples, 14.45%)</title><rect x="62.2" y="371.0" width="170.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.2" y="382.0">com/sun/jmx/mbeanserve..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (49 samples, 14.45%)</title><rect x="62.2" y="355.0" width="170.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.2" y="366.0">com/sun/jmx/mbeanserve..</text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 1.18%)</title><rect x="62.2" y="339.0" width="13.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="65.2" y="350.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (1 samples, 0.29%)</title><rect x="76.1" y="339.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.1" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (27 samples, 7.96%)</title><rect x="79.6" y="339.0" width="94.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.6" y="350.0">javax/manag..</text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (27 samples, 7.96%)</title><rect x="79.6" y="323.0" width="94.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.6" y="334.0">javax/manag..</text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 1.18%)</title><rect x="79.6" y="307.0" width="13.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="82.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 6.78%)</title><rect x="93.5" y="307.0" width="80.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.5" y="318.0">java/util..</text>
</g>
<g>
<title>java.util.TreeMap$Entry (23 samples, 6.78%)</title><rect x="93.5" y="291.0" width="80.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="96.5" y="302.0">java.util..</text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (17 samples, 5.01%)</title><rect x="173.6" y="339.0" width="59.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.6" y="350.0">sun/re..</text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 5.01%)</title><rect x="173.6" y="323.0" width="59.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="176.6" y="334.0">java.l..</text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (3 samples, 0.88%)</title><rect x="232.8" y="371.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.8" y="382.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (3 samples, 0.88%)</title><rect x="232.8" y="355.0" width="10.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="235.8" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (10 samples, 2.95%)</title><rect x="243.2" y="387.0" width="34.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.2" y="398.0">co..</text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="243.2" y="371.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="246.2" y="382.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.59%)</title><rect x="246.7" y="371.0" width="7.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="249.7" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 1.47%)</title><rect x="253.7" y="371.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.7" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.59%)</title><rect x="253.7" y="355.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.7" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.29%)</title><rect x="253.7" y="339.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.29%)</title><rect x="253.7" y="323.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.29%)</title><rect x="253.7" y="307.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.29%)</title><rect x="253.7" y="291.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.7" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1 samples, 0.29%)</title><rect x="253.7" y="275.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="256.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.29%)</title><rect x="257.1" y="339.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.29%)</title><rect x="257.1" y="323.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (1 samples, 0.29%)</title><rect x="257.1" y="307.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="260.1" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.88%)</title><rect x="260.6" y="355.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.88%)</title><rect x="260.6" y="339.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.88%)</title><rect x="260.6" y="323.0" width="10.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="263.6" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.59%)</title><rect x="271.1" y="371.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.59%)</title><rect x="271.1" y="355.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="274.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 1.77%)</title><rect x="278.0" y="403.0" width="20.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="281.0" y="414.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.59%)</title><rect x="298.9" y="403.0" width="7.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="301.9" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (50 samples, 14.75%)</title><rect x="305.9" y="403.0" width="174.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.9" y="414.0">javax/management/openm..</text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.88%)</title><rect x="305.9" y="387.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.59%)</title><rect x="305.9" y="371.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.59%)</title><rect x="305.9" y="355.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.59%)</title><rect x="305.9" y="339.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.59%)</title><rect x="305.9" y="323.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.59%)</title><rect x="305.9" y="307.0" width="6.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="308.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.29%)</title><rect x="312.8" y="371.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.29%)</title><rect x="312.8" y="355.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (1 samples, 0.29%)</title><rect x="312.8" y="339.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="315.8" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (47 samples, 13.86%)</title><rect x="316.3" y="387.0" width="163.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.3" y="398.0">javax/management/open..</text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.59%)</title><rect x="316.3" y="371.0" width="7.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="319.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (45 samples, 13.27%)</title><rect x="323.3" y="371.0" width="156.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.3" y="382.0">java/util/TreeMap.put</text>
</g>
<g>
<title>java.util.TreeMap$Entry (45 samples, 13.27%)</title><rect x="323.3" y="355.0" width="156.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="326.3" y="366.0">java.util.TreeMap$En..</text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (45 samples, 13.27%)</title><rect x="479.9" y="403.0" width="156.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.9" y="414.0">sun/reflect/misc/Met..</text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 12.09%)</title><rect x="479.9" y="387.0" width="142.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="482.9" y="398.0">java.lang.Object[]</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 1.18%)</title><rect x="622.6" y="387.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 1.18%)</title><rect x="622.6" y="371.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (4 samples, 1.18%)</title><rect x="622.6" y="355.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.6" y="366.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (4 samples, 1.18%)</title><rect x="622.6" y="339.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.6" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 1.18%)</title><rect x="622.6" y="323.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 1.18%)</title><rect x="622.6" y="307.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (2 samples, 0.59%)</title><rect x="622.6" y="291.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.6" y="302.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (2 samples, 0.59%)</title><rect x="622.6" y="275.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.6" y="286.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (2 samples, 0.59%)</title><rect x="622.6" y="259.0" width="7.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="625.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (1 samples, 0.29%)</title><rect x="629.6" y="291.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.6" y="302.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (1 samples, 0.29%)</title><rect x="629.6" y="275.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.6" y="286.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.29%)</title><rect x="629.6" y="259.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="632.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.29%)</title><rect x="633.1" y="291.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.1" y="302.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.29%)</title><rect x="633.1" y="275.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.29%)</title><rect x="633.1" y="259.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="636.1" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (16 samples, 4.72%)</title><rect x="636.5" y="467.0" width="55.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.5" y="478.0">sun/r..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 4.72%)</title><rect x="636.5" y="451.0" width="55.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.5" y="462.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 4.72%)</title><rect x="636.5" y="435.0" width="55.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.5" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (16 samples, 4.72%)</title><rect x="636.5" y="419.0" width="55.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.5" y="430.0">jdk/i..</text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (16 samples, 4.72%)</title><rect x="636.5" y="403.0" width="55.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.5" y="414.0">sun/r..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 4.72%)</title><rect x="636.5" y="387.0" width="55.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.5" y="398.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 4.72%)</title><rect x="636.5" y="371.0" width="55.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.5" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (16 samples, 4.72%)</title><rect x="636.5" y="355.0" width="55.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.5" y="366.0">jdk/i..</text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (16 samples, 4.72%)</title><rect x="636.5" y="339.0" width="55.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.5" y="350.0">sun/m..</text>
</g>
<g>
<title>java.lang.management.ThreadInfo[] (1 samples, 0.29%)</title><rect x="636.5" y="323.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="639.5" y="334.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (15 samples, 4.42%)</title><rect x="640.0" y="323.0" width="52.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.0" y="334.0">sun/m..</text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.29%)</title><rect x="640.0" y="307.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="643.0" y="318.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (3 samples, 0.88%)</title><rect x="643.5" y="307.0" width="10.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="646.5" y="318.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (5 samples, 1.47%)</title><rect x="654.0" y="307.0" width="17.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="657.0" y="318.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (6 samples, 1.77%)</title><rect x="671.4" y="307.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.4" y="318.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (6 samples, 1.77%)</title><rect x="671.4" y="291.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.4" y="302.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo (3 samples, 0.88%)</title><rect x="671.4" y="275.0" width="10.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="674.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.29%)</title><rect x="681.8" y="275.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.29%)</title><rect x="681.8" y="259.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.8" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="681.8" y="243.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="684.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.59%)</title><rect x="685.3" y="275.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/922872566.invoke (2 samples, 0.59%)</title><rect x="685.3" y="259.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.59%)</title><rect x="685.3" y="243.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (2 samples, 0.59%)</title><rect x="685.3" y="227.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.59%)</title><rect x="685.3" y="211.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.3" y="222.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.59%)</title><rect x="685.3" y="195.0" width="6.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="688.3" y="206.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (2 samples, 0.59%)</title><rect x="692.2" y="675.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.2" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (2 samples, 0.59%)</title><rect x="692.2" y="659.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.2" y="670.0"></text>
</g>
<g>
<title>java/security/Permissions.add (2 samples, 0.59%)</title><rect x="692.2" y="643.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.2" y="654.0"></text>
</g>
<g>
<title>java/security/PermissionsHash.add (2 samples, 0.59%)</title><rect x="692.2" y="627.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.59%)</title><rect x="692.2" y="611.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.59%)</title><rect x="692.2" y="595.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (2 samples, 0.59%)</title><rect x="692.2" y="579.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node[] (2 samples, 0.59%)</title><rect x="692.2" y="563.0" width="7.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="695.2" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (10 samples, 2.95%)</title><rect x="699.2" y="675.0" width="34.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.2" y="686.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.59%)</title><rect x="699.2" y="659.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.2" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2 samples, 0.59%)</title><rect x="699.2" y="643.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.2" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (2 samples, 0.59%)</title><rect x="699.2" y="627.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.2" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (2 samples, 0.59%)</title><rect x="699.2" y="611.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (1 samples, 0.29%)</title><rect x="699.2" y="595.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.29%)</title><rect x="699.2" y="579.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.29%)</title><rect x="699.2" y="563.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.29%)</title><rect x="699.2" y="547.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.29%)</title><rect x="699.2" y="531.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.29%)</title><rect x="699.2" y="515.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.29%)</title><rect x="699.2" y="499.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="702.2" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (1 samples, 0.29%)</title><rect x="702.7" y="595.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.29%)</title><rect x="702.7" y="579.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.29%)</title><rect x="702.7" y="563.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.7" y="574.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (1 samples, 0.29%)</title><rect x="702.7" y="547.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="705.7" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (8 samples, 2.36%)</title><rect x="706.2" y="659.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.2" y="670.0">j..</text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (8 samples, 2.36%)</title><rect x="706.2" y="643.0" width="27.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.2" y="654.0">j..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (4 samples, 1.18%)</title><rect x="706.2" y="627.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.2" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (4 samples, 1.18%)</title><rect x="706.2" y="611.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (4 samples, 1.18%)</title><rect x="706.2" y="595.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (4 samples, 1.18%)</title><rect x="706.2" y="579.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.88%)</title><rect x="706.2" y="563.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.88%)</title><rect x="706.2" y="547.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.29%)</title><rect x="706.2" y="531.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.2" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.29%)</title><rect x="706.2" y="515.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="709.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (2 samples, 0.59%)</title><rect x="709.6" y="531.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.29%)</title><rect x="709.6" y="515.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.6" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.29%)</title><rect x="709.6" y="499.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="712.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.29%)</title><rect x="713.1" y="515.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.29%)</title><rect x="713.1" y="499.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="716.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.29%)</title><rect x="716.6" y="563.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.29%)</title><rect x="716.6" y="547.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.29%)</title><rect x="716.6" y="531.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.29%)</title><rect x="716.6" y="515.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.29%)</title><rect x="716.6" y="499.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.6" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.29%)</title><rect x="716.6" y="483.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="719.6" y="494.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (4 samples, 1.18%)</title><rect x="720.1" y="627.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.1" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (4 samples, 1.18%)</title><rect x="720.1" y="611.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.1" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (4 samples, 1.18%)</title><rect x="720.1" y="595.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.1" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (4 samples, 1.18%)</title><rect x="720.1" y="579.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.1" y="590.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.59%)</title><rect x="720.1" y="563.0" width="7.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="723.1" y="574.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (2 samples, 0.59%)</title><rect x="727.1" y="563.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.1" y="574.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.59%)</title><rect x="727.1" y="547.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="730.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (2 samples, 0.59%)</title><rect x="734.0" y="707.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.0" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (2 samples, 0.59%)</title><rect x="734.0" y="691.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.0" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.59%)</title><rect x="734.0" y="675.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.0" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.59%)</title><rect x="734.0" y="659.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.0" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.59%)</title><rect x="734.0" y="643.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.0" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (2 samples, 0.59%)</title><rect x="734.0" y="627.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.0" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (2 samples, 0.59%)</title><rect x="734.0" y="611.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.0" y="622.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (2 samples, 0.59%)</title><rect x="734.0" y="595.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.0" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (2 samples, 0.59%)</title><rect x="734.0" y="579.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.0" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (2 samples, 0.59%)</title><rect x="734.0" y="563.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.0" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (2 samples, 0.59%)</title><rect x="734.0" y="547.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.0" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.59%)</title><rect x="734.0" y="531.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.0" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.59%)</title><rect x="734.0" y="515.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.0" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.59%)</title><rect x="734.0" y="499.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.0" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.59%)</title><rect x="734.0" y="483.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.0" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.59%)</title><rect x="734.0" y="467.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.0" y="478.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.59%)</title><rect x="734.0" y="451.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.0" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.59%)</title><rect x="734.0" y="435.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.59%)</title><rect x="734.0" y="419.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.59%)</title><rect x="734.0" y="403.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.0" y="414.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.59%)</title><rect x="734.0" y="387.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.59%)</title><rect x="734.0" y="371.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.59%)</title><rect x="734.0" y="355.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor44.invoke (2 samples, 0.59%)</title><rect x="734.0" y="339.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.0" y="350.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (2 samples, 0.59%)</title><rect x="734.0" y="323.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.0" y="334.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.29%)</title><rect x="734.0" y="307.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="737.0" y="318.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.29%)</title><rect x="737.5" y="307.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="740.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor43.invoke (1 samples, 0.29%)</title><rect x="741.0" y="707.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.0" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getDefaultDomain (1 samples, 0.29%)</title><rect x="741.0" y="691.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.29%)</title><rect x="741.0" y="675.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.0" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (1 samples, 0.29%)</title><rect x="741.0" y="659.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.0" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (1 samples, 0.29%)</title><rect x="741.0" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/271982333.linkToTargetMethod (1 samples, 0.29%)</title><rect x="741.0" y="627.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798850765.invoke (1 samples, 0.29%)</title><rect x="741.0" y="611.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.29%)</title><rect x="741.0" y="595.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (1 samples, 0.29%)</title><rect x="741.0" y="579.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.29%)</title><rect x="741.0" y="563.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.0" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="741.0" y="547.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="744.0" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (81 samples, 23.89%)</title><rect x="744.5" y="739.0" width="281.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.5" y="750.0">sun/rmi/server/UnicastRef.marshalValue</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (81 samples, 23.89%)</title><rect x="744.5" y="723.0" width="281.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.5" y="734.0">java/io/ObjectOutputStream.writeObject</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (81 samples, 23.89%)</title><rect x="744.5" y="707.0" width="281.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.5" y="718.0">java/io/ObjectOutputStream.writeObject0</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (81 samples, 23.89%)</title><rect x="744.5" y="691.0" width="281.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.5" y="702.0">java/io/ObjectOutputStream.writeArray</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (81 samples, 23.89%)</title><rect x="744.5" y="675.0" width="281.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.5" y="686.0">java/io/ObjectOutputStream.writeObject0</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (78 samples, 23.01%)</title><rect x="744.5" y="659.0" width="271.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.5" y="670.0">java/io/ObjectOutputStream.writeOrdi..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.88%)</title><rect x="744.5" y="643.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.88%)</title><rect x="744.5" y="627.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.5" y="638.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.29%)</title><rect x="744.5" y="611.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="747.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.59%)</title><rect x="747.9" y="611.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (75 samples, 22.12%)</title><rect x="754.9" y="643.0" width="261.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.9" y="654.0">java/io/ObjectOutputStream.writeSer..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (75 samples, 22.12%)</title><rect x="754.9" y="627.0" width="261.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.9" y="638.0">java/io/ObjectOutputStream.defaultW..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (75 samples, 22.12%)</title><rect x="754.9" y="611.0" width="261.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.9" y="622.0">java/io/ObjectOutputStream.writeObj..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (73 samples, 21.53%)</title><rect x="754.9" y="595.0" width="254.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.9" y="606.0">java/io/ObjectOutputStream.writeOr..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (14 samples, 4.13%)</title><rect x="754.9" y="579.0" width="48.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.9" y="590.0">java..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (13 samples, 3.83%)</title><rect x="754.9" y="563.0" width="45.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.9" y="574.0">java..</text>
</g>
<g>
<title>int[] (1 samples, 0.29%)</title><rect x="754.9" y="547.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="757.9" y="558.0"></text>
</g>
<g>
<title>int[] (4 samples, 1.18%)</title><rect x="758.4" y="547.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="772.3" y="547.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="775.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 2.06%)</title><rect x="775.8" y="547.0" width="24.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="778.8" y="558.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.29%)</title><rect x="800.1" y="563.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.1" y="574.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.29%)</title><rect x="800.1" y="547.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="803.1" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (59 samples, 17.40%)</title><rect x="803.6" y="579.0" width="205.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.6" y="590.0">java/io/ObjectOutputStream...</text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.59%)</title><rect x="803.6" y="563.0" width="7.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="806.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 1.77%)</title><rect x="810.6" y="563.0" width="20.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 1.77%)</title><rect x="810.6" y="547.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 1.77%)</title><rect x="810.6" y="531.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 1.77%)</title><rect x="810.6" y="515.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (6 samples, 1.77%)</title><rect x="810.6" y="499.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.6" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 1.77%)</title><rect x="810.6" y="483.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 1.77%)</title><rect x="810.6" y="467.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (6 samples, 1.77%)</title><rect x="810.6" y="451.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 1.77%)</title><rect x="810.6" y="435.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (6 samples, 1.77%)</title><rect x="810.6" y="419.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 1.77%)</title><rect x="810.6" y="403.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 1.47%)</title><rect x="810.6" y="387.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 1.47%)</title><rect x="810.6" y="371.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.6" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 1.47%)</title><rect x="810.6" y="355.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="810.6" y="339.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="813.6" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 1.18%)</title><rect x="814.1" y="339.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 1.18%)</title><rect x="814.1" y="323.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.1" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 1.18%)</title><rect x="814.1" y="307.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.29%)</title><rect x="814.1" y="291.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.1" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.29%)</title><rect x="814.1" y="275.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.29%)</title><rect x="814.1" y="259.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.29%)</title><rect x="814.1" y="243.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.29%)</title><rect x="814.1" y="227.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.1" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.29%)</title><rect x="814.1" y="211.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.29%)</title><rect x="814.1" y="195.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (1 samples, 0.29%)</title><rect x="814.1" y="179.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.29%)</title><rect x="814.1" y="163.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.1" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.29%)</title><rect x="814.1" y="147.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.29%)</title><rect x="814.1" y="131.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.1" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.29%)</title><rect x="814.1" y="115.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.1" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.29%)</title><rect x="814.1" y="99.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.1" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.29%)</title><rect x="814.1" y="83.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.1" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.29%)</title><rect x="814.1" y="67.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.1" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.29%)</title><rect x="814.1" y="51.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.1" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.29%)</title><rect x="814.1" y="35.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="817.1" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.88%)</title><rect x="817.6" y="291.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.6" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.88%)</title><rect x="817.6" y="275.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.88%)</title><rect x="817.6" y="259.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (3 samples, 0.88%)</title><rect x="817.6" y="243.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.88%)</title><rect x="817.6" y="227.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.88%)</title><rect x="817.6" y="211.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.88%)</title><rect x="817.6" y="195.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.59%)</title><rect x="817.6" y="179.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.59%)</title><rect x="817.6" y="163.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.6" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.59%)</title><rect x="817.6" y="147.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="817.6" y="131.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="820.6" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.29%)</title><rect x="821.0" y="131.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.0" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.29%)</title><rect x="821.0" y="115.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.0" y="126.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.29%)</title><rect x="821.0" y="99.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="824.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.29%)</title><rect x="824.5" y="179.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.5" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.29%)</title><rect x="824.5" y="163.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.5" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.29%)</title><rect x="824.5" y="147.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="824.5" y="131.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="827.5" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.29%)</title><rect x="828.0" y="387.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.0" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.29%)</title><rect x="828.0" y="371.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="831.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (51 samples, 15.04%)</title><rect x="831.5" y="563.0" width="177.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.5" y="574.0">java/io/ObjectStreamCla..</text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="831.5" y="547.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="834.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (50 samples, 14.75%)</title><rect x="835.0" y="547.0" width="174.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.0" y="558.0">java/lang/reflect/Meth..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (50 samples, 14.75%)</title><rect x="835.0" y="531.0" width="174.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.0" y="542.0">jdk/internal/reflect/D..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (50 samples, 14.75%)</title><rect x="835.0" y="515.0" width="174.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.0" y="526.0">jdk/internal/reflect/G..</text>
</g>
<g>
<title>java/util/TreeMap.writeObject (50 samples, 14.75%)</title><rect x="835.0" y="499.0" width="174.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.0" y="510.0">java/util/TreeMap.writ..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.29%)</title><rect x="835.0" y="483.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.29%)</title><rect x="835.0" y="467.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="835.0" y="451.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="838.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (48 samples, 14.16%)</title><rect x="838.4" y="483.0" width="167.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.4" y="494.0">java/io/ObjectOutputS..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (48 samples, 14.16%)</title><rect x="838.4" y="467.0" width="167.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.4" y="478.0">java/io/ObjectOutputS..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (14 samples, 4.13%)</title><rect x="838.4" y="451.0" width="48.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.4" y="462.0">java..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (14 samples, 4.13%)</title><rect x="838.4" y="435.0" width="48.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.4" y="446.0">java..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (14 samples, 4.13%)</title><rect x="838.4" y="419.0" width="48.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.4" y="430.0">java..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (14 samples, 4.13%)</title><rect x="838.4" y="403.0" width="48.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.4" y="414.0">java..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (14 samples, 4.13%)</title><rect x="838.4" y="387.0" width="48.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.4" y="398.0">java..</text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.88%)</title><rect x="838.4" y="371.0" width="10.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="841.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 3.24%)</title><rect x="848.9" y="371.0" width="38.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.9" y="382.0">jav..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 2.95%)</title><rect x="848.9" y="355.0" width="34.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.9" y="366.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 2.95%)</title><rect x="848.9" y="339.0" width="34.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.9" y="350.0">ja..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.29%)</title><rect x="848.9" y="323.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="851.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (9 samples, 2.65%)</title><rect x="852.4" y="323.0" width="31.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.4" y="334.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.88%)</title><rect x="852.4" y="307.0" width="10.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="855.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 1.77%)</title><rect x="862.8" y="307.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 1.77%)</title><rect x="862.8" y="291.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (6 samples, 1.77%)</title><rect x="862.8" y="275.0" width="20.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 1.77%)</title><rect x="862.8" y="259.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.8" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.29%)</title><rect x="862.8" y="243.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.29%)</title><rect x="862.8" y="227.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="862.8" y="211.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="865.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 1.18%)</title><rect x="866.3" y="243.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="869.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 1.18%)</title><rect x="866.3" y="227.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.3" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (3 samples, 0.88%)</title><rect x="866.3" y="211.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.88%)</title><rect x="866.3" y="195.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.88%)</title><rect x="866.3" y="179.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="869.3" y="190.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.29%)</title><rect x="866.3" y="163.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="869.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="869.8" y="163.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="872.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="873.2" y="163.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="876.2" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.29%)</title><rect x="876.7" y="211.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.7" y="222.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.29%)</title><rect x="876.7" y="195.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="879.7" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.29%)</title><rect x="880.2" y="243.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.29%)</title><rect x="880.2" y="227.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="883.2" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.29%)</title><rect x="883.7" y="355.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.7" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.29%)</title><rect x="883.7" y="339.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="886.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 2.95%)</title><rect x="887.2" y="451.0" width="34.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.2" y="462.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (5 samples, 1.47%)</title><rect x="887.2" y="435.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.59%)</title><rect x="887.2" y="419.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.2" y="430.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.29%)</title><rect x="887.2" y="403.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="890.2" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="890.6" y="403.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="893.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (3 samples, 0.88%)</title><rect x="894.1" y="419.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.1" y="430.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.29%)</title><rect x="894.1" y="403.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="897.1" y="414.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.59%)</title><rect x="897.6" y="403.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 1.47%)</title><rect x="904.6" y="435.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 1.47%)</title><rect x="904.6" y="419.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="904.6" y="403.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="907.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 1.18%)</title><rect x="908.1" y="403.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.59%)</title><rect x="908.1" y="387.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.59%)</title><rect x="908.1" y="371.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.1" y="382.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.29%)</title><rect x="908.1" y="355.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="911.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.29%)</title><rect x="911.5" y="355.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="911.5" y="339.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="914.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.59%)</title><rect x="915.0" y="387.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.0" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.59%)</title><rect x="915.0" y="371.0" width="7.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="918.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.59%)</title><rect x="922.0" y="451.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.59%)</title><rect x="922.0" y="435.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.59%)</title><rect x="922.0" y="419.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.0" y="430.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.59%)</title><rect x="922.0" y="403.0" width="6.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="925.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (22 samples, 6.49%)</title><rect x="928.9" y="451.0" width="76.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.9" y="462.0">java/io/..</text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (22 samples, 6.49%)</title><rect x="928.9" y="435.0" width="76.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="931.9" y="446.0">java.io...</text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.29%)</title><rect x="1005.5" y="483.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.29%)</title><rect x="1005.5" y="467.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1008.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.59%)</title><rect x="1009.0" y="595.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.0" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.59%)</title><rect x="1009.0" y="579.0" width="7.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1012.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.88%)</title><rect x="1016.0" y="659.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.0" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.88%)</title><rect x="1016.0" y="643.0" width="10.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1019.0" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (16 samples, 4.72%)</title><rect x="1026.4" y="739.0" width="55.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.4" y="750.0">sun/r..</text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$789/1225400446.readString (1 samples, 0.29%)</title><rect x="1026.4" y="723.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.29%)</title><rect x="1026.4" y="707.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.29%)</title><rect x="1026.4" y="691.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.29%)</title><rect x="1026.4" y="675.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.29%)</title><rect x="1026.4" y="659.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.29%)</title><rect x="1026.4" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.29%)</title><rect x="1026.4" y="627.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1029.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.29%)</title><rect x="1026.4" y="611.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.29%)</title><rect x="1026.4" y="595.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.29%)</title><rect x="1026.4" y="579.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.4" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="1026.4" y="563.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1029.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (15 samples, 4.42%)</title><rect x="1029.9" y="723.0" width="52.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.9" y="734.0">java/..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (15 samples, 4.42%)</title><rect x="1029.9" y="707.0" width="52.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.9" y="718.0">java/..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (15 samples, 4.42%)</title><rect x="1029.9" y="691.0" width="52.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.9" y="702.0">java/..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (15 samples, 4.42%)</title><rect x="1029.9" y="675.0" width="52.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.9" y="686.0">java/..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.88%)</title><rect x="1029.9" y="659.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1032.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.88%)</title><rect x="1029.9" y="643.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.88%)</title><rect x="1029.9" y="627.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.9" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.59%)</title><rect x="1029.9" y="611.0" width="6.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1032.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.29%)</title><rect x="1036.8" y="611.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.29%)</title><rect x="1036.8" y="595.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.29%)</title><rect x="1036.8" y="579.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.29%)</title><rect x="1036.8" y="563.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.29%)</title><rect x="1036.8" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.29%)</title><rect x="1036.8" y="531.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.29%)</title><rect x="1036.8" y="515.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.8" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="1036.8" y="499.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1039.8" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (11 samples, 3.24%)</title><rect x="1040.3" y="659.0" width="38.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.3" y="670.0">jav..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.29%)</title><rect x="1040.3" y="643.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1043.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (4 samples, 1.18%)</title><rect x="1043.8" y="643.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (4 samples, 1.18%)</title><rect x="1043.8" y="627.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.8" y="638.0"></text>
</g>
<g>
<title>java.util.HashSet (1 samples, 0.29%)</title><rect x="1043.8" y="611.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1046.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.59%)</title><rect x="1047.3" y="611.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.59%)</title><rect x="1047.3" y="595.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.59%)</title><rect x="1047.3" y="579.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.59%)</title><rect x="1047.3" y="563.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.59%)</title><rect x="1047.3" y="547.0" width="6.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1050.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.29%)</title><rect x="1054.2" y="611.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.29%)</title><rect x="1054.2" y="595.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.29%)</title><rect x="1054.2" y="579.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.29%)</title><rect x="1054.2" y="563.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.2" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.29%)</title><rect x="1054.2" y="547.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1057.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (6 samples, 1.77%)</title><rect x="1057.7" y="643.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="1057.7" y="627.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1060.7" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 1.47%)</title><rect x="1061.2" y="627.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 1.47%)</title><rect x="1061.2" y="611.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (5 samples, 1.47%)</title><rect x="1061.2" y="595.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.2" y="606.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (5 samples, 1.47%)</title><rect x="1061.2" y="579.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.2" y="590.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (5 samples, 1.47%)</title><rect x="1061.2" y="563.0" width="17.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.2" y="574.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.29%)</title><rect x="1061.2" y="547.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1064.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.29%)</title><rect x="1064.7" y="547.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1067.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (1 samples, 0.29%)</title><rect x="1068.2" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (1 samples, 0.29%)</title><rect x="1068.2" y="531.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.2" y="542.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.29%)</title><rect x="1068.2" y="515.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1071.2" y="526.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (1 samples, 0.29%)</title><rect x="1071.7" y="547.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.29%)</title><rect x="1071.7" y="531.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.29%)</title><rect x="1071.7" y="515.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.29%)</title><rect x="1071.7" y="499.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.7" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.29%)</title><rect x="1071.7" y="483.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1074.7" y="494.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.29%)</title><rect x="1075.1" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.1" y="558.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (1 samples, 0.29%)</title><rect x="1075.1" y="531.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1078.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.newInstance (1 samples, 0.29%)</title><rect x="1078.6" y="659.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.6" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="1078.6" y="643.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1081.6" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (16 samples, 4.72%)</title><rect x="1082.1" y="739.0" width="55.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.1" y="750.0">sun/r..</text>
</g>
<g>
<title>java.io.DataOutputStream (1 samples, 0.29%)</title><rect x="1082.1" y="723.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1085.1" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (15 samples, 4.42%)</title><rect x="1085.6" y="723.0" width="52.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.6" y="734.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (15 samples, 4.42%)</title><rect x="1085.6" y="707.0" width="52.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.6" y="718.0">sun/r..</text>
</g>
<g>
<title>java.rmi.server.UID (1 samples, 0.29%)</title><rect x="1085.6" y="691.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1088.6" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (14 samples, 4.13%)</title><rect x="1089.1" y="691.0" width="48.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.1" y="702.0">sun/..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (14 samples, 4.13%)</title><rect x="1089.1" y="675.0" width="48.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.1" y="686.0">sun/..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (14 samples, 4.13%)</title><rect x="1089.1" y="659.0" width="48.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.1" y="670.0">java..</text>
</g>
<g>
<title>java.io.ObjectOutputStream$ReplaceTable (2 samples, 0.59%)</title><rect x="1089.1" y="643.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1092.1" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (10 samples, 2.95%)</title><rect x="1096.0" y="643.0" width="34.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.0" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (3 samples, 0.88%)</title><rect x="1096.0" y="627.0" width="10.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1099.0" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.59%)</title><rect x="1106.5" y="627.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1109.5" y="638.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.88%)</title><rect x="1113.4" y="627.0" width="10.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1116.4" y="638.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.29%)</title><rect x="1123.9" y="627.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.9" y="638.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (1 samples, 0.29%)</title><rect x="1127.3" y="627.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.3" y="638.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="1127.3" y="611.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1130.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (2 samples, 0.59%)</title><rect x="1130.8" y="643.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.8" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (1 samples, 0.29%)</title><rect x="1130.8" y="627.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1133.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (1 samples, 0.29%)</title><rect x="1134.3" y="627.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="1134.3" y="611.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1137.3" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (11 samples, 3.24%)</title><rect x="1137.8" y="819.0" width="38.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.8" y="830.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (11 samples, 3.24%)</title><rect x="1137.8" y="803.0" width="38.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.8" y="814.0">sun..</text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.29%)</title><rect x="1137.8" y="787.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1140.8" y="798.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (10 samples, 2.95%)</title><rect x="1141.3" y="787.0" width="34.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.3" y="798.0">su..</text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (10 samples, 2.95%)</title><rect x="1141.3" y="771.0" width="34.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.3" y="782.0">ja..</text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (1 samples, 0.29%)</title><rect x="1141.3" y="755.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1144.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (7 samples, 2.06%)</title><rect x="1144.7" y="755.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.7" y="766.0">j..</text>
</g>
<g>
<title>byte[] (3 samples, 0.88%)</title><rect x="1144.7" y="739.0" width="10.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1147.7" y="750.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="1155.2" y="739.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.2" y="750.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.29%)</title><rect x="1158.7" y="739.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1161.7" y="750.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (2 samples, 0.59%)</title><rect x="1162.2" y="739.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.2" y="750.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.59%)</title><rect x="1162.2" y="723.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1165.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (2 samples, 0.59%)</title><rect x="1169.1" y="755.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.1" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="1169.1" y="739.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1172.1" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.29%)</title><rect x="1172.6" y="739.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1175.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4 samples, 1.18%)</title><rect x="1176.1" y="995.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.1" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4 samples, 1.18%)</title><rect x="1176.1" y="979.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.1" y="990.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (4 samples, 1.18%)</title><rect x="1176.1" y="963.0" width="13.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1179.1" y="974.0"></text>
</g>
</g>
</svg>
