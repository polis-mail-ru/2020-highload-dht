<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (10,306 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (25 samples, 0.24%)</title><rect x="10.2" y="963.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.2" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.86] (25 samples, 0.24%)</title><rect x="10.2" y="947.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (21 samples, 0.20%)</title><rect x="10.6" y="931.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.64] (8 samples, 0.08%)</title><rect x="10.7" y="915.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="926.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.08%)</title><rect x="11.6" y="915.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="14.6" y="926.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.06%)</title><rect x="13.1" y="963.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="16.1" y="974.0"></text>
</g>
<g>
<title>[not_walkable_Java] (11 samples, 0.11%)</title><rect x="13.8" y="963.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="16.8" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.08%)</title><rect x="14.0" y="947.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.0" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (8 samples, 0.08%)</title><rect x="14.0" y="931.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.0" y="942.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.07%)</title><rect x="14.1" y="915.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.1" y="926.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (3 samples, 0.03%)</title><rect x="14.4" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.27%)</title><rect x="15.0" y="963.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="18.0" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (18 samples, 0.17%)</title><rect x="15.4" y="947.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="18.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.16%)</title><rect x="15.5" y="931.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.5" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.16%)</title><rect x="15.5" y="915.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.5" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.16%)</title><rect x="15.6" y="899.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="18.6" y="910.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.12%)</title><rect x="15.7" y="883.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.7" y="894.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.11%)</title><rect x="15.8" y="867.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.8" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.06%)</title><rect x="15.8" y="851.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="18.8" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.05%)</title><rect x="15.8" y="835.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.8" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.05%)</title><rect x="15.8" y="819.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="18.8" y="830.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.04%)</title><rect x="16.5" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.5" y="862.0"></text>
</g>
<g>
<title>get_timespec64 (3 samples, 0.03%)</title><rect x="17.1" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="20.1" y="894.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.03%)</title><rect x="17.1" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.1" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.04%)</title><rect x="17.4" y="947.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="17.4" y="931.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="17.4" y="915.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.4" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.04%)</title><rect x="17.4" y="899.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="20.4" y="910.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.04%)</title><rect x="17.4" y="883.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="20.4" y="894.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.04%)</title><rect x="17.4" y="867.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="20.4" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.03%)</title><rect x="17.4" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="20.4" y="862.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="17.4" y="835.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="20.4" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (70 samples, 0.68%)</title><rect x="18.2" y="963.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.2" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="18.4" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.4" y="958.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.04%)</title><rect x="19.0" y="947.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.0" y="958.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="19.2" y="931.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.03%)</title><rect x="19.2" y="915.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="22.2" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (59 samples, 0.57%)</title><rect x="19.5" y="947.0" width="6.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.55%)</title><rect x="19.7" y="931.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.7" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.55%)</title><rect x="19.7" y="915.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.7" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (54 samples, 0.52%)</title><rect x="20.1" y="899.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.1" y="910.0"></text>
</g>
<g>
<title>do_futex (53 samples, 0.51%)</title><rect x="20.2" y="883.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="23.2" y="894.0"></text>
</g>
<g>
<title>futex_wake (53 samples, 0.51%)</title><rect x="20.2" y="867.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.2" y="878.0"></text>
</g>
<g>
<title>wake_up_q (41 samples, 0.40%)</title><rect x="21.6" y="851.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.6" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (41 samples, 0.40%)</title><rect x="21.6" y="835.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="24.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (41 samples, 0.40%)</title><rect x="21.6" y="819.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.6" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.03%)</title><rect x="26.3" y="963.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,945 samples, 38.28%)</title><rect x="26.7" y="963.0" width="451.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.7" y="974.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,945 samples, 38.28%)</title><rect x="26.7" y="947.0" width="451.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.7" y="958.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,945 samples, 38.28%)</title><rect x="26.7" y="931.0" width="451.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.7" y="942.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (927 samples, 8.99%)</title><rect x="27.1" y="915.0" width="106.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.1" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (853 samples, 8.28%)</title><rect x="27.9" y="899.0" width="97.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.9" y="910.0">java/util/c..</text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="29.3" y="883.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="32.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (747 samples, 7.25%)</title><rect x="29.7" y="883.0" width="85.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.7" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.06%)</title><rect x="29.8" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.05%)</title><rect x="29.9" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.05%)</title><rect x="29.9" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.05%)</title><rect x="29.9" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/562914135.apply (4 samples, 0.04%)</title><rect x="30.0" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/562914135.apply (740 samples, 7.18%)</title><rect x="30.5" y="867.0" width="84.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.5" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (740 samples, 7.18%)</title><rect x="30.5" y="851.0" width="84.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.5" y="862.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (740 samples, 7.18%)</title><rect x="30.5" y="835.0" width="84.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.5" y="846.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.03%)</title><rect x="31.4" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.03%)</title><rect x="31.4" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (574 samples, 5.57%)</title><rect x="31.8" y="819.0" width="65.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.8" y="830.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (574 samples, 5.57%)</title><rect x="31.8" y="803.0" width="65.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.8" y="814.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (568 samples, 5.51%)</title><rect x="32.3" y="787.0" width="65.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.3" y="798.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (429 samples, 4.16%)</title><rect x="32.3" y="771.0" width="49.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.3" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (429 samples, 4.16%)</title><rect x="32.3" y="755.0" width="49.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.3" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (425 samples, 4.12%)</title><rect x="32.8" y="739.0" width="48.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.8" y="750.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$359/610264858.apply (423 samples, 4.10%)</title><rect x="33.0" y="723.0" width="48.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.0" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (420 samples, 4.08%)</title><rect x="33.4" y="707.0" width="48.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.4" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (420 samples, 4.08%)</title><rect x="33.4" y="691.0" width="48.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.4" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/1223451278.apply (420 samples, 4.08%)</title><rect x="33.4" y="675.0" width="48.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.4" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (420 samples, 4.08%)</title><rect x="33.4" y="659.0" width="48.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.4" y="670.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.04%)</title><rect x="33.5" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.04%)</title><rect x="33.5" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (414 samples, 4.02%)</title><rect x="34.0" y="643.0" width="47.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.0" y="654.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (362 samples, 3.51%)</title><rect x="34.3" y="627.0" width="41.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.3" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (362 samples, 3.51%)</title><rect x="34.3" y="611.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.3" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (9 samples, 0.09%)</title><rect x="34.8" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$440/312215542.apply (348 samples, 3.38%)</title><rect x="35.9" y="595.0" width="39.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.9" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (348 samples, 3.38%)</title><rect x="35.9" y="579.0" width="39.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.9" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.14%)</title><rect x="36.8" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.11%)</title><rect x="37.1" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.11%)</title><rect x="37.1" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.11%)</title><rect x="37.1" y="515.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.08%)</title><rect x="37.5" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.08%)</title><rect x="37.5" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.08%)</title><rect x="37.5" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8 samples, 0.08%)</title><rect x="37.5" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (6 samples, 0.06%)</title><rect x="37.7" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (6 samples, 0.06%)</title><rect x="37.7" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (6 samples, 0.06%)</title><rect x="37.7" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (6 samples, 0.06%)</title><rect x="37.7" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (6 samples, 0.06%)</title><rect x="37.7" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.7" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (6 samples, 0.06%)</title><rect x="37.7" y="355.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (6 samples, 0.06%)</title><rect x="37.7" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 0.06%)</title><rect x="37.7" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 0.06%)</title><rect x="37.7" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (4 samples, 0.04%)</title><rect x="37.9" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (4 samples, 0.04%)</title><rect x="37.9" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.9" y="286.0"></text>
</g>
<g>
<title>writev (4 samples, 0.04%)</title><rect x="37.9" y="259.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="40.9" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="37.9" y="243.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="40.9" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="37.9" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="40.9" y="238.0"></text>
</g>
<g>
<title>do_writev (4 samples, 0.04%)</title><rect x="37.9" y="211.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="40.9" y="222.0"></text>
</g>
<g>
<title>vfs_writev (3 samples, 0.03%)</title><rect x="38.1" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="41.1" y="206.0"></text>
</g>
<g>
<title>do_iter_write (3 samples, 0.03%)</title><rect x="38.1" y="179.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.1" y="190.0"></text>
</g>
<g>
<title>do_iter_readv_writev (3 samples, 0.03%)</title><rect x="38.1" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="41.1" y="174.0"></text>
</g>
<g>
<title>sock_write_iter (3 samples, 0.03%)</title><rect x="38.1" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="41.1" y="158.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.03%)</title><rect x="38.1" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="41.1" y="142.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.03%)</title><rect x="38.1" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="41.1" y="126.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.03%)</title><rect x="38.1" y="99.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (64 samples, 0.62%)</title><rect x="38.4" y="563.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (64 samples, 0.62%)</title><rect x="38.4" y="547.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (21 samples, 0.20%)</title><rect x="38.4" y="531.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (21 samples, 0.20%)</title><rect x="38.4" y="515.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (21 samples, 0.20%)</title><rect x="38.4" y="499.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (19 samples, 0.18%)</title><rect x="38.5" y="483.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (19 samples, 0.18%)</title><rect x="38.5" y="467.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.5" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="38.6" y="451.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.14%)</title><rect x="39.1" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.03%)</title><rect x="40.3" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.3" y="446.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.03%)</title><rect x="40.3" y="419.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="43.3" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="40.3" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.3" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="40.3" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="43.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (43 samples, 0.42%)</title><rect x="40.8" y="531.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (38 samples, 0.37%)</title><rect x="41.4" y="515.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (31 samples, 0.30%)</title><rect x="41.6" y="499.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (31 samples, 0.30%)</title><rect x="41.6" y="483.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (31 samples, 0.30%)</title><rect x="41.6" y="467.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (24 samples, 0.23%)</title><rect x="42.4" y="451.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (19 samples, 0.18%)</title><rect x="43.0" y="435.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.0" y="446.0"></text>
</g>
<g>
<title>__libc_write (19 samples, 0.18%)</title><rect x="43.0" y="419.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="46.0" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.18%)</title><rect x="43.0" y="403.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="46.0" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.18%)</title><rect x="43.0" y="387.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="46.0" y="398.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.16%)</title><rect x="43.3" y="371.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.3" y="382.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.16%)</title><rect x="43.3" y="355.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="46.3" y="366.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.15%)</title><rect x="43.4" y="339.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.4" y="350.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.15%)</title><rect x="43.4" y="323.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="46.4" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.10%)</title><rect x="43.7" y="307.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.7" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.10%)</title><rect x="43.7" y="291.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.03%)</title><rect x="45.3" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (3 samples, 0.03%)</title><rect x="45.3" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="45.3" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="45.3" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (262 samples, 2.54%)</title><rect x="45.7" y="563.0" width="30.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.7" y="574.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.13%)</title><rect x="45.8" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.13%)</title><rect x="45.8" y="531.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (13 samples, 0.13%)</title><rect x="45.8" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.04%)</title><rect x="47.3" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.12%)</title><rect x="47.8" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.08%)</title><rect x="48.2" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (182 samples, 1.77%)</title><rect x="49.5" y="547.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.03%)</title><rect x="49.6" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (84 samples, 0.82%)</title><rect x="50.0" y="531.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (84 samples, 0.82%)</title><rect x="50.0" y="515.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (71 samples, 0.69%)</title><rect x="51.4" y="499.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.4" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (71 samples, 0.69%)</title><rect x="51.4" y="483.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (61 samples, 0.59%)</title><rect x="51.8" y="467.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (59 samples, 0.57%)</title><rect x="51.9" y="451.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (30 samples, 0.29%)</title><rect x="52.4" y="435.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (30 samples, 0.29%)</title><rect x="52.4" y="419.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (30 samples, 0.29%)</title><rect x="52.4" y="403.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$488/1090399923.test (17 samples, 0.16%)</title><rect x="53.9" y="387.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (17 samples, 0.16%)</title><rect x="53.9" y="371.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (17 samples, 0.16%)</title><rect x="53.9" y="355.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.9" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.04%)</title><rect x="53.9" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.9" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.04%)</title><rect x="53.9" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.04%)</title><rect x="53.9" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.04%)</title><rect x="53.9" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.9" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.04%)</title><rect x="53.9" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (12 samples, 0.12%)</title><rect x="54.4" y="339.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.08%)</title><rect x="54.9" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.08%)</title><rect x="54.9" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.06%)</title><rect x="55.1" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.05%)</title><rect x="55.1" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.05%)</title><rect x="55.1" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (5 samples, 0.05%)</title><rect x="55.1" y="243.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.1" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.04%)</title><rect x="55.2" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.03%)</title><rect x="55.3" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$592/2050888660.applyAsLong (3 samples, 0.03%)</title><rect x="55.3" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.03%)</title><rect x="55.3" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.3" y="190.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (3 samples, 0.03%)</title><rect x="55.3" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (15 samples, 0.15%)</title><rect x="55.8" y="435.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.8" y="446.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.07%)</title><rect x="56.1" y="419.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="59.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$488/1090399923.test (3 samples, 0.03%)</title><rect x="56.9" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.10%)</title><rect x="57.5" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.04%)</title><rect x="58.0" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.04%)</title><rect x="58.0" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.04%)</title><rect x="58.0" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (5 samples, 0.05%)</title><rect x="58.8" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (10 samples, 0.10%)</title><rect x="59.6" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (10 samples, 0.10%)</title><rect x="59.6" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.6" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (10 samples, 0.10%)</title><rect x="59.6" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.10%)</title><rect x="59.6" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.07%)</title><rect x="59.9" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.07%)</title><rect x="59.9" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="60.4" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="60.4" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.03%)</title><rect x="60.4" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (46 samples, 0.45%)</title><rect x="60.7" y="531.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.08%)</title><rect x="62.1" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.1" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.08%)</title><rect x="62.1" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.08%)</title><rect x="62.1" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.08%)</title><rect x="62.1" y="467.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.1" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="62.7" y="451.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="65.7" y="462.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1807635998.test (20 samples, 0.19%)</title><rect x="63.1" y="515.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.1" y="526.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (18 samples, 0.17%)</title><rect x="63.4" y="499.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$96/211968962.test (12 samples, 0.12%)</title><rect x="64.0" y="483.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$12 (12 samples, 0.12%)</title><rect x="64.0" y="467.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.0" y="478.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$86/1979313356.test (12 samples, 0.12%)</title><rect x="64.0" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.0" y="462.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (12 samples, 0.12%)</title><rect x="64.0" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$85/660017404.test (12 samples, 0.12%)</title><rect x="64.0" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$5 (12 samples, 0.12%)</title><rect x="64.0" y="403.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.12%)</title><rect x="64.0" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.12%)</title><rect x="64.0" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.12%)</title><rect x="64.0" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.09%)</title><rect x="64.4" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (9 samples, 0.09%)</title><rect x="64.4" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="65.5" y="515.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="68.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (38 samples, 0.37%)</title><rect x="66.0" y="531.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (38 samples, 0.37%)</title><rect x="66.0" y="515.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (38 samples, 0.37%)</title><rect x="66.0" y="499.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (36 samples, 0.35%)</title><rect x="66.1" y="483.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (28 samples, 0.27%)</title><rect x="66.3" y="467.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (27 samples, 0.26%)</title><rect x="66.4" y="451.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.06%)</title><rect x="67.0" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (6 samples, 0.06%)</title><rect x="67.0" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.06%)</title><rect x="67.0" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.06%)</title><rect x="67.7" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.08%)</title><rect x="68.6" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="69.0" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="69.0" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.03%)</title><rect x="69.0" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.04%)</title><rect x="69.5" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.04%)</title><rect x="70.3" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.04%)</title><rect x="70.3" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (3 samples, 0.03%)</title><rect x="70.3" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (10 samples, 0.10%)</title><rect x="70.8" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (10 samples, 0.10%)</title><rect x="70.8" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (10 samples, 0.10%)</title><rect x="70.8" y="515.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (33 samples, 0.32%)</title><rect x="71.9" y="547.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.18%)</title><rect x="73.5" y="531.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.07%)</title><rect x="74.3" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.07%)</title><rect x="74.3" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.07%)</title><rect x="74.3" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.05%)</title><rect x="75.1" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (49 samples, 0.48%)</title><rect x="75.8" y="627.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (49 samples, 0.48%)</title><rect x="75.8" y="611.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (25 samples, 0.24%)</title><rect x="76.3" y="595.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (25 samples, 0.24%)</title><rect x="76.3" y="579.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.19%)</title><rect x="79.2" y="595.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.19%)</title><rect x="79.2" y="579.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19 samples, 0.18%)</title><rect x="79.3" y="563.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19 samples, 0.18%)</title><rect x="79.3" y="547.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15 samples, 0.15%)</title><rect x="79.4" y="531.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (15 samples, 0.15%)</title><rect x="79.4" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (15 samples, 0.15%)</title><rect x="79.4" y="499.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (13 samples, 0.13%)</title><rect x="79.6" y="483.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.04%)</title><rect x="79.8" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.04%)</title><rect x="79.8" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (7 samples, 0.07%)</title><rect x="80.3" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (7 samples, 0.07%)</title><rect x="80.3" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.07%)</title><rect x="80.3" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.03%)</title><rect x="81.1" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.04%)</title><rect x="81.4" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.04%)</title><rect x="81.4" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.04%)</title><rect x="81.4" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (135 samples, 1.31%)</title><rect x="81.9" y="771.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.05%)</title><rect x="82.6" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.05%)</title><rect x="82.6" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/1687898948.apply (3 samples, 0.03%)</title><rect x="82.7" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.07%)</title><rect x="83.2" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.07%)</title><rect x="83.2" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.05%)</title><rect x="83.3" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.03%)</title><rect x="83.4" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (117 samples, 1.14%)</title><rect x="84.0" y="755.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (117 samples, 1.14%)</title><rect x="84.0" y="739.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (117 samples, 1.14%)</title><rect x="84.0" y="723.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="85.1" y="707.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="88.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (15 samples, 0.15%)</title><rect x="85.6" y="707.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (8 samples, 0.08%)</title><rect x="87.3" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (7 samples, 0.07%)</title><rect x="88.2" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.07%)</title><rect x="88.2" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.07%)</title><rect x="88.2" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (7 samples, 0.07%)</title><rect x="88.2" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (7 samples, 0.07%)</title><rect x="88.2" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.2" y="654.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (7 samples, 0.07%)</title><rect x="88.2" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (32 samples, 0.31%)</title><rect x="89.0" y="707.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (30 samples, 0.29%)</title><rect x="89.0" y="691.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.0" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="89.8" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="92.8" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="89.8" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="92.8" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.64] (3 samples, 0.03%)</title><rect x="89.8" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="92.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (20 samples, 0.19%)</title><rect x="90.1" y="675.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.12%)</title><rect x="90.7" y="659.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.09%)</title><rect x="90.7" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.04%)</title><rect x="91.3" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.3" y="638.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.04%)</title><rect x="91.3" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.3" y="622.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.04%)</title><rect x="91.3" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.3" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.04%)</title><rect x="91.3" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.03%)</title><rect x="91.8" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.03%)</title><rect x="91.8" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (3 samples, 0.03%)</title><rect x="92.1" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.1" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.03%)</title><rect x="92.1" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.1" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.03%)</title><rect x="92.1" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.03%)</title><rect x="92.1" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.1" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (3 samples, 0.03%)</title><rect x="92.1" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (41 samples, 0.40%)</title><rect x="92.7" y="707.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.7" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 0.40%)</title><rect x="92.7" y="691.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.7" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (41 samples, 0.40%)</title><rect x="92.7" y="675.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$204/422361949.run (41 samples, 0.40%)</title><rect x="92.7" y="659.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (41 samples, 0.40%)</title><rect x="92.7" y="643.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.7" y="654.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (41 samples, 0.40%)</title><rect x="92.7" y="627.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.7" y="638.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (23 samples, 0.22%)</title><rect x="94.4" y="611.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.4" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (23 samples, 0.22%)</title><rect x="94.4" y="595.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.4" y="606.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.21%)</title><rect x="94.5" y="579.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.5" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (13 samples, 0.13%)</title><rect x="95.5" y="563.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.05%)</title><rect x="95.6" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (7 samples, 0.07%)</title><rect x="96.2" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (4 samples, 0.04%)</title><rect x="96.6" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="96.6" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (4 samples, 0.04%)</title><rect x="96.6" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (4 samples, 0.04%)</title><rect x="96.6" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (88 samples, 0.85%)</title><rect x="97.5" y="819.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.5" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="98.0" y="803.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="101.0" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="98.2" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="101.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (30 samples, 0.29%)</title><rect x="98.6" y="803.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 0.22%)</title><rect x="99.4" y="787.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (8 samples, 0.08%)</title><rect x="101.1" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (48 samples, 0.47%)</title><rect x="102.1" y="803.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (48 samples, 0.47%)</title><rect x="102.1" y="787.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.1" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="102.6" y="771.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="105.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (38 samples, 0.37%)</title><rect x="103.2" y="771.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.2" y="782.0"></text>
</g>
<g>
<title>__libc_write (38 samples, 0.37%)</title><rect x="103.2" y="755.0" width="4.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="106.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.37%)</title><rect x="103.2" y="739.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.37%)</title><rect x="103.2" y="723.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.2" y="734.0"></text>
</g>
<g>
<title>ksys_write (34 samples, 0.33%)</title><rect x="103.7" y="707.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.7" y="718.0"></text>
</g>
<g>
<title>vfs_write (32 samples, 0.31%)</title><rect x="103.9" y="691.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.9" y="702.0"></text>
</g>
<g>
<title>new_sync_write (27 samples, 0.26%)</title><rect x="104.1" y="675.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.1" y="686.0"></text>
</g>
<g>
<title>pipe_write (27 samples, 0.26%)</title><rect x="104.1" y="659.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.1" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.20%)</title><rect x="104.2" y="643.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.20%)</title><rect x="104.2" y="627.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.2" y="638.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.03%)</title><rect x="106.6" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.6" y="654.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="107.2" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (41 samples, 0.40%)</title><rect x="107.8" y="819.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (17 samples, 0.16%)</title><rect x="108.4" y="803.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (16 samples, 0.16%)</title><rect x="108.5" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.5" y="798.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (12 samples, 0.12%)</title><rect x="108.9" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.9" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.05%)</title><rect x="109.0" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.0" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.06%)</title><rect x="109.6" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.06%)</title><rect x="109.6" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.6" y="750.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.04%)</title><rect x="109.8" y="723.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="112.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (19 samples, 0.18%)</title><rect x="110.3" y="803.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (24 samples, 0.23%)</title><rect x="112.5" y="819.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (24 samples, 0.23%)</title><rect x="112.5" y="803.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (24 samples, 0.23%)</title><rect x="112.5" y="787.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (22 samples, 0.21%)</title><rect x="112.5" y="771.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (22 samples, 0.21%)</title><rect x="112.5" y="755.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.07%)</title><rect x="114.2" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.2" y="750.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.07%)</title><rect x="114.2" y="723.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="117.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (5 samples, 0.05%)</title><rect x="114.4" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="117.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.05%)</title><rect x="114.4" y="691.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="117.4" y="702.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.05%)</title><rect x="114.4" y="675.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="117.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (84 samples, 0.82%)</title><rect x="115.2" y="883.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (83 samples, 0.81%)</title><rect x="115.3" y="867.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (83 samples, 0.81%)</title><rect x="115.3" y="851.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (82 samples, 0.80%)</title><rect x="115.5" y="835.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (82 samples, 0.80%)</title><rect x="115.5" y="819.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (81 samples, 0.79%)</title><rect x="115.6" y="803.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (3 samples, 0.03%)</title><rect x="115.6" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (76 samples, 0.74%)</title><rect x="116.0" y="787.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (74 samples, 0.72%)</title><rect x="116.3" y="771.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (74 samples, 0.72%)</title><rect x="116.3" y="755.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.17%)</title><rect x="116.4" y="739.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="119.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.05%)</title><rect x="116.9" y="723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="119.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="117.5" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="120.5" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.03%)</title><rect x="118.1" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="121.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (55 samples, 0.53%)</title><rect x="118.4" y="739.0" width="6.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="121.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.52%)</title><rect x="118.5" y="723.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 0.52%)</title><rect x="118.5" y="707.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (49 samples, 0.48%)</title><rect x="119.0" y="691.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="122.0" y="702.0"></text>
</g>
<g>
<title>do_futex (49 samples, 0.48%)</title><rect x="119.0" y="675.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="122.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (48 samples, 0.47%)</title><rect x="119.1" y="659.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="122.1" y="670.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.03%)</title><rect x="120.0" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.0" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.05%)</title><rect x="120.4" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="123.4" y="654.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.29%)</title><rect x="121.2" y="643.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.29%)</title><rect x="121.2" y="627.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.29%)</title><rect x="121.2" y="611.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="124.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$186/1093009101.get (4 samples, 0.04%)</title><rect x="125.0" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$186/1093009101.get (67 samples, 0.65%)</title><rect x="125.5" y="899.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.lambda$upsertWithTimeStampAsync$2 (67 samples, 0.65%)</title><rect x="125.5" y="883.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStamp (67 samples, 0.65%)</title><rect x="125.5" y="867.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (67 samples, 0.65%)</title><rect x="125.5" y="851.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (67 samples, 0.65%)</title><rect x="125.5" y="835.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (67 samples, 0.65%)</title><rect x="125.5" y="819.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (59 samples, 0.57%)</title><rect x="126.4" y="803.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (58 samples, 0.56%)</title><rect x="126.6" y="787.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (24 samples, 0.23%)</title><rect x="130.5" y="771.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (24 samples, 0.23%)</title><rect x="130.5" y="755.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.5" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (23 samples, 0.22%)</title><rect x="130.5" y="739.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.5" y="750.0"></text>
</g>
<g>
<title>vectorizedMismatch (9 samples, 0.09%)</title><rect x="132.1" y="723.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="135.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (34 samples, 0.33%)</title><rect x="133.3" y="915.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.33%)</title><rect x="133.3" y="899.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.33%)</title><rect x="133.3" y="883.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.33%)</title><rect x="133.3" y="867.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.3" y="878.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="135.1" y="851.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="138.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$478/365064831.run (5 samples, 0.05%)</title><rect x="135.9" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.06%)</title><rect x="136.5" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (844 samples, 8.19%)</title><rect x="137.2" y="915.0" width="96.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.2" y="926.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (813 samples, 7.89%)</title><rect x="140.8" y="899.0" width="93.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.8" y="910.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (5 samples, 0.05%)</title><rect x="144.1" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.05%)</title><rect x="144.1" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.05%)</title><rect x="144.1" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.05%)</title><rect x="144.1" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.05%)</title><rect x="144.1" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (411 samples, 3.99%)</title><rect x="144.6" y="883.0" width="47.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.6" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.05%)</title><rect x="144.8" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.05%)</title><rect x="144.8" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.05%)</title><rect x="144.8" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (269 samples, 2.61%)</title><rect x="145.3" y="867.0" width="30.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.3" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (269 samples, 2.61%)</title><rect x="145.3" y="851.0" width="30.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.3" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (258 samples, 2.50%)</title><rect x="146.4" y="835.0" width="29.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.4" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (255 samples, 2.47%)</title><rect x="146.7" y="819.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.7" y="830.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (255 samples, 2.47%)</title><rect x="146.7" y="803.0" width="29.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.7" y="814.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.15%)</title><rect x="147.4" y="787.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="150.4" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.03%)</title><rect x="148.1" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="151.1" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="148.4" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="151.4" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (234 samples, 2.27%)</title><rect x="149.1" y="787.0" width="26.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="152.1" y="798.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (224 samples, 2.17%)</title><rect x="150.3" y="771.0" width="25.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="153.3" y="782.0">e..</text>
</g>
<g>
<title>do_syscall_64 (224 samples, 2.17%)</title><rect x="150.3" y="755.0" width="25.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="153.3" y="766.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (219 samples, 2.12%)</title><rect x="150.8" y="739.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="153.8" y="750.0">_..</text>
</g>
<g>
<title>do_futex (217 samples, 2.11%)</title><rect x="151.1" y="723.0" width="24.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.1" y="734.0">d..</text>
</g>
<g>
<title>futex_wake (216 samples, 2.10%)</title><rect x="151.2" y="707.0" width="24.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.2" y="718.0">f..</text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.09%)</title><rect x="152.7" y="691.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="155.7" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.03%)</title><rect x="153.3" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="156.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (192 samples, 1.86%)</title><rect x="153.9" y="691.0" width="22.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="156.9" y="702.0">w..</text>
</g>
<g>
<title>try_to_wake_up (187 samples, 1.81%)</title><rect x="154.5" y="675.0" width="21.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="157.5" y="686.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (180 samples, 1.75%)</title><rect x="155.3" y="659.0" width="20.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (133 samples, 1.29%)</title><rect x="176.4" y="867.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (130 samples, 1.26%)</title><rect x="176.7" y="851.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.7" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (38 samples, 0.37%)</title><rect x="176.8" y="835.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="179.8" y="846.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (8 samples, 0.08%)</title><rect x="178.0" y="819.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="181.0" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.06%)</title><rect x="178.9" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="181.9" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.04%)</title><rect x="179.8" y="819.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="182.8" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.04%)</title><rect x="180.3" y="819.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="183.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.88%)</title><rect x="181.2" y="835.0" width="10.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="184.2" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.05%)</title><rect x="181.4" y="819.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="184.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (79 samples, 0.77%)</title><rect x="182.0" y="819.0" width="9.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="185.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 0.70%)</title><rect x="182.8" y="803.0" width="8.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="185.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.70%)</title><rect x="182.8" y="787.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (62 samples, 0.60%)</title><rect x="183.9" y="771.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="186.9" y="782.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.56%)</title><rect x="184.4" y="755.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.4" y="766.0"></text>
</g>
<g>
<title>futex_wait (55 samples, 0.53%)</title><rect x="184.7" y="739.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.7" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (23 samples, 0.22%)</title><rect x="185.3" y="723.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.3" y="734.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.16%)</title><rect x="186.0" y="707.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="189.0" y="718.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.13%)</title><rect x="186.4" y="691.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (27 samples, 0.26%)</title><rect x="187.9" y="723.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="190.9" y="734.0"></text>
</g>
<g>
<title>get_futex_value_locked (8 samples, 0.08%)</title><rect x="190.0" y="707.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="193.0" y="718.0"></text>
</g>
<g>
<title>_pthread_cleanup_push (3 samples, 0.03%)</title><rect x="191.2" y="819.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="194.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (16 samples, 0.16%)</title><rect x="191.7" y="883.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (16 samples, 0.16%)</title><rect x="191.7" y="867.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (16 samples, 0.16%)</title><rect x="191.7" y="851.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.13%)</title><rect x="192.0" y="835.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.13%)</title><rect x="192.0" y="819.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.13%)</title><rect x="192.0" y="803.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.12%)</title><rect x="192.2" y="787.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="195.2" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.11%)</title><rect x="192.3" y="771.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="195.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.10%)</title><rect x="192.4" y="755.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.10%)</title><rect x="192.4" y="739.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="195.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.08%)</title><rect x="192.6" y="723.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="195.6" y="734.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.08%)</title><rect x="192.6" y="707.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.6" y="718.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.08%)</title><rect x="192.6" y="691.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.6" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.05%)</title><rect x="193.0" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.0" y="686.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.03%)</title><rect x="193.2" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (352 samples, 3.42%)</title><rect x="193.5" y="883.0" width="40.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.5" y="894.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (352 samples, 3.42%)</title><rect x="193.5" y="867.0" width="40.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.5" y="878.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (352 samples, 3.42%)</title><rect x="193.5" y="851.0" width="40.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.5" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (342 samples, 3.32%)</title><rect x="194.7" y="835.0" width="39.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.7" y="846.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (342 samples, 3.32%)</title><rect x="194.7" y="819.0" width="39.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.7" y="830.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.16%)</title><rect x="195.0" y="803.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="198.0" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.05%)</title><rect x="195.8" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="198.8" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (4 samples, 0.04%)</title><rect x="196.4" y="787.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="199.4" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (323 samples, 3.13%)</title><rect x="196.9" y="803.0" width="36.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="199.9" y="814.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (305 samples, 2.96%)</title><rect x="198.9" y="787.0" width="34.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.9" y="798.0">en..</text>
</g>
<g>
<title>do_syscall_64 (305 samples, 2.96%)</title><rect x="198.9" y="771.0" width="34.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.9" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (302 samples, 2.93%)</title><rect x="199.3" y="755.0" width="34.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="202.3" y="766.0">__..</text>
</g>
<g>
<title>do_futex (298 samples, 2.89%)</title><rect x="199.7" y="739.0" width="34.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="202.7" y="750.0">do..</text>
</g>
<g>
<title>futex_wake (296 samples, 2.87%)</title><rect x="199.9" y="723.0" width="33.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="202.9" y="734.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (21 samples, 0.20%)</title><rect x="201.9" y="707.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="204.9" y="718.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.04%)</title><rect x="203.8" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="206.8" y="702.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.04%)</title><rect x="204.3" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="207.3" y="718.0"></text>
</g>
<g>
<title>wake_up_q (254 samples, 2.46%)</title><rect x="204.8" y="707.0" width="29.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.8" y="718.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (252 samples, 2.45%)</title><rect x="205.0" y="691.0" width="28.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="208.0" y="702.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (250 samples, 2.43%)</title><rect x="205.2" y="675.0" width="28.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.2" y="686.0">_r..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$478/365064831.run (1,054 samples, 10.23%)</title><rect x="233.8" y="915.0" width="120.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.8" y="926.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,054 samples, 10.23%)</title><rect x="233.8" y="899.0" width="120.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.8" y="910.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,049 samples, 10.18%)</title><rect x="234.4" y="883.0" width="120.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.4" y="894.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,027 samples, 9.97%)</title><rect x="236.6" y="867.0" width="117.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.6" y="878.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,027 samples, 9.97%)</title><rect x="236.6" y="851.0" width="117.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="862.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,023 samples, 9.93%)</title><rect x="237.0" y="835.0" width="117.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.0" y="846.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,021 samples, 9.91%)</title><rect x="237.3" y="819.0" width="116.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.3" y="830.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,020 samples, 9.90%)</title><rect x="237.4" y="803.0" width="116.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.4" y="814.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,020 samples, 9.90%)</title><rect x="237.4" y="787.0" width="116.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.4" y="798.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,018 samples, 9.88%)</title><rect x="237.6" y="771.0" width="116.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.6" y="782.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (5 samples, 0.05%)</title><rect x="237.6" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.03%)</title><rect x="237.8" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,013 samples, 9.83%)</title><rect x="238.2" y="755.0" width="116.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.2" y="766.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (146 samples, 1.42%)</title><rect x="238.2" y="739.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (125 samples, 1.21%)</title><rect x="238.4" y="723.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (110 samples, 1.07%)</title><rect x="240.1" y="707.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (109 samples, 1.06%)</title><rect x="240.3" y="691.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (106 samples, 1.03%)</title><rect x="240.6" y="675.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (17 samples, 0.16%)</title><rect x="241.3" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.06%)</title><rect x="241.6" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.06%)</title><rect x="241.6" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (6 samples, 0.06%)</title><rect x="241.6" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.06%)</title><rect x="241.6" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$541/1668148770.apply (3 samples, 0.03%)</title><rect x="242.0" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$541/1668148770.apply (8 samples, 0.08%)</title><rect x="242.3" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (8 samples, 0.08%)</title><rect x="242.3" y="627.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (7 samples, 0.07%)</title><rect x="242.4" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (7 samples, 0.07%)</title><rect x="242.4" y="595.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (7 samples, 0.07%)</title><rect x="242.4" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7 samples, 0.07%)</title><rect x="242.4" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (80 samples, 0.78%)</title><rect x="243.2" y="659.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (80 samples, 0.78%)</title><rect x="243.2" y="643.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.05%)</title><rect x="243.2" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.03%)</title><rect x="243.3" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$448/2074408408.apply (75 samples, 0.73%)</title><rect x="243.8" y="627.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.03%)</title><rect x="243.8" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (72 samples, 0.70%)</title><rect x="244.1" y="611.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (72 samples, 0.70%)</title><rect x="244.1" y="595.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/1227490920.apply (63 samples, 0.61%)</title><rect x="244.1" y="579.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (63 samples, 0.61%)</title><rect x="244.1" y="563.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (58 samples, 0.56%)</title><rect x="244.7" y="547.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (27 samples, 0.26%)</title><rect x="244.7" y="531.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (27 samples, 0.26%)</title><rect x="244.7" y="515.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (23 samples, 0.22%)</title><rect x="245.2" y="499.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$510/383058574.accept (5 samples, 0.05%)</title><rect x="245.2" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (5 samples, 0.05%)</title><rect x="245.2" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (5 samples, 0.05%)</title><rect x="245.2" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.05%)</title><rect x="245.2" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.05%)</title><rect x="245.2" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.05%)</title><rect x="245.2" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$531/53782460.accept (17 samples, 0.16%)</title><rect x="245.7" y="483.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (17 samples, 0.16%)</title><rect x="245.7" y="467.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (17 samples, 0.16%)</title><rect x="245.7" y="451.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (17 samples, 0.16%)</title><rect x="245.7" y="435.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (17 samples, 0.16%)</title><rect x="245.7" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.16%)</title><rect x="245.7" y="403.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.15%)</title><rect x="246.0" y="387.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.14%)</title><rect x="246.1" y="371.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.14%)</title><rect x="246.1" y="355.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (11 samples, 0.11%)</title><rect x="246.3" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (4 samples, 0.04%)</title><rect x="246.3" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.04%)</title><rect x="246.3" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.04%)</title><rect x="246.3" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.04%)</title><rect x="246.3" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.06%)</title><rect x="246.8" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.06%)</title><rect x="246.8" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.04%)</title><rect x="247.0" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.04%)</title><rect x="247.0" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.03%)</title><rect x="247.0" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.03%)</title><rect x="247.0" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.03%)</title><rect x="247.0" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.03%)</title><rect x="247.0" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (3 samples, 0.03%)</title><rect x="247.0" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (31 samples, 0.30%)</title><rect x="247.8" y="531.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (30 samples, 0.29%)</title><rect x="247.9" y="515.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (13 samples, 0.13%)</title><rect x="247.9" y="499.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (12 samples, 0.12%)</title><rect x="248.0" y="483.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (5 samples, 0.05%)</title><rect x="248.2" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (5 samples, 0.05%)</title><rect x="248.2" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (5 samples, 0.05%)</title><rect x="248.2" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (6 samples, 0.06%)</title><rect x="248.7" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.&lt;init&gt; (4 samples, 0.04%)</title><rect x="248.7" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (4 samples, 0.04%)</title><rect x="248.7" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (17 samples, 0.16%)</title><rect x="249.4" y="499.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.05%)</title><rect x="249.4" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="249.4" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="249.4" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="249.4" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.12%)</title><rect x="250.0" y="483.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.12%)</title><rect x="250.0" y="467.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.12%)</title><rect x="250.0" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.12%)</title><rect x="250.0" y="435.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/1223451278.apply (9 samples, 0.09%)</title><rect x="251.4" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9 samples, 0.09%)</title><rect x="251.4" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9 samples, 0.09%)</title><rect x="251.4" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.04%)</title><rect x="251.4" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.04%)</title><rect x="251.4" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5 samples, 0.05%)</title><rect x="251.8" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.05%)</title><rect x="251.8" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.05%)</title><rect x="251.8" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.05%)</title><rect x="251.8" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (9 samples, 0.09%)</title><rect x="252.7" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.03%)</title><rect x="253.3" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.10%)</title><rect x="253.8" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$563/1375560915.run (9 samples, 0.09%)</title><rect x="253.9" y="707.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.07%)</title><rect x="254.1" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.07%)</title><rect x="254.1" y="675.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (7 samples, 0.07%)</title><rect x="254.1" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.07%)</title><rect x="254.1" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (17 samples, 0.16%)</title><rect x="254.9" y="739.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (17 samples, 0.16%)</title><rect x="254.9" y="723.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (17 samples, 0.16%)</title><rect x="254.9" y="707.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (850 samples, 8.25%)</title><rect x="256.9" y="739.0" width="97.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.9" y="750.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (850 samples, 8.25%)</title><rect x="256.9" y="723.0" width="97.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.9" y="734.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (850 samples, 8.25%)</title><rect x="256.9" y="707.0" width="97.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.9" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (840 samples, 8.15%)</title><rect x="258.0" y="691.0" width="96.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.0" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$552/1337437053.run (17 samples, 0.16%)</title><rect x="258.8" y="675.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (17 samples, 0.16%)</title><rect x="258.8" y="659.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (17 samples, 0.16%)</title><rect x="258.8" y="643.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (5 samples, 0.05%)</title><rect x="259.9" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.05%)</title><rect x="259.9" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (816 samples, 7.92%)</title><rect x="260.7" y="675.0" width="93.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.7" y="686.0">jdk/interna..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (815 samples, 7.91%)</title><rect x="260.7" y="659.0" width="93.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.7" y="670.0">java/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (815 samples, 7.91%)</title><rect x="260.7" y="643.0" width="93.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.7" y="654.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.09%)</title><rect x="260.7" y="627.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.09%)</title><rect x="260.7" y="611.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.09%)</title><rect x="260.7" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.09%)</title><rect x="260.7" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (806 samples, 7.82%)</title><rect x="261.8" y="627.0" width="92.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.8" y="638.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (800 samples, 7.76%)</title><rect x="262.5" y="611.0" width="91.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.5" y="622.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (28 samples, 0.27%)</title><rect x="262.5" y="595.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.5" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (28 samples, 0.27%)</title><rect x="262.5" y="579.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.5" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (28 samples, 0.27%)</title><rect x="262.5" y="563.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (772 samples, 7.49%)</title><rect x="265.7" y="595.0" width="88.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.7" y="606.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (758 samples, 7.35%)</title><rect x="267.3" y="579.0" width="86.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.3" y="590.0">sun/nio/ch..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (3 samples, 0.03%)</title><rect x="268.3" y="563.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="271.3" y="574.0"></text>
</g>
<g>
<title>writev (743 samples, 7.21%)</title><rect x="269.0" y="563.0" width="85.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="272.0" y="574.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (735 samples, 7.13%)</title><rect x="269.9" y="547.0" width="84.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.9" y="558.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (735 samples, 7.13%)</title><rect x="269.9" y="531.0" width="84.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.9" y="542.0">do_syscall..</text>
</g>
<g>
<title>do_writev (726 samples, 7.04%)</title><rect x="270.8" y="515.0" width="83.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="273.8" y="526.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.07%)</title><rect x="272.0" y="499.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.0" y="510.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.07%)</title><rect x="272.0" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.0" y="494.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.07%)</title><rect x="272.0" y="467.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.0" y="478.0"></text>
</g>
<g>
<title>vfs_writev (707 samples, 6.86%)</title><rect x="273.0" y="499.0" width="80.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.0" y="510.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (692 samples, 6.71%)</title><rect x="273.8" y="483.0" width="79.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="276.8" y="494.0">do_iter_w..</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.04%)</title><rect x="273.9" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.9" y="478.0"></text>
</g>
<g>
<title>do_iter_readv_writev (668 samples, 6.48%)</title><rect x="274.4" y="467.0" width="76.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.4" y="478.0">do_iter_..</text>
</g>
<g>
<title>sock_write_iter (660 samples, 6.40%)</title><rect x="275.3" y="451.0" width="75.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.3" y="462.0">sock_wri..</text>
</g>
<g>
<title>sock_sendmsg (657 samples, 6.37%)</title><rect x="275.6" y="435.0" width="75.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.6" y="446.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (9 samples, 0.09%)</title><rect x="276.7" y="419.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="279.7" y="430.0"></text>
</g>
<g>
<title>security_socket_sendmsg (14 samples, 0.14%)</title><rect x="277.7" y="419.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="280.7" y="430.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (4 samples, 0.04%)</title><rect x="278.0" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="281.0" y="414.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.07%)</title><rect x="278.5" y="403.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (625 samples, 6.06%)</title><rect x="279.3" y="419.0" width="71.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.3" y="430.0">tcp_send..</text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.05%)</title><rect x="279.6" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="282.6" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="279.9" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="282.9" y="398.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.09%)</title><rect x="280.2" y="403.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="283.2" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (608 samples, 5.90%)</title><rect x="281.2" y="403.0" width="69.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="284.2" y="414.0">tcp_sen..</text>
</g>
<g>
<title>__tcp_push_pending_frames (517 samples, 5.02%)</title><rect x="282.5" y="387.0" width="59.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.5" y="398.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (516 samples, 5.01%)</title><rect x="282.6" y="371.0" width="59.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.6" y="382.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (466 samples, 4.52%)</title><rect x="284.2" y="355.0" width="53.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.2" y="366.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (419 samples, 4.07%)</title><rect x="286.5" y="339.0" width="48.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.5" y="350.0">__ip..</text>
</g>
<g>
<title>ip_local_out (17 samples, 0.16%)</title><rect x="287.0" y="323.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.0" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.16%)</title><rect x="287.1" y="307.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.1" y="318.0"></text>
</g>
<g>
<title>ip_send_check (8 samples, 0.08%)</title><rect x="287.3" y="291.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.3" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.06%)</title><rect x="288.2" y="291.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="291.2" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.05%)</title><rect x="288.3" y="275.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.3" y="286.0"></text>
</g>
<g>
<title>ip_output (398 samples, 3.86%)</title><rect x="288.9" y="323.0" width="45.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.9" y="334.0">ip_o..</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.04%)</title><rect x="289.5" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.5" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (375 samples, 3.64%)</title><rect x="289.9" y="307.0" width="43.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="292.9" y="318.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (28 samples, 0.27%)</title><rect x="291.1" y="291.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.1" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.11%)</title><rect x="292.0" y="275.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.0" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.10%)</title><rect x="292.1" y="259.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.1" y="270.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.07%)</title><rect x="292.3" y="243.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.3" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.07%)</title><rect x="292.3" y="227.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.3" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.05%)</title><rect x="292.6" y="211.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="295.6" y="222.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (3 samples, 0.03%)</title><rect x="293.3" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.3" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.05%)</title><rect x="293.6" y="275.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="296.6" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (337 samples, 3.27%)</title><rect x="294.3" y="291.0" width="38.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="297.3" y="302.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (336 samples, 3.26%)</title><rect x="294.4" y="275.0" width="38.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="297.4" y="286.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (325 samples, 3.15%)</title><rect x="295.7" y="259.0" width="37.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="298.7" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (325 samples, 3.15%)</title><rect x="295.7" y="243.0" width="37.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.7" y="254.0">__s..</text>
</g>
<g>
<title>net_rx_action (306 samples, 2.97%)</title><rect x="297.8" y="227.0" width="35.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.8" y="238.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.04%)</title><rect x="298.6" y="211.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.6" y="222.0"></text>
</g>
<g>
<title>process_backlog (295 samples, 2.86%)</title><rect x="299.1" y="211.0" width="33.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.1" y="222.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (286 samples, 2.78%)</title><rect x="300.1" y="195.0" width="32.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="303.1" y="206.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.11%)</title><rect x="300.6" y="179.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="303.6" y="190.0"></text>
</g>
<g>
<title>ip_rcv (271 samples, 2.63%)</title><rect x="301.9" y="179.0" width="31.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.9" y="190.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (265 samples, 2.57%)</title><rect x="301.9" y="163.0" width="30.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.9" y="174.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (263 samples, 2.55%)</title><rect x="302.1" y="147.0" width="30.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="305.1" y="158.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (263 samples, 2.55%)</title><rect x="302.1" y="131.0" width="30.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="305.1" y="142.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (257 samples, 2.49%)</title><rect x="302.8" y="115.0" width="29.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.8" y="126.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.08%)</title><rect x="304.4" y="99.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="307.4" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (19 samples, 0.18%)</title><rect x="305.3" y="99.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.3" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (16 samples, 0.16%)</title><rect x="305.6" y="83.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="308.6" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (11 samples, 0.11%)</title><rect x="306.2" y="67.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.2" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (7 samples, 0.07%)</title><rect x="306.7" y="51.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.7" y="62.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.03%)</title><rect x="306.9" y="35.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="309.9" y="46.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (213 samples, 2.07%)</title><rect x="307.6" y="99.0" width="24.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="310.6" y="110.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (212 samples, 2.06%)</title><rect x="307.7" y="83.0" width="24.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="310.7" y="94.0">t..</text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.07%)</title><rect x="309.1" y="67.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.1" y="78.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.06%)</title><rect x="309.2" y="51.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="312.2" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.03%)</title><rect x="309.5" y="35.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="312.5" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (129 samples, 1.25%)</title><rect x="309.9" y="67.0" width="14.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="312.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (126 samples, 1.22%)</title><rect x="310.2" y="51.0" width="14.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="313.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (124 samples, 1.20%)</title><rect x="310.4" y="35.0" width="14.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="313.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack (46 samples, 0.45%)</title><rect x="324.6" y="67.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.6" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.15%)</title><rect x="326.0" y="51.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="329.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.05%)</title><rect x="326.0" y="35.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="329.0" y="46.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.03%)</title><rect x="326.6" y="35.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.07%)</title><rect x="326.9" y="35.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.9" y="46.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.03%)</title><rect x="328.0" y="51.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.0" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="328.4" y="51.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="331.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.04%)</title><rect x="328.9" y="51.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.9" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.04%)</title><rect x="330.1" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="333.1" y="78.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (4 samples, 0.04%)</title><rect x="330.8" y="67.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.8" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.03%)</title><rect x="331.3" y="67.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.3" y="78.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="331.3" y="51.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="334.3" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.03%)</title><rect x="331.6" y="67.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="334.6" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.04%)</title><rect x="332.2" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="335.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.14%)</title><rect x="332.9" y="307.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="335.9" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (10 samples, 0.10%)</title><rect x="332.9" y="291.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="335.9" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (9 samples, 0.09%)</title><rect x="333.0" y="275.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.0" y="286.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.03%)</title><rect x="333.7" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="336.7" y="270.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.04%)</title><rect x="334.0" y="291.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.0" y="302.0"></text>
</g>
<g>
<title>__skb_clone (10 samples, 0.10%)</title><rect x="334.5" y="339.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="337.5" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.03%)</title><rect x="335.6" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.6" y="350.0"></text>
</g>
<g>
<title>ip_queue_xmit?[ipv6] (4 samples, 0.04%)</title><rect x="336.2" y="339.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="339.2" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.04%)</title><rect x="337.1" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="340.1" y="350.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.05%)</title><rect x="337.6" y="355.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="340.6" y="366.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="337.8" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="340.8" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.16%)</title><rect x="338.1" y="355.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="341.1" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.11%)</title><rect x="338.4" y="339.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="341.4" y="350.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.10%)</title><rect x="338.5" y="323.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="341.5" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.08%)</title><rect x="338.6" y="307.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.6" y="318.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.04%)</title><rect x="339.6" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.6" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (13 samples, 0.13%)</title><rect x="340.1" y="355.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="343.1" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.07%)</title><rect x="340.8" y="339.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="343.8" y="350.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.07%)</title><rect x="340.8" y="323.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="343.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.04%)</title><rect x="341.0" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="344.0" y="318.0"></text>
</g>
<g>
<title>_copy_from_iter_full (11 samples, 0.11%)</title><rect x="341.7" y="387.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="344.7" y="398.0"></text>
</g>
<g>
<title>copyin (9 samples, 0.09%)</title><rect x="341.7" y="371.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.7" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.08%)</title><rect x="341.8" y="355.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.8" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.03%)</title><rect x="343.0" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.0" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.03%)</title><rect x="343.0" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (41 samples, 0.40%)</title><rect x="343.3" y="387.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="346.3" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (36 samples, 0.35%)</title><rect x="343.9" y="371.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="346.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (14 samples, 0.14%)</title><rect x="344.8" y="355.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="347.8" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (14 samples, 0.14%)</title><rect x="344.8" y="339.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.8" y="350.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.06%)</title><rect x="346.4" y="355.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.4" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.07%)</title><rect x="347.1" y="355.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.1" y="366.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.05%)</title><rect x="348.0" y="387.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="351.0" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.15%)</title><rect x="348.9" y="387.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="351.9" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.15%)</title><rect x="348.9" y="371.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.9" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (9 samples, 0.09%)</title><rect x="349.5" y="355.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.5" y="366.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.17%)</title><rect x="351.0" y="467.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.0" y="478.0"></text>
</g>
<g>
<title>file_has_perm (5 samples, 0.05%)</title><rect x="351.3" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.3" y="462.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.05%)</title><rect x="351.3" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="354.3" y="446.0"></text>
</g>
<g>
<title>selinux_file_permission (10 samples, 0.10%)</title><rect x="351.9" y="451.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="354.9" y="462.0"></text>
</g>
<g>
<title>import_iovec (8 samples, 0.08%)</title><rect x="353.0" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="356.0" y="494.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (7 samples, 0.07%)</title><rect x="353.1" y="467.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.1" y="478.0"></text>
</g>
<g>
<title>_copy_from_user (6 samples, 0.06%)</title><rect x="353.3" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.3" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.05%)</title><rect x="353.4" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (3 samples, 0.03%)</title><rect x="354.2" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,082 samples, 10.50%)</title><rect x="354.5" y="915.0" width="123.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.5" y="926.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,077 samples, 10.45%)</title><rect x="355.1" y="899.0" width="123.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.1" y="910.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (587 samples, 5.70%)</title><rect x="355.7" y="883.0" width="67.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.7" y="894.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (584 samples, 5.67%)</title><rect x="356.0" y="867.0" width="66.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.0" y="878.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (583 samples, 5.66%)</title><rect x="356.1" y="851.0" width="66.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.1" y="862.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (4 samples, 0.04%)</title><rect x="356.6" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.04%)</title><rect x="356.6" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (72 samples, 0.70%)</title><rect x="357.0" y="835.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (72 samples, 0.70%)</title><rect x="357.0" y="819.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (72 samples, 0.70%)</title><rect x="357.0" y="803.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (72 samples, 0.70%)</title><rect x="357.0" y="787.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="358.6" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726950788.invoke (4 samples, 0.04%)</title><rect x="358.6" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1527430292.invoke (4 samples, 0.04%)</title><rect x="358.6" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="358.6" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.04%)</title><rect x="358.6" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.04%)</title><rect x="358.6" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (4 samples, 0.04%)</title><rect x="358.6" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (51 samples, 0.49%)</title><rect x="359.1" y="771.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (49 samples, 0.48%)</title><rect x="359.3" y="755.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (47 samples, 0.46%)</title><rect x="359.6" y="739.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (46 samples, 0.45%)</title><rect x="359.7" y="723.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (14 samples, 0.14%)</title><rect x="359.7" y="707.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (13 samples, 0.13%)</title><rect x="359.8" y="691.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (13 samples, 0.13%)</title><rect x="359.8" y="675.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (32 samples, 0.31%)</title><rect x="361.3" y="707.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.3" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="361.7" y="691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="364.7" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="361.7" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="364.7" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.64] (3 samples, 0.03%)</title><rect x="361.7" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="364.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.22%)</title><rect x="362.3" y="691.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (20 samples, 0.19%)</title><rect x="362.6" y="675.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.6" y="686.0"></text>
</g>
<g>
<title>__libc_write (19 samples, 0.18%)</title><rect x="362.8" y="659.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="365.8" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.18%)</title><rect x="362.8" y="643.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.18%)</title><rect x="362.8" y="627.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.8" y="638.0"></text>
</g>
<g>
<title>ksys_write (19 samples, 0.18%)</title><rect x="362.8" y="611.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.8" y="622.0"></text>
</g>
<g>
<title>vfs_write (18 samples, 0.17%)</title><rect x="362.9" y="595.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="365.9" y="606.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.15%)</title><rect x="363.0" y="579.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="366.0" y="590.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.15%)</title><rect x="363.0" y="563.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.0" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.13%)</title><rect x="363.2" y="547.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.13%)</title><rect x="363.2" y="531.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="366.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (3 samples, 0.03%)</title><rect x="364.9" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (9 samples, 0.09%)</title><rect x="365.3" y="835.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (4 samples, 0.04%)</title><rect x="365.9" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.04%)</title><rect x="365.9" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.04%)</title><rect x="365.9" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (494 samples, 4.79%)</title><rect x="366.3" y="835.0" width="56.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.3" y="846.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (490 samples, 4.75%)</title><rect x="366.4" y="819.0" width="56.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.4" y="830.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (490 samples, 4.75%)</title><rect x="366.4" y="803.0" width="56.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.4" y="814.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (490 samples, 4.75%)</title><rect x="366.4" y="787.0" width="56.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.4" y="798.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (297 samples, 2.88%)</title><rect x="366.7" y="771.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.7" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (297 samples, 2.88%)</title><rect x="366.7" y="755.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.7" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (297 samples, 2.88%)</title><rect x="366.7" y="739.0" width="34.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.7" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (297 samples, 2.88%)</title><rect x="366.7" y="723.0" width="34.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.7" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.03%)</title><rect x="366.7" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (294 samples, 2.85%)</title><rect x="367.0" y="707.0" width="33.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.0" y="718.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (292 samples, 2.83%)</title><rect x="367.2" y="691.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.2" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (291 samples, 2.82%)</title><rect x="367.3" y="675.0" width="33.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.3" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (277 samples, 2.69%)</title><rect x="367.5" y="659.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.5" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (264 samples, 2.56%)</title><rect x="368.9" y="643.0" width="30.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.9" y="654.0">ja..</text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="369.1" y="627.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="372.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (192 samples, 1.86%)</title><rect x="369.6" y="627.0" width="22.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.6" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.11%)</title><rect x="369.9" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.04%)</title><rect x="369.9" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.07%)</title><rect x="370.3" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7 samples, 0.07%)</title><rect x="370.3" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.07%)</title><rect x="370.3" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.3" y="574.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="370.4" y="547.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="373.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/402007990.apply (139 samples, 1.35%)</title><rect x="371.1" y="611.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (139 samples, 1.35%)</title><rect x="371.1" y="595.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (138 samples, 1.34%)</title><rect x="371.2" y="579.0" width="15.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (135 samples, 1.31%)</title><rect x="371.6" y="563.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (135 samples, 1.31%)</title><rect x="371.6" y="547.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (50 samples, 0.49%)</title><rect x="372.5" y="531.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (12 samples, 0.12%)</title><rect x="372.5" y="515.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.5" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (12 samples, 0.12%)</title><rect x="372.5" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (12 samples, 0.12%)</title><rect x="372.5" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.09%)</title><rect x="372.8" y="467.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.09%)</title><rect x="372.8" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (30 samples, 0.29%)</title><rect x="374.1" y="515.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (29 samples, 0.28%)</title><rect x="374.1" y="499.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (29 samples, 0.28%)</title><rect x="374.1" y="483.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (22 samples, 0.21%)</title><rect x="374.9" y="467.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.16%)</title><rect x="374.9" y="451.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (17 samples, 0.16%)</title><rect x="374.9" y="435.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (16 samples, 0.16%)</title><rect x="375.0" y="419.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.0" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (13 samples, 0.13%)</title><rect x="375.4" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (13 samples, 0.13%)</title><rect x="375.4" y="387.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$592/2050888660.applyAsLong (13 samples, 0.13%)</title><rect x="375.4" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (13 samples, 0.13%)</title><rect x="375.4" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (13 samples, 0.13%)</title><rect x="375.4" y="339.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.04%)</title><rect x="376.4" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.05%)</title><rect x="376.8" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (6 samples, 0.06%)</title><rect x="377.5" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (6 samples, 0.06%)</title><rect x="377.5" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (6 samples, 0.06%)</title><rect x="377.5" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (6 samples, 0.06%)</title><rect x="377.5" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (6 samples, 0.06%)</title><rect x="377.5" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.03%)</title><rect x="378.3" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 0.60%)</title><rect x="379.0" y="531.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$605/2050460840.run (62 samples, 0.60%)</title><rect x="379.0" y="515.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (61 samples, 0.59%)</title><rect x="379.1" y="499.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.04%)</title><rect x="379.4" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.04%)</title><rect x="379.4" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.04%)</title><rect x="379.4" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.4" y="462.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.04%)</title><rect x="379.4" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (28 samples, 0.27%)</title><rect x="379.8" y="483.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (19 samples, 0.18%)</title><rect x="379.9" y="467.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (19 samples, 0.18%)</title><rect x="379.9" y="451.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.08%)</title><rect x="382.1" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (12 samples, 0.12%)</title><rect x="383.1" y="483.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.12%)</title><rect x="383.1" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.1" y="478.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (10 samples, 0.10%)</title><rect x="383.4" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.4" y="462.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (9 samples, 0.09%)</title><rect x="383.5" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="446.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.09%)</title><rect x="383.5" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.5" y="430.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.05%)</title><rect x="383.6" y="403.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="386.6" y="414.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.04%)</title><rect x="383.6" y="387.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="386.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (7 samples, 0.07%)</title><rect x="384.5" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (5 samples, 0.05%)</title><rect x="384.7" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (7 samples, 0.07%)</title><rect x="385.3" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers.getBodyAsync (8 samples, 0.08%)</title><rect x="386.1" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.07%)</title><rect x="386.2" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$$Lambda$663/1305983741.run (5 samples, 0.05%)</title><rect x="386.5" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers.lambda$getBodyAsync$3 (3 samples, 0.03%)</title><rect x="386.7" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="386.7" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="386.7" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.03%)</title><rect x="386.7" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$452/298402999.apply (40 samples, 0.39%)</title><rect x="387.0" y="611.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (40 samples, 0.39%)</title><rect x="387.0" y="595.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (36 samples, 0.35%)</title><rect x="387.0" y="579.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (22 samples, 0.21%)</title><rect x="388.4" y="563.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (19 samples, 0.18%)</title><rect x="388.8" y="547.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.8" y="558.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (13 samples, 0.13%)</title><rect x="389.4" y="531.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.4" y="542.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (11 samples, 0.11%)</title><rect x="389.7" y="515.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (10 samples, 0.10%)</title><rect x="389.7" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.7" y="510.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.05%)</title><rect x="389.9" y="483.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="392.9" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.03%)</title><rect x="390.0" y="467.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="393.0" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.203] (3 samples, 0.03%)</title><rect x="390.5" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="393.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.04%)</title><rect x="391.2" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.04%)</title><rect x="391.2" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.04%)</title><rect x="391.2" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (45 samples, 0.44%)</title><rect x="391.6" y="627.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41 samples, 0.40%)</title><rect x="392.1" y="611.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.07%)</title><rect x="392.2" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$459/1293904227.apply (4 samples, 0.04%)</title><rect x="392.5" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$459/1293904227.apply (33 samples, 0.32%)</title><rect x="393.0" y="595.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (31 samples, 0.30%)</title><rect x="393.2" y="579.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (28 samples, 0.27%)</title><rect x="393.2" y="563.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (28 samples, 0.27%)</title><rect x="393.2" y="547.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (25 samples, 0.24%)</title><rect x="393.6" y="531.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (24 samples, 0.23%)</title><rect x="393.7" y="515.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (15 samples, 0.15%)</title><rect x="393.7" y="499.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (9 samples, 0.09%)</title><rect x="394.2" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.leftOf (5 samples, 0.05%)</title><rect x="394.7" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.09%)</title><rect x="395.4" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="398.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (5 samples, 0.05%)</title><rect x="395.9" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.03%)</title><rect x="396.4" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.03%)</title><rect x="396.4" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.03%)</title><rect x="396.4" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (17 samples, 0.16%)</title><rect x="396.8" y="627.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (5 samples, 0.05%)</title><rect x="397.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.05%)</title><rect x="397.6" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (5 samples, 0.05%)</title><rect x="397.6" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.05%)</title><rect x="398.1" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.05%)</title><rect x="398.1" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$578/434563612.apply (3 samples, 0.03%)</title><rect x="398.7" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$578/434563612.apply (13 samples, 0.13%)</title><rect x="399.2" y="659.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (13 samples, 0.13%)</title><rect x="399.2" y="643.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (11 samples, 0.11%)</title><rect x="399.4" y="627.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.09%)</title><rect x="399.4" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.09%)</title><rect x="399.4" y="595.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.09%)</title><rect x="399.4" y="579.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (184 samples, 1.79%)</title><rect x="400.7" y="771.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.7" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (17 samples, 0.16%)</title><rect x="404.0" y="755.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (22 samples, 0.21%)</title><rect x="406.2" y="755.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (20 samples, 0.19%)</title><rect x="406.4" y="739.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.4" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.19%)</title><rect x="406.4" y="723.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (34 samples, 0.33%)</title><rect x="408.7" y="755.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.7" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (34 samples, 0.33%)</title><rect x="408.7" y="739.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.7" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (34 samples, 0.33%)</title><rect x="408.7" y="723.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (29 samples, 0.28%)</title><rect x="409.2" y="707.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.2" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (26 samples, 0.25%)</title><rect x="409.6" y="691.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (25 samples, 0.24%)</title><rect x="409.6" y="675.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.05%)</title><rect x="410.6" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.05%)</title><rect x="411.2" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.05%)</title><rect x="411.8" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="411.9" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="411.9" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.03%)</title><rect x="411.9" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (80 samples, 0.78%)</title><rect x="412.6" y="755.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.09%)</title><rect x="412.6" y="739.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.05%)</title><rect x="413.6" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (64 samples, 0.62%)</title><rect x="414.4" y="739.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="414.4" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="414.4" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="414.4" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (40 samples, 0.39%)</title><rect x="414.7" y="723.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (10 samples, 0.10%)</title><rect x="418.1" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.08%)</title><rect x="419.3" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.08%)</title><rect x="419.3" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (13 samples, 0.13%)</title><rect x="420.2" y="723.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.10%)</title><rect x="420.4" y="707.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.04%)</title><rect x="421.0" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$379/2080917072.accept (7 samples, 0.07%)</title><rect x="421.7" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (7 samples, 0.07%)</title><rect x="421.7" y="755.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.04%)</title><rect x="422.1" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.03%)</title><rect x="422.5" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.03%)</title><rect x="422.5" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (485 samples, 4.71%)</title><rect x="422.9" y="883.0" width="55.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.9" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (484 samples, 4.70%)</title><rect x="423.0" y="867.0" width="55.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.0" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (483 samples, 4.69%)</title><rect x="423.1" y="851.0" width="55.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.1" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (483 samples, 4.69%)</title><rect x="423.1" y="835.0" width="55.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.1" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (480 samples, 4.66%)</title><rect x="423.4" y="819.0" width="55.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.4" y="830.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (475 samples, 4.61%)</title><rect x="423.9" y="803.0" width="54.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.9" y="814.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (465 samples, 4.51%)</title><rect x="424.4" y="787.0" width="53.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.4" y="798.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (465 samples, 4.51%)</title><rect x="424.4" y="771.0" width="53.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.4" y="782.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$614/1917281169.run (250 samples, 2.43%)</title><rect x="424.5" y="755.0" width="28.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.5" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (250 samples, 2.43%)</title><rect x="424.5" y="739.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.5" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (250 samples, 2.43%)</title><rect x="424.5" y="723.0" width="28.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.5" y="734.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.11%)</title><rect x="424.5" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.5" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.07%)</title><rect x="424.5" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.5" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.07%)</title><rect x="424.5" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.07%)</title><rect x="424.5" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.06%)</title><rect x="424.6" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.05%)</title><rect x="424.7" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (235 samples, 2.28%)</title><rect x="426.0" y="707.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.0" y="718.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.05%)</title><rect x="426.0" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.0" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.05%)</title><rect x="426.0" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.03%)</title><rect x="426.2" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (230 samples, 2.23%)</title><rect x="426.5" y="691.0" width="26.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.5" y="702.0">j..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.13%)</title><rect x="427.7" y="675.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="430.7" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.11%)</title><rect x="427.8" y="659.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="430.8" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.64] (8 samples, 0.08%)</title><rect x="427.8" y="643.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="430.8" y="654.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="428.7" y="643.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="431.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (63 samples, 0.61%)</title><rect x="429.2" y="675.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.compare (3 samples, 0.03%)</title><rect x="430.3" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.3" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (32 samples, 0.31%)</title><rect x="430.7" y="659.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.7" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (32 samples, 0.31%)</title><rect x="430.7" y="643.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.7" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.03%)</title><rect x="434.3" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.3" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.03%)</title><rect x="434.3" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.3" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (6 samples, 0.06%)</title><rect x="434.7" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.7" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (6 samples, 0.06%)</title><rect x="434.7" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.7" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.04%)</title><rect x="435.4" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.4" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.04%)</title><rect x="435.4" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.4" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (5 samples, 0.05%)</title><rect x="435.8" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (44 samples, 0.43%)</title><rect x="436.4" y="675.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (36 samples, 0.35%)</title><rect x="436.4" y="659.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (27 samples, 0.26%)</title><rect x="436.4" y="643.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (6 samples, 0.06%)</title><rect x="438.8" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.8" y="638.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.04%)</title><rect x="439.0" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.0" y="622.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.04%)</title><rect x="439.0" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.0" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.04%)</title><rect x="439.0" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (9 samples, 0.09%)</title><rect x="439.5" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (7 samples, 0.07%)</title><rect x="439.7" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.7" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.07%)</title><rect x="440.5" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.5" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.07%)</title><rect x="440.5" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (100 samples, 0.97%)</title><rect x="441.4" y="675.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (100 samples, 0.97%)</title><rect x="441.4" y="659.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (25 samples, 0.24%)</title><rect x="441.4" y="643.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (25 samples, 0.24%)</title><rect x="441.4" y="627.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (25 samples, 0.24%)</title><rect x="441.4" y="611.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (18 samples, 0.17%)</title><rect x="441.4" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="444.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (18 samples, 0.17%)</title><rect x="441.4" y="579.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.4" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="441.8" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="444.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.10%)</title><rect x="442.3" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.05%)</title><rect x="442.9" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.9" y="558.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.05%)</title><rect x="442.9" y="531.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="445.9" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="442.9" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="445.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="442.9" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.9" y="510.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.05%)</title><rect x="442.9" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="445.9" y="494.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.05%)</title><rect x="442.9" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.9" y="478.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.04%)</title><rect x="442.9" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="445.9" y="462.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.04%)</title><rect x="442.9" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (7 samples, 0.07%)</title><rect x="443.5" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (75 samples, 0.73%)</title><rect x="444.3" y="643.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (72 samples, 0.70%)</title><rect x="444.6" y="627.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (64 samples, 0.62%)</title><rect x="444.6" y="611.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (61 samples, 0.59%)</title><rect x="444.6" y="595.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (61 samples, 0.59%)</title><rect x="444.6" y="579.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.6" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="445.0" y="563.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="448.0" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="445.1" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="448.1" y="558.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="445.1" y="531.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="448.1" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.86] (3 samples, 0.03%)</title><rect x="445.4" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="448.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (50 samples, 0.49%)</title><rect x="445.9" y="563.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.9" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="446.8" y="547.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="449.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (39 samples, 0.38%)</title><rect x="447.1" y="547.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.1" y="558.0"></text>
</g>
<g>
<title>__libc_write (38 samples, 0.37%)</title><rect x="447.3" y="531.0" width="4.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="450.3" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.35%)</title><rect x="447.5" y="515.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.35%)</title><rect x="447.5" y="499.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.5" y="510.0"></text>
</g>
<g>
<title>ksys_write (34 samples, 0.33%)</title><rect x="447.7" y="483.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="450.7" y="494.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.03%)</title><rect x="447.7" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.7" y="478.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="447.7" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="450.7" y="462.0"></text>
</g>
<g>
<title>vfs_write (31 samples, 0.30%)</title><rect x="448.1" y="467.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.1" y="478.0"></text>
</g>
<g>
<title>new_sync_write (24 samples, 0.23%)</title><rect x="448.4" y="451.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.4" y="462.0"></text>
</g>
<g>
<title>pipe_write (22 samples, 0.21%)</title><rect x="448.6" y="435.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.6" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.11%)</title><rect x="449.1" y="419.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="452.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.11%)</title><rect x="449.1" y="403.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.1" y="414.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.04%)</title><rect x="451.2" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.2" y="462.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.03%)</title><rect x="451.3" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="454.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (3 samples, 0.03%)</title><rect x="451.6" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.03%)</title><rect x="452.0" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (4 samples, 0.04%)</title><rect x="452.4" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$622/340551095.accept (21 samples, 0.20%)</title><rect x="453.1" y="755.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (21 samples, 0.20%)</title><rect x="453.1" y="739.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (21 samples, 0.20%)</title><rect x="453.1" y="723.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (19 samples, 0.18%)</title><rect x="453.1" y="707.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.18%)</title><rect x="453.1" y="691.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 0.16%)</title><rect x="453.4" y="675.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.03%)</title><rect x="453.7" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.03%)</title><rect x="453.7" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.11%)</title><rect x="454.0" y="659.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.04%)</title><rect x="454.0" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$639/1428755153.accept (5 samples, 0.05%)</title><rect x="454.5" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (5 samples, 0.05%)</title><rect x="454.5" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (5 samples, 0.05%)</title><rect x="454.5" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (5 samples, 0.05%)</title><rect x="454.5" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (5 samples, 0.05%)</title><rect x="454.5" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (191 samples, 1.85%)</title><rect x="455.5" y="755.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.5" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (191 samples, 1.85%)</title><rect x="455.5" y="739.0" width="21.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (191 samples, 1.85%)</title><rect x="455.5" y="723.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.5" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (191 samples, 1.85%)</title><rect x="455.5" y="707.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.5" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (191 samples, 1.85%)</title><rect x="455.5" y="691.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.5" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (191 samples, 1.85%)</title><rect x="455.5" y="675.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.5" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (188 samples, 1.82%)</title><rect x="455.8" y="659.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.8" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$$Lambda$671/2031574276.accept (186 samples, 1.80%)</title><rect x="456.1" y="643.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.1" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers.lambda$getBodyAsync$2 (179 samples, 1.74%)</title><rect x="456.9" y="627.0" width="20.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (179 samples, 1.74%)</title><rect x="456.9" y="611.0" width="20.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (179 samples, 1.74%)</title><rect x="456.9" y="595.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.05%)</title><rect x="457.0" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (169 samples, 1.64%)</title><rect x="457.7" y="579.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.03%)</title><rect x="458.0" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.03%)</title><rect x="458.0" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (163 samples, 1.58%)</title><rect x="458.4" y="563.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (154 samples, 1.49%)</title><rect x="458.7" y="547.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.7" y="558.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="459.2" y="531.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="462.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (141 samples, 1.37%)</title><rect x="459.7" y="531.0" width="16.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (140 samples, 1.36%)</title><rect x="459.9" y="515.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (135 samples, 1.31%)</title><rect x="460.4" y="499.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (3 samples, 0.03%)</title><rect x="460.4" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (6 samples, 0.06%)</title><rect x="460.8" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (6 samples, 0.06%)</title><rect x="460.8" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (6 samples, 0.06%)</title><rect x="460.8" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (126 samples, 1.22%)</title><rect x="461.5" y="483.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (121 samples, 1.17%)</title><rect x="462.0" y="467.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (121 samples, 1.17%)</title><rect x="462.0" y="451.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.0" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (23 samples, 0.22%)</title><rect x="462.1" y="435.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="465.1" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.04%)</title><rect x="462.8" y="419.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="465.8" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.05%)</title><rect x="463.3" y="419.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="466.3" y="430.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (5 samples, 0.05%)</title><rect x="463.9" y="419.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="466.9" y="430.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (97 samples, 0.94%)</title><rect x="464.8" y="435.0" width="11.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="467.8" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 0.90%)</title><rect x="465.2" y="419.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.2" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 0.90%)</title><rect x="465.2" y="403.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.2" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (88 samples, 0.85%)</title><rect x="465.8" y="387.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.8" y="398.0"></text>
</g>
<g>
<title>do_futex (88 samples, 0.85%)</title><rect x="465.8" y="371.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="468.8" y="382.0"></text>
</g>
<g>
<title>futex_wake (88 samples, 0.85%)</title><rect x="465.8" y="355.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.8" y="366.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.09%)</title><rect x="466.7" y="339.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.7" y="350.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.04%)</title><rect x="467.8" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="470.8" y="350.0"></text>
</g>
<g>
<title>wake_up_q (67 samples, 0.65%)</title><rect x="468.2" y="339.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.2" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (66 samples, 0.64%)</title><rect x="468.3" y="323.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.3" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (65 samples, 0.63%)</title><rect x="468.4" y="307.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.03%)</title><rect x="475.9" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$686/1969960172.accept (3 samples, 0.03%)</title><rect x="476.3" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$178/1181103675.accept (3 samples, 0.03%)</title><rect x="476.7" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (3 samples, 0.03%)</title><rect x="476.7" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.03%)</title><rect x="476.7" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.03%)</title><rect x="476.7" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.7" y="510.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="477.0" y="579.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="480.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (6 samples, 0.06%)</title><rect x="477.6" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (6 samples, 0.06%)</title><rect x="477.6" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.06%)</title><rect x="477.6" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,454 samples, 14.11%)</title><rect x="478.6" y="963.0" width="166.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.6" y="974.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,454 samples, 14.11%)</title><rect x="478.6" y="947.0" width="166.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.6" y="958.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,145 samples, 11.11%)</title><rect x="487.0" y="931.0" width="131.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.0" y="942.0">java/util/concur..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (4 samples, 0.04%)</title><rect x="509.8" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.8" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.getAcquire (4 samples, 0.04%)</title><rect x="509.8" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (926 samples, 8.99%)</title><rect x="510.2" y="915.0" width="106.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.2" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (898 samples, 8.71%)</title><rect x="513.4" y="899.0" width="102.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.4" y="910.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (898 samples, 8.71%)</title><rect x="513.4" y="883.0" width="102.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.4" y="894.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (201 samples, 1.95%)</title><rect x="514.5" y="867.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.5" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.05%)</title><rect x="514.5" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.05%)</title><rect x="514.5" y="835.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (196 samples, 1.90%)</title><rect x="515.0" y="851.0" width="22.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.0" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (192 samples, 1.86%)</title><rect x="515.5" y="835.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.5" y="846.0">j..</text>
</g>
<g>
<title>itable stub (7 samples, 0.07%)</title><rect x="515.8" y="819.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="518.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (178 samples, 1.73%)</title><rect x="516.6" y="819.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (175 samples, 1.70%)</title><rect x="517.0" y="803.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (173 samples, 1.68%)</title><rect x="517.1" y="787.0" width="19.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (165 samples, 1.60%)</title><rect x="517.1" y="771.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (164 samples, 1.59%)</title><rect x="517.2" y="755.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (162 samples, 1.57%)</title><rect x="517.3" y="739.0" width="18.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (160 samples, 1.55%)</title><rect x="517.6" y="723.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (3 samples, 0.03%)</title><rect x="518.4" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (3 samples, 0.03%)</title><rect x="518.4" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (150 samples, 1.46%)</title><rect x="518.7" y="707.0" width="17.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (150 samples, 1.46%)</title><rect x="518.7" y="691.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.7" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (26 samples, 0.25%)</title><rect x="518.7" y="675.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="521.7" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.08%)</title><rect x="519.9" y="659.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="522.9" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.03%)</title><rect x="521.3" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="524.3" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (122 samples, 1.18%)</title><rect x="521.9" y="675.0" width="14.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="524.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 1.10%)</title><rect x="522.9" y="659.0" width="13.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="525.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (113 samples, 1.10%)</title><rect x="522.9" y="643.0" width="13.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (111 samples, 1.08%)</title><rect x="523.2" y="627.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.2" y="638.0"></text>
</g>
<g>
<title>do_futex (109 samples, 1.06%)</title><rect x="523.4" y="611.0" width="12.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.4" y="622.0"></text>
</g>
<g>
<title>futex_wake (109 samples, 1.06%)</title><rect x="523.4" y="595.0" width="12.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.4" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.03%)</title><rect x="524.7" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="527.7" y="590.0"></text>
</g>
<g>
<title>wake_up_q (95 samples, 0.92%)</title><rect x="525.0" y="579.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.0" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (94 samples, 0.91%)</title><rect x="525.1" y="563.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="528.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (94 samples, 0.91%)</title><rect x="525.1" y="547.0" width="10.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (8 samples, 0.08%)</title><rect x="536.0" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$182/902120704.apply (3 samples, 0.03%)</title><rect x="537.0" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (688 samples, 6.68%)</title><rect x="537.5" y="867.0" width="78.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.5" y="878.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (256 samples, 2.48%)</title><rect x="539.0" y="851.0" width="29.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.0" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (255 samples, 2.47%)</title><rect x="539.1" y="835.0" width="29.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.1" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (249 samples, 2.42%)</title><rect x="539.7" y="819.0" width="28.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.7" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (246 samples, 2.39%)</title><rect x="540.0" y="803.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.0" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (240 samples, 2.33%)</title><rect x="540.1" y="787.0" width="27.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.1" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (239 samples, 2.32%)</title><rect x="540.2" y="771.0" width="27.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.2" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (235 samples, 2.28%)</title><rect x="540.6" y="755.0" width="26.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.6" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (230 samples, 2.23%)</title><rect x="541.1" y="739.0" width="26.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.1" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (215 samples, 2.09%)</title><rect x="542.9" y="723.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.9" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (215 samples, 2.09%)</title><rect x="542.9" y="707.0" width="24.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.9" y="718.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (56 samples, 0.54%)</title><rect x="543.7" y="691.0" width="6.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="546.7" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.03%)</title><rect x="544.8" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="547.8" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (10 samples, 0.10%)</title><rect x="545.2" y="675.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="548.2" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (17 samples, 0.16%)</title><rect x="546.3" y="675.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="549.3" y="686.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (8 samples, 0.08%)</title><rect x="548.4" y="675.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="551.4" y="686.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.04%)</title><rect x="549.6" y="675.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="552.6" y="686.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (148 samples, 1.44%)</title><rect x="550.4" y="691.0" width="17.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="553.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 1.29%)</title><rect x="552.1" y="675.0" width="15.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (133 samples, 1.29%)</title><rect x="552.1" y="659.0" width="15.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (128 samples, 1.24%)</title><rect x="552.7" y="643.0" width="14.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="555.7" y="654.0"></text>
</g>
<g>
<title>do_futex (126 samples, 1.22%)</title><rect x="552.9" y="627.0" width="14.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="555.9" y="638.0"></text>
</g>
<g>
<title>futex_wake (125 samples, 1.21%)</title><rect x="553.1" y="611.0" width="14.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="556.1" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.06%)</title><rect x="554.9" y="595.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.9" y="606.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.04%)</title><rect x="555.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.6" y="606.0"></text>
</g>
<g>
<title>wake_up_q (99 samples, 0.96%)</title><rect x="556.0" y="595.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="559.0" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (98 samples, 0.95%)</title><rect x="556.1" y="579.0" width="11.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="559.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (98 samples, 0.95%)</title><rect x="556.1" y="563.0" width="11.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="559.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.05%)</title><rect x="567.6" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (418 samples, 4.06%)</title><rect x="568.3" y="851.0" width="47.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.3" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.12%)</title><rect x="569.5" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/2109878360.accept (5 samples, 0.05%)</title><rect x="570.1" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$$Lambda$189/1339399088.accept (395 samples, 3.83%)</title><rect x="570.9" y="835.0" width="45.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.9" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.lambda$atLeast$0 (392 samples, 3.80%)</title><rect x="571.3" y="819.0" width="44.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.3" y="830.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (375 samples, 3.64%)</title><rect x="571.4" y="803.0" width="42.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.4" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (375 samples, 3.64%)</title><rect x="571.4" y="787.0" width="42.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.4" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (353 samples, 3.43%)</title><rect x="573.8" y="771.0" width="40.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.8" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (353 samples, 3.43%)</title><rect x="573.8" y="755.0" width="40.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.8" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.08%)</title><rect x="573.8" y="739.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.04%)</title><rect x="574.1" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$193/2032886835.accept (345 samples, 3.35%)</title><rect x="574.7" y="739.0" width="39.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.7" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.lambda$validatePut$0 (345 samples, 3.35%)</title><rect x="574.7" y="723.0" width="39.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.7" y="734.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (336 samples, 3.26%)</title><rect x="575.2" y="707.0" width="38.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.2" y="718.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (310 samples, 3.01%)</title><rect x="576.8" y="691.0" width="35.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.8" y="702.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.13%)</title><rect x="576.8" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.03%)</title><rect x="577.1" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.1" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="577.1" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="580.1" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="577.1" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="580.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.07%)</title><rect x="577.4" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.04%)</title><rect x="577.4" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="577.9" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="577.9" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="577.9" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (297 samples, 2.88%)</title><rect x="578.2" y="675.0" width="34.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.2" y="686.0">on..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="578.2" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.2" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="578.2" y="643.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="581.2" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="578.2" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="581.2" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (294 samples, 2.85%)</title><rect x="578.6" y="659.0" width="33.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.6" y="670.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (289 samples, 2.80%)</title><rect x="579.2" y="643.0" width="33.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.2" y="654.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (289 samples, 2.80%)</title><rect x="579.2" y="627.0" width="33.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.2" y="638.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.13%)</title><rect x="579.4" y="611.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="582.4" y="622.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.06%)</title><rect x="580.2" y="595.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="583.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.230] (3 samples, 0.03%)</title><rect x="580.2" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="583.2" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.03%)</title><rect x="580.5" y="579.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="583.5" y="590.0"></text>
</g>
<g>
<title>__libc_send (272 samples, 2.64%)</title><rect x="580.9" y="611.0" width="31.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="583.9" y="622.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (270 samples, 2.62%)</title><rect x="581.1" y="595.0" width="30.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.1" y="606.0">en..</text>
</g>
<g>
<title>do_syscall_64 (270 samples, 2.62%)</title><rect x="581.1" y="579.0" width="30.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.1" y="590.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (267 samples, 2.59%)</title><rect x="581.5" y="563.0" width="30.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.5" y="574.0">__..</text>
</g>
<g>
<title>__sys_sendto (266 samples, 2.58%)</title><rect x="581.6" y="547.0" width="30.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.6" y="558.0">__..</text>
</g>
<g>
<title>sock_sendmsg (255 samples, 2.47%)</title><rect x="582.4" y="531.0" width="29.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="585.4" y="542.0">so..</text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.05%)</title><rect x="582.5" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.5" y="526.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.04%)</title><rect x="582.6" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.6" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (249 samples, 2.42%)</title><rect x="583.1" y="515.0" width="28.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="586.1" y="526.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (245 samples, 2.38%)</title><rect x="583.5" y="499.0" width="28.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="586.5" y="510.0">tc..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="584.0" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.0" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (202 samples, 1.96%)</title><rect x="584.3" y="483.0" width="23.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="587.3" y="494.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (202 samples, 1.96%)</title><rect x="584.3" y="467.0" width="23.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="587.3" y="478.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (186 samples, 1.80%)</title><rect x="584.8" y="451.0" width="21.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.8" y="462.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (174 samples, 1.69%)</title><rect x="585.8" y="435.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.8" y="446.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.04%)</title><rect x="586.4" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="589.4" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="586.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="589.5" y="414.0"></text>
</g>
<g>
<title>ip_output (165 samples, 1.60%)</title><rect x="586.8" y="419.0" width="18.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="589.8" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (155 samples, 1.50%)</title><rect x="587.5" y="403.0" width="17.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="590.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.16%)</title><rect x="587.7" y="387.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.04%)</title><rect x="588.8" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.04%)</title><rect x="588.8" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.8" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.03%)</title><rect x="588.8" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="591.8" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (136 samples, 1.32%)</title><rect x="589.7" y="387.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="592.7" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (136 samples, 1.32%)</title><rect x="589.7" y="371.0" width="15.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="592.7" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (135 samples, 1.31%)</title><rect x="589.8" y="355.0" width="15.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.8" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (135 samples, 1.31%)</title><rect x="589.8" y="339.0" width="15.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (134 samples, 1.30%)</title><rect x="589.9" y="323.0" width="15.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="592.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (131 samples, 1.27%)</title><rect x="590.3" y="307.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="593.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (130 samples, 1.26%)</title><rect x="590.4" y="291.0" width="14.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="593.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (127 samples, 1.23%)</title><rect x="590.7" y="275.0" width="14.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.7" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (125 samples, 1.21%)</title><rect x="590.7" y="259.0" width="14.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.7" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (125 samples, 1.21%)</title><rect x="590.7" y="243.0" width="14.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="593.7" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (125 samples, 1.21%)</title><rect x="590.7" y="227.0" width="14.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (120 samples, 1.16%)</title><rect x="591.3" y="211.0" width="13.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.3" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.08%)</title><rect x="592.0" y="195.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.07%)</title><rect x="593.1" y="195.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="596.1" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.07%)</title><rect x="593.1" y="179.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.1" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.07%)</title><rect x="593.1" y="163.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="596.1" y="174.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (5 samples, 0.05%)</title><rect x="593.4" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="596.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (95 samples, 0.92%)</title><rect x="593.9" y="195.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.9" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (94 samples, 0.91%)</title><rect x="594.0" y="179.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.0" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (53 samples, 0.51%)</title><rect x="594.4" y="163.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.4" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (52 samples, 0.50%)</title><rect x="594.4" y="147.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="597.4" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (52 samples, 0.50%)</title><rect x="594.4" y="131.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="597.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack (34 samples, 0.33%)</title><rect x="600.5" y="163.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.11%)</title><rect x="601.3" y="147.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.3" y="158.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.10%)</title><rect x="601.4" y="131.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="604.4" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="602.9" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="605.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.03%)</title><rect x="603.3" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="606.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.04%)</title><rect x="605.3" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="608.3" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.03%)</title><rect x="605.3" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="608.3" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.08%)</title><rect x="606.2" y="451.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.2" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="606.4" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.4" y="446.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="606.5" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.5" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="607.1" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.1" y="462.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.04%)</title><rect x="607.4" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.4" y="494.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.03%)</title><rect x="607.4" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.4" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="607.4" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.4" y="462.0"></text>
</g>
<g>
<title>sk_page_frag_refill (8 samples, 0.08%)</title><rect x="607.9" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.9" y="494.0"></text>
</g>
<g>
<title>skb_page_frag_refill (8 samples, 0.08%)</title><rect x="607.9" y="467.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.9" y="478.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.12%)</title><rect x="608.8" y="483.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.8" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.11%)</title><rect x="608.9" y="467.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="611.9" y="478.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.04%)</title><rect x="609.3" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="612.3" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.04%)</title><rect x="609.3" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.3" y="446.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.03%)</title><rect x="609.7" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="612.7" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.03%)</title><rect x="610.3" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="613.3" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.04%)</title><rect x="610.6" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="613.6" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.04%)</title><rect x="610.6" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.6" y="478.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (3 samples, 0.03%)</title><rect x="611.1" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.1" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.04%)</title><rect x="611.6" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="614.6" y="542.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="611.7" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="614.7" y="526.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="611.7" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.12%)</title><rect x="612.3" y="691.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.12%)</title><rect x="612.3" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.12%)</title><rect x="612.3" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.04%)</title><rect x="613.6" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.6" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="613.6" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="616.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (16 samples, 0.16%)</title><rect x="614.3" y="803.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.15%)</title><rect x="616.3" y="915.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.14%)</title><rect x="616.4" y="899.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.14%)</title><rect x="616.4" y="883.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.4" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.12%)</title><rect x="616.6" y="867.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="619.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.12%)</title><rect x="616.6" y="851.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.6" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.12%)</title><rect x="616.6" y="835.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.12%)</title><rect x="616.6" y="819.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.6" y="830.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.12%)</title><rect x="616.6" y="803.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="619.6" y="814.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.12%)</title><rect x="616.6" y="787.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.6" y="798.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.10%)</title><rect x="616.8" y="771.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="619.8" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.10%)</title><rect x="616.8" y="755.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.8" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.10%)</title><rect x="616.8" y="739.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="619.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (136 samples, 1.32%)</title><rect x="618.1" y="931.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (134 samples, 1.30%)</title><rect x="618.3" y="915.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.3" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park (31 samples, 0.30%)</title><rect x="619.2" y="899.0" width="3.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="622.2" y="910.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.05%)</title><rect x="619.8" y="883.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="622.8" y="894.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.11%)</title><rect x="620.4" y="883.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="623.4" y="894.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.04%)</title><rect x="621.6" y="883.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="624.6" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.03%)</title><rect x="622.1" y="883.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="625.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="622.1" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="625.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="622.1" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="625.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.91%)</title><rect x="622.8" y="899.0" width="10.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="625.8" y="910.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (3 samples, 0.03%)</title><rect x="622.8" y="883.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="625.8" y="894.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.05%)</title><rect x="623.1" y="883.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="626.1" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_wait (84 samples, 0.82%)</title><rect x="623.8" y="883.0" width="9.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="626.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.72%)</title><rect x="625.0" y="867.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.72%)</title><rect x="625.0" y="851.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="628.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (63 samples, 0.61%)</title><rect x="626.2" y="835.0" width="7.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="629.2" y="846.0"></text>
</g>
<g>
<title>do_futex (60 samples, 0.58%)</title><rect x="626.6" y="819.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="629.6" y="830.0"></text>
</g>
<g>
<title>futex_wait (58 samples, 0.56%)</title><rect x="626.8" y="803.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="629.8" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (27 samples, 0.26%)</title><rect x="627.3" y="787.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.3" y="798.0"></text>
</g>
<g>
<title>plist_add (9 samples, 0.09%)</title><rect x="627.9" y="771.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="630.9" y="782.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.12%)</title><rect x="629.0" y="771.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="632.0" y="782.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.07%)</title><rect x="629.5" y="755.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.5" y="766.0"></text>
</g>
<g>
<title>futex_wait_setup (27 samples, 0.26%)</title><rect x="630.3" y="787.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="633.3" y="798.0"></text>
</g>
<g>
<title>get_futex_value_locked (8 samples, 0.08%)</title><rect x="631.9" y="771.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="634.9" y="782.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.05%)</title><rect x="632.9" y="771.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="635.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (99 samples, 0.96%)</title><rect x="633.7" y="931.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (91 samples, 0.88%)</title><rect x="634.2" y="915.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.2" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.13%)</title><rect x="634.5" y="899.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="637.5" y="910.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.07%)</title><rect x="634.7" y="883.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="637.7" y="894.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="634.9" y="867.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="637.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.03%)</title><rect x="634.9" y="851.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="637.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.74%)</title><rect x="636.0" y="899.0" width="8.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="639.0" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (72 samples, 0.70%)</title><rect x="636.3" y="883.0" width="8.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="639.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.66%)</title><rect x="636.8" y="867.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 0.66%)</title><rect x="636.8" y="851.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="639.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (62 samples, 0.60%)</title><rect x="637.4" y="835.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="640.4" y="846.0"></text>
</g>
<g>
<title>do_futex (45 samples, 0.44%)</title><rect x="637.9" y="819.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="640.9" y="830.0"></text>
</g>
<g>
<title>futex_wait (44 samples, 0.43%)</title><rect x="638.0" y="803.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.0" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.12%)</title><rect x="638.5" y="787.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="641.5" y="798.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (6 samples, 0.06%)</title><rect x="638.8" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.05%)</title><rect x="638.8" y="755.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.8" y="766.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="639.5" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="642.5" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (22 samples, 0.21%)</title><rect x="639.8" y="787.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.8" y="798.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.05%)</title><rect x="641.7" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.7" y="782.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (4 samples, 0.04%)</title><rect x="642.4" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.4" y="798.0"></text>
</g>
<g>
<title>__hrtimer_init (3 samples, 0.03%)</title><rect x="642.5" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.5" y="782.0"></text>
</g>
<g>
<title>get_timespec64 (13 samples, 0.13%)</title><rect x="643.1" y="819.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="646.1" y="830.0"></text>
</g>
<g>
<title>_copy_from_user (12 samples, 0.12%)</title><rect x="643.2" y="803.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="646.2" y="814.0"></text>
</g>
<g>
<title>copy_user_generic_string (11 samples, 0.11%)</title><rect x="643.3" y="787.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="646.3" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="644.7" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="647.7" y="926.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="644.7" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="647.7" y="910.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.03%)</title><rect x="644.7" y="883.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="647.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (756 samples, 7.34%)</title><rect x="645.1" y="963.0" width="86.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.1" y="974.0">jdk/intern..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.10%)</title><rect x="647.7" y="947.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="650.7" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.07%)</title><rect x="647.9" y="931.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="650.9" y="942.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.05%)</title><rect x="648.1" y="915.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="651.1" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (14 samples, 0.14%)</title><rect x="649.3" y="947.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (220 samples, 2.13%)</title><rect x="651.0" y="947.0" width="25.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.0" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$469/46107878.accept (204 samples, 1.98%)</title><rect x="651.1" y="931.0" width="23.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.1" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (204 samples, 1.98%)</title><rect x="651.1" y="915.0" width="23.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.1" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (204 samples, 1.98%)</title><rect x="651.1" y="899.0" width="23.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.1" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (204 samples, 1.98%)</title><rect x="651.1" y="883.0" width="23.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.1" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (204 samples, 1.98%)</title><rect x="651.1" y="867.0" width="23.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.1" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (14 samples, 0.14%)</title><rect x="651.1" y="851.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.07%)</title><rect x="651.9" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.07%)</title><rect x="651.9" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.07%)</title><rect x="651.9" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.07%)</title><rect x="651.9" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.06%)</title><rect x="652.0" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (190 samples, 1.84%)</title><rect x="652.7" y="851.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.7" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (190 samples, 1.84%)</title><rect x="652.7" y="835.0" width="21.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.7" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (190 samples, 1.84%)</title><rect x="652.7" y="819.0" width="21.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.7" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (189 samples, 1.83%)</title><rect x="652.8" y="803.0" width="21.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (189 samples, 1.83%)</title><rect x="652.8" y="787.0" width="21.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/73043551.run (187 samples, 1.81%)</title><rect x="653.0" y="771.0" width="21.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.0" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (187 samples, 1.81%)</title><rect x="653.0" y="755.0" width="21.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.0" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (29 samples, 0.28%)</title><rect x="653.9" y="739.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (29 samples, 0.28%)</title><rect x="653.9" y="723.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (29 samples, 0.28%)</title><rect x="653.9" y="707.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.28%)</title><rect x="653.9" y="691.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.28%)</title><rect x="653.9" y="675.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.24%)</title><rect x="654.4" y="659.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.22%)</title><rect x="654.6" y="643.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.21%)</title><rect x="654.7" y="627.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.07%)</title><rect x="655.0" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.07%)</title><rect x="655.0" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.07%)</title><rect x="655.0" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.07%)</title><rect x="655.0" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="655.0" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.11%)</title><rect x="656.0" y="611.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.11%)</title><rect x="656.0" y="595.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.11%)</title><rect x="656.0" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.10%)</title><rect x="656.1" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.10%)</title><rect x="656.1" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.1" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.10%)</title><rect x="656.1" y="531.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="659.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.10%)</title><rect x="656.1" y="515.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="659.1" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.10%)</title><rect x="656.1" y="499.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="659.1" y="510.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.10%)</title><rect x="656.1" y="483.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="659.1" y="494.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.10%)</title><rect x="656.1" y="467.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="659.1" y="478.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.10%)</title><rect x="656.1" y="451.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.1" y="462.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.08%)</title><rect x="656.3" y="435.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.3" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.07%)</title><rect x="656.4" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.07%)</title><rect x="656.4" y="403.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="659.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (12 samples, 0.12%)</title><rect x="657.2" y="739.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (10 samples, 0.10%)</title><rect x="657.5" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.08%)</title><rect x="657.7" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.04%)</title><rect x="658.2" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.04%)</title><rect x="658.2" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.04%)</title><rect x="658.2" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.04%)</title><rect x="658.2" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (138 samples, 1.34%)</title><rect x="658.6" y="739.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (6 samples, 0.06%)</title><rect x="659.1" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="659.1" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (128 samples, 1.24%)</title><rect x="659.8" y="723.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.05%)</title><rect x="659.8" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="659.8" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.05%)</title><rect x="659.8" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (123 samples, 1.19%)</title><rect x="660.3" y="707.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (122 samples, 1.18%)</title><rect x="660.5" y="691.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.07%)</title><rect x="660.5" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.07%)</title><rect x="660.5" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.5" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.07%)</title><rect x="660.5" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (112 samples, 1.09%)</title><rect x="661.3" y="675.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (112 samples, 1.09%)</title><rect x="661.3" y="659.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read0 (104 samples, 1.01%)</title><rect x="662.2" y="643.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.2" y="654.0"></text>
</g>
<g>
<title>__libc_read (101 samples, 0.98%)</title><rect x="662.5" y="627.0" width="11.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="665.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 0.96%)</title><rect x="662.7" y="611.0" width="11.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="665.7" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.96%)</title><rect x="662.7" y="595.0" width="11.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.7" y="606.0"></text>
</g>
<g>
<title>ksys_read (95 samples, 0.92%)</title><rect x="663.2" y="579.0" width="10.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.2" y="590.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.03%)</title><rect x="663.2" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="666.2" y="574.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="663.2" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="666.2" y="558.0"></text>
</g>
<g>
<title>vfs_read (90 samples, 0.87%)</title><rect x="663.8" y="563.0" width="10.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="666.8" y="574.0"></text>
</g>
<g>
<title>new_sync_read (76 samples, 0.74%)</title><rect x="664.7" y="547.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="667.7" y="558.0"></text>
</g>
<g>
<title>sock_read_iter (74 samples, 0.72%)</title><rect x="664.9" y="531.0" width="8.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="667.9" y="542.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (54 samples, 0.52%)</title><rect x="665.6" y="515.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.6" y="526.0"></text>
</g>
<g>
<title>tcp_recvmsg (54 samples, 0.52%)</title><rect x="665.6" y="499.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.6" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.03%)</title><rect x="667.4" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="670.4" y="494.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.03%)</title><rect x="667.4" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="670.4" y="478.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.03%)</title><rect x="667.4" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.4" y="462.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.04%)</title><rect x="668.4" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.4" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.03%)</title><rect x="668.5" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="671.5" y="478.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.15%)</title><rect x="668.8" y="483.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.8" y="494.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.15%)</title><rect x="668.8" y="467.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.8" y="478.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.05%)</title><rect x="669.6" y="451.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="672.6" y="462.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.05%)</title><rect x="669.6" y="435.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="672.6" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.05%)</title><rect x="669.6" y="419.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.6" y="430.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.03%)</title><rect x="670.2" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="673.2" y="462.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="670.2" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.2" y="446.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.06%)</title><rect x="670.5" y="483.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.5" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.05%)</title><rect x="671.2" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="674.2" y="494.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.04%)</title><rect x="671.3" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.3" y="478.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.04%)</title><rect x="671.3" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.3" y="462.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.14%)</title><rect x="671.8" y="515.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.8" y="526.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.13%)</title><rect x="671.9" y="499.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="674.9" y="510.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.10%)</title><rect x="672.2" y="483.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="675.2" y="494.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.06%)</title><rect x="673.4" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="676.4" y="558.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.04%)</title><rect x="673.6" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="674.1" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.1" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="674.1" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="674.1" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="674.1" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$477/970375239.accept (14 samples, 0.14%)</title><rect x="674.4" y="931.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (14 samples, 0.14%)</title><rect x="674.4" y="915.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$468/516619057.run (14 samples, 0.14%)</title><rect x="674.4" y="899.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (14 samples, 0.14%)</title><rect x="674.4" y="883.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (11 samples, 0.11%)</title><rect x="674.8" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.04%)</title><rect x="675.6" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.04%)</title><rect x="675.6" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="675.6" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="675.6" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (29 samples, 0.28%)</title><rect x="676.3" y="947.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.17%)</title><rect x="677.5" y="931.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (18 samples, 0.17%)</title><rect x="677.5" y="915.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (18 samples, 0.17%)</title><rect x="677.5" y="899.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.17%)</title><rect x="677.5" y="883.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.5" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (15 samples, 0.15%)</title><rect x="677.5" y="867.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (11 samples, 0.11%)</title><rect x="677.5" y="851.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.05%)</title><rect x="678.2" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.03%)</title><rect x="678.8" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.03%)</title><rect x="678.8" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.8" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.03%)</title><rect x="678.8" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.03%)</title><rect x="678.8" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$592/2050888660.applyAsLong (3 samples, 0.03%)</title><rect x="678.8" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.03%)</title><rect x="678.8" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.03%)</title><rect x="679.2" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (152 samples, 1.47%)</title><rect x="679.6" y="947.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$278/1695876727.run (106 samples, 1.03%)</title><rect x="679.6" y="931.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (106 samples, 1.03%)</title><rect x="679.6" y="915.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (106 samples, 1.03%)</title><rect x="679.6" y="899.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (101 samples, 0.98%)</title><rect x="680.0" y="883.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.0" y="894.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="680.4" y="867.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="683.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 0.06%)</title><rect x="680.8" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (88 samples, 0.85%)</title><rect x="681.5" y="867.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (88 samples, 0.85%)</title><rect x="681.5" y="851.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/73043551.run (79 samples, 0.77%)</title><rect x="682.2" y="835.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (78 samples, 0.76%)</title><rect x="682.3" y="819.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (76 samples, 0.74%)</title><rect x="682.6" y="803.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (65 samples, 0.63%)</title><rect x="683.8" y="787.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (17 samples, 0.16%)</title><rect x="683.9" y="771.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (17 samples, 0.16%)</title><rect x="683.9" y="755.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (17 samples, 0.16%)</title><rect x="683.9" y="739.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="684.0" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726950788.invoke (5 samples, 0.05%)</title><rect x="684.0" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1527430292.invoke (5 samples, 0.05%)</title><rect x="684.0" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="684.0" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.05%)</title><rect x="684.0" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.05%)</title><rect x="684.0" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (5 samples, 0.05%)</title><rect x="684.0" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (11 samples, 0.11%)</title><rect x="684.6" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (11 samples, 0.11%)</title><rect x="684.6" y="707.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (10 samples, 0.10%)</title><rect x="684.7" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.06%)</title><rect x="685.2" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.04%)</title><rect x="685.2" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.04%)</title><rect x="685.2" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.04%)</title><rect x="685.2" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (47 samples, 0.46%)</title><rect x="685.9" y="771.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.27%)</title><rect x="688.0" y="755.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.24%)</title><rect x="688.4" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.24%)</title><rect x="688.4" y="723.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.23%)</title><rect x="688.5" y="707.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (24 samples, 0.23%)</title><rect x="688.5" y="691.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.06%)</title><rect x="689.0" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.06%)</title><rect x="689.0" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.06%)</title><rect x="689.0" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.06%)</title><rect x="689.0" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.06%)</title><rect x="689.0" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="689.7" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="689.7" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.11%)</title><rect x="690.0" y="675.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.11%)</title><rect x="690.0" y="659.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.11%)</title><rect x="690.0" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.10%)</title><rect x="690.1" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.10%)</title><rect x="690.1" y="611.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.1" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.10%)</title><rect x="690.1" y="595.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="693.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.09%)</title><rect x="690.2" y="579.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.09%)</title><rect x="690.2" y="563.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.2" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.09%)</title><rect x="690.2" y="547.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="693.2" y="558.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.09%)</title><rect x="690.2" y="531.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="693.2" y="542.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.09%)</title><rect x="690.2" y="515.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.2" y="526.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.07%)</title><rect x="690.5" y="499.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.5" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.07%)</title><rect x="690.5" y="483.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.07%)</title><rect x="690.5" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.03%)</title><rect x="691.3" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$299/881263769.run (46 samples, 0.45%)</title><rect x="691.7" y="931.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (46 samples, 0.45%)</title><rect x="691.7" y="915.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (39 samples, 0.38%)</title><rect x="692.4" y="899.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 0.38%)</title><rect x="692.4" y="883.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (39 samples, 0.38%)</title><rect x="692.4" y="867.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (12 samples, 0.12%)</title><rect x="693.3" y="851.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.12%)</title><rect x="693.3" y="835.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.12%)</title><rect x="693.3" y="819.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (12 samples, 0.12%)</title><rect x="693.3" y="803.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.12%)</title><rect x="693.3" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="694.7" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="694.7" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="694.7" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.03%)</title><rect x="694.7" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.03%)</title><rect x="694.7" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="694.7" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.16%)</title><rect x="695.0" y="851.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.16%)</title><rect x="695.0" y="835.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.16%)</title><rect x="695.0" y="819.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.14%)</title><rect x="695.3" y="803.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.14%)</title><rect x="695.3" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.3" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.12%)</title><rect x="695.5" y="771.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="698.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.11%)</title><rect x="695.6" y="755.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.11%)</title><rect x="695.6" y="739.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.11%)</title><rect x="695.6" y="723.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="698.6" y="734.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.11%)</title><rect x="695.6" y="707.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.11%)</title><rect x="695.6" y="691.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.6" y="702.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.11%)</title><rect x="695.6" y="675.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.11%)</title><rect x="695.6" y="659.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.6" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.11%)</title><rect x="695.6" y="643.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (25 samples, 0.24%)</title><rect x="697.0" y="947.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.0" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.now (11 samples, 0.11%)</title><rect x="697.1" y="931.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.1" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (11 samples, 0.11%)</title><rect x="697.1" y="915.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.07%)</title><rect x="697.6" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.6" y="910.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.03%)</title><rect x="698.0" y="883.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="701.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (13 samples, 0.13%)</title><rect x="698.4" y="931.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.4" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="698.7" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="701.7" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.05%)</title><rect x="698.8" y="899.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="701.8" y="910.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="699.0" y="883.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="702.0" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.04%)</title><rect x="699.4" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (21 samples, 0.20%)</title><rect x="700.0" y="947.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.add (21 samples, 0.20%)</title><rect x="700.0" y="931.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.20%)</title><rect x="700.0" y="915.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.06%)</title><rect x="701.7" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (30 samples, 0.29%)</title><rect x="702.4" y="947.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.4" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="702.9" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="705.9" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="703.0" y="915.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="706.0" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.10%)</title><rect x="703.6" y="931.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.6" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.10%)</title><rect x="703.6" y="915.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (10 samples, 0.10%)</title><rect x="703.6" y="899.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.6" y="910.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.07%)</title><rect x="704.0" y="883.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="707.0" y="894.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (6 samples, 0.06%)</title><rect x="704.1" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="707.1" y="878.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="704.3" y="851.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="707.3" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (5 samples, 0.05%)</title><rect x="704.8" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (5 samples, 0.05%)</title><rect x="704.8" y="915.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (5 samples, 0.05%)</title><rect x="704.8" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (4 samples, 0.04%)</title><rect x="705.3" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.04%)</title><rect x="705.3" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.3" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.04%)</title><rect x="705.3" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.04%)</title><rect x="705.3" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (182 samples, 1.77%)</title><rect x="705.8" y="947.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (182 samples, 1.77%)</title><rect x="705.8" y="931.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (178 samples, 1.73%)</title><rect x="706.3" y="915.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (95 samples, 0.92%)</title><rect x="706.6" y="899.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.6" y="910.0"></text>
</g>
<g>
<title>epoll_wait (91 samples, 0.88%)</title><rect x="706.9" y="883.0" width="10.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="709.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 0.86%)</title><rect x="707.2" y="867.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 0.86%)</title><rect x="707.2" y="851.0" width="10.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (86 samples, 0.83%)</title><rect x="707.5" y="835.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.5" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (86 samples, 0.83%)</title><rect x="707.5" y="819.0" width="9.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.5" y="830.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.04%)</title><rect x="707.6" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="710.6" y="814.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.04%)</title><rect x="707.6" y="787.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.6" y="798.0"></text>
</g>
<g>
<title>ep_poll (80 samples, 0.78%)</title><rect x="708.1" y="803.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (54 samples, 0.52%)</title><rect x="708.4" y="787.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.4" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (38 samples, 0.37%)</title><rect x="709.6" y="771.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="712.6" y="782.0"></text>
</g>
<g>
<title>__list_del_entry_valid (5 samples, 0.05%)</title><rect x="710.7" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="713.7" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (23 samples, 0.22%)</title><rect x="711.3" y="755.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="714.3" y="766.0"></text>
</g>
<g>
<title>pipe_poll (8 samples, 0.08%)</title><rect x="711.7" y="739.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="714.7" y="750.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.11%)</title><rect x="712.7" y="739.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.7" y="750.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.07%)</title><rect x="713.1" y="723.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="716.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (4 samples, 0.04%)</title><rect x="713.5" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.5" y="718.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.04%)</title><rect x="713.9" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.9" y="782.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.03%)</title><rect x="714.6" y="787.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="717.6" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.11%)</title><rect x="715.0" y="787.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="718.0" y="798.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (4 samples, 0.04%)</title><rect x="715.1" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.1" y="782.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.05%)</title><rect x="715.5" y="771.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.5" y="782.0"></text>
</g>
<g>
<title>select_estimate_accuracy (9 samples, 0.09%)</title><rect x="716.2" y="787.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="719.2" y="798.0"></text>
</g>
<g>
<title>ktime_get_ts64 (8 samples, 0.08%)</title><rect x="716.2" y="771.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="719.2" y="782.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.07%)</title><rect x="716.3" y="755.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="719.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (64 samples, 0.62%)</title><rect x="717.5" y="899.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.04%)</title><rect x="717.7" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (51 samples, 0.49%)</title><rect x="718.4" y="883.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (49 samples, 0.48%)</title><rect x="718.6" y="867.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.6" y="878.0"></text>
</g>
<g>
<title>__libc_read (48 samples, 0.47%)</title><rect x="718.7" y="851.0" width="5.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="721.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.43%)</title><rect x="719.2" y="835.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="722.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.43%)</title><rect x="719.2" y="819.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.2" y="830.0"></text>
</g>
<g>
<title>ksys_read (38 samples, 0.37%)</title><rect x="719.9" y="803.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.9" y="814.0"></text>
</g>
<g>
<title>vfs_read (36 samples, 0.35%)</title><rect x="720.1" y="787.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.1" y="798.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.27%)</title><rect x="720.3" y="771.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="723.3" y="782.0"></text>
</g>
<g>
<title>pipe_read (24 samples, 0.23%)</title><rect x="720.8" y="755.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.8" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.04%)</title><rect x="721.7" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="724.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.04%)</title><rect x="721.7" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.7" y="734.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="722.4" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.4" y="750.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.05%)</title><rect x="723.0" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="726.0" y="750.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.04%)</title><rect x="723.1" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.1" y="734.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.03%)</title><rect x="723.2" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.2" y="718.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.06%)</title><rect x="723.5" y="771.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.5" y="782.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.03%)</title><rect x="723.7" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.05%)</title><rect x="724.2" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.2" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.05%)</title><rect x="724.2" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.05%)</title><rect x="724.2" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="724.5" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (10 samples, 0.10%)</title><rect x="724.8" y="899.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.8" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (5 samples, 0.05%)</title><rect x="725.4" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.04%)</title><rect x="725.9" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (35 samples, 0.34%)</title><rect x="726.6" y="947.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (35 samples, 0.34%)</title><rect x="726.6" y="931.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (34 samples, 0.33%)</title><rect x="726.7" y="915.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (21 samples, 0.20%)</title><rect x="726.7" y="899.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.7" y="910.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 0.18%)</title><rect x="727.0" y="883.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="730.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.16%)</title><rect x="727.2" y="867.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="730.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.16%)</title><rect x="727.2" y="851.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 0.14%)</title><rect x="727.5" y="835.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.5" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.14%)</title><rect x="727.5" y="819.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.5" y="830.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.14%)</title><rect x="727.5" y="803.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="730.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.14%)</title><rect x="727.5" y="787.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.10%)</title><rect x="728.0" y="771.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.05%)</title><rect x="728.6" y="755.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="731.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11 samples, 0.11%)</title><rect x="729.2" y="899.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (5 samples, 0.05%)</title><rect x="729.5" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (5 samples, 0.05%)</title><rect x="729.5" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="878.0"></text>
</g>
<g>
<title>__libc_read (5 samples, 0.05%)</title><rect x="729.5" y="851.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="732.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="729.5" y="835.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="732.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="729.5" y="819.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.5" y="830.0"></text>
</g>
<g>
<title>ksys_read (4 samples, 0.04%)</title><rect x="729.6" y="803.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.6" y="814.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.04%)</title><rect x="729.6" y="787.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.6" y="798.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="729.6" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.6" y="782.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.03%)</title><rect x="729.7" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="732.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="730.1" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (3 samples, 0.03%)</title><rect x="730.1" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (3 samples, 0.03%)</title><rect x="730.1" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.03%)</title><rect x="730.1" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.06%)</title><rect x="730.6" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.6" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.06%)</title><rect x="730.6" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.6" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.06%)</title><rect x="730.6" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (3 samples, 0.03%)</title><rect x="731.3" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.3" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,893 samples, 18.37%)</title><rect x="731.9" y="963.0" width="216.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.9" y="974.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.04%)</title><rect x="732.9" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="733.4" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="733.4" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.03%)</title><rect x="733.4" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (84 samples, 0.82%)</title><rect x="733.7" y="947.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (77 samples, 0.75%)</title><rect x="734.5" y="931.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.5" y="942.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.07%)</title><rect x="735.6" y="915.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="738.6" y="926.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.04%)</title><rect x="735.9" y="899.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="738.9" y="910.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.04%)</title><rect x="735.9" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="738.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (60 samples, 0.58%)</title><rect x="736.5" y="915.0" width="6.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="739.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.51%)</title><rect x="737.3" y="899.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="740.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 0.51%)</title><rect x="737.3" y="883.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (46 samples, 0.45%)</title><rect x="738.1" y="867.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="741.1" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (45 samples, 0.44%)</title><rect x="738.2" y="851.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.2" y="862.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.07%)</title><rect x="738.3" y="835.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="741.3" y="846.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.06%)</title><rect x="738.4" y="819.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.4" y="830.0"></text>
</g>
<g>
<title>ep_poll (37 samples, 0.36%)</title><rect x="739.1" y="835.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="742.1" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.22%)</title><rect x="739.9" y="819.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="742.9" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.19%)</title><rect x="740.3" y="803.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="743.3" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (18 samples, 0.17%)</title><rect x="740.5" y="787.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.5" y="798.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.15%)</title><rect x="740.8" y="771.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.8" y="782.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.09%)</title><rect x="741.5" y="755.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.5" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (4 samples, 0.04%)</title><rect x="742.1" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.07%)</title><rect x="742.5" y="819.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.5" y="830.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.05%)</title><rect x="742.8" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="745.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,789 samples, 17.36%)</title><rect x="743.3" y="947.0" width="204.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.3" y="958.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,782 samples, 17.29%)</title><rect x="744.2" y="931.0" width="204.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.2" y="942.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,206 samples, 11.70%)</title><rect x="744.5" y="915.0" width="138.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.5" y="926.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,024 samples, 9.94%)</title><rect x="746.3" y="899.0" width="117.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.3" y="910.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,010 samples, 9.80%)</title><rect x="747.9" y="883.0" width="115.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.9" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (983 samples, 9.54%)</title><rect x="748.2" y="867.0" width="112.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.2" y="878.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.11%)</title><rect x="748.3" y="851.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.25%)</title><rect x="749.5" y="851.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.24%)</title><rect x="749.6" y="835.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.08%)</title><rect x="750.4" y="819.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.08%)</title><rect x="750.4" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.07%)</title><rect x="750.6" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.08%)</title><rect x="751.6" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="752.2" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="752.2" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="752.2" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (943 samples, 9.15%)</title><rect x="752.7" y="851.0" width="108.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.7" y="862.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.putImpl (943 samples, 9.15%)</title><rect x="752.7" y="835.0" width="108.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.7" y="846.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Long.toString (6 samples, 0.06%)</title><rect x="753.9" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (6 samples, 0.06%)</title><rect x="753.9" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.07%)</title><rect x="754.6" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726950788.invoke (7 samples, 0.07%)</title><rect x="754.6" y="803.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/632587706.invoke (5 samples, 0.05%)</title><rect x="754.8" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="754.8" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (5 samples, 0.05%)</title><rect x="754.8" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (5 samples, 0.05%)</title><rect x="754.8" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (7 samples, 0.07%)</title><rect x="756.1" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (7 samples, 0.07%)</title><rect x="756.1" y="803.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.05%)</title><rect x="756.1" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/360067785.test (4 samples, 0.04%)</title><rect x="756.1" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.04%)</title><rect x="756.1" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.1" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.04%)</title><rect x="756.1" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.1" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.04%)</title><rect x="756.1" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.04%)</title><rect x="756.1" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (18 samples, 0.17%)</title><rect x="756.9" y="819.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (14 samples, 0.14%)</title><rect x="757.3" y="803.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (14 samples, 0.14%)</title><rect x="757.3" y="787.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (6 samples, 0.06%)</title><rect x="757.4" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/360067785.test (5 samples, 0.05%)</title><rect x="757.4" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.05%)</title><rect x="757.4" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.4" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.05%)</title><rect x="757.4" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.03%)</title><rect x="757.7" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.03%)</title><rect x="757.7" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.03%)</title><rect x="757.7" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.03%)</title><rect x="757.7" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (7 samples, 0.07%)</title><rect x="758.1" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.1" y="782.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (5 samples, 0.05%)</title><rect x="758.3" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.03%)</title><rect x="758.3" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.03%)</title><rect x="758.3" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.03%)</title><rect x="758.3" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (288 samples, 2.79%)</title><rect x="758.9" y="819.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.9" y="830.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.04%)</title><rect x="759.0" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="759.0" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="759.0" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (268 samples, 2.60%)</title><rect x="759.5" y="803.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.5" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 0.23%)</title><rect x="759.8" y="787.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (19 samples, 0.18%)</title><rect x="760.4" y="771.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (14 samples, 0.14%)</title><rect x="760.4" y="755.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="762.0" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="762.0" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="762.0" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (241 samples, 2.34%)</title><rect x="762.6" y="787.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.6" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (241 samples, 2.34%)</title><rect x="762.6" y="771.0" width="27.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (236 samples, 2.29%)</title><rect x="763.2" y="755.0" width="27.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.2" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (236 samples, 2.29%)</title><rect x="763.2" y="739.0" width="27.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.10%)</title><rect x="764.0" y="723.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="767.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="764.8" y="707.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="767.8" y="718.0"></text>
</g>
<g>
<title>__libc_send (215 samples, 2.09%)</title><rect x="765.1" y="723.0" width="24.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="768.1" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (212 samples, 2.06%)</title><rect x="765.4" y="707.0" width="24.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="768.4" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (212 samples, 2.06%)</title><rect x="765.4" y="691.0" width="24.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.4" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (204 samples, 1.98%)</title><rect x="766.4" y="675.0" width="23.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="769.4" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (204 samples, 1.98%)</title><rect x="766.4" y="659.0" width="23.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="769.4" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (195 samples, 1.89%)</title><rect x="766.7" y="643.0" width="22.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.7" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (3 samples, 0.03%)</title><rect x="766.9" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.9" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.03%)</title><rect x="767.3" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.3" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (187 samples, 1.81%)</title><rect x="767.6" y="627.0" width="21.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="770.6" y="638.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (184 samples, 1.79%)</title><rect x="768.0" y="611.0" width="21.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.0" y="622.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (151 samples, 1.47%)</title><rect x="768.8" y="595.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="771.8" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (150 samples, 1.46%)</title><rect x="768.9" y="579.0" width="17.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.9" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (132 samples, 1.28%)</title><rect x="769.0" y="563.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="772.0" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (119 samples, 1.15%)</title><rect x="769.3" y="547.0" width="13.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.3" y="558.0"></text>
</g>
<g>
<title>ip_output (116 samples, 1.13%)</title><rect x="769.7" y="531.0" width="13.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.7" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (110 samples, 1.07%)</title><rect x="770.0" y="515.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.0" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.13%)</title><rect x="770.1" y="499.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.1" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.09%)</title><rect x="770.5" y="483.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.5" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.08%)</title><rect x="770.6" y="467.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.6" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (96 samples, 0.93%)</title><rect x="771.6" y="499.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.6" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.0 (94 samples, 0.91%)</title><rect x="771.9" y="483.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="774.9" y="494.0"></text>
</g>
<g>
<title>do_softirq_own_stack (88 samples, 0.85%)</title><rect x="772.5" y="467.0" width="10.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="775.5" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (88 samples, 0.85%)</title><rect x="772.5" y="451.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="775.5" y="462.0"></text>
</g>
<g>
<title>net_rx_action (84 samples, 0.82%)</title><rect x="773.0" y="435.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="776.0" y="446.0"></text>
</g>
<g>
<title>process_backlog (80 samples, 0.78%)</title><rect x="773.5" y="419.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="776.5" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (75 samples, 0.73%)</title><rect x="774.0" y="403.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="777.0" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.05%)</title><rect x="774.0" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.0" y="398.0"></text>
</g>
<g>
<title>ip_rcv (70 samples, 0.68%)</title><rect x="774.6" y="387.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="777.6" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (69 samples, 0.67%)</title><rect x="774.7" y="371.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="777.7" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (69 samples, 0.67%)</title><rect x="774.7" y="355.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="777.7" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (69 samples, 0.67%)</title><rect x="774.7" y="339.0" width="7.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (65 samples, 0.63%)</title><rect x="775.2" y="323.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="778.2" y="334.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.03%)</title><rect x="775.5" y="307.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="778.5" y="318.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.08%)</title><rect x="776.0" y="307.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.0" y="318.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.07%)</title><rect x="776.1" y="291.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.1" y="302.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.07%)</title><rect x="776.1" y="275.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.1" y="286.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (6 samples, 0.06%)</title><rect x="776.2" y="259.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="779.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (49 samples, 0.48%)</title><rect x="776.9" y="307.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.9" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (47 samples, 0.46%)</title><rect x="777.1" y="291.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="780.1" y="302.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.06%)</title><rect x="777.5" y="275.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.5" y="286.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.06%)</title><rect x="777.5" y="259.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="780.5" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.06%)</title><rect x="777.5" y="243.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.5" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (37 samples, 0.36%)</title><rect x="778.2" y="275.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.2" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 0.32%)</title><rect x="778.6" y="259.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.6" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.30%)</title><rect x="778.8" y="243.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="782.6" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.04%)</title><rect x="783.0" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="786.0" y="558.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="783.1" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.1" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.03%)</title><rect x="783.4" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="786.4" y="558.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="784.1" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="787.1" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.09%)</title><rect x="784.5" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.5" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="784.8" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.8" y="558.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.04%)</title><rect x="784.8" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.8" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="784.9" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.9" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="785.5" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.5" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.03%)</title><rect x="786.1" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.1" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (8 samples, 0.08%)</title><rect x="786.4" y="595.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.4" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7 samples, 0.07%)</title><rect x="786.5" y="579.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="789.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.09%)</title><rect x="787.3" y="595.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="790.3" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.08%)</title><rect x="787.4" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="790.4" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="788.3" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="791.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.06%)</title><rect x="789.0" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.06%)</title><rect x="789.0" y="627.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="792.0" y="638.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.05%)</title><rect x="789.1" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="792.1" y="622.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="789.8" y="723.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="792.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.15%)</title><rect x="790.2" y="803.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.10%)</title><rect x="790.8" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.10%)</title><rect x="790.8" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getFuturesResponse (357 samples, 3.46%)</title><rect x="792.0" y="819.0" width="40.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.0" y="830.0">ru/..</text>
</g>
<g>
<title>java/net/URI.create (64 samples, 0.62%)</title><rect x="792.6" y="803.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.6" y="814.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (64 samples, 0.62%)</title><rect x="792.6" y="787.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.6" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (49 samples, 0.48%)</title><rect x="794.3" y="771.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.3" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (44 samples, 0.43%)</title><rect x="794.9" y="755.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.9" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (5 samples, 0.05%)</title><rect x="795.6" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.6" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.05%)</title><rect x="795.6" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.6" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (32 samples, 0.31%)</title><rect x="796.1" y="739.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.1" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (12 samples, 0.12%)</title><rect x="797.2" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.2" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.05%)</title><rect x="797.7" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.7" y="718.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.03%)</title><rect x="798.0" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.0" y="702.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (11 samples, 0.11%)</title><rect x="798.5" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (48 samples, 0.47%)</title><rect x="799.9" y="803.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (45 samples, 0.44%)</title><rect x="800.3" y="787.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (44 samples, 0.43%)</title><rect x="800.3" y="771.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (44 samples, 0.43%)</title><rect x="800.3" y="755.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (40 samples, 0.39%)</title><rect x="800.7" y="739.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="803.7" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (37 samples, 0.36%)</title><rect x="800.8" y="723.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.8" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (36 samples, 0.35%)</title><rect x="800.9" y="707.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.04%)</title><rect x="801.4" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.4" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (4 samples, 0.04%)</title><rect x="801.4" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.04%)</title><rect x="801.4" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.06%)</title><rect x="802.0" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.0" y="702.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="802.3" y="675.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="805.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (18 samples, 0.17%)</title><rect x="802.7" y="691.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.7" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (17 samples, 0.16%)</title><rect x="802.8" y="675.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.8" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (17 samples, 0.16%)</title><rect x="802.8" y="659.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/360067785.test (12 samples, 0.12%)</title><rect x="803.3" y="643.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (12 samples, 0.12%)</title><rect x="803.3" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.3" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (12 samples, 0.12%)</title><rect x="803.3" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (12 samples, 0.12%)</title><rect x="803.3" y="595.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (12 samples, 0.12%)</title><rect x="803.3" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.12%)</title><rect x="803.3" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (12 samples, 0.12%)</title><rect x="803.3" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="804.4" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="804.4" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.03%)</title><rect x="804.4" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.proxyAsync (238 samples, 2.31%)</title><rect x="805.6" y="803.0" width="27.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.6" y="814.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.04%)</title><rect x="805.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.04%)</title><rect x="805.6" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (234 samples, 2.27%)</title><rect x="806.1" y="787.0" width="26.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.1" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (234 samples, 2.27%)</title><rect x="806.1" y="771.0" width="26.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.1" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (234 samples, 2.27%)</title><rect x="806.1" y="755.0" width="26.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.1" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (229 samples, 2.22%)</title><rect x="806.7" y="739.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.7" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (88 samples, 0.85%)</title><rect x="807.7" y="723.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (13 samples, 0.13%)</title><rect x="807.7" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.08%)</title><rect x="807.7" y="691.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.7" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.08%)</title><rect x="807.7" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.08%)</title><rect x="807.7" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.04%)</title><rect x="808.2" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.04%)</title><rect x="808.2" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.05%)</title><rect x="808.6" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.03%)</title><rect x="808.8" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.03%)</title><rect x="808.8" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.03%)</title><rect x="808.8" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.03%)</title><rect x="808.8" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (39 samples, 0.38%)</title><rect x="809.2" y="707.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.2" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (39 samples, 0.38%)</title><rect x="809.2" y="691.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.2" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (38 samples, 0.37%)</title><rect x="809.3" y="675.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (38 samples, 0.37%)</title><rect x="809.3" y="659.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.3" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (38 samples, 0.37%)</title><rect x="809.3" y="643.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (35 samples, 0.34%)</title><rect x="809.5" y="627.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (21 samples, 0.20%)</title><rect x="809.6" y="611.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.6" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (21 samples, 0.20%)</title><rect x="809.6" y="595.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (21 samples, 0.20%)</title><rect x="809.6" y="579.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1860250540.test (17 samples, 0.16%)</title><rect x="810.1" y="563.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (17 samples, 0.16%)</title><rect x="810.1" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/360067785.test (13 samples, 0.13%)</title><rect x="810.1" y="531.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (13 samples, 0.13%)</title><rect x="810.1" y="515.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (13 samples, 0.13%)</title><rect x="810.1" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (13 samples, 0.13%)</title><rect x="810.1" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (13 samples, 0.13%)</title><rect x="810.1" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.10%)</title><rect x="810.4" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.10%)</title><rect x="810.4" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.06%)</title><rect x="810.9" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.06%)</title><rect x="810.9" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.06%)</title><rect x="810.9" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (3 samples, 0.03%)</title><rect x="811.7" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.10%)</title><rect x="812.0" y="611.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.0" y="622.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="812.4" y="595.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="815.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.03%)</title><rect x="813.2" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="816.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (28 samples, 0.27%)</title><rect x="813.8" y="707.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.8" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (28 samples, 0.27%)</title><rect x="813.8" y="691.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.03%)</title><rect x="813.9" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="813.9" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="813.9" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.04%)</title><rect x="814.2" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.04%)</title><rect x="814.2" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.2" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.19%)</title><rect x="814.7" y="675.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.7" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (20 samples, 0.19%)</title><rect x="814.7" y="659.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.7" y="670.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.19%)</title><rect x="814.7" y="643.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.7" y="654.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (19 samples, 0.18%)</title><rect x="814.8" y="627.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.8" y="638.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (12 samples, 0.12%)</title><rect x="815.6" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.6" y="622.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (10 samples, 0.10%)</title><rect x="815.8" y="595.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (10 samples, 0.10%)</title><rect x="815.8" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (10 samples, 0.10%)</title><rect x="815.8" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (10 samples, 0.10%)</title><rect x="815.8" y="547.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.07%)</title><rect x="817.0" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="817.3" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="817.3" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="817.3" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="817.3" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (47 samples, 0.46%)</title><rect x="817.8" y="723.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (5 samples, 0.05%)</title><rect x="818.7" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3 samples, 0.03%)</title><rect x="819.3" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (31 samples, 0.30%)</title><rect x="819.6" y="707.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (28 samples, 0.27%)</title><rect x="819.9" y="691.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5 samples, 0.05%)</title><rect x="820.2" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.04%)</title><rect x="820.2" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.04%)</title><rect x="820.2" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.2" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (21 samples, 0.20%)</title><rect x="820.7" y="675.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.7" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (18 samples, 0.17%)</title><rect x="821.1" y="659.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.1" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (7 samples, 0.07%)</title><rect x="821.1" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.1" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (7 samples, 0.07%)</title><rect x="821.1" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.1" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (7 samples, 0.07%)</title><rect x="821.1" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (7 samples, 0.07%)</title><rect x="821.1" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (7 samples, 0.07%)</title><rect x="821.1" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (3 samples, 0.03%)</title><rect x="821.6" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (7 samples, 0.07%)</title><rect x="821.9" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (85 samples, 0.82%)</title><rect x="823.2" y="723.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (78 samples, 0.76%)</title><rect x="823.2" y="707.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (78 samples, 0.76%)</title><rect x="823.2" y="691.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (78 samples, 0.76%)</title><rect x="823.2" y="675.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (13 samples, 0.13%)</title><rect x="823.7" y="659.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (13 samples, 0.13%)</title><rect x="823.7" y="643.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (13 samples, 0.13%)</title><rect x="823.7" y="627.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (13 samples, 0.13%)</title><rect x="823.7" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.13%)</title><rect x="823.7" y="595.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.10%)</title><rect x="825.2" y="659.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.10%)</title><rect x="825.2" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.09%)</title><rect x="825.2" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.09%)</title><rect x="825.2" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.09%)</title><rect x="825.2" y="595.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="825.9" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 0.49%)</title><rect x="826.4" y="659.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 0.49%)</title><rect x="826.4" y="643.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (50 samples, 0.49%)</title><rect x="826.4" y="627.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 0.44%)</title><rect x="826.9" y="611.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (45 samples, 0.44%)</title><rect x="826.9" y="595.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.9" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.05%)</title><rect x="826.9" y="579.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="829.9" y="590.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.03%)</title><rect x="827.2" y="563.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="830.2" y="574.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (39 samples, 0.38%)</title><rect x="827.6" y="579.0" width="4.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="830.6" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.36%)</title><rect x="827.8" y="563.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.36%)</title><rect x="827.8" y="547.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.8" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 0.36%)</title><rect x="827.8" y="531.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="830.8" y="542.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.35%)</title><rect x="828.0" y="515.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="831.0" y="526.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.35%)</title><rect x="828.0" y="499.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.0" y="510.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.05%)</title><rect x="828.2" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="831.2" y="494.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.26%)</title><rect x="829.0" y="483.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.0" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.26%)</title><rect x="829.0" y="467.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.0" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.25%)</title><rect x="829.1" y="451.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7 samples, 0.07%)</title><rect x="832.1" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getReplicationConfiguration (15 samples, 0.15%)</title><rect x="832.9" y="819.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.parseAndValidateReplicas (15 samples, 0.15%)</title><rect x="832.9" y="803.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$ReplicationConfiguration.parse (15 samples, 0.15%)</title><rect x="832.9" y="787.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (13 samples, 0.13%)</title><rect x="832.9" y="771.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.05%)</title><rect x="832.9" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (5 samples, 0.05%)</title><rect x="832.9" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.05%)</title><rect x="832.9" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.05%)</title><rect x="832.9" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (5 samples, 0.05%)</title><rect x="832.9" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (5 samples, 0.05%)</title><rect x="832.9" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (4 samples, 0.04%)</title><rect x="833.7" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4 samples, 0.04%)</title><rect x="833.7" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4 samples, 0.04%)</title><rect x="833.7" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (4 samples, 0.04%)</title><rect x="833.7" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="833.7" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="833.7" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStamp (151 samples, 1.47%)</title><rect x="834.6" y="819.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (151 samples, 1.47%)</title><rect x="834.6" y="803.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (151 samples, 1.47%)</title><rect x="834.6" y="787.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (151 samples, 1.47%)</title><rect x="834.6" y="771.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (143 samples, 1.39%)</title><rect x="835.5" y="755.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (134 samples, 1.30%)</title><rect x="836.5" y="739.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.45%)</title><rect x="846.6" y="723.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.45%)</title><rect x="846.6" y="707.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.6" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (44 samples, 0.43%)</title><rect x="846.6" y="691.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.6" y="702.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.05%)</title><rect x="851.1" y="675.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="854.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStampAsync (22 samples, 0.21%)</title><rect x="851.9" y="819.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (22 samples, 0.21%)</title><rect x="851.9" y="803.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (22 samples, 0.21%)</title><rect x="851.9" y="787.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.20%)</title><rect x="852.0" y="771.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 0.20%)</title><rect x="852.0" y="755.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (8 samples, 0.08%)</title><rect x="852.1" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.08%)</title><rect x="852.1" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.08%)</title><rect x="852.1" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (8 samples, 0.08%)</title><rect x="852.1" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="852.1" y="675.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="853.0" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="853.0" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="853.0" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.04%)</title><rect x="853.0" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.04%)</title><rect x="853.0" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="853.2" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="853.5" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="853.5" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="853.5" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="853.5" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.08%)</title><rect x="853.5" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.5" y="686.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.08%)</title><rect x="853.5" y="659.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="856.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.08%)</title><rect x="853.5" y="643.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="856.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.08%)</title><rect x="853.5" y="627.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.08%)</title><rect x="853.5" y="611.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.5" y="622.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.08%)</title><rect x="853.5" y="595.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.5" y="606.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.08%)</title><rect x="853.5" y="579.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.5" y="590.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.05%)</title><rect x="853.8" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.8" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.05%)</title><rect x="853.8" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="856.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.05%)</title><rect x="853.8" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (39 samples, 0.38%)</title><rect x="854.4" y="819.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (31 samples, 0.30%)</title><rect x="855.3" y="803.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.10%)</title><rect x="856.8" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.10%)</title><rect x="856.8" y="771.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (8 samples, 0.08%)</title><rect x="858.0" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (8 samples, 0.08%)</title><rect x="858.0" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (7 samples, 0.07%)</title><rect x="858.0" y="755.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.atLeast (9 samples, 0.09%)</title><rect x="858.9" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.9" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.08%)</title><rect x="859.0" y="803.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$$Lambda$188/560519878.accept (7 samples, 0.07%)</title><rect x="859.1" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.lambda$atLeast$1 (7 samples, 0.07%)</title><rect x="859.1" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6 samples, 0.06%)</title><rect x="859.2" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.06%)</title><rect x="859.2" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (4 samples, 0.04%)</title><rect x="860.3" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (4 samples, 0.04%)</title><rect x="860.3" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (21 samples, 0.20%)</title><rect x="860.7" y="867.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.7" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.20%)</title><rect x="860.7" y="851.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.10%)</title><rect x="860.7" y="835.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.7" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (5 samples, 0.05%)</title><rect x="860.7" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.7" y="830.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.05%)</title><rect x="861.3" y="819.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="864.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.11%)</title><rect x="861.9" y="835.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.11%)</title><rect x="861.9" y="819.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (11 samples, 0.11%)</title><rect x="861.9" y="803.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.04%)</title><rect x="863.1" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="863.1" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="863.1" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 0.62%)</title><rect x="863.6" y="899.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (19 samples, 0.18%)</title><rect x="864.3" y="883.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.3" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="864.3" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="867.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.15%)</title><rect x="864.7" y="867.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.15%)</title><rect x="864.7" y="851.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (15 samples, 0.15%)</title><rect x="864.7" y="835.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="866.0" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.29%)</title><rect x="866.4" y="883.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.27%)</title><rect x="866.7" y="867.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.7" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="869.4" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="872.4" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="869.4" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="872.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.09%)</title><rect x="869.9" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.09%)</title><rect x="870.9" y="899.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.07%)</title><rect x="871.1" y="883.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.07%)</title><rect x="871.1" y="867.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.1" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.05%)</title><rect x="871.4" y="851.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="874.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.07%)</title><rect x="871.9" y="899.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="872.2" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="872.2" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 0.83%)</title><rect x="872.7" y="899.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 0.45%)</title><rect x="877.3" y="883.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.3" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.05%)</title><rect x="881.4" y="867.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="884.4" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.05%)</title><rect x="881.4" y="851.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="884.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.04%)</title><rect x="881.5" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="884.5" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="882.0" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="885.0" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="882.0" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="885.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="882.0" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="885.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (573 samples, 5.56%)</title><rect x="882.6" y="915.0" width="65.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.6" y="926.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (569 samples, 5.52%)</title><rect x="883.0" y="899.0" width="65.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.0" y="910.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (50 samples, 0.49%)</title><rect x="883.8" y="883.0" width="5.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="886.8" y="894.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (5 samples, 0.05%)</title><rect x="884.3" y="867.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="887.3" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.06%)</title><rect x="884.9" y="867.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="887.9" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.230] (5 samples, 0.05%)</title><rect x="885.7" y="867.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="888.7" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (29 samples, 0.28%)</title><rect x="886.2" y="867.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="889.2" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="886.6" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.6" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.230] (6 samples, 0.06%)</title><rect x="887.2" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="890.2" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (15 samples, 0.15%)</title><rect x="887.8" y="851.0" width="1.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="890.8" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.07%)</title><rect x="888.8" y="835.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="891.8" y="846.0"></text>
</g>
<g>
<title>__libc_recv (509 samples, 4.94%)</title><rect x="889.6" y="883.0" width="58.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="892.6" y="894.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (500 samples, 4.85%)</title><rect x="890.6" y="867.0" width="57.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="893.6" y="878.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (500 samples, 4.85%)</title><rect x="890.6" y="851.0" width="57.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="893.6" y="862.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (496 samples, 4.81%)</title><rect x="891.0" y="835.0" width="56.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.0" y="846.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (491 samples, 4.76%)</title><rect x="891.6" y="819.0" width="56.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="894.6" y="830.0">__sys_..</text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="892.3" y="803.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="895.3" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (443 samples, 4.30%)</title><rect x="892.8" y="803.0" width="50.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.8" y="814.0">inet6..</text>
</g>
<g>
<title>tcp_recvmsg (441 samples, 4.28%)</title><rect x="893.0" y="787.0" width="50.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.0" y="798.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.18%)</title><rect x="896.7" y="771.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.7" y="782.0"></text>
</g>
<g>
<title>skb_release_all (17 samples, 0.16%)</title><rect x="896.7" y="755.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="899.7" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (16 samples, 0.16%)</title><rect x="896.8" y="739.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="899.8" y="750.0"></text>
</g>
<g>
<title>dst_release (10 samples, 0.10%)</title><rect x="897.1" y="723.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.1" y="734.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.03%)</title><rect x="898.3" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="901.3" y="734.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (23 samples, 0.22%)</title><rect x="899.0" y="771.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="902.0" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.21%)</title><rect x="899.1" y="755.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="902.1" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.04%)</title><rect x="899.4" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="902.4" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.04%)</title><rect x="899.4" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="902.4" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.13%)</title><rect x="900.1" y="739.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.1" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (230 samples, 2.23%)</title><rect x="901.6" y="771.0" width="26.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="904.6" y="782.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (219 samples, 2.12%)</title><rect x="902.7" y="755.0" width="25.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="905.7" y="766.0">_..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.04%)</title><rect x="903.2" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.2" y="750.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.04%)</title><rect x="903.2" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="906.2" y="734.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.03%)</title><rect x="903.8" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.8" y="750.0"></text>
</g>
<g>
<title>ip_output (207 samples, 2.01%)</title><rect x="904.1" y="739.0" width="23.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.1" y="750.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (194 samples, 1.88%)</title><rect x="904.7" y="723.0" width="22.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="907.7" y="734.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.15%)</title><rect x="905.4" y="707.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.4" y="718.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.08%)</title><rect x="905.8" y="691.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="908.8" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.07%)</title><rect x="905.9" y="675.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="908.9" y="686.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.03%)</title><rect x="906.3" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="909.3" y="670.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.03%)</title><rect x="906.3" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="909.3" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (173 samples, 1.68%)</title><rect x="907.1" y="707.0" width="19.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="910.1" y="718.0"></text>
</g>
<g>
<title>do_softirq.part.0 (172 samples, 1.67%)</title><rect x="907.2" y="691.0" width="19.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="910.2" y="702.0"></text>
</g>
<g>
<title>do_softirq_own_stack (167 samples, 1.62%)</title><rect x="907.8" y="675.0" width="19.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="910.8" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (167 samples, 1.62%)</title><rect x="907.8" y="659.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.8" y="670.0"></text>
</g>
<g>
<title>net_rx_action (159 samples, 1.54%)</title><rect x="908.7" y="643.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="911.7" y="654.0"></text>
</g>
<g>
<title>process_backlog (149 samples, 1.45%)</title><rect x="909.8" y="627.0" width="17.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="912.8" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (139 samples, 1.35%)</title><rect x="911.0" y="611.0" width="15.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.0" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.05%)</title><rect x="911.0" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="914.0" y="606.0"></text>
</g>
<g>
<title>ip_rcv (134 samples, 1.30%)</title><rect x="911.5" y="595.0" width="15.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.5" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (131 samples, 1.27%)</title><rect x="911.7" y="579.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="914.7" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (131 samples, 1.27%)</title><rect x="911.7" y="563.0" width="15.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="914.7" y="574.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (130 samples, 1.26%)</title><rect x="911.8" y="547.0" width="14.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.8" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (128 samples, 1.24%)</title><rect x="912.0" y="531.0" width="14.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="915.0" y="542.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.08%)</title><rect x="913.7" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="916.7" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.09%)</title><rect x="914.6" y="515.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="917.6" y="526.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (9 samples, 0.09%)</title><rect x="914.6" y="499.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.6" y="510.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (8 samples, 0.08%)</title><rect x="914.8" y="483.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.8" y="494.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (5 samples, 0.05%)</title><rect x="915.1" y="467.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.1" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (93 samples, 0.90%)</title><rect x="915.7" y="515.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="918.7" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (92 samples, 0.89%)</title><rect x="915.8" y="499.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="918.8" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.05%)</title><rect x="915.9" y="483.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="918.9" y="494.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.03%)</title><rect x="916.1" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.1" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.06%)</title><rect x="916.5" y="483.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.5" y="494.0"></text>
</g>
<g>
<title>tcp_ack (74 samples, 0.72%)</title><rect x="917.2" y="483.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="920.2" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.25%)</title><rect x="919.2" y="467.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="922.2" y="478.0"></text>
</g>
<g>
<title>__slab_free (15 samples, 0.15%)</title><rect x="919.2" y="451.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.2" y="462.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.06%)</title><rect x="920.9" y="451.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.9" y="462.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.04%)</title><rect x="921.7" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.7" y="462.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.04%)</title><rect x="922.2" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="925.2" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.07%)</title><rect x="922.8" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="925.8" y="478.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.04%)</title><rect x="923.1" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.1" y="462.0"></text>
</g>
<g>
<title>rb_next (3 samples, 0.03%)</title><rect x="923.6" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="926.6" y="478.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (7 samples, 0.07%)</title><rect x="923.9" y="467.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.9" y="478.0"></text>
</g>
<g>
<title>minmax_running_min (3 samples, 0.03%)</title><rect x="924.4" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="927.4" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="925.3" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="928.3" y="478.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.05%)</title><rect x="925.7" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.7" y="494.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="926.0" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="929.0" y="478.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="926.0" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="929.0" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.06%)</title><rect x="927.1" y="723.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="930.1" y="734.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.06%)</title><rect x="927.1" y="707.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.1" y="718.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.04%)</title><rect x="927.3" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="930.3" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (23 samples, 0.22%)</title><rect x="928.1" y="771.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.1" y="782.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.03%)</title><rect x="928.1" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="931.1" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (20 samples, 0.19%)</title><rect x="928.5" y="755.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="931.5" y="766.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (15 samples, 0.15%)</title><rect x="929.1" y="739.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.1" y="750.0"></text>
</g>
<g>
<title>release_sock (22 samples, 0.21%)</title><rect x="930.8" y="771.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.8" y="782.0"></text>
</g>
<g>
<title>__release_sock (10 samples, 0.10%)</title><rect x="931.4" y="755.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="934.4" y="766.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.09%)</title><rect x="931.5" y="739.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="934.5" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.05%)</title><rect x="931.9" y="723.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.9" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.04%)</title><rect x="932.8" y="755.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="935.8" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (69 samples, 0.67%)</title><rect x="933.3" y="771.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="936.3" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (68 samples, 0.66%)</title><rect x="933.4" y="755.0" width="7.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.4" y="766.0"></text>
</g>
<g>
<title>_copy_to_iter (26 samples, 0.25%)</title><rect x="936.6" y="739.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="939.6" y="750.0"></text>
</g>
<g>
<title>copyout (22 samples, 0.21%)</title><rect x="937.1" y="723.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.1" y="734.0"></text>
</g>
<g>
<title>copy_user_generic_string (21 samples, 0.20%)</title><rect x="937.2" y="707.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.2" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.14%)</title><rect x="939.6" y="739.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.6" y="750.0"></text>
</g>
<g>
<title>__check_object_size (13 samples, 0.13%)</title><rect x="939.7" y="723.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="942.7" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.08%)</title><rect x="940.1" y="707.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="943.1" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.06%)</title><rect x="941.2" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.2" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (13 samples, 0.13%)</title><rect x="941.9" y="771.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="944.9" y="782.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.08%)</title><rect x="942.5" y="755.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="945.5" y="766.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.08%)</title><rect x="942.5" y="739.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="945.5" y="750.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.07%)</title><rect x="942.6" y="723.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.6" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.13%)</title><rect x="943.5" y="803.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.5" y="814.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.11%)</title><rect x="943.7" y="787.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="946.7" y="798.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.06%)</title><rect x="944.3" y="771.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.3" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (25 samples, 0.24%)</title><rect x="945.0" y="803.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="948.0" y="814.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.22%)</title><rect x="945.2" y="787.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="948.2" y="798.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.16%)</title><rect x="946.0" y="771.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="949.0" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.04%)</title><rect x="948.2" y="947.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="951.2" y="958.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="948.2" y="931.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="951.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.04%)</title><rect x="948.2" y="915.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="951.2" y="926.0"></text>
</g>
<g>
<title>start_thread (2,108 samples, 20.45%)</title><rect x="948.6" y="963.0" width="241.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="951.6" y="974.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2,108 samples, 20.45%)</title><rect x="948.6" y="947.0" width="241.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="951.6" y="958.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (2,108 samples, 20.45%)</title><rect x="948.6" y="931.0" width="241.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="951.6" y="942.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (2,084 samples, 20.22%)</title><rect x="948.8" y="915.0" width="238.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="951.8" y="926.0">GangWorker::loop()</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (1,021 samples, 9.91%)</title><rect x="948.8" y="899.0" width="116.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="951.8" y="910.0">G1CMConcurrent..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1,016 samples, 9.86%)</title><rect x="948.8" y="883.0" width="116.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="951.8" y="894.0">G1CMTask::do_m..</text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWordImpl**) (830 samples, 8.05%)</title><rect x="949.3" y="867.0" width="95.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="952.3" y="878.0">G1CMBitMapC..</text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.426] (5 samples, 0.05%)</title><rect x="950.2" y="851.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="953.2" y="862.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.157] (688 samples, 6.68%)</title><rect x="950.8" y="851.0" width="78.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="953.8" y="862.0">G1CMTask:..</text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title><rect x="956.2" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="959.2" y="846.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (616 samples, 5.98%)</title><rect x="956.5" y="835.0" width="70.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="959.5" y="846.0">void G1C..</text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, int, bool) (6 samples, 0.06%)</title><rect x="963.2" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="966.2" y="830.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (5 samples, 0.05%)</title><rect x="964.1" y="819.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="967.1" y="830.0"></text>
</g>
<g>
<title>getrusage (5 samples, 0.05%)</title><rect x="964.1" y="803.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="967.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="964.1" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="964.1" y="771.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.1" y="782.0"></text>
</g>
<g>
<title>__do_sys_getrusage (3 samples, 0.03%)</title><rect x="964.3" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.3" y="766.0"></text>
</g>
<g>
<title>getrusage (3 samples, 0.03%)</title><rect x="964.3" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.3" y="750.0"></text>
</g>
<g>
<title>get_task_mm (3 samples, 0.03%)</title><rect x="964.3" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.3" y="734.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (5 samples, 0.05%)</title><rect x="964.7" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="967.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (530 samples, 5.14%)</title><rect x="965.2" y="819.0" width="60.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="968.2" y="830.0">void O..</text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (427 samples, 4.14%)</title><rect x="973.8" y="803.0" width="48.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="976.8" y="814.0">G1CM..</text>
</g>
<g>
<title>oopDesc::size() (200 samples, 1.94%)</title><rect x="999.5" y="787.0" width="22.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1002.5" y="798.0">o..</text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title><rect x="1022.4" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1025.4" y="798.0"></text>
</g>
<g>
<title>oopDesc::size() (14 samples, 0.14%)</title><rect x="1022.7" y="803.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1025.7" y="814.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (14 samples, 0.14%)</title><rect x="1024.3" y="803.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1027.3" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.04%)</title><rect x="1025.9" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1028.9" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (6 samples, 0.06%)</title><rect x="1026.4" y="819.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1029.4" y="830.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (4 samples, 0.04%)</title><rect x="1026.6" y="803.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.6" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.03%)</title><rect x="1026.7" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.7" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (22 samples, 0.21%)</title><rect x="1027.1" y="835.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1030.1" y="846.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;G1TaskQueueEntry, (MemoryType)5, 131072u&gt;::pop_local(G1TaskQueueEntry volatile&amp;, unsigned int) (26 samples, 0.25%)</title><rect x="1029.6" y="851.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1032.6" y="862.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (99 samples, 0.96%)</title><rect x="1032.8" y="851.0" width="11.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1035.8" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (68 samples, 0.66%)</title><rect x="1035.0" y="835.0" width="7.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.0" y="846.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (54 samples, 0.52%)</title><rect x="1036.1" y="819.0" width="6.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1039.1" y="830.0"></text>
</g>
<g>
<title>oopDesc::size() (21 samples, 0.20%)</title><rect x="1039.8" y="803.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1042.8" y="814.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title><rect x="1042.4" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1045.4" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (7 samples, 0.07%)</title><rect x="1042.8" y="835.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1045.8" y="846.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (5 samples, 0.05%)</title><rect x="1043.0" y="819.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.0" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (5 samples, 0.05%)</title><rect x="1043.6" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.6" y="846.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (5 samples, 0.05%)</title><rect x="1043.6" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.6" y="830.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.03%)</title><rect x="1043.8" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.8" y="814.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) (4 samples, 0.04%)</title><rect x="1044.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1047.4" y="878.0"></text>
</g>
<g>
<title>G1CMTask::get_entries_from_global_stack() (4 samples, 0.04%)</title><rect x="1044.4" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1047.4" y="862.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.426] (4 samples, 0.04%)</title><rect x="1044.8" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.8" y="878.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.157] (160 samples, 1.55%)</title><rect x="1045.3" y="867.0" width="18.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.3" y="878.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (139 samples, 1.35%)</title><rect x="1047.2" y="851.0" width="15.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.2" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (124 samples, 1.20%)</title><rect x="1048.9" y="835.0" width="14.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1051.9" y="846.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (100 samples, 0.97%)</title><rect x="1051.0" y="819.0" width="11.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.0" y="830.0"></text>
</g>
<g>
<title>oopDesc::size() (47 samples, 0.46%)</title><rect x="1056.6" y="803.0" width="5.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1059.6" y="814.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title><rect x="1062.0" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1065.0" y="814.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.04%)</title><rect x="1062.7" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.04%)</title><rect x="1063.1" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.1" y="862.0"></text>
</g>
<g>
<title>G1ConcurrentMark::try_stealing(unsigned int, G1TaskQueueEntry&amp;) (3 samples, 0.03%)</title><rect x="1063.6" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1066.6" y="878.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;G1TaskQueueEntry, (MemoryType)5, 131072u&gt;::pop_local(G1TaskQueueEntry volatile&amp;, unsigned int) (8 samples, 0.08%)</title><rect x="1063.9" y="867.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1066.9" y="878.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (5 samples, 0.05%)</title><rect x="1065.1" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.1" y="894.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (16 samples, 0.16%)</title><rect x="1065.9" y="899.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1068.9" y="910.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, int, bool) (4 samples, 0.04%)</title><rect x="1066.1" y="883.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.1" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (9 samples, 0.09%)</title><rect x="1066.7" y="883.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.7" y="894.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (3 samples, 0.03%)</title><rect x="1067.7" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.7" y="910.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (3 samples, 0.03%)</title><rect x="1067.7" y="883.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1070.7" y="894.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (3 samples, 0.03%)</title><rect x="1067.7" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1070.7" y="878.0"></text>
</g>
<g>
<title>MarkBitMap::do_clear(MemRegion, bool) (3 samples, 0.03%)</title><rect x="1067.7" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1070.7" y="862.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.03%)</title><rect x="1067.7" y="835.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1070.7" y="846.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (541 samples, 5.25%)</title><rect x="1068.1" y="899.0" width="61.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1071.1" y="910.0">G1Evac..</text>
</g>
<g>
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (5 samples, 0.05%)</title><rect x="1068.1" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1071.1" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.04%)</title><rect x="1068.2" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1071.2" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.03%)</title><rect x="1068.3" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1071.3" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markOopDesc*) (3 samples, 0.03%)</title><rect x="1068.3" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1071.3" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.03%)</title><rect x="1068.3" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1071.3" y="830.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (457 samples, 4.43%)</title><rect x="1068.6" y="883.0" width="52.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1071.6" y="894.0">G1Eva..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (443 samples, 4.30%)</title><rect x="1068.6" y="867.0" width="50.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1071.6" y="878.0">G1Rem..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(G1CardTableEntryClosure*, unsigned int) (443 samples, 4.30%)</title><rect x="1068.6" y="851.0" width="50.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1071.6" y="862.0">G1Col..</text>
</g>
<g>
<title>G1DirtyCardQueueSet::apply_closure_during_gc(G1CardTableEntryClosure*, unsigned int) (441 samples, 4.28%)</title><rect x="1068.6" y="835.0" width="50.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1071.6" y="846.0">G1Dir..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (5 samples, 0.05%)</title><rect x="1068.6" y="819.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1071.6" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(unsigned char*, unsigned int) (425 samples, 4.12%)</title><rect x="1069.2" y="819.0" width="48.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1072.2" y="830.0">G1Re..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markOopDesc*) (3 samples, 0.03%)</title><rect x="1069.4" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1072.4" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (154 samples, 1.49%)</title><rect x="1069.8" y="803.0" width="17.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1072.8" y="814.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (8 samples, 0.08%)</title><rect x="1076.9" y="787.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1079.9" y="798.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (10 samples, 0.10%)</title><rect x="1077.8" y="787.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.8" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markOopDesc*) (72 samples, 0.70%)</title><rect x="1078.9" y="787.0" width="8.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1081.9" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (14 samples, 0.14%)</title><rect x="1085.6" y="771.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1088.6" y="782.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(unsigned char*, G1ScanCardClosure*) (266 samples, 2.58%)</title><rect x="1087.4" y="803.0" width="30.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1090.4" y="814.0">G1..</text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanCardClosure&gt;(MemRegion, G1ScanCardClosure*) (245 samples, 2.38%)</title><rect x="1088.0" y="787.0" width="28.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.0" y="798.0">bo..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (46 samples, 0.45%)</title><rect x="1095.2" y="771.0" width="5.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.2" y="782.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWordImpl* const*) const (4 samples, 0.04%)</title><rect x="1097.9" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1100.9" y="766.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWordImpl* const*) const (18 samples, 0.17%)</title><rect x="1098.4" y="755.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1101.4" y="766.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWordImpl* const*) const (10 samples, 0.10%)</title><rect x="1099.3" y="739.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1102.3" y="750.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWordImpl* const*, HeapWordImpl* const*) const (4 samples, 0.04%)</title><rect x="1100.9" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.9" y="782.0"></text>
</g>
<g>
<title>oopDesc::size() (59 samples, 0.57%)</title><rect x="1101.4" y="771.0" width="6.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.4" y="782.0"></text>
</g>
<g>
<title>void G1ScanCardClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (31 samples, 0.30%)</title><rect x="1108.1" y="771.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.1" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanCardClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanCardClosure*, oopDesc*, Klass*) (36 samples, 0.35%)</title><rect x="1111.8" y="771.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1114.8" y="782.0"></text>
</g>
<g>
<title>void G1ScanCardClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (24 samples, 0.23%)</title><rect x="1113.2" y="755.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1116.2" y="766.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (6 samples, 0.06%)</title><rect x="1116.1" y="787.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1119.1" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanCardClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanCardClosure*, oopDesc*, Klass*) (6 samples, 0.06%)</title><rect x="1116.8" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.8" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanCardClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1ScanCardClosure*, oopDesc*, Klass*) (3 samples, 0.03%)</title><rect x="1117.5" y="787.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1120.5" y="798.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(unsigned char*, G1ScanCardClosure*) (7 samples, 0.07%)</title><rect x="1117.9" y="819.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.9" y="830.0"></text>
</g>
<g>
<title>PtrQueueSet::deallocate_buffer(BufferNode*) (4 samples, 0.04%)</title><rect x="1118.7" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1121.7" y="830.0"></text>
</g>
<g>
<title>GlobalCounter::write_synchronize() (3 samples, 0.03%)</title><rect x="1118.8" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1121.8" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (14 samples, 0.14%)</title><rect x="1119.4" y="867.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.4" y="878.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (3 samples, 0.03%)</title><rect x="1119.4" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1122.4" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (9 samples, 0.09%)</title><rect x="1119.7" y="851.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1122.7" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (8 samples, 0.08%)</title><rect x="1119.8" y="835.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.8" y="846.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (8 samples, 0.08%)</title><rect x="1119.8" y="819.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1122.8" y="830.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (5 samples, 0.05%)</title><rect x="1120.2" y="803.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.2" y="814.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (3 samples, 0.03%)</title><rect x="1120.4" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.4" y="798.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (79 samples, 0.77%)</title><rect x="1121.0" y="883.0" width="9.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.0" y="894.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, unsigned int, unsigned int) const (79 samples, 0.77%)</title><rect x="1121.0" y="867.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.0" y="878.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (79 samples, 0.77%)</title><rect x="1121.0" y="851.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.0" y="862.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (75 samples, 0.73%)</title><rect x="1121.3" y="835.0" width="8.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.3" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (11 samples, 0.11%)</title><rect x="1121.6" y="819.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1124.6" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markOopDesc*) (8 samples, 0.08%)</title><rect x="1122.0" y="803.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.0" y="814.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (12 samples, 0.12%)</title><rect x="1122.9" y="819.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.9" y="830.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanCardClosure&gt;(MemRegion, G1ScanCardClosure*) (46 samples, 0.45%)</title><rect x="1124.3" y="819.0" width="5.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.3" y="830.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (9 samples, 0.09%)</title><rect x="1125.5" y="803.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.5" y="814.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWordImpl* const*) const (3 samples, 0.03%)</title><rect x="1126.2" y="787.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.2" y="798.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWordImpl* const*) const (3 samples, 0.03%)</title><rect x="1126.2" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.2" y="782.0"></text>
</g>
<g>
<title>oopDesc::size() (7 samples, 0.07%)</title><rect x="1126.9" y="803.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1129.9" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanCardClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanCardClosure*, oopDesc*, Klass*) (14 samples, 0.14%)</title><rect x="1127.9" y="803.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.9" y="814.0"></text>
</g>
<g>
<title>void G1ScanCardClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (9 samples, 0.09%)</title><rect x="1128.5" y="787.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="798.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (448 samples, 4.35%)</title><rect x="1130.0" y="899.0" width="51.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.0" y="910.0">G1Reb..</text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (448 samples, 4.35%)</title><rect x="1130.0" y="883.0" width="51.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.0" y="894.0">HeapR..</text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (414 samples, 4.02%)</title><rect x="1130.0" y="867.0" width="47.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.0" y="878.0">G1Re..</text>
</g>
<g>
<title>Klass::start_of_vtable() const (9 samples, 0.09%)</title><rect x="1147.5" y="851.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.5" y="862.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWordImpl* const*, HeapWordImpl* const*) const (64 samples, 0.62%)</title><rect x="1148.6" y="851.0" width="7.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.6" y="862.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (32 samples, 0.31%)</title><rect x="1155.9" y="851.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.9" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (152 samples, 1.47%)</title><rect x="1159.5" y="851.0" width="17.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.5" y="862.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_reference(void*, unsigned int) [clone .part.52] (19 samples, 0.18%)</title><rect x="1165.3" y="835.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.3" y="846.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (38 samples, 0.37%)</title><rect x="1167.4" y="835.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.4" y="846.0"></text>
</g>
<g>
<title>BitMap::par_at_put(unsigned long, bool) (5 samples, 0.05%)</title><rect x="1170.4" y="819.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.4" y="830.0"></text>
</g>
<g>
<title>SparsePRT::add_card(int, int) (5 samples, 0.05%)</title><rect x="1171.0" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.0" y="830.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (45 samples, 0.44%)</title><rect x="1171.8" y="835.0" width="5.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.8" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (3 samples, 0.03%)</title><rect x="1177.1" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.1" y="862.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWordImpl* const*, HeapWordImpl* const*) const (6 samples, 0.06%)</title><rect x="1177.4" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.4" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (17 samples, 0.16%)</title><rect x="1178.2" y="867.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.2" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (10 samples, 0.10%)</title><rect x="1180.2" y="867.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="878.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (8 samples, 0.08%)</title><rect x="1181.3" y="899.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.3" y="910.0"></text>
</g>
<g>
<title>G1DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(G1CardTableEntryClosure*) (8 samples, 0.08%)</title><rect x="1181.3" y="883.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.3" y="894.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(unsigned char*, unsigned int) (8 samples, 0.08%)</title><rect x="1181.3" y="867.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.3" y="878.0"></text>
</g>
<g>
<title>ParallelCleaningTask::work(unsigned int) (31 samples, 0.30%)</title><rect x="1182.2" y="899.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.2" y="910.0"></text>
</g>
<g>
<title>CodeCacheUnloadingTask::claim_nmethods(CompiledMethod**, int*) (8 samples, 0.08%)</title><rect x="1182.2" y="883.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.2" y="894.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (4 samples, 0.04%)</title><rect x="1182.7" y="867.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>nmethod::do_unloading(bool) (22 samples, 0.21%)</title><rect x="1183.1" y="883.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.1" y="894.0"></text>
</g>
<g>
<title>ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const (10 samples, 0.10%)</title><rect x="1183.1" y="867.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.1" y="878.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (10 samples, 0.10%)</title><rect x="1183.1" y="851.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (4 samples, 0.04%)</title><rect x="1183.8" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.8" y="846.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (4 samples, 0.04%)</title><rect x="1183.8" y="819.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="830.0"></text>
</g>
<g>
<title>CompiledMethod::unload_nmethod_caches(bool) (12 samples, 0.12%)</title><rect x="1184.3" y="867.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (12 samples, 0.12%)</title><rect x="1184.3" y="851.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>bool clean_if_nmethod_is_unloaded&lt;CompiledIC&gt;(CompiledIC*, unsigned char*, CompiledMethod*, bool) (4 samples, 0.04%)</title><rect x="1185.1" y="835.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1188.1" y="846.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (9 samples, 0.09%)</title><rect x="1185.8" y="899.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.8" y="910.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (9 samples, 0.09%)</title><rect x="1185.8" y="883.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.8" y="894.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.64] (4 samples, 0.04%)</title><rect x="1185.9" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.9" y="878.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (4 samples, 0.04%)</title><rect x="1186.3" y="867.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (3 samples, 0.03%)</title><rect x="1186.8" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="910.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (18 samples, 0.17%)</title><rect x="1187.4" y="915.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (16 samples, 0.16%)</title><rect x="1187.4" y="899.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 0.16%)</title><rect x="1187.4" y="883.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="894.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 0.15%)</title><rect x="1187.4" y="867.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (15 samples, 0.15%)</title><rect x="1187.4" y="851.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 0.09%)</title><rect x="1187.4" y="835.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (6 samples, 0.06%)</title><rect x="1187.7" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.03%)</title><rect x="1188.4" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (3 samples, 0.03%)</title><rect x="1188.4" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.03%)</title><rect x="1188.4" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="1188.7" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="1188.7" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="1188.7" y="803.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="1188.7" y="787.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.05%)</title><rect x="1189.4" y="915.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.05%)</title><rect x="1189.4" y="899.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (4 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.04%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
</g>
</svg>
