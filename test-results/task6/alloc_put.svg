<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (383,152 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (87,624 samples, 22.87%)</title><rect x="10.0" y="803.0" width="269.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (87,624 samples, 22.87%)</title><rect x="10.0" y="787.0" width="269.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (87,624 samples, 22.87%)</title><rect x="10.0" y="771.0" width="269.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (48,519 samples, 12.66%)</title><rect x="10.0" y="755.0" width="149.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48,243 samples, 12.59%)</title><rect x="10.0" y="739.0" width="148.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (48,243 samples, 12.59%)</title><rect x="10.0" y="723.0" width="148.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurren..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (220 samples, 0.06%)</title><rect x="10.0" y="707.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/562914135.apply (48,023 samples, 12.53%)</title><rect x="10.7" y="707.0" width="147.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.7" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (48,023 samples, 12.53%)</title><rect x="10.7" y="691.0" width="147.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.7" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (48,023 samples, 12.53%)</title><rect x="10.7" y="675.0" width="147.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.7" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (288 samples, 0.08%)</title><rect x="10.7" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.08%)</title><rect x="10.7" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$452/298402999.get$Lambda (176 samples, 0.05%)</title><rect x="10.7" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$452 (176 samples, 0.05%)</title><rect x="10.7" y="611.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$459/1293904227.get$Lambda (112 samples, 0.03%)</title><rect x="11.2" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$459 (112 samples, 0.03%)</title><rect x="11.2" y="611.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="14.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (508 samples, 0.13%)</title><rect x="11.6" y="659.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (508 samples, 0.13%)</title><rect x="11.6" y="643.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (292 samples, 0.08%)</title><rect x="11.6" y="627.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="14.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (216 samples, 0.06%)</title><rect x="12.5" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (216 samples, 0.06%)</title><rect x="12.5" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (216 samples, 0.06%)</title><rect x="12.5" y="595.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="15.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,058 samples, 0.28%)</title><rect x="13.1" y="659.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,058 samples, 0.28%)</title><rect x="13.1" y="643.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (585 samples, 0.15%)</title><rect x="13.1" y="627.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="16.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (473 samples, 0.12%)</title><rect x="14.9" y="627.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (473 samples, 0.12%)</title><rect x="14.9" y="611.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (473 samples, 0.12%)</title><rect x="14.9" y="595.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="17.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (44,924 samples, 11.72%)</title><rect x="16.4" y="659.0" width="138.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.4" y="670.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (44,924 samples, 11.72%)</title><rect x="16.4" y="643.0" width="138.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.4" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (44,924 samples, 11.72%)</title><rect x="16.4" y="627.0" width="138.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.4" y="638.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (490 samples, 0.13%)</title><rect x="16.4" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (490 samples, 0.13%)</title><rect x="16.4" y="595.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/1227490920.get$Lambda (119 samples, 0.03%)</title><rect x="16.4" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$184 (119 samples, 0.03%)</title><rect x="16.4" y="563.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="19.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/1223451278.get$Lambda (203 samples, 0.05%)</title><rect x="16.8" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$185 (203 samples, 0.05%)</title><rect x="16.8" y="563.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$359/610264858.get$Lambda (168 samples, 0.04%)</title><rect x="17.4" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$359 (168 samples, 0.04%)</title><rect x="17.4" y="563.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="20.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (34,907 samples, 9.11%)</title><rect x="17.9" y="611.0" width="107.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.9" y="622.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (34,907 samples, 9.11%)</title><rect x="17.9" y="595.0" width="107.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.9" y="606.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (34,674 samples, 9.05%)</title><rect x="17.9" y="579.0" width="106.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.9" y="590.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$359/610264858.apply (34,674 samples, 9.05%)</title><rect x="17.9" y="563.0" width="106.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.9" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (34,674 samples, 9.05%)</title><rect x="17.9" y="547.0" width="106.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.9" y="558.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (34,674 samples, 9.05%)</title><rect x="17.9" y="531.0" width="106.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.9" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/1223451278.apply (34,674 samples, 9.05%)</title><rect x="17.9" y="515.0" width="106.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.9" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (34,674 samples, 9.05%)</title><rect x="17.9" y="499.0" width="106.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.9" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (189 samples, 0.05%)</title><rect x="17.9" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (189 samples, 0.05%)</title><rect x="17.9" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$448/2074408408.get$Lambda (189 samples, 0.05%)</title><rect x="17.9" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$448 (189 samples, 0.05%)</title><rect x="17.9" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="20.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (682 samples, 0.18%)</title><rect x="18.5" y="483.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (682 samples, 0.18%)</title><rect x="18.5" y="467.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (310 samples, 0.08%)</title><rect x="18.5" y="451.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="21.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (125 samples, 0.03%)</title><rect x="19.4" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$448/2074408408.apply (125 samples, 0.03%)</title><rect x="19.4" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (125 samples, 0.03%)</title><rect x="19.4" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (125 samples, 0.03%)</title><rect x="19.4" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/1227490920.apply (125 samples, 0.03%)</title><rect x="19.4" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (125 samples, 0.03%)</title><rect x="19.4" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (101 samples, 0.03%)</title><rect x="19.5" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.06%)</title><rect x="19.8" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.06%)</title><rect x="19.8" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.06%)</title><rect x="19.8" y="419.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="22.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (531 samples, 0.14%)</title><rect x="20.6" y="483.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (531 samples, 0.14%)</title><rect x="20.6" y="467.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (287 samples, 0.07%)</title><rect x="20.6" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="23.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (241 samples, 0.06%)</title><rect x="21.5" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (241 samples, 0.06%)</title><rect x="21.5" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (241 samples, 0.06%)</title><rect x="21.5" y="419.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="24.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (33,272 samples, 8.68%)</title><rect x="22.2" y="483.0" width="102.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.2" y="494.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (250 samples, 0.07%)</title><rect x="22.2" y="467.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (250 samples, 0.07%)</title><rect x="22.2" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$440/312215542.get$Lambda (109 samples, 0.03%)</title><rect x="22.2" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$440 (109 samples, 0.03%)</title><rect x="22.2" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$444/548919028.get$Lambda (141 samples, 0.04%)</title><rect x="22.5" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$444 (141 samples, 0.04%)</title><rect x="22.5" y="419.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29,136 samples, 7.60%)</title><rect x="23.0" y="467.0" width="89.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.0" y="478.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29,136 samples, 7.60%)</title><rect x="23.0" y="451.0" width="89.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.0" y="462.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (237 samples, 0.06%)</title><rect x="23.0" y="435.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="26.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$440/312215542.apply (28,405 samples, 7.41%)</title><rect x="23.7" y="435.0" width="87.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.7" y="446.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (28,405 samples, 7.41%)</title><rect x="23.7" y="419.0" width="87.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.7" y="430.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.03%)</title><rect x="23.7" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.03%)</title><rect x="23.7" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$472/2080826421.get$Lambda (131 samples, 0.03%)</title><rect x="23.7" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$472 (131 samples, 0.03%)</title><rect x="23.7" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="26.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (502 samples, 0.13%)</title><rect x="24.1" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (502 samples, 0.13%)</title><rect x="24.1" y="387.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (280 samples, 0.07%)</title><rect x="24.1" y="371.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.06%)</title><rect x="25.0" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (222 samples, 0.06%)</title><rect x="25.0" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.06%)</title><rect x="25.0" y="339.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (269 samples, 0.07%)</title><rect x="25.7" y="403.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="28.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (351 samples, 0.09%)</title><rect x="26.5" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (153 samples, 0.04%)</title><rect x="26.5" y="387.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="29.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (198 samples, 0.05%)</title><rect x="27.0" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (190 samples, 0.05%)</title><rect x="27.0" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (190 samples, 0.05%)</title><rect x="27.0" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (190 samples, 0.05%)</title><rect x="27.0" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (190 samples, 0.05%)</title><rect x="27.0" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (190 samples, 0.05%)</title><rect x="27.0" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="30.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (623 samples, 0.16%)</title><rect x="27.6" y="403.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (623 samples, 0.16%)</title><rect x="27.6" y="387.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (181 samples, 0.05%)</title><rect x="27.6" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (181 samples, 0.05%)</title><rect x="27.6" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (181 samples, 0.05%)</title><rect x="27.6" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (181 samples, 0.05%)</title><rect x="27.6" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="30.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (442 samples, 0.12%)</title><rect x="28.1" y="371.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (442 samples, 0.12%)</title><rect x="28.1" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (324 samples, 0.08%)</title><rect x="28.1" y="339.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="31.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (118 samples, 0.03%)</title><rect x="29.1" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (118 samples, 0.03%)</title><rect x="29.1" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="32.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (26,529 samples, 6.92%)</title><rect x="29.5" y="403.0" width="81.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.5" y="414.0">jdk/inter..</text>
</g>
<g>
<title>java.lang.StringBuilder (192 samples, 0.05%)</title><rect x="29.5" y="387.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="32.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (354 samples, 0.09%)</title><rect x="30.1" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.1" y="398.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.05%)</title><rect x="30.1" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="33.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (165 samples, 0.04%)</title><rect x="30.7" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="33.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,464 samples, 0.38%)</title><rect x="31.2" y="387.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,464 samples, 0.38%)</title><rect x="31.2" y="371.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,464 samples, 0.38%)</title><rect x="31.2" y="355.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.2" y="366.0"></text>
</g>
<g>
<title>byte[] (1,438 samples, 0.38%)</title><rect x="31.2" y="339.0" width="4.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (584 samples, 0.15%)</title><rect x="35.7" y="387.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.7" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (584 samples, 0.15%)</title><rect x="35.7" y="371.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.7" y="382.0"></text>
</g>
<g>
<title>byte[] (584 samples, 0.15%)</title><rect x="35.7" y="355.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="38.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,682 samples, 0.44%)</title><rect x="37.5" y="387.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,682 samples, 0.44%)</title><rect x="37.5" y="371.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.04%)</title><rect x="37.5" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="40.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,522 samples, 0.40%)</title><rect x="38.0" y="355.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.0" y="366.0"></text>
</g>
<g>
<title>byte[] (1,507 samples, 0.39%)</title><rect x="38.0" y="339.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="41.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (340 samples, 0.09%)</title><rect x="42.7" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (340 samples, 0.09%)</title><rect x="42.7" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (340 samples, 0.09%)</title><rect x="42.7" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="45.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (198 samples, 0.05%)</title><rect x="43.7" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (198 samples, 0.05%)</title><rect x="43.7" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="46.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (19,210 samples, 5.01%)</title><rect x="44.3" y="387.0" width="59.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.3" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.03%)</title><rect x="44.3" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.03%)</title><rect x="44.3" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$488/1090399923.get$Lambda (111 samples, 0.03%)</title><rect x="44.3" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$488 (111 samples, 0.03%)</title><rect x="44.3" y="323.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="47.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9,791 samples, 2.56%)</title><rect x="44.7" y="371.0" width="30.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.7" y="382.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9,791 samples, 2.56%)</title><rect x="44.7" y="355.0" width="30.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.7" y="366.0">ja..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (221 samples, 0.06%)</title><rect x="44.7" y="339.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="47.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (346 samples, 0.09%)</title><rect x="45.3" y="339.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="48.3" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (756 samples, 0.20%)</title><rect x="46.4" y="339.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="49.4" y="350.0"></text>
</g>
<g>
<title>java.util.TreeSet (216 samples, 0.06%)</title><rect x="48.7" y="339.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="51.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (451 samples, 0.12%)</title><rect x="49.4" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (451 samples, 0.12%)</title><rect x="49.4" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.get$Lambda (451 samples, 0.12%)</title><rect x="49.4" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.4" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$132 (451 samples, 0.12%)</title><rect x="49.4" y="291.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="52.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6,647 samples, 1.73%)</title><rect x="50.8" y="339.0" width="20.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6,647 samples, 1.73%)</title><rect x="50.8" y="323.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (6,647 samples, 1.73%)</title><rect x="50.8" y="307.0" width="20.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6,647 samples, 1.73%)</title><rect x="50.8" y="291.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.8" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,339 samples, 0.87%)</title><rect x="50.8" y="275.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (3,339 samples, 0.87%)</title><rect x="50.8" y="259.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3,339 samples, 0.87%)</title><rect x="50.8" y="243.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (827 samples, 0.22%)</title><rect x="50.8" y="227.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (827 samples, 0.22%)</title><rect x="50.8" y="211.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (827 samples, 0.22%)</title><rect x="50.8" y="195.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (827 samples, 0.22%)</title><rect x="50.8" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (827 samples, 0.22%)</title><rect x="50.8" y="163.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="53.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$488/1090399923.test (2,512 samples, 0.66%)</title><rect x="53.3" y="227.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (2,512 samples, 0.66%)</title><rect x="53.3" y="211.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,512 samples, 0.66%)</title><rect x="53.3" y="195.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,986 samples, 0.52%)</title><rect x="53.3" y="179.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.3" y="190.0"></text>
</g>
<g>
<title>java/util/List.spliterator (745 samples, 0.19%)</title><rect x="53.3" y="163.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.3" y="174.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (745 samples, 0.19%)</title><rect x="53.3" y="147.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="56.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,241 samples, 0.32%)</title><rect x="55.6" y="163.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,241 samples, 0.32%)</title><rect x="55.6" y="147.0" width="3.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="58.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (526 samples, 0.14%)</title><rect x="59.5" y="179.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (526 samples, 0.14%)</title><rect x="59.5" y="163.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (526 samples, 0.14%)</title><rect x="59.5" y="147.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$64/963601816.get (526 samples, 0.14%)</title><rect x="59.5" y="131.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.5" y="142.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (526 samples, 0.14%)</title><rect x="59.5" y="115.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="62.5" y="126.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,761 samples, 0.46%)</title><rect x="61.1" y="275.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.1" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,761 samples, 0.46%)</title><rect x="61.1" y="259.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (876 samples, 0.23%)</title><rect x="61.1" y="243.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (876 samples, 0.23%)</title><rect x="61.1" y="227.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (876 samples, 0.23%)</title><rect x="61.1" y="211.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="64.1" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (885 samples, 0.23%)</title><rect x="63.8" y="243.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (885 samples, 0.23%)</title><rect x="63.8" y="227.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="66.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,547 samples, 0.40%)</title><rect x="66.5" y="275.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,547 samples, 0.40%)</title><rect x="66.5" y="259.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (443 samples, 0.12%)</title><rect x="71.3" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.3" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (443 samples, 0.12%)</title><rect x="71.3" y="323.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="74.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (711 samples, 0.19%)</title><rect x="72.6" y="339.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (711 samples, 0.19%)</title><rect x="72.6" y="323.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="75.6" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (167 samples, 0.04%)</title><rect x="74.8" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (167 samples, 0.04%)</title><rect x="74.8" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (167 samples, 0.04%)</title><rect x="74.8" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.8" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1807635998.get$Lambda (167 samples, 0.04%)</title><rect x="74.8" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.8" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$479 (167 samples, 0.04%)</title><rect x="74.8" y="307.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="77.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (5,142 samples, 1.34%)</title><rect x="75.3" y="371.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,162 samples, 0.83%)</title><rect x="75.3" y="355.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.3" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,162 samples, 0.83%)</title><rect x="75.3" y="339.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,162 samples, 0.83%)</title><rect x="75.3" y="323.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,162 samples, 0.83%)</title><rect x="75.3" y="307.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.3" y="318.0"></text>
</g>
<g>
<title>byte[] (3,137 samples, 0.82%)</title><rect x="75.3" y="291.0" width="9.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="78.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (447 samples, 0.12%)</title><rect x="85.1" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.1" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (447 samples, 0.12%)</title><rect x="85.1" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (447 samples, 0.12%)</title><rect x="85.1" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (447 samples, 0.12%)</title><rect x="85.1" y="307.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="88.1" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (467 samples, 0.12%)</title><rect x="86.4" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.4" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (236 samples, 0.06%)</title><rect x="86.4" y="339.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="89.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (231 samples, 0.06%)</title><rect x="87.2" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (231 samples, 0.06%)</title><rect x="87.2" y="323.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="90.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1807635998.test (1,066 samples, 0.28%)</title><rect x="87.9" y="355.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,066 samples, 0.28%)</title><rect x="87.9" y="339.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$96/211968962.test (1,066 samples, 0.28%)</title><rect x="87.9" y="323.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$12 (1,066 samples, 0.28%)</title><rect x="87.9" y="307.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$86/1979313356.test (1,066 samples, 0.28%)</title><rect x="87.9" y="291.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,066 samples, 0.28%)</title><rect x="87.9" y="275.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$85/660017404.test (1,066 samples, 0.28%)</title><rect x="87.9" y="259.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$5 (1,066 samples, 0.28%)</title><rect x="87.9" y="243.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,066 samples, 0.28%)</title><rect x="87.9" y="227.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,066 samples, 0.28%)</title><rect x="87.9" y="211.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (543 samples, 0.14%)</title><rect x="87.9" y="195.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="90.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (523 samples, 0.14%)</title><rect x="89.6" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.6" y="206.0"></text>
</g>
<g>
<title>byte[] (523 samples, 0.14%)</title><rect x="89.6" y="179.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="92.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.contextRestricted (133 samples, 0.03%)</title><rect x="91.2" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.CONTEXT_RESTRICTED (133 samples, 0.03%)</title><rect x="91.2" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (133 samples, 0.03%)</title><rect x="91.2" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (133 samples, 0.03%)</title><rect x="91.2" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$483/586674705.get$Lambda (133 samples, 0.03%)</title><rect x="91.2" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$483 (133 samples, 0.03%)</title><rect x="91.2" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="94.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3,866 samples, 1.01%)</title><rect x="91.6" y="371.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,866 samples, 1.01%)</title><rect x="91.6" y="355.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,866 samples, 1.01%)</title><rect x="91.6" y="339.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (159 samples, 0.04%)</title><rect x="91.6" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="94.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (325 samples, 0.08%)</title><rect x="92.1" y="323.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="95.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (107 samples, 0.03%)</title><rect x="93.1" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="96.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (229 samples, 0.06%)</title><rect x="93.4" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (229 samples, 0.06%)</title><rect x="93.4" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.get$Lambda (229 samples, 0.06%)</title><rect x="93.4" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.4" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$132 (229 samples, 0.06%)</title><rect x="93.4" y="275.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="96.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (220 samples, 0.06%)</title><rect x="94.1" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.1" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (220 samples, 0.06%)</title><rect x="94.1" y="307.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="97.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,455 samples, 0.64%)</title><rect x="94.8" y="323.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (2,455 samples, 0.64%)</title><rect x="94.8" y="307.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,455 samples, 0.64%)</title><rect x="94.8" y="291.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (444 samples, 0.12%)</title><rect x="94.8" y="275.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (444 samples, 0.12%)</title><rect x="94.8" y="259.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (444 samples, 0.12%)</title><rect x="94.8" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (444 samples, 0.12%)</title><rect x="94.8" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (444 samples, 0.12%)</title><rect x="94.8" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (444 samples, 0.12%)</title><rect x="94.8" y="195.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (444 samples, 0.12%)</title><rect x="94.8" y="179.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (444 samples, 0.12%)</title><rect x="94.8" y="163.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="97.8" y="174.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,060 samples, 0.28%)</title><rect x="96.1" y="275.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.1" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,060 samples, 0.28%)</title><rect x="96.1" y="259.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (515 samples, 0.13%)</title><rect x="96.1" y="243.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (515 samples, 0.13%)</title><rect x="96.1" y="227.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (515 samples, 0.13%)</title><rect x="96.1" y="211.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="99.1" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (545 samples, 0.14%)</title><rect x="97.7" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (545 samples, 0.14%)</title><rect x="97.7" y="227.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="100.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (951 samples, 0.25%)</title><rect x="99.4" y="275.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.4" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (951 samples, 0.25%)</title><rect x="99.4" y="259.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="102.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (371 samples, 0.10%)</title><rect x="102.3" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (371 samples, 0.10%)</title><rect x="102.3" y="307.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="105.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (748 samples, 0.20%)</title><rect x="103.5" y="387.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (336 samples, 0.09%)</title><rect x="103.5" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.5" y="382.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.05%)</title><rect x="103.5" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="106.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (162 samples, 0.04%)</title><rect x="104.0" y="355.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="107.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (412 samples, 0.11%)</title><rect x="104.5" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/922872566.invoke (412 samples, 0.11%)</title><rect x="104.5" y="355.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (412 samples, 0.11%)</title><rect x="104.5" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (244 samples, 0.06%)</title><rect x="104.5" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (244 samples, 0.06%)</title><rect x="104.5" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.5" y="318.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.06%)</title><rect x="104.5" y="291.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="107.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (168 samples, 0.04%)</title><rect x="105.3" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (168 samples, 0.04%)</title><rect x="105.3" y="307.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="108.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (462 samples, 0.12%)</title><rect x="105.8" y="387.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (462 samples, 0.12%)</title><rect x="105.8" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (462 samples, 0.12%)</title><rect x="105.8" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/922872566.invoke (462 samples, 0.12%)</title><rect x="105.8" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (462 samples, 0.12%)</title><rect x="105.8" y="323.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (295 samples, 0.08%)</title><rect x="105.8" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (295 samples, 0.08%)</title><rect x="105.8" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.8" y="302.0"></text>
</g>
<g>
<title>byte[] (295 samples, 0.08%)</title><rect x="105.8" y="275.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="108.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (167 samples, 0.04%)</title><rect x="106.7" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (167 samples, 0.04%)</title><rect x="106.7" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,295 samples, 0.34%)</title><rect x="107.2" y="387.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (356 samples, 0.09%)</title><rect x="107.2" y="371.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (340 samples, 0.09%)</title><rect x="108.3" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (340 samples, 0.09%)</title><rect x="108.3" y="355.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="111.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (599 samples, 0.16%)</title><rect x="109.3" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (599 samples, 0.16%)</title><rect x="109.3" y="355.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="112.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (494 samples, 0.13%)</title><rect x="111.2" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (494 samples, 0.13%)</title><rect x="111.2" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (494 samples, 0.13%)</title><rect x="111.2" y="403.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="114.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (673 samples, 0.18%)</title><rect x="112.7" y="467.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="115.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.06%)</title><rect x="114.8" y="467.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="117.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2,975 samples, 0.78%)</title><rect x="115.5" y="467.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (256 samples, 0.07%)</title><rect x="115.5" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.07%)</title><rect x="115.5" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$379/2080917072.get$Lambda (108 samples, 0.03%)</title><rect x="115.5" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$379 (108 samples, 0.03%)</title><rect x="115.5" y="403.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="118.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$389/992158643.get$Lambda (148 samples, 0.04%)</title><rect x="115.9" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$389 (148 samples, 0.04%)</title><rect x="115.9" y="403.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="118.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (290 samples, 0.08%)</title><rect x="116.3" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="119.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (247 samples, 0.06%)</title><rect x="117.2" y="451.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="120.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (300 samples, 0.08%)</title><rect x="118.0" y="451.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="121.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (824 samples, 0.22%)</title><rect x="118.9" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (824 samples, 0.22%)</title><rect x="118.9" y="435.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (824 samples, 0.22%)</title><rect x="118.9" y="419.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (824 samples, 0.22%)</title><rect x="118.9" y="403.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (824 samples, 0.22%)</title><rect x="118.9" y="387.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (824 samples, 0.22%)</title><rect x="118.9" y="371.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (824 samples, 0.22%)</title><rect x="118.9" y="355.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (824 samples, 0.22%)</title><rect x="118.9" y="339.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (824 samples, 0.22%)</title><rect x="118.9" y="323.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (287 samples, 0.07%)</title><rect x="118.9" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (287 samples, 0.07%)</title><rect x="118.9" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$401/1769447979.get$Lambda (126 samples, 0.03%)</title><rect x="118.9" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$401 (126 samples, 0.03%)</title><rect x="118.9" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="121.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$409/387562541.get$Lambda (161 samples, 0.04%)</title><rect x="119.3" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$409 (161 samples, 0.04%)</title><rect x="119.3" y="259.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="122.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (241 samples, 0.06%)</title><rect x="119.8" y="307.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="122.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (296 samples, 0.08%)</title><rect x="120.5" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (296 samples, 0.08%)</title><rect x="120.5" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (119 samples, 0.03%)</title><rect x="120.5" y="275.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="123.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (177 samples, 0.05%)</title><rect x="120.9" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (177 samples, 0.05%)</title><rect x="120.9" y="259.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="123.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (820 samples, 0.21%)</title><rect x="121.4" y="451.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (180 samples, 0.05%)</title><rect x="121.4" y="435.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="124.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (377 samples, 0.10%)</title><rect x="122.0" y="435.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="125.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (263 samples, 0.07%)</title><rect x="123.1" y="435.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (263 samples, 0.07%)</title><rect x="123.1" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.1" y="430.0"></text>
</g>
<g>
<title>byte[] (263 samples, 0.07%)</title><rect x="123.1" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="126.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (238 samples, 0.06%)</title><rect x="123.9" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (238 samples, 0.06%)</title><rect x="123.9" y="435.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="126.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.06%)</title><rect x="124.7" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.06%)</title><rect x="124.7" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (233 samples, 0.06%)</title><rect x="124.7" y="547.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="127.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (448 samples, 0.12%)</title><rect x="125.4" y="611.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (448 samples, 0.12%)</title><rect x="125.4" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (220 samples, 0.06%)</title><rect x="125.4" y="579.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="128.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (228 samples, 0.06%)</title><rect x="126.1" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (228 samples, 0.06%)</title><rect x="126.1" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (228 samples, 0.06%)</title><rect x="126.1" y="547.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="129.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (9,079 samples, 2.37%)</title><rect x="126.8" y="611.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.8" y="622.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (277 samples, 0.07%)</title><rect x="126.8" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (277 samples, 0.07%)</title><rect x="126.8" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$341/676029354.get$Lambda (160 samples, 0.04%)</title><rect x="126.8" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$341 (160 samples, 0.04%)</title><rect x="126.8" y="547.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="129.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/1687898948.get$Lambda (117 samples, 0.03%)</title><rect x="127.3" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$351 (117 samples, 0.03%)</title><rect x="127.3" y="547.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="130.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (482 samples, 0.13%)</title><rect x="127.6" y="595.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (482 samples, 0.13%)</title><rect x="127.6" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/1687898948.apply (215 samples, 0.06%)</title><rect x="127.6" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (215 samples, 0.06%)</title><rect x="127.6" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (215 samples, 0.06%)</title><rect x="127.6" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (215 samples, 0.06%)</title><rect x="127.6" y="515.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="130.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (267 samples, 0.07%)</title><rect x="128.3" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (267 samples, 0.07%)</title><rect x="128.3" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (267 samples, 0.07%)</title><rect x="128.3" y="531.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="131.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (233 samples, 0.06%)</title><rect x="129.1" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (233 samples, 0.06%)</title><rect x="129.1" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.06%)</title><rect x="129.1" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.06%)</title><rect x="129.1" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (233 samples, 0.06%)</title><rect x="129.1" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="132.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (8,087 samples, 2.11%)</title><rect x="129.8" y="595.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (8,087 samples, 2.11%)</title><rect x="129.8" y="579.0" width="24.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.8" y="590.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (614 samples, 0.16%)</title><rect x="129.8" y="563.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="132.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (7,248 samples, 1.89%)</title><rect x="131.7" y="563.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="574.0">j..</text>
</g>
<g>
<title>java.lang.Object (112 samples, 0.03%)</title><rect x="131.7" y="547.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (214 samples, 0.06%)</title><rect x="132.1" y="547.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="135.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (162 samples, 0.04%)</title><rect x="132.7" y="547.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="135.7" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (363 samples, 0.09%)</title><rect x="133.2" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (363 samples, 0.09%)</title><rect x="133.2" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.2" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (363 samples, 0.09%)</title><rect x="133.2" y="515.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (169 samples, 0.04%)</title><rect x="134.3" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (169 samples, 0.04%)</title><rect x="134.3" y="531.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="137.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (556 samples, 0.15%)</title><rect x="134.9" y="547.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="137.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (376 samples, 0.10%)</title><rect x="136.6" y="547.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="139.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (398 samples, 0.10%)</title><rect x="137.7" y="547.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="140.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (505 samples, 0.13%)</title><rect x="139.0" y="547.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="142.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2,135 samples, 0.56%)</title><rect x="140.5" y="547.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (175 samples, 0.05%)</title><rect x="140.5" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="143.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (120 samples, 0.03%)</title><rect x="141.1" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="144.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (188 samples, 0.05%)</title><rect x="141.4" y="531.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="144.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (122 samples, 0.03%)</title><rect x="142.0" y="531.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="145.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.03%)</title><rect x="142.4" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.03%)</title><rect x="142.4" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.get$Lambda (110 samples, 0.03%)</title><rect x="142.4" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$330 (110 samples, 0.03%)</title><rect x="142.4" y="483.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="145.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (162 samples, 0.04%)</title><rect x="142.7" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (162 samples, 0.04%)</title><rect x="142.7" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="145.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (176 samples, 0.05%)</title><rect x="143.2" y="531.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="146.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (193 samples, 0.05%)</title><rect x="143.8" y="531.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="146.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (889 samples, 0.23%)</title><rect x="144.4" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (187 samples, 0.05%)</title><rect x="144.4" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="147.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (221 samples, 0.06%)</title><rect x="144.9" y="515.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="147.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (131 samples, 0.03%)</title><rect x="145.6" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (131 samples, 0.03%)</title><rect x="145.6" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="148.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (350 samples, 0.09%)</title><rect x="146.0" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (114 samples, 0.03%)</title><rect x="146.0" y="499.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="149.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (119 samples, 0.03%)</title><rect x="146.4" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="149.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (117 samples, 0.03%)</title><rect x="146.7" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="149.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,404 samples, 0.37%)</title><rect x="147.1" y="547.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (121 samples, 0.03%)</title><rect x="147.1" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="150.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (122 samples, 0.03%)</title><rect x="147.5" y="531.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="150.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (141 samples, 0.04%)</title><rect x="147.8" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="150.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (174 samples, 0.05%)</title><rect x="148.3" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (174 samples, 0.05%)</title><rect x="148.3" y="515.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="151.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (846 samples, 0.22%)</title><rect x="148.8" y="531.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (154 samples, 0.04%)</title><rect x="148.8" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="151.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (229 samples, 0.06%)</title><rect x="149.3" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="152.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (111 samples, 0.03%)</title><rect x="150.0" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (111 samples, 0.03%)</title><rect x="150.0" y="499.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="153.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (352 samples, 0.09%)</title><rect x="150.3" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (121 samples, 0.03%)</title><rect x="150.3" y="499.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="153.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (103 samples, 0.03%)</title><rect x="150.7" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="153.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (128 samples, 0.03%)</title><rect x="151.0" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="154.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (386 samples, 0.10%)</title><rect x="151.4" y="547.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (386 samples, 0.10%)</title><rect x="151.4" y="531.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (211 samples, 0.06%)</title><rect x="151.4" y="515.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="154.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (175 samples, 0.05%)</title><rect x="152.1" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (175 samples, 0.05%)</title><rect x="152.1" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (175 samples, 0.05%)</title><rect x="152.1" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (175 samples, 0.05%)</title><rect x="152.1" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (175 samples, 0.05%)</title><rect x="152.1" y="451.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="155.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (468 samples, 0.12%)</title><rect x="152.6" y="547.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.6" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (468 samples, 0.12%)</title><rect x="152.6" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.6" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (468 samples, 0.12%)</title><rect x="152.6" y="515.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$204/422361949.run (468 samples, 0.12%)</title><rect x="152.6" y="499.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (468 samples, 0.12%)</title><rect x="152.6" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.6" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (115 samples, 0.03%)</title><rect x="152.6" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="155.6" y="478.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (353 samples, 0.09%)</title><rect x="153.0" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.0" y="478.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (163 samples, 0.04%)</title><rect x="153.0" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="156.0" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (190 samples, 0.05%)</title><rect x="153.5" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.5" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (190 samples, 0.05%)</title><rect x="153.5" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.5" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (190 samples, 0.05%)</title><rect x="153.5" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.5" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (190 samples, 0.05%)</title><rect x="153.5" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.5" y="414.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (190 samples, 0.05%)</title><rect x="153.5" y="387.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="156.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (224 samples, 0.06%)</title><rect x="154.1" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (224 samples, 0.06%)</title><rect x="154.1" y="547.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="157.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (292 samples, 0.08%)</title><rect x="154.7" y="659.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (292 samples, 0.08%)</title><rect x="154.7" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (292 samples, 0.08%)</title><rect x="154.7" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.7" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (292 samples, 0.08%)</title><rect x="154.7" y="611.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="157.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (953 samples, 0.25%)</title><rect x="155.6" y="659.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (617 samples, 0.16%)</title><rect x="155.6" y="643.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="158.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (336 samples, 0.09%)</title><rect x="157.5" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (336 samples, 0.09%)</title><rect x="157.5" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (166 samples, 0.04%)</title><rect x="157.5" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.5" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (166 samples, 0.04%)</title><rect x="157.5" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (166 samples, 0.04%)</title><rect x="157.5" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (166 samples, 0.04%)</title><rect x="157.5" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.5" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (166 samples, 0.04%)</title><rect x="157.5" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="160.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (170 samples, 0.04%)</title><rect x="158.1" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.1" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (170 samples, 0.04%)</title><rect x="158.1" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.1" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (170 samples, 0.04%)</title><rect x="158.1" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.1" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (170 samples, 0.04%)</title><rect x="158.1" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.1" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (170 samples, 0.04%)</title><rect x="158.1" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.1" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (170 samples, 0.04%)</title><rect x="158.1" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.1" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (170 samples, 0.04%)</title><rect x="158.1" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (170 samples, 0.04%)</title><rect x="158.1" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.1" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (170 samples, 0.04%)</title><rect x="158.1" y="483.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="161.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$186/1093009101.get (276 samples, 0.07%)</title><rect x="158.6" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.lambda$upsertWithTimeStampAsync$2 (276 samples, 0.07%)</title><rect x="158.6" y="723.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStamp (276 samples, 0.07%)</title><rect x="158.6" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (276 samples, 0.07%)</title><rect x="158.6" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (241 samples, 0.06%)</title><rect x="158.7" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.of (240 samples, 0.06%)</title><rect x="158.7" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.7" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.s3ponia.Table$Value (240 samples, 0.06%)</title><rect x="158.7" y="643.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="161.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,293 samples, 0.34%)</title><rect x="159.4" y="755.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,293 samples, 0.34%)</title><rect x="159.4" y="739.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,198 samples, 0.31%)</title><rect x="159.4" y="723.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,198 samples, 0.31%)</title><rect x="159.4" y="707.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,198 samples, 0.31%)</title><rect x="159.4" y="691.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="162.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (95 samples, 0.02%)</title><rect x="163.1" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (95 samples, 0.02%)</title><rect x="163.1" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (95 samples, 0.02%)</title><rect x="163.1" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (95 samples, 0.02%)</title><rect x="163.1" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (95 samples, 0.02%)</title><rect x="163.1" y="659.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="166.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$478/365064831.run (8,544 samples, 2.23%)</title><rect x="163.4" y="755.0" width="26.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.4" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (8,544 samples, 2.23%)</title><rect x="163.4" y="739.0" width="26.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.4" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (8,544 samples, 2.23%)</title><rect x="163.4" y="723.0" width="26.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (8,544 samples, 2.23%)</title><rect x="163.4" y="707.0" width="26.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.4" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8,544 samples, 2.23%)</title><rect x="163.4" y="691.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.4" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8,544 samples, 2.23%)</title><rect x="163.4" y="675.0" width="26.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.4" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,544 samples, 2.23%)</title><rect x="163.4" y="659.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.4" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,544 samples, 2.23%)</title><rect x="163.4" y="643.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.4" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,544 samples, 2.23%)</title><rect x="163.4" y="627.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.4" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8,544 samples, 2.23%)</title><rect x="163.4" y="611.0" width="26.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.4" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8,544 samples, 2.23%)</title><rect x="163.4" y="595.0" width="26.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.4" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (8,223 samples, 2.15%)</title><rect x="163.4" y="579.0" width="25.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.4" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (451 samples, 0.12%)</title><rect x="163.4" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (451 samples, 0.12%)</title><rect x="163.4" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$504/1370744636.get$Lambda (178 samples, 0.05%)</title><rect x="163.4" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$504 (178 samples, 0.05%)</title><rect x="163.4" y="515.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="166.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$563/1375560915.get$Lambda (130 samples, 0.03%)</title><rect x="164.0" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$563 (130 samples, 0.03%)</title><rect x="164.0" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="167.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$572/1940447007.get$Lambda (143 samples, 0.04%)</title><rect x="164.4" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$572 (143 samples, 0.04%)</title><rect x="164.4" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="167.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7,772 samples, 2.03%)</title><rect x="164.8" y="563.0" width="23.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.8" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (341 samples, 0.09%)</title><rect x="164.8" y="547.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="167.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,431 samples, 1.94%)</title><rect x="165.8" y="547.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,431 samples, 1.94%)</title><rect x="165.8" y="531.0" width="22.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.8" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,431 samples, 1.94%)</title><rect x="165.8" y="515.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,270 samples, 0.33%)</title><rect x="165.8" y="499.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (463 samples, 0.12%)</title><rect x="165.8" y="483.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="168.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$541/1668148770.apply (785 samples, 0.20%)</title><rect x="167.3" y="483.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (785 samples, 0.20%)</title><rect x="167.3" y="467.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (785 samples, 0.20%)</title><rect x="167.3" y="451.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (170 samples, 0.04%)</title><rect x="167.3" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.3" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (170 samples, 0.04%)</title><rect x="167.3" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.3" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (170 samples, 0.04%)</title><rect x="167.3" y="403.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="170.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (615 samples, 0.16%)</title><rect x="167.8" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.03%)</title><rect x="167.8" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.03%)</title><rect x="167.8" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$578/434563612.get$Lambda (110 samples, 0.03%)</title><rect x="167.8" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$578 (110 samples, 0.03%)</title><rect x="167.8" y="371.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="170.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (505 samples, 0.13%)</title><rect x="168.1" y="419.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (505 samples, 0.13%)</title><rect x="168.1" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (280 samples, 0.07%)</title><rect x="168.1" y="387.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="171.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (223 samples, 0.06%)</title><rect x="169.0" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (223 samples, 0.06%)</title><rect x="169.0" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (223 samples, 0.06%)</title><rect x="169.0" y="355.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="172.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6,161 samples, 1.61%)</title><rect x="169.8" y="499.0" width="18.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,161 samples, 1.61%)</title><rect x="169.8" y="483.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$448/2074408408.apply (6,161 samples, 1.61%)</title><rect x="169.8" y="467.0" width="18.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6,161 samples, 1.61%)</title><rect x="169.8" y="451.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6,161 samples, 1.61%)</title><rect x="169.8" y="435.0" width="18.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/1227490920.apply (6,161 samples, 1.61%)</title><rect x="169.8" y="419.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6,161 samples, 1.61%)</title><rect x="169.8" y="403.0" width="18.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (138 samples, 0.04%)</title><rect x="169.8" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (138 samples, 0.04%)</title><rect x="169.8" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$541/1668148770.get$Lambda (138 samples, 0.04%)</title><rect x="169.8" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$541 (138 samples, 0.04%)</title><rect x="169.8" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="172.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (537 samples, 0.14%)</title><rect x="170.2" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (537 samples, 0.14%)</title><rect x="170.2" y="371.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (293 samples, 0.08%)</title><rect x="170.2" y="355.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="173.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (244 samples, 0.06%)</title><rect x="171.1" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (244 samples, 0.06%)</title><rect x="171.1" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (244 samples, 0.06%)</title><rect x="171.1" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="174.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5,486 samples, 1.43%)</title><rect x="171.8" y="387.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (234 samples, 0.06%)</title><rect x="171.8" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.06%)</title><rect x="171.8" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$510/383058574.get$Lambda (132 samples, 0.03%)</title><rect x="171.8" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$510 (132 samples, 0.03%)</title><rect x="171.8" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="174.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$531/53782460.get$Lambda (102 samples, 0.03%)</title><rect x="172.2" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$531 (102 samples, 0.03%)</title><rect x="172.2" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="175.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1,956 samples, 0.51%)</title><rect x="172.6" y="371.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1,956 samples, 0.51%)</title><rect x="172.6" y="355.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1,956 samples, 0.51%)</title><rect x="172.6" y="339.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$510/383058574.accept (638 samples, 0.17%)</title><rect x="172.6" y="323.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (638 samples, 0.17%)</title><rect x="172.6" y="307.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (638 samples, 0.17%)</title><rect x="172.6" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (163 samples, 0.04%)</title><rect x="172.6" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.04%)</title><rect x="172.6" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$521/485011838.get$Lambda (163 samples, 0.04%)</title><rect x="172.6" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$521 (163 samples, 0.04%)</title><rect x="172.6" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="175.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (475 samples, 0.12%)</title><rect x="173.1" y="275.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (475 samples, 0.12%)</title><rect x="173.1" y="259.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (246 samples, 0.06%)</title><rect x="173.1" y="243.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="176.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.06%)</title><rect x="173.8" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.06%)</title><rect x="173.8" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (229 samples, 0.06%)</title><rect x="173.8" y="211.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="176.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$531/53782460.accept (861 samples, 0.22%)</title><rect x="174.5" y="323.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (861 samples, 0.22%)</title><rect x="174.5" y="307.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (861 samples, 0.22%)</title><rect x="174.5" y="291.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (861 samples, 0.22%)</title><rect x="174.5" y="275.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (861 samples, 0.22%)</title><rect x="174.5" y="259.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (861 samples, 0.22%)</title><rect x="174.5" y="243.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (861 samples, 0.22%)</title><rect x="174.5" y="227.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (861 samples, 0.22%)</title><rect x="174.5" y="211.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (861 samples, 0.22%)</title><rect x="174.5" y="195.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (861 samples, 0.22%)</title><rect x="174.5" y="179.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (339 samples, 0.09%)</title><rect x="174.5" y="163.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (339 samples, 0.09%)</title><rect x="174.5" y="147.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (165 samples, 0.04%)</title><rect x="174.5" y="131.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="177.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (174 samples, 0.05%)</title><rect x="175.0" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (174 samples, 0.05%)</title><rect x="175.0" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (174 samples, 0.05%)</title><rect x="175.0" y="99.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (174 samples, 0.05%)</title><rect x="175.0" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (174 samples, 0.05%)</title><rect x="175.0" y="67.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (174 samples, 0.05%)</title><rect x="175.0" y="51.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="178.0" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (522 samples, 0.14%)</title><rect x="175.6" y="163.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (522 samples, 0.14%)</title><rect x="175.6" y="147.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (170 samples, 0.04%)</title><rect x="175.6" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.6" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (170 samples, 0.04%)</title><rect x="175.6" y="115.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="178.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (352 samples, 0.09%)</title><rect x="176.1" y="131.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.1" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (167 samples, 0.04%)</title><rect x="176.1" y="115.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="179.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (185 samples, 0.05%)</title><rect x="176.6" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (185 samples, 0.05%)</title><rect x="176.6" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (185 samples, 0.05%)</title><rect x="176.6" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (185 samples, 0.05%)</title><rect x="176.6" y="67.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (185 samples, 0.05%)</title><rect x="176.6" y="51.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (185 samples, 0.05%)</title><rect x="176.6" y="35.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="179.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (457 samples, 0.12%)</title><rect x="177.2" y="323.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (457 samples, 0.12%)</title><rect x="177.2" y="307.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (457 samples, 0.12%)</title><rect x="177.2" y="291.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3,296 samples, 0.86%)</title><rect x="178.6" y="371.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (308 samples, 0.08%)</title><rect x="178.6" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="181.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (277 samples, 0.07%)</title><rect x="179.5" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (277 samples, 0.07%)</title><rect x="179.5" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (277 samples, 0.07%)</title><rect x="179.5" y="323.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="182.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2,711 samples, 0.71%)</title><rect x="180.4" y="355.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (153 samples, 0.04%)</title><rect x="180.4" y="339.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="183.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1,421 samples, 0.37%)</title><rect x="180.9" y="339.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (237 samples, 0.06%)</title><rect x="180.9" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (237 samples, 0.06%)</title><rect x="180.9" y="307.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="183.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (261 samples, 0.07%)</title><rect x="181.6" y="323.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="184.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (923 samples, 0.24%)</title><rect x="182.4" y="323.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (86 samples, 0.02%)</title><rect x="182.4" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="185.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (118 samples, 0.03%)</title><rect x="182.7" y="307.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="185.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (216 samples, 0.06%)</title><rect x="183.0" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="186.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (166 samples, 0.04%)</title><rect x="183.7" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (166 samples, 0.04%)</title><rect x="183.7" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="186.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (337 samples, 0.09%)</title><rect x="184.2" y="307.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (118 samples, 0.03%)</title><rect x="184.2" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="187.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (103 samples, 0.03%)</title><rect x="184.6" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="187.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (116 samples, 0.03%)</title><rect x="184.9" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="187.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1,137 samples, 0.30%)</title><rect x="185.2" y="339.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (197 samples, 0.05%)</title><rect x="185.2" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="188.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (545 samples, 0.14%)</title><rect x="185.8" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (320 samples, 0.08%)</title><rect x="185.8" y="307.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="188.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (225 samples, 0.06%)</title><rect x="186.8" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.8" y="318.0"></text>
</g>
<g>
<title>byte[] (225 samples, 0.06%)</title><rect x="186.8" y="291.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="189.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (395 samples, 0.10%)</title><rect x="187.5" y="323.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (395 samples, 0.10%)</title><rect x="187.5" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (395 samples, 0.10%)</title><rect x="187.5" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.5" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (395 samples, 0.10%)</title><rect x="187.5" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (395 samples, 0.10%)</title><rect x="187.5" y="259.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="190.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (321 samples, 0.08%)</title><rect x="188.7" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (321 samples, 0.08%)</title><rect x="188.7" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (321 samples, 0.08%)</title><rect x="188.7" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (321 samples, 0.08%)</title><rect x="188.7" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (321 samples, 0.08%)</title><rect x="188.7" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.7" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.toArray (321 samples, 0.08%)</title><rect x="188.7" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (321 samples, 0.08%)</title><rect x="188.7" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.7" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (321 samples, 0.08%)</title><rect x="188.7" y="467.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="191.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (29,268 samples, 7.64%)</title><rect x="189.7" y="755.0" width="90.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.7" y="766.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (29,268 samples, 7.64%)</title><rect x="189.7" y="739.0" width="90.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.7" y="750.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (24,751 samples, 6.46%)</title><rect x="189.7" y="723.0" width="76.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.7" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (24,751 samples, 6.46%)</title><rect x="189.7" y="707.0" width="76.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.7" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (24,751 samples, 6.46%)</title><rect x="189.7" y="691.0" width="76.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.7" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (568 samples, 0.15%)</title><rect x="189.7" y="675.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (568 samples, 0.15%)</title><rect x="189.7" y="659.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (568 samples, 0.15%)</title><rect x="189.7" y="643.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (568 samples, 0.15%)</title><rect x="189.7" y="627.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (330 samples, 0.09%)</title><rect x="189.7" y="611.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726950788.invoke (330 samples, 0.09%)</title><rect x="189.7" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (330 samples, 0.09%)</title><rect x="189.7" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (330 samples, 0.09%)</title><rect x="189.7" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (330 samples, 0.09%)</title><rect x="189.7" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.7" y="558.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.09%)</title><rect x="189.7" y="531.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="192.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (238 samples, 0.06%)</title><rect x="190.7" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (238 samples, 0.06%)</title><rect x="190.7" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (238 samples, 0.06%)</title><rect x="190.7" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$498/514110821.get$Lambda (238 samples, 0.06%)</title><rect x="190.7" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$498 (238 samples, 0.06%)</title><rect x="190.7" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="193.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (24,183 samples, 6.31%)</title><rect x="191.5" y="675.0" width="74.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.5" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (24,183 samples, 6.31%)</title><rect x="191.5" y="659.0" width="74.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.5" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (24,183 samples, 6.31%)</title><rect x="191.5" y="643.0" width="74.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.5" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (24,183 samples, 6.31%)</title><rect x="191.5" y="627.0" width="74.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.5" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11,588 samples, 3.02%)</title><rect x="191.5" y="611.0" width="35.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.5" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,588 samples, 3.02%)</title><rect x="191.5" y="595.0" width="35.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.5" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11,588 samples, 3.02%)</title><rect x="191.5" y="579.0" width="35.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.5" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11,588 samples, 3.02%)</title><rect x="191.5" y="563.0" width="35.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.5" y="574.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11,588 samples, 3.02%)</title><rect x="191.5" y="547.0" width="35.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.5" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (11,588 samples, 3.02%)</title><rect x="191.5" y="531.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.5" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11,588 samples, 3.02%)</title><rect x="191.5" y="515.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.5" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11,211 samples, 2.93%)</title><rect x="191.5" y="499.0" width="34.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.5" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,211 samples, 2.93%)</title><rect x="191.5" y="483.0" width="34.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.5" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10,970 samples, 2.86%)</title><rect x="191.5" y="467.0" width="33.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.5" y="478.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (220 samples, 0.06%)</title><rect x="191.5" y="451.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="194.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/402007990.apply (10,327 samples, 2.70%)</title><rect x="192.1" y="451.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.1" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (10,327 samples, 2.70%)</title><rect x="192.1" y="435.0" width="31.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.1" y="446.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (165 samples, 0.04%)</title><rect x="192.1" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (165 samples, 0.04%)</title><rect x="192.1" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$690/94075118.get$Lambda (165 samples, 0.04%)</title><rect x="192.1" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$690 (165 samples, 0.04%)</title><rect x="192.1" y="371.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="195.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (509 samples, 0.13%)</title><rect x="192.7" y="419.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (509 samples, 0.13%)</title><rect x="192.7" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (290 samples, 0.08%)</title><rect x="192.7" y="387.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="195.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.06%)</title><rect x="193.5" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (219 samples, 0.06%)</title><rect x="193.5" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (219 samples, 0.06%)</title><rect x="193.5" y="355.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="196.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (9,653 samples, 2.52%)</title><rect x="194.2" y="419.0" width="29.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.2" y="430.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.03%)</title><rect x="194.2" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.03%)</title><rect x="194.2" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$686/1969960172.get$Lambda (116 samples, 0.03%)</title><rect x="194.2" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$686 (116 samples, 0.03%)</title><rect x="194.2" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="197.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (503 samples, 0.13%)</title><rect x="194.6" y="403.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (503 samples, 0.13%)</title><rect x="194.6" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (260 samples, 0.07%)</title><rect x="194.6" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="197.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.06%)</title><rect x="195.4" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.06%)</title><rect x="195.4" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (243 samples, 0.06%)</title><rect x="195.4" y="339.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="198.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (9,034 samples, 2.36%)</title><rect x="196.1" y="403.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (8,510 samples, 2.22%)</title><rect x="196.1" y="387.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.1" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (277 samples, 0.07%)</title><rect x="196.1" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (277 samples, 0.07%)</title><rect x="196.1" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$654/2028223206.get$Lambda (162 samples, 0.04%)</title><rect x="196.1" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$654 (162 samples, 0.04%)</title><rect x="196.1" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="199.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$679/553479114.get$Lambda (115 samples, 0.03%)</title><rect x="196.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$679 (115 samples, 0.03%)</title><rect x="196.6" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="199.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/312702423.linkToTargetMethod (283 samples, 0.07%)</title><rect x="197.0" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/858571395.invokeStatic (283 samples, 0.07%)</title><rect x="197.0" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$605/2050460840.get$Lambda (283 samples, 0.07%)</title><rect x="197.0" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$605 (283 samples, 0.07%)</title><rect x="197.0" y="323.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="200.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,624 samples, 0.42%)</title><rect x="197.9" y="371.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (641 samples, 0.17%)</title><rect x="197.9" y="355.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.9" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (269 samples, 0.07%)</title><rect x="197.9" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.9" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (269 samples, 0.07%)</title><rect x="197.9" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="200.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (372 samples, 0.10%)</title><rect x="198.7" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (372 samples, 0.10%)</title><rect x="198.7" y="323.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="201.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (515 samples, 0.13%)</title><rect x="199.8" y="355.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (515 samples, 0.13%)</title><rect x="199.8" y="339.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (515 samples, 0.13%)</title><rect x="199.8" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (166 samples, 0.04%)</title><rect x="199.8" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (166 samples, 0.04%)</title><rect x="199.8" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (166 samples, 0.04%)</title><rect x="199.8" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (166 samples, 0.04%)</title><rect x="199.8" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$599/827321937.get (183 samples, 0.05%)</title><rect x="200.3" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (183 samples, 0.05%)</title><rect x="200.3" y="291.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="203.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (166 samples, 0.04%)</title><rect x="200.9" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (166 samples, 0.04%)</title><rect x="200.9" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.9" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (166 samples, 0.04%)</title><rect x="200.9" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.9" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (166 samples, 0.04%)</title><rect x="200.9" y="259.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="203.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (468 samples, 0.12%)</title><rect x="201.4" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (468 samples, 0.12%)</title><rect x="201.4" y="339.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (498 samples, 0.13%)</title><rect x="202.9" y="371.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (498 samples, 0.13%)</title><rect x="202.9" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (270 samples, 0.07%)</title><rect x="202.9" y="339.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="205.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (228 samples, 0.06%)</title><rect x="203.7" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (228 samples, 0.06%)</title><rect x="203.7" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (228 samples, 0.06%)</title><rect x="203.7" y="307.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="206.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (187 samples, 0.05%)</title><rect x="204.4" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="207.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (260 samples, 0.07%)</title><rect x="205.0" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="208.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.06%)</title><rect x="205.8" y="371.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="208.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (110 samples, 0.03%)</title><rect x="206.4" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (110 samples, 0.03%)</title><rect x="206.4" y="355.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="209.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,230 samples, 1.10%)</title><rect x="206.8" y="371.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$605/2050460840.run (4,230 samples, 1.10%)</title><rect x="206.8" y="355.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4,230 samples, 1.10%)</title><rect x="206.8" y="339.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (543 samples, 0.14%)</title><rect x="206.8" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (543 samples, 0.14%)</title><rect x="206.8" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$614/1917281169.get$Lambda (111 samples, 0.03%)</title><rect x="206.8" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$614 (111 samples, 0.03%)</title><rect x="206.8" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="209.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$622/340551095.get$Lambda (193 samples, 0.05%)</title><rect x="207.1" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$622 (193 samples, 0.05%)</title><rect x="207.1" y="275.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="210.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$639/1428755153.get$Lambda (239 samples, 0.06%)</title><rect x="207.7" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$639 (239 samples, 0.06%)</title><rect x="207.7" y="275.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="210.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (507 samples, 0.13%)</title><rect x="208.5" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (507 samples, 0.13%)</title><rect x="208.5" y="307.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (273 samples, 0.07%)</title><rect x="208.5" y="291.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="211.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (234 samples, 0.06%)</title><rect x="209.3" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (234 samples, 0.06%)</title><rect x="209.3" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (234 samples, 0.06%)</title><rect x="209.3" y="259.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="212.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (318 samples, 0.08%)</title><rect x="210.0" y="323.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="213.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (245 samples, 0.06%)</title><rect x="211.0" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (245 samples, 0.06%)</title><rect x="211.0" y="307.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="214.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (695 samples, 0.18%)</title><rect x="211.8" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (695 samples, 0.18%)</title><rect x="211.8" y="307.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (184 samples, 0.05%)</title><rect x="211.8" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (184 samples, 0.05%)</title><rect x="211.8" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$648/40292953.get$Lambda (184 samples, 0.05%)</title><rect x="211.8" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$648 (184 samples, 0.05%)</title><rect x="211.8" y="243.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="214.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (511 samples, 0.13%)</title><rect x="212.3" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (511 samples, 0.13%)</title><rect x="212.3" y="275.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (511 samples, 0.13%)</title><rect x="212.3" y="259.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (306 samples, 0.08%)</title><rect x="212.3" y="243.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="215.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.05%)</title><rect x="213.3" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.05%)</title><rect x="213.3" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (205 samples, 0.05%)</title><rect x="213.3" y="211.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="216.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (685 samples, 0.18%)</title><rect x="213.9" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (685 samples, 0.18%)</title><rect x="213.9" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1354011814.invoke (685 samples, 0.18%)</title><rect x="213.9" y="291.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (685 samples, 0.18%)</title><rect x="213.9" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (685 samples, 0.18%)</title><rect x="213.9" y="259.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (514 samples, 0.13%)</title><rect x="213.9" y="243.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (514 samples, 0.13%)</title><rect x="213.9" y="227.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.9" y="238.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.13%)</title><rect x="213.9" y="211.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="216.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (171 samples, 0.04%)</title><rect x="215.5" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (171 samples, 0.04%)</title><rect x="215.5" y="227.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="218.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,237 samples, 0.32%)</title><rect x="216.0" y="323.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (406 samples, 0.11%)</title><rect x="216.0" y="307.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="219.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (831 samples, 0.22%)</title><rect x="217.3" y="307.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (831 samples, 0.22%)</title><rect x="217.3" y="291.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1354011814.invoke (831 samples, 0.22%)</title><rect x="217.3" y="275.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (831 samples, 0.22%)</title><rect x="217.3" y="259.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (831 samples, 0.22%)</title><rect x="217.3" y="243.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (661 samples, 0.17%)</title><rect x="217.3" y="227.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (661 samples, 0.17%)</title><rect x="217.3" y="211.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.3" y="222.0"></text>
</g>
<g>
<title>byte[] (661 samples, 0.17%)</title><rect x="217.3" y="195.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="220.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (170 samples, 0.04%)</title><rect x="219.3" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (170 samples, 0.04%)</title><rect x="219.3" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="222.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers.getBodyAsync (819 samples, 0.21%)</title><rect x="219.8" y="371.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (172 samples, 0.04%)</title><rect x="219.8" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.04%)</title><rect x="219.8" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$$Lambda$663/1305983741.get$Lambda (172 samples, 0.04%)</title><rect x="219.8" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$$Lambda$663 (172 samples, 0.04%)</title><rect x="219.8" y="307.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="222.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (647 samples, 0.17%)</title><rect x="220.3" y="355.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$$Lambda$663/1305983741.run (647 samples, 0.17%)</title><rect x="220.3" y="339.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers.lambda$getBodyAsync$3 (647 samples, 0.17%)</title><rect x="220.3" y="323.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.03%)</title><rect x="220.3" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.03%)</title><rect x="220.3" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$$Lambda$671/2031574276.get$Lambda (101 samples, 0.03%)</title><rect x="220.3" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$$Lambda$671 (101 samples, 0.03%)</title><rect x="220.3" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="223.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (546 samples, 0.14%)</title><rect x="220.7" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (546 samples, 0.14%)</title><rect x="220.7" y="291.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (546 samples, 0.14%)</title><rect x="220.7" y="275.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (310 samples, 0.08%)</title><rect x="220.7" y="259.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="223.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (236 samples, 0.06%)</title><rect x="221.6" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (236 samples, 0.06%)</title><rect x="221.6" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (236 samples, 0.06%)</title><rect x="221.6" y="227.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="224.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$134/1197827129.apply (524 samples, 0.14%)</title><rect x="222.3" y="387.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.lambda$getFuturesResponse$5 (524 samples, 0.14%)</title><rect x="222.3" y="371.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (524 samples, 0.14%)</title><rect x="222.3" y="355.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (147 samples, 0.04%)</title><rect x="222.3" y="339.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="225.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (377 samples, 0.10%)</title><rect x="222.8" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (128 samples, 0.03%)</title><rect x="222.8" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="225.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (249 samples, 0.06%)</title><rect x="223.2" y="323.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="226.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$452/298402999.apply (423 samples, 0.11%)</title><rect x="224.0" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (423 samples, 0.11%)</title><rect x="224.0" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (208 samples, 0.05%)</title><rect x="224.0" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (208 samples, 0.05%)</title><rect x="224.0" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (208 samples, 0.05%)</title><rect x="224.0" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (208 samples, 0.05%)</title><rect x="224.0" y="371.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="227.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (215 samples, 0.06%)</title><rect x="224.6" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (215 samples, 0.06%)</title><rect x="224.6" y="403.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="227.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (241 samples, 0.06%)</title><rect x="225.3" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (241 samples, 0.06%)</title><rect x="225.3" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$459/1293904227.apply (241 samples, 0.06%)</title><rect x="225.3" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (241 samples, 0.06%)</title><rect x="225.3" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (241 samples, 0.06%)</title><rect x="225.3" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (241 samples, 0.06%)</title><rect x="225.3" y="387.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="228.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$578/434563612.apply (377 samples, 0.10%)</title><rect x="226.0" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (377 samples, 0.10%)</title><rect x="226.0" y="483.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (377 samples, 0.10%)</title><rect x="226.0" y="467.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="229.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (12,595 samples, 3.29%)</title><rect x="227.2" y="611.0" width="38.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.2" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (788 samples, 0.21%)</title><rect x="227.2" y="595.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (788 samples, 0.21%)</title><rect x="227.2" y="579.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (788 samples, 0.21%)</title><rect x="227.2" y="563.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (788 samples, 0.21%)</title><rect x="227.2" y="547.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (788 samples, 0.21%)</title><rect x="227.2" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.2" y="542.0"></text>
</g>
<g>
<title>byte[] (788 samples, 0.21%)</title><rect x="227.2" y="515.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="230.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (511 samples, 0.13%)</title><rect x="229.6" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (511 samples, 0.13%)</title><rect x="229.6" y="579.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (511 samples, 0.13%)</title><rect x="229.6" y="563.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (511 samples, 0.13%)</title><rect x="229.6" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (511 samples, 0.13%)</title><rect x="229.6" y="531.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.6" y="542.0"></text>
</g>
<g>
<title>byte[] (511 samples, 0.13%)</title><rect x="229.6" y="515.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="232.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,000 samples, 0.26%)</title><rect x="231.2" y="595.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.2" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (150 samples, 0.04%)</title><rect x="231.2" y="579.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="234.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (169 samples, 0.04%)</title><rect x="231.6" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (169 samples, 0.04%)</title><rect x="231.6" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (169 samples, 0.04%)</title><rect x="231.6" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.6" y="558.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.04%)</title><rect x="231.6" y="531.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="234.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (217 samples, 0.06%)</title><rect x="232.1" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (217 samples, 0.06%)</title><rect x="232.1" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.1" y="574.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.06%)</title><rect x="232.1" y="547.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="235.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (464 samples, 0.12%)</title><rect x="232.8" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (464 samples, 0.12%)</title><rect x="232.8" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (161 samples, 0.04%)</title><rect x="232.8" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="235.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (303 samples, 0.08%)</title><rect x="233.3" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.3" y="558.0"></text>
</g>
<g>
<title>byte[] (303 samples, 0.08%)</title><rect x="233.3" y="531.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="236.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3,337 samples, 0.87%)</title><rect x="234.2" y="595.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,337 samples, 0.87%)</title><rect x="234.2" y="579.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,337 samples, 0.87%)</title><rect x="234.2" y="563.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.2" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (99 samples, 0.03%)</title><rect x="234.2" y="547.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="237.2" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (181 samples, 0.05%)</title><rect x="234.5" y="547.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="237.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (327 samples, 0.09%)</title><rect x="235.1" y="547.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="238.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (140 samples, 0.04%)</title><rect x="236.1" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="239.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (237 samples, 0.06%)</title><rect x="236.5" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (237 samples, 0.06%)</title><rect x="236.5" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.get$Lambda (237 samples, 0.06%)</title><rect x="236.5" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$132 (237 samples, 0.06%)</title><rect x="236.5" y="499.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="239.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (243 samples, 0.06%)</title><rect x="237.3" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.3" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (243 samples, 0.06%)</title><rect x="237.3" y="531.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="240.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,743 samples, 0.45%)</title><rect x="238.0" y="547.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (1,743 samples, 0.45%)</title><rect x="238.0" y="531.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,743 samples, 0.45%)</title><rect x="238.0" y="515.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (414 samples, 0.11%)</title><rect x="238.0" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (414 samples, 0.11%)</title><rect x="238.0" y="483.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (414 samples, 0.11%)</title><rect x="238.0" y="467.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.11%)</title><rect x="238.0" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.11%)</title><rect x="238.0" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.11%)</title><rect x="238.0" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.11%)</title><rect x="238.0" y="403.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (414 samples, 0.11%)</title><rect x="238.0" y="387.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="241.0" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (731 samples, 0.19%)</title><rect x="239.3" y="499.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (731 samples, 0.19%)</title><rect x="239.3" y="483.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (365 samples, 0.10%)</title><rect x="239.3" y="467.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (365 samples, 0.10%)</title><rect x="239.3" y="451.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (365 samples, 0.10%)</title><rect x="239.3" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="242.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (366 samples, 0.10%)</title><rect x="240.4" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (366 samples, 0.10%)</title><rect x="240.4" y="451.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="243.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (598 samples, 0.16%)</title><rect x="241.5" y="499.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (598 samples, 0.16%)</title><rect x="241.5" y="483.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="244.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (367 samples, 0.10%)</title><rect x="243.4" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (367 samples, 0.10%)</title><rect x="243.4" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="246.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (6,959 samples, 1.82%)</title><rect x="244.5" y="595.0" width="21.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.5" y="606.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (327 samples, 0.09%)</title><rect x="244.5" y="579.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="247.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (428 samples, 0.11%)</title><rect x="245.5" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (428 samples, 0.11%)</title><rect x="245.5" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.5" y="574.0"></text>
</g>
<g>
<title>byte[] (428 samples, 0.11%)</title><rect x="245.5" y="547.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="248.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (884 samples, 0.23%)</title><rect x="246.8" y="579.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (884 samples, 0.23%)</title><rect x="246.8" y="563.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (319 samples, 0.08%)</title><rect x="246.8" y="547.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="249.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (565 samples, 0.15%)</title><rect x="247.8" y="547.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.8" y="558.0"></text>
</g>
<g>
<title>byte[] (565 samples, 0.15%)</title><rect x="247.8" y="531.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="250.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (5,320 samples, 1.39%)</title><rect x="249.6" y="579.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,579 samples, 0.41%)</title><rect x="249.6" y="563.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,579 samples, 0.41%)</title><rect x="249.6" y="547.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (674 samples, 0.18%)</title><rect x="249.6" y="531.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="252.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (905 samples, 0.24%)</title><rect x="251.6" y="531.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.6" y="542.0"></text>
</g>
<g>
<title>byte[] (905 samples, 0.24%)</title><rect x="251.6" y="515.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="254.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (819 samples, 0.21%)</title><rect x="254.4" y="563.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (819 samples, 0.21%)</title><rect x="254.4" y="547.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.4" y="558.0"></text>
</g>
<g>
<title>byte[] (496 samples, 0.13%)</title><rect x="254.4" y="531.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="257.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (323 samples, 0.08%)</title><rect x="256.0" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="259.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (770 samples, 0.20%)</title><rect x="256.9" y="563.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (770 samples, 0.20%)</title><rect x="256.9" y="547.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (770 samples, 0.20%)</title><rect x="256.9" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (373 samples, 0.10%)</title><rect x="256.9" y="515.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="259.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (397 samples, 0.10%)</title><rect x="258.1" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.1" y="526.0"></text>
</g>
<g>
<title>byte[] (397 samples, 0.10%)</title><rect x="258.1" y="499.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="261.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (791 samples, 0.21%)</title><rect x="259.3" y="563.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (791 samples, 0.21%)</title><rect x="259.3" y="547.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (791 samples, 0.21%)</title><rect x="259.3" y="531.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (791 samples, 0.21%)</title><rect x="259.3" y="515.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (791 samples, 0.21%)</title><rect x="259.3" y="499.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="262.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,361 samples, 0.36%)</title><rect x="261.8" y="563.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (440 samples, 0.11%)</title><rect x="261.8" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (440 samples, 0.11%)</title><rect x="261.8" y="531.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="264.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (585 samples, 0.15%)</title><rect x="263.1" y="547.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (585 samples, 0.15%)</title><rect x="263.1" y="531.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="266.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$584/229420324.apply (336 samples, 0.09%)</title><rect x="264.9" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (336 samples, 0.09%)</title><rect x="264.9" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (336 samples, 0.09%)</title><rect x="264.9" y="515.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="267.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4,517 samples, 1.18%)</title><rect x="265.9" y="723.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,517 samples, 1.18%)</title><rect x="265.9" y="707.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,517 samples, 1.18%)</title><rect x="265.9" y="691.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/1338076480.run (4,517 samples, 1.18%)</title><rect x="265.9" y="675.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,517 samples, 1.18%)</title><rect x="265.9" y="659.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4,483 samples, 1.17%)</title><rect x="265.9" y="643.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (280 samples, 0.07%)</title><rect x="265.9" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (280 samples, 0.07%)</title><rect x="265.9" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$401/1769447979.get$Lambda (111 samples, 0.03%)</title><rect x="265.9" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$401 (111 samples, 0.03%)</title><rect x="265.9" y="579.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="268.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$409/387562541.get$Lambda (169 samples, 0.04%)</title><rect x="266.3" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$409 (169 samples, 0.04%)</title><rect x="266.3" y="579.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="269.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (209 samples, 0.05%)</title><rect x="266.8" y="627.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="269.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (315 samples, 0.08%)</title><rect x="267.5" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (315 samples, 0.08%)</title><rect x="267.5" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (134 samples, 0.03%)</title><rect x="267.5" y="595.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="270.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (181 samples, 0.05%)</title><rect x="267.9" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (181 samples, 0.05%)</title><rect x="267.9" y="579.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="270.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3,679 samples, 0.96%)</title><rect x="268.4" y="627.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3,679 samples, 0.96%)</title><rect x="268.4" y="611.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$614/1917281169.run (3,339 samples, 0.87%)</title><rect x="268.4" y="595.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3,339 samples, 0.87%)</title><rect x="268.4" y="579.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3,339 samples, 0.87%)</title><rect x="268.4" y="563.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (909 samples, 0.24%)</title><rect x="268.4" y="547.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (627 samples, 0.16%)</title><rect x="268.4" y="531.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (246 samples, 0.06%)</title><rect x="268.4" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.4" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (246 samples, 0.06%)</title><rect x="268.4" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="271.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (381 samples, 0.10%)</title><rect x="269.2" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (381 samples, 0.10%)</title><rect x="269.2" y="499.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="272.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (282 samples, 0.07%)</title><rect x="270.4" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (282 samples, 0.07%)</title><rect x="270.4" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (282 samples, 0.07%)</title><rect x="270.4" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$64/963601816.get (153 samples, 0.04%)</title><rect x="270.4" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (153 samples, 0.04%)</title><rect x="270.4" y="467.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="273.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (129 samples, 0.03%)</title><rect x="270.8" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (129 samples, 0.03%)</title><rect x="270.8" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.8" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (129 samples, 0.03%)</title><rect x="270.8" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.8" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (129 samples, 0.03%)</title><rect x="270.8" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="273.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,430 samples, 0.63%)</title><rect x="271.2" y="547.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (185 samples, 0.05%)</title><rect x="271.2" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.2" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (185 samples, 0.05%)</title><rect x="271.2" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (185 samples, 0.05%)</title><rect x="271.2" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (185 samples, 0.05%)</title><rect x="271.2" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (185 samples, 0.05%)</title><rect x="271.2" y="467.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="274.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,245 samples, 0.59%)</title><rect x="271.8" y="531.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (933 samples, 0.24%)</title><rect x="271.8" y="515.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (181 samples, 0.05%)</title><rect x="271.8" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (181 samples, 0.05%)</title><rect x="271.8" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (181 samples, 0.05%)</title><rect x="271.8" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (181 samples, 0.05%)</title><rect x="271.8" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (181 samples, 0.05%)</title><rect x="271.8" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (181 samples, 0.05%)</title><rect x="271.8" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="274.8" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (175 samples, 0.05%)</title><rect x="272.3" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (175 samples, 0.05%)</title><rect x="272.3" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (175 samples, 0.05%)</title><rect x="272.3" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (175 samples, 0.05%)</title><rect x="272.3" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (175 samples, 0.05%)</title><rect x="272.3" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (175 samples, 0.05%)</title><rect x="272.3" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="275.3" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (217 samples, 0.06%)</title><rect x="272.9" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (217 samples, 0.06%)</title><rect x="272.9" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.9" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (217 samples, 0.06%)</title><rect x="272.9" y="467.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="275.9" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (174 samples, 0.05%)</title><rect x="273.6" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (174 samples, 0.05%)</title><rect x="273.6" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (174 samples, 0.05%)</title><rect x="273.6" y="467.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="276.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (186 samples, 0.05%)</title><rect x="274.1" y="499.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="277.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (529 samples, 0.14%)</title><rect x="274.7" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (163 samples, 0.04%)</title><rect x="274.7" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (163 samples, 0.04%)</title><rect x="274.7" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (163 samples, 0.04%)</title><rect x="274.7" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (163 samples, 0.04%)</title><rect x="274.7" y="451.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (176 samples, 0.05%)</title><rect x="275.2" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (176 samples, 0.05%)</title><rect x="275.2" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (176 samples, 0.05%)</title><rect x="275.2" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="278.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (190 samples, 0.05%)</title><rect x="275.7" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (190 samples, 0.05%)</title><rect x="275.7" y="483.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="278.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (783 samples, 0.20%)</title><rect x="276.3" y="515.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (196 samples, 0.05%)</title><rect x="276.3" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="279.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (587 samples, 0.15%)</title><rect x="276.9" y="499.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (175 samples, 0.05%)</title><rect x="276.9" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (175 samples, 0.05%)</title><rect x="276.9" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (175 samples, 0.05%)</title><rect x="276.9" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (175 samples, 0.05%)</title><rect x="276.9" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="279.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (412 samples, 0.11%)</title><rect x="277.4" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (412 samples, 0.11%)</title><rect x="277.4" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (302 samples, 0.08%)</title><rect x="277.4" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="280.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (110 samples, 0.03%)</title><rect x="278.4" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (110 samples, 0.03%)</title><rect x="278.4" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="281.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (340 samples, 0.09%)</title><rect x="278.7" y="595.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (340 samples, 0.09%)</title><rect x="278.7" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (340 samples, 0.09%)</title><rect x="278.7" y="563.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (340 samples, 0.09%)</title><rect x="278.7" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (340 samples, 0.09%)</title><rect x="278.7" y="531.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (340 samples, 0.09%)</title><rect x="278.7" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (340 samples, 0.09%)</title><rect x="278.7" y="499.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$$Lambda$671/2031574276.accept (340 samples, 0.09%)</title><rect x="278.7" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers.lambda$getBodyAsync$2 (340 samples, 0.09%)</title><rect x="278.7" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (340 samples, 0.09%)</title><rect x="278.7" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (340 samples, 0.09%)</title><rect x="278.7" y="435.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (340 samples, 0.09%)</title><rect x="278.7" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$690/94075118.apply (340 samples, 0.09%)</title><rect x="278.7" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (340 samples, 0.09%)</title><rect x="278.7" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (340 samples, 0.09%)</title><rect x="278.7" y="371.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="281.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (54,010 samples, 14.10%)</title><rect x="279.9" y="803.0" width="166.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.9" y="814.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (54,010 samples, 14.10%)</title><rect x="279.9" y="787.0" width="166.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.9" y="798.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (54,010 samples, 14.10%)</title><rect x="279.9" y="771.0" width="166.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.9" y="782.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (54,010 samples, 14.10%)</title><rect x="279.9" y="755.0" width="166.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.9" y="766.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (54,010 samples, 14.10%)</title><rect x="279.9" y="739.0" width="166.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.9" y="750.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (54,010 samples, 14.10%)</title><rect x="279.9" y="723.0" width="166.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.9" y="734.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (54,010 samples, 14.10%)</title><rect x="279.9" y="707.0" width="166.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.9" y="718.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (54,010 samples, 14.10%)</title><rect x="279.9" y="691.0" width="166.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.9" y="702.0">java/util/concurrent/..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$$Lambda$189/1339399088.accept (54,010 samples, 14.10%)</title><rect x="279.9" y="675.0" width="166.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.9" y="686.0">ru/mail/polis/s3ponia..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.lambda$atLeast$0 (54,010 samples, 14.10%)</title><rect x="279.9" y="659.0" width="166.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.9" y="670.0">ru/mail/polis/s3ponia..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36,658 samples, 9.57%)</title><rect x="279.9" y="643.0" width="112.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.9" y="654.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36,658 samples, 9.57%)</title><rect x="279.9" y="627.0" width="112.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.9" y="638.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36,658 samples, 9.57%)</title><rect x="279.9" y="611.0" width="112.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.9" y="622.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (36,658 samples, 9.57%)</title><rect x="279.9" y="595.0" width="112.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.9" y="606.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$193/2032886835.accept (36,658 samples, 9.57%)</title><rect x="279.9" y="579.0" width="112.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.9" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.lambda$validatePut$0 (36,658 samples, 9.57%)</title><rect x="279.9" y="563.0" width="112.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.9" y="574.0">ru/mail/polis/..</text>
</g>
<g>
<title>one.nio.http.Response (4,464 samples, 1.17%)</title><rect x="279.9" y="547.0" width="13.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="282.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18,483 samples, 4.82%)</title><rect x="293.6" y="547.0" width="56.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.6" y="558.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18,483 samples, 4.82%)</title><rect x="293.6" y="531.0" width="56.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.6" y="542.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12,737 samples, 3.32%)</title><rect x="293.6" y="515.0" width="39.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.6" y="526.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12,737 samples, 3.32%)</title><rect x="293.6" y="499.0" width="39.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.6" y="510.0">one..</text>
</g>
<g>
<title>byte[] (7,034 samples, 1.84%)</title><rect x="293.6" y="483.0" width="21.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="296.6" y="494.0">b..</text>
</g>
<g>
<title>byte[] (5,703 samples, 1.49%)</title><rect x="315.3" y="483.0" width="17.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="318.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5,746 samples, 1.50%)</title><rect x="332.8" y="515.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.8" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5,746 samples, 1.50%)</title><rect x="332.8" y="499.0" width="17.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="335.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13,711 samples, 3.58%)</title><rect x="350.5" y="547.0" width="42.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.5" y="558.0">one/..</text>
</g>
<g>
<title>byte[] (5,733 samples, 1.50%)</title><rect x="350.5" y="531.0" width="17.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="353.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (4,610 samples, 1.20%)</title><rect x="368.2" y="531.0" width="14.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="371.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (3,368 samples, 0.88%)</title><rect x="382.4" y="531.0" width="10.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="385.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (17,352 samples, 4.53%)</title><rect x="392.8" y="643.0" width="53.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.8" y="654.0">java/..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (17,352 samples, 4.53%)</title><rect x="392.8" y="627.0" width="53.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.8" y="638.0">java/..</text>
</g>
<g>
<title>java.lang.Object[] (17,352 samples, 4.53%)</title><rect x="392.8" y="611.0" width="53.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="395.8" y="622.0">java...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (7,586 samples, 1.98%)</title><rect x="446.2" y="803.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.2" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (209 samples, 0.05%)</title><rect x="446.2" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (209 samples, 0.05%)</title><rect x="446.2" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$467/128902735.get$Lambda (137 samples, 0.04%)</title><rect x="446.2" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$467 (137 samples, 0.04%)</title><rect x="446.2" y="739.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="449.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/146370526.linkToTargetMethod (200 samples, 0.05%)</title><rect x="446.8" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (200 samples, 0.05%)</title><rect x="446.8" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$468/516619057.get$Lambda (200 samples, 0.05%)</title><rect x="446.8" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$468 (200 samples, 0.05%)</title><rect x="446.8" y="739.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="449.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,882 samples, 0.49%)</title><rect x="447.5" y="787.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$469/46107878.accept (1,535 samples, 0.40%)</title><rect x="447.5" y="771.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,535 samples, 0.40%)</title><rect x="447.5" y="755.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,535 samples, 0.40%)</title><rect x="447.5" y="739.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,535 samples, 0.40%)</title><rect x="447.5" y="723.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,535 samples, 0.40%)</title><rect x="447.5" y="707.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,535 samples, 0.40%)</title><rect x="447.5" y="691.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,535 samples, 0.40%)</title><rect x="447.5" y="675.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,535 samples, 0.40%)</title><rect x="447.5" y="659.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,535 samples, 0.40%)</title><rect x="447.5" y="643.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,535 samples, 0.40%)</title><rect x="447.5" y="627.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/73043551.run (1,535 samples, 0.40%)</title><rect x="447.5" y="611.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,535 samples, 0.40%)</title><rect x="447.5" y="595.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (208 samples, 0.05%)</title><rect x="447.5" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (208 samples, 0.05%)</title><rect x="447.5" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (208 samples, 0.05%)</title><rect x="447.5" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (197 samples, 0.05%)</title><rect x="447.5" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (197 samples, 0.05%)</title><rect x="447.5" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (197 samples, 0.05%)</title><rect x="447.5" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (197 samples, 0.05%)</title><rect x="447.5" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (197 samples, 0.05%)</title><rect x="447.5" y="467.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="450.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (137 samples, 0.04%)</title><rect x="448.1" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (137 samples, 0.04%)</title><rect x="448.1" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.04%)</title><rect x="448.1" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$498/514110821.get$Lambda (137 samples, 0.04%)</title><rect x="448.1" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$498 (137 samples, 0.04%)</title><rect x="448.1" y="515.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="451.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,189 samples, 0.31%)</title><rect x="448.5" y="579.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (659 samples, 0.17%)</title><rect x="448.5" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (421 samples, 0.11%)</title><rect x="448.5" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.5" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (421 samples, 0.11%)</title><rect x="448.5" y="531.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="451.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (238 samples, 0.06%)</title><rect x="449.8" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.8" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (238 samples, 0.06%)</title><rect x="449.8" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (238 samples, 0.06%)</title><rect x="449.8" y="515.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="452.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (530 samples, 0.14%)</title><rect x="450.5" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$239/1968563014.get (530 samples, 0.14%)</title><rect x="450.5" y="547.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (530 samples, 0.14%)</title><rect x="450.5" y="531.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (530 samples, 0.14%)</title><rect x="450.5" y="515.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (528 samples, 0.14%)</title><rect x="450.6" y="499.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.6" y="510.0"></text>
</g>
<g>
<title>byte[] (486 samples, 0.13%)</title><rect x="450.7" y="483.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$477/970375239.accept (347 samples, 0.09%)</title><rect x="452.2" y="771.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (347 samples, 0.09%)</title><rect x="452.2" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$468/516619057.run (347 samples, 0.09%)</title><rect x="452.2" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (347 samples, 0.09%)</title><rect x="452.2" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (347 samples, 0.09%)</title><rect x="452.2" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (347 samples, 0.09%)</title><rect x="452.2" y="691.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (347 samples, 0.09%)</title><rect x="452.2" y="675.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.2" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (347 samples, 0.09%)</title><rect x="452.2" y="659.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="455.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (490 samples, 0.13%)</title><rect x="453.2" y="787.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.2" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (490 samples, 0.13%)</title><rect x="453.2" y="771.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="456.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (452 samples, 0.12%)</title><rect x="454.8" y="787.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (217 samples, 0.06%)</title><rect x="454.8" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (217 samples, 0.06%)</title><rect x="454.8" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (217 samples, 0.06%)</title><rect x="454.8" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (217 samples, 0.06%)</title><rect x="454.8" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (217 samples, 0.06%)</title><rect x="454.8" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (217 samples, 0.06%)</title><rect x="454.8" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.8" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (217 samples, 0.06%)</title><rect x="454.8" y="675.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="457.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (235 samples, 0.06%)</title><rect x="455.4" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (235 samples, 0.06%)</title><rect x="455.4" y="755.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="458.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (840 samples, 0.22%)</title><rect x="456.1" y="787.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$278/1695876727.run (531 samples, 0.14%)</title><rect x="456.1" y="771.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (531 samples, 0.14%)</title><rect x="456.1" y="755.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (531 samples, 0.14%)</title><rect x="456.1" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (531 samples, 0.14%)</title><rect x="456.1" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (531 samples, 0.14%)</title><rect x="456.1" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (531 samples, 0.14%)</title><rect x="456.1" y="691.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/73043551.run (531 samples, 0.14%)</title><rect x="456.1" y="675.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (531 samples, 0.14%)</title><rect x="456.1" y="659.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (530 samples, 0.14%)</title><rect x="456.1" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (530 samples, 0.14%)</title><rect x="456.1" y="627.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (517 samples, 0.13%)</title><rect x="456.1" y="611.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (517 samples, 0.13%)</title><rect x="456.1" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (517 samples, 0.13%)</title><rect x="456.1" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (374 samples, 0.10%)</title><rect x="456.1" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726950788.invoke (374 samples, 0.10%)</title><rect x="456.1" y="547.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (374 samples, 0.10%)</title><rect x="456.1" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (374 samples, 0.10%)</title><rect x="456.1" y="515.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (374 samples, 0.10%)</title><rect x="456.1" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.1" y="510.0"></text>
</g>
<g>
<title>byte[] (374 samples, 0.10%)</title><rect x="456.1" y="483.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="459.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (143 samples, 0.04%)</title><rect x="457.3" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.04%)</title><rect x="457.3" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.04%)</title><rect x="457.3" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$498/514110821.get$Lambda (143 samples, 0.04%)</title><rect x="457.3" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$498 (143 samples, 0.04%)</title><rect x="457.3" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="460.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$299/881263769.run (309 samples, 0.08%)</title><rect x="457.8" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (309 samples, 0.08%)</title><rect x="457.8" y="755.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (287 samples, 0.07%)</title><rect x="457.8" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (287 samples, 0.07%)</title><rect x="457.8" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$478/365064831.get$Lambda (287 samples, 0.07%)</title><rect x="457.8" y="707.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$478 (287 samples, 0.07%)</title><rect x="457.8" y="691.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="460.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,356 samples, 0.35%)</title><rect x="458.7" y="787.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.7" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (355 samples, 0.09%)</title><rect x="458.7" y="771.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.7" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (355 samples, 0.09%)</title><rect x="458.7" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.7" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (355 samples, 0.09%)</title><rect x="458.7" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (355 samples, 0.09%)</title><rect x="458.7" y="723.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.7" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (355 samples, 0.09%)</title><rect x="458.7" y="707.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="461.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,001 samples, 0.26%)</title><rect x="459.8" y="771.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (217 samples, 0.06%)</title><rect x="459.8" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (217 samples, 0.06%)</title><rect x="459.8" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$705/1876763004.get$Lambda (217 samples, 0.06%)</title><rect x="459.8" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.8" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$705 (217 samples, 0.06%)</title><rect x="459.8" y="707.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="462.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (784 samples, 0.20%)</title><rect x="460.5" y="755.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.5" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (340 samples, 0.09%)</title><rect x="460.5" y="739.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="463.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (444 samples, 0.12%)</title><rect x="461.5" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (444 samples, 0.12%)</title><rect x="461.5" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.5" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (444 samples, 0.12%)</title><rect x="461.5" y="707.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="464.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,570 samples, 0.41%)</title><rect x="462.9" y="787.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (156 samples, 0.04%)</title><rect x="462.9" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (156 samples, 0.04%)</title><rect x="462.9" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$464/809866627.get$Lambda (156 samples, 0.04%)</title><rect x="462.9" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.9" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$464 (156 samples, 0.04%)</title><rect x="462.9" y="723.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="465.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (848 samples, 0.22%)</title><rect x="463.4" y="771.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (381 samples, 0.10%)</title><rect x="463.4" y="755.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (381 samples, 0.10%)</title><rect x="463.4" y="739.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="466.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (467 samples, 0.12%)</title><rect x="464.6" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.6" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (467 samples, 0.12%)</title><rect x="464.6" y="739.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="467.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (566 samples, 0.15%)</title><rect x="466.0" y="771.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (566 samples, 0.15%)</title><rect x="466.0" y="755.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="469.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (358 samples, 0.09%)</title><rect x="467.7" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (358 samples, 0.09%)</title><rect x="467.7" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (358 samples, 0.09%)</title><rect x="467.7" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (358 samples, 0.09%)</title><rect x="467.7" y="739.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (291 samples, 0.08%)</title><rect x="468.0" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (291 samples, 0.08%)</title><rect x="468.0" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (291 samples, 0.08%)</title><rect x="468.0" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (291 samples, 0.08%)</title><rect x="468.0" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (291 samples, 0.08%)</title><rect x="468.0" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.0" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (291 samples, 0.08%)</title><rect x="468.0" y="643.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="471.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (158 samples, 0.04%)</title><rect x="469.1" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (158 samples, 0.04%)</title><rect x="469.1" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (158 samples, 0.04%)</title><rect x="469.1" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.1" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (158 samples, 0.04%)</title><rect x="469.1" y="739.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="472.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (233,932 samples, 61.05%)</title><rect x="469.6" y="803.0" width="720.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.6" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5,364 samples, 1.40%)</title><rect x="469.6" y="787.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.6" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5,364 samples, 1.40%)</title><rect x="469.6" y="771.0" width="16.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="472.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (228,568 samples, 59.65%)</title><rect x="486.1" y="787.0" width="703.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (228,568 samples, 59.65%)</title><rect x="486.1" y="771.0" width="703.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.1" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (228,568 samples, 59.65%)</title><rect x="486.1" y="755.0" width="703.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.1" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (116,844 samples, 30.50%)</title><rect x="486.1" y="739.0" width="359.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.1" y="750.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (116,844 samples, 30.50%)</title><rect x="486.1" y="723.0" width="359.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.1" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (110,910 samples, 28.95%)</title><rect x="486.1" y="707.0" width="341.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.1" y="718.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (320 samples, 0.08%)</title><rect x="486.1" y="691.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (320 samples, 0.08%)</title><rect x="486.1" y="675.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (320 samples, 0.08%)</title><rect x="486.1" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.04%)</title><rect x="486.1" y="643.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="489.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (168 samples, 0.04%)</title><rect x="486.5" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.5" y="654.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.04%)</title><rect x="486.5" y="627.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="489.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5,379 samples, 1.40%)</title><rect x="487.1" y="691.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5,379 samples, 1.40%)</title><rect x="487.1" y="675.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,379 samples, 1.40%)</title><rect x="487.1" y="659.0" width="16.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,379 samples, 1.40%)</title><rect x="487.1" y="643.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2,671 samples, 0.70%)</title><rect x="487.1" y="627.0" width="8.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="490.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,708 samples, 0.71%)</title><rect x="495.3" y="627.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.3" y="638.0"></text>
</g>
<g>
<title>byte[] (2,708 samples, 0.71%)</title><rect x="495.3" y="611.0" width="8.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="498.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (105,211 samples, 27.46%)</title><rect x="503.6" y="691.0" width="324.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.6" y="702.0">ru/mail/polis/service/s3ponia/AsyncService.put</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.putImpl (105,211 samples, 27.46%)</title><rect x="503.6" y="675.0" width="324.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.6" y="686.0">ru/mail/polis/s3ponia/AsyncServiceUtility.pu..</text>
</g>
<g>
<title>java.lang.String[] (180 samples, 0.05%)</title><rect x="503.6" y="659.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="506.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Long.toString (392 samples, 0.10%)</title><rect x="504.2" y="659.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.2" y="670.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.05%)</title><rect x="504.2" y="643.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="507.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (182 samples, 0.05%)</title><rect x="504.8" y="643.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="507.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (416 samples, 0.11%)</title><rect x="505.4" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/726950788.invoke (416 samples, 0.11%)</title><rect x="505.4" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (416 samples, 0.11%)</title><rect x="505.4" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (267 samples, 0.07%)</title><rect x="505.4" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (267 samples, 0.07%)</title><rect x="505.4" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.4" y="606.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.07%)</title><rect x="505.4" y="579.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="508.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (149 samples, 0.04%)</title><rect x="506.2" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.04%)</title><rect x="506.2" y="595.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="509.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (195 samples, 0.05%)</title><rect x="506.7" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (195 samples, 0.05%)</title><rect x="506.7" y="643.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="509.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (605 samples, 0.16%)</title><rect x="507.3" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (224 samples, 0.06%)</title><rect x="507.3" y="643.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="510.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (381 samples, 0.10%)</title><rect x="508.0" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (102 samples, 0.03%)</title><rect x="508.0" y="627.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="511.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (279 samples, 0.07%)</title><rect x="508.3" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (279 samples, 0.07%)</title><rect x="508.3" y="611.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="511.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,007 samples, 1.31%)</title><rect x="509.1" y="659.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,007 samples, 1.31%)</title><rect x="509.1" y="643.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,007 samples, 1.31%)</title><rect x="509.1" y="627.0" width="15.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="512.1" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (160 samples, 0.04%)</title><rect x="524.6" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.6" y="670.0"></text>
</g>
<g>
<title>java/time/Duration.create (160 samples, 0.04%)</title><rect x="524.6" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.6" y="654.0"></text>
</g>
<g>
<title>java.time.Duration (160 samples, 0.04%)</title><rect x="524.6" y="627.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="527.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (356 samples, 0.09%)</title><rect x="525.0" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (356 samples, 0.09%)</title><rect x="525.0" y="643.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (230 samples, 0.06%)</title><rect x="525.0" y="627.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="528.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (123 samples, 0.03%)</title><rect x="525.8" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (123 samples, 0.03%)</title><rect x="525.8" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="528.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (563 samples, 0.15%)</title><rect x="526.1" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (563 samples, 0.15%)</title><rect x="526.1" y="643.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (563 samples, 0.15%)</title><rect x="526.1" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.1" y="638.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (563 samples, 0.15%)</title><rect x="526.1" y="611.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (287 samples, 0.07%)</title><rect x="526.1" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.1" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (287 samples, 0.07%)</title><rect x="526.1" y="579.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="529.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$125/325876373.apply (276 samples, 0.07%)</title><rect x="527.0" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (276 samples, 0.07%)</title><rect x="527.0" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.0" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (138 samples, 0.04%)</title><rect x="527.0" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="530.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (138 samples, 0.04%)</title><rect x="527.5" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (138 samples, 0.04%)</title><rect x="527.5" y="547.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="530.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (507 samples, 0.13%)</title><rect x="527.9" y="659.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.headers (507 samples, 0.13%)</title><rect x="527.9" y="643.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (507 samples, 0.13%)</title><rect x="527.9" y="627.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (507 samples, 0.13%)</title><rect x="527.9" y="611.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.9" y="622.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (507 samples, 0.13%)</title><rect x="527.9" y="595.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (233 samples, 0.06%)</title><rect x="527.9" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (233 samples, 0.06%)</title><rect x="527.9" y="563.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="530.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$125/325876373.apply (274 samples, 0.07%)</title><rect x="528.6" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (274 samples, 0.07%)</title><rect x="528.6" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.6" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (139 samples, 0.04%)</title><rect x="528.6" y="547.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="531.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (135 samples, 0.04%)</title><rect x="529.0" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (135 samples, 0.04%)</title><rect x="529.0" y="531.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="532.0" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (2,374 samples, 0.62%)</title><rect x="529.4" y="659.0" width="7.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="532.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13,205 samples, 3.45%)</title><rect x="536.7" y="659.0" width="40.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.7" y="670.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13,205 samples, 3.45%)</title><rect x="536.7" y="643.0" width="40.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.7" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8,941 samples, 2.33%)</title><rect x="536.7" y="627.0" width="27.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.7" y="638.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8,941 samples, 2.33%)</title><rect x="536.7" y="611.0" width="27.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.7" y="622.0">o..</text>
</g>
<g>
<title>byte[] (8,154 samples, 2.13%)</title><rect x="536.7" y="595.0" width="25.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="539.7" y="606.0">b..</text>
</g>
<g>
<title>byte[] (787 samples, 0.21%)</title><rect x="561.9" y="595.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4,264 samples, 1.11%)</title><rect x="564.3" y="627.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.3" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4,264 samples, 1.11%)</title><rect x="564.3" y="611.0" width="13.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="567.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10,044 samples, 2.62%)</title><rect x="577.4" y="659.0" width="30.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.4" y="670.0">on..</text>
</g>
<g>
<title>byte[] (4,193 samples, 1.09%)</title><rect x="577.4" y="643.0" width="12.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="580.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (3,384 samples, 0.88%)</title><rect x="590.3" y="643.0" width="10.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2,467 samples, 0.64%)</title><rect x="600.8" y="643.0" width="7.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="603.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getFuturesResponse (42,042 samples, 10.97%)</title><rect x="608.3" y="659.0" width="129.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.3" y="670.0">ru/mail/polis/s3..</text>
</g>
<g>
<title>java.util.ArrayList (140 samples, 0.04%)</title><rect x="608.3" y="643.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="611.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,027 samples, 0.27%)</title><rect x="608.8" y="643.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/922872566.invoke (1,027 samples, 0.27%)</title><rect x="608.8" y="627.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,027 samples, 0.27%)</title><rect x="608.8" y="611.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newArray (733 samples, 0.19%)</title><rect x="608.8" y="595.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (733 samples, 0.19%)</title><rect x="608.8" y="579.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.8" y="590.0"></text>
</g>
<g>
<title>byte[] (733 samples, 0.19%)</title><rect x="608.8" y="563.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="611.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (294 samples, 0.08%)</title><rect x="611.0" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (294 samples, 0.08%)</title><rect x="611.0" y="579.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="614.0" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (4,920 samples, 1.28%)</title><rect x="611.9" y="643.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.9" y="654.0"></text>
</g>
<g>
<title>java.net.URI (986 samples, 0.26%)</title><rect x="611.9" y="627.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="614.9" y="638.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (3,934 samples, 1.03%)</title><rect x="615.0" y="627.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.0" y="638.0"></text>
</g>
<g>
<title>java.net.URI$Parser (414 samples, 0.11%)</title><rect x="615.0" y="611.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="618.0" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (3,520 samples, 0.92%)</title><rect x="616.3" y="611.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (656 samples, 0.17%)</title><rect x="616.3" y="595.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (656 samples, 0.17%)</title><rect x="616.3" y="579.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (330 samples, 0.09%)</title><rect x="616.3" y="563.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="619.3" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (326 samples, 0.09%)</title><rect x="617.3" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.3" y="574.0"></text>
</g>
<g>
<title>byte[] (326 samples, 0.09%)</title><rect x="617.3" y="547.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="620.3" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2,864 samples, 0.75%)</title><rect x="618.3" y="595.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,412 samples, 0.37%)</title><rect x="618.3" y="579.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,412 samples, 0.37%)</title><rect x="618.3" y="563.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (614 samples, 0.16%)</title><rect x="618.3" y="547.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="621.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (798 samples, 0.21%)</title><rect x="620.2" y="547.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.2" y="558.0"></text>
</g>
<g>
<title>byte[] (798 samples, 0.21%)</title><rect x="620.2" y="531.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1,452 samples, 0.38%)</title><rect x="622.6" y="579.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (732 samples, 0.19%)</title><rect x="622.6" y="563.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (732 samples, 0.19%)</title><rect x="622.6" y="547.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (289 samples, 0.08%)</title><rect x="622.6" y="531.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (443 samples, 0.12%)</title><rect x="623.5" y="531.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.5" y="542.0"></text>
</g>
<g>
<title>byte[] (443 samples, 0.12%)</title><rect x="623.5" y="515.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="626.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (720 samples, 0.19%)</title><rect x="624.9" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.9" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (720 samples, 0.19%)</title><rect x="624.9" y="547.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (720 samples, 0.19%)</title><rect x="624.9" y="531.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (720 samples, 0.19%)</title><rect x="624.9" y="515.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (306 samples, 0.08%)</title><rect x="624.9" y="499.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="627.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (414 samples, 0.11%)</title><rect x="625.8" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.8" y="510.0"></text>
</g>
<g>
<title>byte[] (414 samples, 0.11%)</title><rect x="625.8" y="483.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="628.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (214 samples, 0.06%)</title><rect x="627.1" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (214 samples, 0.06%)</title><rect x="627.1" y="627.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="630.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6,609 samples, 1.72%)</title><rect x="627.8" y="643.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (529 samples, 0.14%)</title><rect x="627.8" y="627.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="630.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6,080 samples, 1.59%)</title><rect x="629.4" y="627.0" width="18.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,691 samples, 1.49%)</title><rect x="629.4" y="611.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.4" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,691 samples, 1.49%)</title><rect x="629.4" y="595.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.4" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (199 samples, 0.05%)</title><rect x="629.4" y="579.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="632.4" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (311 samples, 0.08%)</title><rect x="630.0" y="579.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="633.0" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (589 samples, 0.15%)</title><rect x="631.0" y="579.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="634.0" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (183 samples, 0.05%)</title><rect x="632.8" y="579.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="635.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (416 samples, 0.11%)</title><rect x="633.3" y="579.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (416 samples, 0.11%)</title><rect x="633.3" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.get$Lambda (416 samples, 0.11%)</title><rect x="633.3" y="547.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.3" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$132 (416 samples, 0.11%)</title><rect x="633.3" y="531.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="636.3" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (373 samples, 0.10%)</title><rect x="634.6" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.6" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (373 samples, 0.10%)</title><rect x="634.6" y="563.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="637.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,931 samples, 0.76%)</title><rect x="635.8" y="579.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (2,931 samples, 0.76%)</title><rect x="635.8" y="563.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,931 samples, 0.76%)</title><rect x="635.8" y="547.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (677 samples, 0.18%)</title><rect x="635.8" y="531.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (677 samples, 0.18%)</title><rect x="635.8" y="515.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (677 samples, 0.18%)</title><rect x="635.8" y="499.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (677 samples, 0.18%)</title><rect x="635.8" y="483.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (677 samples, 0.18%)</title><rect x="635.8" y="467.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (677 samples, 0.18%)</title><rect x="635.8" y="451.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (677 samples, 0.18%)</title><rect x="635.8" y="435.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (677 samples, 0.18%)</title><rect x="635.8" y="419.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="638.8" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,184 samples, 0.31%)</title><rect x="637.8" y="531.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.8" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,184 samples, 0.31%)</title><rect x="637.8" y="515.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (609 samples, 0.16%)</title><rect x="637.8" y="499.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (609 samples, 0.16%)</title><rect x="637.8" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (609 samples, 0.16%)</title><rect x="637.8" y="467.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="640.8" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (575 samples, 0.15%)</title><rect x="639.7" y="499.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.7" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (575 samples, 0.15%)</title><rect x="639.7" y="483.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="642.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,070 samples, 0.28%)</title><rect x="641.5" y="531.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,070 samples, 0.28%)</title><rect x="641.5" y="515.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="644.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (689 samples, 0.18%)</title><rect x="644.8" y="579.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (689 samples, 0.18%)</title><rect x="644.8" y="563.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="647.8" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (389 samples, 0.10%)</title><rect x="646.9" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.9" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (389 samples, 0.10%)</title><rect x="646.9" y="595.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="649.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.proxyAsync (29,132 samples, 7.60%)</title><rect x="648.1" y="643.0" width="89.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.1" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (865 samples, 0.23%)</title><rect x="648.1" y="627.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (865 samples, 0.23%)</title><rect x="648.1" y="611.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (472 samples, 0.12%)</title><rect x="648.1" y="595.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="651.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (393 samples, 0.10%)</title><rect x="649.6" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (393 samples, 0.10%)</title><rect x="649.6" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (393 samples, 0.10%)</title><rect x="649.6" y="563.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="652.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (28,267 samples, 7.38%)</title><rect x="650.8" y="627.0" width="87.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.8" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (28,267 samples, 7.38%)</title><rect x="650.8" y="611.0" width="87.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.8" y="622.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (28,267 samples, 7.38%)</title><rect x="650.8" y="595.0" width="87.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.8" y="606.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (28,267 samples, 7.38%)</title><rect x="650.8" y="579.0" width="87.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.8" y="590.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (220 samples, 0.06%)</title><rect x="650.8" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (220 samples, 0.06%)</title><rect x="650.8" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$178/1181103675.get$Lambda (220 samples, 0.06%)</title><rect x="650.8" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$178 (220 samples, 0.06%)</title><rect x="650.8" y="515.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="653.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (869 samples, 0.23%)</title><rect x="651.4" y="563.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (869 samples, 0.23%)</title><rect x="651.4" y="547.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (486 samples, 0.13%)</title><rect x="651.4" y="531.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="654.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (383 samples, 0.10%)</title><rect x="652.9" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (383 samples, 0.10%)</title><rect x="652.9" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (383 samples, 0.10%)</title><rect x="652.9" y="499.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (900 samples, 0.23%)</title><rect x="654.1" y="563.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (900 samples, 0.23%)</title><rect x="654.1" y="547.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (523 samples, 0.14%)</title><rect x="654.1" y="531.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="657.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (377 samples, 0.10%)</title><rect x="655.7" y="531.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (377 samples, 0.10%)</title><rect x="655.7" y="515.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (377 samples, 0.10%)</title><rect x="655.7" y="499.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="658.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (690 samples, 0.18%)</title><rect x="656.9" y="563.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="659.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (1,163 samples, 0.30%)</title><rect x="659.0" y="563.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="662.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (14,058 samples, 3.67%)</title><rect x="662.7" y="563.0" width="43.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.7" y="574.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,439 samples, 0.38%)</title><rect x="662.7" y="547.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,152 samples, 0.30%)</title><rect x="662.7" y="531.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.7" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (451 samples, 0.12%)</title><rect x="662.7" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.7" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (451 samples, 0.12%)</title><rect x="662.7" y="499.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="665.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (701 samples, 0.18%)</title><rect x="664.1" y="515.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.1" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (701 samples, 0.18%)</title><rect x="664.1" y="499.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="667.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (287 samples, 0.07%)</title><rect x="666.2" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (287 samples, 0.07%)</title><rect x="666.2" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (287 samples, 0.07%)</title><rect x="666.2" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$64/963601816.get (287 samples, 0.07%)</title><rect x="666.2" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (287 samples, 0.07%)</title><rect x="666.2" y="467.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="669.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,715 samples, 1.49%)</title><rect x="667.1" y="547.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,715 samples, 1.49%)</title><rect x="667.1" y="531.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.1" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (217 samples, 0.06%)</title><rect x="667.1" y="515.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="670.1" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (319 samples, 0.08%)</title><rect x="667.8" y="515.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (615 samples, 0.16%)</title><rect x="668.8" y="515.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="671.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeSet (207 samples, 0.05%)</title><rect x="670.7" y="515.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="673.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (378 samples, 0.10%)</title><rect x="671.3" y="515.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (378 samples, 0.10%)</title><rect x="671.3" y="499.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.get$Lambda (378 samples, 0.10%)</title><rect x="671.3" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.3" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$132 (378 samples, 0.10%)</title><rect x="671.3" y="467.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="674.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2,949 samples, 0.77%)</title><rect x="672.5" y="515.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,949 samples, 0.77%)</title><rect x="672.5" y="499.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$132/1415138542.accept (2,949 samples, 0.77%)</title><rect x="672.5" y="483.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,949 samples, 0.77%)</title><rect x="672.5" y="467.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (695 samples, 0.18%)</title><rect x="672.5" y="451.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$133/872519190.accept (695 samples, 0.18%)</title><rect x="672.5" y="435.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (695 samples, 0.18%)</title><rect x="672.5" y="419.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (695 samples, 0.18%)</title><rect x="672.5" y="403.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (695 samples, 0.18%)</title><rect x="672.5" y="387.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (695 samples, 0.18%)</title><rect x="672.5" y="371.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (695 samples, 0.18%)</title><rect x="672.5" y="355.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (695 samples, 0.18%)</title><rect x="672.5" y="339.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="675.5" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,260 samples, 0.33%)</title><rect x="674.6" y="451.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.6" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,260 samples, 0.33%)</title><rect x="674.6" y="435.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (637 samples, 0.17%)</title><rect x="674.6" y="419.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (637 samples, 0.17%)</title><rect x="674.6" y="403.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (637 samples, 0.17%)</title><rect x="674.6" y="387.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="677.6" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (623 samples, 0.16%)</title><rect x="676.6" y="419.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (623 samples, 0.16%)</title><rect x="676.6" y="403.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="679.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (994 samples, 0.26%)</title><rect x="678.5" y="451.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (994 samples, 0.26%)</title><rect x="678.5" y="435.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="681.5" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (417 samples, 0.11%)</title><rect x="681.5" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.5" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (417 samples, 0.11%)</title><rect x="681.5" y="499.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="684.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (613 samples, 0.16%)</title><rect x="682.8" y="515.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (613 samples, 0.16%)</title><rect x="682.8" y="499.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="685.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (191 samples, 0.05%)</title><rect x="684.7" y="547.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="687.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4,904 samples, 1.28%)</title><rect x="685.3" y="547.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.3" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4,904 samples, 1.28%)</title><rect x="685.3" y="531.0" width="15.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.3" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4,496 samples, 1.17%)</title><rect x="685.3" y="515.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.3" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (4,496 samples, 1.17%)</title><rect x="685.3" y="499.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.3" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4,496 samples, 1.17%)</title><rect x="685.3" y="483.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.3" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4,496 samples, 1.17%)</title><rect x="685.3" y="467.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.3" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (956 samples, 0.25%)</title><rect x="685.3" y="451.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="688.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,265 samples, 0.33%)</title><rect x="688.3" y="451.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.3" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,265 samples, 0.33%)</title><rect x="688.3" y="435.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.3" y="446.0"></text>
</g>
<g>
<title>byte[] (1,265 samples, 0.33%)</title><rect x="688.3" y="419.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="691.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,275 samples, 0.59%)</title><rect x="692.1" y="451.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,275 samples, 0.59%)</title><rect x="692.1" y="435.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (956 samples, 0.25%)</title><rect x="692.1" y="419.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="695.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,319 samples, 0.34%)</title><rect x="695.1" y="419.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.1" y="430.0"></text>
</g>
<g>
<title>byte[] (1,319 samples, 0.34%)</title><rect x="695.1" y="403.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="698.1" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (408 samples, 0.11%)</title><rect x="699.2" y="515.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="702.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (656 samples, 0.17%)</title><rect x="700.4" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (656 samples, 0.17%)</title><rect x="700.4" y="531.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="703.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,153 samples, 0.30%)</title><rect x="702.4" y="547.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (310 samples, 0.08%)</title><rect x="702.4" y="531.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="705.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (285 samples, 0.07%)</title><rect x="703.4" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (285 samples, 0.07%)</title><rect x="703.4" y="515.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="706.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (558 samples, 0.15%)</title><rect x="704.3" y="531.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (558 samples, 0.15%)</title><rect x="704.3" y="515.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="707.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7,350 samples, 1.92%)</title><rect x="706.0" y="563.0" width="22.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.0" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (227 samples, 0.06%)</title><rect x="706.0" y="547.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="709.0" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.map (671 samples, 0.18%)</title><rect x="706.7" y="547.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$144/1528421451.apply (671 samples, 0.18%)</title><rect x="706.7" y="531.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (337 samples, 0.09%)</title><rect x="706.7" y="515.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="709.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (334 samples, 0.09%)</title><rect x="707.7" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (334 samples, 0.09%)</title><rect x="707.7" y="499.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="710.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (910 samples, 0.24%)</title><rect x="708.7" y="547.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="711.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (192 samples, 0.05%)</title><rect x="711.6" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (192 samples, 0.05%)</title><rect x="711.6" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="714.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (206 samples, 0.05%)</title><rect x="712.1" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.1" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (206 samples, 0.05%)</title><rect x="712.1" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.1" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (206 samples, 0.05%)</title><rect x="712.1" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="715.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5,144 samples, 1.34%)</title><rect x="712.8" y="547.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5,144 samples, 1.34%)</title><rect x="712.8" y="531.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (387 samples, 0.10%)</title><rect x="712.8" y="515.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="715.8" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList (399 samples, 0.10%)</title><rect x="714.0" y="515.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="717.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2,149 samples, 0.56%)</title><rect x="715.2" y="515.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2,149 samples, 0.56%)</title><rect x="715.2" y="499.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (2,149 samples, 0.56%)</title><rect x="715.2" y="483.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (2,149 samples, 0.56%)</title><rect x="715.2" y="467.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="478.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (2,148 samples, 0.56%)</title><rect x="715.2" y="451.0" width="6.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="718.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1,569 samples, 0.41%)</title><rect x="721.8" y="515.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.8" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (1,569 samples, 0.41%)</title><rect x="721.8" y="499.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (838 samples, 0.22%)</title><rect x="721.8" y="483.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (838 samples, 0.22%)</title><rect x="721.8" y="467.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (838 samples, 0.22%)</title><rect x="721.8" y="451.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.8" y="462.0"></text>
</g>
<g>
<title>java.lang.ref.WeakReference (838 samples, 0.22%)</title><rect x="721.8" y="435.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="724.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (731 samples, 0.19%)</title><rect x="724.4" y="483.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (216 samples, 0.06%)</title><rect x="724.4" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (216 samples, 0.06%)</title><rect x="724.4" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="727.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor17.newInstance (515 samples, 0.13%)</title><rect x="725.1" y="467.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (515 samples, 0.13%)</title><rect x="725.1" y="451.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="728.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (640 samples, 0.17%)</title><rect x="726.6" y="515.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.6" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (640 samples, 0.17%)</title><rect x="726.6" y="499.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.6" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (640 samples, 0.17%)</title><rect x="726.6" y="483.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="729.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2,990 samples, 0.78%)</title><rect x="728.6" y="563.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (307 samples, 0.08%)</title><rect x="728.6" y="547.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (284 samples, 0.07%)</title><rect x="728.6" y="531.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="731.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (393 samples, 0.10%)</title><rect x="729.6" y="547.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="732.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2,290 samples, 0.60%)</title><rect x="730.8" y="547.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (395 samples, 0.10%)</title><rect x="730.8" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (395 samples, 0.10%)</title><rect x="730.8" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/562914135.get$Lambda (188 samples, 0.05%)</title><rect x="730.8" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$157 (188 samples, 0.05%)</title><rect x="730.8" y="483.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/402007990.get$Lambda (207 samples, 0.05%)</title><rect x="731.4" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$164 (207 samples, 0.05%)</title><rect x="731.4" y="483.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="734.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,895 samples, 0.49%)</title><rect x="732.0" y="531.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,895 samples, 0.49%)</title><rect x="732.0" y="515.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,065 samples, 0.28%)</title><rect x="732.0" y="499.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="735.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (830 samples, 0.22%)</title><rect x="735.3" y="499.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (830 samples, 0.22%)</title><rect x="735.3" y="483.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (830 samples, 0.22%)</title><rect x="735.3" y="467.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="738.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getReplicationConfiguration (1,969 samples, 0.51%)</title><rect x="737.8" y="659.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.parseAndValidateReplicas (1,969 samples, 0.51%)</title><rect x="737.8" y="643.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$ReplicationConfiguration.parse (1,766 samples, 0.46%)</title><rect x="737.8" y="627.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (211 samples, 0.06%)</title><rect x="737.8" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (119 samples, 0.03%)</title><rect x="737.8" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.8" y="606.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (119 samples, 0.03%)</title><rect x="737.8" y="579.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="740.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (92 samples, 0.02%)</title><rect x="738.2" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.2" y="606.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (92 samples, 0.02%)</title><rect x="738.2" y="579.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="741.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,396 samples, 0.36%)</title><rect x="738.5" y="611.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (597 samples, 0.16%)</title><rect x="738.5" y="595.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (597 samples, 0.16%)</title><rect x="738.5" y="579.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (597 samples, 0.16%)</title><rect x="738.5" y="563.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (597 samples, 0.16%)</title><rect x="738.5" y="547.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (597 samples, 0.16%)</title><rect x="738.5" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (597 samples, 0.16%)</title><rect x="738.5" y="515.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (597 samples, 0.16%)</title><rect x="738.5" y="499.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (314 samples, 0.08%)</title><rect x="738.5" y="483.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="741.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (283 samples, 0.07%)</title><rect x="739.4" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.4" y="494.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.07%)</title><rect x="739.4" y="467.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="742.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (303 samples, 0.08%)</title><rect x="740.3" y="595.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (303 samples, 0.08%)</title><rect x="740.3" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (303 samples, 0.08%)</title><rect x="740.3" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.3" y="574.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (303 samples, 0.08%)</title><rect x="740.3" y="547.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.3" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (141 samples, 0.04%)</title><rect x="741.2" y="595.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="744.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (355 samples, 0.09%)</title><rect x="741.7" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (355 samples, 0.09%)</title><rect x="741.7" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (355 samples, 0.09%)</title><rect x="741.7" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (355 samples, 0.09%)</title><rect x="741.7" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (355 samples, 0.09%)</title><rect x="741.7" y="531.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="744.7" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.s3ponia.Utility$ReplicationConfiguration (159 samples, 0.04%)</title><rect x="742.8" y="611.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="745.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.all (203 samples, 0.05%)</title><rect x="743.3" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.all (203 samples, 0.05%)</title><rect x="743.3" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (203 samples, 0.05%)</title><rect x="743.3" y="595.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="746.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStamp (3,590 samples, 0.94%)</title><rect x="743.9" y="659.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (3,590 samples, 0.94%)</title><rect x="743.9" y="643.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (292 samples, 0.08%)</title><rect x="743.9" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (292 samples, 0.08%)</title><rect x="743.9" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (292 samples, 0.08%)</title><rect x="743.9" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.9" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (285 samples, 0.07%)</title><rect x="743.9" y="579.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (285 samples, 0.07%)</title><rect x="743.9" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.9" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (169 samples, 0.04%)</title><rect x="743.9" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.9" y="558.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (169 samples, 0.04%)</title><rect x="743.9" y="531.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="746.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (116 samples, 0.03%)</title><rect x="744.4" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (116 samples, 0.03%)</title><rect x="744.4" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (116 samples, 0.03%)</title><rect x="744.4" y="515.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="747.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (3,298 samples, 0.86%)</title><rect x="744.8" y="627.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.of (3,264 samples, 0.85%)</title><rect x="744.9" y="611.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.9" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.s3ponia.Table$Value (3,264 samples, 0.85%)</title><rect x="744.9" y="595.0" width="10.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="747.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStampAsync (510 samples, 0.13%)</title><rect x="754.9" y="659.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1169240815.linkToTargetMethod (195 samples, 0.05%)</title><rect x="754.9" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1591172434.invokeStatic (195 samples, 0.05%)</title><rect x="754.9" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$186/1093009101.get$Lambda (195 samples, 0.05%)</title><rect x="754.9" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.9" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.s3ponia.AsyncServiceUtility$$Lambda$186 (195 samples, 0.05%)</title><rect x="754.9" y="595.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="757.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (315 samples, 0.08%)</title><rect x="755.5" y="643.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (315 samples, 0.08%)</title><rect x="755.5" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (162 samples, 0.04%)</title><rect x="755.5" y="611.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="758.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (139 samples, 0.04%)</title><rect x="756.0" y="611.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="759.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.validatePut (100 samples, 0.03%)</title><rect x="756.5" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (100 samples, 0.03%)</title><rect x="756.5" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.03%)</title><rect x="756.5" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility$$Lambda$193/2032886835.get$Lambda (100 samples, 0.03%)</title><rect x="756.5" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.s3ponia.AsyncServiceUtility$$Lambda$193 (100 samples, 0.03%)</title><rect x="756.5" y="595.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="759.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (11,685 samples, 3.05%)</title><rect x="756.8" y="659.0" width="36.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.8" y="670.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (11,685 samples, 3.05%)</title><rect x="756.8" y="643.0" width="36.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="654.0">ru/..</text>
</g>
<g>
<title>java/lang/String.stripLeading (5,764 samples, 1.50%)</title><rect x="756.8" y="627.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (5,764 samples, 1.50%)</title><rect x="756.8" y="611.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,764 samples, 1.50%)</title><rect x="756.8" y="595.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2,464 samples, 0.64%)</title><rect x="756.8" y="579.0" width="7.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="759.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,300 samples, 0.86%)</title><rect x="764.4" y="579.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.4" y="590.0"></text>
</g>
<g>
<title>byte[] (3,300 samples, 0.86%)</title><rect x="764.4" y="563.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="767.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,444 samples, 0.90%)</title><rect x="774.6" y="627.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,444 samples, 0.90%)</title><rect x="774.6" y="611.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,444 samples, 0.90%)</title><rect x="774.6" y="595.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.6" y="606.0"></text>
</g>
<g>
<title>byte[] (3,444 samples, 0.90%)</title><rect x="774.6" y="579.0" width="10.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="777.6" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.s3ponia.Utility$Header (2,477 samples, 0.65%)</title><rect x="785.2" y="627.0" width="7.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="788.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.atLeast (2,732 samples, 0.71%)</title><rect x="792.8" y="659.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (178 samples, 0.05%)</title><rect x="792.8" y="643.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="795.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (158 samples, 0.04%)</title><rect x="793.4" y="643.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="796.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (210 samples, 0.05%)</title><rect x="793.8" y="643.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,960 samples, 0.51%)</title><rect x="794.5" y="643.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$$Lambda$188/560519878.accept (1,960 samples, 0.51%)</title><rect x="794.5" y="627.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.lambda$atLeast$1 (1,960 samples, 0.51%)</title><rect x="794.5" y="611.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (631 samples, 0.16%)</title><rect x="794.5" y="595.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (631 samples, 0.16%)</title><rect x="794.5" y="579.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$$Lambda$189/1339399088.get$Lambda (631 samples, 0.16%)</title><rect x="794.5" y="563.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.5" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.s3ponia.Utility$$Lambda$189 (631 samples, 0.16%)</title><rect x="794.5" y="547.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="797.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,329 samples, 0.35%)</title><rect x="796.4" y="595.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,329 samples, 0.35%)</title><rect x="796.4" y="579.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (789 samples, 0.21%)</title><rect x="796.4" y="563.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="799.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (130 samples, 0.03%)</title><rect x="798.9" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (130 samples, 0.03%)</title><rect x="798.9" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="801.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (410 samples, 0.11%)</title><rect x="799.3" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (410 samples, 0.11%)</title><rect x="799.3" y="547.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (410 samples, 0.11%)</title><rect x="799.3" y="531.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="802.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (226 samples, 0.06%)</title><rect x="800.5" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.03%)</title><rect x="800.5" y="627.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="803.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (102 samples, 0.03%)</title><rect x="800.9" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="803.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.byteBufferFromString (8,298 samples, 2.17%)</title><rect x="801.2" y="659.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.2" y="670.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (3,111 samples, 0.81%)</title><rect x="801.2" y="643.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,111 samples, 0.81%)</title><rect x="801.2" y="627.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,111 samples, 0.81%)</title><rect x="801.2" y="611.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,111 samples, 0.81%)</title><rect x="801.2" y="595.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.2" y="606.0"></text>
</g>
<g>
<title>byte[] (3,111 samples, 0.81%)</title><rect x="801.2" y="579.0" width="9.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="804.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,187 samples, 1.35%)</title><rect x="810.8" y="643.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,187 samples, 1.35%)</title><rect x="810.8" y="627.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.8" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,187 samples, 1.35%)</title><rect x="810.8" y="611.0" width="16.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (281 samples, 0.07%)</title><rect x="826.8" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (281 samples, 0.07%)</title><rect x="826.8" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (183 samples, 0.05%)</title><rect x="826.8" y="627.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="829.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$33/649734728.apply (98 samples, 0.03%)</title><rect x="827.3" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (98 samples, 0.03%)</title><rect x="827.3" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (98 samples, 0.03%)</title><rect x="827.3" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="830.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5,934 samples, 1.55%)</title><rect x="827.6" y="707.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,934 samples, 1.55%)</title><rect x="827.6" y="691.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,934 samples, 1.55%)</title><rect x="827.6" y="675.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2,591 samples, 0.68%)</title><rect x="827.6" y="659.0" width="8.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="830.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,343 samples, 0.87%)</title><rect x="835.6" y="659.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.6" y="670.0"></text>
</g>
<g>
<title>byte[] (3,343 samples, 0.87%)</title><rect x="835.6" y="643.0" width="10.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="838.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (29,312 samples, 7.65%)</title><rect x="845.9" y="739.0" width="90.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.9" y="750.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (4,392 samples, 1.15%)</title><rect x="845.9" y="723.0" width="13.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="848.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8,231 samples, 2.15%)</title><rect x="859.4" y="723.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.4" y="734.0">o..</text>
</g>
<g>
<title>java.lang.String[] (7,699 samples, 2.01%)</title><rect x="859.4" y="707.0" width="23.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="862.4" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String[] (532 samples, 0.14%)</title><rect x="883.2" y="707.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16,689 samples, 4.36%)</title><rect x="884.8" y="723.0" width="51.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.8" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (16,689 samples, 4.36%)</title><rect x="884.8" y="707.0" width="51.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.8" y="718.0">one/n..</text>
</g>
<g>
<title>char[] (9,840 samples, 2.57%)</title><rect x="884.8" y="691.0" width="30.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="887.8" y="702.0">ch..</text>
</g>
<g>
<title>java.lang.String (2,689 samples, 0.70%)</title><rect x="915.1" y="691.0" width="8.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="918.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,154 samples, 1.08%)</title><rect x="923.4" y="691.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,154 samples, 1.08%)</title><rect x="923.4" y="675.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,154 samples, 1.08%)</title><rect x="923.4" y="659.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.4" y="670.0"></text>
</g>
<g>
<title>byte[] (4,154 samples, 1.08%)</title><rect x="923.4" y="643.0" width="12.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="926.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3,308 samples, 0.86%)</title><rect x="936.2" y="739.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.2" y="750.0"></text>
</g>
<g>
<title>byte[] (3,308 samples, 0.86%)</title><rect x="936.2" y="723.0" width="10.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="939.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5,133 samples, 1.34%)</title><rect x="946.4" y="739.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,133 samples, 1.34%)</title><rect x="946.4" y="723.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,133 samples, 1.34%)</title><rect x="946.4" y="707.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (2,498 samples, 0.65%)</title><rect x="946.4" y="691.0" width="7.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="949.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,635 samples, 0.69%)</title><rect x="954.1" y="691.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.1" y="702.0"></text>
</g>
<g>
<title>byte[] (2,635 samples, 0.69%)</title><rect x="954.1" y="675.0" width="8.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="957.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73,971 samples, 19.31%)</title><rect x="962.2" y="739.0" width="227.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.2" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (73,971 samples, 19.31%)</title><rect x="962.2" y="723.0" width="227.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.2" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (34,428 samples, 8.99%)</title><rect x="962.2" y="707.0" width="106.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="965.2" y="718.0">char[]</text>
</g>
<g>
<title>char[] (1,726 samples, 0.45%)</title><rect x="1068.2" y="707.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (13,747 samples, 3.59%)</title><rect x="1073.5" y="707.0" width="42.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1076.5" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24,070 samples, 6.28%)</title><rect x="1115.9" y="707.0" width="74.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.9" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24,070 samples, 6.28%)</title><rect x="1115.9" y="691.0" width="74.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.9" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24,070 samples, 6.28%)</title><rect x="1115.9" y="675.0" width="74.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.9" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (24,069 samples, 6.28%)</title><rect x="1115.9" y="659.0" width="74.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1118.9" y="670.0">byte[]</text>
</g>
</g>
</svg>
