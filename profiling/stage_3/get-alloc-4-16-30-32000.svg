<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (7,874 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 31 tid=33795] (19 samples, 0.24%)</title><rect x="10.0" y="851.0" width="2.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 0.24%)</title><rect x="10.0" y="835.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (19 samples, 0.24%)</title><rect x="10.0" y="819.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (19 samples, 0.24%)</title><rect x="10.0" y="803.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.linkToTargetMethod (19 samples, 0.24%)</title><rect x="10.0" y="787.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1137272644.invoke (19 samples, 0.24%)</title><rect x="10.0" y="771.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.24%)</title><rect x="10.0" y="755.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.24%)</title><rect x="10.0" y="739.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.24%)</title><rect x="10.0" y="723.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.24%)</title><rect x="10.0" y="707.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=26627] (2 samples, 0.03%)</title><rect x="12.8" y="851.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="15.8" y="862.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (2 samples, 0.03%)</title><rect x="12.8" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.8" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=23571] (565 samples, 7.18%)</title><rect x="13.1" y="851.0" width="84.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="16.1" y="862.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (565 samples, 7.18%)</title><rect x="13.1" y="835.0" width="84.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.1" y="846.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (47 samples, 0.60%)</title><rect x="13.1" y="819.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (30 samples, 0.38%)</title><rect x="13.1" y="803.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.1" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (12 samples, 0.15%)</title><rect x="13.1" y="787.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="16.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (18 samples, 0.23%)</title><rect x="14.9" y="787.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (17 samples, 0.22%)</title><rect x="17.6" y="803.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (17 samples, 0.22%)</title><rect x="17.6" y="787.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (17 samples, 0.22%)</title><rect x="17.6" y="771.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (17 samples, 0.22%)</title><rect x="17.6" y="755.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (17 samples, 0.22%)</title><rect x="17.6" y="739.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.22%)</title><rect x="17.6" y="723.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.22%)</title><rect x="17.6" y="707.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (17 samples, 0.22%)</title><rect x="17.6" y="691.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (17 samples, 0.22%)</title><rect x="17.6" y="675.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.6" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (17 samples, 0.22%)</title><rect x="17.6" y="659.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (518 samples, 6.58%)</title><rect x="20.2" y="819.0" width="77.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.2" y="830.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (518 samples, 6.58%)</title><rect x="20.2" y="803.0" width="77.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.2" y="814.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (518 samples, 6.58%)</title><rect x="20.2" y="787.0" width="77.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (232 samples, 2.95%)</title><rect x="20.2" y="771.0" width="34.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.2" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (232 samples, 2.95%)</title><rect x="20.2" y="755.0" width="34.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.2" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (43 samples, 0.55%)</title><rect x="20.2" y="739.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.55%)</title><rect x="20.2" y="723.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.55%)</title><rect x="20.2" y="707.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.29%)</title><rect x="20.2" y="691.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="23.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.25%)</title><rect x="23.6" y="691.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.6" y="702.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.25%)</title><rect x="23.6" y="675.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="26.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (189 samples, 2.40%)</title><rect x="26.6" y="739.0" width="28.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.6" y="750.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (43 samples, 0.55%)</title><rect x="26.6" y="723.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.55%)</title><rect x="26.6" y="707.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.55%)</title><rect x="26.6" y="691.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.25%)</title><rect x="26.6" y="675.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="29.6" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.29%)</title><rect x="29.6" y="675.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.6" y="686.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.29%)</title><rect x="29.6" y="659.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="32.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (146 samples, 1.85%)</title><rect x="33.1" y="723.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.1" y="734.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.29%)</title><rect x="33.1" y="707.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.29%)</title><rect x="33.1" y="691.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.29%)</title><rect x="33.1" y="675.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.29%)</title><rect x="33.1" y="659.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.1" y="670.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.29%)</title><rect x="33.1" y="643.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="36.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.20%)</title><rect x="36.5" y="707.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.20%)</title><rect x="36.5" y="691.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (16 samples, 0.20%)</title><rect x="36.5" y="675.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.5" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (16 samples, 0.20%)</title><rect x="36.5" y="659.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="39.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.46%)</title><rect x="38.9" y="707.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.46%)</title><rect x="38.9" y="691.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.9" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.46%)</title><rect x="38.9" y="675.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="41.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (38 samples, 0.48%)</title><rect x="44.3" y="707.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 0.48%)</title><rect x="44.3" y="691.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.48%)</title><rect x="44.3" y="675.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.29%)</title><rect x="44.3" y="659.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="47.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.19%)</title><rect x="47.8" y="659.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.8" y="670.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.19%)</title><rect x="47.8" y="643.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="50.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (33 samples, 0.42%)</title><rect x="50.0" y="707.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.24%)</title><rect x="50.0" y="691.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.24%)</title><rect x="50.0" y="675.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (19 samples, 0.24%)</title><rect x="50.0" y="659.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (19 samples, 0.24%)</title><rect x="50.0" y="643.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="53.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.18%)</title><rect x="52.9" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.18%)</title><rect x="52.9" y="675.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (13 samples, 0.17%)</title><rect x="52.9" y="659.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="55.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (217 samples, 2.76%)</title><rect x="55.0" y="771.0" width="32.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.0" y="782.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (54 samples, 0.69%)</title><rect x="55.0" y="755.0" width="8.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (75 samples, 0.95%)</title><rect x="63.1" y="755.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.1" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 0.95%)</title><rect x="63.1" y="739.0" width="11.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="66.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (88 samples, 1.12%)</title><rect x="74.3" y="755.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (88 samples, 1.12%)</title><rect x="74.3" y="739.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.3" y="750.0"></text>
</g>
<g>
<title>char[] (43 samples, 0.55%)</title><rect x="74.3" y="723.0" width="6.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="77.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.18%)</title><rect x="80.7" y="723.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="83.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.39%)</title><rect x="82.8" y="723.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.39%)</title><rect x="82.8" y="707.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.39%)</title><rect x="82.8" y="691.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.8" y="702.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.39%)</title><rect x="82.8" y="675.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="85.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.88%)</title><rect x="87.5" y="771.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.88%)</title><rect x="87.5" y="755.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.5" y="766.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.43%)</title><rect x="87.5" y="739.0" width="5.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="90.5" y="750.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.19%)</title><rect x="92.6" y="739.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="95.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.25%)</title><rect x="94.8" y="739.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.25%)</title><rect x="94.8" y="723.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.25%)</title><rect x="94.8" y="707.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.8" y="718.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.25%)</title><rect x="94.8" y="691.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="97.8" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24067] (570 samples, 7.24%)</title><rect x="97.8" y="851.0" width="85.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="100.8" y="862.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (570 samples, 7.24%)</title><rect x="97.8" y="835.0" width="85.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.8" y="846.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (76 samples, 0.97%)</title><rect x="97.8" y="819.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (42 samples, 0.53%)</title><rect x="97.8" y="803.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.8" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (26 samples, 0.33%)</title><rect x="97.8" y="787.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="100.8" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (16 samples, 0.20%)</title><rect x="101.7" y="787.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="104.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (34 samples, 0.43%)</title><rect x="104.1" y="803.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (34 samples, 0.43%)</title><rect x="104.1" y="787.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (34 samples, 0.43%)</title><rect x="104.1" y="771.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (34 samples, 0.43%)</title><rect x="104.1" y="755.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (34 samples, 0.43%)</title><rect x="104.1" y="739.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (34 samples, 0.43%)</title><rect x="104.1" y="723.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (34 samples, 0.43%)</title><rect x="104.1" y="707.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (34 samples, 0.43%)</title><rect x="104.1" y="691.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (34 samples, 0.43%)</title><rect x="104.1" y="675.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.1" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (34 samples, 0.43%)</title><rect x="104.1" y="659.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="107.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (494 samples, 6.27%)</title><rect x="109.2" y="819.0" width="74.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="830.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (494 samples, 6.27%)</title><rect x="109.2" y="803.0" width="74.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.2" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (494 samples, 6.27%)</title><rect x="109.2" y="787.0" width="74.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.2" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (234 samples, 2.97%)</title><rect x="109.2" y="771.0" width="35.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.2" y="782.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (234 samples, 2.97%)</title><rect x="109.2" y="755.0" width="35.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.2" y="766.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (48 samples, 0.61%)</title><rect x="109.2" y="739.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.61%)</title><rect x="109.2" y="723.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.61%)</title><rect x="109.2" y="707.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.28%)</title><rect x="109.2" y="691.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="112.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.33%)</title><rect x="112.5" y="691.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.5" y="702.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="112.5" y="675.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="115.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (186 samples, 2.36%)</title><rect x="116.4" y="739.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.4" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (41 samples, 0.52%)</title><rect x="116.4" y="723.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.52%)</title><rect x="116.4" y="707.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.52%)</title><rect x="116.4" y="691.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.19%)</title><rect x="116.4" y="675.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="119.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.33%)</title><rect x="118.6" y="675.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.6" y="686.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="118.6" y="659.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="121.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (145 samples, 1.84%)</title><rect x="122.5" y="723.0" width="21.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.5" y="734.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.30%)</title><rect x="122.5" y="707.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.30%)</title><rect x="122.5" y="691.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.30%)</title><rect x="122.5" y="675.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.30%)</title><rect x="122.5" y="659.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.5" y="670.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.30%)</title><rect x="122.5" y="643.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="125.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.23%)</title><rect x="126.1" y="707.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.23%)</title><rect x="126.1" y="691.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (18 samples, 0.23%)</title><rect x="126.1" y="675.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.1" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (18 samples, 0.23%)</title><rect x="126.1" y="659.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="129.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.36%)</title><rect x="128.8" y="707.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.36%)</title><rect x="128.8" y="691.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.36%)</title><rect x="128.8" y="675.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="131.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.39%)</title><rect x="133.0" y="707.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.39%)</title><rect x="133.0" y="691.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.39%)</title><rect x="133.0" y="675.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.15%)</title><rect x="133.0" y="659.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="136.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.24%)</title><rect x="134.8" y="659.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.8" y="670.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.24%)</title><rect x="134.8" y="643.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="137.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (44 samples, 0.56%)</title><rect x="137.7" y="707.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.22%)</title><rect x="137.7" y="691.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.22%)</title><rect x="137.7" y="675.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (17 samples, 0.22%)</title><rect x="137.7" y="659.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.7" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (17 samples, 0.22%)</title><rect x="137.7" y="643.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="140.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.34%)</title><rect x="140.2" y="691.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (27 samples, 0.34%)</title><rect x="140.2" y="675.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (26 samples, 0.33%)</title><rect x="140.2" y="659.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="143.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (178 samples, 2.26%)</title><rect x="144.3" y="771.0" width="26.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="782.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (30 samples, 0.38%)</title><rect x="144.3" y="755.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="147.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (53 samples, 0.67%)</title><rect x="148.8" y="755.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.8" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (53 samples, 0.67%)</title><rect x="148.8" y="739.0" width="7.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="151.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (95 samples, 1.21%)</title><rect x="156.7" y="755.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (95 samples, 1.21%)</title><rect x="156.7" y="739.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.7" y="750.0"></text>
</g>
<g>
<title>char[] (49 samples, 0.62%)</title><rect x="156.7" y="723.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="159.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.22%)</title><rect x="164.1" y="723.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="167.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.37%)</title><rect x="166.6" y="723.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.37%)</title><rect x="166.6" y="707.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.37%)</title><rect x="166.6" y="691.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.6" y="702.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.37%)</title><rect x="166.6" y="675.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="169.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 1.04%)</title><rect x="170.9" y="771.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 1.04%)</title><rect x="170.9" y="755.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.9" y="766.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.51%)</title><rect x="170.9" y="739.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="173.9" y="750.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.23%)</title><rect x="176.9" y="739.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="179.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.30%)</title><rect x="179.6" y="739.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.30%)</title><rect x="179.6" y="723.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.30%)</title><rect x="179.6" y="707.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="718.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.30%)</title><rect x="179.6" y="691.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="182.6" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24835] (700 samples, 8.89%)</title><rect x="183.2" y="851.0" width="104.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="186.2" y="862.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (700 samples, 8.89%)</title><rect x="183.2" y="835.0" width="104.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.2" y="846.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (74 samples, 0.94%)</title><rect x="183.2" y="819.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (46 samples, 0.58%)</title><rect x="183.2" y="803.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.2" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (21 samples, 0.27%)</title><rect x="183.2" y="787.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="186.2" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (25 samples, 0.32%)</title><rect x="186.4" y="787.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="189.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (28 samples, 0.36%)</title><rect x="190.1" y="803.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (28 samples, 0.36%)</title><rect x="190.1" y="787.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (28 samples, 0.36%)</title><rect x="190.1" y="771.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (28 samples, 0.36%)</title><rect x="190.1" y="755.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (28 samples, 0.36%)</title><rect x="190.1" y="739.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (28 samples, 0.36%)</title><rect x="190.1" y="723.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (28 samples, 0.36%)</title><rect x="190.1" y="707.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (28 samples, 0.36%)</title><rect x="190.1" y="691.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (28 samples, 0.36%)</title><rect x="190.1" y="675.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.1" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (28 samples, 0.36%)</title><rect x="190.1" y="659.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="193.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (626 samples, 7.95%)</title><rect x="194.3" y="819.0" width="93.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.3" y="830.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (626 samples, 7.95%)</title><rect x="194.3" y="803.0" width="93.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.3" y="814.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (626 samples, 7.95%)</title><rect x="194.3" y="787.0" width="93.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.3" y="798.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (271 samples, 3.44%)</title><rect x="194.3" y="771.0" width="40.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.3" y="782.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (271 samples, 3.44%)</title><rect x="194.3" y="755.0" width="40.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.3" y="766.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (53 samples, 0.67%)</title><rect x="194.3" y="739.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.67%)</title><rect x="194.3" y="723.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.67%)</title><rect x="194.3" y="707.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.29%)</title><rect x="194.3" y="691.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="197.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.38%)</title><rect x="197.8" y="691.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.8" y="702.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.38%)</title><rect x="197.8" y="675.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="200.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (218 samples, 2.77%)</title><rect x="202.3" y="739.0" width="32.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.3" y="750.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (51 samples, 0.65%)</title><rect x="202.3" y="723.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.65%)</title><rect x="202.3" y="707.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.65%)</title><rect x="202.3" y="691.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.24%)</title><rect x="202.3" y="675.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="205.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.41%)</title><rect x="205.1" y="675.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="686.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.41%)</title><rect x="205.1" y="659.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="208.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (167 samples, 2.12%)</title><rect x="209.9" y="723.0" width="25.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.9" y="734.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.32%)</title><rect x="209.9" y="707.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.32%)</title><rect x="209.9" y="691.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.32%)</title><rect x="209.9" y="675.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.9" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.32%)</title><rect x="209.9" y="659.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.9" y="670.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="209.9" y="643.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="212.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.25%)</title><rect x="213.7" y="707.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.25%)</title><rect x="213.7" y="691.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (20 samples, 0.25%)</title><rect x="213.7" y="675.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.7" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (20 samples, 0.25%)</title><rect x="213.7" y="659.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="216.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.53%)</title><rect x="216.7" y="707.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.53%)</title><rect x="216.7" y="691.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.7" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 0.53%)</title><rect x="216.7" y="675.0" width="6.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="219.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 0.47%)</title><rect x="223.0" y="707.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.47%)</title><rect x="223.0" y="691.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.47%)</title><rect x="223.0" y="675.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.20%)</title><rect x="223.0" y="659.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="226.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.27%)</title><rect x="225.3" y="659.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.3" y="670.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.27%)</title><rect x="225.3" y="643.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="228.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (43 samples, 0.55%)</title><rect x="228.5" y="707.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.27%)</title><rect x="228.5" y="691.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.27%)</title><rect x="228.5" y="675.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (21 samples, 0.27%)</title><rect x="228.5" y="659.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.5" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (21 samples, 0.27%)</title><rect x="228.5" y="643.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="231.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.28%)</title><rect x="231.6" y="691.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.28%)</title><rect x="231.6" y="675.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (22 samples, 0.28%)</title><rect x="231.6" y="659.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="234.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (234 samples, 2.97%)</title><rect x="234.9" y="771.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.9" y="782.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (35 samples, 0.44%)</title><rect x="234.9" y="755.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="237.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (82 samples, 1.04%)</title><rect x="240.2" y="755.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.2" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (82 samples, 1.04%)</title><rect x="240.2" y="739.0" width="12.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="243.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.49%)</title><rect x="252.5" y="755.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.49%)</title><rect x="252.5" y="739.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.5" y="750.0"></text>
</g>
<g>
<title>char[] (49 samples, 0.62%)</title><rect x="252.5" y="723.0" width="7.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="255.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.36%)</title><rect x="259.8" y="723.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="262.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.51%)</title><rect x="264.0" y="723.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.51%)</title><rect x="264.0" y="707.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (40 samples, 0.51%)</title><rect x="264.0" y="691.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.0" y="702.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.51%)</title><rect x="264.0" y="675.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="267.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 1.54%)</title><rect x="270.0" y="771.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 1.54%)</title><rect x="270.0" y="755.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.0" y="766.0"></text>
</g>
<g>
<title>char[] (56 samples, 0.71%)</title><rect x="270.0" y="739.0" width="8.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="273.0" y="750.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.38%)</title><rect x="278.4" y="739.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="281.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.44%)</title><rect x="282.9" y="739.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.44%)</title><rect x="282.9" y="723.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.44%)</title><rect x="282.9" y="707.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.9" y="718.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.44%)</title><rect x="282.9" y="691.0" width="5.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="285.9" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25091] (457 samples, 5.80%)</title><rect x="288.1" y="851.0" width="68.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="291.1" y="862.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (457 samples, 5.80%)</title><rect x="288.1" y="835.0" width="68.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.1" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (48 samples, 0.61%)</title><rect x="288.1" y="819.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (24 samples, 0.30%)</title><rect x="288.1" y="803.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.1" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (15 samples, 0.19%)</title><rect x="288.1" y="787.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="291.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (9 samples, 0.11%)</title><rect x="290.4" y="787.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="293.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (24 samples, 0.30%)</title><rect x="291.7" y="803.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (24 samples, 0.30%)</title><rect x="291.7" y="787.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (24 samples, 0.30%)</title><rect x="291.7" y="771.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (24 samples, 0.30%)</title><rect x="291.7" y="755.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (24 samples, 0.30%)</title><rect x="291.7" y="739.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (24 samples, 0.30%)</title><rect x="291.7" y="723.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (24 samples, 0.30%)</title><rect x="291.7" y="707.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (24 samples, 0.30%)</title><rect x="291.7" y="691.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (24 samples, 0.30%)</title><rect x="291.7" y="675.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.7" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (24 samples, 0.30%)</title><rect x="291.7" y="659.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="294.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (409 samples, 5.19%)</title><rect x="295.3" y="819.0" width="61.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.3" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (409 samples, 5.19%)</title><rect x="295.3" y="803.0" width="61.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.3" y="814.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (409 samples, 5.19%)</title><rect x="295.3" y="787.0" width="61.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.3" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (176 samples, 2.24%)</title><rect x="295.3" y="771.0" width="26.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (176 samples, 2.24%)</title><rect x="295.3" y="755.0" width="26.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.3" y="766.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (29 samples, 0.37%)</title><rect x="295.3" y="739.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.37%)</title><rect x="295.3" y="723.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.37%)</title><rect x="295.3" y="707.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.15%)</title><rect x="295.3" y="691.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="298.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.22%)</title><rect x="297.1" y="691.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.1" y="702.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.22%)</title><rect x="297.1" y="675.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="300.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (147 samples, 1.87%)</title><rect x="299.7" y="739.0" width="22.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.7" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (36 samples, 0.46%)</title><rect x="299.7" y="723.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.46%)</title><rect x="299.7" y="707.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.46%)</title><rect x="299.7" y="691.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.22%)</title><rect x="299.7" y="675.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.24%)</title><rect x="302.2" y="675.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.2" y="686.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.24%)</title><rect x="302.2" y="659.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="305.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (111 samples, 1.41%)</title><rect x="305.1" y="723.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.19%)</title><rect x="305.1" y="707.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.19%)</title><rect x="305.1" y="691.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.19%)</title><rect x="305.1" y="675.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.19%)</title><rect x="305.1" y="659.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.1" y="670.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.19%)</title><rect x="305.1" y="643.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="308.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.17%)</title><rect x="307.3" y="707.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.17%)</title><rect x="307.3" y="691.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (13 samples, 0.17%)</title><rect x="307.3" y="675.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.3" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (13 samples, 0.17%)</title><rect x="307.3" y="659.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="310.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.27%)</title><rect x="309.3" y="707.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.27%)</title><rect x="309.3" y="691.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.3" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.27%)</title><rect x="309.3" y="675.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="312.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (34 samples, 0.43%)</title><rect x="312.4" y="707.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.43%)</title><rect x="312.4" y="691.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.43%)</title><rect x="312.4" y="675.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.19%)</title><rect x="312.4" y="659.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="315.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.24%)</title><rect x="314.7" y="659.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.7" y="670.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.24%)</title><rect x="314.7" y="643.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="317.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (28 samples, 0.36%)</title><rect x="317.5" y="707.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.19%)</title><rect x="317.5" y="691.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.19%)</title><rect x="317.5" y="675.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (15 samples, 0.19%)</title><rect x="317.5" y="659.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.5" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (15 samples, 0.19%)</title><rect x="317.5" y="643.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="320.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.17%)</title><rect x="319.8" y="691.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.17%)</title><rect x="319.8" y="675.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (12 samples, 0.15%)</title><rect x="319.8" y="659.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="322.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (155 samples, 1.97%)</title><rect x="321.7" y="771.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.7" y="782.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (24 samples, 0.30%)</title><rect x="321.7" y="755.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="324.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (48 samples, 0.61%)</title><rect x="325.3" y="755.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.3" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.61%)</title><rect x="325.3" y="739.0" width="7.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="328.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (83 samples, 1.05%)</title><rect x="332.5" y="755.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (83 samples, 1.05%)</title><rect x="332.5" y="739.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.5" y="750.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.46%)</title><rect x="332.5" y="723.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="335.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.22%)</title><rect x="337.9" y="723.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="340.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.38%)</title><rect x="340.4" y="723.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.38%)</title><rect x="340.4" y="707.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.38%)</title><rect x="340.4" y="691.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.4" y="702.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.38%)</title><rect x="340.4" y="675.0" width="4.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="343.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 0.99%)</title><rect x="344.9" y="771.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 0.99%)</title><rect x="344.9" y="755.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.9" y="766.0"></text>
</g>
<g>
<title>char[] (38 samples, 0.48%)</title><rect x="344.9" y="739.0" width="5.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="347.9" y="750.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.24%)</title><rect x="350.6" y="739.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="353.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.27%)</title><rect x="353.5" y="739.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.27%)</title><rect x="353.5" y="723.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.27%)</title><rect x="353.5" y="707.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.5" y="718.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.27%)</title><rect x="353.5" y="691.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="356.5" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=37635] (717 samples, 9.11%)</title><rect x="356.6" y="851.0" width="107.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="359.6" y="862.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (717 samples, 9.11%)</title><rect x="356.6" y="835.0" width="107.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.6" y="846.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (87 samples, 1.10%)</title><rect x="356.6" y="819.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (49 samples, 0.62%)</title><rect x="356.6" y="803.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.6" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (22 samples, 0.28%)</title><rect x="356.6" y="787.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="359.6" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (27 samples, 0.34%)</title><rect x="359.9" y="787.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="362.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (38 samples, 0.48%)</title><rect x="364.0" y="803.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (38 samples, 0.48%)</title><rect x="364.0" y="787.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (38 samples, 0.48%)</title><rect x="364.0" y="771.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (38 samples, 0.48%)</title><rect x="364.0" y="755.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (38 samples, 0.48%)</title><rect x="364.0" y="739.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (38 samples, 0.48%)</title><rect x="364.0" y="723.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (38 samples, 0.48%)</title><rect x="364.0" y="707.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (38 samples, 0.48%)</title><rect x="364.0" y="691.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (38 samples, 0.48%)</title><rect x="364.0" y="675.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.0" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (38 samples, 0.48%)</title><rect x="364.0" y="659.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="367.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (630 samples, 8.00%)</title><rect x="369.7" y="819.0" width="94.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.7" y="830.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (630 samples, 8.00%)</title><rect x="369.7" y="803.0" width="94.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.7" y="814.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (630 samples, 8.00%)</title><rect x="369.7" y="787.0" width="94.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.7" y="798.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (294 samples, 3.73%)</title><rect x="369.7" y="771.0" width="44.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.7" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (294 samples, 3.73%)</title><rect x="369.7" y="755.0" width="44.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.7" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (69 samples, 0.88%)</title><rect x="369.7" y="739.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.88%)</title><rect x="369.7" y="723.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.88%)</title><rect x="369.7" y="707.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.46%)</title><rect x="369.7" y="691.0" width="5.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="372.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.42%)</title><rect x="375.1" y="691.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.1" y="702.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.42%)</title><rect x="375.1" y="675.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="378.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (225 samples, 2.86%)</title><rect x="380.0" y="739.0" width="33.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.0" y="750.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (49 samples, 0.62%)</title><rect x="380.0" y="723.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.62%)</title><rect x="380.0" y="707.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.62%)</title><rect x="380.0" y="691.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.24%)</title><rect x="380.0" y="675.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="383.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.38%)</title><rect x="382.9" y="675.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.9" y="686.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.38%)</title><rect x="382.9" y="659.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="385.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (176 samples, 2.24%)</title><rect x="387.3" y="723.0" width="26.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.3" y="734.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.30%)</title><rect x="387.3" y="707.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.30%)</title><rect x="387.3" y="691.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.30%)</title><rect x="387.3" y="675.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.30%)</title><rect x="387.3" y="659.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="670.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.30%)</title><rect x="387.3" y="643.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="390.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.24%)</title><rect x="390.9" y="707.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.24%)</title><rect x="390.9" y="691.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (19 samples, 0.24%)</title><rect x="390.9" y="675.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.9" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (19 samples, 0.24%)</title><rect x="390.9" y="659.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="393.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.51%)</title><rect x="393.8" y="707.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.51%)</title><rect x="393.8" y="691.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.51%)</title><rect x="393.8" y="675.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="396.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.39%)</title><rect x="399.8" y="707.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.39%)</title><rect x="399.8" y="691.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.39%)</title><rect x="399.8" y="675.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.17%)</title><rect x="399.8" y="659.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="402.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.23%)</title><rect x="401.7" y="659.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.7" y="670.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.23%)</title><rect x="401.7" y="643.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="404.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (62 samples, 0.79%)</title><rect x="404.4" y="707.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.41%)</title><rect x="404.4" y="691.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.41%)</title><rect x="404.4" y="675.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (32 samples, 0.41%)</title><rect x="404.4" y="659.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.4" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (32 samples, 0.41%)</title><rect x="404.4" y="643.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="407.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.38%)</title><rect x="409.2" y="691.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (30 samples, 0.38%)</title><rect x="409.2" y="675.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (29 samples, 0.37%)</title><rect x="409.2" y="659.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="412.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (232 samples, 2.95%)</title><rect x="413.7" y="771.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.7" y="782.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (30 samples, 0.38%)</title><rect x="413.7" y="755.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="416.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (89 samples, 1.13%)</title><rect x="418.2" y="755.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.2" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (89 samples, 1.13%)</title><rect x="418.2" y="739.0" width="13.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="421.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (113 samples, 1.44%)</title><rect x="431.6" y="755.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (113 samples, 1.44%)</title><rect x="431.6" y="739.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.6" y="750.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.58%)</title><rect x="431.6" y="723.0" width="6.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="434.6" y="734.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.38%)</title><rect x="438.5" y="723.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="441.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.47%)</title><rect x="442.9" y="723.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.47%)</title><rect x="442.9" y="707.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.47%)</title><rect x="442.9" y="691.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.9" y="702.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.47%)</title><rect x="442.9" y="675.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="445.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.32%)</title><rect x="448.5" y="771.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.32%)</title><rect x="448.5" y="755.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.5" y="766.0"></text>
</g>
<g>
<title>char[] (45 samples, 0.57%)</title><rect x="448.5" y="739.0" width="6.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="451.5" y="750.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.36%)</title><rect x="455.2" y="739.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="458.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.39%)</title><rect x="459.4" y="739.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.39%)</title><rect x="459.4" y="723.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.39%)</title><rect x="459.4" y="707.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.4" y="718.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.39%)</title><rect x="459.4" y="691.0" width="4.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="462.4" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=37123] (325 samples, 4.13%)</title><rect x="464.1" y="851.0" width="48.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="467.1" y="862.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (325 samples, 4.13%)</title><rect x="464.1" y="835.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.1" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (41 samples, 0.52%)</title><rect x="464.1" y="819.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (21 samples, 0.27%)</title><rect x="464.1" y="803.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.1" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (11 samples, 0.14%)</title><rect x="464.1" y="787.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="467.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (10 samples, 0.13%)</title><rect x="465.7" y="787.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="468.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (20 samples, 0.25%)</title><rect x="467.2" y="803.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (20 samples, 0.25%)</title><rect x="467.2" y="787.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (20 samples, 0.25%)</title><rect x="467.2" y="771.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (20 samples, 0.25%)</title><rect x="467.2" y="755.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (20 samples, 0.25%)</title><rect x="467.2" y="739.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (20 samples, 0.25%)</title><rect x="467.2" y="723.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (20 samples, 0.25%)</title><rect x="467.2" y="707.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (20 samples, 0.25%)</title><rect x="467.2" y="691.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (20 samples, 0.25%)</title><rect x="467.2" y="675.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.2" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (20 samples, 0.25%)</title><rect x="467.2" y="659.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="470.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (284 samples, 3.61%)</title><rect x="470.2" y="819.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.2" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (284 samples, 3.61%)</title><rect x="470.2" y="803.0" width="42.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.2" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (284 samples, 3.61%)</title><rect x="470.2" y="787.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.2" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (130 samples, 1.65%)</title><rect x="470.2" y="771.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (130 samples, 1.65%)</title><rect x="470.2" y="755.0" width="19.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.28%)</title><rect x="470.2" y="739.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.28%)</title><rect x="470.2" y="723.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.28%)</title><rect x="470.2" y="707.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="470.2" y="691.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="473.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.17%)</title><rect x="471.6" y="691.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.6" y="702.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.17%)</title><rect x="471.6" y="675.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="474.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (108 samples, 1.37%)</title><rect x="473.5" y="739.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.27%)</title><rect x="473.5" y="723.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.27%)</title><rect x="473.5" y="707.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.27%)</title><rect x="473.5" y="691.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="473.5" y="675.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="476.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.15%)</title><rect x="474.9" y="675.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.9" y="686.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="474.9" y="659.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="477.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (87 samples, 1.10%)</title><rect x="476.7" y="723.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.18%)</title><rect x="476.7" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.18%)</title><rect x="476.7" y="691.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.18%)</title><rect x="476.7" y="675.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.18%)</title><rect x="476.7" y="659.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.7" y="670.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="476.7" y="643.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="479.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.10%)</title><rect x="478.8" y="707.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.10%)</title><rect x="478.8" y="691.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (8 samples, 0.10%)</title><rect x="478.8" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.8" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (8 samples, 0.10%)</title><rect x="478.8" y="659.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="481.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.23%)</title><rect x="480.0" y="707.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.23%)</title><rect x="480.0" y="691.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.0" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.23%)</title><rect x="480.0" y="675.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="483.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.33%)</title><rect x="482.7" y="707.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.33%)</title><rect x="482.7" y="691.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.33%)</title><rect x="482.7" y="675.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.18%)</title><rect x="482.7" y="659.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="485.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.15%)</title><rect x="484.8" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.8" y="670.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="484.8" y="643.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="487.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (21 samples, 0.27%)</title><rect x="486.6" y="707.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.10%)</title><rect x="486.6" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.10%)</title><rect x="486.6" y="675.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (8 samples, 0.10%)</title><rect x="486.6" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (8 samples, 0.10%)</title><rect x="486.6" y="643.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="489.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.17%)</title><rect x="487.8" y="691.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.17%)</title><rect x="487.8" y="675.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (13 samples, 0.17%)</title><rect x="487.8" y="659.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (104 samples, 1.32%)</title><rect x="489.7" y="771.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.7" y="782.0"></text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.19%)</title><rect x="489.7" y="755.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="492.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (36 samples, 0.46%)</title><rect x="492.0" y="755.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (36 samples, 0.46%)</title><rect x="492.0" y="739.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="495.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.67%)</title><rect x="497.3" y="755.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.67%)</title><rect x="497.3" y="739.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.3" y="750.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.20%)</title><rect x="497.3" y="723.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="500.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.20%)</title><rect x="499.7" y="723.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="502.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.27%)</title><rect x="502.1" y="723.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.27%)</title><rect x="502.1" y="707.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.27%)</title><rect x="502.1" y="691.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.1" y="702.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.27%)</title><rect x="502.1" y="675.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="505.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.64%)</title><rect x="505.3" y="771.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.64%)</title><rect x="505.3" y="755.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.3" y="766.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.27%)</title><rect x="505.3" y="739.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="508.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="508.4" y="739.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="511.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.25%)</title><rect x="509.8" y="739.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.25%)</title><rect x="509.8" y="723.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.25%)</title><rect x="509.8" y="707.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.8" y="718.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.25%)</title><rect x="509.8" y="691.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="512.8" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=26115] (281 samples, 3.57%)</title><rect x="512.8" y="851.0" width="42.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="515.8" y="862.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (281 samples, 3.57%)</title><rect x="512.8" y="835.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.8" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (32 samples, 0.41%)</title><rect x="512.8" y="819.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (16 samples, 0.20%)</title><rect x="512.8" y="803.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.8" y="814.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (11 samples, 0.14%)</title><rect x="512.8" y="787.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="515.8" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.06%)</title><rect x="514.4" y="787.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="517.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (16 samples, 0.20%)</title><rect x="515.2" y="803.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (16 samples, 0.20%)</title><rect x="515.2" y="787.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (16 samples, 0.20%)</title><rect x="515.2" y="771.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (16 samples, 0.20%)</title><rect x="515.2" y="755.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (16 samples, 0.20%)</title><rect x="515.2" y="739.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (16 samples, 0.20%)</title><rect x="515.2" y="723.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (16 samples, 0.20%)</title><rect x="515.2" y="707.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (16 samples, 0.20%)</title><rect x="515.2" y="691.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (16 samples, 0.20%)</title><rect x="515.2" y="675.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.2" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (16 samples, 0.20%)</title><rect x="515.2" y="659.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="518.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (249 samples, 3.16%)</title><rect x="517.6" y="819.0" width="37.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.6" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (249 samples, 3.16%)</title><rect x="517.6" y="803.0" width="37.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.6" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (249 samples, 3.16%)</title><rect x="517.6" y="787.0" width="37.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.6" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (115 samples, 1.46%)</title><rect x="517.6" y="771.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (115 samples, 1.46%)</title><rect x="517.6" y="755.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (25 samples, 0.32%)</title><rect x="517.6" y="739.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.32%)</title><rect x="517.6" y="723.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.32%)</title><rect x="517.6" y="707.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.18%)</title><rect x="517.6" y="691.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="520.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.14%)</title><rect x="519.7" y="691.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.7" y="702.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="519.7" y="675.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="522.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (90 samples, 1.14%)</title><rect x="521.3" y="739.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (28 samples, 0.36%)</title><rect x="521.3" y="723.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.36%)</title><rect x="521.3" y="707.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.36%)</title><rect x="521.3" y="691.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.18%)</title><rect x="521.3" y="675.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="524.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.18%)</title><rect x="523.4" y="675.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.4" y="686.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="523.4" y="659.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="526.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (62 samples, 0.79%)</title><rect x="525.5" y="723.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.11%)</title><rect x="525.5" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.11%)</title><rect x="525.5" y="691.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.11%)</title><rect x="525.5" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.11%)</title><rect x="525.5" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.5" y="670.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="525.5" y="643.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="528.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="526.9" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="526.9" y="691.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.get$Lambda (6 samples, 0.08%)</title><rect x="526.9" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.9" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$133 (6 samples, 0.08%)</title><rect x="526.9" y="659.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="529.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.19%)</title><rect x="527.8" y="707.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.19%)</title><rect x="527.8" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.19%)</title><rect x="527.8" y="675.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="530.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.22%)</title><rect x="530.0" y="707.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.22%)</title><rect x="530.0" y="691.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.22%)</title><rect x="530.0" y="675.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="530.0" y="659.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="533.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.09%)</title><rect x="531.5" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.5" y="670.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="531.5" y="643.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="534.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (15 samples, 0.19%)</title><rect x="532.6" y="707.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.10%)</title><rect x="532.6" y="691.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.10%)</title><rect x="532.6" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (8 samples, 0.10%)</title><rect x="532.6" y="659.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (8 samples, 0.10%)</title><rect x="532.6" y="643.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="535.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.09%)</title><rect x="533.8" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.09%)</title><rect x="533.8" y="675.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7 samples, 0.09%)</title><rect x="533.8" y="659.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="536.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (96 samples, 1.22%)</title><rect x="534.8" y="771.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.8" y="782.0"></text>
</g>
<g>
<title>one.nio.http.Request (13 samples, 0.17%)</title><rect x="534.8" y="755.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="537.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.38%)</title><rect x="536.8" y="755.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.8" y="766.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.38%)</title><rect x="536.8" y="739.0" width="4.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="539.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.67%)</title><rect x="541.3" y="755.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.67%)</title><rect x="541.3" y="739.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.3" y="750.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.29%)</title><rect x="541.3" y="723.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="544.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.18%)</title><rect x="544.7" y="723.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="547.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.20%)</title><rect x="546.8" y="723.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.20%)</title><rect x="546.8" y="707.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.20%)</title><rect x="546.8" y="691.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="702.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.20%)</title><rect x="546.8" y="675.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="549.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.48%)</title><rect x="549.2" y="771.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.48%)</title><rect x="549.2" y="755.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.2" y="766.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.13%)</title><rect x="549.2" y="739.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="552.2" y="750.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.15%)</title><rect x="550.7" y="739.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="553.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.20%)</title><rect x="552.5" y="739.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.20%)</title><rect x="552.5" y="723.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.20%)</title><rect x="552.5" y="707.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.5" y="718.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.20%)</title><rect x="552.5" y="691.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="555.5" y="702.0"></text>
</g>
<g>
<title>[RMI TCP Connection(5)-192.168.1.46 tid=29959] (653 samples, 8.29%)</title><rect x="554.9" y="851.0" width="97.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="557.9" y="862.0">[RMI TCP Co..</text>
</g>
<g>
<title>java/lang/Thread.run (653 samples, 8.29%)</title><rect x="554.9" y="835.0" width="97.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.9" y="846.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (653 samples, 8.29%)</title><rect x="554.9" y="819.0" width="97.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.9" y="830.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (653 samples, 8.29%)</title><rect x="554.9" y="803.0" width="97.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.9" y="814.0">java/util/c..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (653 samples, 8.29%)</title><rect x="554.9" y="787.0" width="97.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.9" y="798.0">sun/rmi/tra..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (653 samples, 8.29%)</title><rect x="554.9" y="771.0" width="97.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.9" y="782.0">java/securi..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$102/52688902.run (653 samples, 8.29%)</title><rect x="554.9" y="755.0" width="97.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.9" y="766.0">sun/rmi/tra..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (653 samples, 8.29%)</title><rect x="554.9" y="739.0" width="97.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.9" y="750.0">sun/rmi/tra..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (653 samples, 8.29%)</title><rect x="554.9" y="723.0" width="97.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.9" y="734.0">sun/rmi/tra..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (653 samples, 8.29%)</title><rect x="554.9" y="707.0" width="97.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.9" y="718.0">sun/rmi/tra..</text>
</g>
<g>
<title>java.io.DataOutputStream (7 samples, 0.09%)</title><rect x="554.9" y="691.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="557.9" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (646 samples, 8.20%)</title><rect x="555.9" y="691.0" width="96.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.9" y="702.0">sun/rmi/tra..</text>
</g>
<g>
<title>java/rmi/server/ObjID.read (5 samples, 0.06%)</title><rect x="555.9" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.9" y="686.0"></text>
</g>
<g>
<title>java/rmi/server/UID.read (5 samples, 0.06%)</title><rect x="555.9" y="659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.9" y="670.0"></text>
</g>
<g>
<title>java.rmi.server.UID (5 samples, 0.06%)</title><rect x="555.9" y="643.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="558.9" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (594 samples, 7.54%)</title><rect x="556.7" y="675.0" width="89.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.7" y="686.0">java/secur..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (594 samples, 7.54%)</title><rect x="556.7" y="659.0" width="89.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.7" y="670.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (594 samples, 7.54%)</title><rect x="556.7" y="643.0" width="89.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.7" y="654.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (594 samples, 7.54%)</title><rect x="556.7" y="627.0" width="89.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.7" y="638.0">sun/rmi/se..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (289 samples, 3.67%)</title><rect x="556.8" y="611.0" width="43.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.8" y="622.0">java..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (289 samples, 3.67%)</title><rect x="556.8" y="595.0" width="43.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.8" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (2 samples, 0.03%)</title><rect x="556.8" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.8" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (2 samples, 0.03%)</title><rect x="556.8" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.8" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.03%)</title><rect x="556.8" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.8" y="558.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation (2 samples, 0.03%)</title><rect x="556.8" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="559.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (283 samples, 3.59%)</title><rect x="557.1" y="579.0" width="42.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.1" y="590.0">jdk/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (283 samples, 3.59%)</title><rect x="557.1" y="563.0" width="42.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.1" y="574.0">java..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (252 samples, 3.20%)</title><rect x="557.1" y="547.0" width="37.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.1" y="558.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (252 samples, 3.20%)</title><rect x="557.1" y="531.0" width="37.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.1" y="542.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (252 samples, 3.20%)</title><rect x="557.1" y="515.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.1" y="526.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (252 samples, 3.20%)</title><rect x="557.1" y="499.0" width="37.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.1" y="510.0">com..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (252 samples, 3.20%)</title><rect x="557.1" y="483.0" width="37.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.1" y="494.0">com..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (252 samples, 3.20%)</title><rect x="557.1" y="467.0" width="37.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.1" y="478.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (252 samples, 3.20%)</title><rect x="557.1" y="451.0" width="37.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.1" y="462.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (252 samples, 3.20%)</title><rect x="557.1" y="435.0" width="37.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.1" y="446.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (252 samples, 3.20%)</title><rect x="557.1" y="419.0" width="37.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.1" y="430.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (252 samples, 3.20%)</title><rect x="557.1" y="403.0" width="37.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.1" y="414.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (252 samples, 3.20%)</title><rect x="557.1" y="387.0" width="37.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.1" y="398.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (252 samples, 3.20%)</title><rect x="557.1" y="371.0" width="37.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="382.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (252 samples, 3.20%)</title><rect x="557.1" y="355.0" width="37.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="366.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (227 samples, 2.88%)</title><rect x="557.1" y="339.0" width="34.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="350.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (227 samples, 2.88%)</title><rect x="557.1" y="323.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.1" y="334.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (227 samples, 2.88%)</title><rect x="557.1" y="307.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.1" y="318.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (227 samples, 2.88%)</title><rect x="557.1" y="291.0" width="34.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.1" y="302.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (82 samples, 1.04%)</title><rect x="557.1" y="275.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.1" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (63 samples, 0.80%)</title><rect x="557.1" y="259.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.1" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (62 samples, 0.79%)</title><rect x="557.1" y="243.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.1" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (62 samples, 0.79%)</title><rect x="557.1" y="227.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="557.1" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="560.1" y="222.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.03%)</title><rect x="557.9" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="560.9" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (29 samples, 0.37%)</title><rect x="558.2" y="211.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.2" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.06%)</title><rect x="558.2" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (4 samples, 0.05%)</title><rect x="558.2" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="558.2" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.05%)</title><rect x="558.2" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.05%)</title><rect x="558.2" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.2" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (4 samples, 0.05%)</title><rect x="558.2" y="115.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="561.2" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (24 samples, 0.30%)</title><rect x="558.9" y="195.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.9" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.05%)</title><rect x="558.9" y="179.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="561.9" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (20 samples, 0.25%)</title><rect x="559.5" y="179.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.5" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (20 samples, 0.25%)</title><rect x="559.5" y="163.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="562.5" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (26 samples, 0.33%)</title><rect x="562.5" y="211.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.33%)</title><rect x="562.5" y="195.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="565.5" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (19 samples, 0.24%)</title><rect x="566.6" y="259.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.6" y="270.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (18 samples, 0.23%)</title><rect x="566.6" y="243.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.6" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.04%)</title><rect x="566.6" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.6" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (15 samples, 0.19%)</title><rect x="567.0" y="227.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.0" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.09%)</title><rect x="567.0" y="211.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="570.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.10%)</title><rect x="568.1" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.10%)</title><rect x="568.1" y="195.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="571.1" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.13%)</title><rect x="569.4" y="275.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="572.4" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (78 samples, 0.99%)</title><rect x="571.1" y="275.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.1" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.06%)</title><rect x="571.1" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.1" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.03%)</title><rect x="571.1" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.1" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="571.1" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="571.1" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.03%)</title><rect x="571.1" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.1" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.03%)</title><rect x="571.1" y="179.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="574.1" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (73 samples, 0.93%)</title><rect x="571.8" y="259.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.8" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.04%)</title><rect x="571.8" y="243.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="574.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (70 samples, 0.89%)</title><rect x="572.3" y="243.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.3" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (70 samples, 0.89%)</title><rect x="572.3" y="227.0" width="10.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="575.3" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (56 samples, 0.71%)</title><rect x="582.8" y="275.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.65%)</title><rect x="582.8" y="259.0" width="7.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="585.8" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.06%)</title><rect x="590.4" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.06%)</title><rect x="590.4" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (5 samples, 0.06%)</title><rect x="590.4" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.4" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (5 samples, 0.06%)</title><rect x="590.4" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.4" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.06%)</title><rect x="590.4" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.06%)</title><rect x="590.4" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (2 samples, 0.03%)</title><rect x="590.4" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.4" y="174.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (2 samples, 0.03%)</title><rect x="590.4" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.4" y="158.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (2 samples, 0.03%)</title><rect x="590.4" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="593.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (2 samples, 0.03%)</title><rect x="590.7" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.7" y="174.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (2 samples, 0.03%)</title><rect x="590.7" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.7" y="158.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (2 samples, 0.03%)</title><rect x="590.7" y="131.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="593.7" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (25 samples, 0.32%)</title><rect x="591.2" y="339.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.2" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (24 samples, 0.30%)</title><rect x="591.3" y="323.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (24 samples, 0.30%)</title><rect x="591.3" y="307.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (24 samples, 0.30%)</title><rect x="591.3" y="291.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.3" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (24 samples, 0.30%)</title><rect x="591.3" y="275.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.3" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (24 samples, 0.30%)</title><rect x="591.3" y="259.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (24 samples, 0.30%)</title><rect x="591.3" y="243.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (24 samples, 0.30%)</title><rect x="591.3" y="227.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.3" y="238.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (24 samples, 0.30%)</title><rect x="591.3" y="211.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.3" y="222.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (24 samples, 0.30%)</title><rect x="591.3" y="195.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.3" y="206.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (2 samples, 0.03%)</title><rect x="591.3" y="179.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="594.3" y="190.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (3 samples, 0.04%)</title><rect x="591.6" y="179.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="594.6" y="190.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (9 samples, 0.11%)</title><rect x="592.1" y="179.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="595.1" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (10 samples, 0.13%)</title><rect x="593.4" y="179.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.4" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (10 samples, 0.13%)</title><rect x="593.4" y="163.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.13%)</title><rect x="593.4" y="147.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (10 samples, 0.13%)</title><rect x="593.4" y="131.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1008315045.invoke (10 samples, 0.13%)</title><rect x="593.4" y="115.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="593.4" y="99.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.11%)</title><rect x="593.6" y="83.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.11%)</title><rect x="593.6" y="67.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.6" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="593.6" y="51.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="596.6" y="62.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (2 samples, 0.03%)</title><rect x="594.9" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.9" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (2 samples, 0.03%)</title><rect x="594.9" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.9" y="542.0"></text>
</g>
<g>
<title>java/security/Permissions.add (2 samples, 0.03%)</title><rect x="594.9" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.9" y="526.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (2 samples, 0.03%)</title><rect x="594.9" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="594.9" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.9" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (29 samples, 0.37%)</title><rect x="595.2" y="547.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.2" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.11%)</title><rect x="595.2" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.2" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (9 samples, 0.11%)</title><rect x="595.2" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.2" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (9 samples, 0.11%)</title><rect x="595.2" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.2" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (7 samples, 0.09%)</title><rect x="595.5" y="483.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.5" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.06%)</title><rect x="595.5" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.5" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.06%)</title><rect x="595.5" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.5" y="462.0"></text>
</g>
<g>
<title>java.util.Hashtable (2 samples, 0.03%)</title><rect x="595.7" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="598.7" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (2 samples, 0.03%)</title><rect x="596.0" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="596.0" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.0" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="596.0" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.0" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="596.0" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="596.0" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.0" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="596.0" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="599.0" y="366.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (2 samples, 0.03%)</title><rect x="596.3" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.3" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.03%)</title><rect x="596.3" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.3" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.03%)</title><rect x="596.3" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.3" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (20 samples, 0.25%)</title><rect x="596.6" y="531.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.6" y="542.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (20 samples, 0.25%)</title><rect x="596.6" y="515.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (10 samples, 0.13%)</title><rect x="596.6" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (10 samples, 0.13%)</title><rect x="596.6" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (10 samples, 0.13%)</title><rect x="596.6" y="467.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (10 samples, 0.13%)</title><rect x="596.6" y="451.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.6" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (10 samples, 0.13%)</title><rect x="596.6" y="435.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (10 samples, 0.13%)</title><rect x="596.6" y="419.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (5 samples, 0.06%)</title><rect x="596.6" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (5 samples, 0.06%)</title><rect x="596.6" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (4 samples, 0.05%)</title><rect x="596.7" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (2 samples, 0.03%)</title><rect x="596.7" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.7" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (2 samples, 0.03%)</title><rect x="596.7" y="339.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="599.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.03%)</title><rect x="597.0" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.03%)</title><rect x="597.0" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="600.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (5 samples, 0.06%)</title><rect x="597.3" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.3" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (5 samples, 0.06%)</title><rect x="597.3" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.3" y="398.0"></text>
</g>
<g>
<title>long[] (5 samples, 0.06%)</title><rect x="597.3" y="371.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.3" y="382.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (10 samples, 0.13%)</title><rect x="598.1" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.1" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (10 samples, 0.13%)</title><rect x="598.1" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (9 samples, 0.11%)</title><rect x="598.2" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (8 samples, 0.10%)</title><rect x="598.2" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.2" y="462.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="598.2" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.2" y="446.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (3 samples, 0.04%)</title><rect x="599.0" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.0" y="446.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.03%)</title><rect x="599.1" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="602.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (4 samples, 0.05%)</title><rect x="599.6" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.6" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (4 samples, 0.05%)</title><rect x="599.6" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.6" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.05%)</title><rect x="599.6" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.6" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.04%)</title><rect x="599.7" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.7" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.04%)</title><rect x="599.7" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.7" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (3 samples, 0.04%)</title><rect x="599.7" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.7" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (3 samples, 0.04%)</title><rect x="599.7" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.7" y="494.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (2 samples, 0.03%)</title><rect x="599.9" y="467.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.9" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (2 samples, 0.03%)</title><rect x="599.9" y="451.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.9" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (2 samples, 0.03%)</title><rect x="599.9" y="435.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.9" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (2 samples, 0.03%)</title><rect x="599.9" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.9" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.03%)</title><rect x="599.9" y="403.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.9" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.03%)</title><rect x="599.9" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.03%)</title><rect x="599.9" y="371.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.9" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.03%)</title><rect x="599.9" y="355.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.9" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.03%)</title><rect x="599.9" y="339.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.9" y="350.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.03%)</title><rect x="599.9" y="323.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.9" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="599.9" y="307.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="599.9" y="291.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.03%)</title><rect x="599.9" y="275.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.9" y="286.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.03%)</title><rect x="599.9" y="259.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.9" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="599.9" y="243.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="599.9" y="227.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor39.invoke (2 samples, 0.03%)</title><rect x="599.9" y="211.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.9" y="222.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (2 samples, 0.03%)</title><rect x="599.9" y="195.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.9" y="206.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreads (2 samples, 0.03%)</title><rect x="599.9" y="179.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.9" y="190.0"></text>
</g>
<g>
<title>java.lang.Thread[] (2 samples, 0.03%)</title><rect x="599.9" y="163.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="602.9" y="174.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (155 samples, 1.97%)</title><rect x="600.1" y="611.0" width="23.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.1" y="622.0">s..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (155 samples, 1.97%)</title><rect x="600.1" y="595.0" width="23.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.1" y="606.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (155 samples, 1.97%)</title><rect x="600.1" y="579.0" width="23.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.1" y="590.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (152 samples, 1.93%)</title><rect x="600.1" y="563.0" width="22.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.1" y="574.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (152 samples, 1.93%)</title><rect x="600.1" y="547.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.1" y="558.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (149 samples, 1.89%)</title><rect x="600.1" y="531.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.1" y="542.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (149 samples, 1.89%)</title><rect x="600.1" y="515.0" width="22.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.1" y="526.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (149 samples, 1.89%)</title><rect x="600.1" y="499.0" width="22.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.1" y="510.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (148 samples, 1.88%)</title><rect x="600.3" y="483.0" width="22.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.3" y="494.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (144 samples, 1.83%)</title><rect x="600.3" y="467.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.3" y="478.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (144 samples, 1.83%)</title><rect x="600.3" y="451.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.3" y="462.0">j..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (4 samples, 0.05%)</title><rect x="600.3" y="435.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="603.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (7 samples, 0.09%)</title><rect x="600.9" y="435.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.09%)</title><rect x="600.9" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (7 samples, 0.09%)</title><rect x="600.9" y="403.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.09%)</title><rect x="600.9" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (7 samples, 0.09%)</title><rect x="600.9" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.09%)</title><rect x="600.9" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.09%)</title><rect x="600.9" y="339.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (7 samples, 0.09%)</title><rect x="600.9" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (7 samples, 0.09%)</title><rect x="600.9" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (7 samples, 0.09%)</title><rect x="600.9" y="291.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.09%)</title><rect x="600.9" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.06%)</title><rect x="600.9" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.06%)</title><rect x="600.9" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.06%)</title><rect x="600.9" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.9" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.05%)</title><rect x="601.0" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.0" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.04%)</title><rect x="601.0" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.0" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.04%)</title><rect x="601.0" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.0" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.03%)</title><rect x="601.0" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.0" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.03%)</title><rect x="601.0" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.0" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.03%)</title><rect x="601.0" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.0" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.03%)</title><rect x="601.0" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.0" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.03%)</title><rect x="601.0" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.0" y="110.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="601.0" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="601.0" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.03%)</title><rect x="601.0" y="51.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.0" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.03%)</title><rect x="601.0" y="35.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.0" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (133 samples, 1.69%)</title><rect x="601.9" y="435.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="601.9" y="419.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="604.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (131 samples, 1.66%)</title><rect x="602.2" y="419.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (131 samples, 1.66%)</title><rect x="602.2" y="403.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (131 samples, 1.66%)</title><rect x="602.2" y="387.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.2" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (131 samples, 1.66%)</title><rect x="602.2" y="371.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (124 samples, 1.57%)</title><rect x="602.4" y="355.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (124 samples, 1.57%)</title><rect x="602.4" y="339.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (51 samples, 0.65%)</title><rect x="602.4" y="323.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (15 samples, 0.19%)</title><rect x="602.4" y="307.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (13 samples, 0.17%)</title><rect x="602.4" y="291.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.4" y="302.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.05%)</title><rect x="602.4" y="275.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.10%)</title><rect x="603.1" y="275.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.03%)</title><rect x="604.3" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.3" y="302.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="604.3" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (36 samples, 0.46%)</title><rect x="604.6" y="307.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (34 samples, 0.43%)</title><rect x="604.6" y="291.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (34 samples, 0.43%)</title><rect x="604.6" y="275.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (34 samples, 0.43%)</title><rect x="604.6" y="259.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="604.6" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (31 samples, 0.39%)</title><rect x="605.1" y="243.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (26 samples, 0.33%)</title><rect x="605.1" y="227.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (26 samples, 0.33%)</title><rect x="605.1" y="211.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.1" y="222.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (3 samples, 0.04%)</title><rect x="605.1" y="195.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="608.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (23 samples, 0.29%)</title><rect x="605.5" y="195.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.5" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="605.5" y="179.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="608.5" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.23%)</title><rect x="606.3" y="179.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.23%)</title><rect x="606.3" y="163.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (18 samples, 0.23%)</title><rect x="606.3" y="147.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.3" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (18 samples, 0.23%)</title><rect x="606.3" y="131.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (11 samples, 0.14%)</title><rect x="606.4" y="115.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.4" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (11 samples, 0.14%)</title><rect x="606.4" y="99.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="609.4" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (6 samples, 0.08%)</title><rect x="608.1" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.1" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (6 samples, 0.08%)</title><rect x="608.1" y="99.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="611.1" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.06%)</title><rect x="609.0" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.0" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.06%)</title><rect x="609.0" y="211.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="612.0" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.03%)</title><rect x="609.7" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.7" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.03%)</title><rect x="609.7" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="612.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (41 samples, 0.52%)</title><rect x="610.0" y="323.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (28 samples, 0.36%)</title><rect x="610.0" y="307.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (28 samples, 0.36%)</title><rect x="610.0" y="291.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.0" y="302.0"></text>
</g>
<g>
<title>int[] (9 samples, 0.11%)</title><rect x="610.0" y="275.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="611.4" y="275.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="614.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.20%)</title><rect x="611.8" y="275.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (13 samples, 0.17%)</title><rect x="614.2" y="307.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (13 samples, 0.17%)</title><rect x="614.2" y="291.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (12 samples, 0.15%)</title><rect x="614.4" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (12 samples, 0.15%)</title><rect x="614.4" y="259.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.15%)</title><rect x="614.4" y="243.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (11 samples, 0.14%)</title><rect x="614.5" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.5" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.13%)</title><rect x="614.7" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.13%)</title><rect x="614.7" y="195.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (10 samples, 0.13%)</title><rect x="614.7" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.7" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (10 samples, 0.13%)</title><rect x="614.7" y="163.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.7" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (2 samples, 0.03%)</title><rect x="614.7" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.7" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.03%)</title><rect x="614.7" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.7" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="614.7" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="617.7" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.06%)</title><rect x="615.0" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.0" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.06%)</title><rect x="615.0" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.0" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.03%)</title><rect x="615.0" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.0" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.03%)</title><rect x="615.0" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.03%)</title><rect x="615.0" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.0" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.04%)</title><rect x="615.3" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.3" y="126.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.04%)</title><rect x="615.3" y="99.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="618.3" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.04%)</title><rect x="615.7" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.7" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (3 samples, 0.04%)</title><rect x="615.7" y="131.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="618.7" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (32 samples, 0.41%)</title><rect x="616.2" y="323.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.2" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (32 samples, 0.41%)</title><rect x="616.2" y="307.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="619.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (6 samples, 0.08%)</title><rect x="621.0" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (6 samples, 0.08%)</title><rect x="621.0" y="339.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="624.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.05%)</title><rect x="621.9" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.9" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.05%)</title><rect x="621.9" y="451.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="624.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.04%)</title><rect x="622.5" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.5" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.04%)</title><rect x="622.5" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="625.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.03%)</title><rect x="622.9" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.03%)</title><rect x="622.9" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.03%)</title><rect x="622.9" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.9" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="622.9" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="622.9" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (2 samples, 0.03%)</title><rect x="622.9" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (2 samples, 0.03%)</title><rect x="622.9" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.03%)</title><rect x="622.9" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.03%)</title><rect x="622.9" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.03%)</title><rect x="622.9" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.03%)</title><rect x="622.9" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.03%)</title><rect x="622.9" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.03%)</title><rect x="622.9" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.03%)</title><rect x="622.9" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.9" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.03%)</title><rect x="622.9" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="625.9" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (50 samples, 0.64%)</title><rect x="623.4" y="611.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$107/1458515354.readString (3 samples, 0.04%)</title><rect x="623.4" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.04%)</title><rect x="623.4" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.04%)</title><rect x="623.4" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.04%)</title><rect x="623.4" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.04%)</title><rect x="623.4" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.04%)</title><rect x="623.4" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.04%)</title><rect x="623.4" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="623.4" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.4" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="623.4" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.4" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="623.4" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="626.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (47 samples, 0.60%)</title><rect x="623.8" y="595.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (47 samples, 0.60%)</title><rect x="623.8" y="579.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (47 samples, 0.60%)</title><rect x="623.8" y="563.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (6 samples, 0.08%)</title><rect x="623.8" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (6 samples, 0.08%)</title><rect x="623.8" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (6 samples, 0.08%)</title><rect x="623.8" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.8" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (5 samples, 0.06%)</title><rect x="623.8" y="499.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="626.8" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (41 samples, 0.52%)</title><rect x="624.7" y="547.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (9 samples, 0.11%)</title><rect x="624.7" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (9 samples, 0.11%)</title><rect x="624.7" y="515.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.7" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (6 samples, 0.08%)</title><rect x="624.7" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.7" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.03%)</title><rect x="624.7" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="627.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (4 samples, 0.05%)</title><rect x="625.0" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.03%)</title><rect x="625.0" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.03%)</title><rect x="625.0" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.03%)</title><rect x="625.0" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="625.0" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="625.0" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.03%)</title><rect x="625.3" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.03%)</title><rect x="625.3" y="451.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="628.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (3 samples, 0.04%)</title><rect x="625.6" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.03%)</title><rect x="625.8" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.03%)</title><rect x="625.8" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="628.8" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (32 samples, 0.41%)</title><rect x="626.1" y="531.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (5 samples, 0.06%)</title><rect x="626.2" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (5 samples, 0.06%)</title><rect x="626.2" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="626.5" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.5" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.03%)</title><rect x="626.5" y="467.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="629.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (26 samples, 0.33%)</title><rect x="627.0" y="515.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (26 samples, 0.33%)</title><rect x="627.0" y="499.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (26 samples, 0.33%)</title><rect x="627.0" y="483.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (17 samples, 0.22%)</title><rect x="627.0" y="467.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.0" y="478.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (17 samples, 0.22%)</title><rect x="627.0" y="451.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (7 samples, 0.09%)</title><rect x="627.1" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (7 samples, 0.09%)</title><rect x="627.1" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (7 samples, 0.09%)</title><rect x="627.1" y="403.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (7 samples, 0.09%)</title><rect x="627.1" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (7 samples, 0.09%)</title><rect x="627.1" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (7 samples, 0.09%)</title><rect x="627.1" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="627.1" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.1" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="627.1" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.1" y="334.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="627.1" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="630.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.04%)</title><rect x="627.7" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="627.7" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="627.7" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="630.7" y="318.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (9 samples, 0.11%)</title><rect x="628.2" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="628.2" y="419.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="631.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="628.5" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="628.5" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.5" y="414.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (2 samples, 0.03%)</title><rect x="629.2" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (9 samples, 0.11%)</title><rect x="629.5" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.5" y="478.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (9 samples, 0.11%)</title><rect x="629.5" y="451.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (9 samples, 0.11%)</title><rect x="629.5" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (9 samples, 0.11%)</title><rect x="629.5" y="419.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (7 samples, 0.09%)</title><rect x="629.8" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (7 samples, 0.09%)</title><rect x="629.8" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (6 samples, 0.08%)</title><rect x="629.8" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (6 samples, 0.08%)</title><rect x="629.8" y="355.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.04%)</title><rect x="629.8" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (3 samples, 0.04%)</title><rect x="629.8" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (3 samples, 0.04%)</title><rect x="629.8" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.04%)</title><rect x="629.8" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.04%)</title><rect x="629.8" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.04%)</title><rect x="629.8" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="629.8" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="629.8" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.8" y="238.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="629.8" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="632.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (3 samples, 0.04%)</title><rect x="630.3" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.3" y="350.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (98 samples, 1.24%)</title><rect x="630.9" y="611.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.9" y="622.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (3 samples, 0.04%)</title><rect x="630.9" y="595.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="633.9" y="606.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (2 samples, 0.03%)</title><rect x="631.3" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.3" y="606.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="631.3" y="579.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="634.3" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (93 samples, 1.18%)</title><rect x="631.6" y="595.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.6" y="606.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionOutputStream (2 samples, 0.03%)</title><rect x="631.6" y="579.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="634.6" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (91 samples, 1.16%)</title><rect x="631.9" y="579.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.9" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (90 samples, 1.14%)</title><rect x="632.1" y="563.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.1" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (90 samples, 1.14%)</title><rect x="632.1" y="547.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.1" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (90 samples, 1.14%)</title><rect x="632.1" y="531.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.1" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (3 samples, 0.04%)</title><rect x="632.1" y="515.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="635.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (61 samples, 0.77%)</title><rect x="632.7" y="515.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.7" y="526.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="632.7" y="499.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="635.7" y="510.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.37%)</title><rect x="633.7" y="499.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.7" y="510.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.15%)</title><rect x="638.1" y="499.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="641.1" y="510.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.15%)</title><rect x="639.9" y="499.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="642.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (8 samples, 0.10%)</title><rect x="641.8" y="515.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.8" y="526.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.08%)</title><rect x="641.8" y="499.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="644.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="642.7" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="645.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (17 samples, 0.22%)</title><rect x="643.0" y="515.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.0" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (4 samples, 0.05%)</title><rect x="643.0" y="499.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (12 samples, 0.15%)</title><rect x="643.8" y="499.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.8" y="510.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.08%)</title><rect x="643.8" y="483.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="646.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="644.7" y="483.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="647.7" y="494.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$1 (3 samples, 0.04%)</title><rect x="645.7" y="675.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="648.7" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (43 samples, 0.55%)</title><rect x="646.2" y="675.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.2" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (43 samples, 0.55%)</title><rect x="646.2" y="659.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap (3 samples, 0.04%)</title><rect x="646.2" y="643.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="649.2" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (40 samples, 0.51%)</title><rect x="646.6" y="643.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (39 samples, 0.50%)</title><rect x="646.8" y="627.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.8" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (2 samples, 0.03%)</title><rect x="646.8" y="611.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="649.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (29 samples, 0.37%)</title><rect x="647.1" y="611.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.1" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="647.1" y="595.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="650.1" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="647.5" y="595.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="650.5" y="606.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.04%)</title><rect x="648.7" y="595.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="651.7" y="606.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.10%)</title><rect x="649.2" y="595.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.2" y="606.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (6 samples, 0.08%)</title><rect x="650.5" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.5" y="606.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="650.5" y="579.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="653.5" y="590.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.03%)</title><rect x="651.1" y="579.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="654.1" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (8 samples, 0.10%)</title><rect x="651.4" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.4" y="622.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="651.4" y="595.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="654.4" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (4 samples, 0.05%)</title><rect x="651.7" y="595.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="654.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="652.3" y="595.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="655.3" y="606.0"></text>
</g>
<g>
<title>[worker tid=43779] (449 samples, 5.70%)</title><rect x="652.8" y="851.0" width="67.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="655.8" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (449 samples, 5.70%)</title><rect x="652.8" y="835.0" width="67.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.8" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (449 samples, 5.70%)</title><rect x="652.8" y="819.0" width="67.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.8" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (449 samples, 5.70%)</title><rect x="652.8" y="803.0" width="67.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.8" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.30%)</title><rect x="652.8" y="787.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24 samples, 0.30%)</title><rect x="652.8" y="771.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.29%)</title><rect x="652.8" y="755.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.29%)</title><rect x="652.8" y="739.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.8" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23 samples, 0.29%)</title><rect x="652.8" y="723.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="655.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (425 samples, 5.40%)</title><rect x="656.3" y="787.0" width="63.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.3" y="798.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (425 samples, 5.40%)</title><rect x="656.3" y="771.0" width="63.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.3" y="782.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (195 samples, 2.48%)</title><rect x="656.3" y="755.0" width="29.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.3" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (195 samples, 2.48%)</title><rect x="656.3" y="739.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.3" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (96 samples, 1.22%)</title><rect x="656.3" y="723.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 1.22%)</title><rect x="656.3" y="707.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.3" y="718.0"></text>
</g>
<g>
<title>byte[] (96 samples, 1.22%)</title><rect x="656.3" y="691.0" width="14.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="659.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (99 samples, 1.26%)</title><rect x="670.7" y="723.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.7" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (47 samples, 0.60%)</title><rect x="670.7" y="707.0" width="7.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="673.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 0.66%)</title><rect x="677.8" y="707.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (52 samples, 0.66%)</title><rect x="677.8" y="691.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (52 samples, 0.66%)</title><rect x="677.8" y="675.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (52 samples, 0.66%)</title><rect x="677.8" y="659.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.66%)</title><rect x="677.8" y="643.0" width="7.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="680.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (230 samples, 2.92%)</title><rect x="685.6" y="755.0" width="34.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.6" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (230 samples, 2.92%)</title><rect x="685.6" y="739.0" width="34.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.6" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (230 samples, 2.92%)</title><rect x="685.6" y="723.0" width="34.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.6" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (31 samples, 0.39%)</title><rect x="685.6" y="707.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="688.6" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (28 samples, 0.36%)</title><rect x="690.2" y="707.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="693.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (111 samples, 1.41%)</title><rect x="694.4" y="707.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.4" y="718.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.61%)</title><rect x="694.4" y="691.0" width="7.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="697.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.53%)</title><rect x="701.6" y="691.0" width="6.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="704.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.27%)</title><rect x="707.9" y="691.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="710.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (60 samples, 0.76%)</title><rect x="711.0" y="707.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.0" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 0.33%)</title><rect x="711.0" y="691.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.0" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 0.33%)</title><rect x="711.0" y="675.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.0" y="686.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="711.0" y="659.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="714.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (34 samples, 0.43%)</title><rect x="714.9" y="691.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.9" y="702.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.43%)</title><rect x="714.9" y="675.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="717.9" y="686.0"></text>
</g>
<g>
<title>[worker tid=44291] (469 samples, 5.96%)</title><rect x="720.0" y="851.0" width="70.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="723.0" y="862.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (469 samples, 5.96%)</title><rect x="720.0" y="835.0" width="70.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.0" y="846.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (469 samples, 5.96%)</title><rect x="720.0" y="819.0" width="70.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.0" y="830.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (469 samples, 5.96%)</title><rect x="720.0" y="803.0" width="70.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.0" y="814.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 0.36%)</title><rect x="720.0" y="787.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (28 samples, 0.36%)</title><rect x="720.0" y="771.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (26 samples, 0.33%)</title><rect x="720.0" y="755.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (26 samples, 0.33%)</title><rect x="720.0" y="739.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.0" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (26 samples, 0.33%)</title><rect x="720.0" y="723.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="723.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.03%)</title><rect x="723.9" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.03%)</title><rect x="723.9" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.03%)</title><rect x="723.9" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="723.9" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="723.9" y="691.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="726.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (441 samples, 5.60%)</title><rect x="724.2" y="787.0" width="66.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.2" y="798.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (441 samples, 5.60%)</title><rect x="724.2" y="771.0" width="66.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.2" y="782.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (226 samples, 2.87%)</title><rect x="724.2" y="755.0" width="33.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.2" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (226 samples, 2.87%)</title><rect x="724.2" y="739.0" width="33.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.2" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (109 samples, 1.38%)</title><rect x="724.2" y="723.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (109 samples, 1.38%)</title><rect x="724.2" y="707.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.2" y="718.0"></text>
</g>
<g>
<title>byte[] (109 samples, 1.38%)</title><rect x="724.2" y="691.0" width="16.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="727.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (117 samples, 1.49%)</title><rect x="740.6" y="723.0" width="17.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.6" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.57%)</title><rect x="740.6" y="707.0" width="6.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 0.91%)</title><rect x="747.3" y="707.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (72 samples, 0.91%)</title><rect x="747.3" y="691.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (72 samples, 0.91%)</title><rect x="747.3" y="675.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.91%)</title><rect x="747.3" y="659.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.3" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.91%)</title><rect x="747.3" y="643.0" width="10.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="750.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (215 samples, 2.73%)</title><rect x="758.1" y="755.0" width="32.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.1" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (215 samples, 2.73%)</title><rect x="758.1" y="739.0" width="32.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.1" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (215 samples, 2.73%)</title><rect x="758.1" y="723.0" width="32.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.1" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="758.1" y="707.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="761.1" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.24%)</title><rect x="762.0" y="707.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="765.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (103 samples, 1.31%)</title><rect x="764.8" y="707.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.8" y="718.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.50%)</title><rect x="764.8" y="691.0" width="5.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="767.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.43%)</title><rect x="770.7" y="691.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="773.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.38%)</title><rect x="775.8" y="691.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="778.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (67 samples, 0.85%)</title><rect x="780.3" y="707.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.3" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (29 samples, 0.37%)</title><rect x="780.3" y="691.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (29 samples, 0.37%)</title><rect x="780.3" y="675.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.3" y="686.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.37%)</title><rect x="780.3" y="659.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="783.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (38 samples, 0.48%)</title><rect x="784.6" y="691.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.6" y="702.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.48%)</title><rect x="784.6" y="675.0" width="5.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="787.6" y="686.0"></text>
</g>
<g>
<title>[worker tid=44803] (435 samples, 5.52%)</title><rect x="790.3" y="851.0" width="65.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="793.3" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (435 samples, 5.52%)</title><rect x="790.3" y="835.0" width="65.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.3" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (435 samples, 5.52%)</title><rect x="790.3" y="819.0" width="65.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.3" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (435 samples, 5.52%)</title><rect x="790.3" y="803.0" width="65.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.3" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (38 samples, 0.48%)</title><rect x="790.3" y="787.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (38 samples, 0.48%)</title><rect x="790.3" y="771.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (36 samples, 0.46%)</title><rect x="790.3" y="755.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (36 samples, 0.46%)</title><rect x="790.3" y="739.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.3" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (36 samples, 0.46%)</title><rect x="790.3" y="723.0" width="5.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="793.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.03%)</title><rect x="795.7" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.03%)</title><rect x="795.7" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.03%)</title><rect x="795.7" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="795.7" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="795.7" y="691.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="798.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (397 samples, 5.04%)</title><rect x="796.0" y="787.0" width="59.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.0" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (397 samples, 5.04%)</title><rect x="796.0" y="771.0" width="59.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.0" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (209 samples, 2.65%)</title><rect x="796.0" y="755.0" width="31.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.0" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (209 samples, 2.65%)</title><rect x="796.0" y="739.0" width="31.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.0" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (104 samples, 1.32%)</title><rect x="796.0" y="723.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (104 samples, 1.32%)</title><rect x="796.0" y="707.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.0" y="718.0"></text>
</g>
<g>
<title>byte[] (104 samples, 1.32%)</title><rect x="796.0" y="691.0" width="15.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="799.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 1.33%)</title><rect x="811.6" y="723.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.6" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (48 samples, 0.61%)</title><rect x="811.6" y="707.0" width="7.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="814.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 0.72%)</title><rect x="818.8" y="707.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (57 samples, 0.72%)</title><rect x="818.8" y="691.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (57 samples, 0.72%)</title><rect x="818.8" y="675.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (57 samples, 0.72%)</title><rect x="818.8" y="659.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (57 samples, 0.72%)</title><rect x="818.8" y="643.0" width="8.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="821.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (188 samples, 2.39%)</title><rect x="827.3" y="755.0" width="28.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.3" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (188 samples, 2.39%)</title><rect x="827.3" y="739.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.3" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (188 samples, 2.39%)</title><rect x="827.3" y="723.0" width="28.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (22 samples, 0.28%)</title><rect x="827.3" y="707.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="830.3" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (26 samples, 0.33%)</title><rect x="830.6" y="707.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="833.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (86 samples, 1.09%)</title><rect x="834.5" y="707.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.5" y="718.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.51%)</title><rect x="834.5" y="691.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="837.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.38%)</title><rect x="840.5" y="691.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="843.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.20%)</title><rect x="845.0" y="691.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="848.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (54 samples, 0.69%)</title><rect x="847.4" y="707.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.4" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (25 samples, 0.32%)</title><rect x="847.4" y="691.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.4" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (25 samples, 0.32%)</title><rect x="847.4" y="675.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.4" y="686.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="847.4" y="659.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="850.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (29 samples, 0.37%)</title><rect x="851.2" y="691.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.2" y="702.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.37%)</title><rect x="851.2" y="675.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="854.2" y="686.0"></text>
</g>
<g>
<title>[worker tid=83459] (434 samples, 5.51%)</title><rect x="855.5" y="851.0" width="65.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="858.5" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (434 samples, 5.51%)</title><rect x="855.5" y="835.0" width="65.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.5" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (434 samples, 5.51%)</title><rect x="855.5" y="819.0" width="65.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.5" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (434 samples, 5.51%)</title><rect x="855.5" y="803.0" width="65.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.5" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (41 samples, 0.52%)</title><rect x="855.5" y="787.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (41 samples, 0.52%)</title><rect x="855.5" y="771.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.48%)</title><rect x="855.5" y="755.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (38 samples, 0.48%)</title><rect x="855.5" y="739.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (38 samples, 0.48%)</title><rect x="855.5" y="723.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="858.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.04%)</title><rect x="861.2" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.04%)</title><rect x="861.2" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.04%)</title><rect x="861.2" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.04%)</title><rect x="861.2" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.04%)</title><rect x="861.2" y="691.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="864.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (393 samples, 4.99%)</title><rect x="861.7" y="787.0" width="58.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.7" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (393 samples, 4.99%)</title><rect x="861.7" y="771.0" width="58.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.7" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (192 samples, 2.44%)</title><rect x="861.7" y="755.0" width="28.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.7" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (192 samples, 2.44%)</title><rect x="861.7" y="739.0" width="28.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.7" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (97 samples, 1.23%)</title><rect x="861.7" y="723.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (97 samples, 1.23%)</title><rect x="861.7" y="707.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.7" y="718.0"></text>
</g>
<g>
<title>byte[] (97 samples, 1.23%)</title><rect x="861.7" y="691.0" width="14.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="864.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 1.21%)</title><rect x="876.2" y="723.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.2" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (52 samples, 0.66%)</title><rect x="876.2" y="707.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="879.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 0.55%)</title><rect x="884.0" y="707.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (43 samples, 0.55%)</title><rect x="884.0" y="691.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (43 samples, 0.55%)</title><rect x="884.0" y="675.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.55%)</title><rect x="884.0" y="659.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.0" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.55%)</title><rect x="884.0" y="643.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="887.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (201 samples, 2.55%)</title><rect x="890.4" y="755.0" width="30.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.4" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (201 samples, 2.55%)</title><rect x="890.4" y="739.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.4" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (201 samples, 2.55%)</title><rect x="890.4" y="723.0" width="30.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.4" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="890.4" y="707.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="893.4" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.30%)</title><rect x="894.2" y="707.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="897.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (101 samples, 1.28%)</title><rect x="897.8" y="707.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.8" y="718.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.75%)</title><rect x="897.8" y="691.0" width="8.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="900.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.36%)</title><rect x="906.6" y="691.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="909.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.18%)</title><rect x="910.8" y="691.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="913.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (51 samples, 0.65%)</title><rect x="912.9" y="707.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.9" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 0.33%)</title><rect x="912.9" y="691.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (26 samples, 0.33%)</title><rect x="912.9" y="675.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.9" y="686.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="912.9" y="659.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="915.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (25 samples, 0.32%)</title><rect x="916.8" y="691.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.8" y="702.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="916.8" y="675.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="919.8" y="686.0"></text>
</g>
<g>
<title>[worker tid=83971] (439 samples, 5.58%)</title><rect x="920.6" y="851.0" width="65.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="923.6" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (439 samples, 5.58%)</title><rect x="920.6" y="835.0" width="65.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.6" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (439 samples, 5.58%)</title><rect x="920.6" y="819.0" width="65.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.6" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (439 samples, 5.58%)</title><rect x="920.6" y="803.0" width="65.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.6" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 0.44%)</title><rect x="920.6" y="787.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (35 samples, 0.44%)</title><rect x="920.6" y="771.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.44%)</title><rect x="920.6" y="755.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (35 samples, 0.44%)</title><rect x="920.6" y="739.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (35 samples, 0.44%)</title><rect x="920.6" y="723.0" width="5.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="923.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (404 samples, 5.13%)</title><rect x="925.8" y="787.0" width="60.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.8" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (404 samples, 5.13%)</title><rect x="925.8" y="771.0" width="60.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.8" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (191 samples, 2.43%)</title><rect x="925.8" y="755.0" width="28.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.8" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (191 samples, 2.43%)</title><rect x="925.8" y="739.0" width="28.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.8" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (97 samples, 1.23%)</title><rect x="925.8" y="723.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (97 samples, 1.23%)</title><rect x="925.8" y="707.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.8" y="718.0"></text>
</g>
<g>
<title>byte[] (97 samples, 1.23%)</title><rect x="925.8" y="691.0" width="14.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="928.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (94 samples, 1.19%)</title><rect x="940.3" y="723.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.3" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (38 samples, 0.48%)</title><rect x="940.3" y="707.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="943.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 0.71%)</title><rect x="946.0" y="707.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (56 samples, 0.71%)</title><rect x="946.0" y="691.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (56 samples, 0.71%)</title><rect x="946.0" y="675.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.71%)</title><rect x="946.0" y="659.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.0" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.71%)</title><rect x="946.0" y="643.0" width="8.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="949.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (213 samples, 2.71%)</title><rect x="954.4" y="755.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.4" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (213 samples, 2.71%)</title><rect x="954.4" y="739.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.4" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (213 samples, 2.71%)</title><rect x="954.4" y="723.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.4" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="954.4" y="707.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="957.4" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (31 samples, 0.39%)</title><rect x="958.2" y="707.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="961.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (106 samples, 1.35%)</title><rect x="962.8" y="707.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.8" y="718.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.60%)</title><rect x="962.8" y="691.0" width="7.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="965.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.42%)</title><rect x="969.9" y="691.0" width="4.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="972.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.33%)</title><rect x="974.8" y="691.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="977.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (51 samples, 0.65%)</title><rect x="978.7" y="707.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.7" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (20 samples, 0.25%)</title><rect x="978.7" y="691.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.7" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (20 samples, 0.25%)</title><rect x="978.7" y="675.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.7" y="686.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.25%)</title><rect x="978.7" y="659.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="981.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (31 samples, 0.39%)</title><rect x="981.7" y="691.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.7" y="702.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.39%)</title><rect x="981.7" y="675.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="984.7" y="686.0"></text>
</g>
<g>
<title>[worker tid=84483] (459 samples, 5.83%)</title><rect x="986.3" y="851.0" width="68.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="989.3" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (459 samples, 5.83%)</title><rect x="986.3" y="835.0" width="68.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.3" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (459 samples, 5.83%)</title><rect x="986.3" y="819.0" width="68.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.3" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (459 samples, 5.83%)</title><rect x="986.3" y="803.0" width="68.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.3" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 0.44%)</title><rect x="986.3" y="787.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (35 samples, 0.44%)</title><rect x="986.3" y="771.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 0.41%)</title><rect x="986.3" y="755.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (32 samples, 0.41%)</title><rect x="986.3" y="739.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.3" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (32 samples, 0.41%)</title><rect x="986.3" y="723.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="989.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.04%)</title><rect x="991.1" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.04%)</title><rect x="991.1" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.04%)</title><rect x="991.1" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.04%)</title><rect x="991.1" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.04%)</title><rect x="991.1" y="691.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="994.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (424 samples, 5.38%)</title><rect x="991.6" y="787.0" width="63.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.6" y="798.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (424 samples, 5.38%)</title><rect x="991.6" y="771.0" width="63.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="994.6" y="782.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (196 samples, 2.49%)</title><rect x="991.6" y="755.0" width="29.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.6" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (196 samples, 2.49%)</title><rect x="991.6" y="739.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.6" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (102 samples, 1.30%)</title><rect x="991.6" y="723.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (102 samples, 1.30%)</title><rect x="991.6" y="707.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.6" y="718.0"></text>
</g>
<g>
<title>byte[] (102 samples, 1.30%)</title><rect x="991.6" y="691.0" width="15.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="994.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (94 samples, 1.19%)</title><rect x="1006.9" y="723.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.9" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (50 samples, 0.64%)</title><rect x="1006.9" y="707.0" width="7.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1009.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 0.56%)</title><rect x="1014.4" y="707.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (44 samples, 0.56%)</title><rect x="1014.4" y="691.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (44 samples, 0.56%)</title><rect x="1014.4" y="675.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.56%)</title><rect x="1014.4" y="659.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.56%)</title><rect x="1014.4" y="643.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1017.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (228 samples, 2.90%)</title><rect x="1021.0" y="755.0" width="34.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.0" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (228 samples, 2.90%)</title><rect x="1021.0" y="739.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.0" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (228 samples, 2.90%)</title><rect x="1021.0" y="723.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.0" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (27 samples, 0.34%)</title><rect x="1021.0" y="707.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1024.0" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (26 samples, 0.33%)</title><rect x="1025.0" y="707.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1028.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (118 samples, 1.50%)</title><rect x="1028.9" y="707.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.9" y="718.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.72%)</title><rect x="1028.9" y="691.0" width="8.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1031.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.42%)</title><rect x="1037.4" y="691.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1040.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.36%)</title><rect x="1042.4" y="691.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1045.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (57 samples, 0.72%)</title><rect x="1046.6" y="707.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.6" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 0.36%)</title><rect x="1046.6" y="691.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 0.36%)</title><rect x="1046.6" y="675.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.6" y="686.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.36%)</title><rect x="1046.6" y="659.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1049.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (29 samples, 0.37%)</title><rect x="1050.8" y="691.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.8" y="702.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.37%)</title><rect x="1050.8" y="675.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1053.8" y="686.0"></text>
</g>
<g>
<title>[worker tid=86019] (454 samples, 5.77%)</title><rect x="1055.1" y="851.0" width="68.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1058.1" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (454 samples, 5.77%)</title><rect x="1055.1" y="835.0" width="68.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.1" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (454 samples, 5.77%)</title><rect x="1055.1" y="819.0" width="68.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.1" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (454 samples, 5.77%)</title><rect x="1055.1" y="803.0" width="68.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.1" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (42 samples, 0.53%)</title><rect x="1055.1" y="787.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (42 samples, 0.53%)</title><rect x="1055.1" y="771.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (41 samples, 0.52%)</title><rect x="1055.1" y="755.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (41 samples, 0.52%)</title><rect x="1055.1" y="739.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.1" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (41 samples, 0.52%)</title><rect x="1055.1" y="723.0" width="6.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1058.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (412 samples, 5.23%)</title><rect x="1061.4" y="787.0" width="61.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.4" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (412 samples, 5.23%)</title><rect x="1061.4" y="771.0" width="61.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.4" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (189 samples, 2.40%)</title><rect x="1061.4" y="755.0" width="28.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.4" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (189 samples, 2.40%)</title><rect x="1061.4" y="739.0" width="28.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.4" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (87 samples, 1.10%)</title><rect x="1061.4" y="723.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (87 samples, 1.10%)</title><rect x="1061.4" y="707.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.4" y="718.0"></text>
</g>
<g>
<title>byte[] (87 samples, 1.10%)</title><rect x="1061.4" y="691.0" width="13.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1064.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 1.30%)</title><rect x="1074.5" y="723.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.5" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (46 samples, 0.58%)</title><rect x="1074.5" y="707.0" width="6.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1077.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 0.71%)</title><rect x="1081.4" y="707.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (56 samples, 0.71%)</title><rect x="1081.4" y="691.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (56 samples, 0.71%)</title><rect x="1081.4" y="675.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.71%)</title><rect x="1081.4" y="659.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.71%)</title><rect x="1081.4" y="643.0" width="8.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1084.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (223 samples, 2.83%)</title><rect x="1089.7" y="755.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.7" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (223 samples, 2.83%)</title><rect x="1089.7" y="739.0" width="33.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.7" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (223 samples, 2.83%)</title><rect x="1089.7" y="723.0" width="33.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.7" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (27 samples, 0.34%)</title><rect x="1089.7" y="707.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1092.7" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.30%)</title><rect x="1093.8" y="707.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1096.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (114 samples, 1.45%)</title><rect x="1097.4" y="707.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.4" y="718.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.48%)</title><rect x="1097.4" y="691.0" width="5.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1100.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.60%)</title><rect x="1103.1" y="691.0" width="7.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1106.1" y="702.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.37%)</title><rect x="1110.1" y="691.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1113.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (58 samples, 0.74%)</title><rect x="1114.5" y="707.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.41%)</title><rect x="1114.5" y="691.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.41%)</title><rect x="1114.5" y="675.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.5" y="686.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.41%)</title><rect x="1114.5" y="659.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1117.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (26 samples, 0.33%)</title><rect x="1119.3" y="691.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.3" y="702.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="1119.3" y="675.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1122.3" y="686.0"></text>
</g>
<g>
<title>[worker tid=86787] (446 samples, 5.66%)</title><rect x="1123.2" y="851.0" width="66.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1126.2" y="862.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (446 samples, 5.66%)</title><rect x="1123.2" y="835.0" width="66.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.2" y="846.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (446 samples, 5.66%)</title><rect x="1123.2" y="819.0" width="66.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.2" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (446 samples, 5.66%)</title><rect x="1123.2" y="803.0" width="66.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.2" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (36 samples, 0.46%)</title><rect x="1123.2" y="787.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (36 samples, 0.46%)</title><rect x="1123.2" y="771.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.44%)</title><rect x="1123.2" y="755.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (35 samples, 0.44%)</title><rect x="1123.2" y="739.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.2" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (35 samples, 0.44%)</title><rect x="1123.2" y="723.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1126.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (410 samples, 5.21%)</title><rect x="1128.6" y="787.0" width="61.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.6" y="798.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (410 samples, 5.21%)</title><rect x="1128.6" y="771.0" width="61.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.6" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (194 samples, 2.46%)</title><rect x="1128.6" y="755.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.6" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (194 samples, 2.46%)</title><rect x="1128.6" y="739.0" width="29.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.6" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (101 samples, 1.28%)</title><rect x="1128.6" y="723.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (101 samples, 1.28%)</title><rect x="1128.6" y="707.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.6" y="718.0"></text>
</g>
<g>
<title>byte[] (101 samples, 1.28%)</title><rect x="1128.6" y="691.0" width="15.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1131.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 1.18%)</title><rect x="1143.7" y="723.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.7" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.57%)</title><rect x="1143.7" y="707.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1146.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.61%)</title><rect x="1150.4" y="707.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (48 samples, 0.61%)</title><rect x="1150.4" y="691.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (48 samples, 0.61%)</title><rect x="1150.4" y="675.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.61%)</title><rect x="1150.4" y="659.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.61%)</title><rect x="1150.4" y="643.0" width="7.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1153.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$133/744045698.act (216 samples, 2.74%)</title><rect x="1157.6" y="755.0" width="32.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.6" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (216 samples, 2.74%)</title><rect x="1157.6" y="739.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.6" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (216 samples, 2.74%)</title><rect x="1157.6" y="723.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.6" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (46 samples, 0.58%)</title><rect x="1157.6" y="707.0" width="6.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1160.6" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (18 samples, 0.23%)</title><rect x="1164.5" y="707.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (92 samples, 1.17%)</title><rect x="1167.2" y="707.0" width="13.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1170.2" y="718.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.61%)</title><rect x="1167.2" y="691.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1170.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 0.30%)</title><rect x="1174.4" y="691.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1177.4" y="702.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.25%)</title><rect x="1178.0" y="691.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1181.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (60 samples, 0.76%)</title><rect x="1181.0" y="707.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.0" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (30 samples, 0.38%)</title><rect x="1181.0" y="691.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.0" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (30 samples, 0.38%)</title><rect x="1181.0" y="675.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.0" y="686.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.38%)</title><rect x="1181.0" y="659.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1184.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (30 samples, 0.38%)</title><rect x="1185.5" y="691.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.38%)</title><rect x="1185.5" y="675.0" width="4.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1188.5" y="686.0"></text>
</g>
</g>
</svg>
