<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (8,901 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 31 tid=33795] (16 samples, 0.18%)</title><rect x="10.0" y="883.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 0.18%)</title><rect x="10.0" y="867.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (16 samples, 0.18%)</title><rect x="10.0" y="851.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (16 samples, 0.18%)</title><rect x="10.0" y="835.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.linkToTargetMethod (16 samples, 0.18%)</title><rect x="10.0" y="819.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1137272644.invoke (16 samples, 0.18%)</title><rect x="10.0" y="803.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.18%)</title><rect x="10.0" y="787.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.03%)</title><rect x="10.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="10.0" y="755.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.15%)</title><rect x="10.4" y="771.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.15%)</title><rect x="10.4" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.4" y="766.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.11%)</title><rect x="10.4" y="739.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (3 samples, 0.03%)</title><rect x="11.7" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.7" y="750.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="11.7" y="723.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="14.7" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=23571] (330 samples, 3.71%)</title><rect x="12.4" y="883.0" width="43.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="15.4" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (330 samples, 3.71%)</title><rect x="12.4" y="867.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.4" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (37 samples, 0.42%)</title><rect x="12.4" y="851.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (16 samples, 0.18%)</title><rect x="12.4" y="835.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.4" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (4 samples, 0.04%)</title><rect x="12.4" y="819.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="15.4" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (12 samples, 0.13%)</title><rect x="12.9" y="819.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="15.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (21 samples, 0.24%)</title><rect x="14.5" y="835.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (21 samples, 0.24%)</title><rect x="14.5" y="819.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (21 samples, 0.24%)</title><rect x="14.5" y="803.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (21 samples, 0.24%)</title><rect x="14.5" y="787.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (21 samples, 0.24%)</title><rect x="14.5" y="771.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (21 samples, 0.24%)</title><rect x="14.5" y="755.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.24%)</title><rect x="14.5" y="739.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (21 samples, 0.24%)</title><rect x="14.5" y="723.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (21 samples, 0.24%)</title><rect x="14.5" y="707.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.5" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (21 samples, 0.24%)</title><rect x="14.5" y="691.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="17.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (293 samples, 3.29%)</title><rect x="17.3" y="851.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.3" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (293 samples, 3.29%)</title><rect x="17.3" y="835.0" width="38.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.3" y="846.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (293 samples, 3.29%)</title><rect x="17.3" y="819.0" width="38.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.3" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (98 samples, 1.10%)</title><rect x="17.3" y="803.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (98 samples, 1.10%)</title><rect x="17.3" y="787.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.26%)</title><rect x="17.3" y="771.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.26%)</title><rect x="17.3" y="755.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.26%)</title><rect x="17.3" y="739.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="17.3" y="723.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="20.3" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.17%)</title><rect x="18.4" y="723.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.4" y="734.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.17%)</title><rect x="18.4" y="707.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="21.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (75 samples, 0.84%)</title><rect x="20.3" y="771.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.22%)</title><rect x="20.3" y="755.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.22%)</title><rect x="20.3" y="739.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.22%)</title><rect x="20.3" y="723.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.11%)</title><rect x="20.3" y="707.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="23.3" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.11%)</title><rect x="21.7" y="707.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.7" y="718.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.11%)</title><rect x="21.7" y="691.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (55 samples, 0.62%)</title><rect x="23.0" y="755.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.07%)</title><rect x="23.0" y="739.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.07%)</title><rect x="23.0" y="723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.07%)</title><rect x="23.0" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.0" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.07%)</title><rect x="23.0" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.0" y="702.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="23.0" y="675.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="23.8" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="23.8" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (4 samples, 0.04%)</title><rect x="23.8" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.8" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (4 samples, 0.04%)</title><rect x="23.8" y="691.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="26.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.22%)</title><rect x="24.3" y="739.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.22%)</title><rect x="24.3" y="723.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.3" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.22%)</title><rect x="24.3" y="707.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="27.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.16%)</title><rect x="27.0" y="739.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.16%)</title><rect x="27.0" y="723.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.16%)</title><rect x="27.0" y="707.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="27.0" y="691.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="30.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.10%)</title><rect x="27.6" y="691.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.6" y="702.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="27.6" y="675.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="30.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (11 samples, 0.12%)</title><rect x="28.8" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="28.8" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="28.8" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (4 samples, 0.04%)</title><rect x="28.8" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.8" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (4 samples, 0.04%)</title><rect x="28.8" y="675.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="31.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.08%)</title><rect x="29.4" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.08%)</title><rect x="29.4" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7 samples, 0.08%)</title><rect x="29.4" y="691.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="32.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (83 samples, 0.93%)</title><rect x="30.3" y="803.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.3" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.16%)</title><rect x="30.3" y="787.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="33.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.34%)</title><rect x="32.1" y="787.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.1" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.34%)</title><rect x="32.1" y="771.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="35.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.44%)</title><rect x="36.1" y="787.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.44%)</title><rect x="36.1" y="771.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.1" y="782.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.21%)</title><rect x="36.1" y="755.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="39.1" y="766.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.08%)</title><rect x="38.6" y="755.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="41.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.15%)</title><rect x="39.6" y="755.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.15%)</title><rect x="39.6" y="739.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.15%)</title><rect x="39.6" y="723.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="734.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="39.6" y="707.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="42.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.06%)</title><rect x="41.3" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.3" y="814.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="41.3" y="787.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="44.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.20%)</title><rect x="41.9" y="803.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.20%)</title><rect x="41.9" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.20%)</title><rect x="41.9" y="771.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.9" y="782.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="41.9" y="755.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="44.9" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.11%)</title><rect x="43.0" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.0" y="766.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.11%)</title><rect x="43.0" y="739.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="46.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 1.00%)</title><rect x="44.3" y="803.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 1.00%)</title><rect x="44.3" y="787.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.3" y="798.0"></text>
</g>
<g>
<title>char[] (43 samples, 0.48%)</title><rect x="44.3" y="771.0" width="5.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="47.3" y="782.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.17%)</title><rect x="50.0" y="771.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="53.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="52.0" y="771.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="52.0" y="755.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.35%)</title><rect x="52.0" y="739.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.35%)</title><rect x="52.0" y="723.0" width="4.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="55.0" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24067] (524 samples, 5.89%)</title><rect x="56.1" y="883.0" width="69.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="59.1" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (524 samples, 5.89%)</title><rect x="56.1" y="867.0" width="69.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.1" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (51 samples, 0.57%)</title><rect x="56.1" y="851.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (22 samples, 0.25%)</title><rect x="56.1" y="835.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.1" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (9 samples, 0.10%)</title><rect x="56.1" y="819.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="59.1" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (13 samples, 0.15%)</title><rect x="57.3" y="819.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="60.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 0.33%)</title><rect x="59.1" y="835.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 0.33%)</title><rect x="59.1" y="819.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 0.33%)</title><rect x="59.1" y="803.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (29 samples, 0.33%)</title><rect x="59.1" y="787.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (29 samples, 0.33%)</title><rect x="59.1" y="771.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (29 samples, 0.33%)</title><rect x="59.1" y="755.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (29 samples, 0.33%)</title><rect x="59.1" y="739.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (29 samples, 0.33%)</title><rect x="59.1" y="723.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 0.33%)</title><rect x="59.1" y="707.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.1" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 0.33%)</title><rect x="59.1" y="691.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="62.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (473 samples, 5.31%)</title><rect x="62.9" y="851.0" width="62.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.9" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (473 samples, 5.31%)</title><rect x="62.9" y="835.0" width="62.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.9" y="846.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (472 samples, 5.30%)</title><rect x="62.9" y="819.0" width="62.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.9" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (168 samples, 1.89%)</title><rect x="62.9" y="803.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.9" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (168 samples, 1.89%)</title><rect x="62.9" y="787.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.9" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (24 samples, 0.27%)</title><rect x="62.9" y="771.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.27%)</title><rect x="62.9" y="755.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.27%)</title><rect x="62.9" y="739.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.9" y="750.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.10%)</title><rect x="62.9" y="723.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="65.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.17%)</title><rect x="64.1" y="723.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.1" y="734.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.17%)</title><rect x="64.1" y="707.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="67.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (144 samples, 1.62%)</title><rect x="66.1" y="771.0" width="19.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.38%)</title><rect x="66.1" y="755.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.38%)</title><rect x="66.1" y="739.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.38%)</title><rect x="66.1" y="723.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.1" y="734.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.18%)</title><rect x="66.1" y="707.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.1" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.20%)</title><rect x="68.2" y="707.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.2" y="718.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.20%)</title><rect x="68.2" y="691.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (110 samples, 1.24%)</title><rect x="70.6" y="755.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.12%)</title><rect x="70.6" y="739.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.12%)</title><rect x="70.6" y="723.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.12%)</title><rect x="70.6" y="707.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.12%)</title><rect x="70.6" y="691.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.6" y="702.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.12%)</title><rect x="70.6" y="675.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="73.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="72.0" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="72.0" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (3 samples, 0.03%)</title><rect x="72.0" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.0" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (3 samples, 0.03%)</title><rect x="72.0" y="691.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="75.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.37%)</title><rect x="72.4" y="739.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.37%)</title><rect x="72.4" y="723.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.37%)</title><rect x="72.4" y="707.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="75.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (34 samples, 0.38%)</title><rect x="76.8" y="739.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.38%)</title><rect x="76.8" y="723.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.38%)</title><rect x="76.8" y="707.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.8" y="718.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.12%)</title><rect x="76.8" y="691.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.26%)</title><rect x="78.3" y="691.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.3" y="702.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.26%)</title><rect x="78.3" y="675.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="81.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (29 samples, 0.33%)</title><rect x="81.3" y="739.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.19%)</title><rect x="81.3" y="723.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.19%)</title><rect x="81.3" y="707.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (17 samples, 0.19%)</title><rect x="81.3" y="691.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.3" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (17 samples, 0.19%)</title><rect x="81.3" y="675.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="84.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.13%)</title><rect x="83.6" y="723.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.13%)</title><rect x="83.6" y="707.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (12 samples, 0.13%)</title><rect x="83.6" y="691.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="86.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (135 samples, 1.52%)</title><rect x="85.2" y="803.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.2" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (17 samples, 0.19%)</title><rect x="85.2" y="787.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="88.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (50 samples, 0.56%)</title><rect x="87.4" y="787.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.4" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.56%)</title><rect x="87.4" y="771.0" width="6.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="90.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 0.76%)</title><rect x="94.0" y="787.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 0.76%)</title><rect x="94.0" y="771.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.0" y="782.0"></text>
</g>
<g>
<title>char[] (31 samples, 0.35%)</title><rect x="94.0" y="755.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="97.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.10%)</title><rect x="98.2" y="755.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="101.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.31%)</title><rect x="99.4" y="755.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.31%)</title><rect x="99.4" y="739.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.31%)</title><rect x="99.4" y="723.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.4" y="734.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.31%)</title><rect x="99.4" y="707.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="102.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (13 samples, 0.15%)</title><rect x="103.1" y="803.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.1" y="814.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="103.1" y="787.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="106.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (26 samples, 0.29%)</title><rect x="104.8" y="803.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.29%)</title><rect x="104.8" y="787.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.29%)</title><rect x="104.8" y="771.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.15%)</title><rect x="104.8" y="755.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.8" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.15%)</title><rect x="106.5" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.5" y="766.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="106.5" y="739.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="109.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.46%)</title><rect x="108.2" y="803.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.46%)</title><rect x="108.2" y="787.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.2" y="798.0"></text>
</g>
<g>
<title>char[] (53 samples, 0.60%)</title><rect x="108.2" y="771.0" width="7.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="111.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.36%)</title><rect x="115.3" y="771.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="118.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.51%)</title><rect x="119.5" y="771.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.51%)</title><rect x="119.5" y="755.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (45 samples, 0.51%)</title><rect x="119.5" y="739.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.5" y="750.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.51%)</title><rect x="119.5" y="723.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="122.5" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24835] (675 samples, 7.58%)</title><rect x="125.6" y="883.0" width="89.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="128.6" y="894.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (675 samples, 7.58%)</title><rect x="125.6" y="867.0" width="89.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.6" y="878.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (66 samples, 0.74%)</title><rect x="125.6" y="851.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (36 samples, 0.40%)</title><rect x="125.6" y="835.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.6" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (20 samples, 0.22%)</title><rect x="125.6" y="819.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="128.6" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (16 samples, 0.18%)</title><rect x="128.3" y="819.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="131.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (30 samples, 0.34%)</title><rect x="130.4" y="835.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (30 samples, 0.34%)</title><rect x="130.4" y="819.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (30 samples, 0.34%)</title><rect x="130.4" y="803.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (30 samples, 0.34%)</title><rect x="130.4" y="787.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (30 samples, 0.34%)</title><rect x="130.4" y="771.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (30 samples, 0.34%)</title><rect x="130.4" y="755.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (30 samples, 0.34%)</title><rect x="130.4" y="739.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.4" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (30 samples, 0.34%)</title><rect x="130.4" y="723.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (30 samples, 0.34%)</title><rect x="130.4" y="707.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.4" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (30 samples, 0.34%)</title><rect x="130.4" y="691.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="133.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (609 samples, 6.84%)</title><rect x="134.4" y="851.0" width="80.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.4" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (609 samples, 6.84%)</title><rect x="134.4" y="835.0" width="80.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.4" y="846.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (609 samples, 6.84%)</title><rect x="134.4" y="819.0" width="80.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.4" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (204 samples, 2.29%)</title><rect x="134.4" y="803.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.4" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (204 samples, 2.29%)</title><rect x="134.4" y="787.0" width="27.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.4" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (45 samples, 0.51%)</title><rect x="134.4" y="771.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.51%)</title><rect x="134.4" y="755.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.51%)</title><rect x="134.4" y="739.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.4" y="750.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.27%)</title><rect x="134.4" y="723.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="137.4" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.24%)</title><rect x="137.5" y="723.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.5" y="734.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.24%)</title><rect x="137.5" y="707.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="140.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (159 samples, 1.79%)</title><rect x="140.3" y="771.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.3" y="782.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (40 samples, 0.45%)</title><rect x="140.3" y="755.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.45%)</title><rect x="140.3" y="739.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.45%)</title><rect x="140.3" y="723.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.18%)</title><rect x="140.3" y="707.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="143.3" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.27%)</title><rect x="142.4" y="707.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.4" y="718.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.27%)</title><rect x="142.4" y="691.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="145.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (119 samples, 1.34%)</title><rect x="145.6" y="755.0" width="15.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.16%)</title><rect x="145.6" y="739.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.16%)</title><rect x="145.6" y="723.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.16%)</title><rect x="145.6" y="707.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.6" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.16%)</title><rect x="145.6" y="691.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.6" y="702.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.16%)</title><rect x="145.6" y="675.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="148.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.10%)</title><rect x="147.5" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.10%)</title><rect x="147.5" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (9 samples, 0.10%)</title><rect x="147.5" y="707.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.5" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (9 samples, 0.10%)</title><rect x="147.5" y="691.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="150.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.30%)</title><rect x="148.7" y="739.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.30%)</title><rect x="148.7" y="723.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.7" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.30%)</title><rect x="148.7" y="707.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="151.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.35%)</title><rect x="152.2" y="739.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.35%)</title><rect x="152.2" y="723.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.35%)</title><rect x="152.2" y="707.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.16%)</title><rect x="152.2" y="691.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="155.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.19%)</title><rect x="154.1" y="691.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.1" y="702.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.19%)</title><rect x="154.1" y="675.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="157.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (38 samples, 0.43%)</title><rect x="156.4" y="739.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.25%)</title><rect x="156.4" y="723.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.25%)</title><rect x="156.4" y="707.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (22 samples, 0.25%)</title><rect x="156.4" y="691.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.4" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (22 samples, 0.25%)</title><rect x="156.4" y="675.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="159.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.18%)</title><rect x="159.3" y="723.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.18%)</title><rect x="159.3" y="707.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (16 samples, 0.18%)</title><rect x="159.3" y="691.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="162.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (191 samples, 2.15%)</title><rect x="161.4" y="803.0" width="25.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.4" y="814.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (35 samples, 0.39%)</title><rect x="161.4" y="787.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="164.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (60 samples, 0.67%)</title><rect x="166.0" y="787.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.0" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (60 samples, 0.67%)</title><rect x="166.0" y="771.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="169.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 1.08%)</title><rect x="174.0" y="787.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 1.08%)</title><rect x="174.0" y="771.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.0" y="782.0"></text>
</g>
<g>
<title>char[] (45 samples, 0.51%)</title><rect x="174.0" y="755.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="177.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.13%)</title><rect x="180.0" y="755.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="183.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.44%)</title><rect x="181.5" y="755.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.44%)</title><rect x="181.5" y="739.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.44%)</title><rect x="181.5" y="723.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.5" y="734.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.44%)</title><rect x="181.5" y="707.0" width="5.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="184.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (20 samples, 0.22%)</title><rect x="186.7" y="803.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.7" y="814.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.22%)</title><rect x="186.7" y="787.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="189.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (34 samples, 0.38%)</title><rect x="189.4" y="803.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.38%)</title><rect x="189.4" y="787.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.38%)</title><rect x="189.4" y="771.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.20%)</title><rect x="189.4" y="755.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="192.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.18%)</title><rect x="191.8" y="755.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.8" y="766.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.18%)</title><rect x="191.8" y="739.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="194.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (160 samples, 1.80%)</title><rect x="193.9" y="803.0" width="21.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.9" y="814.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (160 samples, 1.80%)</title><rect x="193.9" y="787.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.9" y="798.0">o..</text>
</g>
<g>
<title>char[] (77 samples, 0.87%)</title><rect x="193.9" y="771.0" width="10.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="196.9" y="782.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.34%)</title><rect x="204.1" y="771.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="207.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.60%)</title><rect x="208.1" y="771.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.60%)</title><rect x="208.1" y="755.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.60%)</title><rect x="208.1" y="739.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.1" y="750.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.60%)</title><rect x="208.1" y="723.0" width="7.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="211.1" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25091] (689 samples, 7.74%)</title><rect x="215.1" y="883.0" width="91.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="218.1" y="894.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (689 samples, 7.74%)</title><rect x="215.1" y="867.0" width="91.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.1" y="878.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (53 samples, 0.60%)</title><rect x="215.1" y="851.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (28 samples, 0.31%)</title><rect x="215.1" y="835.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.1" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (11 samples, 0.12%)</title><rect x="215.1" y="819.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="218.1" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (17 samples, 0.19%)</title><rect x="216.5" y="819.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="219.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (25 samples, 0.28%)</title><rect x="218.8" y="835.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (25 samples, 0.28%)</title><rect x="218.8" y="819.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (25 samples, 0.28%)</title><rect x="218.8" y="803.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (25 samples, 0.28%)</title><rect x="218.8" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (25 samples, 0.28%)</title><rect x="218.8" y="771.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (25 samples, 0.28%)</title><rect x="218.8" y="755.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (25 samples, 0.28%)</title><rect x="218.8" y="739.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (25 samples, 0.28%)</title><rect x="218.8" y="723.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (25 samples, 0.28%)</title><rect x="218.8" y="707.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.8" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (25 samples, 0.28%)</title><rect x="218.8" y="691.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="221.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (636 samples, 7.15%)</title><rect x="222.1" y="851.0" width="84.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.1" y="862.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (636 samples, 7.15%)</title><rect x="222.1" y="835.0" width="84.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.1" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (635 samples, 7.13%)</title><rect x="222.1" y="819.0" width="84.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.1" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (215 samples, 2.42%)</title><rect x="222.1" y="803.0" width="28.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.1" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (215 samples, 2.42%)</title><rect x="222.1" y="787.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.1" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (35 samples, 0.39%)</title><rect x="222.1" y="771.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.39%)</title><rect x="222.1" y="755.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.39%)</title><rect x="222.1" y="739.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.1" y="750.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.17%)</title><rect x="222.1" y="723.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="225.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.22%)</title><rect x="224.1" y="723.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.1" y="734.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.22%)</title><rect x="224.1" y="707.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="227.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (180 samples, 2.02%)</title><rect x="226.8" y="771.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.8" y="782.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (40 samples, 0.45%)</title><rect x="226.8" y="755.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.45%)</title><rect x="226.8" y="739.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.45%)</title><rect x="226.8" y="723.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.21%)</title><rect x="226.8" y="707.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="229.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.24%)</title><rect x="229.3" y="707.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.3" y="718.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.24%)</title><rect x="229.3" y="691.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="232.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (140 samples, 1.57%)</title><rect x="232.1" y="755.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.16%)</title><rect x="232.1" y="739.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.16%)</title><rect x="232.1" y="723.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.16%)</title><rect x="232.1" y="707.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.1" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.16%)</title><rect x="232.1" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.1" y="702.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.16%)</title><rect x="232.1" y="675.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="235.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.17%)</title><rect x="233.9" y="739.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.17%)</title><rect x="233.9" y="723.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (15 samples, 0.17%)</title><rect x="233.9" y="707.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.9" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (15 samples, 0.17%)</title><rect x="233.9" y="691.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="236.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.40%)</title><rect x="235.9" y="739.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.40%)</title><rect x="235.9" y="723.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.9" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.40%)</title><rect x="235.9" y="707.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="238.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (34 samples, 0.38%)</title><rect x="240.7" y="739.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.38%)</title><rect x="240.7" y="723.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.38%)</title><rect x="240.7" y="707.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.10%)</title><rect x="240.7" y="691.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="243.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.28%)</title><rect x="241.9" y="691.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.9" y="702.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.28%)</title><rect x="241.9" y="675.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="244.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (41 samples, 0.46%)</title><rect x="245.2" y="739.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.27%)</title><rect x="245.2" y="723.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.27%)</title><rect x="245.2" y="707.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (24 samples, 0.27%)</title><rect x="245.2" y="691.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.2" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (24 samples, 0.27%)</title><rect x="245.2" y="675.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="248.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.19%)</title><rect x="248.4" y="723.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.19%)</title><rect x="248.4" y="707.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (17 samples, 0.19%)</title><rect x="248.4" y="691.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="251.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (192 samples, 2.16%)</title><rect x="250.6" y="803.0" width="25.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.6" y="814.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (27 samples, 0.30%)</title><rect x="250.6" y="787.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="253.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (65 samples, 0.73%)</title><rect x="254.2" y="787.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.2" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (65 samples, 0.73%)</title><rect x="254.2" y="771.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="257.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (100 samples, 1.12%)</title><rect x="262.8" y="787.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="265.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (100 samples, 1.12%)</title><rect x="262.8" y="771.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.8" y="782.0"></text>
</g>
<g>
<title>char[] (51 samples, 0.57%)</title><rect x="262.8" y="755.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="265.8" y="766.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.20%)</title><rect x="269.6" y="755.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="272.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="272.0" y="755.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="272.0" y="739.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.35%)</title><rect x="272.0" y="723.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.0" y="734.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.35%)</title><rect x="272.0" y="707.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="275.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (29 samples, 0.33%)</title><rect x="276.1" y="803.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.1" y="814.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.33%)</title><rect x="276.1" y="787.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="279.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (28 samples, 0.31%)</title><rect x="279.9" y="803.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.31%)</title><rect x="279.9" y="787.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.31%)</title><rect x="279.9" y="771.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.9" y="782.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.17%)</title><rect x="279.9" y="755.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="282.9" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.15%)</title><rect x="281.9" y="755.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.9" y="766.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="281.9" y="739.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="284.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (171 samples, 1.92%)</title><rect x="283.6" y="803.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.6" y="814.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (171 samples, 1.92%)</title><rect x="283.6" y="787.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.6" y="798.0">o..</text>
</g>
<g>
<title>char[] (87 samples, 0.98%)</title><rect x="283.6" y="771.0" width="11.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="286.6" y="782.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.34%)</title><rect x="295.2" y="771.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="298.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 0.61%)</title><rect x="299.1" y="771.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 0.61%)</title><rect x="299.1" y="755.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (54 samples, 0.61%)</title><rect x="299.1" y="739.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.1" y="750.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.61%)</title><rect x="299.1" y="723.0" width="7.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="302.1" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=37635] (504 samples, 5.66%)</title><rect x="306.4" y="883.0" width="66.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="309.4" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (504 samples, 5.66%)</title><rect x="306.4" y="867.0" width="66.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="309.4" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (56 samples, 0.63%)</title><rect x="306.4" y="851.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="309.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (33 samples, 0.37%)</title><rect x="306.4" y="835.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.4" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (14 samples, 0.16%)</title><rect x="306.4" y="819.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="309.4" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (19 samples, 0.21%)</title><rect x="308.3" y="819.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="311.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (23 samples, 0.26%)</title><rect x="310.8" y="835.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (23 samples, 0.26%)</title><rect x="310.8" y="819.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (23 samples, 0.26%)</title><rect x="310.8" y="803.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (23 samples, 0.26%)</title><rect x="310.8" y="787.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (23 samples, 0.26%)</title><rect x="310.8" y="771.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (23 samples, 0.26%)</title><rect x="310.8" y="755.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (23 samples, 0.26%)</title><rect x="310.8" y="739.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (23 samples, 0.26%)</title><rect x="310.8" y="723.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (23 samples, 0.26%)</title><rect x="310.8" y="707.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.8" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (23 samples, 0.26%)</title><rect x="310.8" y="691.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="313.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (448 samples, 5.03%)</title><rect x="313.8" y="851.0" width="59.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.8" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (448 samples, 5.03%)</title><rect x="313.8" y="835.0" width="59.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="846.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (448 samples, 5.03%)</title><rect x="313.8" y="819.0" width="59.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.8" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (148 samples, 1.66%)</title><rect x="313.8" y="803.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (148 samples, 1.66%)</title><rect x="313.8" y="787.0" width="19.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (19 samples, 0.21%)</title><rect x="313.8" y="771.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.21%)</title><rect x="313.8" y="755.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.21%)</title><rect x="313.8" y="739.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.8" y="750.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.11%)</title><rect x="313.8" y="723.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="316.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.10%)</title><rect x="315.2" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.2" y="734.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="315.2" y="707.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="318.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (129 samples, 1.45%)</title><rect x="316.4" y="771.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.38%)</title><rect x="316.4" y="755.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.38%)</title><rect x="316.4" y="739.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.38%)</title><rect x="316.4" y="723.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.18%)</title><rect x="316.4" y="707.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="319.4" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.20%)</title><rect x="318.5" y="707.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.5" y="718.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.20%)</title><rect x="318.5" y="691.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="321.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (95 samples, 1.07%)</title><rect x="320.9" y="755.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.11%)</title><rect x="320.9" y="739.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.11%)</title><rect x="320.9" y="723.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.11%)</title><rect x="320.9" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.11%)</title><rect x="320.9" y="691.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.9" y="702.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.11%)</title><rect x="320.9" y="675.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="323.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.10%)</title><rect x="322.2" y="739.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.10%)</title><rect x="322.2" y="723.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (9 samples, 0.10%)</title><rect x="322.2" y="707.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.2" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (9 samples, 0.10%)</title><rect x="322.2" y="691.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="325.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.33%)</title><rect x="323.4" y="739.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.33%)</title><rect x="323.4" y="723.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.33%)</title><rect x="323.4" y="707.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="326.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.33%)</title><rect x="327.2" y="739.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.33%)</title><rect x="327.2" y="723.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.33%)</title><rect x="327.2" y="707.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.19%)</title><rect x="327.2" y="691.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="330.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.13%)</title><rect x="329.5" y="691.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.5" y="702.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.13%)</title><rect x="329.5" y="675.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="332.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (18 samples, 0.20%)</title><rect x="331.1" y="739.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.10%)</title><rect x="331.1" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.10%)</title><rect x="331.1" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (9 samples, 0.10%)</title><rect x="331.1" y="691.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.1" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (9 samples, 0.10%)</title><rect x="331.1" y="675.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="334.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.10%)</title><rect x="332.3" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.10%)</title><rect x="332.3" y="707.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.10%)</title><rect x="332.3" y="691.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="335.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (129 samples, 1.45%)</title><rect x="333.5" y="803.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.5" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.21%)</title><rect x="333.5" y="787.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="336.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (48 samples, 0.54%)</title><rect x="336.0" y="787.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.0" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.54%)</title><rect x="336.0" y="771.0" width="6.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="339.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (62 samples, 0.70%)</title><rect x="342.4" y="787.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (62 samples, 0.70%)</title><rect x="342.4" y="771.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.4" y="782.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.30%)</title><rect x="342.4" y="755.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="345.4" y="766.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="345.9" y="755.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="348.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="346.5" y="755.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="346.5" y="739.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.35%)</title><rect x="346.5" y="723.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.5" y="734.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.35%)</title><rect x="346.5" y="707.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="349.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.19%)</title><rect x="350.6" y="803.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.6" y="814.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.19%)</title><rect x="350.6" y="787.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="353.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (30 samples, 0.34%)</title><rect x="352.8" y="803.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.34%)</title><rect x="352.8" y="787.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.34%)</title><rect x="352.8" y="771.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.18%)</title><rect x="352.8" y="755.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="355.8" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.16%)</title><rect x="354.9" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.9" y="766.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.16%)</title><rect x="354.9" y="739.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="357.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (124 samples, 1.39%)</title><rect x="356.8" y="803.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (124 samples, 1.39%)</title><rect x="356.8" y="787.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.8" y="798.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.64%)</title><rect x="356.8" y="771.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="359.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.28%)</title><rect x="364.4" y="771.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="367.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.47%)</title><rect x="367.7" y="771.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.47%)</title><rect x="367.7" y="755.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.47%)</title><rect x="367.7" y="739.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.7" y="750.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.47%)</title><rect x="367.7" y="723.0" width="5.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="370.7" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=37123] (649 samples, 7.29%)</title><rect x="373.2" y="883.0" width="86.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="376.2" y="894.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (649 samples, 7.29%)</title><rect x="373.2" y="867.0" width="86.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.2" y="878.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (63 samples, 0.71%)</title><rect x="373.2" y="851.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (31 samples, 0.35%)</title><rect x="373.2" y="835.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.2" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (9 samples, 0.10%)</title><rect x="373.2" y="819.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="376.2" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (22 samples, 0.25%)</title><rect x="374.4" y="819.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="377.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (32 samples, 0.36%)</title><rect x="377.3" y="835.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (32 samples, 0.36%)</title><rect x="377.3" y="819.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (32 samples, 0.36%)</title><rect x="377.3" y="803.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (32 samples, 0.36%)</title><rect x="377.3" y="787.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (32 samples, 0.36%)</title><rect x="377.3" y="771.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (32 samples, 0.36%)</title><rect x="377.3" y="755.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (32 samples, 0.36%)</title><rect x="377.3" y="739.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (32 samples, 0.36%)</title><rect x="377.3" y="723.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (32 samples, 0.36%)</title><rect x="377.3" y="707.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.3" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (32 samples, 0.36%)</title><rect x="377.3" y="691.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="380.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (586 samples, 6.58%)</title><rect x="381.6" y="851.0" width="77.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (586 samples, 6.58%)</title><rect x="381.6" y="835.0" width="77.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.6" y="846.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (585 samples, 6.57%)</title><rect x="381.6" y="819.0" width="77.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.6" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (219 samples, 2.46%)</title><rect x="381.6" y="803.0" width="29.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.6" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (219 samples, 2.46%)</title><rect x="381.6" y="787.0" width="29.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.6" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (41 samples, 0.46%)</title><rect x="381.6" y="771.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.46%)</title><rect x="381.6" y="755.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.46%)</title><rect x="381.6" y="739.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.6" y="750.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.20%)</title><rect x="381.6" y="723.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="384.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.26%)</title><rect x="384.0" y="723.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.0" y="734.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.26%)</title><rect x="384.0" y="707.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="387.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (178 samples, 2.00%)</title><rect x="387.0" y="771.0" width="23.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.0" y="782.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (40 samples, 0.45%)</title><rect x="387.0" y="755.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.45%)</title><rect x="387.0" y="739.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.45%)</title><rect x="387.0" y="723.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.21%)</title><rect x="387.0" y="707.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="390.0" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.24%)</title><rect x="389.5" y="707.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.5" y="718.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.24%)</title><rect x="389.5" y="691.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="392.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (138 samples, 1.55%)</title><rect x="392.3" y="755.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.09%)</title><rect x="392.3" y="739.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.09%)</title><rect x="392.3" y="723.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.09%)</title><rect x="392.3" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.3" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.09%)</title><rect x="392.3" y="691.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.3" y="702.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.09%)</title><rect x="392.3" y="675.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="395.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.17%)</title><rect x="393.4" y="739.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.17%)</title><rect x="393.4" y="723.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (15 samples, 0.17%)</title><rect x="393.4" y="707.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.4" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (15 samples, 0.17%)</title><rect x="393.4" y="691.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="396.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.45%)</title><rect x="395.4" y="739.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.45%)</title><rect x="395.4" y="723.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.45%)</title><rect x="395.4" y="707.0" width="5.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="398.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (41 samples, 0.46%)</title><rect x="400.7" y="739.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.46%)</title><rect x="400.7" y="723.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.46%)</title><rect x="400.7" y="707.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.19%)</title><rect x="400.7" y="691.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="403.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.27%)</title><rect x="402.9" y="691.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.9" y="702.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.27%)</title><rect x="402.9" y="675.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="405.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (34 samples, 0.38%)</title><rect x="406.1" y="739.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.22%)</title><rect x="406.1" y="723.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.22%)</title><rect x="406.1" y="707.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (20 samples, 0.22%)</title><rect x="406.1" y="691.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.1" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (20 samples, 0.22%)</title><rect x="406.1" y="675.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="409.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.16%)</title><rect x="408.8" y="723.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.16%)</title><rect x="408.8" y="707.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (14 samples, 0.16%)</title><rect x="408.8" y="691.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="411.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (156 samples, 1.75%)</title><rect x="410.6" y="803.0" width="20.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.6" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.31%)</title><rect x="410.6" y="787.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="413.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (52 samples, 0.58%)</title><rect x="414.3" y="787.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.3" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (52 samples, 0.58%)</title><rect x="414.3" y="771.0" width="6.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="417.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 0.85%)</title><rect x="421.2" y="787.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 0.85%)</title><rect x="421.2" y="771.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="782.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.38%)</title><rect x="421.2" y="755.0" width="4.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="424.2" y="766.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.19%)</title><rect x="425.7" y="755.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="428.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.28%)</title><rect x="428.0" y="755.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.28%)</title><rect x="428.0" y="739.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.28%)</title><rect x="428.0" y="723.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.0" y="734.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.28%)</title><rect x="428.0" y="707.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="431.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 0.21%)</title><rect x="431.3" y="803.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.3" y="814.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.21%)</title><rect x="431.3" y="787.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="434.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (28 samples, 0.31%)</title><rect x="433.8" y="803.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.31%)</title><rect x="433.8" y="787.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.31%)</title><rect x="433.8" y="771.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.15%)</title><rect x="433.8" y="755.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="436.8" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.17%)</title><rect x="435.5" y="755.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.5" y="766.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.17%)</title><rect x="435.5" y="739.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="438.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (163 samples, 1.83%)</title><rect x="437.5" y="803.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.5" y="814.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (163 samples, 1.83%)</title><rect x="437.5" y="787.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.5" y="798.0">o..</text>
</g>
<g>
<title>char[] (78 samples, 0.88%)</title><rect x="437.5" y="771.0" width="10.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="440.5" y="782.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.36%)</title><rect x="447.9" y="771.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="450.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.60%)</title><rect x="452.1" y="771.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.60%)</title><rect x="452.1" y="755.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.60%)</title><rect x="452.1" y="739.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.1" y="750.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.60%)</title><rect x="452.1" y="723.0" width="7.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="455.1" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=36611] (689 samples, 7.74%)</title><rect x="459.3" y="883.0" width="91.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="462.3" y="894.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (689 samples, 7.74%)</title><rect x="459.3" y="867.0" width="91.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.3" y="878.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (70 samples, 0.79%)</title><rect x="459.3" y="851.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (37 samples, 0.42%)</title><rect x="459.3" y="835.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.3" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (14 samples, 0.16%)</title><rect x="459.3" y="819.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="462.3" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (23 samples, 0.26%)</title><rect x="461.1" y="819.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="464.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (33 samples, 0.37%)</title><rect x="464.2" y="835.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (33 samples, 0.37%)</title><rect x="464.2" y="819.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (33 samples, 0.37%)</title><rect x="464.2" y="803.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (33 samples, 0.37%)</title><rect x="464.2" y="787.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (33 samples, 0.37%)</title><rect x="464.2" y="771.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (33 samples, 0.37%)</title><rect x="464.2" y="755.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (33 samples, 0.37%)</title><rect x="464.2" y="739.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (33 samples, 0.37%)</title><rect x="464.2" y="723.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (33 samples, 0.37%)</title><rect x="464.2" y="707.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.2" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (33 samples, 0.37%)</title><rect x="464.2" y="691.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="467.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (619 samples, 6.95%)</title><rect x="468.6" y="851.0" width="82.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.6" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (619 samples, 6.95%)</title><rect x="468.6" y="835.0" width="82.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.6" y="846.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (619 samples, 6.95%)</title><rect x="468.6" y="819.0" width="82.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.6" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (204 samples, 2.29%)</title><rect x="468.6" y="803.0" width="27.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.6" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (204 samples, 2.29%)</title><rect x="468.6" y="787.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.6" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.35%)</title><rect x="468.6" y="771.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.35%)</title><rect x="468.6" y="755.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.35%)</title><rect x="468.6" y="739.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.6" y="750.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.12%)</title><rect x="468.6" y="723.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="471.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.22%)</title><rect x="470.0" y="723.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.0" y="734.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.22%)</title><rect x="470.0" y="707.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="473.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (173 samples, 1.94%)</title><rect x="472.7" y="771.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="782.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (29 samples, 0.33%)</title><rect x="472.7" y="755.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.33%)</title><rect x="472.7" y="739.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.33%)</title><rect x="472.7" y="723.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.15%)</title><rect x="472.7" y="707.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="475.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.18%)</title><rect x="474.4" y="707.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.4" y="718.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.18%)</title><rect x="474.4" y="691.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="477.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (144 samples, 1.62%)</title><rect x="476.5" y="755.0" width="19.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.15%)</title><rect x="476.5" y="739.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.15%)</title><rect x="476.5" y="723.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.15%)</title><rect x="476.5" y="707.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.15%)</title><rect x="476.5" y="691.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.5" y="702.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="476.5" y="675.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="479.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.19%)</title><rect x="478.2" y="739.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.19%)</title><rect x="478.2" y="723.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (17 samples, 0.19%)</title><rect x="478.2" y="707.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.2" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (17 samples, 0.19%)</title><rect x="478.2" y="691.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="481.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.36%)</title><rect x="480.5" y="739.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.36%)</title><rect x="480.5" y="723.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.5" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.36%)</title><rect x="480.5" y="707.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="483.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (48 samples, 0.54%)</title><rect x="484.7" y="739.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.54%)</title><rect x="484.7" y="723.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.54%)</title><rect x="484.7" y="707.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.19%)</title><rect x="484.7" y="691.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="487.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.35%)</title><rect x="487.0" y="691.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.0" y="702.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.35%)</title><rect x="487.0" y="675.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="490.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (34 samples, 0.38%)</title><rect x="491.1" y="739.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.17%)</title><rect x="491.1" y="723.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.17%)</title><rect x="491.1" y="707.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (15 samples, 0.17%)</title><rect x="491.1" y="691.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.1" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (15 samples, 0.17%)</title><rect x="491.1" y="675.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="494.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.21%)</title><rect x="493.1" y="723.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.21%)</title><rect x="493.1" y="707.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (19 samples, 0.21%)</title><rect x="493.1" y="691.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="496.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (177 samples, 1.99%)</title><rect x="495.6" y="803.0" width="23.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.6" y="814.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (34 samples, 0.38%)</title><rect x="495.6" y="787.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="498.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (57 samples, 0.64%)</title><rect x="500.1" y="787.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.1" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (57 samples, 0.64%)</title><rect x="500.1" y="771.0" width="7.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="503.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 0.97%)</title><rect x="507.7" y="787.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 0.97%)</title><rect x="507.7" y="771.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.7" y="782.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.45%)</title><rect x="507.7" y="755.0" width="5.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="510.7" y="766.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.17%)</title><rect x="513.0" y="755.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="516.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="515.0" y="755.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.35%)</title><rect x="515.0" y="739.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.35%)</title><rect x="515.0" y="723.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.0" y="734.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.35%)</title><rect x="515.0" y="707.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="518.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.19%)</title><rect x="519.1" y="803.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.1" y="814.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.19%)</title><rect x="519.1" y="787.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="522.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (29 samples, 0.33%)</title><rect x="521.3" y="803.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.33%)</title><rect x="521.3" y="787.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.33%)</title><rect x="521.3" y="771.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.3" y="782.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.16%)</title><rect x="521.3" y="755.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="524.3" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.17%)</title><rect x="523.2" y="755.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.2" y="766.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.17%)</title><rect x="523.2" y="739.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="526.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (192 samples, 2.16%)</title><rect x="525.2" y="803.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (192 samples, 2.16%)</title><rect x="525.2" y="787.0" width="25.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.2" y="798.0">o..</text>
</g>
<g>
<title>char[] (81 samples, 0.91%)</title><rect x="525.2" y="771.0" width="10.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="528.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.42%)</title><rect x="535.9" y="771.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="538.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (74 samples, 0.83%)</title><rect x="540.8" y="771.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (74 samples, 0.83%)</title><rect x="540.8" y="755.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (74 samples, 0.83%)</title><rect x="540.8" y="739.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.8" y="750.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.83%)</title><rect x="540.8" y="723.0" width="9.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="543.8" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=26115] (460 samples, 5.17%)</title><rect x="550.6" y="883.0" width="61.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="553.6" y="894.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (460 samples, 5.17%)</title><rect x="550.6" y="867.0" width="61.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.6" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (45 samples, 0.51%)</title><rect x="550.6" y="851.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (16 samples, 0.18%)</title><rect x="550.6" y="835.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.6" y="846.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (8 samples, 0.09%)</title><rect x="550.6" y="819.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="553.6" y="830.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (8 samples, 0.09%)</title><rect x="551.7" y="819.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="554.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 0.33%)</title><rect x="552.7" y="835.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 0.33%)</title><rect x="552.7" y="819.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 0.33%)</title><rect x="552.7" y="803.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (29 samples, 0.33%)</title><rect x="552.7" y="787.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (29 samples, 0.33%)</title><rect x="552.7" y="771.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (29 samples, 0.33%)</title><rect x="552.7" y="755.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (29 samples, 0.33%)</title><rect x="552.7" y="739.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (29 samples, 0.33%)</title><rect x="552.7" y="723.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 0.33%)</title><rect x="552.7" y="707.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.7" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 0.33%)</title><rect x="552.7" y="691.0" width="3.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="555.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (415 samples, 4.66%)</title><rect x="556.6" y="851.0" width="55.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.6" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (415 samples, 4.66%)</title><rect x="556.6" y="835.0" width="55.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.6" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (415 samples, 4.66%)</title><rect x="556.6" y="819.0" width="55.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.6" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (151 samples, 1.70%)</title><rect x="556.6" y="803.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (151 samples, 1.70%)</title><rect x="556.6" y="787.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.24%)</title><rect x="556.6" y="771.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.24%)</title><rect x="556.6" y="755.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.24%)</title><rect x="556.6" y="739.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.6" y="750.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.07%)</title><rect x="556.6" y="723.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="559.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.17%)</title><rect x="557.4" y="723.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.4" y="734.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.17%)</title><rect x="557.4" y="707.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="560.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (130 samples, 1.46%)</title><rect x="559.4" y="771.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (25 samples, 0.28%)</title><rect x="559.4" y="755.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.28%)</title><rect x="559.4" y="739.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.28%)</title><rect x="559.4" y="723.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="559.4" y="707.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="562.4" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.19%)</title><rect x="560.4" y="707.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.4" y="718.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.19%)</title><rect x="560.4" y="691.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="563.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (105 samples, 1.18%)</title><rect x="562.7" y="755.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.17%)</title><rect x="562.7" y="739.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.17%)</title><rect x="562.7" y="723.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.17%)</title><rect x="562.7" y="707.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.17%)</title><rect x="562.7" y="691.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.7" y="702.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.17%)</title><rect x="562.7" y="675.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="565.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.11%)</title><rect x="564.7" y="739.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.11%)</title><rect x="564.7" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.get$Lambda (10 samples, 0.11%)</title><rect x="564.7" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.7" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$116 (10 samples, 0.11%)</title><rect x="564.7" y="691.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="567.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.40%)</title><rect x="566.0" y="739.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.40%)</title><rect x="566.0" y="723.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.0" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.40%)</title><rect x="566.0" y="707.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="569.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.26%)</title><rect x="570.8" y="739.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.26%)</title><rect x="570.8" y="723.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.26%)</title><rect x="570.8" y="707.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.8" y="718.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.07%)</title><rect x="570.8" y="691.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="573.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.19%)</title><rect x="571.6" y="691.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.6" y="702.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.19%)</title><rect x="571.6" y="675.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="574.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (21 samples, 0.24%)</title><rect x="573.8" y="739.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="573.8" y="723.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="573.8" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.get$Lambda (7 samples, 0.08%)</title><rect x="573.8" y="691.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.8" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.AsyncServiceImpl$$Lambda$124 (7 samples, 0.08%)</title><rect x="573.8" y="675.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="576.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.16%)</title><rect x="574.7" y="723.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.16%)</title><rect x="574.7" y="707.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (14 samples, 0.16%)</title><rect x="574.7" y="691.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="577.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (120 samples, 1.35%)</title><rect x="576.6" y="803.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.6" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.21%)</title><rect x="576.6" y="787.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="579.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (36 samples, 0.40%)</title><rect x="579.1" y="787.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.1" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (36 samples, 0.40%)</title><rect x="579.1" y="771.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="582.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 0.73%)</title><rect x="583.9" y="787.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 0.73%)</title><rect x="583.9" y="771.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.9" y="782.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.40%)</title><rect x="583.9" y="755.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="586.9" y="766.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.15%)</title><rect x="588.7" y="755.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="591.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.18%)</title><rect x="590.4" y="755.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.18%)</title><rect x="590.4" y="739.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.18%)</title><rect x="590.4" y="723.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.4" y="734.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.18%)</title><rect x="590.4" y="707.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="593.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.16%)</title><rect x="592.5" y="803.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.5" y="814.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.16%)</title><rect x="592.5" y="787.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="595.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.22%)</title><rect x="594.4" y="803.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.22%)</title><rect x="594.4" y="787.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.22%)</title><rect x="594.4" y="771.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.12%)</title><rect x="594.4" y="755.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="597.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.10%)</title><rect x="595.8" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.8" y="766.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="595.8" y="739.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="598.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 1.24%)</title><rect x="597.0" y="803.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 1.24%)</title><rect x="597.0" y="787.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.0" y="798.0"></text>
</g>
<g>
<title>char[] (51 samples, 0.57%)</title><rect x="597.0" y="771.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="600.0" y="782.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.28%)</title><rect x="603.8" y="771.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="606.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.38%)</title><rect x="607.1" y="771.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.38%)</title><rect x="607.1" y="755.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.38%)</title><rect x="607.1" y="739.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.1" y="750.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.38%)</title><rect x="607.1" y="723.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="610.1" y="734.0"></text>
</g>
<g>
<title>[RMI TCP Connection(3)-192.168.1.46 tid=28675] (223 samples, 2.51%)</title><rect x="611.7" y="883.0" width="29.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="614.7" y="894.0">[R..</text>
</g>
<g>
<title>java/lang/Thread.run (223 samples, 2.51%)</title><rect x="611.7" y="867.0" width="29.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.7" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (223 samples, 2.51%)</title><rect x="611.7" y="851.0" width="29.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.7" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (223 samples, 2.51%)</title><rect x="611.7" y="835.0" width="29.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.7" y="846.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (223 samples, 2.51%)</title><rect x="611.7" y="819.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.7" y="830.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (223 samples, 2.51%)</title><rect x="611.7" y="803.0" width="29.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.7" y="814.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$102/52688902.run (223 samples, 2.51%)</title><rect x="611.7" y="787.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.7" y="798.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (223 samples, 2.51%)</title><rect x="611.7" y="771.0" width="29.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.7" y="782.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (223 samples, 2.51%)</title><rect x="611.7" y="755.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.7" y="766.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (223 samples, 2.51%)</title><rect x="611.7" y="739.0" width="29.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.7" y="750.0">su..</text>
</g>
<g>
<title>java.io.DataOutputStream (8 samples, 0.09%)</title><rect x="611.7" y="723.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="614.7" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (214 samples, 2.40%)</title><rect x="612.9" y="723.0" width="28.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.9" y="734.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (182 samples, 2.04%)</title><rect x="612.9" y="707.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.9" y="718.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (182 samples, 2.04%)</title><rect x="612.9" y="691.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.9" y="702.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (182 samples, 2.04%)</title><rect x="612.9" y="675.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.9" y="686.0">s..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (182 samples, 2.04%)</title><rect x="612.9" y="659.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.9" y="670.0">s..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (88 samples, 0.99%)</title><rect x="612.9" y="643.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (88 samples, 0.99%)</title><rect x="612.9" y="627.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (87 samples, 0.98%)</title><rect x="612.9" y="611.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.9" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (87 samples, 0.98%)</title><rect x="612.9" y="595.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.9" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (81 samples, 0.91%)</title><rect x="612.9" y="579.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.9" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (81 samples, 0.91%)</title><rect x="612.9" y="563.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.9" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (81 samples, 0.91%)</title><rect x="612.9" y="547.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.9" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (81 samples, 0.91%)</title><rect x="612.9" y="531.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.9" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (81 samples, 0.91%)</title><rect x="612.9" y="515.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.9" y="526.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (81 samples, 0.91%)</title><rect x="612.9" y="499.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.9" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (81 samples, 0.91%)</title><rect x="612.9" y="483.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.9" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (81 samples, 0.91%)</title><rect x="612.9" y="467.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.9" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (81 samples, 0.91%)</title><rect x="612.9" y="451.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.9" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (81 samples, 0.91%)</title><rect x="612.9" y="435.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.9" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (81 samples, 0.91%)</title><rect x="612.9" y="419.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.9" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (81 samples, 0.91%)</title><rect x="612.9" y="403.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.9" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (81 samples, 0.91%)</title><rect x="612.9" y="387.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.9" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (73 samples, 0.82%)</title><rect x="612.9" y="371.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.9" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (73 samples, 0.82%)</title><rect x="612.9" y="355.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.9" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (73 samples, 0.82%)</title><rect x="612.9" y="339.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.9" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (73 samples, 0.82%)</title><rect x="612.9" y="323.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.9" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (26 samples, 0.29%)</title><rect x="612.9" y="307.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.9" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (22 samples, 0.25%)</title><rect x="612.9" y="291.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.9" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (21 samples, 0.24%)</title><rect x="612.9" y="275.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.9" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (21 samples, 0.24%)</title><rect x="612.9" y="259.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.9" y="270.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (3 samples, 0.03%)</title><rect x="612.9" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="615.9" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (9 samples, 0.10%)</title><rect x="613.3" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.3" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (8 samples, 0.09%)</title><rect x="613.5" y="227.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.09%)</title><rect x="613.5" y="211.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.09%)</title><rect x="613.5" y="195.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="616.5" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (9 samples, 0.10%)</title><rect x="614.5" y="243.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.10%)</title><rect x="614.5" y="227.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="617.5" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.04%)</title><rect x="615.8" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.8" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.02%)</title><rect x="616.1" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="616.4" y="307.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="619.4" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (27 samples, 0.30%)</title><rect x="616.8" y="307.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.8" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.04%)</title><rect x="616.8" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.02%)</title><rect x="616.8" y="275.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.02%)</title><rect x="616.8" y="259.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.02%)</title><rect x="616.8" y="243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.02%)</title><rect x="616.8" y="227.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.02%)</title><rect x="616.8" y="211.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="619.8" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (23 samples, 0.26%)</title><rect x="617.3" y="291.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 0.26%)</title><rect x="617.3" y="275.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (23 samples, 0.26%)</title><rect x="617.3" y="259.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="620.3" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (17 samples, 0.19%)</title><rect x="620.3" y="307.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.18%)</title><rect x="620.3" y="291.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="623.3" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (8 samples, 0.09%)</title><rect x="622.6" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.09%)</title><rect x="622.6" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.09%)</title><rect x="622.6" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (8 samples, 0.09%)</title><rect x="622.6" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.6" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (8 samples, 0.09%)</title><rect x="622.6" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.6" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.09%)</title><rect x="622.6" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.09%)</title><rect x="622.6" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (8 samples, 0.09%)</title><rect x="622.6" y="259.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.6" y="270.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (8 samples, 0.09%)</title><rect x="622.6" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.6" y="254.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (8 samples, 0.09%)</title><rect x="622.6" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.6" y="238.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (5 samples, 0.06%)</title><rect x="622.7" y="211.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="625.7" y="222.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (2 samples, 0.02%)</title><rect x="623.4" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.4" y="222.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (2 samples, 0.02%)</title><rect x="623.4" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="623.4" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.02%)</title><rect x="623.4" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1008315045.invoke (2 samples, 0.02%)</title><rect x="623.4" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="623.4" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.02%)</title><rect x="623.4" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.02%)</title><rect x="623.4" y="99.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.4" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="623.4" y="83.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="626.4" y="94.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (6 samples, 0.07%)</title><rect x="623.7" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.7" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.03%)</title><rect x="623.7" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.7" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (3 samples, 0.03%)</title><rect x="623.7" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.7" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (3 samples, 0.03%)</title><rect x="623.7" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.7" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (3 samples, 0.03%)</title><rect x="623.7" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.7" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (2 samples, 0.02%)</title><rect x="623.8" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.02%)</title><rect x="623.8" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.8" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.02%)</title><rect x="623.8" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.8" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.03%)</title><rect x="624.1" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.1" y="574.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (3 samples, 0.03%)</title><rect x="624.1" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.1" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.1" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.1" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.1" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="624.2" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.2" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (70 samples, 0.79%)</title><rect x="624.6" y="643.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (70 samples, 0.79%)</title><rect x="624.6" y="627.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (70 samples, 0.79%)</title><rect x="624.6" y="611.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (70 samples, 0.79%)</title><rect x="624.6" y="595.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (70 samples, 0.79%)</title><rect x="624.6" y="579.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (69 samples, 0.78%)</title><rect x="624.6" y="563.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (69 samples, 0.78%)</title><rect x="624.6" y="547.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (69 samples, 0.78%)</title><rect x="624.6" y="531.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="624.6" y="515.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="627.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (66 samples, 0.74%)</title><rect x="625.0" y="515.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (62 samples, 0.70%)</title><rect x="625.0" y="499.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (62 samples, 0.70%)</title><rect x="625.0" y="483.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 0.07%)</title><rect x="625.0" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.07%)</title><rect x="625.0" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.07%)</title><rect x="625.0" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.07%)</title><rect x="625.0" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (6 samples, 0.07%)</title><rect x="625.0" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.0" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.07%)</title><rect x="625.0" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.07%)</title><rect x="625.0" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (6 samples, 0.07%)</title><rect x="625.0" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 0.07%)</title><rect x="625.0" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (6 samples, 0.07%)</title><rect x="625.0" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.07%)</title><rect x="625.0" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.04%)</title><rect x="625.0" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.0" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.04%)</title><rect x="625.0" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.04%)</title><rect x="625.0" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.04%)</title><rect x="625.0" y="243.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.04%)</title><rect x="625.0" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.0" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.04%)</title><rect x="625.0" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.03%)</title><rect x="625.0" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.0" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.03%)</title><rect x="625.0" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.0" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.03%)</title><rect x="625.0" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="625.1" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.02%)</title><rect x="625.1" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.1" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="625.1" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="625.1" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.02%)</title><rect x="625.1" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.1" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.02%)</title><rect x="625.1" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.1" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.02%)</title><rect x="625.1" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.1" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="625.1" y="35.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.1" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="625.5" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.5" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="625.5" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="628.5" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (56 samples, 0.63%)</title><rect x="625.8" y="467.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (56 samples, 0.63%)</title><rect x="625.8" y="451.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (56 samples, 0.63%)</title><rect x="625.8" y="435.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (56 samples, 0.63%)</title><rect x="625.8" y="419.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (56 samples, 0.63%)</title><rect x="625.8" y="403.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (2 samples, 0.02%)</title><rect x="625.8" y="387.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="625.8" y="371.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="625.8" y="355.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="628.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (52 samples, 0.58%)</title><rect x="626.0" y="387.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (52 samples, 0.58%)</title><rect x="626.0" y="371.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (18 samples, 0.20%)</title><rect x="626.0" y="355.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.20%)</title><rect x="626.0" y="339.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (17 samples, 0.19%)</title><rect x="626.0" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (17 samples, 0.19%)</title><rect x="626.0" y="307.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (17 samples, 0.19%)</title><rect x="626.0" y="291.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.0" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (16 samples, 0.18%)</title><rect x="626.2" y="275.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (14 samples, 0.16%)</title><rect x="626.2" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.2" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (14 samples, 0.16%)</title><rect x="626.2" y="243.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.2" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (14 samples, 0.16%)</title><rect x="626.2" y="227.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.16%)</title><rect x="626.2" y="211.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.16%)</title><rect x="626.2" y="195.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (14 samples, 0.16%)</title><rect x="626.2" y="179.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (14 samples, 0.16%)</title><rect x="626.2" y="163.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.2" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (3 samples, 0.03%)</title><rect x="626.2" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.03%)</title><rect x="626.2" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.2" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="626.2" y="115.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="629.2" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (9 samples, 0.10%)</title><rect x="626.6" y="147.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.6" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.10%)</title><rect x="626.6" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.6" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (8 samples, 0.09%)</title><rect x="626.6" y="115.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.6" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (8 samples, 0.09%)</title><rect x="626.6" y="99.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.6" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (8 samples, 0.09%)</title><rect x="626.6" y="83.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.6" y="94.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.03%)</title><rect x="626.7" y="67.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="629.7" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.04%)</title><rect x="627.1" y="67.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="630.1" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="628.0" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.0" y="270.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="628.0" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="631.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (20 samples, 0.22%)</title><rect x="628.4" y="355.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (17 samples, 0.19%)</title><rect x="628.4" y="339.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (17 samples, 0.19%)</title><rect x="628.4" y="323.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.4" y="334.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.07%)</title><rect x="628.4" y="307.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="629.2" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="632.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.10%)</title><rect x="629.5" y="307.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="632.5" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.03%)</title><rect x="630.7" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.03%)</title><rect x="630.7" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="630.8" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.02%)</title><rect x="631.1" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.02%)</title><rect x="631.1" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.02%)</title><rect x="631.1" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.1" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (12 samples, 0.13%)</title><rect x="631.4" y="355.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.4" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (12 samples, 0.13%)</title><rect x="631.4" y="339.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="634.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.02%)</title><rect x="632.9" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (2 samples, 0.02%)</title><rect x="632.9" y="371.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="635.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.04%)</title><rect x="633.2" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.2" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.04%)</title><rect x="633.2" y="483.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="636.2" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (14 samples, 0.16%)</title><rect x="633.9" y="643.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (13 samples, 0.15%)</title><rect x="634.0" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.0" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (13 samples, 0.15%)</title><rect x="634.0" y="611.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (13 samples, 0.15%)</title><rect x="634.0" y="595.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.03%)</title><rect x="634.0" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.02%)</title><rect x="634.1" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.02%)</title><rect x="634.1" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.1" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (10 samples, 0.11%)</title><rect x="634.4" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.03%)</title><rect x="634.4" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.03%)</title><rect x="634.4" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (7 samples, 0.08%)</title><rect x="634.8" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.02%)</title><rect x="634.9" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.02%)</title><rect x="634.9" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (4 samples, 0.04%)</title><rect x="635.2" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.2" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.04%)</title><rect x="635.2" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.04%)</title><rect x="635.2" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (3 samples, 0.03%)</title><rect x="635.3" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.3" y="510.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (3 samples, 0.03%)</title><rect x="635.3" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (3 samples, 0.03%)</title><rect x="635.3" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.3" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (3 samples, 0.03%)</title><rect x="635.3" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.02%)</title><rect x="635.5" y="435.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.02%)</title><rect x="635.5" y="419.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.02%)</title><rect x="635.5" y="403.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.02%)</title><rect x="635.5" y="387.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.5" y="398.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (10 samples, 0.11%)</title><rect x="635.7" y="643.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.7" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (10 samples, 0.11%)</title><rect x="635.7" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.7" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (10 samples, 0.11%)</title><rect x="635.7" y="611.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.7" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (9 samples, 0.10%)</title><rect x="635.9" y="595.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.9" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (9 samples, 0.10%)</title><rect x="635.9" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (9 samples, 0.10%)</title><rect x="635.9" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (7 samples, 0.08%)</title><rect x="636.0" y="547.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="636.0" y="531.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="639.0" y="542.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.02%)</title><rect x="636.5" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="639.5" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (32 samples, 0.36%)</title><rect x="637.1" y="707.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.1" y="718.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (3 samples, 0.03%)</title><rect x="637.1" y="691.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="640.1" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (29 samples, 0.33%)</title><rect x="637.5" y="691.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.5" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (29 samples, 0.33%)</title><rect x="637.5" y="675.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.5" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.02%)</title><rect x="637.5" y="659.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="640.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (27 samples, 0.30%)</title><rect x="637.7" y="659.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.7" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (2 samples, 0.02%)</title><rect x="637.7" y="643.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="640.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (22 samples, 0.25%)</title><rect x="638.0" y="643.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.0" y="654.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="638.0" y="627.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="641.0" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="638.5" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="641.5" y="638.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.08%)</title><rect x="639.0" y="627.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="642.0" y="638.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.03%)</title><rect x="640.0" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="643.0" y="638.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (4 samples, 0.04%)</title><rect x="640.4" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.4" y="638.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="640.4" y="611.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="643.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (3 samples, 0.03%)</title><rect x="640.9" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.9" y="654.0"></text>
</g>
<g>
<title>[RMI TCP Connection(4)-192.168.1.46 tid=29959] (2 samples, 0.02%)</title><rect x="641.3" y="883.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="644.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.02%)</title><rect x="641.3" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.02%)</title><rect x="641.3" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.02%)</title><rect x="641.3" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.3" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (2 samples, 0.02%)</title><rect x="641.3" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.3" y="830.0"></text>
</g>
<g>
<title>[worker tid=43779] (535 samples, 6.01%)</title><rect x="641.6" y="883.0" width="70.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="644.6" y="894.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (535 samples, 6.01%)</title><rect x="641.6" y="867.0" width="70.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.6" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (535 samples, 6.01%)</title><rect x="641.6" y="851.0" width="70.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.6" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (535 samples, 6.01%)</title><rect x="641.6" y="835.0" width="70.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.6" y="846.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.18%)</title><rect x="641.6" y="819.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.18%)</title><rect x="641.6" y="803.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.17%)</title><rect x="641.6" y="787.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.17%)</title><rect x="641.6" y="771.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.6" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.17%)</title><rect x="641.6" y="755.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="644.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (519 samples, 5.83%)</title><rect x="643.7" y="819.0" width="68.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.7" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (519 samples, 5.83%)</title><rect x="643.7" y="803.0" width="68.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.7" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (227 samples, 2.55%)</title><rect x="643.7" y="787.0" width="30.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.7" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (227 samples, 2.55%)</title><rect x="643.7" y="771.0" width="30.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.7" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (115 samples, 1.29%)</title><rect x="643.7" y="755.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (115 samples, 1.29%)</title><rect x="643.7" y="739.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.7" y="750.0"></text>
</g>
<g>
<title>byte[] (115 samples, 1.29%)</title><rect x="643.7" y="723.0" width="15.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="646.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 1.26%)</title><rect x="658.9" y="755.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.9" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (50 samples, 0.56%)</title><rect x="658.9" y="739.0" width="6.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="661.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 0.70%)</title><rect x="665.6" y="739.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (62 samples, 0.70%)</title><rect x="665.6" y="723.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (62 samples, 0.70%)</title><rect x="665.6" y="707.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.70%)</title><rect x="665.6" y="691.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.70%)</title><rect x="665.6" y="675.0" width="8.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="668.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (292 samples, 3.28%)</title><rect x="673.8" y="787.0" width="38.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.8" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (292 samples, 3.28%)</title><rect x="673.8" y="771.0" width="38.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.8" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (292 samples, 3.28%)</title><rect x="673.8" y="755.0" width="38.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.8" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (65 samples, 0.73%)</title><rect x="673.8" y="739.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (65 samples, 0.73%)</title><rect x="673.8" y="723.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.8" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (65 samples, 0.73%)</title><rect x="673.8" y="707.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="676.8" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (34 samples, 0.38%)</title><rect x="682.4" y="739.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="685.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (117 samples, 1.31%)</title><rect x="686.9" y="739.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.9" y="750.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.43%)</title><rect x="686.9" y="723.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="689.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.56%)</title><rect x="691.9" y="723.0" width="6.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="694.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.33%)</title><rect x="698.6" y="723.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="701.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (76 samples, 0.85%)</title><rect x="702.4" y="739.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (35 samples, 0.39%)</title><rect x="702.4" y="723.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.4" y="734.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.39%)</title><rect x="702.4" y="707.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (41 samples, 0.46%)</title><rect x="707.0" y="723.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.0" y="734.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.46%)</title><rect x="707.0" y="707.0" width="5.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="710.0" y="718.0"></text>
</g>
<g>
<title>[worker tid=44291] (512 samples, 5.75%)</title><rect x="712.5" y="883.0" width="67.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="715.5" y="894.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (512 samples, 5.75%)</title><rect x="712.5" y="867.0" width="67.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.5" y="878.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (512 samples, 5.75%)</title><rect x="712.5" y="851.0" width="67.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.5" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (512 samples, 5.75%)</title><rect x="712.5" y="835.0" width="67.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.5" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26 samples, 0.29%)</title><rect x="712.5" y="819.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (26 samples, 0.29%)</title><rect x="712.5" y="803.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.26%)</title><rect x="712.5" y="787.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.26%)</title><rect x="712.5" y="771.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.5" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23 samples, 0.26%)</title><rect x="712.5" y="755.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="715.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="715.5" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="715.5" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="715.5" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="715.5" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.5" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="715.5" y="723.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="718.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (486 samples, 5.46%)</title><rect x="715.9" y="819.0" width="64.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.9" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (486 samples, 5.46%)</title><rect x="715.9" y="803.0" width="64.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.9" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (209 samples, 2.35%)</title><rect x="715.9" y="787.0" width="27.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.9" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (209 samples, 2.35%)</title><rect x="715.9" y="771.0" width="27.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.9" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (112 samples, 1.26%)</title><rect x="715.9" y="755.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (112 samples, 1.26%)</title><rect x="715.9" y="739.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.9" y="750.0"></text>
</g>
<g>
<title>byte[] (112 samples, 1.26%)</title><rect x="715.9" y="723.0" width="14.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="718.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (97 samples, 1.09%)</title><rect x="730.8" y="755.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.8" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (46 samples, 0.52%)</title><rect x="730.8" y="739.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="733.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (51 samples, 0.57%)</title><rect x="736.9" y="739.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (51 samples, 0.57%)</title><rect x="736.9" y="723.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (51 samples, 0.57%)</title><rect x="736.9" y="707.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (51 samples, 0.57%)</title><rect x="736.9" y="691.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.9" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (51 samples, 0.57%)</title><rect x="736.9" y="675.0" width="6.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="739.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (277 samples, 3.11%)</title><rect x="743.6" y="787.0" width="36.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.6" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (277 samples, 3.11%)</title><rect x="743.6" y="771.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.6" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (277 samples, 3.11%)</title><rect x="743.6" y="755.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.6" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 0.55%)</title><rect x="743.6" y="739.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 0.55%)</title><rect x="743.6" y="723.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.55%)</title><rect x="743.6" y="707.0" width="6.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="746.6" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (33 samples, 0.37%)</title><rect x="750.1" y="739.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="753.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (135 samples, 1.52%)</title><rect x="754.5" y="739.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.5" y="750.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.56%)</title><rect x="754.5" y="723.0" width="6.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="757.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.57%)</title><rect x="761.1" y="723.0" width="6.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="764.1" y="734.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.38%)</title><rect x="767.9" y="723.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="770.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (60 samples, 0.67%)</title><rect x="772.4" y="739.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (29 samples, 0.33%)</title><rect x="772.4" y="723.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.4" y="734.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.33%)</title><rect x="772.4" y="707.0" width="3.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="775.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (31 samples, 0.35%)</title><rect x="776.3" y="723.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.3" y="734.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.35%)</title><rect x="776.3" y="707.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="779.3" y="718.0"></text>
</g>
<g>
<title>[worker tid=44803] (503 samples, 5.65%)</title><rect x="780.4" y="883.0" width="66.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="783.4" y="894.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (503 samples, 5.65%)</title><rect x="780.4" y="867.0" width="66.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.4" y="878.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (503 samples, 5.65%)</title><rect x="780.4" y="851.0" width="66.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.4" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (503 samples, 5.65%)</title><rect x="780.4" y="835.0" width="66.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.4" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.17%)</title><rect x="780.4" y="819.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.17%)</title><rect x="780.4" y="803.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.15%)</title><rect x="780.4" y="787.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (13 samples, 0.15%)</title><rect x="780.4" y="771.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.4" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13 samples, 0.15%)</title><rect x="780.4" y="755.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="783.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.02%)</title><rect x="782.1" y="787.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.02%)</title><rect x="782.1" y="771.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.02%)</title><rect x="782.1" y="755.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title><rect x="782.1" y="739.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.1" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.02%)</title><rect x="782.1" y="723.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="785.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (488 samples, 5.48%)</title><rect x="782.3" y="819.0" width="64.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.3" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (488 samples, 5.48%)</title><rect x="782.3" y="803.0" width="64.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.3" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (218 samples, 2.45%)</title><rect x="782.3" y="787.0" width="28.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.3" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (218 samples, 2.45%)</title><rect x="782.3" y="771.0" width="28.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (105 samples, 1.18%)</title><rect x="782.3" y="755.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (105 samples, 1.18%)</title><rect x="782.3" y="739.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.3" y="750.0"></text>
</g>
<g>
<title>byte[] (105 samples, 1.18%)</title><rect x="782.3" y="723.0" width="14.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="785.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 1.27%)</title><rect x="796.3" y="755.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.3" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (55 samples, 0.62%)</title><rect x="796.3" y="739.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="799.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 0.65%)</title><rect x="803.6" y="739.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (58 samples, 0.65%)</title><rect x="803.6" y="723.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (58 samples, 0.65%)</title><rect x="803.6" y="707.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.65%)</title><rect x="803.6" y="691.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.65%)</title><rect x="803.6" y="675.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="806.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (270 samples, 3.03%)</title><rect x="811.2" y="787.0" width="35.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.2" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (270 samples, 3.03%)</title><rect x="811.2" y="771.0" width="35.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.2" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (270 samples, 3.03%)</title><rect x="811.2" y="755.0" width="35.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.2" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.70%)</title><rect x="811.2" y="739.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.70%)</title><rect x="811.2" y="723.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.2" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.70%)</title><rect x="811.2" y="707.0" width="8.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="814.2" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (34 samples, 0.38%)</title><rect x="819.5" y="739.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="822.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (100 samples, 1.12%)</title><rect x="824.0" y="739.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.0" y="750.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.44%)</title><rect x="824.0" y="723.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="827.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 0.45%)</title><rect x="829.1" y="723.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="832.1" y="734.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.24%)</title><rect x="834.4" y="723.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="837.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (74 samples, 0.83%)</title><rect x="837.2" y="739.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (36 samples, 0.40%)</title><rect x="837.2" y="723.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.2" y="734.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.40%)</title><rect x="837.2" y="707.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="840.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (38 samples, 0.43%)</title><rect x="842.0" y="723.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.0" y="734.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.43%)</title><rect x="842.0" y="707.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="845.0" y="718.0"></text>
</g>
<g>
<title>[worker tid=83459] (517 samples, 5.81%)</title><rect x="847.0" y="883.0" width="68.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="850.0" y="894.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (517 samples, 5.81%)</title><rect x="847.0" y="867.0" width="68.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.0" y="878.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (517 samples, 5.81%)</title><rect x="847.0" y="851.0" width="68.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.0" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (517 samples, 5.81%)</title><rect x="847.0" y="835.0" width="68.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.0" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (29 samples, 0.33%)</title><rect x="847.0" y="819.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (29 samples, 0.33%)</title><rect x="847.0" y="803.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (27 samples, 0.30%)</title><rect x="847.0" y="787.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (27 samples, 0.30%)</title><rect x="847.0" y="771.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.0" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (27 samples, 0.30%)</title><rect x="847.0" y="755.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="850.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.02%)</title><rect x="850.6" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.02%)</title><rect x="850.6" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.02%)</title><rect x="850.6" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title><rect x="850.6" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.02%)</title><rect x="850.6" y="723.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="853.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (488 samples, 5.48%)</title><rect x="850.9" y="819.0" width="64.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.9" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (488 samples, 5.48%)</title><rect x="850.9" y="803.0" width="64.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.9" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (219 samples, 2.46%)</title><rect x="850.9" y="787.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.9" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (219 samples, 2.46%)</title><rect x="850.9" y="771.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.9" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (116 samples, 1.30%)</title><rect x="850.9" y="755.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (116 samples, 1.30%)</title><rect x="850.9" y="739.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.9" y="750.0"></text>
</g>
<g>
<title>byte[] (116 samples, 1.30%)</title><rect x="850.9" y="723.0" width="15.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="853.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 1.16%)</title><rect x="866.3" y="755.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.3" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (43 samples, 0.48%)</title><rect x="866.3" y="739.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="869.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (60 samples, 0.67%)</title><rect x="872.0" y="739.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (60 samples, 0.67%)</title><rect x="872.0" y="723.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (60 samples, 0.67%)</title><rect x="872.0" y="707.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 0.67%)</title><rect x="872.0" y="691.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.0" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.67%)</title><rect x="872.0" y="675.0" width="7.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="875.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (269 samples, 3.02%)</title><rect x="879.9" y="787.0" width="35.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.9" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (269 samples, 3.02%)</title><rect x="879.9" y="771.0" width="35.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.9" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (269 samples, 3.02%)</title><rect x="879.9" y="755.0" width="35.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.9" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (66 samples, 0.74%)</title><rect x="879.9" y="739.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (66 samples, 0.74%)</title><rect x="879.9" y="723.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.9" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (66 samples, 0.74%)</title><rect x="879.9" y="707.0" width="8.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="882.9" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (36 samples, 0.40%)</title><rect x="888.7" y="739.0" width="4.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="891.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (114 samples, 1.28%)</title><rect x="893.4" y="739.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.4" y="750.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.58%)</title><rect x="893.4" y="723.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="896.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.39%)</title><rect x="900.3" y="723.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="903.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.30%)</title><rect x="905.0" y="723.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="908.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (53 samples, 0.60%)</title><rect x="908.6" y="739.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (21 samples, 0.24%)</title><rect x="908.6" y="723.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.6" y="734.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.24%)</title><rect x="908.6" y="707.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="911.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (32 samples, 0.36%)</title><rect x="911.3" y="723.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.3" y="734.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.36%)</title><rect x="911.3" y="707.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="914.3" y="718.0"></text>
</g>
<g>
<title>[worker tid=83971] (535 samples, 6.01%)</title><rect x="915.6" y="883.0" width="70.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="918.6" y="894.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (535 samples, 6.01%)</title><rect x="915.6" y="867.0" width="70.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.6" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (535 samples, 6.01%)</title><rect x="915.6" y="851.0" width="70.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.6" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (535 samples, 6.01%)</title><rect x="915.6" y="835.0" width="70.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.6" y="846.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.22%)</title><rect x="915.6" y="819.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (20 samples, 0.22%)</title><rect x="915.6" y="803.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.20%)</title><rect x="915.6" y="787.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (18 samples, 0.20%)</title><rect x="915.6" y="771.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.6" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (18 samples, 0.20%)</title><rect x="915.6" y="755.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.02%)</title><rect x="918.0" y="787.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.02%)</title><rect x="918.0" y="771.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.02%)</title><rect x="918.0" y="755.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title><rect x="918.0" y="739.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.0" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.02%)</title><rect x="918.0" y="723.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="921.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (515 samples, 5.79%)</title><rect x="918.2" y="819.0" width="68.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.2" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (515 samples, 5.79%)</title><rect x="918.2" y="803.0" width="68.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.2" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (215 samples, 2.42%)</title><rect x="918.2" y="787.0" width="28.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.2" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (215 samples, 2.42%)</title><rect x="918.2" y="771.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.2" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (90 samples, 1.01%)</title><rect x="918.2" y="755.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (90 samples, 1.01%)</title><rect x="918.2" y="739.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.2" y="750.0"></text>
</g>
<g>
<title>byte[] (90 samples, 1.01%)</title><rect x="918.2" y="723.0" width="12.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="921.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (125 samples, 1.40%)</title><rect x="930.2" y="755.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.2" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (65 samples, 0.73%)</title><rect x="930.2" y="739.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="933.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (60 samples, 0.67%)</title><rect x="938.8" y="739.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (60 samples, 0.67%)</title><rect x="938.8" y="723.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (60 samples, 0.67%)</title><rect x="938.8" y="707.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="941.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 0.67%)</title><rect x="938.8" y="691.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.67%)</title><rect x="938.8" y="675.0" width="7.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="941.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (300 samples, 3.37%)</title><rect x="946.7" y="787.0" width="39.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.7" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (300 samples, 3.37%)</title><rect x="946.7" y="771.0" width="39.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.7" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (300 samples, 3.37%)</title><rect x="946.7" y="755.0" width="39.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.7" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (70 samples, 0.79%)</title><rect x="946.7" y="739.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (70 samples, 0.79%)</title><rect x="946.7" y="723.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.7" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.79%)</title><rect x="946.7" y="707.0" width="9.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="949.7" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (40 samples, 0.45%)</title><rect x="956.0" y="739.0" width="5.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="959.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (116 samples, 1.30%)</title><rect x="961.3" y="739.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.3" y="750.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.45%)</title><rect x="961.3" y="723.0" width="5.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="964.3" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.55%)</title><rect x="966.6" y="723.0" width="6.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="969.6" y="734.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.30%)</title><rect x="973.1" y="723.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="976.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (74 samples, 0.83%)</title><rect x="976.7" y="739.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (41 samples, 0.46%)</title><rect x="976.7" y="723.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.7" y="734.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.46%)</title><rect x="976.7" y="707.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="979.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (33 samples, 0.37%)</title><rect x="982.1" y="723.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.1" y="734.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.37%)</title><rect x="982.1" y="707.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="985.1" y="718.0"></text>
</g>
<g>
<title>[worker tid=84483] (521 samples, 5.85%)</title><rect x="986.5" y="883.0" width="69.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="989.5" y="894.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (521 samples, 5.85%)</title><rect x="986.5" y="867.0" width="69.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.5" y="878.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (521 samples, 5.85%)</title><rect x="986.5" y="851.0" width="69.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="989.5" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (521 samples, 5.85%)</title><rect x="986.5" y="835.0" width="69.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.5" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.27%)</title><rect x="986.5" y="819.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24 samples, 0.27%)</title><rect x="986.5" y="803.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.19%)</title><rect x="986.5" y="787.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (17 samples, 0.19%)</title><rect x="986.5" y="771.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.5" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (17 samples, 0.19%)</title><rect x="986.5" y="755.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="989.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.08%)</title><rect x="988.8" y="787.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.08%)</title><rect x="988.8" y="771.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.08%)</title><rect x="988.8" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (7 samples, 0.08%)</title><rect x="988.8" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.8" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.08%)</title><rect x="988.8" y="723.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="991.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (497 samples, 5.58%)</title><rect x="989.7" y="819.0" width="65.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.7" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (497 samples, 5.58%)</title><rect x="989.7" y="803.0" width="65.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.7" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (203 samples, 2.28%)</title><rect x="989.7" y="787.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (203 samples, 2.28%)</title><rect x="989.7" y="771.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.7" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (112 samples, 1.26%)</title><rect x="989.7" y="755.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (112 samples, 1.26%)</title><rect x="989.7" y="739.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.7" y="750.0"></text>
</g>
<g>
<title>byte[] (112 samples, 1.26%)</title><rect x="989.7" y="723.0" width="14.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="992.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 1.02%)</title><rect x="1004.5" y="755.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.5" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.51%)</title><rect x="1004.5" y="739.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1007.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 0.52%)</title><rect x="1010.5" y="739.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (46 samples, 0.52%)</title><rect x="1010.5" y="723.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (46 samples, 0.52%)</title><rect x="1010.5" y="707.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.52%)</title><rect x="1010.5" y="691.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.5" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.52%)</title><rect x="1010.5" y="675.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1013.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (294 samples, 3.30%)</title><rect x="1016.6" y="787.0" width="39.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.6" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (294 samples, 3.30%)</title><rect x="1016.6" y="771.0" width="39.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.6" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (294 samples, 3.30%)</title><rect x="1016.6" y="755.0" width="39.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.6" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.78%)</title><rect x="1016.6" y="739.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.78%)</title><rect x="1016.6" y="723.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (69 samples, 0.78%)</title><rect x="1016.6" y="707.0" width="9.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1019.6" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (40 samples, 0.45%)</title><rect x="1025.7" y="739.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1028.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (122 samples, 1.37%)</title><rect x="1031.0" y="739.0" width="16.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1034.0" y="750.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.46%)</title><rect x="1031.0" y="723.0" width="5.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1034.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (39 samples, 0.44%)</title><rect x="1036.5" y="723.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1039.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.47%)</title><rect x="1041.7" y="723.0" width="5.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1044.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (63 samples, 0.71%)</title><rect x="1047.2" y="739.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (33 samples, 0.37%)</title><rect x="1047.2" y="723.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.2" y="734.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.37%)</title><rect x="1047.2" y="707.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1050.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (30 samples, 0.34%)</title><rect x="1051.6" y="723.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.6" y="734.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.34%)</title><rect x="1051.6" y="707.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1054.6" y="718.0"></text>
</g>
<g>
<title>[worker tid=86019] (510 samples, 5.73%)</title><rect x="1055.6" y="883.0" width="67.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1058.6" y="894.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (510 samples, 5.73%)</title><rect x="1055.6" y="867.0" width="67.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.6" y="878.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (510 samples, 5.73%)</title><rect x="1055.6" y="851.0" width="67.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.6" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (510 samples, 5.73%)</title><rect x="1055.6" y="835.0" width="67.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.6" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26 samples, 0.29%)</title><rect x="1055.6" y="819.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (26 samples, 0.29%)</title><rect x="1055.6" y="803.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.26%)</title><rect x="1055.6" y="787.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.26%)</title><rect x="1055.6" y="771.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.6" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23 samples, 0.26%)</title><rect x="1055.6" y="755.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1058.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="1058.6" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1061.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="1058.6" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1058.6" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="1058.6" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1061.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="1058.6" y="723.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1061.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (484 samples, 5.44%)</title><rect x="1059.0" y="819.0" width="64.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.0" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (484 samples, 5.44%)</title><rect x="1059.0" y="803.0" width="64.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.0" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (204 samples, 2.29%)</title><rect x="1059.0" y="787.0" width="27.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.0" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (204 samples, 2.29%)</title><rect x="1059.0" y="771.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (99 samples, 1.11%)</title><rect x="1059.0" y="755.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1062.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (99 samples, 1.11%)</title><rect x="1059.0" y="739.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.0" y="750.0"></text>
</g>
<g>
<title>byte[] (99 samples, 1.11%)</title><rect x="1059.0" y="723.0" width="13.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1062.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 1.18%)</title><rect x="1072.1" y="755.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.1" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (41 samples, 0.46%)</title><rect x="1072.1" y="739.0" width="5.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1075.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 0.72%)</title><rect x="1077.6" y="739.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (64 samples, 0.72%)</title><rect x="1077.6" y="723.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (64 samples, 0.72%)</title><rect x="1077.6" y="707.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.72%)</title><rect x="1077.6" y="691.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.72%)</title><rect x="1077.6" y="675.0" width="8.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1080.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (280 samples, 3.15%)</title><rect x="1086.1" y="787.0" width="37.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.1" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (280 samples, 3.15%)</title><rect x="1086.1" y="771.0" width="37.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.1" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (280 samples, 3.15%)</title><rect x="1086.1" y="755.0" width="37.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.1" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 0.80%)</title><rect x="1086.1" y="739.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 0.80%)</title><rect x="1086.1" y="723.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.1" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.80%)</title><rect x="1086.1" y="707.0" width="9.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1089.1" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (32 samples, 0.36%)</title><rect x="1095.5" y="739.0" width="4.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1098.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (113 samples, 1.27%)</title><rect x="1099.7" y="739.0" width="15.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.7" y="750.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.54%)</title><rect x="1099.7" y="723.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1102.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (36 samples, 0.40%)</title><rect x="1106.1" y="723.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1109.1" y="734.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.33%)</title><rect x="1110.9" y="723.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1113.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (64 samples, 0.72%)</title><rect x="1114.7" y="739.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (24 samples, 0.27%)</title><rect x="1114.7" y="723.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.7" y="734.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.27%)</title><rect x="1114.7" y="707.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1117.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (40 samples, 0.45%)</title><rect x="1117.9" y="723.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.9" y="734.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.45%)</title><rect x="1117.9" y="707.0" width="5.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1120.9" y="718.0"></text>
</g>
<g>
<title>[worker tid=86787] (504 samples, 5.66%)</title><rect x="1123.2" y="883.0" width="66.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1126.2" y="894.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (504 samples, 5.66%)</title><rect x="1123.2" y="867.0" width="66.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.2" y="878.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (504 samples, 5.66%)</title><rect x="1123.2" y="851.0" width="66.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.2" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (504 samples, 5.66%)</title><rect x="1123.2" y="835.0" width="66.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.2" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 0.24%)</title><rect x="1123.2" y="819.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (21 samples, 0.24%)</title><rect x="1123.2" y="803.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.20%)</title><rect x="1123.2" y="787.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (18 samples, 0.20%)</title><rect x="1123.2" y="771.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.2" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (18 samples, 0.20%)</title><rect x="1123.2" y="755.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1126.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="1125.6" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="1125.6" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1125.6" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="1125.6" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="1125.6" y="723.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1128.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (483 samples, 5.43%)</title><rect x="1126.0" y="819.0" width="64.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.0" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (483 samples, 5.43%)</title><rect x="1126.0" y="803.0" width="64.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.0" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (209 samples, 2.35%)</title><rect x="1126.0" y="787.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.0" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (209 samples, 2.35%)</title><rect x="1126.0" y="771.0" width="27.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (111 samples, 1.25%)</title><rect x="1126.0" y="755.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (111 samples, 1.25%)</title><rect x="1126.0" y="739.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.0" y="750.0"></text>
</g>
<g>
<title>byte[] (111 samples, 1.25%)</title><rect x="1126.0" y="723.0" width="14.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1129.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 1.10%)</title><rect x="1140.7" y="755.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.7" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.51%)</title><rect x="1140.7" y="739.0" width="5.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1143.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (53 samples, 0.60%)</title><rect x="1146.6" y="739.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (53 samples, 0.60%)</title><rect x="1146.6" y="723.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (53 samples, 0.60%)</title><rect x="1146.6" y="707.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.60%)</title><rect x="1146.6" y="691.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.60%)</title><rect x="1146.6" y="675.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1149.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$116/640279467.act (274 samples, 3.08%)</title><rect x="1153.7" y="787.0" width="36.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.7" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (274 samples, 3.08%)</title><rect x="1153.7" y="771.0" width="36.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.7" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (274 samples, 3.08%)</title><rect x="1153.7" y="755.0" width="36.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.7" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.72%)</title><rect x="1153.7" y="739.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.72%)</title><rect x="1153.7" y="723.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.7" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.72%)</title><rect x="1153.7" y="707.0" width="8.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1156.7" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (41 samples, 0.46%)</title><rect x="1162.2" y="739.0" width="5.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1165.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (105 samples, 1.18%)</title><rect x="1167.6" y="739.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.6" y="750.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.38%)</title><rect x="1167.6" y="723.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 0.49%)</title><rect x="1172.1" y="723.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.30%)</title><rect x="1177.9" y="723.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1180.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (64 samples, 0.72%)</title><rect x="1181.5" y="739.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (34 samples, 0.38%)</title><rect x="1181.5" y="723.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.5" y="734.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.38%)</title><rect x="1181.5" y="707.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1184.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (30 samples, 0.34%)</title><rect x="1186.0" y="723.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.0" y="734.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.34%)</title><rect x="1186.0" y="707.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1189.0" y="718.0"></text>
</g>
</g>
</svg>
