<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (26,571 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=23571] (80 samples, 0.30%)</title><rect x="10.0" y="339.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (80 samples, 0.30%)</title><rect x="10.0" y="323.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (80 samples, 0.30%)</title><rect x="10.0" y="307.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72 samples, 0.27%)</title><rect x="10.0" y="291.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (72 samples, 0.27%)</title><rect x="10.0" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (72 samples, 0.27%)</title><rect x="10.0" y="259.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (72 samples, 0.27%)</title><rect x="10.0" y="243.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (72 samples, 0.27%)</title><rect x="10.0" y="227.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (72 samples, 0.27%)</title><rect x="10.0" y="211.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (72 samples, 0.27%)</title><rect x="10.0" y="195.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.27%)</title><rect x="10.0" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (72 samples, 0.27%)</title><rect x="10.0" y="163.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (59 samples, 0.22%)</title><rect x="10.0" y="147.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (59 samples, 0.22%)</title><rect x="10.0" y="131.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (59 samples, 0.22%)</title><rect x="10.0" y="115.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.22%)</title><rect x="10.0" y="99.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.22%)</title><rect x="10.0" y="83.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.22%)</title><rect x="10.0" y="67.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.22%)</title><rect x="10.0" y="51.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.22%)</title><rect x="10.0" y="35.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.0" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.05%)</title><rect x="12.6" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.05%)</title><rect x="12.6" y="131.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.05%)</title><rect x="12.6" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.05%)</title><rect x="12.6" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.05%)</title><rect x="12.6" y="83.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.05%)</title><rect x="12.6" y="67.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (13 samples, 0.05%)</title><rect x="12.6" y="51.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="15.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (8 samples, 0.03%)</title><rect x="13.2" y="291.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="16.2" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24067] (259 samples, 0.97%)</title><rect x="13.6" y="339.0" width="11.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="16.6" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (259 samples, 0.97%)</title><rect x="13.6" y="323.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (259 samples, 0.97%)</title><rect x="13.6" y="307.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (230 samples, 0.87%)</title><rect x="13.6" y="291.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (230 samples, 0.87%)</title><rect x="13.6" y="275.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (230 samples, 0.87%)</title><rect x="13.6" y="259.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (230 samples, 0.87%)</title><rect x="13.6" y="243.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (230 samples, 0.87%)</title><rect x="13.6" y="227.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (230 samples, 0.87%)</title><rect x="13.6" y="211.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (230 samples, 0.87%)</title><rect x="13.6" y="195.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (230 samples, 0.87%)</title><rect x="13.6" y="179.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (230 samples, 0.87%)</title><rect x="13.6" y="163.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (197 samples, 0.74%)</title><rect x="13.6" y="147.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (197 samples, 0.74%)</title><rect x="13.6" y="131.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (197 samples, 0.74%)</title><rect x="13.6" y="115.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (197 samples, 0.74%)</title><rect x="13.6" y="99.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (197 samples, 0.74%)</title><rect x="13.6" y="83.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (197 samples, 0.74%)</title><rect x="13.6" y="67.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (197 samples, 0.74%)</title><rect x="13.6" y="51.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (197 samples, 0.74%)</title><rect x="13.6" y="35.0" width="8.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="16.6" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (33 samples, 0.12%)</title><rect x="22.3" y="147.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (33 samples, 0.12%)</title><rect x="22.3" y="131.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (33 samples, 0.12%)</title><rect x="22.3" y="115.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (33 samples, 0.12%)</title><rect x="22.3" y="99.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.12%)</title><rect x="22.3" y="83.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.12%)</title><rect x="22.3" y="67.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (33 samples, 0.12%)</title><rect x="22.3" y="51.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="25.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (29 samples, 0.11%)</title><rect x="23.8" y="291.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="26.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24835] (229 samples, 0.86%)</title><rect x="25.1" y="339.0" width="10.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="28.1" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (229 samples, 0.86%)</title><rect x="25.1" y="323.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (229 samples, 0.86%)</title><rect x="25.1" y="307.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 0.76%)</title><rect x="25.1" y="291.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (202 samples, 0.76%)</title><rect x="25.1" y="275.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (202 samples, 0.76%)</title><rect x="25.1" y="259.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (202 samples, 0.76%)</title><rect x="25.1" y="243.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (202 samples, 0.76%)</title><rect x="25.1" y="227.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (202 samples, 0.76%)</title><rect x="25.1" y="211.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (202 samples, 0.76%)</title><rect x="25.1" y="195.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (202 samples, 0.76%)</title><rect x="25.1" y="179.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (202 samples, 0.76%)</title><rect x="25.1" y="163.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (170 samples, 0.64%)</title><rect x="25.1" y="147.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (170 samples, 0.64%)</title><rect x="25.1" y="131.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (170 samples, 0.64%)</title><rect x="25.1" y="115.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (170 samples, 0.64%)</title><rect x="25.1" y="99.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (170 samples, 0.64%)</title><rect x="25.1" y="83.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (170 samples, 0.64%)</title><rect x="25.1" y="67.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (170 samples, 0.64%)</title><rect x="25.1" y="51.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (170 samples, 0.64%)</title><rect x="25.1" y="35.0" width="7.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="28.1" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.12%)</title><rect x="32.6" y="147.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.12%)</title><rect x="32.6" y="131.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.12%)</title><rect x="32.6" y="115.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.12%)</title><rect x="32.6" y="99.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.12%)</title><rect x="32.6" y="83.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.12%)</title><rect x="32.6" y="67.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.12%)</title><rect x="32.6" y="51.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="35.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (27 samples, 0.10%)</title><rect x="34.0" y="291.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="37.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25091] (161 samples, 0.61%)</title><rect x="35.2" y="339.0" width="7.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="38.2" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (161 samples, 0.61%)</title><rect x="35.2" y="323.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (161 samples, 0.61%)</title><rect x="35.2" y="307.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (139 samples, 0.52%)</title><rect x="35.2" y="291.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (139 samples, 0.52%)</title><rect x="35.2" y="275.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (139 samples, 0.52%)</title><rect x="35.2" y="259.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (139 samples, 0.52%)</title><rect x="35.2" y="243.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (139 samples, 0.52%)</title><rect x="35.2" y="227.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (139 samples, 0.52%)</title><rect x="35.2" y="211.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (139 samples, 0.52%)</title><rect x="35.2" y="195.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (139 samples, 0.52%)</title><rect x="35.2" y="179.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (139 samples, 0.52%)</title><rect x="35.2" y="163.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (113 samples, 0.43%)</title><rect x="35.2" y="147.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (113 samples, 0.43%)</title><rect x="35.2" y="131.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (113 samples, 0.43%)</title><rect x="35.2" y="115.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (113 samples, 0.43%)</title><rect x="35.2" y="99.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (113 samples, 0.43%)</title><rect x="35.2" y="83.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (113 samples, 0.43%)</title><rect x="35.2" y="67.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (113 samples, 0.43%)</title><rect x="35.2" y="51.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (113 samples, 0.43%)</title><rect x="35.2" y="35.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="38.2" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (26 samples, 0.10%)</title><rect x="40.2" y="147.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (26 samples, 0.10%)</title><rect x="40.2" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (26 samples, 0.10%)</title><rect x="40.2" y="115.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.10%)</title><rect x="40.2" y="99.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.10%)</title><rect x="40.2" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.10%)</title><rect x="40.2" y="67.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (26 samples, 0.10%)</title><rect x="40.2" y="51.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="43.2" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (22 samples, 0.08%)</title><rect x="41.4" y="291.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="44.4" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=37635] (93 samples, 0.35%)</title><rect x="42.4" y="339.0" width="4.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="45.4" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 0.35%)</title><rect x="42.4" y="323.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (93 samples, 0.35%)</title><rect x="42.4" y="307.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (83 samples, 0.31%)</title><rect x="42.4" y="291.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (83 samples, 0.31%)</title><rect x="42.4" y="275.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (83 samples, 0.31%)</title><rect x="42.4" y="259.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (83 samples, 0.31%)</title><rect x="42.4" y="243.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (83 samples, 0.31%)</title><rect x="42.4" y="227.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (83 samples, 0.31%)</title><rect x="42.4" y="211.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (83 samples, 0.31%)</title><rect x="42.4" y="195.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (83 samples, 0.31%)</title><rect x="42.4" y="179.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (83 samples, 0.31%)</title><rect x="42.4" y="163.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (68 samples, 0.26%)</title><rect x="42.4" y="147.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (68 samples, 0.26%)</title><rect x="42.4" y="131.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (68 samples, 0.26%)</title><rect x="42.4" y="115.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (68 samples, 0.26%)</title><rect x="42.4" y="99.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (68 samples, 0.26%)</title><rect x="42.4" y="83.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (68 samples, 0.26%)</title><rect x="42.4" y="67.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (68 samples, 0.26%)</title><rect x="42.4" y="51.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (68 samples, 0.26%)</title><rect x="42.4" y="35.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.4" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (15 samples, 0.06%)</title><rect x="45.4" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (15 samples, 0.06%)</title><rect x="45.4" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (15 samples, 0.06%)</title><rect x="45.4" y="115.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.06%)</title><rect x="45.4" y="99.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.06%)</title><rect x="45.4" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.06%)</title><rect x="45.4" y="67.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (15 samples, 0.06%)</title><rect x="45.4" y="51.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="48.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (10 samples, 0.04%)</title><rect x="46.1" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="49.1" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=37123] (210 samples, 0.79%)</title><rect x="46.5" y="339.0" width="9.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="49.5" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (210 samples, 0.79%)</title><rect x="46.5" y="323.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (210 samples, 0.79%)</title><rect x="46.5" y="307.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (186 samples, 0.70%)</title><rect x="46.5" y="291.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (186 samples, 0.70%)</title><rect x="46.5" y="275.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (186 samples, 0.70%)</title><rect x="46.5" y="259.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (186 samples, 0.70%)</title><rect x="46.5" y="243.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (186 samples, 0.70%)</title><rect x="46.5" y="227.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (186 samples, 0.70%)</title><rect x="46.5" y="211.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (186 samples, 0.70%)</title><rect x="46.5" y="195.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (186 samples, 0.70%)</title><rect x="46.5" y="179.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (186 samples, 0.70%)</title><rect x="46.5" y="163.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (165 samples, 0.62%)</title><rect x="46.5" y="147.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (165 samples, 0.62%)</title><rect x="46.5" y="131.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (165 samples, 0.62%)</title><rect x="46.5" y="115.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (165 samples, 0.62%)</title><rect x="46.5" y="99.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (165 samples, 0.62%)</title><rect x="46.5" y="83.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (165 samples, 0.62%)</title><rect x="46.5" y="67.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (165 samples, 0.62%)</title><rect x="46.5" y="51.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (165 samples, 0.62%)</title><rect x="46.5" y="35.0" width="7.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="49.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (21 samples, 0.08%)</title><rect x="53.8" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (21 samples, 0.08%)</title><rect x="53.8" y="131.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.08%)</title><rect x="53.8" y="115.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (21 samples, 0.08%)</title><rect x="53.8" y="99.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.08%)</title><rect x="53.8" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.08%)</title><rect x="53.8" y="67.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (21 samples, 0.08%)</title><rect x="53.8" y="51.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (24 samples, 0.09%)</title><rect x="54.8" y="291.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="57.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=36611] (184 samples, 0.69%)</title><rect x="55.8" y="339.0" width="8.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.8" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (184 samples, 0.69%)</title><rect x="55.8" y="323.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (184 samples, 0.69%)</title><rect x="55.8" y="307.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (167 samples, 0.63%)</title><rect x="55.8" y="291.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (167 samples, 0.63%)</title><rect x="55.8" y="275.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (167 samples, 0.63%)</title><rect x="55.8" y="259.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (167 samples, 0.63%)</title><rect x="55.8" y="243.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (167 samples, 0.63%)</title><rect x="55.8" y="227.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (167 samples, 0.63%)</title><rect x="55.8" y="211.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (167 samples, 0.63%)</title><rect x="55.8" y="195.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (167 samples, 0.63%)</title><rect x="55.8" y="179.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (167 samples, 0.63%)</title><rect x="55.8" y="163.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (149 samples, 0.56%)</title><rect x="55.8" y="147.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (149 samples, 0.56%)</title><rect x="55.8" y="131.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (149 samples, 0.56%)</title><rect x="55.8" y="115.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (149 samples, 0.56%)</title><rect x="55.8" y="99.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (149 samples, 0.56%)</title><rect x="55.8" y="83.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (149 samples, 0.56%)</title><rect x="55.8" y="67.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (149 samples, 0.56%)</title><rect x="55.8" y="51.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (149 samples, 0.56%)</title><rect x="55.8" y="35.0" width="6.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.8" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (18 samples, 0.07%)</title><rect x="62.4" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (18 samples, 0.07%)</title><rect x="62.4" y="131.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (18 samples, 0.07%)</title><rect x="62.4" y="115.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (18 samples, 0.07%)</title><rect x="62.4" y="99.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.07%)</title><rect x="62.4" y="83.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.07%)</title><rect x="62.4" y="67.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (18 samples, 0.07%)</title><rect x="62.4" y="51.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="65.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (17 samples, 0.06%)</title><rect x="63.2" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="66.2" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=26115] (79 samples, 0.30%)</title><rect x="64.0" y="339.0" width="3.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="67.0" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (79 samples, 0.30%)</title><rect x="64.0" y="323.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (79 samples, 0.30%)</title><rect x="64.0" y="307.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (71 samples, 0.27%)</title><rect x="64.0" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (71 samples, 0.27%)</title><rect x="64.0" y="275.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (71 samples, 0.27%)</title><rect x="64.0" y="259.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (71 samples, 0.27%)</title><rect x="64.0" y="243.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (71 samples, 0.27%)</title><rect x="64.0" y="227.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (71 samples, 0.27%)</title><rect x="64.0" y="211.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (71 samples, 0.27%)</title><rect x="64.0" y="195.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (71 samples, 0.27%)</title><rect x="64.0" y="179.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (71 samples, 0.27%)</title><rect x="64.0" y="163.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (60 samples, 0.23%)</title><rect x="64.0" y="147.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (60 samples, 0.23%)</title><rect x="64.0" y="131.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (60 samples, 0.23%)</title><rect x="64.0" y="115.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (60 samples, 0.23%)</title><rect x="64.0" y="99.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (60 samples, 0.23%)</title><rect x="64.0" y="83.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (60 samples, 0.23%)</title><rect x="64.0" y="67.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 0.23%)</title><rect x="64.0" y="51.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (60 samples, 0.23%)</title><rect x="64.0" y="35.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="67.0" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 0.04%)</title><rect x="66.7" y="147.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.04%)</title><rect x="66.7" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (11 samples, 0.04%)</title><rect x="66.7" y="115.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 0.04%)</title><rect x="66.7" y="99.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.04%)</title><rect x="66.7" y="83.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.04%)</title><rect x="66.7" y="67.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.7" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (11 samples, 0.04%)</title><rect x="66.7" y="51.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="69.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (8 samples, 0.03%)</title><rect x="67.2" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="70.2" y="302.0"></text>
</g>
<g>
<title>[worker tid=43779] (3,309 samples, 12.45%)</title><rect x="67.5" y="339.0" width="147.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="70.5" y="350.0">[worker tid=43779]</text>
</g>
<g>
<title>java/lang/Thread.run (3,309 samples, 12.45%)</title><rect x="67.5" y="323.0" width="147.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.5" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,309 samples, 12.45%)</title><rect x="67.5" y="307.0" width="147.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.5" y="318.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,309 samples, 12.45%)</title><rect x="67.5" y="291.0" width="147.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.5" y="302.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,257 samples, 12.26%)</title><rect x="67.5" y="275.0" width="144.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.5" y="286.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,257 samples, 12.26%)</title><rect x="67.5" y="259.0" width="144.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.5" y="270.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (345 samples, 1.30%)</title><rect x="67.5" y="243.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (345 samples, 1.30%)</title><rect x="67.5" y="227.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (345 samples, 1.30%)</title><rect x="67.5" y="211.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (345 samples, 1.30%)</title><rect x="67.5" y="195.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (345 samples, 1.30%)</title><rect x="67.5" y="179.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (345 samples, 1.30%)</title><rect x="67.5" y="163.0" width="15.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="70.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,912 samples, 10.96%)</title><rect x="82.8" y="243.0" width="129.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.8" y="254.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,912 samples, 10.96%)</title><rect x="82.8" y="227.0" width="129.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.8" y="238.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,912 samples, 10.96%)</title><rect x="82.8" y="211.0" width="129.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="222.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,912 samples, 10.96%)</title><rect x="82.8" y="195.0" width="129.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="206.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,912 samples, 10.96%)</title><rect x="82.8" y="179.0" width="129.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.8" y="190.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,912 samples, 10.96%)</title><rect x="82.8" y="163.0" width="129.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.8" y="174.0">jdk/internal/mis..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,912 samples, 10.96%)</title><rect x="82.8" y="147.0" width="129.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="85.8" y="158.0">java.util.concur..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (52 samples, 0.20%)</title><rect x="212.2" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (52 samples, 0.20%)</title><rect x="212.2" y="259.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (52 samples, 0.20%)</title><rect x="212.2" y="243.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (52 samples, 0.20%)</title><rect x="212.2" y="227.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="215.2" y="238.0"></text>
</g>
<g>
<title>[worker tid=44291] (3,145 samples, 11.84%)</title><rect x="214.5" y="339.0" width="139.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="217.5" y="350.0">[worker tid=44291]</text>
</g>
<g>
<title>java/lang/Thread.run (3,145 samples, 11.84%)</title><rect x="214.5" y="323.0" width="139.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.5" y="334.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,145 samples, 11.84%)</title><rect x="214.5" y="307.0" width="139.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.5" y="318.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,145 samples, 11.84%)</title><rect x="214.5" y="291.0" width="139.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.5" y="302.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,106 samples, 11.69%)</title><rect x="214.5" y="275.0" width="137.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.5" y="286.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,106 samples, 11.69%)</title><rect x="214.5" y="259.0" width="137.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.5" y="270.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (332 samples, 1.25%)</title><rect x="214.5" y="243.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (332 samples, 1.25%)</title><rect x="214.5" y="227.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (332 samples, 1.25%)</title><rect x="214.5" y="211.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (332 samples, 1.25%)</title><rect x="214.5" y="195.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (332 samples, 1.25%)</title><rect x="214.5" y="179.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (332 samples, 1.25%)</title><rect x="214.5" y="163.0" width="14.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="217.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,774 samples, 10.44%)</title><rect x="229.2" y="243.0" width="123.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.2" y="254.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,774 samples, 10.44%)</title><rect x="229.2" y="227.0" width="123.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.2" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,774 samples, 10.44%)</title><rect x="229.2" y="211.0" width="123.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.2" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,774 samples, 10.44%)</title><rect x="229.2" y="195.0" width="123.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.2" y="206.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,774 samples, 10.44%)</title><rect x="229.2" y="179.0" width="123.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.2" y="190.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,774 samples, 10.44%)</title><rect x="229.2" y="163.0" width="123.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.2" y="174.0">jdk/internal/mi..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,774 samples, 10.44%)</title><rect x="229.2" y="147.0" width="123.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="232.2" y="158.0">java.util.concu..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (39 samples, 0.15%)</title><rect x="352.4" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (39 samples, 0.15%)</title><rect x="352.4" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 0.15%)</title><rect x="352.4" y="243.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.4" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (39 samples, 0.15%)</title><rect x="352.4" y="227.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="355.4" y="238.0"></text>
</g>
<g>
<title>[worker tid=44803] (3,089 samples, 11.63%)</title><rect x="354.1" y="339.0" width="137.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="357.1" y="350.0">[worker tid=44803]</text>
</g>
<g>
<title>java/lang/Thread.run (3,089 samples, 11.63%)</title><rect x="354.1" y="323.0" width="137.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.1" y="334.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,089 samples, 11.63%)</title><rect x="354.1" y="307.0" width="137.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.1" y="318.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,089 samples, 11.63%)</title><rect x="354.1" y="291.0" width="137.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.1" y="302.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,046 samples, 11.46%)</title><rect x="354.1" y="275.0" width="135.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.1" y="286.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,046 samples, 11.46%)</title><rect x="354.1" y="259.0" width="135.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.1" y="270.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (314 samples, 1.18%)</title><rect x="354.1" y="243.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (314 samples, 1.18%)</title><rect x="354.1" y="227.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (314 samples, 1.18%)</title><rect x="354.1" y="211.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (314 samples, 1.18%)</title><rect x="354.1" y="195.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (314 samples, 1.18%)</title><rect x="354.1" y="179.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (314 samples, 1.18%)</title><rect x="354.1" y="163.0" width="14.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="357.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,732 samples, 10.28%)</title><rect x="368.1" y="243.0" width="121.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.1" y="254.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,732 samples, 10.28%)</title><rect x="368.1" y="227.0" width="121.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.1" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,732 samples, 10.28%)</title><rect x="368.1" y="211.0" width="121.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.1" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,732 samples, 10.28%)</title><rect x="368.1" y="195.0" width="121.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.1" y="206.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,732 samples, 10.28%)</title><rect x="368.1" y="179.0" width="121.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.1" y="190.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,732 samples, 10.28%)</title><rect x="368.1" y="163.0" width="121.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.1" y="174.0">jdk/internal/mi..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,732 samples, 10.28%)</title><rect x="368.1" y="147.0" width="121.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="371.1" y="158.0">java.util.concu..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (43 samples, 0.16%)</title><rect x="489.4" y="275.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (43 samples, 0.16%)</title><rect x="489.4" y="259.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (43 samples, 0.16%)</title><rect x="489.4" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.4" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (43 samples, 0.16%)</title><rect x="489.4" y="227.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="492.4" y="238.0"></text>
</g>
<g>
<title>[worker tid=83459] (3,202 samples, 12.05%)</title><rect x="491.3" y="339.0" width="142.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="494.3" y="350.0">[worker tid=83459]</text>
</g>
<g>
<title>java/lang/Thread.run (3,202 samples, 12.05%)</title><rect x="491.3" y="323.0" width="142.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.3" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,202 samples, 12.05%)</title><rect x="491.3" y="307.0" width="142.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.3" y="318.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,202 samples, 12.05%)</title><rect x="491.3" y="291.0" width="142.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.3" y="302.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,159 samples, 11.89%)</title><rect x="491.3" y="275.0" width="140.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.3" y="286.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,159 samples, 11.89%)</title><rect x="491.3" y="259.0" width="140.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.3" y="270.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (315 samples, 1.19%)</title><rect x="491.3" y="243.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (315 samples, 1.19%)</title><rect x="491.3" y="227.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (315 samples, 1.19%)</title><rect x="491.3" y="211.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (315 samples, 1.19%)</title><rect x="491.3" y="195.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (315 samples, 1.19%)</title><rect x="491.3" y="179.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (315 samples, 1.19%)</title><rect x="491.3" y="163.0" width="14.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="494.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,844 samples, 10.70%)</title><rect x="505.3" y="243.0" width="126.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.3" y="254.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,844 samples, 10.70%)</title><rect x="505.3" y="227.0" width="126.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.3" y="238.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,844 samples, 10.70%)</title><rect x="505.3" y="211.0" width="126.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.3" y="222.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,844 samples, 10.70%)</title><rect x="505.3" y="195.0" width="126.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.3" y="206.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,844 samples, 10.70%)</title><rect x="505.3" y="179.0" width="126.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.3" y="190.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,844 samples, 10.70%)</title><rect x="505.3" y="163.0" width="126.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.3" y="174.0">jdk/internal/mis..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,844 samples, 10.70%)</title><rect x="505.3" y="147.0" width="126.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="508.3" y="158.0">java.util.concur..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (43 samples, 0.16%)</title><rect x="631.6" y="275.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (43 samples, 0.16%)</title><rect x="631.6" y="259.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (43 samples, 0.16%)</title><rect x="631.6" y="243.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.6" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (43 samples, 0.16%)</title><rect x="631.6" y="227.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="634.6" y="238.0"></text>
</g>
<g>
<title>[worker tid=83971] (3,093 samples, 11.64%)</title><rect x="633.5" y="339.0" width="137.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="636.5" y="350.0">[worker tid=83971]</text>
</g>
<g>
<title>java/lang/Thread.run (3,093 samples, 11.64%)</title><rect x="633.5" y="323.0" width="137.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.5" y="334.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,093 samples, 11.64%)</title><rect x="633.5" y="307.0" width="137.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.5" y="318.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,093 samples, 11.64%)</title><rect x="633.5" y="291.0" width="137.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.5" y="302.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,056 samples, 11.50%)</title><rect x="633.5" y="275.0" width="135.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.5" y="286.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,056 samples, 11.50%)</title><rect x="633.5" y="259.0" width="135.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.5" y="270.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (323 samples, 1.22%)</title><rect x="633.5" y="243.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (323 samples, 1.22%)</title><rect x="633.5" y="227.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (323 samples, 1.22%)</title><rect x="633.5" y="211.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (323 samples, 1.22%)</title><rect x="633.5" y="195.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (323 samples, 1.22%)</title><rect x="633.5" y="179.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (323 samples, 1.22%)</title><rect x="633.5" y="163.0" width="14.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="636.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,733 samples, 10.29%)</title><rect x="647.9" y="243.0" width="121.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.9" y="254.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,733 samples, 10.29%)</title><rect x="647.9" y="227.0" width="121.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.9" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,733 samples, 10.29%)</title><rect x="647.9" y="211.0" width="121.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.9" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,733 samples, 10.29%)</title><rect x="647.9" y="195.0" width="121.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.9" y="206.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,733 samples, 10.29%)</title><rect x="647.9" y="179.0" width="121.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.9" y="190.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,733 samples, 10.29%)</title><rect x="647.9" y="163.0" width="121.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.9" y="174.0">jdk/internal/mi..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,733 samples, 10.29%)</title><rect x="647.9" y="147.0" width="121.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="650.9" y="158.0">java.util.concu..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (37 samples, 0.14%)</title><rect x="769.2" y="275.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (37 samples, 0.14%)</title><rect x="769.2" y="259.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 0.14%)</title><rect x="769.2" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (37 samples, 0.14%)</title><rect x="769.2" y="227.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="772.2" y="238.0"></text>
</g>
<g>
<title>[worker tid=84483] (3,238 samples, 12.19%)</title><rect x="770.9" y="339.0" width="143.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="773.9" y="350.0">[worker tid=84483]</text>
</g>
<g>
<title>java/lang/Thread.run (3,238 samples, 12.19%)</title><rect x="770.9" y="323.0" width="143.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.9" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,238 samples, 12.19%)</title><rect x="770.9" y="307.0" width="143.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.9" y="318.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,238 samples, 12.19%)</title><rect x="770.9" y="291.0" width="143.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.9" y="302.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,195 samples, 12.02%)</title><rect x="770.9" y="275.0" width="141.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.9" y="286.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,195 samples, 12.02%)</title><rect x="770.9" y="259.0" width="141.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.9" y="270.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (352 samples, 1.32%)</title><rect x="770.9" y="243.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (352 samples, 1.32%)</title><rect x="770.9" y="227.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (352 samples, 1.32%)</title><rect x="770.9" y="211.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (352 samples, 1.32%)</title><rect x="770.9" y="195.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (352 samples, 1.32%)</title><rect x="770.9" y="179.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (352 samples, 1.32%)</title><rect x="770.9" y="163.0" width="15.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="773.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,843 samples, 10.70%)</title><rect x="786.5" y="243.0" width="126.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.5" y="254.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,843 samples, 10.70%)</title><rect x="786.5" y="227.0" width="126.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.5" y="238.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,843 samples, 10.70%)</title><rect x="786.5" y="211.0" width="126.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.5" y="222.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,843 samples, 10.70%)</title><rect x="786.5" y="195.0" width="126.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.5" y="206.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,843 samples, 10.70%)</title><rect x="786.5" y="179.0" width="126.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.5" y="190.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,843 samples, 10.70%)</title><rect x="786.5" y="163.0" width="126.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.5" y="174.0">jdk/internal/mis..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,843 samples, 10.70%)</title><rect x="786.5" y="147.0" width="126.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="789.5" y="158.0">java.util.concur..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (43 samples, 0.16%)</title><rect x="912.8" y="275.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (43 samples, 0.16%)</title><rect x="912.8" y="259.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (43 samples, 0.16%)</title><rect x="912.8" y="243.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.8" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (43 samples, 0.16%)</title><rect x="912.8" y="227.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="915.8" y="238.0"></text>
</g>
<g>
<title>[worker tid=86019] (3,154 samples, 11.87%)</title><rect x="914.7" y="339.0" width="140.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="917.7" y="350.0">[worker tid=86019]</text>
</g>
<g>
<title>java/lang/Thread.run (3,154 samples, 11.87%)</title><rect x="914.7" y="323.0" width="140.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.7" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,154 samples, 11.87%)</title><rect x="914.7" y="307.0" width="140.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.7" y="318.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,154 samples, 11.87%)</title><rect x="914.7" y="291.0" width="140.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.7" y="302.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,106 samples, 11.69%)</title><rect x="914.7" y="275.0" width="137.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.7" y="286.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,106 samples, 11.69%)</title><rect x="914.7" y="259.0" width="137.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.7" y="270.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (320 samples, 1.20%)</title><rect x="914.7" y="243.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (320 samples, 1.20%)</title><rect x="914.7" y="227.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (320 samples, 1.20%)</title><rect x="914.7" y="211.0" width="14.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (320 samples, 1.20%)</title><rect x="914.7" y="195.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (320 samples, 1.20%)</title><rect x="914.7" y="179.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (320 samples, 1.20%)</title><rect x="914.7" y="163.0" width="14.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="917.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,786 samples, 10.49%)</title><rect x="928.9" y="243.0" width="123.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.9" y="254.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,786 samples, 10.49%)</title><rect x="928.9" y="227.0" width="123.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.9" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,786 samples, 10.49%)</title><rect x="928.9" y="211.0" width="123.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.9" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,786 samples, 10.49%)</title><rect x="928.9" y="195.0" width="123.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.9" y="206.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,786 samples, 10.49%)</title><rect x="928.9" y="179.0" width="123.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.9" y="190.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,786 samples, 10.49%)</title><rect x="928.9" y="163.0" width="123.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.9" y="174.0">jdk/internal/mi..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,786 samples, 10.49%)</title><rect x="928.9" y="147.0" width="123.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="931.9" y="158.0">java.util.concu..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (48 samples, 0.18%)</title><rect x="1052.6" y="275.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (48 samples, 0.18%)</title><rect x="1052.6" y="259.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.18%)</title><rect x="1052.6" y="243.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.6" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (48 samples, 0.18%)</title><rect x="1052.6" y="227.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1055.6" y="238.0"></text>
</g>
<g>
<title>[worker tid=86787] (3,046 samples, 11.46%)</title><rect x="1054.7" y="339.0" width="135.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1057.7" y="350.0">[worker tid=86787]</text>
</g>
<g>
<title>java/lang/Thread.run (3,046 samples, 11.46%)</title><rect x="1054.7" y="323.0" width="135.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.7" y="334.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,046 samples, 11.46%)</title><rect x="1054.7" y="307.0" width="135.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.7" y="318.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,046 samples, 11.46%)</title><rect x="1054.7" y="291.0" width="135.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.7" y="302.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,004 samples, 11.31%)</title><rect x="1054.7" y="275.0" width="133.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.7" y="286.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,004 samples, 11.31%)</title><rect x="1054.7" y="259.0" width="133.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.7" y="270.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (345 samples, 1.30%)</title><rect x="1054.7" y="243.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (345 samples, 1.30%)</title><rect x="1054.7" y="227.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (345 samples, 1.30%)</title><rect x="1054.7" y="211.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (345 samples, 1.30%)</title><rect x="1054.7" y="195.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (345 samples, 1.30%)</title><rect x="1054.7" y="179.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (345 samples, 1.30%)</title><rect x="1054.7" y="163.0" width="15.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1057.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,659 samples, 10.01%)</title><rect x="1070.1" y="243.0" width="118.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.1" y="254.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,659 samples, 10.01%)</title><rect x="1070.1" y="227.0" width="118.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.1" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,659 samples, 10.01%)</title><rect x="1070.1" y="211.0" width="118.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.1" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,659 samples, 10.01%)</title><rect x="1070.1" y="195.0" width="118.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.1" y="206.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,659 samples, 10.01%)</title><rect x="1070.1" y="179.0" width="118.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1073.1" y="190.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,659 samples, 10.01%)</title><rect x="1070.1" y="163.0" width="118.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.1" y="174.0">jdk/internal/m..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,659 samples, 10.01%)</title><rect x="1070.1" y="147.0" width="118.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1073.1" y="158.0">java.util.conc..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$124/1518349137.run (42 samples, 0.16%)</title><rect x="1188.1" y="275.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$3 (42 samples, 0.16%)</title><rect x="1188.1" y="259.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 0.16%)</title><rect x="1188.1" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stakenschneider.StorageSession (42 samples, 0.16%)</title><rect x="1188.1" y="227.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1191.1" y="238.0"></text>
</g>
</g>
</svg>
