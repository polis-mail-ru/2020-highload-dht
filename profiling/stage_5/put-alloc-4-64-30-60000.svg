<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (124,734 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (124,733 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (4,731 samples, 3.79%)</title><rect x="10.0" y="339.0" width="44.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="350.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1,880 samples, 1.51%)</title><rect x="10.0" y="323.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (926 samples, 0.74%)</title><rect x="10.0" y="307.0" width="8.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (954 samples, 0.76%)</title><rect x="18.8" y="307.0" width="9.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,851 samples, 2.29%)</title><rect x="27.8" y="323.0" width="27.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.8" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,851 samples, 2.29%)</title><rect x="27.8" y="307.0" width="27.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.8" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2,851 samples, 2.29%)</title><rect x="27.8" y="291.0" width="27.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.8" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2,851 samples, 2.29%)</title><rect x="27.8" y="275.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.8" y="286.0">s..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,586 samples, 1.27%)</title><rect x="27.8" y="259.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Integer (1,586 samples, 1.27%)</title><rect x="27.8" y="243.0" width="15.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="30.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,265 samples, 1.01%)</title><rect x="42.8" y="259.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.8" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,265 samples, 1.01%)</title><rect x="42.8" y="243.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,265 samples, 1.01%)</title><rect x="42.8" y="227.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,265 samples, 1.01%)</title><rect x="42.8" y="211.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.8" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,265 samples, 1.01%)</title><rect x="42.8" y="195.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.8" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,265 samples, 1.01%)</title><rect x="42.8" y="179.0" width="12.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="45.8" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (120,002 samples, 96.21%)</title><rect x="54.8" y="339.0" width="1135.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.8" y="350.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (120,002 samples, 96.21%)</title><rect x="54.8" y="323.0" width="1135.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.8" y="334.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (119,179 samples, 95.55%)</title><rect x="54.8" y="307.0" width="1127.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.8" y="318.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (88,106 samples, 70.64%)</title><rect x="54.8" y="291.0" width="833.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.8" y="302.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (88,106 samples, 70.64%)</title><rect x="54.8" y="275.0" width="833.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.8" y="286.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (85,858 samples, 68.83%)</title><rect x="54.8" y="259.0" width="812.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.8" y="270.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,876 samples, 1.50%)</title><rect x="54.8" y="243.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,876 samples, 1.50%)</title><rect x="54.8" y="227.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,876 samples, 1.50%)</title><rect x="54.8" y="211.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (892 samples, 0.72%)</title><rect x="54.8" y="195.0" width="8.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (984 samples, 0.79%)</title><rect x="63.2" y="195.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.2" y="206.0"></text>
</g>
<g>
<title>byte[] (984 samples, 0.79%)</title><rect x="63.2" y="179.0" width="9.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="66.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (83,982 samples, 67.33%)</title><rect x="72.5" y="243.0" width="794.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.5" y="254.0">ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity</text>
</g>
<g>
<title>java.lang.String[] (976 samples, 0.78%)</title><rect x="72.5" y="227.0" width="9.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="75.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,105 samples, 0.89%)</title><rect x="81.7" y="227.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,105 samples, 0.89%)</title><rect x="81.7" y="211.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,105 samples, 0.89%)</title><rect x="81.7" y="195.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,105 samples, 0.89%)</title><rect x="81.7" y="179.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.7" y="190.0"></text>
</g>
<g>
<title>byte[] (1,105 samples, 0.89%)</title><rect x="81.7" y="163.0" width="10.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="84.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,168 samples, 1.74%)</title><rect x="92.2" y="227.0" width="20.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,168 samples, 1.74%)</title><rect x="92.2" y="211.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,168 samples, 1.74%)</title><rect x="92.2" y="195.0" width="20.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="95.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,387 samples, 1.11%)</title><rect x="112.7" y="227.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,387 samples, 1.11%)</title><rect x="112.7" y="211.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,387 samples, 1.11%)</title><rect x="112.7" y="195.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (854 samples, 0.68%)</title><rect x="112.7" y="179.0" width="8.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="115.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (533 samples, 0.43%)</title><rect x="120.8" y="179.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.8" y="190.0"></text>
</g>
<g>
<title>byte[] (533 samples, 0.43%)</title><rect x="120.8" y="163.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="123.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/Coordinator.coordinateRequest (78,116 samples, 62.63%)</title><rect x="125.8" y="227.0" width="739.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.8" y="238.0">ru/mail/polis/service/stakenschneider/Coordinator.coordinateRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7,559 samples, 6.06%)</title><rect x="125.8" y="211.0" width="71.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.8" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5,316 samples, 4.26%)</title><rect x="125.8" y="195.0" width="50.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.8" y="206.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,938 samples, 3.16%)</title><rect x="125.8" y="179.0" width="37.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.8" y="190.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,938 samples, 3.16%)</title><rect x="125.8" y="163.0" width="37.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.8" y="174.0">one..</text>
</g>
<g>
<title>byte[] (3,938 samples, 3.16%)</title><rect x="125.8" y="147.0" width="37.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="128.8" y="158.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,378 samples, 1.10%)</title><rect x="163.1" y="179.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.1" y="190.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,378 samples, 1.10%)</title><rect x="163.1" y="163.0" width="13.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="166.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,243 samples, 1.80%)</title><rect x="176.1" y="195.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.1" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,243 samples, 1.80%)</title><rect x="176.1" y="179.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.1" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,243 samples, 1.80%)</title><rect x="176.1" y="163.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (950 samples, 0.76%)</title><rect x="176.1" y="147.0" width="9.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="179.1" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,293 samples, 1.04%)</title><rect x="185.1" y="147.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.1" y="158.0"></text>
</g>
<g>
<title>byte[] (1,293 samples, 1.04%)</title><rect x="185.1" y="131.0" width="12.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="188.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/Coordinator.coordinatePut (70,557 samples, 56.57%)</title><rect x="197.3" y="211.0" width="667.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.3" y="222.0">ru/mail/polis/service/stakenschneider/Coordinator.coordinatePut</text>
</g>
<g>
<title>java/lang/String.getBytes (978 samples, 0.78%)</title><rect x="197.3" y="195.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (978 samples, 0.78%)</title><rect x="197.3" y="179.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (978 samples, 0.78%)</title><rect x="197.3" y="163.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (978 samples, 0.78%)</title><rect x="197.3" y="147.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.3" y="158.0"></text>
</g>
<g>
<title>byte[] (978 samples, 0.78%)</title><rect x="197.3" y="131.0" width="9.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="200.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (161 samples, 0.13%)</title><rect x="206.6" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1610525991.invoke (161 samples, 0.13%)</title><rect x="206.6" y="179.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (161 samples, 0.13%)</title><rect x="206.6" y="163.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (36 samples, 0.03%)</title><rect x="206.6" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.03%)</title><rect x="206.6" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="209.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (125 samples, 0.10%)</title><rect x="206.9" y="147.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (125 samples, 0.10%)</title><rect x="206.9" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.9" y="142.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.10%)</title><rect x="206.9" y="115.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="209.9" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (861 samples, 0.69%)</title><rect x="208.1" y="195.0" width="8.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="211.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (56,439 samples, 45.25%)</title><rect x="216.3" y="195.0" width="533.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.3" y="206.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>byte[] (67 samples, 0.05%)</title><rect x="216.3" y="179.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="219.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.04%)</title><rect x="216.9" y="179.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="219.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (226 samples, 0.18%)</title><rect x="217.4" y="179.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.4" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (61 samples, 0.05%)</title><rect x="217.4" y="163.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="220.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (165 samples, 0.13%)</title><rect x="218.0" y="163.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (165 samples, 0.13%)</title><rect x="218.0" y="147.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="221.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (56,092 samples, 44.97%)</title><rect x="219.5" y="179.0" width="530.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.5" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (56,092 samples, 44.97%)</title><rect x="219.5" y="163.0" width="530.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.5" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (89 samples, 0.07%)</title><rect x="219.5" y="147.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="222.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (50,395 samples, 40.40%)</title><rect x="220.4" y="147.0" width="476.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.4" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (34,623 samples, 27.76%)</title><rect x="220.4" y="131.0" width="327.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="223.4" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (15,749 samples, 12.63%)</title><rect x="547.9" y="131.0" width="149.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="550.9" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5,033 samples, 4.03%)</title><rect x="697.1" y="147.0" width="47.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.1" y="158.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (96 samples, 0.08%)</title><rect x="697.4" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.08%)</title><rect x="697.4" y="115.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.04%)</title><rect x="697.4" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="700.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.04%)</title><rect x="697.8" y="99.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.8" y="110.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.04%)</title><rect x="697.8" y="83.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="700.8" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (56 samples, 0.04%)</title><rect x="698.3" y="131.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="701.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4,743 samples, 3.80%)</title><rect x="698.8" y="131.0" width="44.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.8" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,743 samples, 3.80%)</title><rect x="698.8" y="115.0" width="44.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.8" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,743 samples, 3.80%)</title><rect x="698.8" y="99.0" width="44.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.8" y="110.0">one/..</text>
</g>
<g>
<title>char[] (4,419 samples, 3.54%)</title><rect x="698.8" y="83.0" width="41.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="701.8" y="94.0">cha..</text>
</g>
<g>
<title>java.lang.String (126 samples, 0.10%)</title><rect x="740.6" y="83.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="743.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (198 samples, 0.16%)</title><rect x="741.8" y="83.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (198 samples, 0.16%)</title><rect x="741.8" y="67.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.8" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (198 samples, 0.16%)</title><rect x="741.8" y="51.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.8" y="62.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.16%)</title><rect x="741.8" y="35.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="744.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (52 samples, 0.04%)</title><rect x="743.7" y="131.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (52 samples, 0.04%)</title><rect x="743.7" y="115.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="746.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (60 samples, 0.05%)</title><rect x="744.2" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 0.05%)</title><rect x="744.2" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.05%)</title><rect x="744.2" y="99.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.03%)</title><rect x="744.2" y="83.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="747.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.02%)</title><rect x="744.5" y="83.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.5" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.02%)</title><rect x="744.5" y="67.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="747.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (248 samples, 0.20%)</title><rect x="744.7" y="147.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (248 samples, 0.20%)</title><rect x="744.7" y="131.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.7" y="142.0"></text>
</g>
<g>
<title>byte[] (248 samples, 0.20%)</title><rect x="744.7" y="115.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="747.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (84 samples, 0.07%)</title><rect x="747.1" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.07%)</title><rect x="747.1" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.07%)</title><rect x="747.1" y="115.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.04%)</title><rect x="747.1" y="99.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="750.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.03%)</title><rect x="747.5" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.5" y="110.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.03%)</title><rect x="747.5" y="83.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="750.5" y="94.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (214 samples, 0.17%)</title><rect x="747.9" y="147.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.9" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (95 samples, 0.08%)</title><rect x="747.9" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (95 samples, 0.08%)</title><rect x="747.9" y="115.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (95 samples, 0.08%)</title><rect x="747.9" y="99.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (95 samples, 0.08%)</title><rect x="747.9" y="83.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="750.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (119 samples, 0.10%)</title><rect x="748.8" y="131.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.8" y="142.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (77 samples, 0.06%)</title><rect x="748.8" y="115.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (77 samples, 0.06%)</title><rect x="748.8" y="99.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (77 samples, 0.06%)</title><rect x="748.8" y="83.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.8" y="94.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (77 samples, 0.06%)</title><rect x="748.8" y="67.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.8" y="78.0"></text>
</g>
<g>
<title>java.nio.channels.Channels$1 (77 samples, 0.06%)</title><rect x="748.8" y="51.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="751.8" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketAdaptor$2 (42 samples, 0.03%)</title><rect x="749.5" y="115.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="752.5" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (29 samples, 0.02%)</title><rect x="749.9" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.9" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (29 samples, 0.02%)</title><rect x="749.9" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.9" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (29 samples, 0.02%)</title><rect x="749.9" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.9" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (29 samples, 0.02%)</title><rect x="749.9" y="99.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="752.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,979 samples, 1.59%)</title><rect x="750.2" y="195.0" width="18.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,979 samples, 1.59%)</title><rect x="750.2" y="179.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,979 samples, 1.59%)</title><rect x="750.2" y="163.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1,306 samples, 1.05%)</title><rect x="750.2" y="147.0" width="12.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="753.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (673 samples, 0.54%)</title><rect x="762.5" y="147.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.5" y="158.0"></text>
</g>
<g>
<title>byte[] (673 samples, 0.54%)</title><rect x="762.5" y="131.0" width="6.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="765.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,979 samples, 1.59%)</title><rect x="768.9" y="195.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,979 samples, 1.59%)</title><rect x="768.9" y="179.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,979 samples, 1.59%)</title><rect x="768.9" y="163.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (964 samples, 0.77%)</title><rect x="768.9" y="147.0" width="9.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="771.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,015 samples, 0.81%)</title><rect x="778.0" y="147.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.0" y="158.0"></text>
</g>
<g>
<title>byte[] (1,015 samples, 0.81%)</title><rect x="778.0" y="131.0" width="9.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="781.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,933 samples, 3.15%)</title><rect x="787.6" y="195.0" width="37.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.6" y="206.0">one..</text>
</g>
<g>
<title>byte[] (1,482 samples, 1.19%)</title><rect x="787.6" y="179.0" width="14.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="790.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (1,355 samples, 1.09%)</title><rect x="801.6" y="179.0" width="12.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="804.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1,096 samples, 0.88%)</title><rect x="814.5" y="179.0" width="10.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="817.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/Coordinator.putWithTimestampMethodWrapper (4,227 samples, 3.39%)</title><rect x="824.8" y="195.0" width="40.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.8" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,043 samples, 1.64%)</title><rect x="824.8" y="179.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,043 samples, 1.64%)</title><rect x="824.8" y="163.0" width="19.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.8" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,043 samples, 1.64%)</title><rect x="824.8" y="147.0" width="19.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="827.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsertRecordWithTimestamp (2,184 samples, 1.75%)</title><rect x="844.2" y="179.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (987 samples, 0.79%)</title><rect x="844.2" y="163.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.2" y="174.0"></text>
</g>
<g>
<title>byte[] (987 samples, 0.79%)</title><rect x="844.2" y="147.0" width="9.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="847.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (1,197 samples, 0.96%)</title><rect x="853.5" y="163.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,197 samples, 0.96%)</title><rect x="853.5" y="147.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,197 samples, 0.96%)</title><rect x="853.5" y="131.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.5" y="142.0"></text>
</g>
<g>
<title>byte[] (1,197 samples, 0.96%)</title><rect x="853.5" y="115.0" width="11.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="856.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/Nodes.getNodes (198 samples, 0.16%)</title><rect x="864.8" y="227.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.8" y="238.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (198 samples, 0.16%)</title><rect x="864.8" y="211.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.8" y="222.0"></text>
</g>
<g>
<title>java.util.HashMap (39 samples, 0.03%)</title><rect x="864.8" y="195.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="867.8" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (159 samples, 0.13%)</title><rect x="865.2" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.2" y="206.0"></text>
</g>
<g>
<title>java/util/HashSet.add (159 samples, 0.13%)</title><rect x="865.2" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.2" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.put (159 samples, 0.13%)</title><rect x="865.2" y="163.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.2" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (159 samples, 0.13%)</title><rect x="865.2" y="147.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.2" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (90 samples, 0.07%)</title><rect x="865.2" y="131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.2" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (90 samples, 0.07%)</title><rect x="865.2" y="115.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="868.2" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (69 samples, 0.06%)</title><rect x="866.0" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (69 samples, 0.06%)</title><rect x="866.0" y="115.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="869.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/Nodes.replicas (32 samples, 0.03%)</title><rect x="866.7" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.03%)</title><rect x="866.7" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="869.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,248 samples, 1.80%)</title><rect x="867.0" y="259.0" width="21.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.0" y="270.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,248 samples, 1.80%)</title><rect x="867.0" y="243.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.0" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,248 samples, 1.80%)</title><rect x="867.0" y="227.0" width="21.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.0" y="238.0">j..</text>
</g>
<g>
<title>java.lang.String (965 samples, 0.77%)</title><rect x="867.0" y="211.0" width="9.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="870.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,283 samples, 1.03%)</title><rect x="876.1" y="211.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.1" y="222.0"></text>
</g>
<g>
<title>byte[] (1,283 samples, 1.03%)</title><rect x="876.1" y="195.0" width="12.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="879.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9,814 samples, 7.87%)</title><rect x="888.3" y="291.0" width="92.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.3" y="302.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (1,624 samples, 1.30%)</title><rect x="888.3" y="275.0" width="15.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="891.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,347 samples, 2.68%)</title><rect x="903.6" y="275.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.6" y="286.0">on..</text>
</g>
<g>
<title>java.lang.String[] (3,347 samples, 2.68%)</title><rect x="903.6" y="259.0" width="31.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="906.6" y="270.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,843 samples, 3.88%)</title><rect x="935.3" y="275.0" width="45.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.3" y="286.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,843 samples, 3.88%)</title><rect x="935.3" y="259.0" width="45.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.3" y="270.0">one/..</text>
</g>
<g>
<title>char[] (2,434 samples, 1.95%)</title><rect x="935.3" y="243.0" width="23.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="938.3" y="254.0">c..</text>
</g>
<g>
<title>java.lang.String (733 samples, 0.59%)</title><rect x="958.3" y="243.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="961.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,676 samples, 1.34%)</title><rect x="965.2" y="243.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,676 samples, 1.34%)</title><rect x="965.2" y="227.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,676 samples, 1.34%)</title><rect x="965.2" y="211.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.2" y="222.0"></text>
</g>
<g>
<title>byte[] (1,676 samples, 1.34%)</title><rect x="965.2" y="195.0" width="15.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="968.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,184 samples, 0.95%)</title><rect x="981.1" y="291.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.1" y="302.0"></text>
</g>
<g>
<title>byte[] (1,184 samples, 0.95%)</title><rect x="981.1" y="275.0" width="11.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="984.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,039 samples, 1.63%)</title><rect x="992.3" y="291.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,039 samples, 1.63%)</title><rect x="992.3" y="275.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="995.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,039 samples, 1.63%)</title><rect x="992.3" y="259.0" width="19.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1,017 samples, 0.82%)</title><rect x="992.3" y="243.0" width="9.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="995.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,022 samples, 0.82%)</title><rect x="1001.9" y="243.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.9" y="254.0"></text>
</g>
<g>
<title>byte[] (1,022 samples, 0.82%)</title><rect x="1001.9" y="227.0" width="9.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1004.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18,036 samples, 14.46%)</title><rect x="1011.6" y="291.0" width="170.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.6" y="302.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (18,036 samples, 14.46%)</title><rect x="1011.6" y="275.0" width="170.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.6" y="286.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (8,778 samples, 7.04%)</title><rect x="1011.6" y="259.0" width="83.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1014.6" y="270.0">char[]</text>
</g>
<g>
<title>java.lang.String (3,579 samples, 2.87%)</title><rect x="1094.6" y="259.0" width="33.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1097.6" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,679 samples, 4.55%)</title><rect x="1128.5" y="259.0" width="53.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.5" y="270.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,679 samples, 4.55%)</title><rect x="1128.5" y="243.0" width="53.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.5" y="254.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,679 samples, 4.55%)</title><rect x="1128.5" y="227.0" width="53.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.5" y="238.0">java/..</text>
</g>
<g>
<title>byte[] (5,679 samples, 4.55%)</title><rect x="1128.5" y="211.0" width="53.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1131.5" y="222.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (823 samples, 0.66%)</title><rect x="1182.2" y="307.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (823 samples, 0.66%)</title><rect x="1182.2" y="291.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (823 samples, 0.66%)</title><rect x="1182.2" y="275.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.2" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (823 samples, 0.66%)</title><rect x="1182.2" y="259.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1185.2" y="270.0"></text>
</g>
</g>
</svg>
