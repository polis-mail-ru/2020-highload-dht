<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (1,568 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 30 tid=35331] (12 samples, 0.77%)</title><rect x="10.0" y="1011.0" width="9.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.run (12 samples, 0.77%)</title><rect x="10.0" y="995.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (12 samples, 0.77%)</title><rect x="10.0" y="979.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (12 samples, 0.77%)</title><rect x="10.0" y="963.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/767414920.linkToTargetMethod (12 samples, 0.77%)</title><rect x="10.0" y="947.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/443637230.invoke (12 samples, 0.77%)</title><rect x="10.0" y="931.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.77%)</title><rect x="10.0" y="915.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.77%)</title><rect x="10.0" y="899.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.77%)</title><rect x="10.0" y="883.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.77%)</title><rect x="10.0" y="867.0" width="9.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=41219] (345 samples, 22.00%)</title><rect x="19.0" y="1011.0" width="259.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="22.0" y="1022.0">[NIO Selector #0 tid=41219]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (345 samples, 22.00%)</title><rect x="19.0" y="995.0" width="259.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.0" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (23 samples, 1.47%)</title><rect x="19.0" y="979.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.0" y="990.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (20 samples, 1.28%)</title><rect x="19.0" y="963.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.0" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (20 samples, 1.28%)</title><rect x="19.0" y="947.0" width="15.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="22.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 0.19%)</title><rect x="34.1" y="963.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.19%)</title><rect x="34.1" y="947.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (3 samples, 0.19%)</title><rect x="34.1" y="931.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.19%)</title><rect x="34.1" y="915.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.19%)</title><rect x="34.1" y="899.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.1" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.19%)</title><rect x="34.1" y="883.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.19%)</title><rect x="34.1" y="867.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.19%)</title><rect x="34.1" y="851.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.19%)</title><rect x="34.1" y="835.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.1" y="846.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.19%)</title><rect x="34.1" y="819.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="37.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (322 samples, 20.54%)</title><rect x="36.3" y="979.0" width="242.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.3" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (322 samples, 20.54%)</title><rect x="36.3" y="963.0" width="242.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.3" y="974.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (322 samples, 20.54%)</title><rect x="36.3" y="947.0" width="242.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.3" y="958.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (219 samples, 13.97%)</title><rect x="36.3" y="931.0" width="164.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.3" y="942.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (219 samples, 13.97%)</title><rect x="36.3" y="915.0" width="164.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.3" y="926.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (217 samples, 13.84%)</title><rect x="36.3" y="899.0" width="163.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.3" y="910.0">RequestHandler0_entit..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.83%)</title><rect x="36.3" y="883.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 0.83%)</title><rect x="36.3" y="867.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.19%)</title><rect x="36.3" y="851.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.19%)</title><rect x="36.3" y="835.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.3" y="846.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="36.3" y="819.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="39.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.64%)</title><rect x="38.6" y="851.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.6" y="862.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.32%)</title><rect x="38.6" y="835.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="41.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.32%)</title><rect x="42.4" y="835.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.32%)</title><rect x="42.4" y="819.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (5 samples, 0.32%)</title><rect x="42.4" y="803.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.32%)</title><rect x="42.4" y="787.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.4" y="798.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.32%)</title><rect x="42.4" y="771.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="45.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.26%)</title><rect x="46.1" y="883.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.26%)</title><rect x="46.1" y="867.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.26%)</title><rect x="46.1" y="851.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.1" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="46.1" y="835.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.1" y="846.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="46.1" y="819.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="49.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (200 samples, 12.76%)</title><rect x="49.1" y="883.0" width="150.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.1" y="894.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.83%)</title><rect x="49.1" y="867.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.83%)</title><rect x="49.1" y="851.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.83%)</title><rect x="49.1" y="835.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.1" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.83%)</title><rect x="49.1" y="819.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.1" y="830.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.83%)</title><rect x="49.1" y="803.0" width="9.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="52.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.64%)</title><rect x="58.9" y="867.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.9" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.64%)</title><rect x="58.9" y="851.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.9" y="862.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.64%)</title><rect x="58.9" y="835.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="61.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.get (177 samples, 11.29%)</title><rect x="66.4" y="867.0" width="133.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.4" y="878.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.83%)</title><rect x="66.4" y="851.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.4" y="862.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="66.4" y="835.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="69.4" y="846.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.13%)</title><rect x="71.7" y="835.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="74.7" y="846.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="73.2" y="835.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (164 samples, 10.46%)</title><rect x="76.2" y="851.0" width="123.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.2" y="862.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.45%)</title><rect x="76.2" y="835.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (7 samples, 0.45%)</title><rect x="76.2" y="819.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.45%)</title><rect x="76.2" y="803.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.45%)</title><rect x="76.2" y="787.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.45%)</title><rect x="76.2" y="771.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.2" y="782.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="76.2" y="755.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="79.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (38 samples, 2.42%)</title><rect x="81.5" y="835.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.5" y="846.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (3 samples, 0.19%)</title><rect x="81.5" y="819.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.5" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.19%)</title><rect x="81.5" y="803.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.5" y="814.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="81.5" y="787.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="84.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (14 samples, 0.89%)</title><rect x="83.8" y="819.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.8" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14 samples, 0.89%)</title><rect x="83.8" y="803.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.8" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (14 samples, 0.89%)</title><rect x="83.8" y="787.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.8" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.89%)</title><rect x="83.8" y="771.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.8" y="782.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.89%)</title><rect x="83.8" y="755.0" width="10.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="86.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (21 samples, 1.34%)</title><rect x="94.3" y="819.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 1.34%)</title><rect x="94.3" y="803.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.3" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 1.34%)</title><rect x="94.3" y="787.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.3" y="798.0"></text>
</g>
<g>
<title>byte[] (21 samples, 1.34%)</title><rect x="94.3" y="771.0" width="15.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.3" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (112 samples, 7.14%)</title><rect x="110.1" y="835.0" width="84.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.1" y="846.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (112 samples, 7.14%)</title><rect x="110.1" y="819.0" width="84.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.1" y="830.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (112 samples, 7.14%)</title><rect x="110.1" y="803.0" width="84.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.1" y="814.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (112 samples, 7.14%)</title><rect x="110.1" y="787.0" width="84.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.1" y="798.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (112 samples, 7.14%)</title><rect x="110.1" y="771.0" width="84.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.1" y="782.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (112 samples, 7.14%)</title><rect x="110.1" y="755.0" width="84.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.1" y="766.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (112 samples, 7.14%)</title><rect x="110.1" y="739.0" width="84.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.1" y="750.0">org/rocksd..</text>
</g>
<g>
<title>byte[] (112 samples, 7.14%)</title><rect x="110.1" y="723.0" width="84.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="113.1" y="734.0">byte[]</text>
</g>
<g>
<title>ru.mail.polis.dao.NoSuchElementLite (7 samples, 0.45%)</title><rect x="194.4" y="835.0" width="5.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="197.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.13%)</title><rect x="199.6" y="899.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.13%)</title><rect x="199.6" y="883.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.13%)</title><rect x="199.6" y="867.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.6" y="878.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="199.6" y="851.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="202.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (72 samples, 4.59%)</title><rect x="201.1" y="931.0" width="54.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.1" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (28 samples, 1.79%)</title><rect x="201.1" y="915.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.1" y="926.0">o..</text>
</g>
<g>
<title>java.lang.String[] (28 samples, 1.79%)</title><rect x="201.1" y="899.0" width="21.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="204.1" y="910.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 2.81%)</title><rect x="222.2" y="915.0" width="33.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.2" y="926.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 2.81%)</title><rect x="222.2" y="899.0" width="33.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.2" y="910.0">on..</text>
</g>
<g>
<title>char[] (34 samples, 2.17%)</title><rect x="222.2" y="883.0" width="25.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="225.2" y="894.0">c..</text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="247.8" y="883.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="250.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.51%)</title><rect x="249.3" y="883.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.51%)</title><rect x="249.3" y="867.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.51%)</title><rect x="249.3" y="851.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.3" y="862.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="249.3" y="835.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="252.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.98%)</title><rect x="255.3" y="931.0" width="23.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.3" y="942.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.98%)</title><rect x="255.3" y="915.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.3" y="926.0">o..</text>
</g>
<g>
<title>char[] (25 samples, 1.59%)</title><rect x="255.3" y="899.0" width="18.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="258.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="274.1" y="899.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.38%)</title><rect x="274.1" y="883.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.38%)</title><rect x="274.1" y="867.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.1" y="878.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="274.1" y="851.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.1" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=40451] (401 samples, 25.57%)</title><rect x="278.7" y="1011.0" width="301.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="281.7" y="1022.0">[NIO Selector #1 tid=40451]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (401 samples, 25.57%)</title><rect x="278.7" y="995.0" width="301.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.7" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (10 samples, 0.64%)</title><rect x="278.7" y="979.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (4 samples, 0.26%)</title><rect x="278.7" y="963.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.7" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (4 samples, 0.26%)</title><rect x="278.7" y="947.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="281.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (6 samples, 0.38%)</title><rect x="281.7" y="963.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.38%)</title><rect x="281.7" y="947.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (6 samples, 0.38%)</title><rect x="281.7" y="931.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.7" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.38%)</title><rect x="281.7" y="915.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.38%)</title><rect x="281.7" y="899.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.38%)</title><rect x="281.7" y="883.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.38%)</title><rect x="281.7" y="867.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.7" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.38%)</title><rect x="281.7" y="851.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.38%)</title><rect x="281.7" y="835.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.7" y="846.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (6 samples, 0.38%)</title><rect x="281.7" y="819.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="284.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (391 samples, 24.94%)</title><rect x="286.2" y="979.0" width="294.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.2" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (391 samples, 24.94%)</title><rect x="286.2" y="963.0" width="294.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.2" y="974.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (391 samples, 24.94%)</title><rect x="286.2" y="947.0" width="294.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.2" y="958.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (311 samples, 19.83%)</title><rect x="286.2" y="931.0" width="234.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.2" y="942.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (311 samples, 19.83%)</title><rect x="286.2" y="915.0" width="234.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.2" y="926.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (296 samples, 18.88%)</title><rect x="286.2" y="899.0" width="222.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.2" y="910.0">RequestHandler0_entity.handle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 1.08%)</title><rect x="286.2" y="883.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 1.08%)</title><rect x="286.2" y="867.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.32%)</title><rect x="286.2" y="851.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.32%)</title><rect x="286.2" y="835.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.2" y="846.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="286.2" y="819.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="289.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.77%)</title><rect x="289.9" y="851.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.9" y="862.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.32%)</title><rect x="289.9" y="835.0" width="3.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="292.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.45%)</title><rect x="293.7" y="835.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.45%)</title><rect x="293.7" y="819.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (7 samples, 0.45%)</title><rect x="293.7" y="803.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.45%)</title><rect x="293.7" y="787.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.7" y="798.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.45%)</title><rect x="293.7" y="771.0" width="5.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="296.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.89%)</title><rect x="299.0" y="883.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.89%)</title><rect x="299.0" y="867.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.89%)</title><rect x="299.0" y="851.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.0" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.89%)</title><rect x="299.0" y="835.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.0" y="846.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.89%)</title><rect x="299.0" y="819.0" width="10.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="302.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (265 samples, 16.90%)</title><rect x="309.5" y="883.0" width="199.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.5" y="894.0">ru/mail/polis/service/stak..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.13%)</title><rect x="309.5" y="867.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="309.5" y="851.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.13%)</title><rect x="309.5" y="835.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.5" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.13%)</title><rect x="309.5" y="819.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.5" y="830.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="309.5" y="803.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="312.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 1.02%)</title><rect x="311.0" y="867.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 1.02%)</title><rect x="311.0" y="851.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.0" y="862.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 1.02%)</title><rect x="311.0" y="835.0" width="12.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.get (247 samples, 15.75%)</title><rect x="323.1" y="867.0" width="185.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.1" y="878.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="323.1" y="851.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="326.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 1.15%)</title><rect x="323.8" y="851.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.8" y="862.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="323.8" y="835.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="326.8" y="846.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.51%)</title><rect x="327.6" y="835.0" width="6.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="330.6" y="846.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.32%)</title><rect x="333.6" y="835.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="336.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (228 samples, 14.54%)</title><rect x="337.4" y="851.0" width="171.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.4" y="862.0">ru/mail/polis/dao/Rock..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 1.21%)</title><rect x="337.4" y="835.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (19 samples, 1.21%)</title><rect x="337.4" y="819.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 1.21%)</title><rect x="337.4" y="803.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 1.21%)</title><rect x="337.4" y="787.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 1.21%)</title><rect x="337.4" y="771.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.4" y="782.0"></text>
</g>
<g>
<title>byte[] (19 samples, 1.21%)</title><rect x="337.4" y="755.0" width="14.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="340.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (49 samples, 3.12%)</title><rect x="351.7" y="835.0" width="36.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.7" y="846.0">jav..</text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (15 samples, 0.96%)</title><rect x="351.7" y="819.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.7" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.96%)</title><rect x="351.7" y="803.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.7" y="814.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.96%)</title><rect x="351.7" y="787.0" width="11.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="354.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (20 samples, 1.28%)</title><rect x="362.9" y="819.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 1.28%)</title><rect x="362.9" y="803.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.9" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (20 samples, 1.28%)</title><rect x="362.9" y="787.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.9" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 1.28%)</title><rect x="362.9" y="771.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.9" y="782.0"></text>
</g>
<g>
<title>byte[] (20 samples, 1.28%)</title><rect x="362.9" y="755.0" width="15.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="365.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (14 samples, 0.89%)</title><rect x="378.0" y="819.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.89%)</title><rect x="378.0" y="803.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.0" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.89%)</title><rect x="378.0" y="787.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.0" y="798.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.89%)</title><rect x="378.0" y="771.0" width="10.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="381.0" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (144 samples, 9.18%)</title><rect x="388.5" y="835.0" width="108.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.5" y="846.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (144 samples, 9.18%)</title><rect x="388.5" y="819.0" width="108.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.5" y="830.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (144 samples, 9.18%)</title><rect x="388.5" y="803.0" width="108.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.5" y="814.0">org/rocksdb/u..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (144 samples, 9.18%)</title><rect x="388.5" y="787.0" width="108.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.5" y="798.0">org/rocksdb/u..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (144 samples, 9.18%)</title><rect x="388.5" y="771.0" width="108.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.5" y="782.0">org/rocksdb/A..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (144 samples, 9.18%)</title><rect x="388.5" y="755.0" width="108.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.5" y="766.0">org/rocksdb/S..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (144 samples, 9.18%)</title><rect x="388.5" y="739.0" width="108.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.5" y="750.0">org/rocksdb/S..</text>
</g>
<g>
<title>byte[] (144 samples, 9.18%)</title><rect x="388.5" y="723.0" width="108.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="391.5" y="734.0">byte[]</text>
</g>
<g>
<title>ru.mail.polis.dao.NoSuchElementLite (16 samples, 1.02%)</title><rect x="496.9" y="835.0" width="12.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="499.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.96%)</title><rect x="508.9" y="899.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.96%)</title><rect x="508.9" y="883.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.96%)</title><rect x="508.9" y="867.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.9" y="878.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.96%)</title><rect x="508.9" y="851.0" width="11.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="511.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (45 samples, 2.87%)</title><rect x="520.2" y="931.0" width="33.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.2" y="942.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.26%)</title><rect x="520.2" y="915.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="523.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (24 samples, 1.53%)</title><rect x="523.2" y="915.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.2" y="926.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 1.53%)</title><rect x="523.2" y="899.0" width="18.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="526.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 1.08%)</title><rect x="541.3" y="915.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.3" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 1.08%)</title><rect x="541.3" y="899.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.3" y="910.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.57%)</title><rect x="541.3" y="883.0" width="6.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="544.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.51%)</title><rect x="548.1" y="883.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.51%)</title><rect x="548.1" y="867.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.51%)</title><rect x="548.1" y="851.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.1" y="862.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="548.1" y="835.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="551.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.23%)</title><rect x="554.1" y="931.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.1" y="942.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.23%)</title><rect x="554.1" y="915.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.1" y="926.0">o..</text>
</g>
<g>
<title>char[] (28 samples, 1.79%)</title><rect x="554.1" y="899.0" width="21.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="557.1" y="910.0">c..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.45%)</title><rect x="575.2" y="899.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.45%)</title><rect x="575.2" y="883.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.45%)</title><rect x="575.2" y="867.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.2" y="878.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="575.2" y="851.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="578.2" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=40195] (399 samples, 25.45%)</title><rect x="580.4" y="1011.0" width="300.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="583.4" y="1022.0">[NIO Selector #3 tid=40195]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (399 samples, 25.45%)</title><rect x="580.4" y="995.0" width="300.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.4" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (18 samples, 1.15%)</title><rect x="580.4" y="979.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (4 samples, 0.26%)</title><rect x="580.4" y="963.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.4" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (4 samples, 0.26%)</title><rect x="580.4" y="947.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="583.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (14 samples, 0.89%)</title><rect x="583.4" y="963.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.89%)</title><rect x="583.4" y="947.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (14 samples, 0.89%)</title><rect x="583.4" y="931.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (14 samples, 0.89%)</title><rect x="583.4" y="915.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (14 samples, 0.89%)</title><rect x="583.4" y="899.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.89%)</title><rect x="583.4" y="883.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.89%)</title><rect x="583.4" y="867.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.89%)</title><rect x="583.4" y="851.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (14 samples, 0.89%)</title><rect x="583.4" y="835.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.4" y="846.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (14 samples, 0.89%)</title><rect x="583.4" y="819.0" width="10.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="586.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (381 samples, 24.30%)</title><rect x="594.0" y="979.0" width="286.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.0" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (381 samples, 24.30%)</title><rect x="594.0" y="963.0" width="286.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.0" y="974.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (381 samples, 24.30%)</title><rect x="594.0" y="947.0" width="286.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="958.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (322 samples, 20.54%)</title><rect x="594.0" y="931.0" width="242.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.0" y="942.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (322 samples, 20.54%)</title><rect x="594.0" y="915.0" width="242.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="926.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (311 samples, 19.83%)</title><rect x="594.0" y="899.0" width="234.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.0" y="910.0">RequestHandler0_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 1.79%)</title><rect x="594.0" y="883.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.0" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 1.79%)</title><rect x="594.0" y="867.0" width="21.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.0" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.77%)</title><rect x="594.0" y="851.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.77%)</title><rect x="594.0" y="835.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.0" y="846.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.77%)</title><rect x="594.0" y="819.0" width="9.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="597.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 1.02%)</title><rect x="603.0" y="851.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.0" y="862.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.51%)</title><rect x="603.0" y="835.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="606.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.51%)</title><rect x="609.0" y="835.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.51%)</title><rect x="609.0" y="819.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (8 samples, 0.51%)</title><rect x="609.0" y="803.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.51%)</title><rect x="609.0" y="787.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.0" y="798.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.51%)</title><rect x="609.0" y="771.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="612.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.26%)</title><rect x="615.1" y="883.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.26%)</title><rect x="615.1" y="867.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.26%)</title><rect x="615.1" y="851.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.1" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="615.1" y="835.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.1" y="846.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="615.1" y="819.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="618.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (279 samples, 17.79%)</title><rect x="618.1" y="883.0" width="209.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.1" y="894.0">ru/mail/polis/service/stake..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.26%)</title><rect x="618.1" y="867.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.26%)</title><rect x="618.1" y="851.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.26%)</title><rect x="618.1" y="835.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.1" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.26%)</title><rect x="618.1" y="819.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.1" y="830.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="618.1" y="803.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="621.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.57%)</title><rect x="621.1" y="867.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.57%)</title><rect x="621.1" y="851.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.1" y="862.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.57%)</title><rect x="621.1" y="835.0" width="6.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="624.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.get (266 samples, 16.96%)</title><rect x="627.8" y="867.0" width="200.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.8" y="878.0">ru/mail/polis/service/stak..</text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.57%)</title><rect x="627.8" y="851.0" width="6.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="630.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 1.02%)</title><rect x="634.6" y="851.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.6" y="862.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.64%)</title><rect x="634.6" y="835.0" width="7.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="637.6" y="846.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.19%)</title><rect x="642.1" y="835.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="645.1" y="846.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="644.4" y="835.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="647.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (241 samples, 15.37%)</title><rect x="646.7" y="851.0" width="181.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.7" y="862.0">ru/mail/polis/dao/Rocks..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.89%)</title><rect x="646.7" y="835.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (14 samples, 0.89%)</title><rect x="646.7" y="819.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.89%)</title><rect x="646.7" y="803.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.7" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.89%)</title><rect x="646.7" y="787.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.89%)</title><rect x="646.7" y="771.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.7" y="782.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.89%)</title><rect x="646.7" y="755.0" width="10.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="649.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (39 samples, 2.49%)</title><rect x="657.2" y="835.0" width="29.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.2" y="846.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (4 samples, 0.26%)</title><rect x="657.2" y="819.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.2" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.26%)</title><rect x="657.2" y="803.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.2" y="814.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="657.2" y="787.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="660.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (16 samples, 1.02%)</title><rect x="660.2" y="819.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.2" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (16 samples, 1.02%)</title><rect x="660.2" y="803.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.2" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (16 samples, 1.02%)</title><rect x="660.2" y="787.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.2" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 1.02%)</title><rect x="660.2" y="771.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.2" y="782.0"></text>
</g>
<g>
<title>byte[] (16 samples, 1.02%)</title><rect x="660.2" y="755.0" width="12.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="663.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (19 samples, 1.21%)</title><rect x="672.2" y="819.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 1.21%)</title><rect x="672.2" y="803.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.2" y="814.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="672.2" y="787.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="675.2" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 1.15%)</title><rect x="673.0" y="787.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.0" y="798.0"></text>
</g>
<g>
<title>byte[] (18 samples, 1.15%)</title><rect x="673.0" y="771.0" width="13.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="676.0" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (157 samples, 10.01%)</title><rect x="686.5" y="835.0" width="118.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.5" y="846.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (157 samples, 10.01%)</title><rect x="686.5" y="819.0" width="118.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.5" y="830.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (157 samples, 10.01%)</title><rect x="686.5" y="803.0" width="118.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.5" y="814.0">org/rocksdb/ut..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (157 samples, 10.01%)</title><rect x="686.5" y="787.0" width="118.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.5" y="798.0">org/rocksdb/ut..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (157 samples, 10.01%)</title><rect x="686.5" y="771.0" width="118.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.5" y="782.0">org/rocksdb/Ab..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (157 samples, 10.01%)</title><rect x="686.5" y="755.0" width="118.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.5" y="766.0">org/rocksdb/Sl..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (157 samples, 10.01%)</title><rect x="686.5" y="739.0" width="118.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.5" y="750.0">org/rocksdb/Sl..</text>
</g>
<g>
<title>byte[] (157 samples, 10.01%)</title><rect x="686.5" y="723.0" width="118.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="689.5" y="734.0">byte[]</text>
</g>
<g>
<title>ru.mail.polis.dao.NoSuchElementLite (31 samples, 1.98%)</title><rect x="804.7" y="835.0" width="23.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="807.7" y="846.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.70%)</title><rect x="828.0" y="899.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.70%)</title><rect x="828.0" y="883.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.70%)</title><rect x="828.0" y="867.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.0" y="878.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.70%)</title><rect x="828.0" y="851.0" width="8.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="831.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (46 samples, 2.93%)</title><rect x="836.3" y="931.0" width="34.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.3" y="942.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.51%)</title><rect x="836.3" y="915.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="839.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.70%)</title><rect x="842.3" y="915.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.3" y="926.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.70%)</title><rect x="842.3" y="899.0" width="8.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="845.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.72%)</title><rect x="850.6" y="915.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.6" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.72%)</title><rect x="850.6" y="899.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.6" y="910.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.89%)</title><rect x="850.6" y="883.0" width="10.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="853.6" y="894.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="861.1" y="883.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="864.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.77%)</title><rect x="861.9" y="883.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.77%)</title><rect x="861.9" y="867.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.77%)</title><rect x="861.9" y="851.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.9" y="862.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.77%)</title><rect x="861.9" y="835.0" width="9.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="864.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.83%)</title><rect x="870.9" y="931.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.83%)</title><rect x="870.9" y="915.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.9" y="926.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.64%)</title><rect x="870.9" y="899.0" width="7.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="873.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.19%)</title><rect x="878.4" y="899.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.19%)</title><rect x="878.4" y="883.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.19%)</title><rect x="878.4" y="867.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.4" y="878.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="878.4" y="851.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="881.4" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=38915] (356 samples, 22.70%)</title><rect x="880.7" y="1011.0" width="267.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="883.7" y="1022.0">[NIO Selector #5 tid=38915]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (356 samples, 22.70%)</title><rect x="880.7" y="995.0" width="267.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.7" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (11 samples, 0.70%)</title><rect x="880.7" y="979.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (8 samples, 0.51%)</title><rect x="880.7" y="963.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.7" y="974.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (1 samples, 0.06%)</title><rect x="880.7" y="947.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="883.7" y="958.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (7 samples, 0.45%)</title><rect x="881.5" y="947.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="884.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 0.19%)</title><rect x="886.7" y="963.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.19%)</title><rect x="886.7" y="947.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (3 samples, 0.19%)</title><rect x="886.7" y="931.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.7" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.19%)</title><rect x="886.7" y="915.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.19%)</title><rect x="886.7" y="899.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.19%)</title><rect x="886.7" y="883.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.19%)</title><rect x="886.7" y="867.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.7" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.19%)</title><rect x="886.7" y="851.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.19%)</title><rect x="886.7" y="835.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="846.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.19%)</title><rect x="886.7" y="819.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="889.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (345 samples, 22.00%)</title><rect x="889.0" y="979.0" width="259.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.0" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (345 samples, 22.00%)</title><rect x="889.0" y="963.0" width="259.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.0" y="974.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (345 samples, 22.00%)</title><rect x="889.0" y="947.0" width="259.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.0" y="958.0">one/nio/http/HttpSession.processHtt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (282 samples, 17.98%)</title><rect x="889.0" y="931.0" width="212.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.0" y="942.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (282 samples, 17.98%)</title><rect x="889.0" y="915.0" width="212.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.0" y="926.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (279 samples, 17.79%)</title><rect x="889.0" y="899.0" width="209.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.0" y="910.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 2.93%)</title><rect x="889.0" y="883.0" width="34.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.0" y="894.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 2.93%)</title><rect x="889.0" y="867.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.0" y="878.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.51%)</title><rect x="889.0" y="851.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.51%)</title><rect x="889.0" y="835.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.0" y="846.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.51%)</title><rect x="889.0" y="819.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="892.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 2.42%)</title><rect x="895.0" y="851.0" width="28.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.0" y="862.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.26%)</title><rect x="895.0" y="835.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="898.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 2.17%)</title><rect x="898.0" y="835.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.0" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 2.17%)</title><rect x="898.0" y="819.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.0" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (34 samples, 2.17%)</title><rect x="898.0" y="803.0" width="25.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.0" y="814.0">o..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 2.17%)</title><rect x="898.0" y="787.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.0" y="798.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 2.17%)</title><rect x="898.0" y="771.0" width="25.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="901.0" y="782.0">j..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.26%)</title><rect x="923.6" y="883.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.26%)</title><rect x="923.6" y="867.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.26%)</title><rect x="923.6" y="851.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.6" y="862.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="923.6" y="835.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="926.6" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.19%)</title><rect x="924.3" y="835.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.3" y="846.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.19%)</title><rect x="924.3" y="819.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="927.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (229 samples, 14.60%)</title><rect x="926.6" y="883.0" width="172.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.6" y="894.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.38%)</title><rect x="926.6" y="867.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.38%)</title><rect x="926.6" y="851.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.38%)</title><rect x="926.6" y="835.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.6" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.38%)</title><rect x="926.6" y="819.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.6" y="830.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.38%)</title><rect x="926.6" y="803.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="929.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.51%)</title><rect x="931.1" y="867.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.51%)</title><rect x="931.1" y="851.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.1" y="862.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.51%)</title><rect x="931.1" y="835.0" width="6.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.get (215 samples, 13.71%)</title><rect x="937.1" y="867.0" width="161.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.1" y="878.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.38%)</title><rect x="937.1" y="851.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="940.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.83%)</title><rect x="941.7" y="851.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.7" y="862.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.32%)</title><rect x="941.7" y="835.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="944.7" y="846.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.26%)</title><rect x="945.4" y="835.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="948.4" y="846.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="948.4" y="835.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="951.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (196 samples, 12.50%)</title><rect x="951.4" y="851.0" width="147.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.4" y="862.0">ru/mail/polis/dao/R..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.77%)</title><rect x="951.4" y="835.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (12 samples, 0.77%)</title><rect x="951.4" y="819.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.77%)</title><rect x="951.4" y="803.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.77%)</title><rect x="951.4" y="787.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.77%)</title><rect x="951.4" y="771.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.4" y="782.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.77%)</title><rect x="951.4" y="755.0" width="9.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="954.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (45 samples, 2.87%)</title><rect x="960.5" y="835.0" width="33.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.5" y="846.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (26 samples, 1.66%)</title><rect x="960.5" y="819.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.5" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (26 samples, 1.66%)</title><rect x="960.5" y="803.0" width="19.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.5" y="814.0"></text>
</g>
<g>
<title>byte[] (26 samples, 1.66%)</title><rect x="960.5" y="787.0" width="19.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="963.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (12 samples, 0.77%)</title><rect x="980.0" y="819.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.0" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.77%)</title><rect x="980.0" y="803.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.0" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.77%)</title><rect x="980.0" y="787.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.0" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.77%)</title><rect x="980.0" y="771.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.0" y="782.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.77%)</title><rect x="980.0" y="755.0" width="9.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="983.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (7 samples, 0.45%)</title><rect x="989.1" y="819.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.45%)</title><rect x="989.1" y="803.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.1" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.45%)</title><rect x="989.1" y="787.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.1" y="798.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="989.1" y="771.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="992.1" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (134 samples, 8.55%)</title><rect x="994.3" y="835.0" width="100.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.3" y="846.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (134 samples, 8.55%)</title><rect x="994.3" y="819.0" width="100.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.3" y="830.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (134 samples, 8.55%)</title><rect x="994.3" y="803.0" width="100.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.3" y="814.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (134 samples, 8.55%)</title><rect x="994.3" y="787.0" width="100.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.3" y="798.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (134 samples, 8.55%)</title><rect x="994.3" y="771.0" width="100.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.3" y="782.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (134 samples, 8.55%)</title><rect x="994.3" y="755.0" width="100.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.3" y="766.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (134 samples, 8.55%)</title><rect x="994.3" y="739.0" width="100.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.3" y="750.0">org/rocksdb/..</text>
</g>
<g>
<title>byte[] (134 samples, 8.55%)</title><rect x="994.3" y="723.0" width="100.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="997.3" y="734.0">byte[]</text>
</g>
<g>
<title>ru.mail.polis.dao.NoSuchElementLite (5 samples, 0.32%)</title><rect x="1095.2" y="835.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1098.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.19%)</title><rect x="1098.9" y="899.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.19%)</title><rect x="1098.9" y="883.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.19%)</title><rect x="1098.9" y="867.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.9" y="878.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.19%)</title><rect x="1098.9" y="851.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1101.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 1.79%)</title><rect x="1101.2" y="931.0" width="21.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.2" y="942.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.06%)</title><rect x="1101.2" y="915.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1104.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.70%)</title><rect x="1102.0" y="915.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.0" y="926.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.70%)</title><rect x="1102.0" y="899.0" width="8.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1105.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 1.02%)</title><rect x="1110.2" y="915.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.2" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 1.02%)</title><rect x="1110.2" y="899.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.2" y="910.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.32%)</title><rect x="1110.2" y="883.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1113.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="1114.0" y="883.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.70%)</title><rect x="1114.0" y="867.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.70%)</title><rect x="1114.0" y="851.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.0" y="862.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.70%)</title><rect x="1114.0" y="835.0" width="8.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1117.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.23%)</title><rect x="1122.3" y="931.0" width="26.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.3" y="942.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.23%)</title><rect x="1122.3" y="915.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.3" y="926.0">o..</text>
</g>
<g>
<title>char[] (3 samples, 0.19%)</title><rect x="1122.3" y="899.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1125.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 2.04%)</title><rect x="1124.5" y="899.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.5" y="910.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 2.04%)</title><rect x="1124.5" y="883.0" width="24.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.5" y="894.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 2.04%)</title><rect x="1124.5" y="867.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.5" y="878.0">j..</text>
</g>
<g>
<title>byte[] (32 samples, 2.04%)</title><rect x="1124.5" y="851.0" width="24.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1127.5" y="862.0">b..</text>
</g>
<g>
<title>[RMI TCP Connection(5)-127.0.0.1 tid=29195] (55 samples, 3.51%)</title><rect x="1148.6" y="1011.0" width="41.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1151.6" y="1022.0">[RM..</text>
</g>
<g>
<title>java/lang/Thread.run (55 samples, 3.51%)</title><rect x="1148.6" y="995.0" width="41.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.6" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (55 samples, 3.51%)</title><rect x="1148.6" y="979.0" width="41.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.6" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (55 samples, 3.51%)</title><rect x="1148.6" y="963.0" width="41.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.6" y="974.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (55 samples, 3.51%)</title><rect x="1148.6" y="947.0" width="41.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.6" y="958.0">sun..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (55 samples, 3.51%)</title><rect x="1148.6" y="931.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1151.6" y="942.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$97/249391321.run (55 samples, 3.51%)</title><rect x="1148.6" y="915.0" width="41.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.6" y="926.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (55 samples, 3.51%)</title><rect x="1148.6" y="899.0" width="41.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.6" y="910.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (55 samples, 3.51%)</title><rect x="1148.6" y="883.0" width="41.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.6" y="894.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (55 samples, 3.51%)</title><rect x="1148.6" y="867.0" width="41.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.6" y="878.0">sun..</text>
</g>
<g>
<title>java.io.DataOutputStream (4 samples, 0.26%)</title><rect x="1148.6" y="851.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1151.6" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (51 samples, 3.25%)</title><rect x="1151.6" y="851.0" width="38.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.6" y="862.0">sun..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 2.10%)</title><rect x="1151.6" y="835.0" width="24.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1154.6" y="846.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (33 samples, 2.10%)</title><rect x="1151.6" y="819.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.6" y="830.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (33 samples, 2.10%)</title><rect x="1151.6" y="803.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.6" y="814.0">s..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (33 samples, 2.10%)</title><rect x="1151.6" y="787.0" width="24.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.6" y="798.0">s..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 1.08%)</title><rect x="1151.6" y="771.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 1.08%)</title><rect x="1151.6" y="755.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor31.invoke (1 samples, 0.06%)</title><rect x="1151.6" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.06%)</title><rect x="1151.6" y="723.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.6" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.06%)</title><rect x="1151.6" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.6" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.06%)</title><rect x="1151.6" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.6" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.06%)</title><rect x="1151.6" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.6" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (1 samples, 0.06%)</title><rect x="1151.6" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.6" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (1 samples, 0.06%)</title><rect x="1151.6" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.6" y="654.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (1 samples, 0.06%)</title><rect x="1151.6" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.6" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.06%)</title><rect x="1151.6" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.6" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.06%)</title><rect x="1151.6" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.6" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.06%)</title><rect x="1151.6" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.6" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.06%)</title><rect x="1151.6" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.6" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.06%)</title><rect x="1151.6" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.6" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.06%)</title><rect x="1151.6" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.6" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.06%)</title><rect x="1151.6" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.6" y="526.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.06%)</title><rect x="1151.6" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="1151.6" y="483.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1154.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (16 samples, 1.02%)</title><rect x="1152.4" y="739.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.4" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (16 samples, 1.02%)</title><rect x="1152.4" y="723.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.4" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (13 samples, 0.83%)</title><rect x="1152.4" y="707.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.4" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (13 samples, 0.83%)</title><rect x="1152.4" y="691.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.4" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (13 samples, 0.83%)</title><rect x="1152.4" y="675.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.4" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (13 samples, 0.83%)</title><rect x="1152.4" y="659.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.4" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (13 samples, 0.83%)</title><rect x="1152.4" y="643.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.4" y="654.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (13 samples, 0.83%)</title><rect x="1152.4" y="627.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.4" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (13 samples, 0.83%)</title><rect x="1152.4" y="611.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.4" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (13 samples, 0.83%)</title><rect x="1152.4" y="595.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.4" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (13 samples, 0.83%)</title><rect x="1152.4" y="579.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.4" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (13 samples, 0.83%)</title><rect x="1152.4" y="563.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.4" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (13 samples, 0.83%)</title><rect x="1152.4" y="547.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.4" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (13 samples, 0.83%)</title><rect x="1152.4" y="531.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.4" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (13 samples, 0.83%)</title><rect x="1152.4" y="515.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.4" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.83%)</title><rect x="1152.4" y="499.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (13 samples, 0.83%)</title><rect x="1152.4" y="483.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.4" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.83%)</title><rect x="1152.4" y="467.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.4" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (13 samples, 0.83%)</title><rect x="1152.4" y="451.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.4" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.26%)</title><rect x="1152.4" y="435.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.4" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.26%)</title><rect x="1152.4" y="419.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.4" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.26%)</title><rect x="1152.4" y="403.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.4" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.26%)</title><rect x="1152.4" y="387.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="1152.4" y="371.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1155.4" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1153.1" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.1" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.06%)</title><rect x="1153.1" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="1153.1" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.1" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.06%)</title><rect x="1153.1" y="323.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1156.1" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.13%)</title><rect x="1153.9" y="371.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.13%)</title><rect x="1153.9" y="355.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1156.9" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.26%)</title><rect x="1155.4" y="435.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.4" y="446.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (4 samples, 0.26%)</title><rect x="1155.4" y="419.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.26%)</title><rect x="1155.4" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.4" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.26%)</title><rect x="1155.4" y="387.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1158.4" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (5 samples, 0.32%)</title><rect x="1158.4" y="435.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.26%)</title><rect x="1158.4" y="419.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1161.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.4" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (1 samples, 0.06%)</title><rect x="1161.4" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.4" y="334.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (1 samples, 0.06%)</title><rect x="1161.4" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.4" y="318.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.06%)</title><rect x="1161.4" y="291.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1164.4" y="302.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.19%)</title><rect x="1162.2" y="707.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.13%)</title><rect x="1162.2" y="691.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.2" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (2 samples, 0.13%)</title><rect x="1162.2" y="675.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.2" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (2 samples, 0.13%)</title><rect x="1162.2" y="659.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.2" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1162.2" y="643.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1162.2" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1162.2" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Module (1 samples, 0.06%)</title><rect x="1162.2" y="595.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1165.2" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1162.9" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1162.9" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1165.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1162.9" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.9" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.06%)</title><rect x="1162.9" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="1162.9" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="1162.9" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.9" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="1162.9" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="1162.9" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.9" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="1162.9" y="499.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1165.9" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.06%)</title><rect x="1163.7" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.7" y="702.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.06%)</title><rect x="1163.7" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.06%)</title><rect x="1163.7" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.06%)</title><rect x="1163.7" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.06%)</title><rect x="1163.7" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.06%)</title><rect x="1163.7" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.06%)</title><rect x="1163.7" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.06%)</title><rect x="1163.7" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.06%)</title><rect x="1163.7" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.06%)</title><rect x="1163.7" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.7" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.06%)</title><rect x="1163.7" y="531.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1166.7" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (10 samples, 0.64%)</title><rect x="1164.4" y="771.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (10 samples, 0.64%)</title><rect x="1164.4" y="755.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.4" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.64%)</title><rect x="1164.4" y="739.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.4" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (10 samples, 0.64%)</title><rect x="1164.4" y="723.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.64%)</title><rect x="1164.4" y="707.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.64%)</title><rect x="1164.4" y="691.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.64%)</title><rect x="1164.4" y="675.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.64%)</title><rect x="1164.4" y="659.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.64%)</title><rect x="1164.4" y="643.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.64%)</title><rect x="1164.4" y="627.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.06%)</title><rect x="1164.4" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.06%)</title><rect x="1164.4" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.4" y="606.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="1164.4" y="579.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1167.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.57%)</title><rect x="1165.2" y="611.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="1165.2" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="1165.2" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="1165.2" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1165.2" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.06%)</title><rect x="1165.2" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.2" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1165.2" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="1165.2" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.06%)</title><rect x="1165.2" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.06%)</title><rect x="1165.2" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.06%)</title><rect x="1165.2" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="1165.2" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="1165.2" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1165.2" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="1165.2" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="1165.2" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="1165.2" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1165.2" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.2" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="1165.2" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.2" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="1165.2" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="1165.2" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1165.2" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.06%)</title><rect x="1165.2" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.2" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1165.2" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="1165.2" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.06%)</title><rect x="1165.2" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.06%)</title><rect x="1165.2" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.2" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.06%)</title><rect x="1165.2" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.2" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="1165.2" y="163.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.2" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="1165.2" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1165.2" y="131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.2" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="1165.2" y="115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.2" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="1165.2" y="99.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.2" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="1165.2" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.2" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1165.2" y="67.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.2" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.06%)</title><rect x="1165.2" y="51.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="1165.2" y="35.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1168.2" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (8 samples, 0.51%)</title><rect x="1165.9" y="595.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.9" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.51%)</title><rect x="1165.9" y="579.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.51%)</title><rect x="1165.9" y="563.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (8 samples, 0.51%)</title><rect x="1165.9" y="547.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (8 samples, 0.51%)</title><rect x="1165.9" y="531.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (8 samples, 0.51%)</title><rect x="1165.9" y="515.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (8 samples, 0.51%)</title><rect x="1165.9" y="499.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.19%)</title><rect x="1165.9" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.06%)</title><rect x="1165.9" y="467.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.06%)</title><rect x="1165.9" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.9" y="462.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="1165.9" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1168.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.13%)</title><rect x="1166.7" y="467.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.13%)</title><rect x="1166.7" y="451.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.13%)</title><rect x="1166.7" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.13%)</title><rect x="1166.7" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.13%)</title><rect x="1166.7" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.13%)</title><rect x="1166.7" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.13%)</title><rect x="1166.7" y="371.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.13%)</title><rect x="1166.7" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.7" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.13%)</title><rect x="1166.7" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.13%)</title><rect x="1166.7" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.13%)</title><rect x="1166.7" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.13%)</title><rect x="1166.7" y="291.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.13%)</title><rect x="1166.7" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.13%)</title><rect x="1166.7" y="259.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.13%)</title><rect x="1166.7" y="243.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.7" y="254.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.13%)</title><rect x="1166.7" y="227.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1169.7" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.13%)</title><rect x="1168.2" y="483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.06%)</title><rect x="1168.2" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.06%)</title><rect x="1168.2" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.2" y="462.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="1168.2" y="435.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1171.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="1168.9" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="1168.9" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="1168.9" y="435.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1171.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.19%)</title><rect x="1169.7" y="483.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.7" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.19%)</title><rect x="1169.7" y="467.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1172.7" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (4 samples, 0.26%)</title><rect x="1171.9" y="771.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (4 samples, 0.26%)</title><rect x="1171.9" y="755.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1174.9" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (4 samples, 0.26%)</title><rect x="1171.9" y="739.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (4 samples, 0.26%)</title><rect x="1171.9" y="723.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (4 samples, 0.26%)</title><rect x="1171.9" y="707.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.06%)</title><rect x="1171.9" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.06%)</title><rect x="1171.9" y="675.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.06%)</title><rect x="1171.9" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.06%)</title><rect x="1171.9" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.9" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectStreamField (1 samples, 0.06%)</title><rect x="1171.9" y="627.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1174.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (3 samples, 0.19%)</title><rect x="1172.7" y="691.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (1 samples, 0.06%)</title><rect x="1172.7" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (1 samples, 0.06%)</title><rect x="1172.7" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1172.7" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1172.7" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1175.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="1172.7" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1175.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="1172.7" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.7" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.06%)</title><rect x="1172.7" y="579.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1175.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.13%)</title><rect x="1173.4" y="675.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.4" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.13%)</title><rect x="1173.4" y="659.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.13%)</title><rect x="1173.4" y="643.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (2 samples, 0.13%)</title><rect x="1173.4" y="627.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.4" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (2 samples, 0.13%)</title><rect x="1173.4" y="611.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.13%)</title><rect x="1173.4" y="595.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.13%)</title><rect x="1173.4" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.13%)</title><rect x="1173.4" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.13%)</title><rect x="1173.4" y="547.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.13%)</title><rect x="1173.4" y="531.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.13%)</title><rect x="1173.4" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.4" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.06%)</title><rect x="1173.4" y="499.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1176.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="1174.2" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1174.2" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="1174.2" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.2" y="478.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="1174.2" y="451.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1177.2" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (2 samples, 0.13%)</title><rect x="1174.9" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.9" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (2 samples, 0.13%)</title><rect x="1174.9" y="755.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.9" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.9" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.9" y="750.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.9" y="723.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.9" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.9" y="707.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.9" y="691.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.9" y="675.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.9" y="686.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="1174.9" y="659.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1177.9" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (18 samples, 1.15%)</title><rect x="1176.5" y="835.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.5" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (18 samples, 1.15%)</title><rect x="1176.5" y="819.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.5" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (18 samples, 1.15%)</title><rect x="1176.5" y="803.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.5" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (18 samples, 1.15%)</title><rect x="1176.5" y="787.0" width="13.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.5" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (17 samples, 1.08%)</title><rect x="1176.5" y="771.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.5" y="782.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.45%)</title><rect x="1176.5" y="755.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1179.5" y="766.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.57%)</title><rect x="1181.7" y="755.0" width="6.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1184.7" y="766.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1188.5" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="1188.5" y="739.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.2" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (1 samples, 0.06%)</title><rect x="1189.2" y="755.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1192.2" y="766.0"></text>
</g>
</g>
</svg>
