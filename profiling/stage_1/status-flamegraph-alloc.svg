<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="869"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="869"> </text>
<g id="frames">
<g>
<title>all (152 samples, 100.00%)</title><rect x="10.0" y="835.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="846.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 30 tid=35331] (4 samples, 2.63%)</title><rect x="10.0" y="819.0" width="31.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="830.0">[J..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.63%)</title><rect x="10.0" y="803.0" width="31.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="814.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (4 samples, 2.63%)</title><rect x="10.0" y="787.0" width="31.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="798.0">co..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (4 samples, 2.63%)</title><rect x="10.0" y="771.0" width="31.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="782.0">co..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/767414920.linkToTargetMethod (4 samples, 2.63%)</title><rect x="10.0" y="755.0" width="31.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/443637230.invoke (4 samples, 2.63%)</title><rect x="10.0" y="739.0" width="31.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="750.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 2.63%)</title><rect x="10.0" y="723.0" width="31.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="734.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 2.63%)</title><rect x="10.0" y="707.0" width="31.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="718.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 2.63%)</title><rect x="10.0" y="691.0" width="31.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="702.0">jd..</text>
</g>
<g>
<title>byte[] (4 samples, 2.63%)</title><rect x="10.0" y="675.0" width="31.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="686.0">by..</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=37379] (2 samples, 1.32%)</title><rect x="41.1" y="819.0" width="15.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="44.1" y="830.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (2 samples, 1.32%)</title><rect x="41.1" y="803.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.66%)</title><rect x="41.1" y="787.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.66%)</title><rect x="41.1" y="771.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (1 samples, 0.66%)</title><rect x="41.1" y="755.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.1" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.66%)</title><rect x="41.1" y="739.0" width="7.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="44.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.66%)</title><rect x="48.8" y="787.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.8" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.66%)</title><rect x="48.8" y="771.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.66%)</title><rect x="48.8" y="755.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.66%)</title><rect x="48.8" y="739.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.66%)</title><rect x="48.8" y="723.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.66%)</title><rect x="48.8" y="707.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.8" y="718.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.66%)</title><rect x="48.8" y="691.0" width="7.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="51.8" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=41219] (1 samples, 0.66%)</title><rect x="56.6" y="819.0" width="7.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="59.6" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1 samples, 0.66%)</title><rect x="56.6" y="803.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.66%)</title><rect x="56.6" y="787.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.66%)</title><rect x="56.6" y="771.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.6" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.66%)</title><rect x="56.6" y="755.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.66%)</title><rect x="56.6" y="739.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.6" y="750.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.66%)</title><rect x="56.6" y="723.0" width="7.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="59.6" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=40451] (134 samples, 88.16%)</title><rect x="64.3" y="819.0" width="1040.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="67.3" y="830.0">[NIO Selector #1 tid=40451]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (134 samples, 88.16%)</title><rect x="64.3" y="803.0" width="1040.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.3" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (17 samples, 11.18%)</title><rect x="64.3" y="787.0" width="132.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.3" y="798.0">one/nio/net/Java..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (11 samples, 7.24%)</title><rect x="64.3" y="771.0" width="85.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="782.0">one/nio/ne..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (3 samples, 1.97%)</title><rect x="64.3" y="755.0" width="23.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="67.3" y="766.0">o..</text>
</g>
<g>
<title>one.nio.net.Session[] (8 samples, 5.26%)</title><rect x="87.6" y="755.0" width="62.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="90.6" y="766.0">one.ni..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.66%)</title><rect x="149.7" y="771.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.7" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.66%)</title><rect x="149.7" y="755.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.66%)</title><rect x="149.7" y="739.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.7" y="750.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.66%)</title><rect x="149.7" y="723.0" width="7.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="152.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (5 samples, 3.29%)</title><rect x="157.5" y="771.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="782.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 3.29%)</title><rect x="157.5" y="755.0" width="38.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.5" y="766.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (5 samples, 3.29%)</title><rect x="157.5" y="739.0" width="38.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.5" y="750.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 3.29%)</title><rect x="157.5" y="723.0" width="38.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.5" y="734.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 3.29%)</title><rect x="157.5" y="707.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="718.0">sun..</text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 3.29%)</title><rect x="157.5" y="691.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="702.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 3.29%)</title><rect x="157.5" y="675.0" width="38.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.5" y="686.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 3.29%)</title><rect x="157.5" y="659.0" width="38.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.5" y="670.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 3.29%)</title><rect x="157.5" y="643.0" width="38.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.5" y="654.0">jav..</text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 3.29%)</title><rect x="157.5" y="627.0" width="38.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="160.5" y="638.0">jav..</text>
</g>
<g>
<title>one/nio/net/Session.process (117 samples, 76.97%)</title><rect x="196.3" y="787.0" width="908.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.3" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (117 samples, 76.97%)</title><rect x="196.3" y="771.0" width="908.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (117 samples, 76.97%)</title><rect x="196.3" y="755.0" width="908.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.3" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (48 samples, 31.58%)</title><rect x="196.3" y="739.0" width="372.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.3" y="750.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (48 samples, 31.58%)</title><rect x="196.3" y="723.0" width="372.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.3" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_status.handleRequest (48 samples, 31.58%)</title><rect x="196.3" y="707.0" width="372.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.3" y="718.0">RequestHandler1_status.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 20.39%)</title><rect x="196.3" y="691.0" width="240.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.3" y="702.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 20.39%)</title><rect x="196.3" y="675.0" width="240.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.3" y="686.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 11.84%)</title><rect x="196.3" y="659.0" width="139.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.3" y="670.0">one/nio/http/Resp..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (18 samples, 11.84%)</title><rect x="196.3" y="643.0" width="139.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.3" y="654.0">one/nio/util/Byte..</text>
</g>
<g>
<title>byte[] (18 samples, 11.84%)</title><rect x="196.3" y="627.0" width="139.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="199.3" y="638.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 8.55%)</title><rect x="336.1" y="659.0" width="100.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.1" y="670.0">one/nio/net/..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 4.61%)</title><rect x="336.1" y="643.0" width="54.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="339.1" y="654.0">one.n..</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 3.95%)</title><rect x="390.4" y="643.0" width="46.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.4" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 3.95%)</title><rect x="390.4" y="627.0" width="46.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.4" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (6 samples, 3.95%)</title><rect x="390.4" y="611.0" width="46.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.4" y="622.0">one/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 3.95%)</title><rect x="390.4" y="595.0" width="46.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.4" y="606.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 3.95%)</title><rect x="390.4" y="579.0" width="46.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="393.4" y="590.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.status (17 samples, 11.18%)</title><rect x="437.0" y="691.0" width="131.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.0" y="702.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Response.ok (17 samples, 11.18%)</title><rect x="437.0" y="675.0" width="131.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.0" y="686.0">one/nio/http/Res..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 11.18%)</title><rect x="437.0" y="659.0" width="131.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.0" y="670.0">one/nio/http/Res..</text>
</g>
<g>
<title>java.lang.String[] (17 samples, 11.18%)</title><rect x="437.0" y="643.0" width="131.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="440.0" y="654.0">java.lang.String[]</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (42 samples, 27.63%)</title><rect x="568.9" y="739.0" width="326.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.9" y="750.0">one/nio/http/HttpSession.parseRequest</text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 1.97%)</title><rect x="568.9" y="723.0" width="23.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.9" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 9.87%)</title><rect x="592.2" y="723.0" width="116.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.2" y="734.0">one/nio/http/R..</text>
</g>
<g>
<title>java.lang.String[] (15 samples, 9.87%)</title><rect x="592.2" y="707.0" width="116.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="595.2" y="718.0">java.lang.Stri..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 15.79%)</title><rect x="708.7" y="723.0" width="186.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.7" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 15.79%)</title><rect x="708.7" y="707.0" width="186.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.7" y="718.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (7 samples, 4.61%)</title><rect x="708.7" y="691.0" width="54.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="711.7" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (14 samples, 9.21%)</title><rect x="763.0" y="691.0" width="108.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="766.0" y="702.0">java.lang.Str..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.97%)</title><rect x="871.7" y="691.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.7" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.97%)</title><rect x="871.7" y="675.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.7" y="686.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 1.97%)</title><rect x="871.7" y="659.0" width="23.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.7" y="670.0">j..</text>
</g>
<g>
<title>byte[] (3 samples, 1.97%)</title><rect x="871.7" y="643.0" width="23.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="874.7" y="654.0">b..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 17.76%)</title><rect x="895.0" y="739.0" width="209.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.0" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 17.76%)</title><rect x="895.0" y="723.0" width="209.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.0" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (10 samples, 6.58%)</title><rect x="895.0" y="707.0" width="77.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="898.0" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.66%)</title><rect x="972.6" y="707.0" width="7.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="975.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 10.53%)</title><rect x="980.4" y="707.0" width="124.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.4" y="718.0">java/lang/Strin..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 10.53%)</title><rect x="980.4" y="691.0" width="124.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.4" y="702.0">java/lang/Strin..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 10.53%)</title><rect x="980.4" y="675.0" width="124.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.4" y="686.0">java/lang/Strin..</text>
</g>
<g>
<title>byte[] (16 samples, 10.53%)</title><rect x="980.4" y="659.0" width="124.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="983.4" y="670.0">byte[]</text>
</g>
<g>
<title>[RMI TCP Connection(19)-127.0.0.1 tid=36127] (11 samples, 7.24%)</title><rect x="1104.6" y="819.0" width="85.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1107.6" y="830.0">[RMI TCP C..</text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 7.24%)</title><rect x="1104.6" y="803.0" width="85.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.6" y="814.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 7.24%)</title><rect x="1104.6" y="787.0" width="85.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.6" y="798.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 7.24%)</title><rect x="1104.6" y="771.0" width="85.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.6" y="782.0">java/util/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (11 samples, 7.24%)</title><rect x="1104.6" y="755.0" width="85.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.6" y="766.0">sun/rmi/tr..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 7.24%)</title><rect x="1104.6" y="739.0" width="85.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.6" y="750.0">java/secur..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$97/249391321.run (11 samples, 7.24%)</title><rect x="1104.6" y="723.0" width="85.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1107.6" y="734.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (11 samples, 7.24%)</title><rect x="1104.6" y="707.0" width="85.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1107.6" y="718.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (11 samples, 7.24%)</title><rect x="1104.6" y="691.0" width="85.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.6" y="702.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (11 samples, 7.24%)</title><rect x="1104.6" y="675.0" width="85.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.6" y="686.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (11 samples, 7.24%)</title><rect x="1104.6" y="659.0" width="85.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.6" y="670.0">sun/rmi/tr..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 7.24%)</title><rect x="1104.6" y="643.0" width="85.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.6" y="654.0">java/secur..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 7.24%)</title><rect x="1104.6" y="627.0" width="85.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.6" y="638.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11 samples, 7.24%)</title><rect x="1104.6" y="611.0" width="85.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.6" y="622.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (11 samples, 7.24%)</title><rect x="1104.6" y="595.0" width="85.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.6" y="606.0">sun/rmi/se..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 6.58%)</title><rect x="1104.6" y="579.0" width="77.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.6" y="590.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 6.58%)</title><rect x="1104.6" y="563.0" width="77.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.6" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (10 samples, 6.58%)</title><rect x="1104.6" y="547.0" width="77.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.6" y="558.0">jdk/inter..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (10 samples, 6.58%)</title><rect x="1104.6" y="531.0" width="77.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.6" y="542.0">javax/man..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (7 samples, 4.61%)</title><rect x="1104.6" y="515.0" width="54.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.6" y="526.0">javax..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (7 samples, 4.61%)</title><rect x="1104.6" y="499.0" width="54.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.6" y="510.0">javax..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (7 samples, 4.61%)</title><rect x="1104.6" y="483.0" width="54.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.6" y="494.0">javax..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (7 samples, 4.61%)</title><rect x="1104.6" y="467.0" width="54.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.6" y="478.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (7 samples, 4.61%)</title><rect x="1104.6" y="451.0" width="54.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.6" y="462.0">com/s..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (7 samples, 4.61%)</title><rect x="1104.6" y="435.0" width="54.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.6" y="446.0">javax..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (7 samples, 4.61%)</title><rect x="1104.6" y="419.0" width="54.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.6" y="430.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (7 samples, 4.61%)</title><rect x="1104.6" y="403.0" width="54.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.6" y="414.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (7 samples, 4.61%)</title><rect x="1104.6" y="387.0" width="54.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.6" y="398.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (7 samples, 4.61%)</title><rect x="1104.6" y="371.0" width="54.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.6" y="382.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (7 samples, 4.61%)</title><rect x="1104.6" y="355.0" width="54.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.6" y="366.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (7 samples, 4.61%)</title><rect x="1104.6" y="339.0" width="54.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.6" y="350.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (7 samples, 4.61%)</title><rect x="1104.6" y="323.0" width="54.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.6" y="334.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 4.61%)</title><rect x="1104.6" y="307.0" width="54.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.6" y="318.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (7 samples, 4.61%)</title><rect x="1104.6" y="291.0" width="54.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.6" y="302.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 4.61%)</title><rect x="1104.6" y="275.0" width="54.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.6" y="286.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (7 samples, 4.61%)</title><rect x="1104.6" y="259.0" width="54.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.6" y="270.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 1.32%)</title><rect x="1104.6" y="243.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.6" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 1.32%)</title><rect x="1104.6" y="227.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.6" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 1.32%)</title><rect x="1104.6" y="211.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.6" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 1.32%)</title><rect x="1104.6" y="195.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.6" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.66%)</title><rect x="1104.6" y="179.0" width="7.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1107.6" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.66%)</title><rect x="1112.4" y="179.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.4" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.66%)</title><rect x="1112.4" y="163.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.4" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.66%)</title><rect x="1112.4" y="147.0" width="7.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1115.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.66%)</title><rect x="1120.1" y="243.0" width="7.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1123.1" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 2.63%)</title><rect x="1127.9" y="243.0" width="31.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.9" y="254.0">ja..</text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (4 samples, 2.63%)</title><rect x="1127.9" y="227.0" width="31.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.9" y="238.0">ja..</text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.66%)</title><rect x="1127.9" y="211.0" width="7.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1130.9" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 1.97%)</title><rect x="1135.7" y="211.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.7" y="222.0">j..</text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 1.97%)</title><rect x="1135.7" y="195.0" width="23.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1138.7" y="206.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 1.97%)</title><rect x="1158.9" y="515.0" width="23.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.9" y="526.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 1.97%)</title><rect x="1158.9" y="499.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.9" y="510.0">j..</text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (3 samples, 1.97%)</title><rect x="1158.9" y="483.0" width="23.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.9" y="494.0">j..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 1.97%)</title><rect x="1158.9" y="467.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.9" y="478.0">j..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 1.97%)</title><rect x="1158.9" y="451.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.9" y="462.0">j..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 1.97%)</title><rect x="1158.9" y="435.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.9" y="446.0">j..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 1.97%)</title><rect x="1158.9" y="419.0" width="23.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.9" y="430.0">j..</text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 1.32%)</title><rect x="1158.9" y="403.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 1.32%)</title><rect x="1158.9" y="387.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (2 samples, 1.32%)</title><rect x="1158.9" y="371.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.66%)</title><rect x="1158.9" y="355.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.9" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.66%)</title><rect x="1158.9" y="339.0" width="7.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1161.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.66%)</title><rect x="1166.7" y="355.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.66%)</title><rect x="1166.7" y="339.0" width="7.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1169.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.66%)</title><rect x="1174.5" y="403.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.66%)</title><rect x="1174.5" y="387.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.66%)</title><rect x="1174.5" y="371.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.66%)</title><rect x="1174.5" y="355.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.66%)</title><rect x="1174.5" y="339.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.66%)</title><rect x="1174.5" y="323.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.5" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.66%)</title><rect x="1174.5" y="307.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.5" y="318.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.66%)</title><rect x="1174.5" y="291.0" width="7.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1177.5" y="302.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (1 samples, 0.66%)</title><rect x="1182.2" y="579.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.66%)</title><rect x="1182.2" y="563.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.66%)</title><rect x="1182.2" y="547.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.66%)</title><rect x="1182.2" y="531.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.66%)</title><rect x="1182.2" y="515.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.66%)</title><rect x="1182.2" y="499.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.66%)</title><rect x="1182.2" y="483.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.66%)</title><rect x="1182.2" y="467.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.66%)</title><rect x="1182.2" y="451.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.66%)</title><rect x="1182.2" y="435.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.66%)</title><rect x="1182.2" y="419.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.66%)</title><rect x="1182.2" y="403.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.66%)</title><rect x="1182.2" y="387.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.66%)</title><rect x="1182.2" y="371.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.66%)</title><rect x="1182.2" y="355.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.66%)</title><rect x="1182.2" y="339.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.2" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.66%)</title><rect x="1182.2" y="323.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.66%)</title><rect x="1182.2" y="307.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.66%)</title><rect x="1182.2" y="291.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.66%)</title><rect x="1182.2" y="275.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.66%)</title><rect x="1182.2" y="259.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.2" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.66%)</title><rect x="1182.2" y="243.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.2" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.66%)</title><rect x="1182.2" y="227.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.2" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.66%)</title><rect x="1182.2" y="211.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.2" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.66%)</title><rect x="1182.2" y="195.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.2" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.66%)</title><rect x="1182.2" y="179.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.2" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.66%)</title><rect x="1182.2" y="163.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.2" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.66%)</title><rect x="1182.2" y="147.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.66%)</title><rect x="1182.2" y="131.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.2" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.66%)</title><rect x="1182.2" y="115.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.66%)</title><rect x="1182.2" y="99.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.66%)</title><rect x="1182.2" y="83.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.2" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.66%)</title><rect x="1182.2" y="67.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.2" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.66%)</title><rect x="1182.2" y="51.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.2" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.66%)</title><rect x="1182.2" y="35.0" width="7.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1185.2" y="46.0"></text>
</g>
</g>
</svg>
