<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="837"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="837"> </text>
<g id="frames">
<g>
<title>all (2,696 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="814.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 30 tid=35331] (14 samples, 0.52%)</title><rect x="10.0" y="787.0" width="6.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.52%)</title><rect x="10.0" y="771.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (14 samples, 0.52%)</title><rect x="10.0" y="755.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (14 samples, 0.52%)</title><rect x="10.0" y="739.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/767414920.linkToTargetMethod (14 samples, 0.52%)</title><rect x="10.0" y="723.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/443637230.invoke (14 samples, 0.52%)</title><rect x="10.0" y="707.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.52%)</title><rect x="10.0" y="691.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.52%)</title><rect x="10.0" y="675.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.52%)</title><rect x="10.0" y="659.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.52%)</title><rect x="10.0" y="643.0" width="6.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=37379] (1 samples, 0.04%)</title><rect x="16.1" y="787.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="19.1" y="798.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.04%)</title><rect x="16.1" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.04%)</title><rect x="16.1" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.04%)</title><rect x="16.1" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.04%)</title><rect x="16.1" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.04%)</title><rect x="16.1" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.04%)</title><rect x="16.1" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.04%)</title><rect x="16.1" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="686.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.04%)</title><rect x="16.1" y="659.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="19.1" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=40195] (1 samples, 0.04%)</title><rect x="16.6" y="787.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="19.6" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1 samples, 0.04%)</title><rect x="16.6" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.04%)</title><rect x="16.6" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.04%)</title><rect x="16.6" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.6" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.04%)</title><rect x="16.6" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.04%)</title><rect x="16.6" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.6" y="718.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.04%)</title><rect x="16.6" y="691.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.6" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=38403] (2,615 samples, 97.00%)</title><rect x="17.0" y="787.0" width="1144.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="20.0" y="798.0">[NIO Selector #6 tid=38403]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,615 samples, 97.00%)</title><rect x="17.0" y="771.0" width="1144.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.0" y="782.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (85 samples, 3.15%)</title><rect x="17.0" y="755.0" width="37.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.0" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (55 samples, 2.04%)</title><rect x="17.0" y="739.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="750.0">o..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (27 samples, 1.00%)</title><rect x="17.0" y="723.0" width="11.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="20.0" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (28 samples, 1.04%)</title><rect x="28.8" y="723.0" width="12.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="31.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.04%)</title><rect x="41.1" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.1" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.04%)</title><rect x="41.1" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.04%)</title><rect x="41.1" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.1" y="718.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.04%)</title><rect x="41.1" y="691.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="44.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 1.08%)</title><rect x="41.5" y="739.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 1.08%)</title><rect x="41.5" y="723.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 1.08%)</title><rect x="41.5" y="707.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (29 samples, 1.08%)</title><rect x="41.5" y="691.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (29 samples, 1.08%)</title><rect x="41.5" y="675.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.add (29 samples, 1.08%)</title><rect x="41.5" y="659.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (29 samples, 1.08%)</title><rect x="41.5" y="643.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (29 samples, 1.08%)</title><rect x="41.5" y="627.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 1.08%)</title><rect x="41.5" y="611.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.5" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 1.08%)</title><rect x="41.5" y="595.0" width="12.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="44.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,530 samples, 93.84%)</title><rect x="54.2" y="755.0" width="1107.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.2" y="766.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,530 samples, 93.84%)</title><rect x="54.2" y="739.0" width="1107.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.2" y="750.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,530 samples, 93.84%)</title><rect x="54.2" y="723.0" width="1107.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.2" y="734.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,048 samples, 75.96%)</title><rect x="54.2" y="707.0" width="896.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.2" y="718.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,048 samples, 75.96%)</title><rect x="54.2" y="691.0" width="896.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.2" y="702.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,998 samples, 74.11%)</title><rect x="54.2" y="675.0" width="874.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.2" y="686.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (155 samples, 5.75%)</title><rect x="54.2" y="659.0" width="67.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.2" y="670.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (155 samples, 5.75%)</title><rect x="54.2" y="643.0" width="67.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.2" y="654.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (85 samples, 3.15%)</title><rect x="54.2" y="627.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.2" y="638.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (85 samples, 3.15%)</title><rect x="54.2" y="611.0" width="37.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.2" y="622.0">one..</text>
</g>
<g>
<title>byte[] (85 samples, 3.15%)</title><rect x="54.2" y="595.0" width="37.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="57.2" y="606.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 2.60%)</title><rect x="91.4" y="627.0" width="30.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.4" y="638.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 1.04%)</title><rect x="91.4" y="611.0" width="12.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="94.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 1.56%)</title><rect x="103.7" y="611.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (42 samples, 1.56%)</title><rect x="103.7" y="595.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (42 samples, 1.56%)</title><rect x="103.7" y="579.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 1.56%)</title><rect x="103.7" y="563.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 1.56%)</title><rect x="103.7" y="547.0" width="18.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="106.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 1.15%)</title><rect x="122.0" y="659.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 1.15%)</title><rect x="122.0" y="643.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 1.15%)</title><rect x="122.0" y="627.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.59%)</title><rect x="122.0" y="611.0" width="7.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="125.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.56%)</title><rect x="129.1" y="611.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.1" y="622.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.56%)</title><rect x="129.1" y="595.0" width="6.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="132.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (1,812 samples, 67.21%)</title><rect x="135.6" y="659.0" width="793.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.6" y="670.0">ru/mail/polis/service/stakenschneider/ServiceImplementation.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.70%)</title><rect x="135.6" y="643.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.70%)</title><rect x="135.6" y="627.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.70%)</title><rect x="135.6" y="611.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.70%)</title><rect x="135.6" y="595.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.6" y="606.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.70%)</title><rect x="135.6" y="579.0" width="8.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="138.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.85%)</title><rect x="143.9" y="643.0" width="21.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.9" y="654.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.85%)</title><rect x="143.9" y="627.0" width="21.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="638.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 1.85%)</title><rect x="143.9" y="611.0" width="21.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="146.9" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.put (1,743 samples, 64.65%)</title><rect x="165.8" y="643.0" width="762.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.8" y="654.0">ru/mail/polis/service/stakenschneider/ServiceImplementation.put</text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.70%)</title><rect x="165.8" y="627.0" width="8.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="168.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (82 samples, 3.04%)</title><rect x="174.1" y="627.0" width="35.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.1" y="638.0">one..</text>
</g>
<g>
<title>byte[] (37 samples, 1.37%)</title><rect x="174.1" y="611.0" width="16.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="177.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.82%)</title><rect x="190.3" y="611.0" width="9.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="193.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.85%)</title><rect x="200.0" y="611.0" width="10.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="203.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (1,642 samples, 60.91%)</title><rect x="210.0" y="627.0" width="718.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.0" y="638.0">ru/mail/polis/dao/RocksDAO.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,600 samples, 59.35%)</title><rect x="210.0" y="611.0" width="700.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.0" y="622.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,600 samples, 59.35%)</title><rect x="210.0" y="595.0" width="700.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.0" y="606.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1,600 samples, 59.35%)</title><rect x="210.0" y="579.0" width="700.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.0" y="590.0">org/rocksdb/util/BytewiseComparator.compare</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1,600 samples, 59.35%)</title><rect x="210.0" y="563.0" width="700.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.0" y="574.0">org/rocksdb/util/BytewiseComparator.compare</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1,600 samples, 59.35%)</title><rect x="210.0" y="547.0" width="700.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.0" y="558.0">org/rocksdb/AbstractSlice.data</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,600 samples, 59.35%)</title><rect x="210.0" y="531.0" width="700.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.0" y="542.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,600 samples, 59.35%)</title><rect x="210.0" y="515.0" width="700.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.0" y="526.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (1,600 samples, 59.35%)</title><rect x="210.0" y="499.0" width="700.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="213.0" y="510.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.toArray (42 samples, 1.56%)</title><rect x="910.3" y="611.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.3" y="622.0"></text>
</g>
<g>
<title>byte[] (42 samples, 1.56%)</title><rect x="910.3" y="595.0" width="18.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="913.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (50 samples, 1.85%)</title><rect x="928.7" y="675.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.7" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 1.85%)</title><rect x="928.7" y="659.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.7" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 1.85%)</title><rect x="928.7" y="643.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.7" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String (18 samples, 0.67%)</title><rect x="928.7" y="627.0" width="7.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="931.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 1.19%)</title><rect x="936.6" y="627.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.6" y="638.0"></text>
</g>
<g>
<title>byte[] (32 samples, 1.19%)</title><rect x="936.6" y="611.0" width="14.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="939.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (200 samples, 7.42%)</title><rect x="950.6" y="707.0" width="87.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.6" y="718.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (31 samples, 1.15%)</title><rect x="950.6" y="691.0" width="13.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="953.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (71 samples, 2.63%)</title><rect x="964.2" y="691.0" width="31.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="702.0">on..</text>
</g>
<g>
<title>java.lang.String[] (71 samples, 2.63%)</title><rect x="964.2" y="675.0" width="31.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="967.2" y="686.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 3.64%)</title><rect x="995.2" y="691.0" width="42.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.2" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 3.64%)</title><rect x="995.2" y="675.0" width="42.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.2" y="686.0">one/..</text>
</g>
<g>
<title>char[] (39 samples, 1.45%)</title><rect x="995.2" y="659.0" width="17.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="998.2" y="670.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.67%)</title><rect x="1012.3" y="659.0" width="7.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1015.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 1.52%)</title><rect x="1020.2" y="659.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 1.52%)</title><rect x="1020.2" y="643.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (41 samples, 1.52%)</title><rect x="1020.2" y="627.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.2" y="638.0"></text>
</g>
<g>
<title>byte[] (41 samples, 1.52%)</title><rect x="1020.2" y="611.0" width="17.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1023.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (23 samples, 0.85%)</title><rect x="1038.1" y="707.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.1" y="718.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.85%)</title><rect x="1038.1" y="691.0" width="10.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1041.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (35 samples, 1.30%)</title><rect x="1048.2" y="707.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 1.30%)</title><rect x="1048.2" y="691.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 1.30%)</title><rect x="1048.2" y="675.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.74%)</title><rect x="1048.2" y="659.0" width="8.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1051.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.56%)</title><rect x="1056.9" y="659.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.9" y="670.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.56%)</title><rect x="1056.9" y="643.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1059.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (224 samples, 8.31%)</title><rect x="1063.5" y="707.0" width="98.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.5" y="718.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (224 samples, 8.31%)</title><rect x="1063.5" y="691.0" width="98.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.5" y="702.0">one/nio/util..</text>
</g>
<g>
<title>char[] (96 samples, 3.56%)</title><rect x="1063.5" y="675.0" width="42.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1066.5" y="686.0">char[]</text>
</g>
<g>
<title>java.lang.String (50 samples, 1.85%)</title><rect x="1105.5" y="675.0" width="21.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1108.5" y="686.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 2.89%)</title><rect x="1127.4" y="675.0" width="34.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.4" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 2.89%)</title><rect x="1127.4" y="659.0" width="34.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.4" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (78 samples, 2.89%)</title><rect x="1127.4" y="643.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.4" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (78 samples, 2.89%)</title><rect x="1127.4" y="627.0" width="34.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1130.4" y="638.0">by..</text>
</g>
<g>
<title>[RMI TCP Connection(25)-127.0.0.1 tid=30243] (65 samples, 2.41%)</title><rect x="1161.6" y="787.0" width="28.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1164.6" y="798.0">[R..</text>
</g>
<g>
<title>java/lang/Thread.run (65 samples, 2.41%)</title><rect x="1161.6" y="771.0" width="28.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.6" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (65 samples, 2.41%)</title><rect x="1161.6" y="755.0" width="28.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.6" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (65 samples, 2.41%)</title><rect x="1161.6" y="739.0" width="28.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.6" y="750.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (65 samples, 2.41%)</title><rect x="1161.6" y="723.0" width="28.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.6" y="734.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (65 samples, 2.41%)</title><rect x="1161.6" y="707.0" width="28.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.6" y="718.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$97/249391321.run (65 samples, 2.41%)</title><rect x="1161.6" y="691.0" width="28.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.6" y="702.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (65 samples, 2.41%)</title><rect x="1161.6" y="675.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.6" y="686.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (65 samples, 2.41%)</title><rect x="1161.6" y="659.0" width="28.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.6" y="670.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (65 samples, 2.41%)</title><rect x="1161.6" y="643.0" width="28.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.6" y="654.0">su..</text>
</g>
<g>
<title>java.io.DataOutputStream (6 samples, 0.22%)</title><rect x="1161.6" y="627.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1164.6" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (59 samples, 2.19%)</title><rect x="1164.2" y="627.0" width="25.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.2" y="638.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 1.82%)</title><rect x="1164.2" y="611.0" width="21.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.2" y="622.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (49 samples, 1.82%)</title><rect x="1164.2" y="595.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.2" y="606.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (49 samples, 1.82%)</title><rect x="1164.2" y="579.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.2" y="590.0">s..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (49 samples, 1.82%)</title><rect x="1164.2" y="563.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="574.0">s..</text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="1164.2" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.04%)</title><rect x="1164.2" y="531.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1167.2" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (29 samples, 1.08%)</title><rect x="1164.6" y="547.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (29 samples, 1.08%)</title><rect x="1164.6" y="531.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (29 samples, 1.08%)</title><rect x="1164.6" y="515.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.6" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (29 samples, 1.08%)</title><rect x="1164.6" y="499.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.6" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (25 samples, 0.93%)</title><rect x="1164.6" y="483.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1167.6" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (25 samples, 0.93%)</title><rect x="1164.6" y="467.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.6" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (25 samples, 0.93%)</title><rect x="1164.6" y="451.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.6" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (25 samples, 0.93%)</title><rect x="1164.6" y="435.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.6" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (25 samples, 0.93%)</title><rect x="1164.6" y="419.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.6" y="430.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (25 samples, 0.93%)</title><rect x="1164.6" y="403.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.6" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (25 samples, 0.93%)</title><rect x="1164.6" y="387.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.6" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (25 samples, 0.93%)</title><rect x="1164.6" y="371.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.6" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (25 samples, 0.93%)</title><rect x="1164.6" y="355.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.6" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (25 samples, 0.93%)</title><rect x="1164.6" y="339.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.6" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (25 samples, 0.93%)</title><rect x="1164.6" y="323.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.6" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (25 samples, 0.93%)</title><rect x="1164.6" y="307.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.6" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (25 samples, 0.93%)</title><rect x="1164.6" y="291.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.6" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (23 samples, 0.85%)</title><rect x="1164.6" y="275.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.6" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (23 samples, 0.85%)</title><rect x="1164.6" y="259.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.6" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (23 samples, 0.85%)</title><rect x="1164.6" y="243.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.6" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (23 samples, 0.85%)</title><rect x="1164.6" y="227.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.6" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (8 samples, 0.30%)</title><rect x="1164.6" y="211.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.6" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (7 samples, 0.26%)</title><rect x="1164.6" y="195.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.6" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 0.26%)</title><rect x="1164.6" y="179.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.6" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (7 samples, 0.26%)</title><rect x="1164.6" y="163.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.6" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (6 samples, 0.22%)</title><rect x="1164.6" y="147.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.6" y="158.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1164.6" y="131.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.6" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.04%)</title><rect x="1164.6" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.6" y="126.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.04%)</title><rect x="1164.6" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.6" y="110.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.04%)</title><rect x="1164.6" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.6" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="1164.6" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1167.6" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.04%)</title><rect x="1164.6" y="51.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.6" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1 samples, 0.04%)</title><rect x="1164.6" y="35.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1167.6" y="46.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (5 samples, 0.19%)</title><rect x="1165.1" y="131.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.19%)</title><rect x="1165.1" y="115.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.1" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.19%)</title><rect x="1165.1" y="99.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1168.1" y="110.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.04%)</title><rect x="1167.2" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="1167.2" y="131.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1170.2" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.04%)</title><rect x="1167.7" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.7" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.04%)</title><rect x="1167.7" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="1167.7" y="163.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1170.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="1168.1" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1171.1" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (11 samples, 0.41%)</title><rect x="1168.6" y="211.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.6" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1168.6" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.04%)</title><rect x="1168.6" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.6" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.04%)</title><rect x="1168.6" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1171.6" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.04%)</title><rect x="1168.6" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="1168.6" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.04%)</title><rect x="1168.6" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1171.6" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1 samples, 0.04%)</title><rect x="1168.6" y="99.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1171.6" y="110.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (10 samples, 0.37%)</title><rect x="1169.0" y="195.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.37%)</title><rect x="1169.0" y="179.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.0" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.37%)</title><rect x="1169.0" y="163.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1172.0" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.11%)</title><rect x="1173.4" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="1173.4" y="195.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1176.4" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.2" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.2" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor12.invoke (1 samples, 0.04%)</title><rect x="1174.2" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.2" y="110.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedMonitors (1 samples, 0.04%)</title><rect x="1174.2" y="83.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.2" y="94.0"></text>
</g>
<g>
<title>java.lang.management.MonitorInfo[] (1 samples, 0.04%)</title><rect x="1174.2" y="67.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1177.2" y="78.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.7" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.7" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.7" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.07%)</title><rect x="1174.7" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.7" y="174.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.07%)</title><rect x="1174.7" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.7" y="158.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.07%)</title><rect x="1174.7" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.7" y="142.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (1 samples, 0.04%)</title><rect x="1174.7" y="115.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1177.7" y="126.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (1 samples, 0.04%)</title><rect x="1175.1" y="115.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1178.1" y="126.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (4 samples, 0.15%)</title><rect x="1175.6" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.6" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.04%)</title><rect x="1175.6" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.6" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.04%)</title><rect x="1175.6" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.6" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.04%)</title><rect x="1175.6" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.6" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1175.6" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.6" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1175.6" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1175.6" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap (1 samples, 0.04%)</title><rect x="1175.6" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1178.6" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.11%)</title><rect x="1176.0" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.0" y="478.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (3 samples, 0.11%)</title><rect x="1176.0" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.07%)</title><rect x="1176.0" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.07%)</title><rect x="1176.0" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.07%)</title><rect x="1176.0" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.07%)</title><rect x="1176.0" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.07%)</title><rect x="1176.0" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.07%)</title><rect x="1176.0" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="1176.0" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="1176.0" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.04%)</title><rect x="1176.0" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.04%)</title><rect x="1176.0" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.0" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamField (1 samples, 0.04%)</title><rect x="1176.0" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1179.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.04%)</title><rect x="1176.4" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (1 samples, 0.04%)</title><rect x="1176.4" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (1 samples, 0.04%)</title><rect x="1176.4" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.4" y="318.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$ClassDataSlot[] (1 samples, 0.04%)</title><rect x="1176.4" y="291.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1179.4" y="302.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.9" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.9" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.9" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.9" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1176.9" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.9" y="398.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="1176.9" y="371.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1179.9" y="382.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (13 samples, 0.48%)</title><rect x="1177.3" y="547.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (13 samples, 0.48%)</title><rect x="1177.3" y="531.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (13 samples, 0.48%)</title><rect x="1177.3" y="515.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (13 samples, 0.48%)</title><rect x="1177.3" y="499.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (13 samples, 0.48%)</title><rect x="1177.3" y="483.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (13 samples, 0.48%)</title><rect x="1177.3" y="467.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.3" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="1177.3" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="1177.3" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.3" y="446.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="1177.3" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1180.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.45%)</title><rect x="1177.7" y="451.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (12 samples, 0.45%)</title><rect x="1177.7" y="435.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="1177.7" y="419.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1180.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.41%)</title><rect x="1178.2" y="419.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.41%)</title><rect x="1178.2" y="403.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.15%)</title><rect x="1178.2" y="387.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (4 samples, 0.15%)</title><rect x="1178.2" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.2" y="382.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.07%)</title><rect x="1178.2" y="355.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1181.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="1179.1" y="355.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.26%)</title><rect x="1179.9" y="387.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1182.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (7 samples, 0.26%)</title><rect x="1179.9" y="371.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.26%)</title><rect x="1179.9" y="355.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.26%)</title><rect x="1179.9" y="339.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (7 samples, 0.26%)</title><rect x="1179.9" y="323.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (7 samples, 0.26%)</title><rect x="1179.9" y="307.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (7 samples, 0.26%)</title><rect x="1179.9" y="291.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.26%)</title><rect x="1179.9" y="275.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.11%)</title><rect x="1179.9" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="1179.9" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="1179.9" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.9" y="238.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="1179.9" y="211.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1182.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.07%)</title><rect x="1180.4" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.07%)</title><rect x="1180.4" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.4" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.07%)</title><rect x="1180.4" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.07%)</title><rect x="1180.4" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.4" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="1180.4" y="179.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1183.4" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="1180.8" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1183.8" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="1180.8" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.8" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="1180.8" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.8" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.04%)</title><rect x="1180.8" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.8" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="1180.8" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="1180.8" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.04%)</title><rect x="1180.8" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.8" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.04%)</title><rect x="1180.8" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.8" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.04%)</title><rect x="1180.8" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.8" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.04%)</title><rect x="1180.8" y="35.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1183.8" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.15%)</title><rect x="1181.2" y="259.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.2" y="270.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.15%)</title><rect x="1181.2" y="243.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1184.2" y="254.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (3 samples, 0.11%)</title><rect x="1183.0" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$102/751421626.readString (1 samples, 0.04%)</title><rect x="1183.0" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1186.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.04%)</title><rect x="1183.0" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.04%)</title><rect x="1183.0" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.04%)</title><rect x="1183.0" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.04%)</title><rect x="1183.0" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.04%)</title><rect x="1183.0" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.04%)</title><rect x="1183.0" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.0" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.04%)</title><rect x="1183.0" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1186.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.07%)</title><rect x="1183.4" y="531.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1186.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.07%)</title><rect x="1183.4" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1186.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.07%)</title><rect x="1183.4" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.04%)</title><rect x="1183.4" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="1183.4" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="1183.4" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1186.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="1183.4" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.04%)</title><rect x="1183.4" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.4" y="430.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.04%)</title><rect x="1183.4" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1186.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.04%)</title><rect x="1183.9" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.04%)</title><rect x="1183.9" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.9" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues[] (1 samples, 0.04%)</title><rect x="1183.9" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1186.9" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (3 samples, 0.11%)</title><rect x="1184.3" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.3" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (3 samples, 0.11%)</title><rect x="1184.3" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.3" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1184.3" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.3" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1184.3" y="499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.3" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1184.3" y="483.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1184.3" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.3" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1184.3" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.3" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="1184.3" y="435.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1187.3" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (10 samples, 0.37%)</title><rect x="1185.6" y="611.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.6" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (10 samples, 0.37%)</title><rect x="1185.6" y="595.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.6" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (10 samples, 0.37%)</title><rect x="1185.6" y="579.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (10 samples, 0.37%)</title><rect x="1185.6" y="563.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (10 samples, 0.37%)</title><rect x="1185.6" y="547.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.6" y="558.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.19%)</title><rect x="1185.6" y="531.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1188.6" y="542.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.15%)</title><rect x="1187.8" y="531.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1190.8" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$PeekInputStream (1 samples, 0.04%)</title><rect x="1189.6" y="531.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1192.6" y="542.0"></text>
</g>
</g>
</svg>
