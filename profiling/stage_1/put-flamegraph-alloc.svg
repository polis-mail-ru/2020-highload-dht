<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (4,207 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 30 tid=35331] (16 samples, 0.38%)</title><rect x="10.0" y="1123.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 0.38%)</title><rect x="10.0" y="1107.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (16 samples, 0.38%)</title><rect x="10.0" y="1091.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (16 samples, 0.38%)</title><rect x="10.0" y="1075.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/767414920.linkToTargetMethod (16 samples, 0.38%)</title><rect x="10.0" y="1059.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/443637230.invoke (16 samples, 0.38%)</title><rect x="10.0" y="1043.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.38%)</title><rect x="10.0" y="1027.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.38%)</title><rect x="10.0" y="1011.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.38%)</title><rect x="10.0" y="995.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.38%)</title><rect x="10.0" y="979.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=37379] (1 samples, 0.02%)</title><rect x="14.5" y="1123.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="17.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.02%)</title><rect x="14.5" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.02%)</title><rect x="14.5" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.02%)</title><rect x="14.5" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.02%)</title><rect x="14.5" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.02%)</title><rect x="14.5" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.02%)</title><rect x="14.5" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.02%)</title><rect x="14.5" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.5" y="1022.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.02%)</title><rect x="14.5" y="995.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.5" y="1006.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=41219] (1,659 samples, 39.43%)</title><rect x="14.8" y="1123.0" width="465.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="17.8" y="1134.0">[NIO Selector #0 tid=41219]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,659 samples, 39.43%)</title><rect x="14.8" y="1107.0" width="465.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.8" y="1118.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (51 samples, 1.21%)</title><rect x="14.8" y="1091.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (28 samples, 0.67%)</title><rect x="14.8" y="1075.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.8" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (13 samples, 0.31%)</title><rect x="14.8" y="1059.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="17.8" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (15 samples, 0.36%)</title><rect x="18.4" y="1059.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="21.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.02%)</title><rect x="22.6" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.02%)</title><rect x="22.6" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.02%)</title><rect x="22.6" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.6" y="1054.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.02%)</title><rect x="22.6" y="1027.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (22 samples, 0.52%)</title><rect x="22.9" y="1075.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (22 samples, 0.52%)</title><rect x="22.9" y="1059.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (22 samples, 0.52%)</title><rect x="22.9" y="1043.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (22 samples, 0.52%)</title><rect x="22.9" y="1027.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (22 samples, 0.52%)</title><rect x="22.9" y="1011.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (22 samples, 0.52%)</title><rect x="22.9" y="995.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (22 samples, 0.52%)</title><rect x="22.9" y="979.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (22 samples, 0.52%)</title><rect x="22.9" y="963.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (22 samples, 0.52%)</title><rect x="22.9" y="947.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.9" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (22 samples, 0.52%)</title><rect x="22.9" y="931.0" width="6.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="25.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,608 samples, 38.22%)</title><rect x="29.1" y="1091.0" width="451.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.1" y="1102.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,608 samples, 38.22%)</title><rect x="29.1" y="1075.0" width="451.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.1" y="1086.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,607 samples, 38.20%)</title><rect x="29.1" y="1059.0" width="450.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.1" y="1070.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,334 samples, 31.71%)</title><rect x="29.1" y="1043.0" width="374.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.1" y="1054.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,334 samples, 31.71%)</title><rect x="29.1" y="1027.0" width="374.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.1" y="1038.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,318 samples, 31.33%)</title><rect x="29.1" y="1011.0" width="369.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.1" y="1022.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (99 samples, 2.35%)</title><rect x="29.1" y="995.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.1" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (99 samples, 2.35%)</title><rect x="29.1" y="979.0" width="27.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.1" y="990.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (61 samples, 1.45%)</title><rect x="29.1" y="963.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (61 samples, 1.45%)</title><rect x="29.1" y="947.0" width="17.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.1" y="958.0"></text>
</g>
<g>
<title>byte[] (61 samples, 1.45%)</title><rect x="29.1" y="931.0" width="17.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="32.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 0.90%)</title><rect x="46.2" y="963.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.2" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.26%)</title><rect x="46.2" y="947.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="49.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.64%)</title><rect x="49.3" y="947.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (27 samples, 0.64%)</title><rect x="49.3" y="931.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (27 samples, 0.64%)</title><rect x="49.3" y="915.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.64%)</title><rect x="49.3" y="899.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.3" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.64%)</title><rect x="49.3" y="883.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="52.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (22 samples, 0.52%)</title><rect x="56.8" y="995.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.52%)</title><rect x="56.8" y="979.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.52%)</title><rect x="56.8" y="963.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.8" y="974.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.31%)</title><rect x="56.8" y="947.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="59.8" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.21%)</title><rect x="60.5" y="947.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.5" y="958.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="60.5" y="931.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="63.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (1,197 samples, 28.45%)</title><rect x="63.0" y="995.0" width="335.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.0" y="1006.0">ru/mail/polis/service/stakenschneider/Service..</text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.45%)</title><rect x="63.0" y="979.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.45%)</title><rect x="63.0" y="963.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.45%)</title><rect x="63.0" y="947.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.0" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.45%)</title><rect x="63.0" y="931.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.0" y="942.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.45%)</title><rect x="63.0" y="915.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="66.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.62%)</title><rect x="68.3" y="979.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.3" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.62%)</title><rect x="68.3" y="963.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.3" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.62%)</title><rect x="68.3" y="947.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="71.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.put (1,152 samples, 27.38%)</title><rect x="75.6" y="979.0" width="323.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.6" y="990.0">ru/mail/polis/service/stakenschneider/Servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.48%)</title><rect x="75.6" y="963.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.48%)</title><rect x="75.6" y="947.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.6" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.48%)</title><rect x="75.6" y="931.0" width="5.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="78.6" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (14 samples, 0.33%)</title><rect x="81.2" y="963.0" width="4.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (51 samples, 1.21%)</title><rect x="85.2" y="963.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.2" y="974.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.57%)</title><rect x="85.2" y="947.0" width="6.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="88.2" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.33%)</title><rect x="91.9" y="947.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="94.9" y="958.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.31%)</title><rect x="95.8" y="947.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="98.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (1,067 samples, 25.36%)</title><rect x="99.5" y="963.0" width="299.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.5" y="974.0">ru/mail/polis/dao/RocksDAO.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (990 samples, 23.53%)</title><rect x="99.5" y="947.0" width="277.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.5" y="958.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (990 samples, 23.53%)</title><rect x="99.5" y="931.0" width="277.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.5" y="942.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (990 samples, 23.53%)</title><rect x="99.5" y="915.0" width="277.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.5" y="926.0">org/rocksdb/util/BytewiseComparator.c..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (990 samples, 23.53%)</title><rect x="99.5" y="899.0" width="277.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="910.0">org/rocksdb/util/BytewiseComparator.c..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (990 samples, 23.53%)</title><rect x="99.5" y="883.0" width="277.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.5" y="894.0">org/rocksdb/AbstractSlice.data</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (990 samples, 23.53%)</title><rect x="99.5" y="867.0" width="277.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.5" y="878.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (990 samples, 23.53%)</title><rect x="99.5" y="851.0" width="277.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="862.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (990 samples, 23.53%)</title><rect x="99.5" y="835.0" width="277.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="102.5" y="846.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.toArray (77 samples, 1.83%)</title><rect x="377.2" y="947.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.2" y="958.0">r..</text>
</g>
<g>
<title>byte[] (18 samples, 0.43%)</title><rect x="377.2" y="931.0" width="5.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="380.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (59 samples, 1.40%)</title><rect x="382.2" y="931.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.2" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 1.40%)</title><rect x="382.2" y="915.0" width="16.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="385.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 0.38%)</title><rect x="398.8" y="1011.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.38%)</title><rect x="398.8" y="995.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.38%)</title><rect x="398.8" y="979.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="398.8" y="963.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="401.8" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.26%)</title><rect x="400.2" y="963.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.2" y="974.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="400.2" y="947.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="403.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (102 samples, 2.42%)</title><rect x="403.2" y="1043.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.2" y="1054.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.21%)</title><rect x="403.2" y="1027.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="406.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 0.88%)</title><rect x="405.8" y="1027.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.8" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.88%)</title><rect x="405.8" y="1011.0" width="10.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="408.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.33%)</title><rect x="416.1" y="1027.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.33%)</title><rect x="416.1" y="1011.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.1" y="1022.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.48%)</title><rect x="416.1" y="995.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="419.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="421.8" y="995.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.57%)</title><rect x="425.1" y="995.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.57%)</title><rect x="425.1" y="979.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.57%)</title><rect x="425.1" y="963.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.1" y="974.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.57%)</title><rect x="425.1" y="947.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="428.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.33%)</title><rect x="431.8" y="1043.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.8" y="1054.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="431.8" y="1027.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="434.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (24 samples, 0.57%)</title><rect x="435.8" y="1043.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.57%)</title><rect x="435.8" y="1027.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.57%)</title><rect x="435.8" y="1011.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="435.8" y="995.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="438.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.29%)</title><rect x="439.1" y="995.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.1" y="1006.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.29%)</title><rect x="439.1" y="979.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="442.1" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 3.16%)</title><rect x="442.5" y="1043.0" width="37.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.5" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 3.16%)</title><rect x="442.5" y="1027.0" width="37.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.5" y="1038.0">one..</text>
</g>
<g>
<title>char[] (60 samples, 1.43%)</title><rect x="442.5" y="1011.0" width="16.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="445.5" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.55%)</title><rect x="459.3" y="1011.0" width="6.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="462.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 1.19%)</title><rect x="465.8" y="1011.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 1.19%)</title><rect x="465.8" y="995.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (50 samples, 1.19%)</title><rect x="465.8" y="979.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.8" y="990.0"></text>
</g>
<g>
<title>byte[] (50 samples, 1.19%)</title><rect x="465.8" y="963.0" width="14.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="468.8" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.02%)</title><rect x="479.8" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.02%)</title><rect x="479.8" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.02%)</title><rect x="479.8" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="479.8" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="479.8" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="479.8" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.8" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="479.8" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="479.8" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.02%)</title><rect x="479.8" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.02%)</title><rect x="479.8" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.&lt;init&gt; (1 samples, 0.02%)</title><rect x="479.8" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.8" y="910.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (1 samples, 0.02%)</title><rect x="479.8" y="883.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="482.8" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=40451] (1,157 samples, 27.50%)</title><rect x="480.1" y="1123.0" width="324.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="483.1" y="1134.0">[NIO Selector #1 tid=40451]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,157 samples, 27.50%)</title><rect x="480.1" y="1107.0" width="324.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.1" y="1118.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (34 samples, 0.81%)</title><rect x="480.1" y="1091.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (15 samples, 0.36%)</title><rect x="480.1" y="1075.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.1" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (5 samples, 0.12%)</title><rect x="480.1" y="1059.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="483.1" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (10 samples, 0.24%)</title><rect x="481.5" y="1059.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="484.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (19 samples, 0.45%)</title><rect x="484.3" y="1075.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 0.45%)</title><rect x="484.3" y="1059.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (19 samples, 0.45%)</title><rect x="484.3" y="1043.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (19 samples, 0.45%)</title><rect x="484.3" y="1027.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (19 samples, 0.45%)</title><rect x="484.3" y="1011.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (19 samples, 0.45%)</title><rect x="484.3" y="995.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (19 samples, 0.45%)</title><rect x="484.3" y="979.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (19 samples, 0.45%)</title><rect x="484.3" y="963.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (19 samples, 0.45%)</title><rect x="484.3" y="947.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.3" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (19 samples, 0.45%)</title><rect x="484.3" y="931.0" width="5.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="487.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,123 samples, 26.69%)</title><rect x="489.6" y="1091.0" width="315.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.6" y="1102.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,123 samples, 26.69%)</title><rect x="489.6" y="1075.0" width="315.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.6" y="1086.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,123 samples, 26.69%)</title><rect x="489.6" y="1059.0" width="315.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.6" y="1070.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (927 samples, 22.03%)</title><rect x="489.6" y="1043.0" width="260.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.6" y="1054.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (927 samples, 22.03%)</title><rect x="489.6" y="1027.0" width="260.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.6" y="1038.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (910 samples, 21.63%)</title><rect x="489.6" y="1011.0" width="255.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.6" y="1022.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (84 samples, 2.00%)</title><rect x="489.6" y="995.0" width="23.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.6" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (84 samples, 2.00%)</title><rect x="489.6" y="979.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.6" y="990.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.97%)</title><rect x="489.6" y="963.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.6" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 0.97%)</title><rect x="489.6" y="947.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.6" y="958.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.97%)</title><rect x="489.6" y="931.0" width="11.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="492.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 1.02%)</title><rect x="501.1" y="963.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.1" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.36%)</title><rect x="501.1" y="947.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="504.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.67%)</title><rect x="505.3" y="947.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (28 samples, 0.67%)</title><rect x="505.3" y="931.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (28 samples, 0.67%)</title><rect x="505.3" y="915.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.67%)</title><rect x="505.3" y="899.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.3" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.67%)</title><rect x="505.3" y="883.0" width="7.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="508.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.26%)</title><rect x="513.2" y="995.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.26%)</title><rect x="513.2" y="979.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.26%)</title><rect x="513.2" y="963.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.10%)</title><rect x="513.2" y="947.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="516.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="514.3" y="947.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.3" y="958.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="514.3" y="931.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="517.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (815 samples, 19.37%)</title><rect x="516.3" y="995.0" width="228.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.3" y="1006.0">ru/mail/polis/service/stakensc..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.14%)</title><rect x="516.3" y="979.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.14%)</title><rect x="516.3" y="963.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.14%)</title><rect x="516.3" y="947.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.14%)</title><rect x="516.3" y="931.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.3" y="942.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="516.3" y="915.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.33%)</title><rect x="518.0" y="979.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.33%)</title><rect x="518.0" y="963.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.0" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.33%)</title><rect x="518.0" y="947.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="521.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.put (795 samples, 18.90%)</title><rect x="521.9" y="979.0" width="223.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.9" y="990.0">ru/mail/polis/service/stakens..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.36%)</title><rect x="521.9" y="963.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.36%)</title><rect x="521.9" y="947.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.9" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.36%)</title><rect x="521.9" y="931.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="524.9" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.19%)</title><rect x="526.1" y="963.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="529.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (46 samples, 1.09%)</title><rect x="528.3" y="963.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.3" y="974.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.48%)</title><rect x="528.3" y="947.0" width="5.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="531.3" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.33%)</title><rect x="533.9" y="947.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="536.9" y="958.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="537.9" y="947.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="540.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (726 samples, 17.26%)</title><rect x="541.2" y="963.0" width="203.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.2" y="974.0">ru/mail/polis/dao/RocksDAO...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (670 samples, 15.93%)</title><rect x="541.2" y="947.0" width="188.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.2" y="958.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (670 samples, 15.93%)</title><rect x="541.2" y="931.0" width="188.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.2" y="942.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (670 samples, 15.93%)</title><rect x="541.2" y="915.0" width="188.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.2" y="926.0">org/rocksdb/util/Bytewis..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (670 samples, 15.93%)</title><rect x="541.2" y="899.0" width="188.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.2" y="910.0">org/rocksdb/util/Bytewis..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (670 samples, 15.93%)</title><rect x="541.2" y="883.0" width="188.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.2" y="894.0">org/rocksdb/AbstractSlic..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (670 samples, 15.93%)</title><rect x="541.2" y="867.0" width="188.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.2" y="878.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (670 samples, 15.93%)</title><rect x="541.2" y="851.0" width="188.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.2" y="862.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (670 samples, 15.93%)</title><rect x="541.2" y="835.0" width="188.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="544.2" y="846.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.toArray (56 samples, 1.33%)</title><rect x="729.2" y="947.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.2" y="958.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.59%)</title><rect x="729.2" y="931.0" width="7.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="732.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (31 samples, 0.74%)</title><rect x="736.2" y="931.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.2" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.74%)</title><rect x="736.2" y="915.0" width="8.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="739.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (17 samples, 0.40%)</title><rect x="744.9" y="1011.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.40%)</title><rect x="744.9" y="995.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.40%)</title><rect x="744.9" y="979.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.9" y="990.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="744.9" y="963.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="747.9" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.26%)</title><rect x="746.6" y="963.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.6" y="974.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="746.6" y="947.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="749.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (80 samples, 1.90%)</title><rect x="749.6" y="1043.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.6" y="1054.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.19%)</title><rect x="749.6" y="1027.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="752.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 0.64%)</title><rect x="751.9" y="1027.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.9" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.64%)</title><rect x="751.9" y="1011.0" width="7.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="754.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 1.07%)</title><rect x="759.5" y="1027.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 1.07%)</title><rect x="759.5" y="1011.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="1022.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.48%)</title><rect x="759.5" y="995.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="762.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="765.1" y="995.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="768.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.43%)</title><rect x="767.0" y="995.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.43%)</title><rect x="767.0" y="979.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.43%)</title><rect x="767.0" y="963.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.0" y="974.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.43%)</title><rect x="767.0" y="947.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="770.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.40%)</title><rect x="772.1" y="1043.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.1" y="1054.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.40%)</title><rect x="772.1" y="1027.0" width="4.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="775.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.29%)</title><rect x="776.8" y="1043.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.29%)</title><rect x="776.8" y="1027.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.29%)</title><rect x="776.8" y="1011.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="776.8" y="995.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="779.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="778.8" y="995.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.8" y="1006.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="778.8" y="979.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="781.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (87 samples, 2.07%)</title><rect x="780.2" y="1043.0" width="24.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.2" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (87 samples, 2.07%)</title><rect x="780.2" y="1027.0" width="24.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.2" y="1038.0">o..</text>
</g>
<g>
<title>char[] (32 samples, 0.76%)</title><rect x="780.2" y="1011.0" width="9.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="783.2" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.36%)</title><rect x="789.2" y="1011.0" width="4.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="792.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.95%)</title><rect x="793.4" y="1011.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.95%)</title><rect x="793.4" y="995.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (40 samples, 0.95%)</title><rect x="793.4" y="979.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.4" y="990.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.95%)</title><rect x="793.4" y="963.0" width="11.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="796.4" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=26627] (2 samples, 0.05%)</title><rect x="804.6" y="1123.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="807.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2 samples, 0.05%)</title><rect x="804.6" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.02%)</title><rect x="804.6" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.02%)</title><rect x="804.6" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.02%)</title><rect x="804.6" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.02%)</title><rect x="804.6" y="1043.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.6" y="1054.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.02%)</title><rect x="804.6" y="1027.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="807.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1 samples, 0.02%)</title><rect x="804.9" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 0.02%)</title><rect x="804.9" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.02%)</title><rect x="804.9" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.02%)</title><rect x="804.9" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.02%)</title><rect x="804.9" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="804.9" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="804.9" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="804.9" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.9" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="804.9" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.9" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="804.9" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.02%)</title><rect x="804.9" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.9" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.02%)</title><rect x="804.9" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.&lt;init&gt; (1 samples, 0.02%)</title><rect x="804.9" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.9" y="910.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (1 samples, 0.02%)</title><rect x="804.9" y="883.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="807.9" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=39427] (1,146 samples, 27.24%)</title><rect x="805.2" y="1123.0" width="321.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="808.2" y="1134.0">[NIO Selector #4 tid=39427]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,146 samples, 27.24%)</title><rect x="805.2" y="1107.0" width="321.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.2" y="1118.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (28 samples, 0.67%)</title><rect x="805.2" y="1091.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (14 samples, 0.33%)</title><rect x="805.2" y="1075.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.2" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (7 samples, 0.17%)</title><rect x="805.2" y="1059.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="808.2" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (7 samples, 0.17%)</title><rect x="807.1" y="1059.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="810.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.02%)</title><rect x="809.1" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.02%)</title><rect x="809.1" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.02%)</title><rect x="809.1" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.1" y="1054.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.02%)</title><rect x="809.1" y="1027.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="812.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (13 samples, 0.31%)</title><rect x="809.4" y="1075.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (13 samples, 0.31%)</title><rect x="809.4" y="1059.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (13 samples, 0.31%)</title><rect x="809.4" y="1043.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (13 samples, 0.31%)</title><rect x="809.4" y="1027.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (13 samples, 0.31%)</title><rect x="809.4" y="1011.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (13 samples, 0.31%)</title><rect x="809.4" y="995.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (13 samples, 0.31%)</title><rect x="809.4" y="979.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.31%)</title><rect x="809.4" y="963.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (13 samples, 0.31%)</title><rect x="809.4" y="947.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.4" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (13 samples, 0.31%)</title><rect x="809.4" y="931.0" width="3.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="812.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,118 samples, 26.57%)</title><rect x="813.0" y="1091.0" width="313.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.0" y="1102.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,118 samples, 26.57%)</title><rect x="813.0" y="1075.0" width="313.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.0" y="1086.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,118 samples, 26.57%)</title><rect x="813.0" y="1059.0" width="313.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.0" y="1070.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (906 samples, 21.54%)</title><rect x="813.0" y="1043.0" width="254.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.0" y="1054.0">one/nio/http/HttpSession.handlePar..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (906 samples, 21.54%)</title><rect x="813.0" y="1027.0" width="254.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.0" y="1038.0">one/nio/http/HttpServer.handleRequ..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (888 samples, 21.11%)</title><rect x="813.0" y="1011.0" width="249.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.0" y="1022.0">RequestHandler0_entity.handleRequ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 1.21%)</title><rect x="813.0" y="995.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (51 samples, 1.21%)</title><rect x="813.0" y="979.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.0" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (35 samples, 0.83%)</title><rect x="813.0" y="963.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.0" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (35 samples, 0.83%)</title><rect x="813.0" y="947.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.0" y="958.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.83%)</title><rect x="813.0" y="931.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="816.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.38%)</title><rect x="822.8" y="963.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.8" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.19%)</title><rect x="822.8" y="947.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="825.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.19%)</title><rect x="825.1" y="947.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.19%)</title><rect x="825.1" y="931.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (8 samples, 0.19%)</title><rect x="825.1" y="915.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.1" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="825.1" y="899.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.1" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.19%)</title><rect x="825.1" y="883.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="828.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.33%)</title><rect x="827.3" y="995.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.33%)</title><rect x="827.3" y="979.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.33%)</title><rect x="827.3" y="963.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.3" y="974.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="827.3" y="947.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="830.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="829.3" y="947.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="958.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="829.3" y="931.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="832.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (823 samples, 19.56%)</title><rect x="831.3" y="995.0" width="230.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.3" y="1006.0">ru/mail/polis/service/stakensc..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.10%)</title><rect x="831.3" y="979.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.10%)</title><rect x="831.3" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.10%)</title><rect x="831.3" y="947.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.10%)</title><rect x="831.3" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.3" y="942.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.10%)</title><rect x="831.3" y="915.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="834.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.31%)</title><rect x="832.4" y="979.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.31%)</title><rect x="832.4" y="963.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.4" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.31%)</title><rect x="832.4" y="947.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="835.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.put (806 samples, 19.16%)</title><rect x="836.0" y="979.0" width="226.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.0" y="990.0">ru/mail/polis/service/stakensc..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.57%)</title><rect x="836.0" y="963.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.57%)</title><rect x="836.0" y="947.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.0" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.57%)</title><rect x="836.0" y="931.0" width="6.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="839.0" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.40%)</title><rect x="842.8" y="963.0" width="4.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="845.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (29 samples, 0.69%)</title><rect x="847.5" y="963.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.5" y="974.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.31%)</title><rect x="847.5" y="947.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="850.5" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.21%)</title><rect x="851.2" y="947.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="854.2" y="958.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="853.7" y="947.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="856.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (736 samples, 17.49%)</title><rect x="855.7" y="963.0" width="206.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.7" y="974.0">ru/mail/polis/dao/RocksDAO...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (680 samples, 16.16%)</title><rect x="855.7" y="947.0" width="190.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.7" y="958.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (680 samples, 16.16%)</title><rect x="855.7" y="931.0" width="190.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.7" y="942.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (680 samples, 16.16%)</title><rect x="855.7" y="915.0" width="190.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.7" y="926.0">org/rocksdb/util/Bytewise..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (680 samples, 16.16%)</title><rect x="855.7" y="899.0" width="190.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.7" y="910.0">org/rocksdb/util/Bytewise..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (680 samples, 16.16%)</title><rect x="855.7" y="883.0" width="190.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.7" y="894.0">org/rocksdb/AbstractSlice..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (680 samples, 16.16%)</title><rect x="855.7" y="867.0" width="190.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.7" y="878.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (680 samples, 16.16%)</title><rect x="855.7" y="851.0" width="190.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.7" y="862.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (680 samples, 16.16%)</title><rect x="855.7" y="835.0" width="190.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="858.7" y="846.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.toArray (56 samples, 1.33%)</title><rect x="1046.4" y="947.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.4" y="958.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.55%)</title><rect x="1046.4" y="931.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1049.4" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (33 samples, 0.78%)</title><rect x="1052.8" y="931.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.8" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.78%)</title><rect x="1052.8" y="915.0" width="9.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1055.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.43%)</title><rect x="1062.1" y="1011.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.43%)</title><rect x="1062.1" y="995.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.43%)</title><rect x="1062.1" y="979.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.1" y="990.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="1062.1" y="963.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1065.1" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.19%)</title><rect x="1064.9" y="963.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.9" y="974.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="1064.9" y="947.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1067.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (87 samples, 2.07%)</title><rect x="1067.1" y="1043.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.1" y="1054.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.24%)</title><rect x="1067.1" y="1027.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1070.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 0.88%)</title><rect x="1070.0" y="1027.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.0" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.88%)</title><rect x="1070.0" y="1011.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1073.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 0.95%)</title><rect x="1080.3" y="1027.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 0.95%)</title><rect x="1080.3" y="1011.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.3" y="1022.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.43%)</title><rect x="1080.3" y="995.0" width="5.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1083.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="1085.4" y="995.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1088.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.33%)</title><rect x="1087.6" y="995.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.33%)</title><rect x="1087.6" y="979.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.33%)</title><rect x="1087.6" y="963.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.6" y="974.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="1087.6" y="947.0" width="3.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1090.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8 samples, 0.19%)</title><rect x="1091.5" y="1043.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.5" y="1054.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="1091.5" y="1027.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1094.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.45%)</title><rect x="1093.8" y="1043.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.45%)</title><rect x="1093.8" y="1027.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.45%)</title><rect x="1093.8" y="1011.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="1093.8" y="995.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1096.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.17%)</title><rect x="1097.2" y="995.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.2" y="1006.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="1097.2" y="979.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1100.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 2.33%)</title><rect x="1099.1" y="1043.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.1" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 2.33%)</title><rect x="1099.1" y="1027.0" width="27.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.1" y="1038.0">o..</text>
</g>
<g>
<title>char[] (35 samples, 0.83%)</title><rect x="1099.1" y="1011.0" width="9.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1102.1" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.48%)</title><rect x="1108.9" y="1011.0" width="5.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1111.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 1.02%)</title><rect x="1114.5" y="1011.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 1.02%)</title><rect x="1114.5" y="995.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 1.02%)</title><rect x="1114.5" y="979.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.5" y="990.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.02%)</title><rect x="1114.5" y="963.0" width="12.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1117.5" y="974.0"></text>
</g>
<g>
<title>[RMI TCP Accept-0 tid=36355] (1 samples, 0.02%)</title><rect x="1126.6" y="1123.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1129.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.02%)</title><rect x="1126.6" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.6" y="1118.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$AcceptLoop.run (1 samples, 0.02%)</title><rect x="1126.6" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.6" y="1102.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$AcceptLoop.executeAcceptLoop (1 samples, 0.02%)</title><rect x="1126.6" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.6" y="1086.0"></text>
</g>
<g>
<title>sun/management/jmxremote/LocalRMIServerSocketFactory$1.accept (1 samples, 0.02%)</title><rect x="1126.6" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.6" y="1070.0"></text>
</g>
<g>
<title>java/net/ServerSocket.accept (1 samples, 0.02%)</title><rect x="1126.6" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.6" y="1054.0"></text>
</g>
<g>
<title>java/net/ServerSocket.implAccept (1 samples, 0.02%)</title><rect x="1126.6" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.6" y="1038.0"></text>
</g>
<g>
<title>java/net/AbstractPlainSocketImpl.accept (1 samples, 0.02%)</title><rect x="1126.6" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.6" y="1022.0"></text>
</g>
<g>
<title>java/net/PlainSocketImpl.socketAccept (1 samples, 0.02%)</title><rect x="1126.6" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.6" y="1006.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.02%)</title><rect x="1126.6" y="979.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1129.6" y="990.0"></text>
</g>
<g>
<title>[RMI TCP Connection(3)-127.0.0.1 tid=30479] (220 samples, 5.23%)</title><rect x="1126.9" y="1123.0" width="61.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1129.9" y="1134.0">[RMI T..</text>
</g>
<g>
<title>java/lang/Thread.run (220 samples, 5.23%)</title><rect x="1126.9" y="1107.0" width="61.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.9" y="1118.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (220 samples, 5.23%)</title><rect x="1126.9" y="1091.0" width="61.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.9" y="1102.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (220 samples, 5.23%)</title><rect x="1126.9" y="1075.0" width="61.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.9" y="1086.0">java/u..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (220 samples, 5.23%)</title><rect x="1126.9" y="1059.0" width="61.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.9" y="1070.0">sun/rm..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (220 samples, 5.23%)</title><rect x="1126.9" y="1043.0" width="61.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.9" y="1054.0">java/s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$97/249391321.run (220 samples, 5.23%)</title><rect x="1126.9" y="1027.0" width="61.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.9" y="1038.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (220 samples, 5.23%)</title><rect x="1126.9" y="1011.0" width="61.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.9" y="1022.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (220 samples, 5.23%)</title><rect x="1126.9" y="995.0" width="61.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.9" y="1006.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (220 samples, 5.23%)</title><rect x="1126.9" y="979.0" width="61.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.9" y="990.0">sun/rm..</text>
</g>
<g>
<title>java.io.DataOutputStream (8 samples, 0.19%)</title><rect x="1126.9" y="963.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1129.9" y="974.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1129.1" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.1" y="974.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1129.1" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.1" y="958.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.02%)</title><rect x="1129.1" y="931.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1132.1" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (211 samples, 5.02%)</title><rect x="1129.4" y="963.0" width="59.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.4" y="974.0">sun/rm..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (177 samples, 4.21%)</title><rect x="1129.4" y="947.0" width="49.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.4" y="958.0">java/..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (177 samples, 4.21%)</title><rect x="1129.4" y="931.0" width="49.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.4" y="942.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (177 samples, 4.21%)</title><rect x="1129.4" y="915.0" width="49.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.4" y="926.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (177 samples, 4.21%)</title><rect x="1129.4" y="899.0" width="49.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.4" y="910.0">sun/r..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (87 samples, 2.07%)</title><rect x="1129.4" y="883.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.4" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (87 samples, 2.07%)</title><rect x="1129.4" y="867.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.4" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor31.invoke (3 samples, 0.07%)</title><rect x="1129.4" y="851.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.4" y="862.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (3 samples, 0.07%)</title><rect x="1129.4" y="835.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.4" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.07%)</title><rect x="1129.4" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.4" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.07%)</title><rect x="1129.4" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.4" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.07%)</title><rect x="1129.4" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.4" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (3 samples, 0.07%)</title><rect x="1129.4" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.4" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (3 samples, 0.07%)</title><rect x="1129.4" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.4" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (3 samples, 0.07%)</title><rect x="1129.4" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.4" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (3 samples, 0.07%)</title><rect x="1129.4" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.4" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (3 samples, 0.07%)</title><rect x="1129.4" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.4" y="718.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (1 samples, 0.02%)</title><rect x="1129.4" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1129.4" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1129.4" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1129.4" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.4" y="654.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1129.4" y="627.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1132.4" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (2 samples, 0.05%)</title><rect x="1129.7" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1129.7" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1129.7" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="1129.7" y="643.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1132.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (84 samples, 2.00%)</title><rect x="1130.3" y="851.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.3" y="862.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (84 samples, 2.00%)</title><rect x="1130.3" y="835.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.3" y="846.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (71 samples, 1.69%)</title><rect x="1130.3" y="819.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.3" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (71 samples, 1.69%)</title><rect x="1130.3" y="803.0" width="19.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.3" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (71 samples, 1.69%)</title><rect x="1130.3" y="787.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.3" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (71 samples, 1.69%)</title><rect x="1130.3" y="771.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.3" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (71 samples, 1.69%)</title><rect x="1130.3" y="755.0" width="19.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.3" y="766.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (71 samples, 1.69%)</title><rect x="1130.3" y="739.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.3" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (71 samples, 1.69%)</title><rect x="1130.3" y="723.0" width="19.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.3" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (71 samples, 1.69%)</title><rect x="1130.3" y="707.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.3" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (71 samples, 1.69%)</title><rect x="1130.3" y="691.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.3" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (71 samples, 1.69%)</title><rect x="1130.3" y="675.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.3" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (71 samples, 1.69%)</title><rect x="1130.3" y="659.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.3" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (71 samples, 1.69%)</title><rect x="1130.3" y="643.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.3" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (71 samples, 1.69%)</title><rect x="1130.3" y="627.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.3" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (66 samples, 1.57%)</title><rect x="1130.3" y="611.0" width="18.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.3" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (66 samples, 1.57%)</title><rect x="1130.3" y="595.0" width="18.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.3" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (66 samples, 1.57%)</title><rect x="1130.3" y="579.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.3" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (66 samples, 1.57%)</title><rect x="1130.3" y="563.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.3" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (23 samples, 0.55%)</title><rect x="1130.3" y="547.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.3" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (22 samples, 0.52%)</title><rect x="1130.3" y="531.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.3" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (20 samples, 0.48%)</title><rect x="1130.3" y="515.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.3" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (20 samples, 0.48%)</title><rect x="1130.3" y="499.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1130.3" y="483.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1133.3" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (10 samples, 0.24%)</title><rect x="1130.5" y="483.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.5" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (10 samples, 0.24%)</title><rect x="1130.5" y="467.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.24%)</title><rect x="1130.5" y="451.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.24%)</title><rect x="1130.5" y="435.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1133.5" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (9 samples, 0.21%)</title><rect x="1133.3" y="483.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.21%)</title><rect x="1133.3" y="467.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1136.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.05%)</title><rect x="1135.9" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.9" y="526.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (2 samples, 0.05%)</title><rect x="1135.9" y="499.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1138.9" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.02%)</title><rect x="1136.4" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.4" y="542.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1136.4" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.4" y="526.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.02%)</title><rect x="1136.4" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.4" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="1136.4" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="1136.4" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1139.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1136.7" y="547.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1139.7" y="558.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (1 samples, 0.02%)</title><rect x="1137.0" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1140.0" y="558.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (17 samples, 0.40%)</title><rect x="1137.3" y="547.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.3" y="558.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1137.3" y="531.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.02%)</title><rect x="1137.3" y="515.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.02%)</title><rect x="1137.3" y="499.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (1 samples, 0.02%)</title><rect x="1137.3" y="483.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1140.3" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (16 samples, 0.38%)</title><rect x="1137.5" y="531.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.38%)</title><rect x="1137.5" y="515.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.38%)</title><rect x="1137.5" y="499.0" width="4.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1140.5" y="510.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (24 samples, 0.57%)</title><rect x="1142.0" y="547.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.52%)</title><rect x="1142.0" y="531.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1145.0" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="1148.2" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1148.2" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.05%)</title><rect x="1148.2" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.2" y="510.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.05%)</title><rect x="1148.2" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="1148.2" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1148.2" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (1 samples, 0.02%)</title><rect x="1148.2" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.2" y="446.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (1 samples, 0.02%)</title><rect x="1148.2" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.2" y="430.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.02%)</title><rect x="1148.2" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1151.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="1148.5" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="1148.5" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.02%)</title><rect x="1148.5" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1151.5" y="414.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.8" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="595.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="579.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.8" y="574.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.8" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (5 samples, 0.12%)</title><rect x="1148.8" y="499.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.8" y="510.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (5 samples, 0.12%)</title><rect x="1148.8" y="483.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.8" y="494.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (5 samples, 0.12%)</title><rect x="1148.8" y="467.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.8" y="478.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.02%)</title><rect x="1148.8" y="451.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1151.8" y="462.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (2 samples, 0.05%)</title><rect x="1149.0" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1152.0" y="462.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (2 samples, 0.05%)</title><rect x="1149.6" y="451.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1152.6" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (2 samples, 0.05%)</title><rect x="1150.2" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.2" y="830.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1150.2" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.2" y="814.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.parseActions (1 samples, 0.02%)</title><rect x="1150.2" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.2" y="798.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.getMask (1 samples, 0.02%)</title><rect x="1150.2" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (1 samples, 0.02%)</title><rect x="1150.2" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (1 samples, 0.02%)</title><rect x="1150.2" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.2" y="750.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="1150.2" y="723.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1153.2" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (1 samples, 0.02%)</title><rect x="1150.5" y="803.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.5" y="814.0"></text>
</g>
<g>
<title>java.security.Permissions (1 samples, 0.02%)</title><rect x="1150.5" y="787.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1153.5" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (11 samples, 0.26%)</title><rect x="1150.7" y="819.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.7" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.12%)</title><rect x="1150.7" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.7" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (5 samples, 0.12%)</title><rect x="1150.7" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.7" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (5 samples, 0.12%)</title><rect x="1150.7" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.7" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1150.7" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1150.7" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1150.7" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1153.7" y="734.0"></text>
</g>
<g>
<title>java.util.Hashtable (1 samples, 0.02%)</title><rect x="1150.7" y="707.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1153.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap (1 samples, 0.02%)</title><rect x="1151.0" y="707.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1154.0" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1151.3" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1151.3" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1151.3" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (2 samples, 0.05%)</title><rect x="1151.3" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="1151.3" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.3" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="1151.3" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="1151.3" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="1151.3" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1154.3" y="654.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1151.3" y="627.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1154.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="1151.6" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1151.6" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1154.6" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1151.6" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1151.6" y="643.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1154.6" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1151.9" y="739.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1151.9" y="723.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1154.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1151.9" y="707.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.9" y="718.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (1 samples, 0.02%)</title><rect x="1151.9" y="691.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1154.9" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (6 samples, 0.14%)</title><rect x="1152.1" y="803.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.1" y="814.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (6 samples, 0.14%)</title><rect x="1152.1" y="787.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.07%)</title><rect x="1152.1" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.07%)</title><rect x="1152.1" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.07%)</title><rect x="1152.1" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.07%)</title><rect x="1152.1" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.02%)</title><rect x="1152.1" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.02%)</title><rect x="1152.1" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.02%)</title><rect x="1152.1" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.1" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.02%)</title><rect x="1152.1" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.1" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.02%)</title><rect x="1152.1" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.1" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.02%)</title><rect x="1152.1" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.1" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.02%)</title><rect x="1152.1" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1152.1" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.1" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1152.1" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.1" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1152.1" y="563.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1155.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.05%)</title><rect x="1152.4" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.05%)</title><rect x="1152.4" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.05%)</title><rect x="1152.4" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.05%)</title><rect x="1152.4" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.4" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.02%)</title><rect x="1152.4" y="643.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1155.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.02%)</title><rect x="1152.7" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.02%)</title><rect x="1152.7" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1152.7" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1152.7" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="1152.7" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.7" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1152.7" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1155.7" y="574.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1153.0" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.0" y="782.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1153.0" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.0" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1153.0" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.0" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1153.0" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.0" y="734.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1153.0" y="707.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1156.0" y="718.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1153.3" y="707.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1156.3" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1153.5" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.5" y="734.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (1 samples, 0.02%)</title><rect x="1153.5" y="707.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1156.5" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (35 samples, 0.83%)</title><rect x="1153.8" y="883.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.8" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (35 samples, 0.83%)</title><rect x="1153.8" y="867.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.8" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (35 samples, 0.83%)</title><rect x="1153.8" y="851.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.8" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (33 samples, 0.78%)</title><rect x="1153.8" y="835.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.8" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (33 samples, 0.78%)</title><rect x="1153.8" y="819.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.8" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (32 samples, 0.76%)</title><rect x="1153.8" y="803.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.8" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="1153.8" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.8" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.02%)</title><rect x="1153.8" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.8" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1153.8" y="755.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1156.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (31 samples, 0.74%)</title><rect x="1154.1" y="787.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (31 samples, 0.74%)</title><rect x="1154.1" y="771.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.1" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1154.1" y="755.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1157.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (30 samples, 0.71%)</title><rect x="1154.4" y="755.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.4" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (29 samples, 0.69%)</title><rect x="1154.4" y="739.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.4" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="1154.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.02%)</title><rect x="1154.4" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.4" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1154.4" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (28 samples, 0.67%)</title><rect x="1154.7" y="723.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.7" y="734.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.02%)</title><rect x="1154.7" y="707.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1157.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.12%)</title><rect x="1154.9" y="707.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.12%)</title><rect x="1154.9" y="691.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.12%)</title><rect x="1154.9" y="675.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.12%)</title><rect x="1154.9" y="659.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (5 samples, 0.12%)</title><rect x="1154.9" y="643.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.9" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="1154.9" y="627.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1154.9" y="611.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (5 samples, 0.12%)</title><rect x="1154.9" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (5 samples, 0.12%)</title><rect x="1154.9" y="579.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.12%)</title><rect x="1154.9" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.12%)</title><rect x="1154.9" y="547.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.07%)</title><rect x="1154.9" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.07%)</title><rect x="1154.9" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.07%)</title><rect x="1154.9" y="499.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.07%)</title><rect x="1154.9" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="1154.9" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="1154.9" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="1154.9" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1154.9" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="1154.9" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="1154.9" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="1154.9" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1154.9" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1154.9" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.02%)</title><rect x="1154.9" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.02%)</title><rect x="1154.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="1154.9" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1154.9" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="1154.9" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="1154.9" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="1154.9" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.9" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1154.9" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="1154.9" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="1154.9" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="1154.9" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.9" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1154.9" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1157.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1154.9" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1157.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.02%)</title><rect x="1154.9" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.02%)</title><rect x="1154.9" y="99.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.9" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="1154.9" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.9" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1154.9" y="67.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.9" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="1154.9" y="51.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.9" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="1154.9" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1157.9" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="1155.2" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1155.2" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1155.2" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.02%)</title><rect x="1155.2" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.2" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.02%)</title><rect x="1155.2" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="1155.2" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1155.2" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.2" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="1155.2" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.2" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="1155.2" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1158.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="1155.5" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.5" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="1155.5" y="451.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1158.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.02%)</title><rect x="1155.8" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="1155.8" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.8" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.02%)</title><rect x="1155.8" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1155.8" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1158.8" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="1156.1" y="531.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.1" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="1156.1" y="515.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1159.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (22 samples, 0.52%)</title><rect x="1156.3" y="707.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.3" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (22 samples, 0.52%)</title><rect x="1156.3" y="691.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (22 samples, 0.52%)</title><rect x="1156.3" y="675.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (22 samples, 0.52%)</title><rect x="1156.3" y="659.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (22 samples, 0.52%)</title><rect x="1156.3" y="643.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="1156.3" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="1156.3" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1156.3" y="595.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1159.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (19 samples, 0.45%)</title><rect x="1156.6" y="627.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (19 samples, 0.45%)</title><rect x="1156.6" y="611.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (11 samples, 0.26%)</title><rect x="1156.6" y="595.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="1156.6" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.02%)</title><rect x="1156.6" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.6" y="574.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="1156.6" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.24%)</title><rect x="1156.9" y="579.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.24%)</title><rect x="1156.9" y="563.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.24%)</title><rect x="1156.9" y="547.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.24%)</title><rect x="1156.9" y="531.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1156.9" y="515.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1159.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.21%)</title><rect x="1157.2" y="515.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.21%)</title><rect x="1157.2" y="499.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.21%)</title><rect x="1157.2" y="483.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.2" y="494.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.02%)</title><rect x="1157.2" y="467.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1160.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (8 samples, 0.19%)</title><rect x="1157.5" y="467.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.19%)</title><rect x="1157.5" y="451.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.19%)</title><rect x="1157.5" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (8 samples, 0.19%)</title><rect x="1157.5" y="419.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (8 samples, 0.19%)</title><rect x="1157.5" y="403.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (2 samples, 0.05%)</title><rect x="1157.5" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.05%)</title><rect x="1157.5" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="1157.5" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1160.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.10%)</title><rect x="1158.0" y="387.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.10%)</title><rect x="1158.0" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.05%)</title><rect x="1158.0" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.05%)</title><rect x="1158.0" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.05%)</title><rect x="1158.0" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.0" y="334.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="1158.0" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1161.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1158.3" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.05%)</title><rect x="1158.6" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.6" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.05%)</title><rect x="1158.6" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1161.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.05%)</title><rect x="1159.1" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (2 samples, 0.05%)</title><rect x="1159.1" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1162.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.12%)</title><rect x="1159.7" y="595.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.07%)</title><rect x="1159.7" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.07%)</title><rect x="1159.7" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1159.7" y="547.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1162.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="1160.0" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1163.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="1160.5" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.05%)</title><rect x="1160.5" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="1160.5" y="547.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1163.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.07%)</title><rect x="1161.1" y="595.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.1" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.07%)</title><rect x="1161.1" y="579.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1164.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (2 samples, 0.05%)</title><rect x="1162.0" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1165.0" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (2 samples, 0.05%)</title><rect x="1162.0" y="611.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1165.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="1162.5" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.5" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="1162.5" y="723.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1165.5" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="1162.8" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1165.8" y="814.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="1162.8" y="787.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1165.8" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="1163.1" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.1" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="1163.1" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.1" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.05%)</title><rect x="1163.1" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1166.1" y="814.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1163.1" y="787.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1166.1" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1163.4" y="787.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1163.4" y="771.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (1 samples, 0.02%)</title><rect x="1163.4" y="755.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.4" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (1 samples, 0.02%)</title><rect x="1163.4" y="739.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.4" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="1163.4" y="723.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1163.4" y="707.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="1163.4" y="691.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="1163.4" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.02%)</title><rect x="1163.4" y="659.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.4" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1163.4" y="643.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1166.4" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (17 samples, 0.40%)</title><rect x="1163.6" y="883.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.6" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (17 samples, 0.40%)</title><rect x="1163.6" y="867.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.6" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (17 samples, 0.40%)</title><rect x="1163.6" y="851.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.6" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (17 samples, 0.40%)</title><rect x="1163.6" y="835.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.6" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (4 samples, 0.10%)</title><rect x="1163.6" y="819.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1166.6" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.02%)</title><rect x="1163.6" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.6" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.02%)</title><rect x="1163.6" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.02%)</title><rect x="1163.6" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.6" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.02%)</title><rect x="1163.6" y="755.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1166.6" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.07%)</title><rect x="1163.9" y="803.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.9" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.07%)</title><rect x="1163.9" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.9" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.07%)</title><rect x="1163.9" y="771.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.07%)</title><rect x="1163.9" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1166.9" y="766.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="1163.9" y="739.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1166.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1164.2" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.2" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1164.2" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.2" y="734.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1164.2" y="707.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1167.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="1164.5" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1164.5" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1164.5" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1164.5" y="691.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1167.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (13 samples, 0.31%)</title><rect x="1164.8" y="819.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.8" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (6 samples, 0.14%)</title><rect x="1164.8" y="803.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.8" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (6 samples, 0.14%)</title><rect x="1164.8" y="787.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.8" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.02%)</title><rect x="1164.8" y="771.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1167.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.02%)</title><rect x="1165.0" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.0" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.02%)</title><rect x="1165.0" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.0" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.02%)</title><rect x="1165.0" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.0" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.02%)</title><rect x="1165.0" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.0" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.02%)</title><rect x="1165.0" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1165.0" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.0" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1165.0" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.0" y="686.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1165.0" y="659.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1168.0" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (4 samples, 0.10%)</title><rect x="1165.3" y="771.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (2 samples, 0.05%)</title><rect x="1165.3" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$FieldReflectorKey.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1165.3" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.05%)</title><rect x="1165.3" y="723.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1168.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.05%)</title><rect x="1165.9" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.9" y="766.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.05%)</title><rect x="1165.9" y="739.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1168.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (7 samples, 0.17%)</title><rect x="1166.4" y="803.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.4" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.05%)</title><rect x="1166.4" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.4" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.05%)</title><rect x="1166.4" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.4" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1166.4" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.4" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1166.4" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="1166.4" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="1166.4" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.4" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="1166.4" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="1166.4" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.4" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1166.4" y="659.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1169.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="1166.7" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="1166.7" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="1166.7" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="1166.7" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.7" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.02%)</title><rect x="1166.7" y="691.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1169.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (5 samples, 0.12%)</title><rect x="1167.0" y="787.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.0" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="1167.0" y="771.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="1167.0" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (2 samples, 0.05%)</title><rect x="1167.0" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.0" y="750.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (2 samples, 0.05%)</title><rect x="1167.0" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.0" y="734.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (2 samples, 0.05%)</title><rect x="1167.0" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.02%)</title><rect x="1167.0" y="691.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1170.0" y="702.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.02%)</title><rect x="1167.3" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="1167.3" y="675.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1170.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (3 samples, 0.07%)</title><rect x="1167.6" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1170.6" y="750.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (3 samples, 0.07%)</title><rect x="1167.6" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (3 samples, 0.07%)</title><rect x="1167.6" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (3 samples, 0.07%)</title><rect x="1167.6" y="691.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.07%)</title><rect x="1167.6" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.07%)</title><rect x="1167.6" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.05%)</title><rect x="1167.6" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.05%)</title><rect x="1167.6" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.05%)</title><rect x="1167.6" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.05%)</title><rect x="1167.6" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1170.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.05%)</title><rect x="1167.6" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.05%)</title><rect x="1167.6" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.05%)</title><rect x="1167.6" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="1167.6" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1167.6" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="1167.6" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.6" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="1167.6" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1170.6" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.02%)</title><rect x="1168.1" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.1" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.02%)</title><rect x="1168.1" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.1" y="638.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1168.1" y="611.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1171.1" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (38 samples, 0.90%)</title><rect x="1168.4" y="883.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.4" y="894.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (1 samples, 0.02%)</title><rect x="1168.4" y="867.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1171.4" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (37 samples, 0.88%)</title><rect x="1168.7" y="867.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.7" y="878.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionOutputStream (1 samples, 0.02%)</title><rect x="1168.7" y="851.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1171.7" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (36 samples, 0.86%)</title><rect x="1169.0" y="851.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.0" y="862.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (36 samples, 0.86%)</title><rect x="1169.0" y="835.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.0" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (36 samples, 0.86%)</title><rect x="1169.0" y="819.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.0" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (36 samples, 0.86%)</title><rect x="1169.0" y="803.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.0" y="814.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (1 samples, 0.02%)</title><rect x="1169.0" y="787.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1172.0" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (29 samples, 0.69%)</title><rect x="1169.2" y="787.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.2" y="798.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="1169.2" y="771.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1172.2" y="782.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.10%)</title><rect x="1173.2" y="771.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1176.2" y="782.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.26%)</title><rect x="1174.3" y="771.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1177.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1177.4" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.4" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="1177.4" y="771.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1180.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1177.9" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.9" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (1 samples, 0.02%)</title><rect x="1177.9" y="771.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1180.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1178.2" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.2" y="782.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.07%)</title><rect x="1178.2" y="755.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1181.2" y="766.0"></text>
</g>
<g>
<title>sun.rmi.transport.ObjectEndpoint (1 samples, 0.02%)</title><rect x="1179.1" y="947.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1182.1" y="958.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$1 (1 samples, 0.02%)</title><rect x="1179.3" y="947.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1182.3" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (32 samples, 0.76%)</title><rect x="1179.6" y="947.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.6" y="958.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (1 samples, 0.02%)</title><rect x="1179.6" y="931.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1182.6" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (31 samples, 0.74%)</title><rect x="1179.9" y="931.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.9" y="942.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (31 samples, 0.74%)</title><rect x="1179.9" y="915.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1182.9" y="926.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (31 samples, 0.74%)</title><rect x="1179.9" y="899.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.9" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (26 samples, 0.62%)</title><rect x="1179.9" y="883.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.9" y="894.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="1179.9" y="867.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1182.9" y="878.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="1180.7" y="867.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.7" y="878.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.21%)</title><rect x="1182.4" y="867.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.05%)</title><rect x="1185.0" y="867.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1188.0" y="878.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (6 samples, 0.14%)</title><rect x="1185.5" y="867.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="878.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1185.5" y="851.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1188.5" y="862.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.12%)</title><rect x="1185.8" y="851.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1187.2" y="883.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.2" y="894.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="1187.2" y="867.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1190.2" y="878.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (2 samples, 0.05%)</title><rect x="1187.8" y="867.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="1188.3" y="867.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1191.3" y="878.0"></text>
</g>
<g>
<title>[RMI TCP Connection(idle) tid=36103] (5 samples, 0.12%)</title><rect x="1188.6" y="1123.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.12%)</title><rect x="1188.6" y="1107.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.12%)</title><rect x="1188.6" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.12%)</title><rect x="1188.6" y="1075.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.02%)</title><rect x="1188.6" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1 samples, 0.02%)</title><rect x="1188.6" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="1188.6" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.02%)</title><rect x="1188.6" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.6" y="1022.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1 samples, 0.02%)</title><rect x="1188.6" y="995.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1191.6" y="1006.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (4 samples, 0.10%)</title><rect x="1188.9" y="1059.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1188.9" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$BMH/1067538256.reinvoke (1 samples, 0.02%)</title><rect x="1188.9" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2021889128.invoke (1 samples, 0.02%)</title><rect x="1188.9" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1188.9" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="1188.9" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="1188.9" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.9" y="974.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1188.9" y="947.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1191.9" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.07%)</title><rect x="1189.2" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.2" y="1054.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$97/249391321.run (3 samples, 0.07%)</title><rect x="1189.2" y="1027.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.2" y="1038.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 0.07%)</title><rect x="1189.2" y="1011.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.2" y="1022.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 0.07%)</title><rect x="1189.2" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.2" y="1006.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1189.2" y="979.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.2" y="990.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1189.2" y="963.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.2" y="974.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1189.2" y="947.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1192.2" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (2 samples, 0.05%)</title><rect x="1189.4" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (2 samples, 0.05%)</title><rect x="1189.4" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.05%)</title><rect x="1189.4" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.05%)</title><rect x="1189.4" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.05%)</title><rect x="1189.4" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (2 samples, 0.05%)</title><rect x="1189.4" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.05%)</title><rect x="1189.4" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.05%)</title><rect x="1189.4" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (2 samples, 0.05%)</title><rect x="1189.4" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.05%)</title><rect x="1189.4" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.05%)</title><rect x="1189.4" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.05%)</title><rect x="1189.4" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.05%)</title><rect x="1189.4" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.05%)</title><rect x="1189.4" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.05%)</title><rect x="1189.4" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 0.05%)</title><rect x="1189.4" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.05%)</title><rect x="1189.4" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.4" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.05%)</title><rect x="1189.4" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="574.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1189.4" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="558.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.05%)</title><rect x="1189.4" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="1189.4" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.05%)</title><rect x="1189.4" y="499.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1192.4" y="510.0"></text>
</g>
</g>
</svg>
