<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (2,140 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 30 tid=35331] (12 samples, 0.56%)</title><rect x="10.0" y="803.0" width="6.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.run (12 samples, 0.56%)</title><rect x="10.0" y="787.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (12 samples, 0.56%)</title><rect x="10.0" y="771.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (12 samples, 0.56%)</title><rect x="10.0" y="755.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/767414920.linkToTargetMethod (12 samples, 0.56%)</title><rect x="10.0" y="739.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/443637230.invoke (12 samples, 0.56%)</title><rect x="10.0" y="723.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.56%)</title><rect x="10.0" y="707.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.56%)</title><rect x="10.0" y="691.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.56%)</title><rect x="10.0" y="675.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.56%)</title><rect x="10.0" y="659.0" width="6.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=37379] (1 samples, 0.05%)</title><rect x="16.6" y="803.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="19.6" y="814.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.05%)</title><rect x="16.6" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.05%)</title><rect x="16.6" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.05%)</title><rect x="16.6" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.05%)</title><rect x="16.6" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.05%)</title><rect x="16.6" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.05%)</title><rect x="16.6" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.05%)</title><rect x="16.6" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.6" y="702.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.05%)</title><rect x="16.6" y="675.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.6" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=40195] (2,030 samples, 94.86%)</title><rect x="17.2" y="803.0" width="1119.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.2" y="814.0">[NIO Selector #3 tid=40195]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,030 samples, 94.86%)</title><rect x="17.2" y="787.0" width="1119.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.2" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (74 samples, 3.46%)</title><rect x="17.2" y="771.0" width="40.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.2" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (44 samples, 2.06%)</title><rect x="17.2" y="755.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.2" y="766.0">o..</text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (12 samples, 0.56%)</title><rect x="17.2" y="739.0" width="6.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="20.2" y="750.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (32 samples, 1.50%)</title><rect x="23.8" y="739.0" width="17.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.05%)</title><rect x="41.4" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.4" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.05%)</title><rect x="41.4" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.05%)</title><rect x="41.4" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.4" y="734.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.05%)</title><rect x="41.4" y="707.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="44.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 1.36%)</title><rect x="42.0" y="755.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 1.36%)</title><rect x="42.0" y="739.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 1.36%)</title><rect x="42.0" y="723.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (29 samples, 1.36%)</title><rect x="42.0" y="707.0" width="16.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (29 samples, 1.36%)</title><rect x="42.0" y="691.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (29 samples, 1.36%)</title><rect x="42.0" y="675.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (29 samples, 1.36%)</title><rect x="42.0" y="659.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (29 samples, 1.36%)</title><rect x="42.0" y="643.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 1.36%)</title><rect x="42.0" y="627.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.0" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 1.36%)</title><rect x="42.0" y="611.0" width="16.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="45.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,956 samples, 91.40%)</title><rect x="58.0" y="771.0" width="1078.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.0" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,956 samples, 91.40%)</title><rect x="58.0" y="755.0" width="1078.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.0" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,956 samples, 91.40%)</title><rect x="58.0" y="739.0" width="1078.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="750.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,626 samples, 75.98%)</title><rect x="58.0" y="723.0" width="896.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="734.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,626 samples, 75.98%)</title><rect x="58.0" y="707.0" width="896.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.0" y="718.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,574 samples, 73.55%)</title><rect x="58.0" y="691.0" width="867.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.0" y="702.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (144 samples, 6.73%)</title><rect x="58.0" y="675.0" width="79.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.0" y="686.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (144 samples, 6.73%)</title><rect x="58.0" y="659.0" width="79.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.0" y="670.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (55 samples, 2.57%)</title><rect x="58.0" y="643.0" width="30.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="654.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (55 samples, 2.57%)</title><rect x="58.0" y="627.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.0" y="638.0">on..</text>
</g>
<g>
<title>byte[] (55 samples, 2.57%)</title><rect x="58.0" y="611.0" width="30.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="61.0" y="622.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (89 samples, 4.16%)</title><rect x="88.3" y="643.0" width="49.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.3" y="654.0">one/n..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (40 samples, 1.87%)</title><rect x="88.3" y="627.0" width="22.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.3" y="638.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (49 samples, 2.29%)</title><rect x="110.4" y="627.0" width="27.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.4" y="638.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (49 samples, 2.29%)</title><rect x="110.4" y="611.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.4" y="622.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (49 samples, 2.29%)</title><rect x="110.4" y="595.0" width="27.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.4" y="606.0">o..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 2.29%)</title><rect x="110.4" y="579.0" width="27.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.4" y="590.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 2.29%)</title><rect x="110.4" y="563.0" width="27.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="113.4" y="574.0">j..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (75 samples, 3.50%)</title><rect x="137.4" y="675.0" width="41.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.4" y="686.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (75 samples, 3.50%)</title><rect x="137.4" y="659.0" width="41.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.4" y="670.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 3.50%)</title><rect x="137.4" y="643.0" width="41.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.4" y="654.0">jav..</text>
</g>
<g>
<title>java.lang.String (50 samples, 2.34%)</title><rect x="137.4" y="627.0" width="27.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="140.4" y="638.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 1.17%)</title><rect x="164.9" y="627.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.9" y="638.0"></text>
</g>
<g>
<title>byte[] (25 samples, 1.17%)</title><rect x="164.9" y="611.0" width="13.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="167.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.entity (1,355 samples, 63.32%)</title><rect x="178.7" y="675.0" width="747.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.7" y="686.0">ru/mail/polis/service/stakenschneider/ServiceImplementation.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.28%)</title><rect x="178.7" y="659.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.28%)</title><rect x="178.7" y="643.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.28%)</title><rect x="178.7" y="627.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.28%)</title><rect x="178.7" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.7" y="622.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.28%)</title><rect x="178.7" y="595.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="181.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (93 samples, 4.35%)</title><rect x="182.0" y="659.0" width="51.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.0" y="670.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (93 samples, 4.35%)</title><rect x="182.0" y="643.0" width="51.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.0" y="654.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (93 samples, 4.35%)</title><rect x="182.0" y="627.0" width="51.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.0" y="638.0">java...</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImplementation.get (1,256 samples, 58.69%)</title><rect x="233.3" y="659.0" width="692.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.3" y="670.0">ru/mail/polis/service/stakenschneider/ServiceImplementation.get</text>
</g>
<g>
<title>one.nio.http.Response (25 samples, 1.17%)</title><rect x="233.3" y="643.0" width="13.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="236.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (121 samples, 5.65%)</title><rect x="247.1" y="643.0" width="66.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.1" y="654.0">one/nio..</text>
</g>
<g>
<title>byte[] (57 samples, 2.66%)</title><rect x="247.1" y="627.0" width="31.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="250.1" y="638.0">by..</text>
</g>
<g>
<title>java.lang.String[] (23 samples, 1.07%)</title><rect x="278.5" y="627.0" width="12.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="281.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 1.92%)</title><rect x="291.2" y="627.0" width="22.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="294.2" y="638.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (1,110 samples, 51.87%)</title><rect x="313.8" y="643.0" width="612.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.8" y="654.0">ru/mail/polis/dao/RocksDAO.get</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 4.25%)</title><rect x="313.8" y="627.0" width="50.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.8" y="638.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/592688102.invoke (91 samples, 4.25%)</title><rect x="313.8" y="611.0" width="50.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.8" y="622.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 4.25%)</title><rect x="313.8" y="595.0" width="50.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.8" y="606.0">java/..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (10 samples, 0.47%)</title><rect x="313.8" y="579.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.47%)</title><rect x="313.8" y="563.0" width="5.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="316.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (81 samples, 3.79%)</title><rect x="319.3" y="579.0" width="44.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.3" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (81 samples, 3.79%)</title><rect x="319.3" y="563.0" width="44.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.3" y="574.0">jdk/..</text>
</g>
<g>
<title>byte[] (81 samples, 3.79%)</title><rect x="319.3" y="547.0" width="44.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="322.3" y="558.0">byte[]</text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (243 samples, 11.36%)</title><rect x="364.0" y="627.0" width="134.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.0" y="638.0">java/nio/ByteBuff..</text>
</g>
<g>
<title>java.lang.StringBuffer (12 samples, 0.56%)</title><rect x="364.0" y="611.0" width="6.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="367.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (66 samples, 3.08%)</title><rect x="370.6" y="611.0" width="36.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.6" y="622.0">jav..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (66 samples, 3.08%)</title><rect x="370.6" y="595.0" width="36.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.6" y="606.0">jav..</text>
</g>
<g>
<title>byte[] (66 samples, 3.08%)</title><rect x="370.6" y="579.0" width="36.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="373.6" y="590.0">byt..</text>
</g>
<g>
<title>java/lang/StringBuffer.append (79 samples, 3.69%)</title><rect x="407.0" y="611.0" width="43.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.0" y="622.0">java..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (79 samples, 3.69%)</title><rect x="407.0" y="595.0" width="43.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.0" y="606.0">java..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (79 samples, 3.69%)</title><rect x="407.0" y="579.0" width="43.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.0" y="590.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 3.69%)</title><rect x="407.0" y="563.0" width="43.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.0" y="574.0">java..</text>
</g>
<g>
<title>byte[] (79 samples, 3.69%)</title><rect x="407.0" y="547.0" width="43.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="410.0" y="558.0">byte[]</text>
</g>
<g>
<title>java/lang/StringBuffer.toString (86 samples, 4.02%)</title><rect x="450.6" y="611.0" width="47.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.6" y="622.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 4.02%)</title><rect x="450.6" y="595.0" width="47.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.6" y="606.0">java..</text>
</g>
<g>
<title>java.lang.String (9 samples, 0.42%)</title><rect x="450.6" y="579.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="453.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 3.60%)</title><rect x="455.5" y="579.0" width="42.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="590.0">java..</text>
</g>
<g>
<title>byte[] (77 samples, 3.60%)</title><rect x="455.5" y="563.0" width="42.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="458.5" y="574.0">byte[]</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (716 samples, 33.46%)</title><rect x="498.0" y="627.0" width="394.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.0" y="638.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (716 samples, 33.46%)</title><rect x="498.0" y="611.0" width="394.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.0" y="622.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (716 samples, 33.46%)</title><rect x="498.0" y="595.0" width="394.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.0" y="606.0">org/rocksdb/util/BytewiseComparator.compare</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (716 samples, 33.46%)</title><rect x="498.0" y="579.0" width="394.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.0" y="590.0">org/rocksdb/util/BytewiseComparator.compare</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (716 samples, 33.46%)</title><rect x="498.0" y="563.0" width="394.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.0" y="574.0">org/rocksdb/AbstractSlice.data</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (716 samples, 33.46%)</title><rect x="498.0" y="547.0" width="394.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.0" y="558.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (716 samples, 33.46%)</title><rect x="498.0" y="531.0" width="394.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.0" y="542.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (716 samples, 33.46%)</title><rect x="498.0" y="515.0" width="394.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="501.0" y="526.0">byte[]</text>
</g>
<g>
<title>ru.mail.polis.dao.NoSuchElementLite (52 samples, 2.43%)</title><rect x="892.8" y="627.0" width="28.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="895.8" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.toArray (8 samples, 0.37%)</title><rect x="921.5" y="627.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.5" y="638.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.37%)</title><rect x="921.5" y="611.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="924.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (52 samples, 2.43%)</title><rect x="925.9" y="691.0" width="28.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.9" y="702.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 2.43%)</title><rect x="925.9" y="675.0" width="28.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.9" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 2.43%)</title><rect x="925.9" y="659.0" width="28.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.9" y="670.0">ja..</text>
</g>
<g>
<title>java.lang.String (48 samples, 2.24%)</title><rect x="925.9" y="643.0" width="26.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="928.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.19%)</title><rect x="952.3" y="643.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.3" y="654.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.19%)</title><rect x="952.3" y="627.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="955.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (231 samples, 10.79%)</title><rect x="954.6" y="723.0" width="127.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.6" y="734.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 1.31%)</title><rect x="954.6" y="707.0" width="15.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="957.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (81 samples, 3.79%)</title><rect x="970.0" y="707.0" width="44.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.0" y="718.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (81 samples, 3.79%)</title><rect x="970.0" y="691.0" width="44.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="973.0" y="702.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (122 samples, 5.70%)</title><rect x="1014.7" y="707.0" width="67.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.7" y="718.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (122 samples, 5.70%)</title><rect x="1014.7" y="691.0" width="67.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.7" y="702.0">one/nio..</text>
</g>
<g>
<title>char[] (51 samples, 2.38%)</title><rect x="1014.7" y="675.0" width="28.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1017.7" y="686.0">ch..</text>
</g>
<g>
<title>java.lang.String (38 samples, 1.78%)</title><rect x="1042.8" y="675.0" width="20.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1045.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 1.54%)</title><rect x="1063.7" y="675.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 1.54%)</title><rect x="1063.7" y="659.0" width="18.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 1.54%)</title><rect x="1063.7" y="643.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.7" y="654.0"></text>
</g>
<g>
<title>byte[] (33 samples, 1.54%)</title><rect x="1063.7" y="627.0" width="18.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1066.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 4.63%)</title><rect x="1081.9" y="723.0" width="54.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.9" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 4.63%)</title><rect x="1081.9" y="707.0" width="54.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.9" y="718.0">one/n..</text>
</g>
<g>
<title>char[] (49 samples, 2.29%)</title><rect x="1081.9" y="691.0" width="27.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1084.9" y="702.0">c..</text>
</g>
<g>
<title>java.lang.String (24 samples, 1.12%)</title><rect x="1108.9" y="691.0" width="13.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1111.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 1.21%)</title><rect x="1122.2" y="691.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 1.21%)</title><rect x="1122.2" y="675.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26 samples, 1.21%)</title><rect x="1122.2" y="659.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.2" y="670.0"></text>
</g>
<g>
<title>byte[] (26 samples, 1.21%)</title><rect x="1122.2" y="643.0" width="14.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1125.2" y="654.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=39427] (1 samples, 0.05%)</title><rect x="1136.5" y="803.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1 samples, 0.05%)</title><rect x="1136.5" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.05%)</title><rect x="1136.5" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.05%)</title><rect x="1136.5" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.5" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.05%)</title><rect x="1136.5" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.05%)</title><rect x="1136.5" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.5" y="734.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (1 samples, 0.05%)</title><rect x="1136.5" y="707.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1139.5" y="718.0"></text>
</g>
<g>
<title>[RMI TCP Connection(25)-127.0.0.1 tid=30243] (96 samples, 4.49%)</title><rect x="1137.1" y="803.0" width="52.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1140.1" y="814.0">[RMI ..</text>
</g>
<g>
<title>java/lang/Thread.run (96 samples, 4.49%)</title><rect x="1137.1" y="787.0" width="52.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.1" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (96 samples, 4.49%)</title><rect x="1137.1" y="771.0" width="52.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.1" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (96 samples, 4.49%)</title><rect x="1137.1" y="755.0" width="52.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.1" y="766.0">java/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (96 samples, 4.49%)</title><rect x="1137.1" y="739.0" width="52.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.1" y="750.0">sun/r..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (96 samples, 4.49%)</title><rect x="1137.1" y="723.0" width="52.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.1" y="734.0">java/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$97/249391321.run (96 samples, 4.49%)</title><rect x="1137.1" y="707.0" width="52.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.1" y="718.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (96 samples, 4.49%)</title><rect x="1137.1" y="691.0" width="52.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.1" y="702.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (96 samples, 4.49%)</title><rect x="1137.1" y="675.0" width="52.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.1" y="686.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (96 samples, 4.49%)</title><rect x="1137.1" y="659.0" width="52.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.1" y="670.0">sun/r..</text>
</g>
<g>
<title>java.io.DataOutputStream (4 samples, 0.19%)</title><rect x="1137.1" y="643.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1140.1" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (92 samples, 4.30%)</title><rect x="1139.3" y="643.0" width="50.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.3" y="654.0">sun/r..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (84 samples, 3.93%)</title><rect x="1139.3" y="627.0" width="46.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.3" y="638.0">java..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (84 samples, 3.93%)</title><rect x="1139.3" y="611.0" width="46.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.3" y="622.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (84 samples, 3.93%)</title><rect x="1139.3" y="595.0" width="46.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.3" y="606.0">sun/..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (84 samples, 3.93%)</title><rect x="1139.3" y="579.0" width="46.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.3" y="590.0">sun/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (44 samples, 2.06%)</title><rect x="1139.3" y="563.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.3" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (44 samples, 2.06%)</title><rect x="1139.3" y="547.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.3" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor31.invoke (1 samples, 0.05%)</title><rect x="1139.3" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.3" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.05%)</title><rect x="1139.3" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.3" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.05%)</title><rect x="1139.3" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.3" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.05%)</title><rect x="1139.3" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.3" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.05%)</title><rect x="1139.3" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.3" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (1 samples, 0.05%)</title><rect x="1139.3" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.3" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (1 samples, 0.05%)</title><rect x="1139.3" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.3" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (1 samples, 0.05%)</title><rect x="1139.3" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.3" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (1 samples, 0.05%)</title><rect x="1139.3" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.3" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (1 samples, 0.05%)</title><rect x="1139.3" y="387.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.3" y="398.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (1 samples, 0.05%)</title><rect x="1139.3" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1139.3" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1139.3" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="1139.3" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.3" y="334.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="1139.3" y="307.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1142.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (43 samples, 2.01%)</title><rect x="1139.8" y="531.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.8" y="542.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (43 samples, 2.01%)</title><rect x="1139.8" y="515.0" width="23.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.8" y="526.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (39 samples, 1.82%)</title><rect x="1139.8" y="499.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.8" y="510.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (39 samples, 1.82%)</title><rect x="1139.8" y="483.0" width="21.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.8" y="494.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (39 samples, 1.82%)</title><rect x="1139.8" y="467.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.8" y="478.0">j..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (39 samples, 1.82%)</title><rect x="1139.8" y="451.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.8" y="462.0">c..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (39 samples, 1.82%)</title><rect x="1139.8" y="435.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.8" y="446.0">c..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (39 samples, 1.82%)</title><rect x="1139.8" y="419.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.8" y="430.0">j..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (39 samples, 1.82%)</title><rect x="1139.8" y="403.0" width="21.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.8" y="414.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (39 samples, 1.82%)</title><rect x="1139.8" y="387.0" width="21.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.8" y="398.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (39 samples, 1.82%)</title><rect x="1139.8" y="371.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.8" y="382.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (39 samples, 1.82%)</title><rect x="1139.8" y="355.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.8" y="366.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (39 samples, 1.82%)</title><rect x="1139.8" y="339.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.8" y="350.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (39 samples, 1.82%)</title><rect x="1139.8" y="323.0" width="21.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.8" y="334.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (39 samples, 1.82%)</title><rect x="1139.8" y="307.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.8" y="318.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (35 samples, 1.64%)</title><rect x="1139.8" y="291.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.8" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (35 samples, 1.64%)</title><rect x="1139.8" y="275.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.8" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (35 samples, 1.64%)</title><rect x="1139.8" y="259.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.8" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (35 samples, 1.64%)</title><rect x="1139.8" y="243.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.8" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.61%)</title><rect x="1139.8" y="227.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.8" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (12 samples, 0.56%)</title><rect x="1139.8" y="211.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.8" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (10 samples, 0.47%)</title><rect x="1139.8" y="195.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.8" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (10 samples, 0.47%)</title><rect x="1139.8" y="179.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.8" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.09%)</title><rect x="1139.8" y="163.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1142.8" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (7 samples, 0.33%)</title><rect x="1140.9" y="163.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.9" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1140.9" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.9" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.05%)</title><rect x="1140.9" y="131.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.9" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.05%)</title><rect x="1140.9" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.9" y="126.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.05%)</title><rect x="1140.9" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.9" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1140.9" y="83.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.9" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.05%)</title><rect x="1140.9" y="67.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.9" y="78.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1 samples, 0.05%)</title><rect x="1140.9" y="51.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1143.9" y="62.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (6 samples, 0.28%)</title><rect x="1141.5" y="147.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.5" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.09%)</title><rect x="1141.5" y="131.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1144.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.19%)</title><rect x="1142.6" y="131.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.6" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.19%)</title><rect x="1142.6" y="115.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1145.6" y="126.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.05%)</title><rect x="1144.8" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1144.8" y="147.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1147.8" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.09%)</title><rect x="1145.3" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.3" y="206.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (2 samples, 0.09%)</title><rect x="1145.3" y="179.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1148.3" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.05%)</title><rect x="1146.4" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.4" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1146.4" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.4" y="206.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.05%)</title><rect x="1146.4" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.4" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.05%)</title><rect x="1146.4" y="163.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1149.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1147.0" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1150.0" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (11 samples, 0.51%)</title><rect x="1147.5" y="227.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.5" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (11 samples, 0.51%)</title><rect x="1147.5" y="211.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.05%)</title><rect x="1147.5" y="195.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1150.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.47%)</title><rect x="1148.1" y="195.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.1" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.47%)</title><rect x="1148.1" y="179.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1151.1" y="190.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (10 samples, 0.47%)</title><rect x="1153.6" y="227.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.47%)</title><rect x="1153.6" y="211.0" width="5.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1156.6" y="222.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="291.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.1" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="259.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="243.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.1" y="254.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="227.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.1" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="211.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="195.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (4 samples, 0.19%)</title><rect x="1159.1" y="179.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.1" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (4 samples, 0.19%)</title><rect x="1159.1" y="163.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.1" y="174.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (4 samples, 0.19%)</title><rect x="1159.1" y="147.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.1" y="158.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (1 samples, 0.05%)</title><rect x="1159.1" y="131.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1162.1" y="142.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (2 samples, 0.09%)</title><rect x="1159.7" y="131.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1162.7" y="142.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1160.8" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.8" y="142.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (1 samples, 0.05%)</title><rect x="1160.8" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.8" y="126.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.05%)</title><rect x="1160.8" y="99.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.8" y="110.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.05%)</title><rect x="1160.8" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.8" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="1160.8" y="67.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1163.8" y="78.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (4 samples, 0.19%)</title><rect x="1161.3" y="499.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.3" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1161.3" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.3" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.05%)</title><rect x="1161.3" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.3" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.05%)</title><rect x="1161.3" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.3" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.3" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.3" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.3" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.3" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.3" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.3" y="414.0"></text>
</g>
<g>
<title>java.util.Hashtable (1 samples, 0.05%)</title><rect x="1161.3" y="387.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1164.3" y="398.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.14%)</title><rect x="1161.9" y="483.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.9" y="494.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (3 samples, 0.14%)</title><rect x="1161.9" y="467.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.09%)</title><rect x="1161.9" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.09%)</title><rect x="1161.9" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.09%)</title><rect x="1161.9" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.09%)</title><rect x="1161.9" y="403.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.05%)</title><rect x="1161.9" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.05%)</title><rect x="1161.9" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.05%)</title><rect x="1161.9" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.9" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.05%)</title><rect x="1161.9" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.9" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.05%)</title><rect x="1161.9" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.05%)</title><rect x="1161.9" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.05%)</title><rect x="1161.9" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="1161.9" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1161.9" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="1161.9" y="243.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1164.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.05%)</title><rect x="1162.4" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1165.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.05%)</title><rect x="1162.4" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1165.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.05%)</title><rect x="1162.4" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.05%)</title><rect x="1162.4" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.05%)</title><rect x="1162.4" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.4" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.05%)</title><rect x="1162.4" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.05%)</title><rect x="1162.4" y="291.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1165.4" y="302.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1163.0" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.0" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1163.0" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1163.0" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1163.0" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.0" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="1163.0" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1166.0" y="398.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (18 samples, 0.84%)</title><rect x="1163.5" y="563.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (18 samples, 0.84%)</title><rect x="1163.5" y="547.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.84%)</title><rect x="1163.5" y="531.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (18 samples, 0.84%)</title><rect x="1163.5" y="515.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.84%)</title><rect x="1163.5" y="499.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (17 samples, 0.79%)</title><rect x="1163.5" y="483.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (17 samples, 0.79%)</title><rect x="1163.5" y="467.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (17 samples, 0.79%)</title><rect x="1163.5" y="451.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (17 samples, 0.79%)</title><rect x="1163.5" y="435.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1166.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (16 samples, 0.75%)</title><rect x="1163.5" y="419.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.05%)</title><rect x="1163.5" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.05%)</title><rect x="1163.5" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1163.5" y="371.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1166.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.70%)</title><rect x="1164.1" y="403.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.14%)</title><rect x="1164.1" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.14%)</title><rect x="1164.1" y="371.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.14%)</title><rect x="1164.1" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.14%)</title><rect x="1164.1" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.14%)</title><rect x="1164.1" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1167.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.14%)</title><rect x="1164.1" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.14%)</title><rect x="1164.1" y="291.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.14%)</title><rect x="1164.1" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.14%)</title><rect x="1164.1" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.14%)</title><rect x="1164.1" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.14%)</title><rect x="1164.1" y="227.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="1164.1" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="1164.1" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="1164.1" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="1164.1" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.1" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="1164.1" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.05%)</title><rect x="1164.1" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.1" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="1164.1" y="115.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.1" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.05%)</title><rect x="1164.1" y="99.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.1" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.05%)</title><rect x="1164.1" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.1" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.05%)</title><rect x="1164.1" y="67.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.1" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.05%)</title><rect x="1164.1" y="51.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.1" y="62.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.05%)</title><rect x="1164.1" y="35.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1167.1" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.05%)</title><rect x="1164.6" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.05%)</title><rect x="1164.6" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.05%)</title><rect x="1164.6" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.6" y="190.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.05%)</title><rect x="1164.6" y="163.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1167.6" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.05%)</title><rect x="1165.2" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.2" y="222.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.05%)</title><rect x="1165.2" y="195.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1168.2" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (12 samples, 0.56%)</title><rect x="1165.7" y="387.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1165.7" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1168.7" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.51%)</title><rect x="1166.3" y="371.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.51%)</title><rect x="1166.3" y="355.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (11 samples, 0.51%)</title><rect x="1166.3" y="339.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (11 samples, 0.51%)</title><rect x="1166.3" y="323.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.05%)</title><rect x="1166.3" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.05%)</title><rect x="1166.3" y="291.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.3" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1166.3" y="275.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1169.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (8 samples, 0.37%)</title><rect x="1166.8" y="307.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (8 samples, 0.37%)</title><rect x="1166.8" y="291.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.19%)</title><rect x="1166.8" y="275.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.19%)</title><rect x="1166.8" y="259.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.8" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.14%)</title><rect x="1166.8" y="243.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.14%)</title><rect x="1166.8" y="227.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.14%)</title><rect x="1166.8" y="211.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.8" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1166.8" y="195.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1169.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.09%)</title><rect x="1167.4" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.4" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.09%)</title><rect x="1167.4" y="179.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.4" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.09%)</title><rect x="1167.4" y="163.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.4" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.09%)</title><rect x="1167.4" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1167.4" y="131.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1170.4" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="1167.9" y="131.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="1167.9" y="115.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.05%)</title><rect x="1167.9" y="99.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.9" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.05%)</title><rect x="1167.9" y="83.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.9" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="1167.9" y="67.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.9" y="78.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.05%)</title><rect x="1167.9" y="51.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1170.9" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.05%)</title><rect x="1168.5" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.5" y="254.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.05%)</title><rect x="1168.5" y="227.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1171.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.14%)</title><rect x="1169.0" y="275.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.05%)</title><rect x="1169.0" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.0" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.05%)</title><rect x="1169.0" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.05%)</title><rect x="1169.0" y="227.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1172.0" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.09%)</title><rect x="1169.6" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.09%)</title><rect x="1169.6" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.09%)</title><rect x="1169.6" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.09%)</title><rect x="1169.6" y="211.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.09%)</title><rect x="1169.6" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.09%)</title><rect x="1169.6" y="179.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.6" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.09%)</title><rect x="1169.6" y="163.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.09%)</title><rect x="1169.6" y="147.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.09%)</title><rect x="1169.6" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.09%)</title><rect x="1169.6" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="1169.6" y="99.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.6" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.05%)</title><rect x="1169.6" y="83.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1172.6" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.05%)</title><rect x="1170.1" y="99.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.1" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.05%)</title><rect x="1170.1" y="83.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1173.1" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.05%)</title><rect x="1170.7" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.7" y="286.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.05%)</title><rect x="1170.7" y="259.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1173.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="1171.3" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.3" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1 samples, 0.05%)</title><rect x="1171.3" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1174.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.05%)</title><rect x="1171.8" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.8" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.05%)</title><rect x="1171.8" y="291.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1174.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.05%)</title><rect x="1172.4" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.4" y="430.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.05%)</title><rect x="1172.4" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1175.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.05%)</title><rect x="1172.9" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.9" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.05%)</title><rect x="1172.9" y="467.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1175.9" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (10 samples, 0.47%)</title><rect x="1173.5" y="563.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$102/751421626.readString (1 samples, 0.05%)</title><rect x="1173.5" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.05%)</title><rect x="1173.5" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.05%)</title><rect x="1173.5" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.05%)</title><rect x="1173.5" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.05%)</title><rect x="1173.5" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.05%)</title><rect x="1173.5" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.05%)</title><rect x="1173.5" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="1173.5" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1173.5" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="1173.5" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1176.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (9 samples, 0.42%)</title><rect x="1174.0" y="547.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (9 samples, 0.42%)</title><rect x="1174.0" y="531.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (9 samples, 0.42%)</title><rect x="1174.0" y="515.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (9 samples, 0.42%)</title><rect x="1174.0" y="499.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (4 samples, 0.19%)</title><rect x="1174.0" y="483.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (4 samples, 0.19%)</title><rect x="1174.0" y="467.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.0" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.05%)</title><rect x="1174.0" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1177.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.09%)</title><rect x="1174.6" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.6" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.05%)</title><rect x="1174.6" y="435.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1177.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.05%)</title><rect x="1175.1" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.05%)</title><rect x="1175.1" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.05%)</title><rect x="1175.1" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.05%)</title><rect x="1175.1" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="1175.1" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1175.1" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="1175.1" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.1" y="350.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="1175.1" y="323.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1178.1" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.05%)</title><rect x="1175.7" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.05%)</title><rect x="1175.7" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.05%)</title><rect x="1175.7" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1178.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (5 samples, 0.23%)</title><rect x="1176.2" y="483.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.2" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues[] (1 samples, 0.05%)</title><rect x="1176.2" y="467.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1179.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (3 samples, 0.14%)</title><rect x="1176.8" y="467.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.8" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (3 samples, 0.14%)</title><rect x="1176.8" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.8" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$ClassDataSlot[] (1 samples, 0.05%)</title><rect x="1176.8" y="435.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1179.8" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.05%)</title><rect x="1177.3" y="435.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1180.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="1177.9" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="1177.9" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="1177.9" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.05%)</title><rect x="1177.9" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.9" y="398.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.05%)</title><rect x="1177.9" y="371.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1180.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (1 samples, 0.05%)</title><rect x="1178.4" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.4" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="1178.4" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="1178.4" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (1 samples, 0.05%)</title><rect x="1178.4" y="419.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.4" y="430.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.05%)</title><rect x="1178.4" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.4" y="414.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.05%)</title><rect x="1178.4" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.4" y="398.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.05%)</title><rect x="1178.4" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.05%)</title><rect x="1178.4" y="355.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1181.4" y="366.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (12 samples, 0.56%)</title><rect x="1179.0" y="563.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.0" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (12 samples, 0.56%)</title><rect x="1179.0" y="547.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.0" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (12 samples, 0.56%)</title><rect x="1179.0" y="531.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.0" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (12 samples, 0.56%)</title><rect x="1179.0" y="515.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.0" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (12 samples, 0.56%)</title><rect x="1179.0" y="499.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (12 samples, 0.56%)</title><rect x="1179.0" y="483.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.0" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (1 samples, 0.05%)</title><rect x="1179.0" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1182.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (8 samples, 0.37%)</title><rect x="1179.5" y="467.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.5" y="478.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.09%)</title><rect x="1179.5" y="451.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1182.5" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.14%)</title><rect x="1180.6" y="451.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.6" y="462.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.09%)</title><rect x="1182.3" y="451.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1185.3" y="462.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1183.4" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.4" y="462.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1183.4" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.05%)</title><rect x="1183.4" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1186.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1183.9" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.9" y="478.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.05%)</title><rect x="1183.9" y="451.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1186.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1184.5" y="467.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1184.5" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.5" y="462.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.09%)</title><rect x="1184.5" y="435.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1187.5" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (8 samples, 0.37%)</title><rect x="1185.6" y="627.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.6" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (8 samples, 0.37%)</title><rect x="1185.6" y="611.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.6" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (8 samples, 0.37%)</title><rect x="1185.6" y="595.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (8 samples, 0.37%)</title><rect x="1185.6" y="579.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (1 samples, 0.05%)</title><rect x="1185.6" y="563.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1188.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (7 samples, 0.33%)</title><rect x="1186.1" y="563.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.1" y="574.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.19%)</title><rect x="1186.1" y="547.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1189.1" y="558.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.09%)</title><rect x="1188.3" y="547.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1191.3" y="558.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="558.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.05%)</title><rect x="1189.4" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1192.4" y="542.0"></text>
</g>
</g>
</svg>
