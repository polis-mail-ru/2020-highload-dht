<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (1,536 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 31 tid=28419] (10 samples, 0.65%)</title><rect x="10.0" y="755.0" width="7.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10 samples, 0.65%)</title><rect x="10.0" y="739.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (10 samples, 0.65%)</title><rect x="10.0" y="723.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (10 samples, 0.65%)</title><rect x="10.0" y="707.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.linkToTargetMethod (10 samples, 0.65%)</title><rect x="10.0" y="691.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1850487142.invoke (10 samples, 0.65%)</title><rect x="10.0" y="675.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.65%)</title><rect x="10.0" y="659.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.65%)</title><rect x="10.0" y="643.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.65%)</title><rect x="10.0" y="627.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.65%)</title><rect x="10.0" y="611.0" width="7.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=36867] (1 samples, 0.07%)</title><rect x="17.7" y="755.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="20.7" y="766.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.07%)</title><rect x="17.7" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.07%)</title><rect x="17.7" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.07%)</title><rect x="17.7" y="707.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.07%)</title><rect x="17.7" y="691.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.07%)</title><rect x="17.7" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.07%)</title><rect x="17.7" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.07%)</title><rect x="17.7" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.7" y="654.0"></text>
</g>
<g>
<title>java.net.Inet4Address (1 samples, 0.07%)</title><rect x="17.7" y="627.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="20.7" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25091] (151 samples, 9.83%)</title><rect x="18.5" y="755.0" width="116.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="21.5" y="766.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (151 samples, 9.83%)</title><rect x="18.5" y="739.0" width="116.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.5" y="750.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (14 samples, 0.91%)</title><rect x="18.5" y="723.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (6 samples, 0.39%)</title><rect x="18.5" y="707.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.5" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (3 samples, 0.20%)</title><rect x="18.5" y="691.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="21.5" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (3 samples, 0.20%)</title><rect x="20.8" y="691.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="23.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (8 samples, 0.52%)</title><rect x="23.1" y="707.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8 samples, 0.52%)</title><rect x="23.1" y="691.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (8 samples, 0.52%)</title><rect x="23.1" y="675.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (8 samples, 0.52%)</title><rect x="23.1" y="659.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.52%)</title><rect x="23.1" y="643.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.52%)</title><rect x="23.1" y="627.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.52%)</title><rect x="23.1" y="611.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.52%)</title><rect x="23.1" y="595.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.52%)</title><rect x="23.1" y="579.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.1" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (8 samples, 0.52%)</title><rect x="23.1" y="563.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (137 samples, 8.92%)</title><rect x="29.2" y="723.0" width="105.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.2" y="734.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (137 samples, 8.92%)</title><rect x="29.2" y="707.0" width="105.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.2" y="718.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (137 samples, 8.92%)</title><rect x="29.2" y="691.0" width="105.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.2" y="702.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (70 samples, 4.56%)</title><rect x="29.2" y="675.0" width="53.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.2" y="686.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (70 samples, 4.56%)</title><rect x="29.2" y="659.0" width="53.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.2" y="670.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (62 samples, 4.04%)</title><rect x="29.2" y="643.0" width="47.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.2" y="654.0">Requ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 1.69%)</title><rect x="29.2" y="627.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 1.69%)</title><rect x="29.2" y="611.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.85%)</title><rect x="29.2" y="595.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.85%)</title><rect x="29.2" y="579.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.2" y="590.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.85%)</title><rect x="29.2" y="563.0" width="10.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="32.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.85%)</title><rect x="39.2" y="595.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.2" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.46%)</title><rect x="39.2" y="579.0" width="5.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="42.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.39%)</title><rect x="44.6" y="579.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.39%)</title><rect x="44.6" y="563.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (6 samples, 0.39%)</title><rect x="44.6" y="547.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.39%)</title><rect x="44.6" y="531.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.6" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.39%)</title><rect x="44.6" y="515.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="47.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.20%)</title><rect x="49.2" y="627.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.20%)</title><rect x="49.2" y="611.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.20%)</title><rect x="49.2" y="595.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="49.2" y="579.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="49.9" y="579.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.9" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="49.9" y="563.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (33 samples, 2.15%)</title><rect x="51.5" y="627.0" width="25.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.5" y="638.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="51.5" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="51.5" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.07%)</title><rect x="51.5" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="51.5" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.5" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="51.5" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="54.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.26%)</title><rect x="52.3" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.26%)</title><rect x="52.3" y="595.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.3" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.26%)</title><rect x="52.3" y="579.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="55.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (28 samples, 1.82%)</title><rect x="55.3" y="611.0" width="21.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.3" y="622.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.13%)</title><rect x="55.3" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.13%)</title><rect x="55.3" y="579.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.13%)</title><rect x="55.3" y="563.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="58.3" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.26%)</title><rect x="56.9" y="595.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="59.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.85%)</title><rect x="59.9" y="595.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.9" y="606.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.46%)</title><rect x="59.9" y="579.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.20%)</title><rect x="65.3" y="579.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="68.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="67.6" y="579.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (9 samples, 0.59%)</title><rect x="69.9" y="595.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (3 samples, 0.20%)</title><rect x="69.9" y="579.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.9" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="69.9" y="563.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="72.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (6 samples, 0.39%)</title><rect x="72.2" y="579.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.2" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.39%)</title><rect x="72.2" y="563.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.52%)</title><rect x="76.8" y="643.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.52%)</title><rect x="76.8" y="627.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.52%)</title><rect x="76.8" y="611.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="76.8" y="595.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="79.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="79.9" y="595.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.9" y="606.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="79.9" y="579.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="82.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (31 samples, 2.02%)</title><rect x="83.0" y="675.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.0" y="686.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.46%)</title><rect x="83.0" y="659.0" width="5.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="86.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.78%)</title><rect x="88.4" y="659.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.78%)</title><rect x="88.4" y="643.0" width="9.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="91.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.78%)</title><rect x="97.6" y="659.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.78%)</title><rect x="97.6" y="643.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.6" y="654.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.46%)</title><rect x="97.6" y="627.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="100.6" y="638.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.33%)</title><rect x="103.0" y="627.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="106.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.33%)</title><rect x="106.8" y="675.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.8" y="686.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="106.8" y="659.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="109.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.33%)</title><rect x="110.6" y="675.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.33%)</title><rect x="110.6" y="659.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.33%)</title><rect x="110.6" y="643.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="110.6" y="627.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="113.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.20%)</title><rect x="112.2" y="627.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.2" y="638.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="112.2" y="611.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="115.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.69%)</title><rect x="114.5" y="675.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.69%)</title><rect x="114.5" y="659.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.5" y="670.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.98%)</title><rect x="114.5" y="643.0" width="11.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="117.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.52%)</title><rect x="126.0" y="643.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="129.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.20%)</title><rect x="132.1" y="643.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.20%)</title><rect x="132.1" y="627.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.20%)</title><rect x="132.1" y="611.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.1" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="132.1" y="595.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="135.1" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25347] (106 samples, 6.90%)</title><rect x="134.5" y="755.0" width="81.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="137.5" y="766.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (106 samples, 6.90%)</title><rect x="134.5" y="739.0" width="81.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.5" y="750.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (5 samples, 0.33%)</title><rect x="134.5" y="723.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.07%)</title><rect x="134.5" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.5" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (1 samples, 0.07%)</title><rect x="134.5" y="691.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="137.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (4 samples, 0.26%)</title><rect x="135.2" y="707.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.26%)</title><rect x="135.2" y="691.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (4 samples, 0.26%)</title><rect x="135.2" y="675.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4 samples, 0.26%)</title><rect x="135.2" y="659.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.26%)</title><rect x="135.2" y="643.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.26%)</title><rect x="135.2" y="627.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.26%)</title><rect x="135.2" y="611.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.26%)</title><rect x="135.2" y="595.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.26%)</title><rect x="135.2" y="579.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.2" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4 samples, 0.26%)</title><rect x="135.2" y="563.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="138.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (101 samples, 6.58%)</title><rect x="138.3" y="723.0" width="77.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.3" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (101 samples, 6.58%)</title><rect x="138.3" y="707.0" width="77.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.3" y="718.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (101 samples, 6.58%)</title><rect x="138.3" y="691.0" width="77.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.3" y="702.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (54 samples, 3.52%)</title><rect x="138.3" y="675.0" width="41.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.3" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (54 samples, 3.52%)</title><rect x="138.3" y="659.0" width="41.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.3" y="670.0">one..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (51 samples, 3.32%)</title><rect x="138.3" y="643.0" width="39.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.3" y="654.0">Req..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 1.24%)</title><rect x="138.3" y="627.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 1.24%)</title><rect x="138.3" y="611.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.65%)</title><rect x="138.3" y="595.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.65%)</title><rect x="138.3" y="579.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.3" y="590.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.65%)</title><rect x="138.3" y="563.0" width="7.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="141.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.59%)</title><rect x="146.0" y="595.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.0" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.20%)</title><rect x="146.0" y="579.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="149.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.39%)</title><rect x="148.3" y="579.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.39%)</title><rect x="148.3" y="563.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (6 samples, 0.39%)</title><rect x="148.3" y="547.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.39%)</title><rect x="148.3" y="531.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.3" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.39%)</title><rect x="148.3" y="515.0" width="4.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="151.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.26%)</title><rect x="152.9" y="627.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.26%)</title><rect x="152.9" y="611.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.26%)</title><rect x="152.9" y="595.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="152.9" y="579.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="155.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="154.4" y="579.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.4" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="154.4" y="563.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="157.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (28 samples, 1.82%)</title><rect x="156.0" y="627.0" width="21.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.0" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.65%)</title><rect x="156.0" y="611.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.65%)</title><rect x="156.0" y="595.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.0" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.65%)</title><rect x="156.0" y="579.0" width="7.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="159.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (18 samples, 1.17%)</title><rect x="163.6" y="611.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.39%)</title><rect x="163.6" y="595.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.39%)</title><rect x="163.6" y="579.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.39%)</title><rect x="163.6" y="563.0" width="4.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="166.6" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.07%)</title><rect x="168.3" y="595.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="171.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.33%)</title><rect x="169.0" y="595.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.0" y="606.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="169.0" y="579.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="172.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.13%)</title><rect x="169.8" y="579.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="172.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="171.3" y="579.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="174.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (6 samples, 0.39%)</title><rect x="172.9" y="595.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (5 samples, 0.33%)</title><rect x="172.9" y="579.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.9" y="590.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="172.9" y="563.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="175.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (1 samples, 0.07%)</title><rect x="176.7" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.7" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="176.7" y="563.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="179.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.20%)</title><rect x="177.5" y="643.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.20%)</title><rect x="177.5" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.20%)</title><rect x="177.5" y="611.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="177.5" y="595.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="178.2" y="595.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.2" y="606.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="178.2" y="579.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="181.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 1.04%)</title><rect x="179.8" y="675.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.8" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.26%)</title><rect x="179.8" y="659.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="182.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.13%)</title><rect x="182.9" y="659.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.13%)</title><rect x="182.9" y="643.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="185.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.65%)</title><rect x="184.4" y="659.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.65%)</title><rect x="184.4" y="643.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.4" y="654.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.39%)</title><rect x="184.4" y="627.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="187.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="189.0" y="627.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="189.0" y="611.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.26%)</title><rect x="189.0" y="595.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.0" y="606.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="189.0" y="579.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="192.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.20%)</title><rect x="192.1" y="675.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.1" y="686.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="192.1" y="659.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="195.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.26%)</title><rect x="194.4" y="675.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.26%)</title><rect x="194.4" y="659.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.26%)</title><rect x="194.4" y="643.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="194.4" y="627.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="197.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.20%)</title><rect x="195.1" y="627.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.1" y="638.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="195.1" y="611.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="198.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 1.56%)</title><rect x="197.4" y="675.0" width="18.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 1.56%)</title><rect x="197.4" y="659.0" width="18.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.4" y="670.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.91%)</title><rect x="197.4" y="643.0" width="10.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="200.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="208.2" y="643.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="211.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.52%)</title><rect x="209.7" y="643.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.52%)</title><rect x="209.7" y="627.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.52%)</title><rect x="209.7" y="611.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.7" y="622.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="209.7" y="595.0" width="6.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="212.7" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25859] (310 samples, 20.18%)</title><rect x="215.9" y="755.0" width="238.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="218.9" y="766.0">[NIO Selector #2 tid=25859]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (310 samples, 20.18%)</title><rect x="215.9" y="739.0" width="238.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.9" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (16 samples, 1.04%)</title><rect x="215.9" y="723.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (11 samples, 0.72%)</title><rect x="215.9" y="707.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.9" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (3 samples, 0.20%)</title><rect x="215.9" y="691.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="218.9" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (8 samples, 0.52%)</title><rect x="218.2" y="691.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="221.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (5 samples, 0.33%)</title><rect x="224.3" y="707.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.33%)</title><rect x="224.3" y="691.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (5 samples, 0.33%)</title><rect x="224.3" y="675.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.33%)</title><rect x="224.3" y="659.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.33%)</title><rect x="224.3" y="643.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.33%)</title><rect x="224.3" y="627.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.33%)</title><rect x="224.3" y="611.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.33%)</title><rect x="224.3" y="595.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.33%)</title><rect x="224.3" y="579.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.3" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.33%)</title><rect x="224.3" y="563.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="227.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (294 samples, 19.14%)</title><rect x="228.2" y="723.0" width="225.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.2" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (294 samples, 19.14%)</title><rect x="228.2" y="707.0" width="225.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.2" y="718.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (294 samples, 19.14%)</title><rect x="228.2" y="691.0" width="225.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.2" y="702.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (142 samples, 9.24%)</title><rect x="228.2" y="675.0" width="109.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.2" y="686.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (142 samples, 9.24%)</title><rect x="228.2" y="659.0" width="109.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.2" y="670.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (130 samples, 8.46%)</title><rect x="228.2" y="643.0" width="99.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.2" y="654.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 2.93%)</title><rect x="228.2" y="627.0" width="34.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.2" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 2.93%)</title><rect x="228.2" y="611.0" width="34.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.2" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 1.30%)</title><rect x="228.2" y="595.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (20 samples, 1.30%)</title><rect x="228.2" y="579.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.2" y="590.0"></text>
</g>
<g>
<title>byte[] (20 samples, 1.30%)</title><rect x="228.2" y="563.0" width="15.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="231.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 1.63%)</title><rect x="243.5" y="595.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.5" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.98%)</title><rect x="243.5" y="579.0" width="11.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="246.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.65%)</title><rect x="255.1" y="579.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.65%)</title><rect x="255.1" y="563.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (10 samples, 0.65%)</title><rect x="255.1" y="547.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.65%)</title><rect x="255.1" y="531.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.1" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.65%)</title><rect x="255.1" y="515.0" width="7.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="258.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.98%)</title><rect x="262.7" y="627.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.98%)</title><rect x="262.7" y="611.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.98%)</title><rect x="262.7" y="595.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="262.7" y="579.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="265.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.72%)</title><rect x="265.8" y="579.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.8" y="590.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.72%)</title><rect x="265.8" y="563.0" width="8.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="268.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (70 samples, 4.56%)</title><rect x="274.3" y="627.0" width="53.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.3" y="638.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.26%)</title><rect x="274.3" y="611.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.26%)</title><rect x="274.3" y="595.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.26%)</title><rect x="274.3" y="579.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.26%)</title><rect x="274.3" y="563.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.3" y="574.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="274.3" y="547.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="277.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="277.3" y="611.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="277.3" y="595.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.3" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.78%)</title><rect x="277.3" y="579.0" width="9.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="280.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (54 samples, 3.52%)</title><rect x="286.6" y="611.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.6" y="622.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="286.6" y="595.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="286.6" y="579.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.78%)</title><rect x="286.6" y="563.0" width="9.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="289.6" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.46%)</title><rect x="295.8" y="595.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="298.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 1.76%)</title><rect x="301.2" y="595.0" width="20.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.2" y="606.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.85%)</title><rect x="301.2" y="579.0" width="9.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="304.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.65%)</title><rect x="311.1" y="579.0" width="7.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="314.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="318.8" y="579.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="321.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (8 samples, 0.52%)</title><rect x="321.9" y="595.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (3 samples, 0.20%)</title><rect x="321.9" y="579.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.9" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="321.9" y="563.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="324.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (5 samples, 0.33%)</title><rect x="324.2" y="579.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.2" y="590.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="324.2" y="563.0" width="3.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="327.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.78%)</title><rect x="328.0" y="643.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.78%)</title><rect x="328.0" y="627.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.78%)</title><rect x="328.0" y="611.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.46%)</title><rect x="328.0" y="595.0" width="5.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="331.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.33%)</title><rect x="333.4" y="595.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.4" y="606.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="333.4" y="579.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="336.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 4.17%)</title><rect x="337.3" y="675.0" width="49.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.3" y="686.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.78%)</title><rect x="337.3" y="659.0" width="9.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="340.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.98%)</title><rect x="346.5" y="659.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.98%)</title><rect x="346.5" y="643.0" width="11.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="349.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 2.41%)</title><rect x="358.0" y="659.0" width="28.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.0" y="670.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 2.41%)</title><rect x="358.0" y="643.0" width="28.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.0" y="654.0">on..</text>
</g>
<g>
<title>char[] (13 samples, 0.85%)</title><rect x="358.0" y="627.0" width="10.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="361.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.85%)</title><rect x="368.0" y="627.0" width="10.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="371.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.72%)</title><rect x="378.0" y="627.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.72%)</title><rect x="378.0" y="611.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.72%)</title><rect x="378.0" y="595.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.0" y="606.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.72%)</title><rect x="378.0" y="579.0" width="8.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="381.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.46%)</title><rect x="386.4" y="675.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.4" y="686.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.46%)</title><rect x="386.4" y="659.0" width="5.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="389.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.59%)</title><rect x="391.8" y="675.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.59%)</title><rect x="391.8" y="659.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.59%)</title><rect x="391.8" y="643.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="391.8" y="627.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="394.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.39%)</title><rect x="394.1" y="627.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.1" y="638.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.39%)</title><rect x="394.1" y="611.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="397.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 4.69%)</title><rect x="398.7" y="675.0" width="55.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.7" y="686.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 4.69%)</title><rect x="398.7" y="659.0" width="55.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.7" y="670.0">one/n..</text>
</g>
<g>
<title>char[] (35 samples, 2.28%)</title><rect x="398.7" y="643.0" width="26.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="401.7" y="654.0">c..</text>
</g>
<g>
<title>java.lang.String (15 samples, 0.98%)</title><rect x="425.6" y="643.0" width="11.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="428.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 1.43%)</title><rect x="437.1" y="643.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 1.43%)</title><rect x="437.1" y="627.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 1.43%)</title><rect x="437.1" y="611.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.1" y="622.0"></text>
</g>
<g>
<title>byte[] (22 samples, 1.43%)</title><rect x="437.1" y="595.0" width="16.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="440.1" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=39427] (290 samples, 18.88%)</title><rect x="454.0" y="755.0" width="222.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="457.0" y="766.0">[NIO Selector #3 tid=39427]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (290 samples, 18.88%)</title><rect x="454.0" y="739.0" width="222.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.0" y="750.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (16 samples, 1.04%)</title><rect x="454.0" y="723.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (9 samples, 0.59%)</title><rect x="454.0" y="707.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.0" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (4 samples, 0.26%)</title><rect x="454.0" y="691.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="457.0" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.33%)</title><rect x="457.1" y="691.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="460.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (7 samples, 0.46%)</title><rect x="461.0" y="707.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.46%)</title><rect x="461.0" y="691.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (7 samples, 0.46%)</title><rect x="461.0" y="675.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (7 samples, 0.46%)</title><rect x="461.0" y="659.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.46%)</title><rect x="461.0" y="643.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.46%)</title><rect x="461.0" y="627.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.46%)</title><rect x="461.0" y="611.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.46%)</title><rect x="461.0" y="595.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.46%)</title><rect x="461.0" y="579.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.0" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.46%)</title><rect x="461.0" y="563.0" width="5.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="464.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (274 samples, 17.84%)</title><rect x="466.3" y="723.0" width="210.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.3" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (274 samples, 17.84%)</title><rect x="466.3" y="707.0" width="210.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.3" y="718.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (274 samples, 17.84%)</title><rect x="466.3" y="691.0" width="210.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.3" y="702.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (153 samples, 9.96%)</title><rect x="466.3" y="675.0" width="117.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.3" y="686.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (153 samples, 9.96%)</title><rect x="466.3" y="659.0" width="117.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.3" y="670.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (133 samples, 8.66%)</title><rect x="466.3" y="643.0" width="102.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.3" y="654.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (40 samples, 2.60%)</title><rect x="466.3" y="627.0" width="30.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.3" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 2.60%)</title><rect x="466.3" y="611.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.3" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 1.37%)</title><rect x="466.3" y="595.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 1.37%)</title><rect x="466.3" y="579.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.3" y="590.0"></text>
</g>
<g>
<title>byte[] (21 samples, 1.37%)</title><rect x="466.3" y="563.0" width="16.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="469.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 1.24%)</title><rect x="482.5" y="595.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.5" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.46%)</title><rect x="482.5" y="579.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="485.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.78%)</title><rect x="487.8" y="579.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (12 samples, 0.78%)</title><rect x="487.8" y="563.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (12 samples, 0.78%)</title><rect x="487.8" y="547.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="487.8" y="531.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.8" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.78%)</title><rect x="487.8" y="515.0" width="9.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="490.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.72%)</title><rect x="497.1" y="627.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.72%)</title><rect x="497.1" y="611.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.72%)</title><rect x="497.1" y="595.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="497.1" y="579.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="500.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.52%)</title><rect x="499.4" y="579.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.4" y="590.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="499.4" y="563.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="502.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (82 samples, 5.34%)</title><rect x="505.5" y="627.0" width="63.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.5" y="638.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.13%)</title><rect x="505.5" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="505.5" y="595.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.13%)</title><rect x="505.5" y="579.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.13%)</title><rect x="505.5" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.5" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="505.5" y="547.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="508.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="507.0" y="611.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.78%)</title><rect x="507.0" y="595.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.0" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.78%)</title><rect x="507.0" y="579.0" width="9.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="510.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (68 samples, 4.43%)</title><rect x="516.3" y="611.0" width="52.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.3" y="622.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.59%)</title><rect x="516.3" y="595.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.59%)</title><rect x="516.3" y="579.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.59%)</title><rect x="516.3" y="563.0" width="6.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="519.3" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.59%)</title><rect x="523.2" y="595.0" width="6.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="526.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (33 samples, 2.15%)</title><rect x="530.1" y="595.0" width="25.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.1" y="606.0">o..</text>
</g>
<g>
<title>byte[] (12 samples, 0.78%)</title><rect x="530.1" y="579.0" width="9.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="533.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.91%)</title><rect x="539.3" y="579.0" width="10.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="542.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.46%)</title><rect x="550.1" y="579.0" width="5.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="553.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (17 samples, 1.11%)</title><rect x="555.4" y="595.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (7 samples, 0.46%)</title><rect x="555.4" y="579.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.4" y="590.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.46%)</title><rect x="555.4" y="563.0" width="5.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="558.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (10 samples, 0.65%)</title><rect x="560.8" y="579.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="590.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.65%)</title><rect x="560.8" y="563.0" width="7.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="563.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 1.30%)</title><rect x="568.5" y="643.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 1.30%)</title><rect x="568.5" y="627.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 1.30%)</title><rect x="568.5" y="611.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="568.5" y="595.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="571.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 1.04%)</title><rect x="571.6" y="595.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.6" y="606.0"></text>
</g>
<g>
<title>byte[] (16 samples, 1.04%)</title><rect x="571.6" y="579.0" width="12.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="574.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (53 samples, 3.45%)</title><rect x="583.9" y="675.0" width="40.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.9" y="686.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.33%)</title><rect x="583.9" y="659.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="586.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.85%)</title><rect x="587.7" y="659.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.85%)</title><rect x="587.7" y="643.0" width="10.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="590.7" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.28%)</title><rect x="597.7" y="659.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.7" y="670.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.28%)</title><rect x="597.7" y="643.0" width="26.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.7" y="654.0">o..</text>
</g>
<g>
<title>char[] (19 samples, 1.24%)</title><rect x="597.7" y="627.0" width="14.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="600.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.52%)</title><rect x="612.3" y="627.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="615.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.52%)</title><rect x="618.4" y="627.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.52%)</title><rect x="618.4" y="611.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.52%)</title><rect x="618.4" y="595.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.4" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="618.4" y="579.0" width="6.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="621.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.26%)</title><rect x="624.6" y="675.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.6" y="686.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="624.6" y="659.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="627.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.98%)</title><rect x="627.7" y="675.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.98%)</title><rect x="627.7" y="659.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.98%)</title><rect x="627.7" y="643.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="627.7" y="627.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="630.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.78%)</title><rect x="630.0" y="627.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.0" y="638.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.78%)</title><rect x="630.0" y="611.0" width="9.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="633.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 3.19%)</title><rect x="639.2" y="675.0" width="37.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.2" y="686.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 3.19%)</title><rect x="639.2" y="659.0" width="37.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.2" y="670.0">one..</text>
</g>
<g>
<title>char[] (25 samples, 1.63%)</title><rect x="639.2" y="643.0" width="19.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="642.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.72%)</title><rect x="658.4" y="643.0" width="8.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="661.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.85%)</title><rect x="666.8" y="643.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.85%)</title><rect x="666.8" y="627.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.85%)</title><rect x="666.8" y="611.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.8" y="622.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.85%)</title><rect x="666.8" y="595.0" width="10.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="669.8" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=38403] (222 samples, 14.45%)</title><rect x="676.8" y="755.0" width="170.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="679.8" y="766.0">[NIO Selector #5 tid=3..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (222 samples, 14.45%)</title><rect x="676.8" y="739.0" width="170.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.8" y="750.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (20 samples, 1.30%)</title><rect x="676.8" y="723.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (11 samples, 0.72%)</title><rect x="676.8" y="707.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.8" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (6 samples, 0.39%)</title><rect x="676.8" y="691.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="679.8" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.33%)</title><rect x="681.4" y="691.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="684.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (9 samples, 0.59%)</title><rect x="685.3" y="707.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (9 samples, 0.59%)</title><rect x="685.3" y="691.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (9 samples, 0.59%)</title><rect x="685.3" y="675.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (9 samples, 0.59%)</title><rect x="685.3" y="659.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.59%)</title><rect x="685.3" y="643.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.59%)</title><rect x="685.3" y="627.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.59%)</title><rect x="685.3" y="611.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.59%)</title><rect x="685.3" y="595.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.59%)</title><rect x="685.3" y="579.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.3" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.59%)</title><rect x="685.3" y="563.0" width="6.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (202 samples, 13.15%)</title><rect x="692.2" y="723.0" width="155.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="734.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 13.15%)</title><rect x="692.2" y="707.0" width="155.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.2" y="718.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (202 samples, 13.15%)</title><rect x="692.2" y="691.0" width="155.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="702.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (111 samples, 7.23%)</title><rect x="692.2" y="675.0" width="85.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.2" y="686.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (111 samples, 7.23%)</title><rect x="692.2" y="659.0" width="85.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.2" y="670.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (103 samples, 6.71%)</title><rect x="692.2" y="643.0" width="79.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.2" y="654.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (40 samples, 2.60%)</title><rect x="692.2" y="627.0" width="30.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.2" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 2.60%)</title><rect x="692.2" y="611.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.2" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 1.24%)</title><rect x="692.2" y="595.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 1.24%)</title><rect x="692.2" y="579.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.2" y="590.0"></text>
</g>
<g>
<title>byte[] (19 samples, 1.24%)</title><rect x="692.2" y="563.0" width="14.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="695.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 1.37%)</title><rect x="706.8" y="595.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.8" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.52%)</title><rect x="706.8" y="579.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="709.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.85%)</title><rect x="712.9" y="579.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 0.85%)</title><rect x="712.9" y="563.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (13 samples, 0.85%)</title><rect x="712.9" y="547.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.85%)</title><rect x="712.9" y="531.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.9" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.85%)</title><rect x="712.9" y="515.0" width="10.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="715.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.46%)</title><rect x="722.9" y="627.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.46%)</title><rect x="722.9" y="611.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.46%)</title><rect x="722.9" y="595.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="722.9" y="579.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="725.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="725.2" y="579.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.2" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="725.2" y="563.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="728.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (56 samples, 3.65%)</title><rect x="728.3" y="627.0" width="43.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.3" y="638.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.52%)</title><rect x="728.3" y="611.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.52%)</title><rect x="728.3" y="595.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.52%)</title><rect x="728.3" y="579.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.52%)</title><rect x="728.3" y="563.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.3" y="574.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="728.3" y="547.0" width="6.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="731.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.85%)</title><rect x="734.4" y="611.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.85%)</title><rect x="734.4" y="595.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.4" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.85%)</title><rect x="734.4" y="579.0" width="10.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="737.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (35 samples, 2.28%)</title><rect x="744.4" y="611.0" width="26.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.4" y="622.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.26%)</title><rect x="744.4" y="595.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.26%)</title><rect x="744.4" y="579.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.4" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.26%)</title><rect x="744.4" y="563.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="747.4" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.39%)</title><rect x="747.5" y="595.0" width="4.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="750.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.98%)</title><rect x="752.1" y="595.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.1" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="752.1" y="579.0" width="6.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="755.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.39%)</title><rect x="758.3" y="579.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="761.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="762.9" y="579.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="765.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (10 samples, 0.65%)</title><rect x="763.6" y="595.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (8 samples, 0.52%)</title><rect x="763.6" y="579.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.6" y="590.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="763.6" y="563.0" width="6.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="766.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (2 samples, 0.13%)</title><rect x="769.8" y="579.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.8" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.13%)</title><rect x="769.8" y="563.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="772.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.52%)</title><rect x="771.3" y="643.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.52%)</title><rect x="771.3" y="627.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.52%)</title><rect x="771.3" y="611.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="771.3" y="595.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="774.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.39%)</title><rect x="772.9" y="595.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.9" y="606.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.39%)</title><rect x="772.9" y="579.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="775.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (46 samples, 2.99%)</title><rect x="777.5" y="675.0" width="35.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.5" y="686.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.52%)</title><rect x="777.5" y="659.0" width="6.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="780.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (17 samples, 1.11%)</title><rect x="783.6" y="659.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 1.11%)</title><rect x="783.6" y="643.0" width="13.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="786.6" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.37%)</title><rect x="796.7" y="659.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.37%)</title><rect x="796.7" y="643.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.7" y="654.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.65%)</title><rect x="796.7" y="627.0" width="7.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="799.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="804.3" y="627.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="807.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.52%)</title><rect x="806.7" y="627.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.52%)</title><rect x="806.7" y="611.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.52%)</title><rect x="806.7" y="595.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.7" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="806.7" y="579.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="809.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.33%)</title><rect x="812.8" y="675.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.8" y="686.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="812.8" y="659.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="815.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.33%)</title><rect x="816.6" y="675.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.33%)</title><rect x="816.6" y="659.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.33%)</title><rect x="816.6" y="643.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.07%)</title><rect x="816.6" y="627.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="819.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.26%)</title><rect x="817.4" y="627.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.4" y="638.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="817.4" y="611.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="820.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.28%)</title><rect x="820.5" y="675.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.5" y="686.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 2.28%)</title><rect x="820.5" y="659.0" width="26.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.5" y="670.0">o..</text>
</g>
<g>
<title>char[] (16 samples, 1.04%)</title><rect x="820.5" y="643.0" width="12.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="823.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.46%)</title><rect x="832.8" y="643.0" width="5.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="835.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.78%)</title><rect x="838.2" y="643.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.78%)</title><rect x="838.2" y="627.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.78%)</title><rect x="838.2" y="611.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.2" y="622.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.78%)</title><rect x="838.2" y="595.0" width="9.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="841.2" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=26883] (217 samples, 14.13%)</title><rect x="847.4" y="755.0" width="166.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="850.4" y="766.0">[NIO Selector #6 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (217 samples, 14.13%)</title><rect x="847.4" y="739.0" width="166.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.4" y="750.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (14 samples, 0.91%)</title><rect x="847.4" y="723.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (4 samples, 0.26%)</title><rect x="847.4" y="707.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.4" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (2 samples, 0.13%)</title><rect x="847.4" y="691.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="850.4" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (2 samples, 0.13%)</title><rect x="848.9" y="691.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="851.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (10 samples, 0.65%)</title><rect x="850.4" y="707.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (10 samples, 0.65%)</title><rect x="850.4" y="691.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (10 samples, 0.65%)</title><rect x="850.4" y="675.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (10 samples, 0.65%)</title><rect x="850.4" y="659.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.65%)</title><rect x="850.4" y="643.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.65%)</title><rect x="850.4" y="627.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.65%)</title><rect x="850.4" y="611.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.65%)</title><rect x="850.4" y="595.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.65%)</title><rect x="850.4" y="579.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.4" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.65%)</title><rect x="850.4" y="563.0" width="7.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="853.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (203 samples, 13.22%)</title><rect x="858.1" y="723.0" width="156.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.1" y="734.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (203 samples, 13.22%)</title><rect x="858.1" y="707.0" width="156.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.1" y="718.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (203 samples, 13.22%)</title><rect x="858.1" y="691.0" width="156.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.1" y="702.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 7.03%)</title><rect x="858.1" y="675.0" width="83.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.1" y="686.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (108 samples, 7.03%)</title><rect x="858.1" y="659.0" width="83.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.1" y="670.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (95 samples, 6.18%)</title><rect x="858.1" y="643.0" width="73.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.1" y="654.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 1.89%)</title><rect x="858.1" y="627.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.1" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 1.89%)</title><rect x="858.1" y="611.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.1" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 1.04%)</title><rect x="858.1" y="595.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 1.04%)</title><rect x="858.1" y="579.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.1" y="590.0"></text>
</g>
<g>
<title>byte[] (16 samples, 1.04%)</title><rect x="858.1" y="563.0" width="12.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="861.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.85%)</title><rect x="870.4" y="595.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.4" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.39%)</title><rect x="870.4" y="579.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="873.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.46%)</title><rect x="875.0" y="579.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.46%)</title><rect x="875.0" y="563.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (7 samples, 0.46%)</title><rect x="875.0" y="547.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.46%)</title><rect x="875.0" y="531.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.0" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.46%)</title><rect x="875.0" y="515.0" width="5.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="878.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.46%)</title><rect x="880.4" y="627.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.46%)</title><rect x="880.4" y="611.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.46%)</title><rect x="880.4" y="595.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.39%)</title><rect x="880.4" y="579.0" width="4.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="883.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="885.0" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.0" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="885.0" y="563.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="888.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (59 samples, 3.84%)</title><rect x="885.8" y="627.0" width="45.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.8" y="638.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.46%)</title><rect x="885.8" y="611.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.46%)</title><rect x="885.8" y="595.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.46%)</title><rect x="885.8" y="579.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.46%)</title><rect x="885.8" y="563.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.8" y="574.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.46%)</title><rect x="885.8" y="547.0" width="5.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="888.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.52%)</title><rect x="891.2" y="611.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.52%)</title><rect x="891.2" y="595.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.52%)</title><rect x="891.2" y="579.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (44 samples, 2.86%)</title><rect x="897.3" y="611.0" width="33.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.3" y="622.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.59%)</title><rect x="897.3" y="595.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.59%)</title><rect x="897.3" y="579.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.59%)</title><rect x="897.3" y="563.0" width="6.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="900.3" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.33%)</title><rect x="904.2" y="595.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="907.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 1.17%)</title><rect x="908.1" y="595.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.1" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="908.1" y="579.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="911.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.46%)</title><rect x="914.2" y="579.0" width="5.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="917.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="919.6" y="579.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="922.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (12 samples, 0.78%)</title><rect x="921.9" y="595.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="924.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (4 samples, 0.26%)</title><rect x="921.9" y="579.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.9" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="921.9" y="563.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="924.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (8 samples, 0.52%)</title><rect x="925.0" y="579.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.0" y="590.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="925.0" y="563.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="928.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.85%)</title><rect x="931.1" y="643.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.85%)</title><rect x="931.1" y="627.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.85%)</title><rect x="931.1" y="611.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.39%)</title><rect x="931.1" y="595.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.46%)</title><rect x="935.7" y="595.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.7" y="606.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.46%)</title><rect x="935.7" y="579.0" width="5.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="938.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (45 samples, 2.93%)</title><rect x="941.1" y="675.0" width="34.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.1" y="686.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.46%)</title><rect x="941.1" y="659.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="944.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.98%)</title><rect x="946.5" y="659.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.98%)</title><rect x="946.5" y="643.0" width="11.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="949.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.50%)</title><rect x="958.0" y="659.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 1.50%)</title><rect x="958.0" y="643.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.0" y="654.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.91%)</title><rect x="958.0" y="627.0" width="10.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="961.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="968.8" y="627.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="971.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.33%)</title><rect x="971.8" y="627.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.33%)</title><rect x="971.8" y="611.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.33%)</title><rect x="971.8" y="595.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.8" y="606.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="971.8" y="579.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="974.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.07%)</title><rect x="975.7" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.7" y="686.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.07%)</title><rect x="975.7" y="659.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="978.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.52%)</title><rect x="976.4" y="675.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.52%)</title><rect x="976.4" y="659.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.52%)</title><rect x="976.4" y="643.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.20%)</title><rect x="976.4" y="627.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="979.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.33%)</title><rect x="978.7" y="627.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.7" y="638.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="978.7" y="611.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="981.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 2.67%)</title><rect x="982.6" y="675.0" width="31.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.6" y="686.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 2.67%)</title><rect x="982.6" y="659.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.6" y="670.0">on..</text>
</g>
<g>
<title>char[] (20 samples, 1.30%)</title><rect x="982.6" y="643.0" width="15.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="985.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.46%)</title><rect x="997.9" y="643.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1000.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.91%)</title><rect x="1003.3" y="643.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.91%)</title><rect x="1003.3" y="627.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.91%)</title><rect x="1003.3" y="611.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.3" y="622.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.91%)</title><rect x="1003.3" y="595.0" width="10.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1006.3" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=37123] (195 samples, 12.70%)</title><rect x="1014.1" y="755.0" width="149.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1017.1" y="766.0">[NIO Selector #7 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (195 samples, 12.70%)</title><rect x="1014.1" y="739.0" width="149.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.1" y="750.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (16 samples, 1.04%)</title><rect x="1014.1" y="723.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (7 samples, 0.46%)</title><rect x="1014.1" y="707.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.1" y="718.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (4 samples, 0.26%)</title><rect x="1014.1" y="691.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1017.1" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (3 samples, 0.20%)</title><rect x="1017.1" y="691.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1020.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (9 samples, 0.59%)</title><rect x="1019.5" y="707.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (9 samples, 0.59%)</title><rect x="1019.5" y="691.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (9 samples, 0.59%)</title><rect x="1019.5" y="675.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (9 samples, 0.59%)</title><rect x="1019.5" y="659.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.59%)</title><rect x="1019.5" y="643.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.59%)</title><rect x="1019.5" y="627.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.59%)</title><rect x="1019.5" y="611.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.59%)</title><rect x="1019.5" y="595.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.59%)</title><rect x="1019.5" y="579.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.5" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.59%)</title><rect x="1019.5" y="563.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1022.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (179 samples, 11.65%)</title><rect x="1026.4" y="723.0" width="137.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.4" y="734.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (179 samples, 11.65%)</title><rect x="1026.4" y="707.0" width="137.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.4" y="718.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (179 samples, 11.65%)</title><rect x="1026.4" y="691.0" width="137.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.4" y="702.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (86 samples, 5.60%)</title><rect x="1026.4" y="675.0" width="66.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.4" y="686.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (86 samples, 5.60%)</title><rect x="1026.4" y="659.0" width="66.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.4" y="670.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (74 samples, 4.82%)</title><rect x="1026.4" y="643.0" width="56.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.4" y="654.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (25 samples, 1.63%)</title><rect x="1026.4" y="627.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (25 samples, 1.63%)</title><rect x="1026.4" y="611.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.85%)</title><rect x="1026.4" y="595.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.85%)</title><rect x="1026.4" y="579.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.4" y="590.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.85%)</title><rect x="1026.4" y="563.0" width="10.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1029.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.78%)</title><rect x="1036.4" y="595.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.4" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.33%)</title><rect x="1036.4" y="579.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1039.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.46%)</title><rect x="1040.2" y="579.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.46%)</title><rect x="1040.2" y="563.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (7 samples, 0.46%)</title><rect x="1040.2" y="547.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.46%)</title><rect x="1040.2" y="531.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.46%)</title><rect x="1040.2" y="515.0" width="5.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1043.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.65%)</title><rect x="1045.6" y="627.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.65%)</title><rect x="1045.6" y="611.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.65%)</title><rect x="1045.6" y="595.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="1045.6" y="579.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1048.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.39%)</title><rect x="1048.6" y="579.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.6" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.39%)</title><rect x="1048.6" y="563.0" width="4.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1051.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (39 samples, 2.54%)</title><rect x="1053.3" y="627.0" width="29.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.3" y="638.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.20%)</title><rect x="1053.3" y="611.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.20%)</title><rect x="1053.3" y="595.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.20%)</title><rect x="1053.3" y="579.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.20%)</title><rect x="1053.3" y="563.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.3" y="574.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="1053.3" y="547.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1056.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.46%)</title><rect x="1055.6" y="611.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.46%)</title><rect x="1055.6" y="595.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.6" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.46%)</title><rect x="1055.6" y="579.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1058.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (29 samples, 1.89%)</title><rect x="1060.9" y="611.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.9" y="622.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.39%)</title><rect x="1060.9" y="595.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.39%)</title><rect x="1060.9" y="579.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.9" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.39%)</title><rect x="1060.9" y="563.0" width="4.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1063.9" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.13%)</title><rect x="1065.5" y="595.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1068.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.91%)</title><rect x="1067.1" y="595.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.1" y="606.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.39%)</title><rect x="1067.1" y="579.0" width="4.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1070.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.52%)</title><rect x="1071.7" y="579.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1074.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (7 samples, 0.46%)</title><rect x="1077.8" y="595.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (4 samples, 0.26%)</title><rect x="1077.8" y="579.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.8" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="1077.8" y="563.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1080.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (3 samples, 0.20%)</title><rect x="1080.9" y="579.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.9" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="1080.9" y="563.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1083.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.78%)</title><rect x="1083.2" y="643.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.78%)</title><rect x="1083.2" y="627.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.78%)</title><rect x="1083.2" y="611.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.26%)</title><rect x="1083.2" y="595.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1086.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.52%)</title><rect x="1086.3" y="595.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.3" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="1086.3" y="579.0" width="6.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1089.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (36 samples, 2.34%)</title><rect x="1092.4" y="675.0" width="27.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.4" y="686.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.13%)</title><rect x="1092.4" y="659.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1095.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (19 samples, 1.24%)</title><rect x="1094.0" y="659.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 1.24%)</title><rect x="1094.0" y="643.0" width="14.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1097.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.98%)</title><rect x="1108.6" y="659.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.98%)</title><rect x="1108.6" y="643.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.6" y="654.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.39%)</title><rect x="1108.6" y="627.0" width="4.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1111.6" y="638.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.33%)</title><rect x="1113.2" y="627.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1116.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="1117.0" y="627.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.26%)</title><rect x="1117.0" y="611.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.26%)</title><rect x="1117.0" y="595.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.0" y="606.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.26%)</title><rect x="1117.0" y="579.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1120.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8 samples, 0.52%)</title><rect x="1120.1" y="675.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.1" y="686.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="1120.1" y="659.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1123.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.65%)</title><rect x="1126.2" y="675.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.65%)</title><rect x="1126.2" y="659.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.65%)</title><rect x="1126.2" y="643.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.13%)</title><rect x="1126.2" y="627.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1129.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.52%)</title><rect x="1127.8" y="627.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.8" y="638.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.52%)</title><rect x="1127.8" y="611.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1130.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 2.54%)</title><rect x="1133.9" y="675.0" width="30.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.9" y="686.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 2.54%)</title><rect x="1133.9" y="659.0" width="30.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.9" y="670.0">on..</text>
</g>
<g>
<title>char[] (12 samples, 0.78%)</title><rect x="1133.9" y="643.0" width="9.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1136.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.59%)</title><rect x="1143.1" y="643.0" width="7.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1146.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 1.17%)</title><rect x="1150.1" y="643.0" width="13.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 1.17%)</title><rect x="1150.1" y="627.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 1.17%)</title><rect x="1150.1" y="611.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.1" y="622.0"></text>
</g>
<g>
<title>byte[] (18 samples, 1.17%)</title><rect x="1150.1" y="595.0" width="13.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1153.1" y="606.0"></text>
</g>
<g>
<title>[RMI TCP Connection(9)-127.0.0.1 tid=29195] (34 samples, 2.21%)</title><rect x="1163.9" y="755.0" width="26.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1166.9" y="766.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (34 samples, 2.21%)</title><rect x="1163.9" y="739.0" width="26.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.9" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (34 samples, 2.21%)</title><rect x="1163.9" y="723.0" width="26.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (34 samples, 2.21%)</title><rect x="1163.9" y="707.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.9" y="718.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (34 samples, 2.21%)</title><rect x="1163.9" y="691.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.9" y="702.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (34 samples, 2.21%)</title><rect x="1163.9" y="675.0" width="26.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.9" y="686.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$102/1952040929.run (34 samples, 2.21%)</title><rect x="1163.9" y="659.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.9" y="670.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (34 samples, 2.21%)</title><rect x="1163.9" y="643.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.9" y="654.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (34 samples, 2.21%)</title><rect x="1163.9" y="627.0" width="26.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.9" y="638.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (34 samples, 2.21%)</title><rect x="1163.9" y="611.0" width="26.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.9" y="622.0">s..</text>
</g>
<g>
<title>java.io.DataOutputStream (3 samples, 0.20%)</title><rect x="1163.9" y="595.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1166.9" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (31 samples, 2.02%)</title><rect x="1166.2" y="595.0" width="23.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.2" y="606.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 1.56%)</title><rect x="1166.2" y="579.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.2" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (24 samples, 1.56%)</title><rect x="1166.2" y="563.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.2" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (24 samples, 1.56%)</title><rect x="1166.2" y="547.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.2" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (24 samples, 1.56%)</title><rect x="1166.2" y="531.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.2" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.85%)</title><rect x="1166.2" y="515.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.85%)</title><rect x="1166.2" y="499.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (13 samples, 0.85%)</title><rect x="1166.2" y="483.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.2" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (13 samples, 0.85%)</title><rect x="1166.2" y="467.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.2" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (10 samples, 0.65%)</title><rect x="1166.2" y="451.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.2" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (10 samples, 0.65%)</title><rect x="1166.2" y="435.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.2" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (10 samples, 0.65%)</title><rect x="1166.2" y="419.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.2" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (10 samples, 0.65%)</title><rect x="1166.2" y="403.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.2" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (10 samples, 0.65%)</title><rect x="1166.2" y="387.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.2" y="398.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (10 samples, 0.65%)</title><rect x="1166.2" y="371.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.2" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (10 samples, 0.65%)</title><rect x="1166.2" y="355.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.2" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (10 samples, 0.65%)</title><rect x="1166.2" y="339.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.2" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (10 samples, 0.65%)</title><rect x="1166.2" y="323.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.2" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (10 samples, 0.65%)</title><rect x="1166.2" y="307.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.2" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (10 samples, 0.65%)</title><rect x="1166.2" y="291.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.2" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (10 samples, 0.65%)</title><rect x="1166.2" y="275.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.2" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (10 samples, 0.65%)</title><rect x="1166.2" y="259.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.2" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (10 samples, 0.65%)</title><rect x="1166.2" y="243.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.2" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (10 samples, 0.65%)</title><rect x="1166.2" y="227.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.2" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (10 samples, 0.65%)</title><rect x="1166.2" y="211.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.2" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (10 samples, 0.65%)</title><rect x="1166.2" y="195.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.2" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.26%)</title><rect x="1166.2" y="179.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.2" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.26%)</title><rect x="1166.2" y="163.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.2" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.26%)</title><rect x="1166.2" y="147.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.2" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.26%)</title><rect x="1166.2" y="131.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.2" y="142.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1166.2" y="115.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.2" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1166.2" y="99.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.2" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.07%)</title><rect x="1166.2" y="83.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.2" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.07%)</title><rect x="1166.2" y="67.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.2" y="78.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (1 samples, 0.07%)</title><rect x="1166.2" y="51.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1169.2" y="62.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.07%)</title><rect x="1167.0" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.0" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.07%)</title><rect x="1167.0" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.0" y="94.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.07%)</title><rect x="1167.0" y="67.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1170.0" y="78.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.13%)</title><rect x="1167.7" y="115.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.13%)</title><rect x="1167.7" y="99.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1170.7" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.13%)</title><rect x="1169.3" y="179.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1172.3" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.20%)</title><rect x="1170.8" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.8" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.20%)</title><rect x="1170.8" y="163.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.20%)</title><rect x="1170.8" y="147.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.8" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.20%)</title><rect x="1170.8" y="131.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1173.8" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="179.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.1" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="147.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.1" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="115.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.1" y="126.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor12.invoke (1 samples, 0.07%)</title><rect x="1173.1" y="67.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.1" y="78.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedMonitors (1 samples, 0.07%)</title><rect x="1173.1" y="51.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.1" y="62.0"></text>
</g>
<g>
<title>java.lang.management.MonitorInfo[] (1 samples, 0.07%)</title><rect x="1173.1" y="35.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1176.1" y="46.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (1 samples, 0.07%)</title><rect x="1173.9" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.9" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (1 samples, 0.07%)</title><rect x="1173.9" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.9" y="446.0"></text>
</g>
<g>
<title>java/security/Permissions.add (1 samples, 0.07%)</title><rect x="1173.9" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.9" y="430.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (1 samples, 0.07%)</title><rect x="1173.9" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.07%)</title><rect x="1173.9" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.9" y="398.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (1 samples, 0.07%)</title><rect x="1173.9" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.9" y="382.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (1 samples, 0.07%)</title><rect x="1173.9" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.9" y="366.0"></text>
</g>
<g>
<title>java.security.PermissionsHash (1 samples, 0.07%)</title><rect x="1173.9" y="339.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1176.9" y="350.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.13%)</title><rect x="1174.6" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.6" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.13%)</title><rect x="1174.6" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.6" y="446.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (2 samples, 0.13%)</title><rect x="1174.6" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.6" y="430.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.6" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.6" y="414.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.6" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="1174.6" y="371.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.6" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1174.6" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.6" y="366.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1174.6" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.6" y="350.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.07%)</title><rect x="1174.6" y="323.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1177.6" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1175.4" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.4" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (1 samples, 0.07%)</title><rect x="1175.4" y="339.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1178.4" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (3 samples, 0.20%)</title><rect x="1176.2" y="515.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.20%)</title><rect x="1176.2" y="499.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1179.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.20%)</title><rect x="1176.2" y="483.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.20%)</title><rect x="1176.2" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.20%)</title><rect x="1176.2" y="451.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.20%)</title><rect x="1176.2" y="435.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.20%)</title><rect x="1176.2" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.20%)</title><rect x="1176.2" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.20%)</title><rect x="1176.2" y="387.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.20%)</title><rect x="1176.2" y="371.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.13%)</title><rect x="1176.2" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.13%)</title><rect x="1176.2" y="339.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.2" y="350.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.07%)</title><rect x="1176.2" y="323.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1179.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.07%)</title><rect x="1176.9" y="323.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1179.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.07%)</title><rect x="1177.7" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.07%)</title><rect x="1177.7" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.7" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1177.7" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="1177.7" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.07%)</title><rect x="1177.7" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.07%)</title><rect x="1177.7" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.07%)</title><rect x="1177.7" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.07%)</title><rect x="1177.7" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.7" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.07%)</title><rect x="1177.7" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.7" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.07%)</title><rect x="1177.7" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.7" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.07%)</title><rect x="1177.7" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.7" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.07%)</title><rect x="1177.7" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.07%)</title><rect x="1177.7" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.7" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.07%)</title><rect x="1177.7" y="147.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.7" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.07%)</title><rect x="1177.7" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.7" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.07%)</title><rect x="1177.7" y="115.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.7" y="126.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.07%)</title><rect x="1177.7" y="99.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1180.7" y="110.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (2 samples, 0.13%)</title><rect x="1178.5" y="515.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.13%)</title><rect x="1178.5" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.13%)</title><rect x="1178.5" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.13%)</title><rect x="1178.5" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.07%)</title><rect x="1178.5" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.07%)</title><rect x="1178.5" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.07%)</title><rect x="1178.5" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.07%)</title><rect x="1178.5" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.07%)</title><rect x="1178.5" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.5" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.07%)</title><rect x="1178.5" y="371.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1181.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.07%)</title><rect x="1179.2" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.07%)</title><rect x="1179.2" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (1 samples, 0.07%)</title><rect x="1179.2" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.2" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1179.2" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="1179.2" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (1 samples, 0.07%)</title><rect x="1179.2" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.2" y="382.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.07%)</title><rect x="1179.2" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.2" y="366.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.07%)</title><rect x="1179.2" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.2" y="350.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.07%)</title><rect x="1179.2" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.2" y="334.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (1 samples, 0.07%)</title><rect x="1179.2" y="307.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1182.2" y="318.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (6 samples, 0.39%)</title><rect x="1180.0" y="515.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.0" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (6 samples, 0.39%)</title><rect x="1180.0" y="499.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.0" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1180.0" y="483.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.0" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1180.0" y="467.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.0" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1180.0" y="451.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1180.0" y="435.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1180.0" y="419.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.0" y="430.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.33%)</title><rect x="1180.0" y="403.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1183.0" y="414.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.07%)</title><rect x="1183.9" y="403.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1186.9" y="414.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (7 samples, 0.46%)</title><rect x="1184.6" y="579.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (1 samples, 0.07%)</title><rect x="1184.6" y="563.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1185.4" y="563.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.4" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1185.4" y="547.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1185.4" y="531.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (6 samples, 0.39%)</title><rect x="1185.4" y="515.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.4" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.20%)</title><rect x="1185.4" y="499.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1188.4" y="510.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.20%)</title><rect x="1187.7" y="499.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1190.7" y="510.0"></text>
</g>
</g>
</svg>
