<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1141"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1141"> </text>
<g id="frames">
<g>
<title>all (12,468 samples, 100.00%)</title><rect x="10.0" y="1107.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1118.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 31 tid=43779] (24 samples, 0.19%)</title><rect x="10.0" y="1091.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (24 samples, 0.19%)</title><rect x="10.0" y="1075.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (24 samples, 0.19%)</title><rect x="10.0" y="1059.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (24 samples, 0.19%)</title><rect x="10.0" y="1043.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.linkToTargetMethod (24 samples, 0.19%)</title><rect x="10.0" y="1027.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1001919226.invoke (24 samples, 0.19%)</title><rect x="10.0" y="1011.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.19%)</title><rect x="10.0" y="995.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.19%)</title><rect x="10.0" y="979.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.19%)</title><rect x="10.0" y="963.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.19%)</title><rect x="10.0" y="947.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=40707] (1,210 samples, 9.70%)</title><rect x="12.4" y="1091.0" width="114.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="15.4" y="1102.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,210 samples, 9.70%)</title><rect x="12.4" y="1075.0" width="114.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.4" y="1086.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (94 samples, 0.75%)</title><rect x="12.4" y="1059.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (44 samples, 0.35%)</title><rect x="12.4" y="1043.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.4" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (25 samples, 0.20%)</title><rect x="12.4" y="1027.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="15.4" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (19 samples, 0.15%)</title><rect x="14.7" y="1027.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="17.7" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (50 samples, 0.40%)</title><rect x="16.5" y="1043.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (50 samples, 0.40%)</title><rect x="16.5" y="1027.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (50 samples, 0.40%)</title><rect x="16.5" y="1011.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (50 samples, 0.40%)</title><rect x="16.5" y="995.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (50 samples, 0.40%)</title><rect x="16.5" y="979.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (50 samples, 0.40%)</title><rect x="16.5" y="963.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (50 samples, 0.40%)</title><rect x="16.5" y="947.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (50 samples, 0.40%)</title><rect x="16.5" y="931.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (50 samples, 0.40%)</title><rect x="16.5" y="915.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (50 samples, 0.40%)</title><rect x="16.5" y="899.0" width="4.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="19.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,116 samples, 8.95%)</title><rect x="21.3" y="1059.0" width="105.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.3" y="1070.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,116 samples, 8.95%)</title><rect x="21.3" y="1043.0" width="105.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.3" y="1054.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,116 samples, 8.95%)</title><rect x="21.3" y="1027.0" width="105.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.3" y="1038.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (771 samples, 6.18%)</title><rect x="21.3" y="1011.0" width="72.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.3" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (771 samples, 6.18%)</title><rect x="21.3" y="995.0" width="72.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.3" y="1006.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (713 samples, 5.72%)</title><rect x="21.3" y="979.0" width="67.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.3" y="990.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (189 samples, 1.52%)</title><rect x="21.3" y="963.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (189 samples, 1.52%)</title><rect x="21.3" y="947.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (88 samples, 0.71%)</title><rect x="21.3" y="931.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (88 samples, 0.71%)</title><rect x="21.3" y="915.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="926.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.71%)</title><rect x="21.3" y="899.0" width="8.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="24.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 0.81%)</title><rect x="29.6" y="931.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.6" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.36%)</title><rect x="29.6" y="915.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="32.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 0.45%)</title><rect x="33.8" y="915.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (56 samples, 0.45%)</title><rect x="33.8" y="899.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (56 samples, 0.45%)</title><rect x="33.8" y="883.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.45%)</title><rect x="33.8" y="867.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.8" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.45%)</title><rect x="33.8" y="851.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="36.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (70 samples, 0.56%)</title><rect x="39.1" y="963.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (70 samples, 0.56%)</title><rect x="39.1" y="947.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.56%)</title><rect x="39.1" y="931.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.1" y="942.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.22%)</title><rect x="39.1" y="915.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="42.1" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.34%)</title><rect x="41.8" y="915.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.8" y="926.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.34%)</title><rect x="41.8" y="899.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="44.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (454 samples, 3.64%)</title><rect x="45.8" y="963.0" width="42.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.8" y="974.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.14%)</title><rect x="45.8" y="947.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.14%)</title><rect x="45.8" y="931.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.14%)</title><rect x="45.8" y="915.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.8" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.14%)</title><rect x="45.8" y="899.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.8" y="910.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.14%)</title><rect x="45.8" y="883.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="48.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.35%)</title><rect x="47.4" y="947.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.35%)</title><rect x="47.4" y="931.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.35%)</title><rect x="47.4" y="915.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="50.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (393 samples, 3.15%)</title><rect x="51.5" y="947.0" width="37.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.5" y="958.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (51 samples, 0.41%)</title><rect x="51.5" y="931.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.5" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (51 samples, 0.41%)</title><rect x="51.5" y="915.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="54.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (126 samples, 1.01%)</title><rect x="56.4" y="931.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.4" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (26 samples, 0.21%)</title><rect x="56.4" y="915.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="59.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (100 samples, 0.80%)</title><rect x="58.8" y="915.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.8" y="926.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.34%)</title><rect x="58.8" y="899.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="61.8" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.26%)</title><rect x="62.9" y="899.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="65.9" y="910.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.20%)</title><rect x="65.9" y="899.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (80 samples, 0.64%)</title><rect x="68.3" y="931.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.3" y="942.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.24%)</title><rect x="68.3" y="915.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="71.3" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (50 samples, 0.40%)</title><rect x="71.1" y="915.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.1" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.40%)</title><rect x="71.1" y="899.0" width="4.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="74.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (136 samples, 1.09%)</title><rect x="75.9" y="931.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.26%)</title><rect x="75.9" y="915.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.9" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.26%)</title><rect x="75.9" y="899.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.9" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.26%)</title><rect x="75.9" y="883.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="78.9" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (29 samples, 0.23%)</title><rect x="79.0" y="915.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.0" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (29 samples, 0.23%)</title><rect x="79.0" y="899.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.0" y="910.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.23%)</title><rect x="79.0" y="883.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="82.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (74 samples, 0.59%)</title><rect x="81.7" y="915.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.7" y="926.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.19%)</title><rect x="81.7" y="899.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="84.7" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (50 samples, 0.40%)</title><rect x="84.0" y="899.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.40%)</title><rect x="84.0" y="883.0" width="4.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="87.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (58 samples, 0.47%)</title><rect x="88.7" y="979.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.47%)</title><rect x="88.7" y="963.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.47%)</title><rect x="88.7" y="947.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.7" y="958.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.27%)</title><rect x="88.7" y="931.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="91.7" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.19%)</title><rect x="92.0" y="931.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.0" y="942.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.19%)</title><rect x="92.0" y="915.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="95.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (231 samples, 1.85%)</title><rect x="94.2" y="1011.0" width="21.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.2" y="1022.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (34 samples, 0.27%)</title><rect x="94.2" y="995.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="97.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (79 samples, 0.63%)</title><rect x="97.4" y="995.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.4" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (79 samples, 0.63%)</title><rect x="97.4" y="979.0" width="7.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="100.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (118 samples, 0.95%)</title><rect x="104.9" y="995.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (118 samples, 0.95%)</title><rect x="104.9" y="979.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.9" y="990.0"></text>
</g>
<g>
<title>char[] (69 samples, 0.55%)</title><rect x="104.9" y="963.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="107.9" y="974.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.15%)</title><rect x="111.5" y="963.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="114.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.24%)</title><rect x="113.3" y="963.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.24%)</title><rect x="113.3" y="947.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.24%)</title><rect x="113.3" y="931.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.3" y="942.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.24%)</title><rect x="113.3" y="915.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="116.3" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 0.91%)</title><rect x="116.1" y="1011.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 0.91%)</title><rect x="116.1" y="995.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.1" y="1006.0"></text>
</g>
<g>
<title>char[] (49 samples, 0.39%)</title><rect x="116.1" y="979.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="119.1" y="990.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.18%)</title><rect x="120.7" y="979.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="123.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.34%)</title><rect x="122.9" y="979.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.34%)</title><rect x="122.9" y="963.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.34%)</title><rect x="122.9" y="947.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.9" y="958.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.34%)</title><rect x="122.9" y="931.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="125.9" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39939] (1,109 samples, 8.89%)</title><rect x="126.9" y="1091.0" width="104.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="129.9" y="1102.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,109 samples, 8.89%)</title><rect x="126.9" y="1075.0" width="104.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.9" y="1086.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (84 samples, 0.67%)</title><rect x="126.9" y="1059.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (49 samples, 0.39%)</title><rect x="126.9" y="1043.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.9" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (32 samples, 0.26%)</title><rect x="126.9" y="1027.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="129.9" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (17 samples, 0.14%)</title><rect x="129.9" y="1027.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="132.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (35 samples, 0.28%)</title><rect x="131.5" y="1043.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (35 samples, 0.28%)</title><rect x="131.5" y="1027.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (35 samples, 0.28%)</title><rect x="131.5" y="1011.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.5" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (35 samples, 0.28%)</title><rect x="131.5" y="995.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (35 samples, 0.28%)</title><rect x="131.5" y="979.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (35 samples, 0.28%)</title><rect x="131.5" y="963.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (35 samples, 0.28%)</title><rect x="131.5" y="947.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (35 samples, 0.28%)</title><rect x="131.5" y="931.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (35 samples, 0.28%)</title><rect x="131.5" y="915.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.5" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (35 samples, 0.28%)</title><rect x="131.5" y="899.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="134.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,025 samples, 8.22%)</title><rect x="134.8" y="1059.0" width="97.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.8" y="1070.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,025 samples, 8.22%)</title><rect x="134.8" y="1043.0" width="97.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.8" y="1054.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,025 samples, 8.22%)</title><rect x="134.8" y="1027.0" width="97.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.8" y="1038.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (696 samples, 5.58%)</title><rect x="134.8" y="1011.0" width="65.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.8" y="1022.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (696 samples, 5.58%)</title><rect x="134.8" y="995.0" width="65.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.8" y="1006.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (636 samples, 5.10%)</title><rect x="134.8" y="979.0" width="60.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.8" y="990.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (183 samples, 1.47%)</title><rect x="134.8" y="963.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (183 samples, 1.47%)</title><rect x="134.8" y="947.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (108 samples, 0.87%)</title><rect x="134.8" y="931.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (108 samples, 0.87%)</title><rect x="134.8" y="915.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.8" y="926.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.87%)</title><rect x="134.8" y="899.0" width="10.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="137.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (75 samples, 0.60%)</title><rect x="145.1" y="931.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.1" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (23 samples, 0.18%)</title><rect x="145.1" y="915.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="148.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 0.42%)</title><rect x="147.2" y="915.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (52 samples, 0.42%)</title><rect x="147.2" y="899.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (52 samples, 0.42%)</title><rect x="147.2" y="883.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (52 samples, 0.42%)</title><rect x="147.2" y="867.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.2" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.42%)</title><rect x="147.2" y="851.0" width="5.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="150.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (67 samples, 0.54%)</title><rect x="152.2" y="963.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (67 samples, 0.54%)</title><rect x="152.2" y="947.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (67 samples, 0.54%)</title><rect x="152.2" y="931.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.2" y="942.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.16%)</title><rect x="152.2" y="915.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="155.2" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.38%)</title><rect x="154.0" y="915.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="926.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.38%)</title><rect x="154.0" y="899.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="157.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (386 samples, 3.10%)</title><rect x="158.5" y="963.0" width="36.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.5" y="974.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.16%)</title><rect x="158.5" y="947.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.16%)</title><rect x="158.5" y="931.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20 samples, 0.16%)</title><rect x="158.5" y="915.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.16%)</title><rect x="158.5" y="899.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.5" y="910.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.16%)</title><rect x="158.5" y="883.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="161.5" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.14%)</title><rect x="160.4" y="947.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.14%)</title><rect x="160.4" y="931.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.14%)</title><rect x="160.4" y="915.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="163.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (349 samples, 2.80%)</title><rect x="162.0" y="947.0" width="33.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.0" y="958.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (45 samples, 0.36%)</title><rect x="162.0" y="931.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.0" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.36%)</title><rect x="162.0" y="915.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="165.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (84 samples, 0.67%)</title><rect x="166.3" y="931.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.3" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.14%)</title><rect x="166.3" y="915.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="169.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (67 samples, 0.54%)</title><rect x="167.9" y="915.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.9" y="926.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.14%)</title><rect x="167.9" y="899.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="170.9" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.22%)</title><rect x="169.5" y="899.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="172.5" y="910.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.18%)</title><rect x="172.0" y="899.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="175.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (73 samples, 0.59%)</title><rect x="174.2" y="931.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.2" y="942.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.22%)</title><rect x="174.2" y="915.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="177.2" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (46 samples, 0.37%)</title><rect x="176.8" y="915.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.8" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.37%)</title><rect x="176.8" y="899.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="179.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (147 samples, 1.18%)</title><rect x="181.1" y="931.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.1" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (55 samples, 0.44%)</title><rect x="181.1" y="915.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.1" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (55 samples, 0.44%)</title><rect x="181.1" y="899.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.1" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 0.44%)</title><rect x="181.1" y="883.0" width="5.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="184.1" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (23 samples, 0.18%)</title><rect x="186.3" y="915.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.3" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (23 samples, 0.18%)</title><rect x="186.3" y="899.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.3" y="910.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.18%)</title><rect x="186.3" y="883.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="189.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (69 samples, 0.55%)</title><rect x="188.5" y="915.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.5" y="926.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.18%)</title><rect x="188.5" y="899.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="191.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (47 samples, 0.38%)</title><rect x="190.6" y="899.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.6" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 0.38%)</title><rect x="190.6" y="883.0" width="4.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="193.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (60 samples, 0.48%)</title><rect x="195.0" y="979.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 0.48%)</title><rect x="195.0" y="963.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.48%)</title><rect x="195.0" y="947.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.0" y="958.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.21%)</title><rect x="195.0" y="931.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="198.0" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.27%)</title><rect x="197.5" y="931.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.5" y="942.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.27%)</title><rect x="197.5" y="915.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="200.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (223 samples, 1.79%)</title><rect x="200.7" y="1011.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.7" y="1022.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.30%)</title><rect x="200.7" y="995.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="203.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (96 samples, 0.77%)</title><rect x="204.3" y="995.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (96 samples, 0.77%)</title><rect x="204.3" y="979.0" width="9.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="207.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 0.71%)</title><rect x="213.4" y="995.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 0.71%)</title><rect x="213.4" y="979.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.4" y="990.0"></text>
</g>
<g>
<title>char[] (52 samples, 0.42%)</title><rect x="213.4" y="963.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="216.4" y="974.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.18%)</title><rect x="218.3" y="963.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="221.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.12%)</title><rect x="220.4" y="963.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.12%)</title><rect x="220.4" y="947.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.12%)</title><rect x="220.4" y="931.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.4" y="942.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.12%)</title><rect x="220.4" y="915.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="223.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 0.85%)</title><rect x="221.8" y="1011.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 0.85%)</title><rect x="221.8" y="995.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.8" y="1006.0"></text>
</g>
<g>
<title>char[] (51 samples, 0.41%)</title><rect x="221.8" y="979.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="224.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.28%)</title><rect x="226.6" y="979.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="229.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.16%)</title><rect x="229.9" y="979.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.16%)</title><rect x="229.9" y="963.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.16%)</title><rect x="229.9" y="947.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.9" y="958.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.16%)</title><rect x="229.9" y="931.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="232.9" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25603] (1,241 samples, 9.95%)</title><rect x="231.8" y="1091.0" width="117.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="234.8" y="1102.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,241 samples, 9.95%)</title><rect x="231.8" y="1075.0" width="117.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.8" y="1086.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (91 samples, 0.73%)</title><rect x="231.8" y="1059.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (45 samples, 0.36%)</title><rect x="231.8" y="1043.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.8" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (24 samples, 0.19%)</title><rect x="231.8" y="1027.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="234.8" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (21 samples, 0.17%)</title><rect x="234.1" y="1027.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="237.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (46 samples, 0.37%)</title><rect x="236.1" y="1043.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (46 samples, 0.37%)</title><rect x="236.1" y="1027.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (46 samples, 0.37%)</title><rect x="236.1" y="1011.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (46 samples, 0.37%)</title><rect x="236.1" y="995.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (46 samples, 0.37%)</title><rect x="236.1" y="979.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (46 samples, 0.37%)</title><rect x="236.1" y="963.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (46 samples, 0.37%)</title><rect x="236.1" y="947.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (46 samples, 0.37%)</title><rect x="236.1" y="931.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (46 samples, 0.37%)</title><rect x="236.1" y="915.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.1" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (46 samples, 0.37%)</title><rect x="236.1" y="899.0" width="4.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="239.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,150 samples, 9.22%)</title><rect x="240.5" y="1059.0" width="108.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.5" y="1070.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,150 samples, 9.22%)</title><rect x="240.5" y="1043.0" width="108.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.5" y="1054.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,150 samples, 9.22%)</title><rect x="240.5" y="1027.0" width="108.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.5" y="1038.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (782 samples, 6.27%)</title><rect x="240.5" y="1011.0" width="74.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.5" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (782 samples, 6.27%)</title><rect x="240.5" y="995.0" width="74.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.5" y="1006.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (728 samples, 5.84%)</title><rect x="240.5" y="979.0" width="68.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.5" y="990.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (203 samples, 1.63%)</title><rect x="240.5" y="963.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (203 samples, 1.63%)</title><rect x="240.5" y="947.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.5" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (103 samples, 0.83%)</title><rect x="240.5" y="931.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (103 samples, 0.83%)</title><rect x="240.5" y="915.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.5" y="926.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.83%)</title><rect x="240.5" y="899.0" width="9.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="243.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (100 samples, 0.80%)</title><rect x="250.2" y="931.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="253.2" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (51 samples, 0.41%)</title><rect x="250.2" y="915.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="253.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (49 samples, 0.39%)</title><rect x="255.0" y="915.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (49 samples, 0.39%)</title><rect x="255.0" y="899.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (49 samples, 0.39%)</title><rect x="255.0" y="883.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 0.39%)</title><rect x="255.0" y="867.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.0" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.39%)</title><rect x="255.0" y="851.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="258.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (79 samples, 0.63%)</title><rect x="259.7" y="963.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.63%)</title><rect x="259.7" y="947.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.63%)</title><rect x="259.7" y="931.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.7" y="942.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.22%)</title><rect x="259.7" y="915.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="262.7" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.41%)</title><rect x="262.3" y="915.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.3" y="926.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.41%)</title><rect x="262.3" y="899.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="265.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (446 samples, 3.58%)</title><rect x="267.1" y="963.0" width="42.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.1" y="974.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.18%)</title><rect x="267.1" y="947.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (22 samples, 0.18%)</title><rect x="267.1" y="931.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (22 samples, 0.18%)</title><rect x="267.1" y="915.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.1" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.18%)</title><rect x="267.1" y="899.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.1" y="910.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.18%)</title><rect x="267.1" y="883.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="270.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.27%)</title><rect x="269.2" y="947.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.27%)</title><rect x="269.2" y="931.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.2" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.27%)</title><rect x="269.2" y="915.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="272.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (390 samples, 3.13%)</title><rect x="272.4" y="947.0" width="37.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.4" y="958.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (39 samples, 0.31%)</title><rect x="272.4" y="931.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.31%)</title><rect x="272.4" y="915.0" width="3.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="275.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (114 samples, 0.91%)</title><rect x="276.1" y="931.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.1" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.15%)</title><rect x="276.1" y="915.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="279.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (95 samples, 0.76%)</title><rect x="277.9" y="915.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.9" y="926.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.30%)</title><rect x="277.9" y="899.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="280.9" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.30%)</title><rect x="281.5" y="899.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="284.5" y="910.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.16%)</title><rect x="285.0" y="899.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="288.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (75 samples, 0.60%)</title><rect x="286.9" y="931.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.9" y="942.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.21%)</title><rect x="286.9" y="915.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="289.9" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (49 samples, 0.39%)</title><rect x="289.4" y="915.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.4" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.39%)</title><rect x="289.4" y="899.0" width="4.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="292.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (162 samples, 1.30%)</title><rect x="294.0" y="931.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.0" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.43%)</title><rect x="294.0" y="915.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.43%)</title><rect x="294.0" y="899.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.43%)</title><rect x="294.0" y="883.0" width="5.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="297.0" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.25%)</title><rect x="299.0" y="915.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.0" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.25%)</title><rect x="299.0" y="899.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.0" y="910.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.25%)</title><rect x="299.0" y="883.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="302.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (78 samples, 0.63%)</title><rect x="302.0" y="915.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.0" y="926.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.14%)</title><rect x="302.0" y="899.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="305.0" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (60 samples, 0.48%)</title><rect x="303.7" y="899.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.7" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.48%)</title><rect x="303.7" y="883.0" width="5.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="306.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (54 samples, 0.43%)</title><rect x="309.4" y="979.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.43%)</title><rect x="309.4" y="963.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.43%)</title><rect x="309.4" y="947.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.4" y="958.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.24%)</title><rect x="309.4" y="931.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="312.4" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.19%)</title><rect x="312.2" y="931.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.2" y="942.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.19%)</title><rect x="312.2" y="915.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="315.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (247 samples, 1.98%)</title><rect x="314.5" y="1011.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.5" y="1022.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (52 samples, 0.42%)</title><rect x="314.5" y="995.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="317.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (86 samples, 0.69%)</title><rect x="319.4" y="995.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.4" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (86 samples, 0.69%)</title><rect x="319.4" y="979.0" width="8.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="322.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 0.87%)</title><rect x="327.5" y="995.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 0.87%)</title><rect x="327.5" y="979.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.5" y="990.0"></text>
</g>
<g>
<title>char[] (67 samples, 0.54%)</title><rect x="327.5" y="963.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="330.5" y="974.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.12%)</title><rect x="333.9" y="963.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="336.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.22%)</title><rect x="335.3" y="963.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.22%)</title><rect x="335.3" y="947.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.22%)</title><rect x="335.3" y="931.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.3" y="942.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.22%)</title><rect x="335.3" y="915.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="338.3" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 0.97%)</title><rect x="337.8" y="1011.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 0.97%)</title><rect x="337.8" y="995.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.8" y="1006.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.46%)</title><rect x="337.8" y="979.0" width="5.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="340.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.20%)</title><rect x="343.2" y="979.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="346.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.31%)</title><rect x="345.6" y="979.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.31%)</title><rect x="345.6" y="963.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.31%)</title><rect x="345.6" y="947.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.6" y="958.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.31%)</title><rect x="345.6" y="931.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="348.6" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=38915] (1,229 samples, 9.86%)</title><rect x="349.3" y="1091.0" width="116.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="352.3" y="1102.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,229 samples, 9.86%)</title><rect x="349.3" y="1075.0" width="116.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.3" y="1086.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (115 samples, 0.92%)</title><rect x="349.3" y="1059.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (54 samples, 0.43%)</title><rect x="349.3" y="1043.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.3" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (30 samples, 0.24%)</title><rect x="349.3" y="1027.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="352.3" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (24 samples, 0.19%)</title><rect x="352.1" y="1027.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="355.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (61 samples, 0.49%)</title><rect x="354.4" y="1043.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (61 samples, 0.49%)</title><rect x="354.4" y="1027.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (61 samples, 0.49%)</title><rect x="354.4" y="1011.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (61 samples, 0.49%)</title><rect x="354.4" y="995.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (61 samples, 0.49%)</title><rect x="354.4" y="979.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (61 samples, 0.49%)</title><rect x="354.4" y="963.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (61 samples, 0.49%)</title><rect x="354.4" y="947.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.4" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (61 samples, 0.49%)</title><rect x="354.4" y="931.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (61 samples, 0.49%)</title><rect x="354.4" y="915.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.4" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (61 samples, 0.49%)</title><rect x="354.4" y="899.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="357.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,114 samples, 8.93%)</title><rect x="360.2" y="1059.0" width="105.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.2" y="1070.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,114 samples, 8.93%)</title><rect x="360.2" y="1043.0" width="105.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.2" y="1054.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,114 samples, 8.93%)</title><rect x="360.2" y="1027.0" width="105.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.2" y="1038.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (746 samples, 5.98%)</title><rect x="360.2" y="1011.0" width="70.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.2" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (746 samples, 5.98%)</title><rect x="360.2" y="995.0" width="70.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.2" y="1006.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (684 samples, 5.49%)</title><rect x="360.2" y="979.0" width="64.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.2" y="990.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (181 samples, 1.45%)</title><rect x="360.2" y="963.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (181 samples, 1.45%)</title><rect x="360.2" y="947.0" width="17.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (91 samples, 0.73%)</title><rect x="360.2" y="931.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.2" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (91 samples, 0.73%)</title><rect x="360.2" y="915.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.2" y="926.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.73%)</title><rect x="360.2" y="899.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="363.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 0.72%)</title><rect x="368.8" y="931.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.8" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (44 samples, 0.35%)</title><rect x="368.8" y="915.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="371.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 0.37%)</title><rect x="373.0" y="915.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (46 samples, 0.37%)</title><rect x="373.0" y="899.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (46 samples, 0.37%)</title><rect x="373.0" y="883.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.37%)</title><rect x="373.0" y="867.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.0" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.37%)</title><rect x="373.0" y="851.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="376.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (65 samples, 0.52%)</title><rect x="377.3" y="963.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 0.52%)</title><rect x="377.3" y="947.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.52%)</title><rect x="377.3" y="931.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.3" y="942.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.25%)</title><rect x="377.3" y="915.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="380.3" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.27%)</title><rect x="380.2" y="915.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.2" y="926.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.27%)</title><rect x="380.2" y="899.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="383.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (438 samples, 3.51%)</title><rect x="383.5" y="963.0" width="41.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.5" y="974.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.10%)</title><rect x="383.5" y="947.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.10%)</title><rect x="383.5" y="931.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.10%)</title><rect x="383.5" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.10%)</title><rect x="383.5" y="899.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.5" y="910.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.10%)</title><rect x="383.5" y="883.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="386.5" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.26%)</title><rect x="384.7" y="947.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.7" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.26%)</title><rect x="384.7" y="931.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.7" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.26%)</title><rect x="384.7" y="915.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="387.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (393 samples, 3.15%)</title><rect x="387.7" y="947.0" width="37.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.7" y="958.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (48 samples, 0.38%)</title><rect x="387.7" y="931.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.7" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.38%)</title><rect x="387.7" y="915.0" width="4.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="390.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (121 samples, 0.97%)</title><rect x="392.3" y="931.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.3" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.18%)</title><rect x="392.3" y="915.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="395.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (99 samples, 0.79%)</title><rect x="394.3" y="915.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.3" y="926.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.34%)</title><rect x="394.3" y="899.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="397.3" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.27%)</title><rect x="398.3" y="899.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="401.3" y="910.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.18%)</title><rect x="401.5" y="899.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="404.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (85 samples, 0.68%)</title><rect x="403.7" y="931.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.7" y="942.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.26%)</title><rect x="403.7" y="915.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="406.7" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (52 samples, 0.42%)</title><rect x="406.8" y="915.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.8" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.42%)</title><rect x="406.8" y="899.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="409.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (139 samples, 1.11%)</title><rect x="411.8" y="931.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.32%)</title><rect x="411.8" y="915.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.8" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.32%)</title><rect x="411.8" y="899.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.8" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.32%)</title><rect x="411.8" y="883.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="414.8" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.25%)</title><rect x="415.5" y="915.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.5" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.25%)</title><rect x="415.5" y="899.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.5" y="910.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.25%)</title><rect x="415.5" y="883.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="418.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (68 samples, 0.55%)</title><rect x="418.5" y="915.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.5" y="926.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.22%)</title><rect x="418.5" y="899.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="421.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (41 samples, 0.33%)</title><rect x="421.0" y="899.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.33%)</title><rect x="421.0" y="883.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="424.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (62 samples, 0.50%)</title><rect x="424.9" y="979.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.50%)</title><rect x="424.9" y="963.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.50%)</title><rect x="424.9" y="947.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.9" y="958.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.33%)</title><rect x="424.9" y="931.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="427.9" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.17%)</title><rect x="428.8" y="931.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.8" y="942.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.17%)</title><rect x="428.8" y="915.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="431.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (233 samples, 1.87%)</title><rect x="430.8" y="1011.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.8" y="1022.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (41 samples, 0.33%)</title><rect x="430.8" y="995.0" width="3.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="433.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (67 samples, 0.54%)</title><rect x="434.7" y="995.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.7" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (67 samples, 0.54%)</title><rect x="434.7" y="979.0" width="6.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="437.7" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.00%)</title><rect x="441.0" y="995.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.00%)</title><rect x="441.0" y="979.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.0" y="990.0"></text>
</g>
<g>
<title>char[] (71 samples, 0.57%)</title><rect x="441.0" y="963.0" width="6.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="444.0" y="974.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.17%)</title><rect x="447.7" y="963.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="450.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.26%)</title><rect x="449.7" y="963.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.26%)</title><rect x="449.7" y="947.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.26%)</title><rect x="449.7" y="931.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.7" y="942.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.26%)</title><rect x="449.7" y="915.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="452.7" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (135 samples, 1.08%)</title><rect x="452.8" y="1011.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (135 samples, 1.08%)</title><rect x="452.8" y="995.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.8" y="1006.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.50%)</title><rect x="452.8" y="979.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="455.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.30%)</title><rect x="458.7" y="979.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="461.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.29%)</title><rect x="462.2" y="979.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.29%)</title><rect x="462.2" y="963.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.29%)</title><rect x="462.2" y="947.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.2" y="958.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.29%)</title><rect x="462.2" y="931.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="465.2" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=26371] (1,861 samples, 14.93%)</title><rect x="465.6" y="1091.0" width="176.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="468.6" y="1102.0">[NIO Selector #4 tid=26..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,861 samples, 14.93%)</title><rect x="465.6" y="1075.0" width="176.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.6" y="1086.0">one/nio/server/Selector..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (117 samples, 0.94%)</title><rect x="465.6" y="1059.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (60 samples, 0.48%)</title><rect x="465.6" y="1043.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.6" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (32 samples, 0.26%)</title><rect x="465.6" y="1027.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="468.6" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (28 samples, 0.22%)</title><rect x="468.6" y="1027.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="471.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (57 samples, 0.46%)</title><rect x="471.3" y="1043.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (57 samples, 0.46%)</title><rect x="471.3" y="1027.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (57 samples, 0.46%)</title><rect x="471.3" y="1011.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (57 samples, 0.46%)</title><rect x="471.3" y="995.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (57 samples, 0.46%)</title><rect x="471.3" y="979.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (57 samples, 0.46%)</title><rect x="471.3" y="963.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (57 samples, 0.46%)</title><rect x="471.3" y="947.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.3" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (57 samples, 0.46%)</title><rect x="471.3" y="931.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (57 samples, 0.46%)</title><rect x="471.3" y="915.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.3" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (57 samples, 0.46%)</title><rect x="471.3" y="899.0" width="5.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="474.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,744 samples, 13.99%)</title><rect x="476.7" y="1059.0" width="165.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.7" y="1070.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,744 samples, 13.99%)</title><rect x="476.7" y="1043.0" width="165.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.7" y="1054.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,744 samples, 13.99%)</title><rect x="476.7" y="1027.0" width="165.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.7" y="1038.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,178 samples, 9.45%)</title><rect x="476.7" y="1011.0" width="111.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.7" y="1022.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,178 samples, 9.45%)</title><rect x="476.7" y="995.0" width="111.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.7" y="1006.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,100 samples, 8.82%)</title><rect x="476.7" y="979.0" width="104.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.7" y="990.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (294 samples, 2.36%)</title><rect x="476.7" y="963.0" width="27.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.7" y="974.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (294 samples, 2.36%)</title><rect x="476.7" y="947.0" width="27.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.7" y="958.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (163 samples, 1.31%)</title><rect x="476.7" y="931.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (163 samples, 1.31%)</title><rect x="476.7" y="915.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.7" y="926.0"></text>
</g>
<g>
<title>byte[] (163 samples, 1.31%)</title><rect x="476.7" y="899.0" width="15.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="479.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (131 samples, 1.05%)</title><rect x="492.1" y="931.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.1" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (62 samples, 0.50%)</title><rect x="492.1" y="915.0" width="5.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="495.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 0.55%)</title><rect x="498.0" y="915.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (69 samples, 0.55%)</title><rect x="498.0" y="899.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (69 samples, 0.55%)</title><rect x="498.0" y="883.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.55%)</title><rect x="498.0" y="867.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.0" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (69 samples, 0.55%)</title><rect x="498.0" y="851.0" width="6.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="501.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (98 samples, 0.79%)</title><rect x="504.5" y="963.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (98 samples, 0.79%)</title><rect x="504.5" y="947.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.79%)</title><rect x="504.5" y="931.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.5" y="942.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.43%)</title><rect x="504.5" y="915.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="507.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.35%)</title><rect x="509.6" y="915.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.6" y="926.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.35%)</title><rect x="509.6" y="899.0" width="4.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="512.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (708 samples, 5.68%)</title><rect x="513.8" y="963.0" width="67.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.8" y="974.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.20%)</title><rect x="513.8" y="947.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.20%)</title><rect x="513.8" y="931.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.20%)</title><rect x="513.8" y="915.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.8" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.20%)</title><rect x="513.8" y="899.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.8" y="910.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.20%)</title><rect x="513.8" y="883.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="516.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (61 samples, 0.49%)</title><rect x="516.1" y="947.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (61 samples, 0.49%)</title><rect x="516.1" y="931.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.1" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (61 samples, 0.49%)</title><rect x="516.1" y="915.0" width="5.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="519.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (622 samples, 4.99%)</title><rect x="521.9" y="947.0" width="58.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.9" y="958.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (77 samples, 0.62%)</title><rect x="521.9" y="931.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.9" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.62%)</title><rect x="521.9" y="915.0" width="7.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="524.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (176 samples, 1.41%)</title><rect x="529.2" y="931.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.2" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (23 samples, 0.18%)</title><rect x="529.2" y="915.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="532.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (153 samples, 1.23%)</title><rect x="531.4" y="915.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.4" y="926.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.44%)</title><rect x="531.4" y="899.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="534.4" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (59 samples, 0.47%)</title><rect x="536.6" y="899.0" width="5.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="539.6" y="910.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.31%)</title><rect x="542.2" y="899.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="545.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (124 samples, 0.99%)</title><rect x="545.9" y="931.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.9" y="942.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.39%)</title><rect x="545.9" y="915.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="548.9" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (75 samples, 0.60%)</title><rect x="550.5" y="915.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.5" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.60%)</title><rect x="550.5" y="899.0" width="7.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="553.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (245 samples, 1.97%)</title><rect x="557.6" y="931.0" width="23.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.6" y="942.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (90 samples, 0.72%)</title><rect x="557.6" y="915.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.6" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (90 samples, 0.72%)</title><rect x="557.6" y="899.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.6" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (90 samples, 0.72%)</title><rect x="557.6" y="883.0" width="8.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="560.6" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (43 samples, 0.34%)</title><rect x="566.1" y="915.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.1" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (43 samples, 0.34%)</title><rect x="566.1" y="899.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.1" y="910.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.34%)</title><rect x="566.1" y="883.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="569.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (112 samples, 0.90%)</title><rect x="570.2" y="915.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.2" y="926.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.26%)</title><rect x="570.2" y="899.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="573.2" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (80 samples, 0.64%)</title><rect x="573.2" y="899.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.2" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (80 samples, 0.64%)</title><rect x="573.2" y="883.0" width="7.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="576.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (78 samples, 0.63%)</title><rect x="580.8" y="979.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (78 samples, 0.63%)</title><rect x="580.8" y="963.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (78 samples, 0.63%)</title><rect x="580.8" y="947.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.8" y="958.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.31%)</title><rect x="580.8" y="931.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="583.8" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.31%)</title><rect x="584.5" y="931.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.5" y="942.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.31%)</title><rect x="584.5" y="915.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="587.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (400 samples, 3.21%)</title><rect x="588.2" y="1011.0" width="37.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.2" y="1022.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (65 samples, 0.52%)</title><rect x="588.2" y="995.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="591.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (147 samples, 1.18%)</title><rect x="594.3" y="995.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (147 samples, 1.18%)</title><rect x="594.3" y="979.0" width="13.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="597.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (188 samples, 1.51%)</title><rect x="608.2" y="995.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (188 samples, 1.51%)</title><rect x="608.2" y="979.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.2" y="990.0"></text>
</g>
<g>
<title>char[] (108 samples, 0.87%)</title><rect x="608.2" y="963.0" width="10.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="611.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.29%)</title><rect x="618.5" y="963.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="621.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.35%)</title><rect x="621.9" y="963.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.35%)</title><rect x="621.9" y="947.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (44 samples, 0.35%)</title><rect x="621.9" y="931.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.9" y="942.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.35%)</title><rect x="621.9" y="915.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="624.9" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (166 samples, 1.33%)</title><rect x="626.0" y="1011.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (166 samples, 1.33%)</title><rect x="626.0" y="995.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.0" y="1006.0"></text>
</g>
<g>
<title>char[] (77 samples, 0.62%)</title><rect x="626.0" y="979.0" width="7.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="629.0" y="990.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.26%)</title><rect x="633.3" y="979.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="636.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.46%)</title><rect x="636.3" y="979.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.46%)</title><rect x="636.3" y="963.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (57 samples, 0.46%)</title><rect x="636.3" y="947.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.3" y="958.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.46%)</title><rect x="636.3" y="931.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="639.3" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=38659] (1,128 samples, 9.05%)</title><rect x="641.7" y="1091.0" width="106.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="644.7" y="1102.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,128 samples, 9.05%)</title><rect x="641.7" y="1075.0" width="106.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.7" y="1086.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (89 samples, 0.71%)</title><rect x="641.7" y="1059.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (35 samples, 0.28%)</title><rect x="641.7" y="1043.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.7" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (18 samples, 0.14%)</title><rect x="641.7" y="1027.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="644.7" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (17 samples, 0.14%)</title><rect x="643.4" y="1027.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="646.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (54 samples, 0.43%)</title><rect x="645.0" y="1043.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (54 samples, 0.43%)</title><rect x="645.0" y="1027.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (54 samples, 0.43%)</title><rect x="645.0" y="1011.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (54 samples, 0.43%)</title><rect x="645.0" y="995.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (54 samples, 0.43%)</title><rect x="645.0" y="979.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (54 samples, 0.43%)</title><rect x="645.0" y="963.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (54 samples, 0.43%)</title><rect x="645.0" y="947.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (54 samples, 0.43%)</title><rect x="645.0" y="931.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (54 samples, 0.43%)</title><rect x="645.0" y="915.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.0" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (54 samples, 0.43%)</title><rect x="645.0" y="899.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="648.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,039 samples, 8.33%)</title><rect x="650.2" y="1059.0" width="98.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.2" y="1070.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,039 samples, 8.33%)</title><rect x="650.2" y="1043.0" width="98.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.2" y="1054.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,039 samples, 8.33%)</title><rect x="650.2" y="1027.0" width="98.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.2" y="1038.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (702 samples, 5.63%)</title><rect x="650.2" y="1011.0" width="66.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.2" y="1022.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (702 samples, 5.63%)</title><rect x="650.2" y="995.0" width="66.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.2" y="1006.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (656 samples, 5.26%)</title><rect x="650.2" y="979.0" width="62.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.2" y="990.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (152 samples, 1.22%)</title><rect x="650.2" y="963.0" width="14.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (152 samples, 1.22%)</title><rect x="650.2" y="947.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (78 samples, 0.63%)</title><rect x="650.2" y="931.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.2" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (78 samples, 0.63%)</title><rect x="650.2" y="915.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.2" y="926.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.63%)</title><rect x="650.2" y="899.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="653.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (74 samples, 0.59%)</title><rect x="657.5" y="931.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.5" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35 samples, 0.28%)</title><rect x="657.5" y="915.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="660.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.31%)</title><rect x="660.9" y="915.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (39 samples, 0.31%)</title><rect x="660.9" y="899.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (39 samples, 0.31%)</title><rect x="660.9" y="883.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.31%)</title><rect x="660.9" y="867.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.9" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.31%)</title><rect x="660.9" y="851.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="663.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (60 samples, 0.48%)</title><rect x="664.5" y="963.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 0.48%)</title><rect x="664.5" y="947.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.48%)</title><rect x="664.5" y="931.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.5" y="942.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.20%)</title><rect x="664.5" y="915.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="667.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.28%)</title><rect x="666.9" y="915.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.9" y="926.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.28%)</title><rect x="666.9" y="899.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="669.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (444 samples, 3.56%)</title><rect x="670.2" y="963.0" width="42.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.2" y="974.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.18%)</title><rect x="670.2" y="947.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.18%)</title><rect x="670.2" y="931.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.18%)</title><rect x="670.2" y="915.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.2" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.18%)</title><rect x="670.2" y="899.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.2" y="910.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.18%)</title><rect x="670.2" y="883.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="673.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.30%)</title><rect x="672.4" y="947.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.30%)</title><rect x="672.4" y="931.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.30%)</title><rect x="672.4" y="915.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="675.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (384 samples, 3.08%)</title><rect x="675.9" y="947.0" width="36.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.9" y="958.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (49 samples, 0.39%)</title><rect x="675.9" y="931.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.9" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.39%)</title><rect x="675.9" y="915.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="678.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (112 samples, 0.90%)</title><rect x="680.5" y="931.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.5" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (23 samples, 0.18%)</title><rect x="680.5" y="915.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="683.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (89 samples, 0.71%)</title><rect x="682.7" y="915.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="926.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.23%)</title><rect x="682.7" y="899.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="685.7" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.27%)</title><rect x="685.5" y="899.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="688.5" y="910.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.21%)</title><rect x="688.7" y="899.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="691.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (69 samples, 0.55%)</title><rect x="691.1" y="931.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.1" y="942.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.20%)</title><rect x="691.1" y="915.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="694.1" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (44 samples, 0.35%)</title><rect x="693.5" y="915.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.5" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.35%)</title><rect x="693.5" y="899.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="696.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (154 samples, 1.24%)</title><rect x="697.7" y="931.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.7" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.40%)</title><rect x="697.7" y="915.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.40%)</title><rect x="697.7" y="899.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.7" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.40%)</title><rect x="697.7" y="883.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="700.7" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 0.26%)</title><rect x="702.4" y="915.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.4" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 0.26%)</title><rect x="702.4" y="899.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.4" y="910.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.26%)</title><rect x="702.4" y="883.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (71 samples, 0.57%)</title><rect x="705.5" y="915.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.5" y="926.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.11%)</title><rect x="705.5" y="899.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="708.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (57 samples, 0.46%)</title><rect x="706.9" y="899.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.9" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (57 samples, 0.46%)</title><rect x="706.9" y="883.0" width="5.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="709.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (46 samples, 0.37%)</title><rect x="712.2" y="979.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.37%)</title><rect x="712.2" y="963.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.37%)</title><rect x="712.2" y="947.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.2" y="958.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.18%)</title><rect x="712.2" y="931.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="715.2" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.19%)</title><rect x="714.3" y="931.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.3" y="942.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.19%)</title><rect x="714.3" y="915.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="717.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (224 samples, 1.80%)</title><rect x="716.6" y="1011.0" width="21.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.6" y="1022.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (39 samples, 0.31%)</title><rect x="716.6" y="995.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="719.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (78 samples, 0.63%)</title><rect x="720.3" y="995.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (78 samples, 0.63%)</title><rect x="720.3" y="979.0" width="7.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="723.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 0.86%)</title><rect x="727.7" y="995.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 0.86%)</title><rect x="727.7" y="979.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.7" y="990.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.48%)</title><rect x="727.7" y="963.0" width="5.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="730.7" y="974.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.15%)</title><rect x="733.4" y="963.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="736.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.22%)</title><rect x="735.1" y="963.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.22%)</title><rect x="735.1" y="947.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.22%)</title><rect x="735.1" y="931.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.1" y="942.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.22%)</title><rect x="735.1" y="915.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="738.1" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (113 samples, 0.91%)</title><rect x="737.8" y="1011.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (113 samples, 0.91%)</title><rect x="737.8" y="995.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.8" y="1006.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.44%)</title><rect x="737.8" y="979.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="740.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.15%)</title><rect x="743.0" y="979.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="746.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.31%)</title><rect x="744.8" y="979.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.31%)</title><rect x="744.8" y="963.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.31%)</title><rect x="744.8" y="947.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.8" y="958.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.31%)</title><rect x="744.8" y="931.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="747.8" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=27395] (1,440 samples, 11.55%)</title><rect x="748.5" y="1091.0" width="136.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="751.5" y="1102.0">[NIO Selector #6 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,440 samples, 11.55%)</title><rect x="748.5" y="1075.0" width="136.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.5" y="1086.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (109 samples, 0.87%)</title><rect x="748.5" y="1059.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (58 samples, 0.47%)</title><rect x="748.5" y="1043.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.5" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (33 samples, 0.26%)</title><rect x="748.5" y="1027.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="751.5" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (25 samples, 0.20%)</title><rect x="751.6" y="1027.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="754.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (51 samples, 0.41%)</title><rect x="754.0" y="1043.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (51 samples, 0.41%)</title><rect x="754.0" y="1027.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (51 samples, 0.41%)</title><rect x="754.0" y="1011.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (51 samples, 0.41%)</title><rect x="754.0" y="995.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (51 samples, 0.41%)</title><rect x="754.0" y="979.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (51 samples, 0.41%)</title><rect x="754.0" y="963.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (51 samples, 0.41%)</title><rect x="754.0" y="947.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (51 samples, 0.41%)</title><rect x="754.0" y="931.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (51 samples, 0.41%)</title><rect x="754.0" y="915.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.0" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (51 samples, 0.41%)</title><rect x="754.0" y="899.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="757.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,331 samples, 10.68%)</title><rect x="758.8" y="1059.0" width="126.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.8" y="1070.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,331 samples, 10.68%)</title><rect x="758.8" y="1043.0" width="126.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.8" y="1054.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,331 samples, 10.68%)</title><rect x="758.8" y="1027.0" width="126.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.8" y="1038.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (904 samples, 7.25%)</title><rect x="758.8" y="1011.0" width="85.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.8" y="1022.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (904 samples, 7.25%)</title><rect x="758.8" y="995.0" width="85.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.8" y="1006.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (838 samples, 6.72%)</title><rect x="758.8" y="979.0" width="79.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.8" y="990.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (217 samples, 1.74%)</title><rect x="758.8" y="963.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (217 samples, 1.74%)</title><rect x="758.8" y="947.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (104 samples, 0.83%)</title><rect x="758.8" y="931.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (104 samples, 0.83%)</title><rect x="758.8" y="915.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.8" y="926.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.83%)</title><rect x="758.8" y="899.0" width="9.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="761.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 0.91%)</title><rect x="768.7" y="931.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.7" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (55 samples, 0.44%)</title><rect x="768.7" y="915.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="771.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 0.47%)</title><rect x="773.9" y="915.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (58 samples, 0.47%)</title><rect x="773.9" y="899.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (58 samples, 0.47%)</title><rect x="773.9" y="883.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.47%)</title><rect x="773.9" y="867.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.9" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.47%)</title><rect x="773.9" y="851.0" width="5.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="776.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (80 samples, 0.64%)</title><rect x="779.3" y="963.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (80 samples, 0.64%)</title><rect x="779.3" y="947.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.64%)</title><rect x="779.3" y="931.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.3" y="942.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.28%)</title><rect x="779.3" y="915.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="782.3" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.36%)</title><rect x="782.7" y="915.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.7" y="926.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.36%)</title><rect x="782.7" y="899.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (541 samples, 4.34%)</title><rect x="786.9" y="963.0" width="51.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.9" y="974.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 0.23%)</title><rect x="786.9" y="947.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (29 samples, 0.23%)</title><rect x="786.9" y="931.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (29 samples, 0.23%)</title><rect x="786.9" y="915.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.9" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.23%)</title><rect x="786.9" y="899.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.9" y="910.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.23%)</title><rect x="786.9" y="883.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="789.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.37%)</title><rect x="789.7" y="947.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.7" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.37%)</title><rect x="789.7" y="931.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.7" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.37%)</title><rect x="789.7" y="915.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="792.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (466 samples, 3.74%)</title><rect x="794.0" y="947.0" width="44.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.0" y="958.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (63 samples, 0.51%)</title><rect x="794.0" y="931.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.0" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (63 samples, 0.51%)</title><rect x="794.0" y="915.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="797.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (143 samples, 1.15%)</title><rect x="800.0" y="931.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.0" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (25 samples, 0.20%)</title><rect x="800.0" y="915.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="803.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (118 samples, 0.95%)</title><rect x="802.3" y="915.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.3" y="926.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.27%)</title><rect x="802.3" y="899.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="805.3" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.38%)</title><rect x="805.6" y="899.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="808.6" y="910.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.29%)</title><rect x="810.1" y="899.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="813.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (99 samples, 0.79%)</title><rect x="813.5" y="931.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.5" y="942.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.33%)</title><rect x="813.5" y="915.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="816.5" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (58 samples, 0.47%)</title><rect x="817.4" y="915.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.4" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.47%)</title><rect x="817.4" y="899.0" width="5.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="820.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (161 samples, 1.29%)</title><rect x="822.9" y="931.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.30%)</title><rect x="822.9" y="915.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.9" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.30%)</title><rect x="822.9" y="899.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.9" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.30%)</title><rect x="822.9" y="883.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="825.9" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 0.31%)</title><rect x="826.4" y="915.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.4" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 0.31%)</title><rect x="826.4" y="899.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.4" y="910.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.31%)</title><rect x="826.4" y="883.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="829.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (85 samples, 0.68%)</title><rect x="830.1" y="915.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.1" y="926.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.22%)</title><rect x="830.1" y="899.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="833.1" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (58 samples, 0.47%)</title><rect x="832.6" y="899.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.6" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.47%)</title><rect x="832.6" y="883.0" width="5.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="835.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (66 samples, 0.53%)</title><rect x="838.1" y="979.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (66 samples, 0.53%)</title><rect x="838.1" y="963.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 0.53%)</title><rect x="838.1" y="947.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.1" y="958.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.26%)</title><rect x="838.1" y="931.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="841.1" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.26%)</title><rect x="841.2" y="931.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.2" y="942.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.26%)</title><rect x="841.2" y="915.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="844.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (297 samples, 2.38%)</title><rect x="844.4" y="1011.0" width="28.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.4" y="1022.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (55 samples, 0.44%)</title><rect x="844.4" y="995.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="847.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (105 samples, 0.84%)</title><rect x="849.6" y="995.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.6" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (105 samples, 0.84%)</title><rect x="849.6" y="979.0" width="9.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="852.6" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (137 samples, 1.10%)</title><rect x="859.5" y="995.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (137 samples, 1.10%)</title><rect x="859.5" y="979.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.5" y="990.0"></text>
</g>
<g>
<title>char[] (77 samples, 0.62%)</title><rect x="859.5" y="963.0" width="7.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="862.5" y="974.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.17%)</title><rect x="866.8" y="963.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="869.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.31%)</title><rect x="868.8" y="963.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.31%)</title><rect x="868.8" y="947.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.31%)</title><rect x="868.8" y="931.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.8" y="942.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.31%)</title><rect x="868.8" y="915.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="871.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.04%)</title><rect x="872.5" y="1011.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.04%)</title><rect x="872.5" y="995.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.5" y="1006.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.44%)</title><rect x="872.5" y="979.0" width="5.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="875.5" y="990.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.26%)</title><rect x="877.7" y="979.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="880.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.34%)</title><rect x="880.8" y="979.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.34%)</title><rect x="880.8" y="963.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.34%)</title><rect x="880.8" y="947.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.8" y="958.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.34%)</title><rect x="880.8" y="931.0" width="4.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="883.8" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=27907] (1,239 samples, 9.94%)</title><rect x="884.8" y="1091.0" width="117.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="887.8" y="1102.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,239 samples, 9.94%)</title><rect x="884.8" y="1075.0" width="117.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.8" y="1086.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (111 samples, 0.89%)</title><rect x="884.8" y="1059.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (53 samples, 0.43%)</title><rect x="884.8" y="1043.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.8" y="1054.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (33 samples, 0.26%)</title><rect x="884.8" y="1027.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="887.8" y="1038.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (20 samples, 0.16%)</title><rect x="887.9" y="1027.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="890.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (58 samples, 0.47%)</title><rect x="889.8" y="1043.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (58 samples, 0.47%)</title><rect x="889.8" y="1027.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (58 samples, 0.47%)</title><rect x="889.8" y="1011.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (58 samples, 0.47%)</title><rect x="889.8" y="995.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (58 samples, 0.47%)</title><rect x="889.8" y="979.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (58 samples, 0.47%)</title><rect x="889.8" y="963.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (58 samples, 0.47%)</title><rect x="889.8" y="947.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (58 samples, 0.47%)</title><rect x="889.8" y="931.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (58 samples, 0.47%)</title><rect x="889.8" y="915.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.8" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (58 samples, 0.47%)</title><rect x="889.8" y="899.0" width="5.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="892.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,128 samples, 9.05%)</title><rect x="895.3" y="1059.0" width="106.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.3" y="1070.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,128 samples, 9.05%)</title><rect x="895.3" y="1043.0" width="106.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.3" y="1054.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,128 samples, 9.05%)</title><rect x="895.3" y="1027.0" width="106.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.3" y="1038.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (724 samples, 5.81%)</title><rect x="895.3" y="1011.0" width="68.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.3" y="1022.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (724 samples, 5.81%)</title><rect x="895.3" y="995.0" width="68.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.3" y="1006.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (671 samples, 5.38%)</title><rect x="895.3" y="979.0" width="63.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.3" y="990.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (195 samples, 1.56%)</title><rect x="895.3" y="963.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (195 samples, 1.56%)</title><rect x="895.3" y="947.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (109 samples, 0.87%)</title><rect x="895.3" y="931.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (109 samples, 0.87%)</title><rect x="895.3" y="915.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.3" y="926.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.87%)</title><rect x="895.3" y="899.0" width="10.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="898.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 0.69%)</title><rect x="905.6" y="931.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.6" y="942.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.36%)</title><rect x="905.6" y="915.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="908.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (41 samples, 0.33%)</title><rect x="909.9" y="915.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (41 samples, 0.33%)</title><rect x="909.9" y="899.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (41 samples, 0.33%)</title><rect x="909.9" y="883.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.33%)</title><rect x="909.9" y="867.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.9" y="878.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.33%)</title><rect x="909.9" y="851.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="912.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (64 samples, 0.51%)</title><rect x="913.7" y="963.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.51%)</title><rect x="913.7" y="947.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.51%)</title><rect x="913.7" y="931.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.7" y="942.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.26%)</title><rect x="913.7" y="915.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="916.7" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.25%)</title><rect x="916.9" y="915.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.9" y="926.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.25%)</title><rect x="916.9" y="899.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="919.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (412 samples, 3.30%)</title><rect x="919.8" y="963.0" width="39.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.8" y="974.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.12%)</title><rect x="919.8" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="922.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.12%)</title><rect x="919.8" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.12%)</title><rect x="919.8" y="915.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.8" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.12%)</title><rect x="919.8" y="899.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.8" y="910.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.12%)</title><rect x="919.8" y="883.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="922.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.24%)</title><rect x="921.2" y="947.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.24%)</title><rect x="921.2" y="931.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.2" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.24%)</title><rect x="921.2" y="915.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="924.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.get (367 samples, 2.94%)</title><rect x="924.1" y="947.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.1" y="958.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (51 samples, 0.41%)</title><rect x="924.1" y="931.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.1" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (51 samples, 0.41%)</title><rect x="924.1" y="915.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="927.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (124 samples, 0.99%)</title><rect x="928.9" y="931.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.9" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.13%)</title><rect x="928.9" y="915.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="931.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (108 samples, 0.87%)</title><rect x="930.4" y="915.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.4" y="926.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.34%)</title><rect x="930.4" y="899.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="933.4" y="910.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.28%)</title><rect x="934.5" y="899.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="937.5" y="910.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.24%)</title><rect x="937.8" y="899.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="940.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (70 samples, 0.56%)</title><rect x="940.6" y="931.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.6" y="942.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.24%)</title><rect x="940.6" y="915.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="943.6" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (40 samples, 0.32%)</title><rect x="943.5" y="915.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.5" y="926.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.32%)</title><rect x="943.5" y="899.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="946.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (122 samples, 0.98%)</title><rect x="947.2" y="931.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.2" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.23%)</title><rect x="947.2" y="915.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.23%)</title><rect x="947.2" y="899.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.2" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.23%)</title><rect x="947.2" y="883.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="950.2" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (25 samples, 0.20%)</title><rect x="950.0" y="915.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.0" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (25 samples, 0.20%)</title><rect x="950.0" y="899.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.0" y="910.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.20%)</title><rect x="950.0" y="883.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="953.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (68 samples, 0.55%)</title><rect x="952.4" y="915.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.4" y="926.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.14%)</title><rect x="952.4" y="899.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="955.4" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (50 samples, 0.40%)</title><rect x="954.1" y="899.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.1" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.40%)</title><rect x="954.1" y="883.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="957.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (53 samples, 0.43%)</title><rect x="958.8" y="979.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.43%)</title><rect x="958.8" y="963.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.43%)</title><rect x="958.8" y="947.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.8" y="958.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.18%)</title><rect x="958.8" y="931.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="961.8" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.25%)</title><rect x="960.9" y="931.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.9" y="942.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.25%)</title><rect x="960.9" y="915.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="963.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (264 samples, 2.12%)</title><rect x="963.8" y="1011.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.8" y="1022.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (46 samples, 0.37%)</title><rect x="963.8" y="995.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="966.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (85 samples, 0.68%)</title><rect x="968.2" y="995.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.2" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (85 samples, 0.68%)</title><rect x="968.2" y="979.0" width="8.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="971.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.07%)</title><rect x="976.2" y="995.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.07%)</title><rect x="976.2" y="979.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.2" y="990.0"></text>
</g>
<g>
<title>char[] (83 samples, 0.67%)</title><rect x="976.2" y="963.0" width="7.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="979.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.16%)</title><rect x="984.1" y="963.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="987.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.24%)</title><rect x="986.0" y="963.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.24%)</title><rect x="986.0" y="947.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.24%)</title><rect x="986.0" y="931.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.0" y="942.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.24%)</title><rect x="986.0" y="915.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="989.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.12%)</title><rect x="988.8" y="1011.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.12%)</title><rect x="988.8" y="995.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.8" y="1006.0"></text>
</g>
<g>
<title>char[] (53 samples, 0.43%)</title><rect x="988.8" y="979.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="991.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.27%)</title><rect x="993.8" y="979.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="996.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.43%)</title><rect x="997.0" y="979.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.43%)</title><rect x="997.0" y="963.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1000.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.43%)</title><rect x="997.0" y="947.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.0" y="958.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.43%)</title><rect x="997.0" y="931.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1000.0" y="942.0"></text>
</g>
<g>
<title>[RMI TCP Connection(3)-127.0.0.1 tid=32771] (1,986 samples, 15.93%)</title><rect x="1002.0" y="1091.0" width="188.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1005.0" y="1102.0">[RMI TCP Connection(3)-1..</text>
</g>
<g>
<title>java/lang/Thread.run (1,986 samples, 15.93%)</title><rect x="1002.0" y="1075.0" width="188.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.0" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,986 samples, 15.93%)</title><rect x="1002.0" y="1059.0" width="188.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.0" y="1070.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,986 samples, 15.93%)</title><rect x="1002.0" y="1043.0" width="188.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.0" y="1054.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,986 samples, 15.93%)</title><rect x="1002.0" y="1027.0" width="188.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.0" y="1038.0">sun/rmi/transport/tcp/TC..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,986 samples, 15.93%)</title><rect x="1002.0" y="1011.0" width="188.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.0" y="1022.0">java/security/AccessCont..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$103/1230999400.run (1,986 samples, 15.93%)</title><rect x="1002.0" y="995.0" width="188.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.0" y="1006.0">sun/rmi/transport/tcp/TC..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,986 samples, 15.93%)</title><rect x="1002.0" y="979.0" width="188.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.0" y="990.0">sun/rmi/transport/tcp/TC..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,986 samples, 15.93%)</title><rect x="1002.0" y="963.0" width="188.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.0" y="974.0">sun/rmi/transport/tcp/TC..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,986 samples, 15.93%)</title><rect x="1002.0" y="947.0" width="188.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.0" y="958.0">sun/rmi/transport/tcp/TC..</text>
</g>
<g>
<title>java.io.DataOutputStream (16 samples, 0.13%)</title><rect x="1002.0" y="931.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1005.0" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,967 samples, 15.78%)</title><rect x="1003.8" y="931.0" width="186.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.8" y="942.0">sun/rmi/transport/Transp..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,683 samples, 13.50%)</title><rect x="1004.0" y="915.0" width="159.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.0" y="926.0">java/security/Access..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,683 samples, 13.50%)</title><rect x="1004.0" y="899.0" width="159.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.0" y="910.0">sun/rmi/transport/Tr..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,683 samples, 13.50%)</title><rect x="1004.0" y="883.0" width="159.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.0" y="894.0">sun/rmi/transport/Tr..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1,683 samples, 13.50%)</title><rect x="1004.0" y="867.0" width="159.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.0" y="878.0">sun/rmi/server/Unica..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (745 samples, 5.98%)</title><rect x="1004.2" y="851.0" width="70.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.2" y="862.0">java/lan..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (745 samples, 5.98%)</title><rect x="1004.2" y="835.0" width="70.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.2" y="846.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (5 samples, 0.04%)</title><rect x="1004.2" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1007.2" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (5 samples, 0.04%)</title><rect x="1004.2" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.2" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.04%)</title><rect x="1004.2" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.2" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.03%)</title><rect x="1004.3" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.3" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.03%)</title><rect x="1004.3" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.3" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (4 samples, 0.03%)</title><rect x="1004.3" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.3" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (4 samples, 0.03%)</title><rect x="1004.3" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (736 samples, 5.90%)</title><rect x="1004.7" y="819.0" width="69.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.7" y="830.0">jdk/int..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (736 samples, 5.90%)</title><rect x="1004.7" y="803.0" width="69.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.7" y="814.0">javax/m..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (606 samples, 4.86%)</title><rect x="1004.7" y="787.0" width="57.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.7" y="798.0">javax/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (606 samples, 4.86%)</title><rect x="1004.7" y="771.0" width="57.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.7" y="782.0">javax/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (606 samples, 4.86%)</title><rect x="1004.7" y="755.0" width="57.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.7" y="766.0">javax/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (606 samples, 4.86%)</title><rect x="1004.7" y="739.0" width="57.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.7" y="750.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (606 samples, 4.86%)</title><rect x="1004.7" y="723.0" width="57.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.7" y="734.0">com/su..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (605 samples, 4.85%)</title><rect x="1004.8" y="707.0" width="57.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.8" y="718.0">javax/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (605 samples, 4.85%)</title><rect x="1004.8" y="691.0" width="57.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.8" y="702.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (605 samples, 4.85%)</title><rect x="1004.8" y="675.0" width="57.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.8" y="686.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (605 samples, 4.85%)</title><rect x="1004.8" y="659.0" width="57.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1007.8" y="670.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (605 samples, 4.85%)</title><rect x="1004.8" y="643.0" width="57.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.8" y="654.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (605 samples, 4.85%)</title><rect x="1004.8" y="627.0" width="57.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.8" y="638.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (605 samples, 4.85%)</title><rect x="1004.8" y="611.0" width="57.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.8" y="622.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (605 samples, 4.85%)</title><rect x="1004.8" y="595.0" width="57.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.8" y="606.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (551 samples, 4.42%)</title><rect x="1004.8" y="579.0" width="52.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.8" y="590.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (551 samples, 4.42%)</title><rect x="1004.8" y="563.0" width="52.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.8" y="574.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (550 samples, 4.41%)</title><rect x="1004.8" y="547.0" width="52.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.8" y="558.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (550 samples, 4.41%)</title><rect x="1004.8" y="531.0" width="52.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.8" y="542.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (145 samples, 1.16%)</title><rect x="1004.8" y="515.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.8" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (139 samples, 1.11%)</title><rect x="1004.8" y="499.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1007.8" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (136 samples, 1.09%)</title><rect x="1004.8" y="483.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.8" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (136 samples, 1.09%)</title><rect x="1004.8" y="467.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="1004.8" y="451.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1007.8" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (117 samples, 0.94%)</title><rect x="1005.1" y="451.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.1" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (22 samples, 0.18%)</title><rect x="1005.1" y="435.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (20 samples, 0.16%)</title><rect x="1005.3" y="419.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (20 samples, 0.16%)</title><rect x="1005.3" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (20 samples, 0.16%)</title><rect x="1005.3" y="387.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1008.3" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (95 samples, 0.76%)</title><rect x="1007.2" y="435.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.04%)</title><rect x="1007.2" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1010.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (90 samples, 0.72%)</title><rect x="1007.6" y="419.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (90 samples, 0.72%)</title><rect x="1007.6" y="403.0" width="8.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1010.6" y="414.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (16 samples, 0.13%)</title><rect x="1016.1" y="451.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.13%)</title><rect x="1016.1" y="435.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1019.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (3 samples, 0.02%)</title><rect x="1017.7" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.7" y="494.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (3 samples, 0.02%)</title><rect x="1017.7" y="467.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1020.7" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (6 samples, 0.05%)</title><rect x="1017.9" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.9" y="510.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1018.0" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.0" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.02%)</title><rect x="1018.0" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.10%)</title><rect x="1018.5" y="515.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1021.5" y="526.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (10 samples, 0.08%)</title><rect x="1019.6" y="515.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1022.6" y="526.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (247 samples, 1.98%)</title><rect x="1020.6" y="515.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1023.6" y="526.0">j..</text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1020.6" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1023.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (6 samples, 0.05%)</title><rect x="1020.6" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (6 samples, 0.05%)</title><rect x="1020.6" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (6 samples, 0.05%)</title><rect x="1020.6" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (6 samples, 0.05%)</title><rect x="1020.6" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (6 samples, 0.05%)</title><rect x="1020.6" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1023.6" y="430.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (240 samples, 1.92%)</title><rect x="1021.3" y="499.0" width="22.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.3" y="510.0">j..</text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.34%)</title><rect x="1021.3" y="483.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1024.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (197 samples, 1.58%)</title><rect x="1025.3" y="483.0" width="18.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (197 samples, 1.58%)</title><rect x="1025.3" y="467.0" width="18.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1028.3" y="478.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (136 samples, 1.09%)</title><rect x="1044.0" y="515.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (136 samples, 1.09%)</title><rect x="1044.0" y="499.0" width="12.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1047.0" y="510.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="579.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.9" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="563.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="547.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="531.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.9" y="542.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="515.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="499.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="483.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (54 samples, 0.43%)</title><rect x="1056.9" y="467.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.9" y="478.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (54 samples, 0.43%)</title><rect x="1056.9" y="451.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.9" y="462.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (54 samples, 0.43%)</title><rect x="1056.9" y="435.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.9" y="446.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (5 samples, 0.04%)</title><rect x="1056.9" y="419.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1059.9" y="430.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (9 samples, 0.07%)</title><rect x="1057.4" y="419.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1060.4" y="430.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (31 samples, 0.25%)</title><rect x="1058.3" y="419.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1061.3" y="430.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (8 samples, 0.06%)</title><rect x="1061.3" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.3" y="430.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (8 samples, 0.06%)</title><rect x="1061.3" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.05%)</title><rect x="1061.5" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.05%)</title><rect x="1061.5" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/131635550.invoke (6 samples, 0.05%)</title><rect x="1061.5" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.05%)</title><rect x="1061.5" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.04%)</title><rect x="1061.5" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.04%)</title><rect x="1061.5" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1064.5" y="318.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (13 samples, 0.10%)</title><rect x="1062.0" y="787.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.0" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (12 samples, 0.10%)</title><rect x="1062.1" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.1" y="782.0"></text>
</g>
<g>
<title>java/security/Permissions.add (9 samples, 0.07%)</title><rect x="1062.3" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.3" y="766.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (7 samples, 0.06%)</title><rect x="1062.3" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (5 samples, 0.04%)</title><rect x="1062.5" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (4 samples, 0.03%)</title><rect x="1062.6" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node[] (4 samples, 0.03%)</title><rect x="1062.6" y="691.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1065.6" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (117 samples, 0.94%)</title><rect x="1063.3" y="787.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.3" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 0.33%)</title><rect x="1063.3" y="771.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.3" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (41 samples, 0.33%)</title><rect x="1063.3" y="755.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.3" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (41 samples, 0.33%)</title><rect x="1063.3" y="739.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.3" y="750.0"></text>
</g>
<g>
<title>com.sun.jmx.remote.util.OrderClassLoaders (5 samples, 0.04%)</title><rect x="1063.3" y="723.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1066.3" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (26 samples, 0.21%)</title><rect x="1063.7" y="723.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (26 samples, 0.21%)</title><rect x="1063.7" y="707.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (26 samples, 0.21%)</title><rect x="1063.7" y="691.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.7" y="702.0"></text>
</g>
<g>
<title>java.security.CodeSource (5 samples, 0.04%)</title><rect x="1063.7" y="675.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1066.7" y="686.0"></text>
</g>
<g>
<title>java.util.Hashtable (4 samples, 0.03%)</title><rect x="1064.2" y="675.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1067.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (6 samples, 0.05%)</title><rect x="1064.7" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.7" y="686.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.04%)</title><rect x="1064.7" y="659.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1067.7" y="670.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (10 samples, 0.08%)</title><rect x="1065.3" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.3" y="686.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (10 samples, 0.08%)</title><rect x="1065.3" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.3" y="670.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (10 samples, 0.08%)</title><rect x="1065.3" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.3" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.08%)</title><rect x="1065.3" y="627.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1068.3" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (10 samples, 0.08%)</title><rect x="1066.2" y="723.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1066.2" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1069.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1066.2" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.2" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1066.7" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1066.7" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1066.7" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (5 samples, 0.04%)</title><rect x="1066.7" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.02%)</title><rect x="1066.8" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.8" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.02%)</title><rect x="1066.8" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.8" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.02%)</title><rect x="1066.8" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="1066.8" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.8" y="606.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="1066.8" y="579.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1069.8" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (76 samples, 0.61%)</title><rect x="1067.2" y="771.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.2" y="782.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (76 samples, 0.61%)</title><rect x="1067.2" y="755.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (13 samples, 0.10%)</title><rect x="1067.2" y="739.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.2" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (13 samples, 0.10%)</title><rect x="1067.2" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (13 samples, 0.10%)</title><rect x="1067.2" y="707.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (13 samples, 0.10%)</title><rect x="1067.2" y="691.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (12 samples, 0.10%)</title><rect x="1067.3" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (11 samples, 0.09%)</title><rect x="1067.4" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (10 samples, 0.08%)</title><rect x="1067.4" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (10 samples, 0.08%)</title><rect x="1067.4" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.02%)</title><rect x="1067.6" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.02%)</title><rect x="1067.6" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (4 samples, 0.03%)</title><rect x="1067.9" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (3 samples, 0.02%)</title><rect x="1068.0" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (3 samples, 0.02%)</title><rect x="1068.0" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.02%)</title><rect x="1068.0" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.02%)</title><rect x="1068.0" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.0" y="558.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (62 samples, 0.50%)</title><rect x="1068.5" y="739.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.5" y="750.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (62 samples, 0.50%)</title><rect x="1068.5" y="723.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.5" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.03%)</title><rect x="1068.5" y="707.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1071.5" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (58 samples, 0.47%)</title><rect x="1068.9" y="707.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (42 samples, 0.34%)</title><rect x="1069.0" y="691.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.0" y="702.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.08%)</title><rect x="1069.0" y="675.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.0" y="686.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (28 samples, 0.22%)</title><rect x="1070.3" y="675.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.3" y="686.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.05%)</title><rect x="1070.3" y="659.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1073.3" y="670.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.11%)</title><rect x="1070.8" y="659.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1073.8" y="670.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.06%)</title><rect x="1072.2" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1075.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (15 samples, 0.12%)</title><rect x="1072.9" y="691.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.9" y="702.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="1072.9" y="675.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1075.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.08%)</title><rect x="1073.4" y="675.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1076.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (4 samples, 0.03%)</title><rect x="1074.3" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.3" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (4 samples, 0.03%)</title><rect x="1074.3" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.3" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.03%)</title><rect x="1074.3" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.3" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.02%)</title><rect x="1074.4" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.4" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.02%)</title><rect x="1074.4" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.4" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (3 samples, 0.02%)</title><rect x="1074.4" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.4" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (3 samples, 0.02%)</title><rect x="1074.4" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.4" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (384 samples, 3.08%)</title><rect x="1074.7" y="851.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.7" y="862.0">sun..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (384 samples, 3.08%)</title><rect x="1074.7" y="835.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.7" y="846.0">jav..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (384 samples, 3.08%)</title><rect x="1074.7" y="819.0" width="36.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.7" y="830.0">jav..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (355 samples, 2.85%)</title><rect x="1074.7" y="803.0" width="33.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.7" y="814.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (355 samples, 2.85%)</title><rect x="1074.7" y="787.0" width="33.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.7" y="798.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (343 samples, 2.75%)</title><rect x="1074.7" y="771.0" width="32.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.7" y="782.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (13 samples, 0.10%)</title><rect x="1074.7" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (13 samples, 0.10%)</title><rect x="1074.7" y="739.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.7" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.10%)</title><rect x="1074.8" y="723.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1077.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (330 samples, 2.65%)</title><rect x="1076.0" y="755.0" width="31.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.0" y="766.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (330 samples, 2.65%)</title><rect x="1076.0" y="739.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.0" y="750.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (328 samples, 2.63%)</title><rect x="1076.1" y="723.0" width="31.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.1" y="734.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (325 samples, 2.61%)</title><rect x="1076.1" y="707.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.1" y="718.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (73 samples, 0.59%)</title><rect x="1076.1" y="691.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (35 samples, 0.28%)</title><rect x="1076.1" y="675.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.1" y="686.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.04%)</title><rect x="1076.1" y="659.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1079.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.24%)</title><rect x="1076.6" y="659.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (38 samples, 0.30%)</title><rect x="1079.5" y="675.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.5" y="686.0"></text>
</g>
<g>
<title>int[] (38 samples, 0.30%)</title><rect x="1079.5" y="659.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1082.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (252 samples, 2.02%)</title><rect x="1083.1" y="691.0" width="23.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.1" y="702.0">j..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (3 samples, 0.02%)</title><rect x="1083.1" y="675.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1086.1" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (71 samples, 0.57%)</title><rect x="1083.3" y="675.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (71 samples, 0.57%)</title><rect x="1083.3" y="659.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (70 samples, 0.56%)</title><rect x="1083.3" y="643.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (70 samples, 0.56%)</title><rect x="1083.3" y="627.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (70 samples, 0.56%)</title><rect x="1083.3" y="611.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.3" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (70 samples, 0.56%)</title><rect x="1083.3" y="595.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (70 samples, 0.56%)</title><rect x="1083.3" y="579.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (70 samples, 0.56%)</title><rect x="1083.3" y="563.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1086.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (70 samples, 0.56%)</title><rect x="1083.3" y="547.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (70 samples, 0.56%)</title><rect x="1083.3" y="531.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (70 samples, 0.56%)</title><rect x="1083.3" y="515.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (66 samples, 0.53%)</title><rect x="1083.3" y="499.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (66 samples, 0.53%)</title><rect x="1083.3" y="483.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (66 samples, 0.53%)</title><rect x="1083.3" y="467.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.3" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (65 samples, 0.52%)</title><rect x="1083.4" y="451.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (59 samples, 0.47%)</title><rect x="1083.4" y="435.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (59 samples, 0.47%)</title><rect x="1083.4" y="419.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (52 samples, 0.42%)</title><rect x="1083.4" y="403.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (52 samples, 0.42%)</title><rect x="1083.4" y="387.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (52 samples, 0.42%)</title><rect x="1083.4" y="371.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (9 samples, 0.07%)</title><rect x="1083.4" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (9 samples, 0.07%)</title><rect x="1083.4" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.4" y="350.0"></text>
</g>
<g>
<title>int[] (9 samples, 0.07%)</title><rect x="1083.4" y="323.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1086.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (43 samples, 0.34%)</title><rect x="1084.3" y="355.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (42 samples, 0.34%)</title><rect x="1084.4" y="339.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.4" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (42 samples, 0.34%)</title><rect x="1084.4" y="323.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (42 samples, 0.34%)</title><rect x="1084.4" y="307.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (42 samples, 0.34%)</title><rect x="1084.4" y="291.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.4" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (42 samples, 0.34%)</title><rect x="1084.4" y="275.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (40 samples, 0.32%)</title><rect x="1084.5" y="259.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.5" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (40 samples, 0.32%)</title><rect x="1084.5" y="243.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (38 samples, 0.30%)</title><rect x="1084.5" y="227.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (38 samples, 0.30%)</title><rect x="1084.5" y="211.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.5" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (38 samples, 0.30%)</title><rect x="1084.5" y="195.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.5" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.14%)</title><rect x="1084.5" y="179.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1087.5" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (21 samples, 0.17%)</title><rect x="1086.1" y="179.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (12 samples, 0.10%)</title><rect x="1086.1" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.1" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.10%)</title><rect x="1086.1" y="147.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (12 samples, 0.10%)</title><rect x="1086.1" y="131.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.1" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (12 samples, 0.10%)</title><rect x="1086.1" y="115.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (12 samples, 0.10%)</title><rect x="1086.1" y="99.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (12 samples, 0.10%)</title><rect x="1086.1" y="83.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.1" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (12 samples, 0.10%)</title><rect x="1086.1" y="67.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.1" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (11 samples, 0.09%)</title><rect x="1086.2" y="51.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.2" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (11 samples, 0.09%)</title><rect x="1086.2" y="35.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1089.2" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (9 samples, 0.07%)</title><rect x="1087.2" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.2" y="174.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (9 samples, 0.07%)</title><rect x="1087.2" y="147.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1090.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (7 samples, 0.06%)</title><rect x="1088.4" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.4" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.06%)</title><rect x="1088.4" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.06%)</title><rect x="1088.4" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (7 samples, 0.06%)</title><rect x="1088.4" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (7 samples, 0.06%)</title><rect x="1088.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (7 samples, 0.06%)</title><rect x="1088.4" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.06%)</title><rect x="1088.4" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (4 samples, 0.03%)</title><rect x="1088.4" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.4" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.03%)</title><rect x="1088.4" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (4 samples, 0.03%)</title><rect x="1088.4" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="1088.5" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1091.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (6 samples, 0.05%)</title><rect x="1089.0" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.0" y="446.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (6 samples, 0.05%)</title><rect x="1089.0" y="419.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1092.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.03%)</title><rect x="1089.6" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.6" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.03%)</title><rect x="1089.6" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1092.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (178 samples, 1.43%)</title><rect x="1090.1" y="675.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.1" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (177 samples, 1.42%)</title><rect x="1090.2" y="659.0" width="16.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (177 samples, 1.42%)</title><rect x="1090.2" y="643.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (177 samples, 1.42%)</title><rect x="1090.2" y="627.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (177 samples, 1.42%)</title><rect x="1090.2" y="611.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (166 samples, 1.33%)</title><rect x="1090.2" y="595.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (166 samples, 1.33%)</title><rect x="1090.2" y="579.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (37 samples, 0.30%)</title><rect x="1090.2" y="563.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (36 samples, 0.29%)</title><rect x="1090.3" y="547.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (31 samples, 0.25%)</title><rect x="1090.3" y="531.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (31 samples, 0.25%)</title><rect x="1090.3" y="515.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (31 samples, 0.25%)</title><rect x="1090.3" y="499.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (30 samples, 0.24%)</title><rect x="1090.4" y="483.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (26 samples, 0.21%)</title><rect x="1090.4" y="467.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (26 samples, 0.21%)</title><rect x="1090.4" y="451.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (25 samples, 0.20%)</title><rect x="1090.5" y="435.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="1090.5" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1093.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (22 samples, 0.18%)</title><rect x="1090.8" y="419.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (22 samples, 0.18%)</title><rect x="1090.8" y="403.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (22 samples, 0.18%)</title><rect x="1090.8" y="387.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (22 samples, 0.18%)</title><rect x="1090.8" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (8 samples, 0.06%)</title><rect x="1090.8" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (8 samples, 0.06%)</title><rect x="1090.8" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.06%)</title><rect x="1090.8" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1093.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (10 samples, 0.08%)</title><rect x="1091.6" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.6" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.08%)</title><rect x="1091.6" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.6" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (3 samples, 0.02%)</title><rect x="1091.6" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.6" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.02%)</title><rect x="1091.6" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.02%)</title><rect x="1091.6" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1094.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.06%)</title><rect x="1091.9" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.9" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.06%)</title><rect x="1091.9" y="307.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1094.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.02%)</title><rect x="1092.5" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (3 samples, 0.02%)</title><rect x="1092.5" y="339.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1095.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.03%)</title><rect x="1092.9" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.9" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.03%)</title><rect x="1092.9" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1095.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.04%)</title><rect x="1093.3" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.3" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.04%)</title><rect x="1093.3" y="515.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1096.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.09%)</title><rect x="1093.7" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (7 samples, 0.06%)</title><rect x="1093.7" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (7 samples, 0.06%)</title><rect x="1093.7" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.7" y="542.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="1093.7" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="1094.0" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1097.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.03%)</title><rect x="1094.4" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.03%)</title><rect x="1094.4" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.02%)</title><rect x="1094.5" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.02%)</title><rect x="1094.5" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.02%)</title><rect x="1094.5" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.02%)</title><rect x="1094.5" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.02%)</title><rect x="1094.5" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.02%)</title><rect x="1094.5" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.02%)</title><rect x="1094.5" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.02%)</title><rect x="1094.5" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.02%)</title><rect x="1094.5" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.02%)</title><rect x="1094.5" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.02%)</title><rect x="1094.5" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.5" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.02%)</title><rect x="1094.5" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1097.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (34 samples, 0.27%)</title><rect x="1094.8" y="563.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (34 samples, 0.27%)</title><rect x="1094.8" y="547.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (34 samples, 0.27%)</title><rect x="1094.8" y="531.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.8" y="542.0"></text>
</g>
<g>
<title>int[] (24 samples, 0.19%)</title><rect x="1094.8" y="515.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1097.8" y="526.0"></text>
</g>
<g>
<title>int[] (10 samples, 0.08%)</title><rect x="1097.1" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1100.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (84 samples, 0.67%)</title><rect x="1098.0" y="563.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.0" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (84 samples, 0.67%)</title><rect x="1098.0" y="547.0" width="8.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1101.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (6 samples, 0.05%)</title><rect x="1106.0" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1109.0" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (6 samples, 0.05%)</title><rect x="1106.0" y="579.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1109.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (4 samples, 0.03%)</title><rect x="1106.5" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1109.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (4 samples, 0.03%)</title><rect x="1106.5" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1109.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.02%)</title><rect x="1106.9" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.9" y="718.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.02%)</title><rect x="1106.9" y="691.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1109.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (12 samples, 0.10%)</title><rect x="1107.2" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.2" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (12 samples, 0.10%)</title><rect x="1107.2" y="755.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1110.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (28 samples, 0.22%)</title><rect x="1108.3" y="803.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.3" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (28 samples, 0.22%)</title><rect x="1108.3" y="787.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.3" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (27 samples, 0.22%)</title><rect x="1108.4" y="771.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.4" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (27 samples, 0.22%)</title><rect x="1108.4" y="755.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (27 samples, 0.22%)</title><rect x="1108.4" y="739.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (27 samples, 0.22%)</title><rect x="1108.4" y="723.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (27 samples, 0.22%)</title><rect x="1108.4" y="707.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (26 samples, 0.21%)</title><rect x="1108.5" y="691.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (26 samples, 0.21%)</title><rect x="1108.5" y="675.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (21 samples, 0.17%)</title><rect x="1108.5" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (20 samples, 0.16%)</title><rect x="1108.5" y="643.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (20 samples, 0.16%)</title><rect x="1108.5" y="627.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.5" y="638.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.04%)</title><rect x="1108.5" y="611.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1111.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.12%)</title><rect x="1109.0" y="611.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1112.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.04%)</title><rect x="1110.5" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.5" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.04%)</title><rect x="1110.5" y="643.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1113.5" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (168 samples, 1.35%)</title><rect x="1111.1" y="851.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.1" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$108/808469658.readString (19 samples, 0.15%)</title><rect x="1111.1" y="835.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.1" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (19 samples, 0.15%)</title><rect x="1111.1" y="819.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.1" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (19 samples, 0.15%)</title><rect x="1111.1" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.1" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (19 samples, 0.15%)</title><rect x="1111.1" y="787.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (19 samples, 0.15%)</title><rect x="1111.1" y="771.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (19 samples, 0.15%)</title><rect x="1111.1" y="755.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (19 samples, 0.15%)</title><rect x="1111.1" y="739.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.1" y="750.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.09%)</title><rect x="1111.1" y="723.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1114.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.05%)</title><rect x="1112.3" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="1112.3" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.3" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.05%)</title><rect x="1112.3" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.3" y="702.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.05%)</title><rect x="1112.3" y="675.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1115.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (149 samples, 1.20%)</title><rect x="1112.9" y="835.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (149 samples, 1.20%)</title><rect x="1112.9" y="819.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.9" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (149 samples, 1.20%)</title><rect x="1112.9" y="803.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.9" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (20 samples, 0.16%)</title><rect x="1112.9" y="787.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.9" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.assign (5 samples, 0.04%)</title><rect x="1112.9" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.grow (5 samples, 0.04%)</title><rect x="1112.9" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.9" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (3 samples, 0.02%)</title><rect x="1112.9" y="739.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1115.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (13 samples, 0.10%)</title><rect x="1113.3" y="771.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (13 samples, 0.10%)</title><rect x="1113.3" y="755.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.3" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (5 samples, 0.04%)</title><rect x="1113.3" y="739.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1116.3" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (5 samples, 0.04%)</title><rect x="1113.9" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.9" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.03%)</title><rect x="1113.9" y="723.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1116.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (129 samples, 1.03%)</title><rect x="1114.8" y="787.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.8" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (27 samples, 0.22%)</title><rect x="1114.8" y="771.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (27 samples, 0.22%)</title><rect x="1114.8" y="755.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.8" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.03%)</title><rect x="1114.8" y="739.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1117.8" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.03%)</title><rect x="1115.1" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1118.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (17 samples, 0.14%)</title><rect x="1115.5" y="739.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.5" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (5 samples, 0.04%)</title><rect x="1115.5" y="723.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1118.5" y="734.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.03%)</title><rect x="1116.0" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1119.0" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (8 samples, 0.06%)</title><rect x="1116.4" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (7 samples, 0.06%)</title><rect x="1116.5" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.5" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (7 samples, 0.06%)</title><rect x="1116.5" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (7 samples, 0.06%)</title><rect x="1116.5" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.05%)</title><rect x="1116.6" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="1116.6" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.6" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.04%)</title><rect x="1116.7" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.7" y="638.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="1116.7" y="611.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1119.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (102 samples, 0.82%)</title><rect x="1117.3" y="771.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.3" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues[] (3 samples, 0.02%)</title><rect x="1117.3" y="755.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1120.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (8 samples, 0.06%)</title><rect x="1117.6" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.6" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (8 samples, 0.06%)</title><rect x="1117.6" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (91 samples, 0.73%)</title><rect x="1118.4" y="755.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.4" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (91 samples, 0.73%)</title><rect x="1118.4" y="739.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (91 samples, 0.73%)</title><rect x="1118.4" y="723.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (88 samples, 0.71%)</title><rect x="1118.4" y="707.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1121.4" y="718.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (88 samples, 0.71%)</title><rect x="1118.4" y="691.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.02%)</title><rect x="1118.4" y="675.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.02%)</title><rect x="1118.4" y="659.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.02%)</title><rect x="1118.4" y="643.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.02%)</title><rect x="1118.4" y="627.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.02%)</title><rect x="1118.4" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.02%)</title><rect x="1118.4" y="595.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.4" y="606.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (85 samples, 0.68%)</title><rect x="1118.6" y="675.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.6" y="686.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.03%)</title><rect x="1118.6" y="659.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1121.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.06%)</title><rect x="1119.0" y="659.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1122.0" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap (5 samples, 0.04%)</title><rect x="1119.7" y="659.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1122.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.06%)</title><rect x="1120.2" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.06%)</title><rect x="1120.2" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.05%)</title><rect x="1120.2" y="627.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1123.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (3 samples, 0.02%)</title><rect x="1120.8" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (3 samples, 0.02%)</title><rect x="1120.8" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.8" y="654.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.02%)</title><rect x="1120.8" y="627.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1123.8" y="638.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (3 samples, 0.02%)</title><rect x="1121.1" y="659.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1124.1" y="670.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (29 samples, 0.23%)</title><rect x="1121.5" y="659.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (29 samples, 0.23%)</title><rect x="1121.5" y="643.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (29 samples, 0.23%)</title><rect x="1121.5" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (28 samples, 0.22%)</title><rect x="1121.6" y="611.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (28 samples, 0.22%)</title><rect x="1121.6" y="595.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1124.6" y="606.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (26 samples, 0.21%)</title><rect x="1124.2" y="659.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1124.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1124.3" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.02%)</title><rect x="1124.3" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.3" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="1124.3" y="595.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1127.3" y="606.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (22 samples, 0.18%)</title><rect x="1124.6" y="643.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1127.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (3 samples, 0.02%)</title><rect x="1126.7" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.7" y="718.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (3 samples, 0.02%)</title><rect x="1126.7" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (3 samples, 0.02%)</title><rect x="1126.7" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (3 samples, 0.02%)</title><rect x="1126.7" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.02%)</title><rect x="1126.7" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.02%)</title><rect x="1126.7" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.7" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (381 samples, 3.06%)</title><rect x="1127.0" y="851.0" width="36.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.0" y="862.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (378 samples, 3.03%)</title><rect x="1127.3" y="835.0" width="35.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.3" y="846.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (377 samples, 3.02%)</title><rect x="1127.3" y="819.0" width="35.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.3" y="830.0">sun..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (376 samples, 3.02%)</title><rect x="1127.4" y="803.0" width="35.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.4" y="814.0">sun..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (376 samples, 3.02%)</title><rect x="1127.4" y="787.0" width="35.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.4" y="798.0">sun..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (376 samples, 3.02%)</title><rect x="1127.4" y="771.0" width="35.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.4" y="782.0">jav..</text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (4 samples, 0.03%)</title><rect x="1127.5" y="755.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1130.5" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$ReplaceTable (5 samples, 0.04%)</title><rect x="1127.9" y="755.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1130.9" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (198 samples, 1.59%)</title><rect x="1128.4" y="755.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.4" y="766.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.06%)</title><rect x="1128.4" y="739.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1131.4" y="750.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.57%)</title><rect x="1129.1" y="739.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.1" y="750.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.06%)</title><rect x="1135.8" y="739.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1138.8" y="750.0"></text>
</g>
<g>
<title>char[] (106 samples, 0.85%)</title><rect x="1136.5" y="739.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1139.5" y="750.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (3 samples, 0.02%)</title><rect x="1146.6" y="739.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1149.6" y="750.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1146.8" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.8" y="750.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1146.8" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.8" y="734.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.02%)</title><rect x="1146.8" y="707.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1149.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (54 samples, 0.43%)</title><rect x="1147.1" y="755.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.1" y="766.0"></text>
</g>
<g>
<title>int[] (47 samples, 0.38%)</title><rect x="1147.1" y="739.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1150.1" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.06%)</title><rect x="1151.6" y="739.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1154.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (114 samples, 0.91%)</title><rect x="1152.2" y="755.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.2" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (33 samples, 0.26%)</title><rect x="1152.2" y="739.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1155.2" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="1155.4" y="739.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1158.4" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (76 samples, 0.61%)</title><rect x="1155.8" y="739.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.8" y="750.0"></text>
</g>
<g>
<title>int[] (40 samples, 0.32%)</title><rect x="1155.8" y="723.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1158.8" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.29%)</title><rect x="1159.6" y="723.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1162.6" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseInputStream (3 samples, 0.02%)</title><rect x="1163.0" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.0" y="862.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.done (3 samples, 0.02%)</title><rect x="1163.0" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.0" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (278 samples, 2.23%)</title><rect x="1163.3" y="915.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1166.3" y="926.0">s..</text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (5 samples, 0.04%)</title><rect x="1163.3" y="899.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1166.3" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (273 samples, 2.19%)</title><rect x="1163.8" y="899.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.8" y="910.0">s..</text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (273 samples, 2.19%)</title><rect x="1163.8" y="883.0" width="25.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.8" y="894.0">s..</text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (272 samples, 2.18%)</title><rect x="1163.9" y="867.0" width="25.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.9" y="878.0">j..</text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (12 samples, 0.10%)</title><rect x="1164.1" y="851.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1167.1" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (218 samples, 1.75%)</title><rect x="1165.3" y="851.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.3" y="862.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="1165.3" y="835.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1168.3" y="846.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.67%)</title><rect x="1165.6" y="835.0" width="7.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1168.6" y="846.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.17%)</title><rect x="1173.5" y="835.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1176.5" y="846.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.27%)</title><rect x="1175.5" y="835.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1178.5" y="846.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (74 samples, 0.59%)</title><rect x="1178.9" y="835.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.9" y="846.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.35%)</title><rect x="1178.9" y="819.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1181.9" y="830.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.14%)</title><rect x="1183.1" y="819.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1186.1" y="830.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.10%)</title><rect x="1184.8" y="819.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.8" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (39 samples, 0.31%)</title><rect x="1185.9" y="851.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.9" y="862.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="1185.9" y="835.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (10 samples, 0.08%)</title><rect x="1186.3" y="835.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.20%)</title><rect x="1187.3" y="835.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (4 samples, 0.03%)</title><rect x="1189.6" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="1189.6" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$$Lambda$110/1036950624.get$Lambda (4 samples, 0.03%)</title><rect x="1189.6" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$$Lambda$110 (4 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
</g>
</svg>
