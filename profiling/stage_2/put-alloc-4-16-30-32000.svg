<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (5,365 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 31 tid=43779] (12 samples, 0.22%)</title><rect x="10.0" y="1123.0" width="2.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (12 samples, 0.22%)</title><rect x="10.0" y="1107.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (12 samples, 0.22%)</title><rect x="10.0" y="1091.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (12 samples, 0.22%)</title><rect x="10.0" y="1075.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.linkToTargetMethod (12 samples, 0.22%)</title><rect x="10.0" y="1059.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1001919226.invoke (12 samples, 0.22%)</title><rect x="10.0" y="1043.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.22%)</title><rect x="10.0" y="1027.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.22%)</title><rect x="10.0" y="1011.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.22%)</title><rect x="10.0" y="995.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="10.0" y="979.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=37379] (23 samples, 0.43%)</title><rect x="12.6" y="1123.0" width="5.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="15.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (23 samples, 0.43%)</title><rect x="12.6" y="1107.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (17 samples, 0.32%)</title><rect x="12.6" y="1091.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (17 samples, 0.32%)</title><rect x="12.6" y="1075.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (17 samples, 0.32%)</title><rect x="12.6" y="1059.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.6" y="1070.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="12.6" y="1043.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="15.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (6 samples, 0.11%)</title><rect x="16.4" y="1091.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (6 samples, 0.11%)</title><rect x="16.4" y="1075.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (6 samples, 0.11%)</title><rect x="16.4" y="1059.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (6 samples, 0.11%)</title><rect x="16.4" y="1043.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (4 samples, 0.07%)</title><rect x="16.6" y="1027.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (4 samples, 0.07%)</title><rect x="16.6" y="1011.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.6" y="1022.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=40707] (741 samples, 13.81%)</title><rect x="17.7" y="1123.0" width="163.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="20.7" y="1134.0">[NIO Selector #0 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (741 samples, 13.81%)</title><rect x="17.7" y="1107.0" width="163.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="1118.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (42 samples, 0.78%)</title><rect x="17.7" y="1091.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (16 samples, 0.30%)</title><rect x="17.7" y="1075.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.7" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (8 samples, 0.15%)</title><rect x="17.7" y="1059.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.7" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (8 samples, 0.15%)</title><rect x="19.5" y="1059.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="22.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (26 samples, 0.48%)</title><rect x="21.2" y="1075.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (26 samples, 0.48%)</title><rect x="21.2" y="1059.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (26 samples, 0.48%)</title><rect x="21.2" y="1043.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (26 samples, 0.48%)</title><rect x="21.2" y="1027.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (26 samples, 0.48%)</title><rect x="21.2" y="1011.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (26 samples, 0.48%)</title><rect x="21.2" y="995.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (26 samples, 0.48%)</title><rect x="21.2" y="979.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (26 samples, 0.48%)</title><rect x="21.2" y="963.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (26 samples, 0.48%)</title><rect x="21.2" y="947.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.2" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (26 samples, 0.48%)</title><rect x="21.2" y="931.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (699 samples, 13.03%)</title><rect x="26.9" y="1091.0" width="153.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.9" y="1102.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (699 samples, 13.03%)</title><rect x="26.9" y="1075.0" width="153.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.9" y="1086.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (699 samples, 13.03%)</title><rect x="26.9" y="1059.0" width="153.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.9" y="1070.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (384 samples, 7.16%)</title><rect x="26.9" y="1043.0" width="84.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.9" y="1054.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (384 samples, 7.16%)</title><rect x="26.9" y="1027.0" width="84.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.9" y="1038.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (354 samples, 6.60%)</title><rect x="26.9" y="1011.0" width="77.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.9" y="1022.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (112 samples, 2.09%)</title><rect x="26.9" y="995.0" width="24.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.9" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (112 samples, 2.09%)</title><rect x="26.9" y="979.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.9" y="990.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (58 samples, 1.08%)</title><rect x="26.9" y="963.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.9" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (58 samples, 1.08%)</title><rect x="26.9" y="947.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.9" y="958.0"></text>
</g>
<g>
<title>byte[] (58 samples, 1.08%)</title><rect x="26.9" y="931.0" width="12.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="29.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 1.01%)</title><rect x="39.7" y="963.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.7" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (23 samples, 0.43%)</title><rect x="39.7" y="947.0" width="5.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="42.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 0.58%)</title><rect x="44.8" y="947.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (31 samples, 0.58%)</title><rect x="44.8" y="931.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (31 samples, 0.58%)</title><rect x="44.8" y="915.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.8" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.58%)</title><rect x="44.8" y="899.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.8" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.58%)</title><rect x="44.8" y="883.0" width="6.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (22 samples, 0.41%)</title><rect x="51.6" y="995.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.41%)</title><rect x="51.6" y="979.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.41%)</title><rect x="51.6" y="963.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.6" y="974.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.22%)</title><rect x="51.6" y="947.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="54.6" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.19%)</title><rect x="54.2" y="947.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.2" y="958.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="54.2" y="931.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="57.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (220 samples, 4.10%)</title><rect x="56.4" y="995.0" width="48.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.4" y="1006.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.26%)</title><rect x="56.4" y="979.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.26%)</title><rect x="56.4" y="963.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.26%)</title><rect x="56.4" y="947.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.4" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.26%)</title><rect x="56.4" y="931.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.4" y="942.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.26%)</title><rect x="56.4" y="915.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="59.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.47%)</title><rect x="59.5" y="979.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.5" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.47%)</title><rect x="59.5" y="963.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.5" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.47%)</title><rect x="59.5" y="947.0" width="5.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="62.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (181 samples, 3.37%)</title><rect x="65.0" y="979.0" width="39.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.0" y="990.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.60%)</title><rect x="65.0" y="963.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.60%)</title><rect x="65.0" y="947.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.0" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.60%)</title><rect x="65.0" y="931.0" width="7.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.0" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.35%)</title><rect x="72.0" y="963.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="75.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (47 samples, 0.88%)</title><rect x="76.2" y="963.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.2" y="974.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.39%)</title><rect x="76.2" y="947.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="79.2" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.24%)</title><rect x="80.8" y="947.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="83.8" y="958.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.24%)</title><rect x="83.7" y="947.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="86.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (83 samples, 1.55%)</title><rect x="86.5" y="963.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (50 samples, 0.93%)</title><rect x="86.5" y="947.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.5" y="958.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.34%)</title><rect x="86.5" y="931.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="89.5" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (32 samples, 0.60%)</title><rect x="90.5" y="931.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.5" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.60%)</title><rect x="90.5" y="915.0" width="7.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="93.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (33 samples, 0.62%)</title><rect x="97.5" y="947.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.5" y="958.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="97.5" y="931.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="100.5" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (20 samples, 0.37%)</title><rect x="100.4" y="931.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.37%)</title><rect x="100.4" y="915.0" width="4.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="103.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (30 samples, 0.56%)</title><rect x="104.8" y="1011.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.56%)</title><rect x="104.8" y="995.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.56%)</title><rect x="104.8" y="979.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="104.8" y="963.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="107.8" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.30%)</title><rect x="107.9" y="963.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.9" y="974.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.30%)</title><rect x="107.9" y="947.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="110.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (143 samples, 2.67%)</title><rect x="111.4" y="1043.0" width="31.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.4" y="1054.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (23 samples, 0.43%)</title><rect x="111.4" y="1027.0" width="5.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (47 samples, 0.88%)</title><rect x="116.5" y="1027.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.5" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.88%)</title><rect x="116.5" y="1011.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="119.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 1.36%)</title><rect x="126.8" y="1027.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 1.36%)</title><rect x="126.8" y="1011.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="1022.0"></text>
</g>
<g>
<title>char[] (45 samples, 0.84%)</title><rect x="126.8" y="995.0" width="9.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="129.8" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.21%)</title><rect x="136.7" y="995.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="139.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.32%)</title><rect x="139.1" y="995.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.32%)</title><rect x="139.1" y="979.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.32%)</title><rect x="139.1" y="963.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.1" y="974.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="139.1" y="947.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (18 samples, 0.34%)</title><rect x="142.8" y="1043.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.8" y="1054.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.34%)</title><rect x="142.8" y="1027.0" width="4.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="145.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.43%)</title><rect x="146.8" y="1043.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.43%)</title><rect x="146.8" y="1027.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.43%)</title><rect x="146.8" y="1011.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="146.8" y="995.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="149.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.17%)</title><rect x="149.9" y="995.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.9" y="1006.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="149.9" y="979.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="152.9" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (131 samples, 2.44%)</title><rect x="151.9" y="1043.0" width="28.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.9" y="1054.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (131 samples, 2.44%)</title><rect x="151.9" y="1027.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.9" y="1038.0">on..</text>
</g>
<g>
<title>char[] (48 samples, 0.89%)</title><rect x="151.9" y="1011.0" width="10.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="154.9" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.58%)</title><rect x="162.4" y="1011.0" width="6.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="165.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.97%)</title><rect x="169.2" y="1011.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.97%)</title><rect x="169.2" y="995.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (52 samples, 0.97%)</title><rect x="169.2" y="979.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.2" y="990.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.97%)</title><rect x="169.2" y="963.0" width="11.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="172.2" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39939] (575 samples, 10.72%)</title><rect x="180.7" y="1123.0" width="126.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="183.7" y="1134.0">[NIO Selector #1..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (575 samples, 10.72%)</title><rect x="180.7" y="1107.0" width="126.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.7" y="1118.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (35 samples, 0.65%)</title><rect x="180.7" y="1091.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (10 samples, 0.19%)</title><rect x="180.7" y="1075.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.7" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (6 samples, 0.11%)</title><rect x="180.7" y="1059.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="183.7" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (4 samples, 0.07%)</title><rect x="182.0" y="1059.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="185.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (25 samples, 0.47%)</title><rect x="182.9" y="1075.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (25 samples, 0.47%)</title><rect x="182.9" y="1059.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (25 samples, 0.47%)</title><rect x="182.9" y="1043.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (25 samples, 0.47%)</title><rect x="182.9" y="1027.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (25 samples, 0.47%)</title><rect x="182.9" y="1011.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (25 samples, 0.47%)</title><rect x="182.9" y="995.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (25 samples, 0.47%)</title><rect x="182.9" y="979.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (25 samples, 0.47%)</title><rect x="182.9" y="963.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (25 samples, 0.47%)</title><rect x="182.9" y="947.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.9" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (25 samples, 0.47%)</title><rect x="182.9" y="931.0" width="5.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (540 samples, 10.07%)</title><rect x="188.4" y="1091.0" width="118.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.4" y="1102.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (540 samples, 10.07%)</title><rect x="188.4" y="1075.0" width="118.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.4" y="1086.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (540 samples, 10.07%)</title><rect x="188.4" y="1059.0" width="118.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.4" y="1070.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (313 samples, 5.83%)</title><rect x="188.4" y="1043.0" width="68.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.4" y="1054.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (313 samples, 5.83%)</title><rect x="188.4" y="1027.0" width="68.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.4" y="1038.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (292 samples, 5.44%)</title><rect x="188.4" y="1011.0" width="64.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.4" y="1022.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (87 samples, 1.62%)</title><rect x="188.4" y="995.0" width="19.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (87 samples, 1.62%)</title><rect x="188.4" y="979.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.4" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 0.78%)</title><rect x="188.4" y="963.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.4" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (42 samples, 0.78%)</title><rect x="188.4" y="947.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.4" y="958.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.78%)</title><rect x="188.4" y="931.0" width="9.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="191.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 0.84%)</title><rect x="197.6" y="963.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.6" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.37%)</title><rect x="197.6" y="947.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="200.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.47%)</title><rect x="202.0" y="947.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 0.47%)</title><rect x="202.0" y="931.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (25 samples, 0.47%)</title><rect x="202.0" y="915.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.47%)</title><rect x="202.0" y="899.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.47%)</title><rect x="202.0" y="883.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="205.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.26%)</title><rect x="207.5" y="995.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.26%)</title><rect x="207.5" y="979.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.26%)</title><rect x="207.5" y="963.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.5" y="974.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.22%)</title><rect x="207.5" y="947.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.5" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="210.1" y="947.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.1" y="958.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="210.1" y="931.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="213.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (191 samples, 3.56%)</title><rect x="210.6" y="995.0" width="42.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.6" y="1006.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.17%)</title><rect x="210.6" y="979.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.17%)</title><rect x="210.6" y="963.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.17%)</title><rect x="210.6" y="947.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.6" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.17%)</title><rect x="210.6" y="931.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.6" y="942.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="210.6" y="915.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="213.6" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.41%)</title><rect x="212.6" y="979.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.6" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.41%)</title><rect x="212.6" y="963.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.6" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.41%)</title><rect x="212.6" y="947.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="215.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (160 samples, 2.98%)</title><rect x="217.4" y="979.0" width="35.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.4" y="990.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.39%)</title><rect x="217.4" y="963.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.39%)</title><rect x="217.4" y="947.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.4" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.39%)</title><rect x="217.4" y="931.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="220.4" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (14 samples, 0.26%)</title><rect x="222.0" y="963.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="225.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (51 samples, 0.95%)</title><rect x="225.1" y="963.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.1" y="974.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="225.1" y="947.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="228.1" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.30%)</title><rect x="227.3" y="947.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="230.3" y="958.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.47%)</title><rect x="230.8" y="947.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="233.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (74 samples, 1.38%)</title><rect x="236.3" y="963.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (39 samples, 0.73%)</title><rect x="236.3" y="947.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.3" y="958.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.34%)</title><rect x="236.3" y="931.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="239.3" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.39%)</title><rect x="240.3" y="931.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.3" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.39%)</title><rect x="240.3" y="915.0" width="4.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="243.3" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (35 samples, 0.65%)</title><rect x="244.9" y="947.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.9" y="958.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="244.9" y="931.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="247.9" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.48%)</title><rect x="246.9" y="931.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.9" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.48%)</title><rect x="246.9" y="915.0" width="5.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="249.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.39%)</title><rect x="252.6" y="1011.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.39%)</title><rect x="252.6" y="995.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.39%)</title><rect x="252.6" y="979.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.6" y="990.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="252.6" y="963.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="255.6" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.26%)</title><rect x="254.1" y="963.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.1" y="974.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.26%)</title><rect x="254.1" y="947.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="257.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (94 samples, 1.75%)</title><rect x="257.2" y="1043.0" width="20.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.2" y="1054.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.19%)</title><rect x="257.2" y="1027.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="260.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (34 samples, 0.63%)</title><rect x="259.4" y="1027.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.4" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.63%)</title><rect x="259.4" y="1011.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="262.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.93%)</title><rect x="266.9" y="1027.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.93%)</title><rect x="266.9" y="1011.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.9" y="1022.0"></text>
</g>
<g>
<title>char[] (28 samples, 0.52%)</title><rect x="266.9" y="995.0" width="6.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="269.9" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.15%)</title><rect x="273.1" y="995.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="276.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.26%)</title><rect x="274.8" y="995.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.26%)</title><rect x="274.8" y="979.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.26%)</title><rect x="274.8" y="963.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.8" y="974.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.26%)</title><rect x="274.8" y="947.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="277.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.17%)</title><rect x="277.9" y="1043.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.9" y="1054.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="277.9" y="1027.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="280.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.24%)</title><rect x="279.9" y="1043.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.24%)</title><rect x="279.9" y="1027.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.24%)</title><rect x="279.9" y="1011.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.9" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.19%)</title><rect x="279.9" y="995.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="282.9" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.06%)</title><rect x="282.1" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.1" y="1006.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="282.1" y="979.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="285.1" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 2.07%)</title><rect x="282.7" y="1043.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.7" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 2.07%)</title><rect x="282.7" y="1027.0" width="24.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.7" y="1038.0">o..</text>
</g>
<g>
<title>char[] (51 samples, 0.95%)</title><rect x="282.7" y="1011.0" width="11.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="285.7" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.47%)</title><rect x="293.9" y="1011.0" width="5.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="296.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.65%)</title><rect x="299.4" y="1011.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.65%)</title><rect x="299.4" y="995.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.65%)</title><rect x="299.4" y="979.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.4" y="990.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.65%)</title><rect x="299.4" y="963.0" width="7.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="302.4" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25603] (709 samples, 13.22%)</title><rect x="307.1" y="1123.0" width="156.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="310.1" y="1134.0">[NIO Selector #2 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (709 samples, 13.22%)</title><rect x="307.1" y="1107.0" width="156.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.1" y="1118.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (33 samples, 0.62%)</title><rect x="307.1" y="1091.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (15 samples, 0.28%)</title><rect x="307.1" y="1075.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.1" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (6 samples, 0.11%)</title><rect x="307.1" y="1059.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="310.1" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (9 samples, 0.17%)</title><rect x="308.5" y="1059.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="311.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (18 samples, 0.34%)</title><rect x="310.4" y="1075.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 0.34%)</title><rect x="310.4" y="1059.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (18 samples, 0.34%)</title><rect x="310.4" y="1043.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (18 samples, 0.34%)</title><rect x="310.4" y="1027.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (18 samples, 0.34%)</title><rect x="310.4" y="1011.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (18 samples, 0.34%)</title><rect x="310.4" y="995.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (18 samples, 0.34%)</title><rect x="310.4" y="979.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (18 samples, 0.34%)</title><rect x="310.4" y="963.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (18 samples, 0.34%)</title><rect x="310.4" y="947.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.4" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (18 samples, 0.34%)</title><rect x="310.4" y="931.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="313.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (676 samples, 12.60%)</title><rect x="314.4" y="1091.0" width="148.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.4" y="1102.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (676 samples, 12.60%)</title><rect x="314.4" y="1075.0" width="148.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.4" y="1086.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (675 samples, 12.58%)</title><rect x="314.4" y="1059.0" width="148.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.4" y="1070.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (384 samples, 7.16%)</title><rect x="314.4" y="1043.0" width="84.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.4" y="1054.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (384 samples, 7.16%)</title><rect x="314.4" y="1027.0" width="84.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.4" y="1038.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (352 samples, 6.56%)</title><rect x="314.4" y="1011.0" width="77.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.4" y="1022.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (90 samples, 1.68%)</title><rect x="314.4" y="995.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 1.68%)</title><rect x="314.4" y="979.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.4" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (46 samples, 0.86%)</title><rect x="314.4" y="963.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.4" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (46 samples, 0.86%)</title><rect x="314.4" y="947.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.4" y="958.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.86%)</title><rect x="314.4" y="931.0" width="10.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="317.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 0.82%)</title><rect x="324.5" y="963.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.5" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (16 samples, 0.30%)</title><rect x="324.5" y="947.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="327.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.52%)</title><rect x="328.0" y="947.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (28 samples, 0.52%)</title><rect x="328.0" y="931.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (28 samples, 0.52%)</title><rect x="328.0" y="915.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.52%)</title><rect x="328.0" y="899.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.52%)</title><rect x="328.0" y="883.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="331.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.52%)</title><rect x="334.2" y="995.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.52%)</title><rect x="334.2" y="979.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.52%)</title><rect x="334.2" y="963.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.32%)</title><rect x="334.2" y="947.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="337.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.21%)</title><rect x="337.9" y="947.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.9" y="958.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.21%)</title><rect x="337.9" y="931.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="340.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (234 samples, 4.36%)</title><rect x="340.4" y="995.0" width="51.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.4" y="1006.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.28%)</title><rect x="340.4" y="979.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.28%)</title><rect x="340.4" y="963.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.28%)</title><rect x="340.4" y="947.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.4" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.28%)</title><rect x="340.4" y="931.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.4" y="942.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.28%)</title><rect x="340.4" y="915.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="343.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.60%)</title><rect x="343.7" y="979.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.60%)</title><rect x="343.7" y="963.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.7" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.60%)</title><rect x="343.7" y="947.0" width="7.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="346.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (187 samples, 3.49%)</title><rect x="350.7" y="979.0" width="41.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.7" y="990.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.52%)</title><rect x="350.7" y="963.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.7" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.52%)</title><rect x="350.7" y="947.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.7" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.52%)</title><rect x="350.7" y="931.0" width="6.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="353.7" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.35%)</title><rect x="356.9" y="963.0" width="4.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="359.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (54 samples, 1.01%)</title><rect x="361.0" y="963.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.0" y="974.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="361.0" y="947.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="364.0" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.32%)</title><rect x="364.8" y="947.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="367.8" y="958.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.37%)</title><rect x="368.5" y="947.0" width="4.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="371.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (86 samples, 1.60%)</title><rect x="372.9" y="963.0" width="18.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (51 samples, 0.95%)</title><rect x="372.9" y="947.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.9" y="958.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.43%)</title><rect x="372.9" y="931.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="375.9" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.52%)</title><rect x="378.0" y="931.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.0" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.52%)</title><rect x="378.0" y="915.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="381.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (35 samples, 0.65%)</title><rect x="384.1" y="947.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.1" y="958.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="384.1" y="931.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="387.1" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.47%)</title><rect x="386.3" y="931.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.3" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.47%)</title><rect x="386.3" y="915.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="389.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (32 samples, 0.60%)</title><rect x="391.8" y="1011.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.60%)</title><rect x="391.8" y="995.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.60%)</title><rect x="391.8" y="979.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.8" y="990.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.24%)</title><rect x="391.8" y="963.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="394.8" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.35%)</title><rect x="394.7" y="963.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.7" y="974.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.35%)</title><rect x="394.7" y="947.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="397.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (126 samples, 2.35%)</title><rect x="398.9" y="1043.0" width="27.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.9" y="1054.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.48%)</title><rect x="398.9" y="1027.0" width="5.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="401.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (40 samples, 0.75%)</title><rect x="404.6" y="1027.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.6" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 0.75%)</title><rect x="404.6" y="1011.0" width="8.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="407.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.12%)</title><rect x="413.4" y="1027.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.12%)</title><rect x="413.4" y="1011.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.4" y="1022.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.48%)</title><rect x="413.4" y="995.0" width="5.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="416.4" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="419.1" y="995.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="422.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.37%)</title><rect x="422.2" y="995.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.37%)</title><rect x="422.2" y="979.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.37%)</title><rect x="422.2" y="963.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.2" y="974.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.37%)</title><rect x="422.2" y="947.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="425.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (15 samples, 0.28%)</title><rect x="426.6" y="1043.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.6" y="1054.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.28%)</title><rect x="426.6" y="1027.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="429.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.39%)</title><rect x="429.9" y="1043.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.39%)</title><rect x="429.9" y="1027.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.39%)</title><rect x="429.9" y="1011.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.9" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.22%)</title><rect x="429.9" y="995.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="432.9" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.17%)</title><rect x="432.5" y="995.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.5" y="1006.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="432.5" y="979.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="435.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (129 samples, 2.40%)</title><rect x="434.5" y="1043.0" width="28.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.5" y="1054.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (129 samples, 2.40%)</title><rect x="434.5" y="1027.0" width="28.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.5" y="1038.0">on..</text>
</g>
<g>
<title>char[] (51 samples, 0.95%)</title><rect x="434.5" y="1011.0" width="11.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="437.5" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.50%)</title><rect x="445.7" y="1011.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="448.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (51 samples, 0.95%)</title><rect x="451.6" y="1011.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (51 samples, 0.95%)</title><rect x="451.6" y="995.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (51 samples, 0.95%)</title><rect x="451.6" y="979.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.6" y="990.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.95%)</title><rect x="451.6" y="963.0" width="11.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="454.6" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=38915] (614 samples, 11.44%)</title><rect x="463.1" y="1123.0" width="135.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="466.1" y="1134.0">[NIO Selector #3 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (614 samples, 11.44%)</title><rect x="463.1" y="1107.0" width="135.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.1" y="1118.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (32 samples, 0.60%)</title><rect x="463.1" y="1091.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (8 samples, 0.15%)</title><rect x="463.1" y="1075.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.1" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (4 samples, 0.07%)</title><rect x="463.1" y="1059.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="466.1" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (4 samples, 0.07%)</title><rect x="464.0" y="1059.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="467.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (24 samples, 0.45%)</title><rect x="464.8" y="1075.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (24 samples, 0.45%)</title><rect x="464.8" y="1059.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (24 samples, 0.45%)</title><rect x="464.8" y="1043.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (24 samples, 0.45%)</title><rect x="464.8" y="1027.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (24 samples, 0.45%)</title><rect x="464.8" y="1011.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (24 samples, 0.45%)</title><rect x="464.8" y="995.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (24 samples, 0.45%)</title><rect x="464.8" y="979.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (24 samples, 0.45%)</title><rect x="464.8" y="963.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (24 samples, 0.45%)</title><rect x="464.8" y="947.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.8" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (24 samples, 0.45%)</title><rect x="464.8" y="931.0" width="5.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="467.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (582 samples, 10.85%)</title><rect x="470.1" y="1091.0" width="128.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.1" y="1102.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (582 samples, 10.85%)</title><rect x="470.1" y="1075.0" width="128.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.1" y="1086.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (582 samples, 10.85%)</title><rect x="470.1" y="1059.0" width="128.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.1" y="1070.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (303 samples, 5.65%)</title><rect x="470.1" y="1043.0" width="66.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.1" y="1054.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (303 samples, 5.65%)</title><rect x="470.1" y="1027.0" width="66.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.1" y="1038.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (280 samples, 5.22%)</title><rect x="470.1" y="1011.0" width="61.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.1" y="1022.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (80 samples, 1.49%)</title><rect x="470.1" y="995.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (80 samples, 1.49%)</title><rect x="470.1" y="979.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.1" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (40 samples, 0.75%)</title><rect x="470.1" y="963.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (40 samples, 0.75%)</title><rect x="470.1" y="947.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.1" y="958.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.75%)</title><rect x="470.1" y="931.0" width="8.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="473.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (40 samples, 0.75%)</title><rect x="478.9" y="963.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.9" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.32%)</title><rect x="478.9" y="947.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="481.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.43%)</title><rect x="482.7" y="947.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (23 samples, 0.43%)</title><rect x="482.7" y="931.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (23 samples, 0.43%)</title><rect x="482.7" y="915.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.43%)</title><rect x="482.7" y="899.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.7" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.43%)</title><rect x="482.7" y="883.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="485.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.34%)</title><rect x="487.7" y="995.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.34%)</title><rect x="487.7" y="979.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.34%)</title><rect x="487.7" y="963.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.7" y="974.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="487.7" y="947.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="490.7" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="490.8" y="947.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.8" y="958.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="490.8" y="931.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="493.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (182 samples, 3.39%)</title><rect x="491.7" y="995.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.7" y="1006.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.13%)</title><rect x="491.7" y="979.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.13%)</title><rect x="491.7" y="963.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.13%)</title><rect x="491.7" y="947.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.7" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.13%)</title><rect x="491.7" y="931.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.7" y="942.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="491.7" y="915.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.48%)</title><rect x="493.2" y="979.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.2" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.48%)</title><rect x="493.2" y="963.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.2" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.48%)</title><rect x="493.2" y="947.0" width="5.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="496.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (149 samples, 2.78%)</title><rect x="498.9" y="979.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.9" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.39%)</title><rect x="498.9" y="963.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.39%)</title><rect x="498.9" y="947.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.9" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.39%)</title><rect x="498.9" y="931.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="501.9" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.21%)</title><rect x="503.6" y="963.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="506.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 0.89%)</title><rect x="506.0" y="963.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.0" y="974.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.34%)</title><rect x="506.0" y="947.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="509.0" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.26%)</title><rect x="509.9" y="947.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="512.9" y="958.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.30%)</title><rect x="513.0" y="947.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="516.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (69 samples, 1.29%)</title><rect x="516.5" y="963.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (39 samples, 0.73%)</title><rect x="516.5" y="947.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.5" y="958.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.26%)</title><rect x="516.5" y="931.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="519.5" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.47%)</title><rect x="519.6" y="931.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.6" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.47%)</title><rect x="519.6" y="915.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="522.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (30 samples, 0.56%)</title><rect x="525.1" y="947.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.1" y="958.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="525.1" y="931.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="528.1" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.43%)</title><rect x="526.6" y="931.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.6" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.43%)</title><rect x="526.6" y="915.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="529.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.43%)</title><rect x="531.7" y="1011.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.43%)</title><rect x="531.7" y="995.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.43%)</title><rect x="531.7" y="979.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.7" y="990.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.19%)</title><rect x="531.7" y="963.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="534.7" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.24%)</title><rect x="533.9" y="963.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.9" y="974.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="533.9" y="947.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="536.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (95 samples, 1.77%)</title><rect x="536.8" y="1043.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.8" y="1054.0"></text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.26%)</title><rect x="536.8" y="1027.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="539.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 0.50%)</title><rect x="539.8" y="1027.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.8" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.50%)</title><rect x="539.8" y="1011.0" width="6.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="542.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 1.01%)</title><rect x="545.8" y="1027.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 1.01%)</title><rect x="545.8" y="1011.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.8" y="1022.0"></text>
</g>
<g>
<title>char[] (30 samples, 0.56%)</title><rect x="545.8" y="995.0" width="6.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="548.8" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="552.4" y="995.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="555.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.32%)</title><rect x="553.9" y="995.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.32%)</title><rect x="553.9" y="979.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.32%)</title><rect x="553.9" y="963.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.9" y="974.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="553.9" y="947.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="556.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 0.35%)</title><rect x="557.7" y="1043.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.7" y="1054.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.35%)</title><rect x="557.7" y="1027.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="560.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.43%)</title><rect x="561.8" y="1043.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.43%)</title><rect x="561.8" y="1027.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.43%)</title><rect x="561.8" y="1011.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="561.8" y="995.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="564.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.17%)</title><rect x="564.9" y="995.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.9" y="1006.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="564.9" y="979.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="567.9" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (142 samples, 2.65%)</title><rect x="566.9" y="1043.0" width="31.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.9" y="1054.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (142 samples, 2.65%)</title><rect x="566.9" y="1027.0" width="31.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.9" y="1038.0">on..</text>
</g>
<g>
<title>char[] (68 samples, 1.27%)</title><rect x="566.9" y="1011.0" width="15.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="569.9" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.54%)</title><rect x="581.9" y="1011.0" width="6.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="584.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.84%)</title><rect x="588.2" y="1011.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.84%)</title><rect x="588.2" y="995.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (45 samples, 0.84%)</title><rect x="588.2" y="979.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.2" y="990.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.84%)</title><rect x="588.2" y="963.0" width="9.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="591.2" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=26371] (610 samples, 11.37%)</title><rect x="598.1" y="1123.0" width="134.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="601.1" y="1134.0">[NIO Selector #4 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (610 samples, 11.37%)</title><rect x="598.1" y="1107.0" width="134.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.1" y="1118.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (29 samples, 0.54%)</title><rect x="598.1" y="1091.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (11 samples, 0.21%)</title><rect x="598.1" y="1075.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.1" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (6 samples, 0.11%)</title><rect x="598.1" y="1059.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="601.1" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (5 samples, 0.09%)</title><rect x="599.5" y="1059.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (18 samples, 0.34%)</title><rect x="600.5" y="1075.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 0.34%)</title><rect x="600.5" y="1059.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (18 samples, 0.34%)</title><rect x="600.5" y="1043.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (18 samples, 0.34%)</title><rect x="600.5" y="1027.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (18 samples, 0.34%)</title><rect x="600.5" y="1011.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (18 samples, 0.34%)</title><rect x="600.5" y="995.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (18 samples, 0.34%)</title><rect x="600.5" y="979.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (18 samples, 0.34%)</title><rect x="600.5" y="963.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (18 samples, 0.34%)</title><rect x="600.5" y="947.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.5" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (18 samples, 0.34%)</title><rect x="600.5" y="931.0" width="4.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="603.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (581 samples, 10.83%)</title><rect x="604.5" y="1091.0" width="127.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.5" y="1102.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (581 samples, 10.83%)</title><rect x="604.5" y="1075.0" width="127.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.5" y="1086.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (581 samples, 10.83%)</title><rect x="604.5" y="1059.0" width="127.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.5" y="1070.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (320 samples, 5.96%)</title><rect x="604.5" y="1043.0" width="70.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.5" y="1054.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (320 samples, 5.96%)</title><rect x="604.5" y="1027.0" width="70.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.5" y="1038.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (299 samples, 5.57%)</title><rect x="604.5" y="1011.0" width="65.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.5" y="1022.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (87 samples, 1.62%)</title><rect x="604.5" y="995.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (87 samples, 1.62%)</title><rect x="604.5" y="979.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.71%)</title><rect x="604.5" y="963.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (38 samples, 0.71%)</title><rect x="604.5" y="947.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.5" y="958.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.71%)</title><rect x="604.5" y="931.0" width="8.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="607.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (49 samples, 0.91%)</title><rect x="612.9" y="963.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.9" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (19 samples, 0.35%)</title><rect x="612.9" y="947.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="615.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.56%)</title><rect x="617.0" y="947.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (30 samples, 0.56%)</title><rect x="617.0" y="931.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (30 samples, 0.56%)</title><rect x="617.0" y="915.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.56%)</title><rect x="617.0" y="899.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.56%)</title><rect x="617.0" y="883.0" width="6.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="620.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.43%)</title><rect x="623.6" y="995.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.43%)</title><rect x="623.6" y="979.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.43%)</title><rect x="623.6" y="963.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.6" y="974.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="623.6" y="947.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.6" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.17%)</title><rect x="626.7" y="947.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.7" y="958.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="626.7" y="931.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="629.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (189 samples, 3.52%)</title><rect x="628.7" y="995.0" width="41.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.7" y="1006.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.32%)</title><rect x="628.7" y="979.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.32%)</title><rect x="628.7" y="963.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.32%)</title><rect x="628.7" y="947.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.7" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.32%)</title><rect x="628.7" y="931.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.7" y="942.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="628.7" y="915.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="631.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.41%)</title><rect x="632.4" y="979.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.41%)</title><rect x="632.4" y="963.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.4" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.41%)</title><rect x="632.4" y="947.0" width="4.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="635.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (150 samples, 2.80%)</title><rect x="637.3" y="979.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.3" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.37%)</title><rect x="637.3" y="963.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.3" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.37%)</title><rect x="637.3" y="947.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.3" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.37%)</title><rect x="637.3" y="931.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="640.3" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.32%)</title><rect x="641.7" y="963.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="644.7" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (45 samples, 0.84%)</title><rect x="645.4" y="963.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.4" y="974.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.41%)</title><rect x="645.4" y="947.0" width="4.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="648.4" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.19%)</title><rect x="650.3" y="947.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="653.3" y="958.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.24%)</title><rect x="652.5" y="947.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="655.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (68 samples, 1.27%)</title><rect x="655.3" y="963.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="658.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (38 samples, 0.71%)</title><rect x="655.3" y="947.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.3" y="958.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="655.3" y="931.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="658.3" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.39%)</title><rect x="659.1" y="931.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.1" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.39%)</title><rect x="659.1" y="915.0" width="4.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="662.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (30 samples, 0.56%)</title><rect x="663.7" y="947.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.7" y="958.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="663.7" y="931.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="666.7" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.39%)</title><rect x="665.7" y="931.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.7" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.39%)</title><rect x="665.7" y="915.0" width="4.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="668.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.39%)</title><rect x="670.3" y="1011.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.39%)</title><rect x="670.3" y="995.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.39%)</title><rect x="670.3" y="979.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.3" y="990.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="670.3" y="963.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="673.3" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.30%)</title><rect x="671.4" y="963.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.4" y="974.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.30%)</title><rect x="671.4" y="947.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="674.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (111 samples, 2.07%)</title><rect x="674.9" y="1043.0" width="24.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.9" y="1054.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.35%)</title><rect x="674.9" y="1027.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="677.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (33 samples, 0.62%)</title><rect x="679.1" y="1027.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.1" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.62%)</title><rect x="679.1" y="1011.0" width="7.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="682.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.10%)</title><rect x="686.3" y="1027.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.10%)</title><rect x="686.3" y="1011.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.3" y="1022.0"></text>
</g>
<g>
<title>char[] (28 samples, 0.52%)</title><rect x="686.3" y="995.0" width="6.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="689.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.21%)</title><rect x="692.5" y="995.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="695.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.37%)</title><rect x="694.9" y="995.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.37%)</title><rect x="694.9" y="979.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.37%)</title><rect x="694.9" y="963.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.9" y="974.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.37%)</title><rect x="694.9" y="947.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="697.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.13%)</title><rect x="699.3" y="1043.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.3" y="1054.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="699.3" y="1027.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="702.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.26%)</title><rect x="700.8" y="1043.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.26%)</title><rect x="700.8" y="1027.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.26%)</title><rect x="700.8" y="1011.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.8" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.17%)</title><rect x="700.8" y="995.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="703.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="702.8" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.8" y="1006.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="702.8" y="979.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="705.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (129 samples, 2.40%)</title><rect x="703.9" y="1043.0" width="28.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.9" y="1054.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (129 samples, 2.40%)</title><rect x="703.9" y="1027.0" width="28.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.9" y="1038.0">on..</text>
</g>
<g>
<title>char[] (56 samples, 1.04%)</title><rect x="703.9" y="1011.0" width="12.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="706.9" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.62%)</title><rect x="716.2" y="1011.0" width="7.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="719.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.75%)</title><rect x="723.5" y="1011.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.75%)</title><rect x="723.5" y="995.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (40 samples, 0.75%)</title><rect x="723.5" y="979.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.5" y="990.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.75%)</title><rect x="723.5" y="963.0" width="8.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="726.5" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=38659] (574 samples, 10.70%)</title><rect x="732.3" y="1123.0" width="126.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="735.3" y="1134.0">[NIO Selector #5..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (574 samples, 10.70%)</title><rect x="732.3" y="1107.0" width="126.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.3" y="1118.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (40 samples, 0.75%)</title><rect x="732.3" y="1091.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (23 samples, 0.43%)</title><rect x="732.3" y="1075.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.3" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (11 samples, 0.21%)</title><rect x="732.3" y="1059.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="735.3" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (12 samples, 0.22%)</title><rect x="734.7" y="1059.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="737.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (17 samples, 0.32%)</title><rect x="737.4" y="1075.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (17 samples, 0.32%)</title><rect x="737.4" y="1059.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (17 samples, 0.32%)</title><rect x="737.4" y="1043.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (17 samples, 0.32%)</title><rect x="737.4" y="1027.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (17 samples, 0.32%)</title><rect x="737.4" y="1011.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.32%)</title><rect x="737.4" y="995.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.32%)</title><rect x="737.4" y="979.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (17 samples, 0.32%)</title><rect x="737.4" y="963.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (17 samples, 0.32%)</title><rect x="737.4" y="947.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.4" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (17 samples, 0.32%)</title><rect x="737.4" y="931.0" width="3.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="740.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (534 samples, 9.95%)</title><rect x="741.1" y="1091.0" width="117.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.1" y="1102.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (534 samples, 9.95%)</title><rect x="741.1" y="1075.0" width="117.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.1" y="1086.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (534 samples, 9.95%)</title><rect x="741.1" y="1059.0" width="117.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.1" y="1070.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (299 samples, 5.57%)</title><rect x="741.1" y="1043.0" width="65.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.1" y="1054.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (299 samples, 5.57%)</title><rect x="741.1" y="1027.0" width="65.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.1" y="1038.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (271 samples, 5.05%)</title><rect x="741.1" y="1011.0" width="59.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.1" y="1022.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (78 samples, 1.45%)</title><rect x="741.1" y="995.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 1.45%)</title><rect x="741.1" y="979.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.1" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.56%)</title><rect x="741.1" y="963.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.56%)</title><rect x="741.1" y="947.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.1" y="958.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.56%)</title><rect x="741.1" y="931.0" width="6.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.89%)</title><rect x="747.7" y="963.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.7" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (24 samples, 0.45%)</title><rect x="747.7" y="947.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="750.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.45%)</title><rect x="753.0" y="947.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (24 samples, 0.45%)</title><rect x="753.0" y="931.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (24 samples, 0.45%)</title><rect x="753.0" y="915.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.45%)</title><rect x="753.0" y="899.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.0" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.45%)</title><rect x="753.0" y="883.0" width="5.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="756.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.52%)</title><rect x="758.2" y="995.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.52%)</title><rect x="758.2" y="979.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.52%)</title><rect x="758.2" y="963.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="761.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.30%)</title><rect x="758.2" y="947.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="761.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.22%)</title><rect x="761.8" y="947.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.8" y="958.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="761.8" y="931.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="764.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (165 samples, 3.08%)</title><rect x="764.4" y="995.0" width="36.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.4" y="1006.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.17%)</title><rect x="764.4" y="979.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.17%)</title><rect x="764.4" y="963.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.17%)</title><rect x="764.4" y="947.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.4" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.17%)</title><rect x="764.4" y="931.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.4" y="942.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="764.4" y="915.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="767.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.39%)</title><rect x="766.4" y="979.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.39%)</title><rect x="766.4" y="963.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.4" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.39%)</title><rect x="766.4" y="947.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="769.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (135 samples, 2.52%)</title><rect x="771.0" y="979.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.0" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.28%)</title><rect x="771.0" y="963.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.28%)</title><rect x="771.0" y="947.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.0" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.28%)</title><rect x="771.0" y="931.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="774.0" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.17%)</title><rect x="774.3" y="963.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="777.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (43 samples, 0.80%)</title><rect x="776.3" y="963.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.3" y="974.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.35%)</title><rect x="776.3" y="947.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="779.3" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.24%)</title><rect x="780.5" y="947.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="783.5" y="958.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.21%)</title><rect x="783.3" y="947.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="786.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (68 samples, 1.27%)</title><rect x="785.7" y="963.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (40 samples, 0.75%)</title><rect x="785.7" y="947.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.7" y="958.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="785.7" y="931.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="788.7" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.52%)</title><rect x="788.4" y="931.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.52%)</title><rect x="788.4" y="915.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="791.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (28 samples, 0.52%)</title><rect x="794.5" y="947.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.5" y="958.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="794.5" y="931.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="797.5" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (19 samples, 0.35%)</title><rect x="796.5" y="931.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.5" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.35%)</title><rect x="796.5" y="915.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="799.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (28 samples, 0.52%)</title><rect x="800.7" y="1011.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.52%)</title><rect x="800.7" y="995.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.52%)</title><rect x="800.7" y="979.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.7" y="990.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.19%)</title><rect x="800.7" y="963.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="803.7" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.34%)</title><rect x="802.9" y="963.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.9" y="974.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.34%)</title><rect x="802.9" y="947.0" width="4.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="805.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (92 samples, 1.71%)</title><rect x="806.9" y="1043.0" width="20.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.9" y="1054.0"></text>
</g>
<g>
<title>one.nio.http.Request (13 samples, 0.24%)</title><rect x="806.9" y="1027.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="809.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (31 samples, 0.58%)</title><rect x="809.7" y="1027.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.7" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (31 samples, 0.58%)</title><rect x="809.7" y="1011.0" width="6.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="812.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (48 samples, 0.89%)</title><rect x="816.5" y="1027.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (48 samples, 0.89%)</title><rect x="816.5" y="1011.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.5" y="1022.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.48%)</title><rect x="816.5" y="995.0" width="5.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="819.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="822.3" y="995.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="825.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.28%)</title><rect x="823.8" y="995.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.28%)</title><rect x="823.8" y="979.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.28%)</title><rect x="823.8" y="963.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.8" y="974.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.28%)</title><rect x="823.8" y="947.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="826.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (13 samples, 0.24%)</title><rect x="827.1" y="1043.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.1" y="1054.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="827.1" y="1027.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="830.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.39%)</title><rect x="830.0" y="1043.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="833.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.39%)</title><rect x="830.0" y="1027.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.39%)</title><rect x="830.0" y="1011.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.0" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.30%)</title><rect x="830.0" y="995.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="833.0" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="833.5" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.5" y="1006.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="833.5" y="979.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="836.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 2.03%)</title><rect x="834.6" y="1043.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.6" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 2.03%)</title><rect x="834.6" y="1027.0" width="23.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.6" y="1038.0">o..</text>
</g>
<g>
<title>char[] (43 samples, 0.80%)</title><rect x="834.6" y="1011.0" width="9.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="837.6" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.50%)</title><rect x="844.0" y="1011.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="847.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.73%)</title><rect x="850.0" y="1011.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.73%)</title><rect x="850.0" y="995.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.73%)</title><rect x="850.0" y="979.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.0" y="990.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.73%)</title><rect x="850.0" y="963.0" width="8.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="853.0" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=27395] (731 samples, 13.63%)</title><rect x="858.5" y="1123.0" width="160.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="861.5" y="1134.0">[NIO Selector #6 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (731 samples, 13.63%)</title><rect x="858.5" y="1107.0" width="160.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.5" y="1118.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (53 samples, 0.99%)</title><rect x="858.5" y="1091.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (20 samples, 0.37%)</title><rect x="858.5" y="1075.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.5" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (11 samples, 0.21%)</title><rect x="858.5" y="1059.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="861.5" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (9 samples, 0.17%)</title><rect x="861.0" y="1059.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="864.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (33 samples, 0.62%)</title><rect x="862.9" y="1075.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (33 samples, 0.62%)</title><rect x="862.9" y="1059.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (33 samples, 0.62%)</title><rect x="862.9" y="1043.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (33 samples, 0.62%)</title><rect x="862.9" y="1027.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (33 samples, 0.62%)</title><rect x="862.9" y="1011.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (33 samples, 0.62%)</title><rect x="862.9" y="995.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (33 samples, 0.62%)</title><rect x="862.9" y="979.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (33 samples, 0.62%)</title><rect x="862.9" y="963.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (33 samples, 0.62%)</title><rect x="862.9" y="947.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.9" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (33 samples, 0.62%)</title><rect x="862.9" y="931.0" width="7.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="865.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (678 samples, 12.64%)</title><rect x="870.2" y="1091.0" width="149.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.2" y="1102.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (678 samples, 12.64%)</title><rect x="870.2" y="1075.0" width="149.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.2" y="1086.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (678 samples, 12.64%)</title><rect x="870.2" y="1059.0" width="149.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.2" y="1070.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (388 samples, 7.23%)</title><rect x="870.2" y="1043.0" width="85.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.2" y="1054.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (388 samples, 7.23%)</title><rect x="870.2" y="1027.0" width="85.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.2" y="1038.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (357 samples, 6.65%)</title><rect x="870.2" y="1011.0" width="78.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.2" y="1022.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (97 samples, 1.81%)</title><rect x="870.2" y="995.0" width="21.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.2" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (97 samples, 1.81%)</title><rect x="870.2" y="979.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.2" y="990.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (46 samples, 0.86%)</title><rect x="870.2" y="963.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (46 samples, 0.86%)</title><rect x="870.2" y="947.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.2" y="958.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.86%)</title><rect x="870.2" y="931.0" width="10.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="873.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (51 samples, 0.95%)</title><rect x="880.3" y="963.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (24 samples, 0.45%)</title><rect x="880.3" y="947.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="883.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.50%)</title><rect x="885.6" y="947.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (27 samples, 0.50%)</title><rect x="885.6" y="931.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (27 samples, 0.50%)</title><rect x="885.6" y="915.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.6" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.50%)</title><rect x="885.6" y="899.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.6" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.50%)</title><rect x="885.6" y="883.0" width="5.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="888.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.48%)</title><rect x="891.5" y="995.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.48%)</title><rect x="891.5" y="979.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.48%)</title><rect x="891.5" y="963.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.5" y="974.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.24%)</title><rect x="891.5" y="947.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="894.5" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.24%)</title><rect x="894.4" y="947.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.4" y="958.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="894.4" y="931.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="897.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (234 samples, 4.36%)</title><rect x="897.3" y="995.0" width="51.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.3" y="1006.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.21%)</title><rect x="897.3" y="979.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.21%)</title><rect x="897.3" y="963.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.21%)</title><rect x="897.3" y="947.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.21%)</title><rect x="897.3" y="931.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.3" y="942.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.21%)</title><rect x="897.3" y="915.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="900.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.58%)</title><rect x="899.7" y="979.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.58%)</title><rect x="899.7" y="963.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.7" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.58%)</title><rect x="899.7" y="947.0" width="6.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="902.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (192 samples, 3.58%)</title><rect x="906.5" y="979.0" width="42.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.5" y="990.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.48%)</title><rect x="906.5" y="963.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.48%)</title><rect x="906.5" y="947.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.5" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.48%)</title><rect x="906.5" y="931.0" width="5.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="909.5" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.35%)</title><rect x="912.2" y="963.0" width="4.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="915.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (54 samples, 1.01%)</title><rect x="916.4" y="963.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.4" y="974.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.48%)</title><rect x="916.4" y="947.0" width="5.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="919.4" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.26%)</title><rect x="922.1" y="947.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="925.1" y="958.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.26%)</title><rect x="925.2" y="947.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="928.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (93 samples, 1.73%)</title><rect x="928.3" y="963.0" width="20.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (48 samples, 0.89%)</title><rect x="928.3" y="947.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.3" y="958.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.35%)</title><rect x="928.3" y="931.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="931.3" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (29 samples, 0.54%)</title><rect x="932.4" y="931.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.4" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.54%)</title><rect x="932.4" y="915.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="935.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (45 samples, 0.84%)</title><rect x="938.8" y="947.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="941.8" y="958.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="938.8" y="931.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="941.8" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.52%)</title><rect x="942.6" y="931.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="945.6" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.52%)</title><rect x="942.6" y="915.0" width="6.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="945.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.58%)</title><rect x="948.7" y="1011.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.58%)</title><rect x="948.7" y="995.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.58%)</title><rect x="948.7" y="979.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.7" y="990.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.17%)</title><rect x="948.7" y="963.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="951.7" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.41%)</title><rect x="950.7" y="963.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.7" y="974.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.41%)</title><rect x="950.7" y="947.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="953.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (117 samples, 2.18%)</title><rect x="955.5" y="1043.0" width="25.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.5" y="1054.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (16 samples, 0.30%)</title><rect x="955.5" y="1027.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="958.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (41 samples, 0.76%)</title><rect x="959.1" y="1027.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.1" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.76%)</title><rect x="959.1" y="1011.0" width="9.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="962.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.12%)</title><rect x="968.1" y="1027.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 1.12%)</title><rect x="968.1" y="1011.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.1" y="1022.0"></text>
</g>
<g>
<title>char[] (33 samples, 0.62%)</title><rect x="968.1" y="995.0" width="7.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="971.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.19%)</title><rect x="975.3" y="995.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="978.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.32%)</title><rect x="977.5" y="995.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.32%)</title><rect x="977.5" y="979.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="980.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.32%)</title><rect x="977.5" y="963.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.5" y="974.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.32%)</title><rect x="977.5" y="947.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="980.5" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.17%)</title><rect x="981.3" y="1043.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.3" y="1054.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="981.3" y="1027.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="984.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (32 samples, 0.60%)</title><rect x="983.3" y="1043.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.60%)</title><rect x="983.3" y="1027.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.60%)</title><rect x="983.3" y="1011.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.3" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.35%)</title><rect x="983.3" y="995.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="986.3" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.24%)</title><rect x="987.4" y="995.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.4" y="1006.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="987.4" y="979.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="990.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (132 samples, 2.46%)</title><rect x="990.3" y="1043.0" width="29.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.3" y="1054.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (132 samples, 2.46%)</title><rect x="990.3" y="1027.0" width="29.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.3" y="1038.0">on..</text>
</g>
<g>
<title>char[] (52 samples, 0.97%)</title><rect x="990.3" y="1011.0" width="11.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="993.3" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.63%)</title><rect x="1001.7" y="1011.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1004.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.86%)</title><rect x="1009.2" y="1011.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.86%)</title><rect x="1009.2" y="995.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (46 samples, 0.86%)</title><rect x="1009.2" y="979.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.2" y="990.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.86%)</title><rect x="1009.2" y="963.0" width="10.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1012.2" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=27907] (405 samples, 7.55%)</title><rect x="1019.3" y="1123.0" width="89.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1022.3" y="1134.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (405 samples, 7.55%)</title><rect x="1019.3" y="1107.0" width="89.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.3" y="1118.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (27 samples, 0.50%)</title><rect x="1019.3" y="1091.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (15 samples, 0.28%)</title><rect x="1019.3" y="1075.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.3" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (13 samples, 0.24%)</title><rect x="1019.3" y="1059.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1022.3" y="1070.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (2 samples, 0.04%)</title><rect x="1022.2" y="1059.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1025.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (12 samples, 0.22%)</title><rect x="1022.6" y="1075.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1025.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.22%)</title><rect x="1022.6" y="1059.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (12 samples, 0.22%)</title><rect x="1022.6" y="1043.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1025.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (12 samples, 0.22%)</title><rect x="1022.6" y="1027.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (12 samples, 0.22%)</title><rect x="1022.6" y="1011.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.6" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (12 samples, 0.22%)</title><rect x="1022.6" y="995.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.6" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 0.22%)</title><rect x="1022.6" y="979.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1025.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.22%)</title><rect x="1022.6" y="963.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1025.6" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (12 samples, 0.22%)</title><rect x="1022.6" y="947.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.6" y="958.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (12 samples, 0.22%)</title><rect x="1022.6" y="931.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1025.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (378 samples, 7.05%)</title><rect x="1025.3" y="1091.0" width="83.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.3" y="1102.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (378 samples, 7.05%)</title><rect x="1025.3" y="1075.0" width="83.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.3" y="1086.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (378 samples, 7.05%)</title><rect x="1025.3" y="1059.0" width="83.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.3" y="1070.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (234 samples, 4.36%)</title><rect x="1025.3" y="1043.0" width="51.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.3" y="1054.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (234 samples, 4.36%)</title><rect x="1025.3" y="1027.0" width="51.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.3" y="1038.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (217 samples, 4.04%)</title><rect x="1025.3" y="1011.0" width="47.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.3" y="1022.0">Requ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (64 samples, 1.19%)</title><rect x="1025.3" y="995.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 1.19%)</title><rect x="1025.3" y="979.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.62%)</title><rect x="1025.3" y="963.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1028.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (33 samples, 0.62%)</title><rect x="1025.3" y="947.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.3" y="958.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.62%)</title><rect x="1025.3" y="931.0" width="7.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1028.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 0.58%)</title><rect x="1032.5" y="963.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.5" y="974.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.22%)</title><rect x="1032.5" y="947.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1035.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.35%)</title><rect x="1035.2" y="947.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (19 samples, 0.35%)</title><rect x="1035.2" y="931.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (19 samples, 0.35%)</title><rect x="1035.2" y="915.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.35%)</title><rect x="1035.2" y="899.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.2" y="910.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.35%)</title><rect x="1035.2" y="883.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1038.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.24%)</title><rect x="1039.3" y="995.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.24%)</title><rect x="1039.3" y="979.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.24%)</title><rect x="1039.3" y="963.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.3" y="974.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="1039.3" y="947.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1042.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="1040.9" y="947.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.9" y="958.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="1040.9" y="931.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1043.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.entity (140 samples, 2.61%)</title><rect x="1042.2" y="995.0" width="30.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.2" y="1006.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.11%)</title><rect x="1042.2" y="979.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.11%)</title><rect x="1042.2" y="963.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.11%)</title><rect x="1042.2" y="947.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.11%)</title><rect x="1042.2" y="931.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.2" y="942.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="1042.2" y="915.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1045.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.45%)</title><rect x="1043.5" y="979.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.5" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.45%)</title><rect x="1043.5" y="963.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.5" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.45%)</title><rect x="1043.5" y="947.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1046.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/ServiceImpl.put (110 samples, 2.05%)</title><rect x="1048.8" y="979.0" width="24.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.8" y="990.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.19%)</title><rect x="1048.8" y="963.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.19%)</title><rect x="1048.8" y="947.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.8" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.19%)</title><rect x="1048.8" y="931.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1051.8" y="942.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.07%)</title><rect x="1051.0" y="963.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1054.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (37 samples, 0.69%)</title><rect x="1051.9" y="963.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.9" y="974.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.34%)</title><rect x="1051.9" y="947.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1054.9" y="958.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.22%)</title><rect x="1055.8" y="947.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1058.8" y="958.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="1058.5" y="947.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1061.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (59 samples, 1.10%)</title><rect x="1060.0" y="963.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (32 samples, 0.60%)</title><rect x="1060.0" y="947.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.0" y="958.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="1060.0" y="931.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1063.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.48%)</title><rect x="1061.3" y="931.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.3" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.48%)</title><rect x="1061.3" y="915.0" width="5.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1064.3" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (27 samples, 0.50%)</title><rect x="1067.1" y="947.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.1" y="958.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="1067.1" y="931.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1070.1" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.28%)</title><rect x="1069.7" y="931.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.7" y="942.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.28%)</title><rect x="1069.7" y="915.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1072.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (17 samples, 0.32%)</title><rect x="1073.0" y="1011.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.32%)</title><rect x="1073.0" y="995.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.32%)</title><rect x="1073.0" y="979.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.0" y="990.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.17%)</title><rect x="1073.0" y="963.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1076.0" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.15%)</title><rect x="1075.0" y="963.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1078.0" y="974.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="1075.0" y="947.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1078.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (69 samples, 1.29%)</title><rect x="1076.7" y="1043.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.7" y="1054.0"></text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.15%)</title><rect x="1076.7" y="1027.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1079.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (23 samples, 0.43%)</title><rect x="1078.5" y="1027.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.5" y="1038.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.43%)</title><rect x="1078.5" y="1011.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1081.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.71%)</title><rect x="1083.5" y="1027.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.71%)</title><rect x="1083.5" y="1011.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1086.5" y="1022.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.28%)</title><rect x="1083.5" y="995.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1086.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="1086.8" y="995.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1089.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.30%)</title><rect x="1088.4" y="995.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.30%)</title><rect x="1088.4" y="979.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.30%)</title><rect x="1088.4" y="963.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.4" y="974.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.30%)</title><rect x="1088.4" y="947.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1091.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.11%)</title><rect x="1091.9" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.9" y="1054.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="1091.9" y="1027.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1094.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.19%)</title><rect x="1093.2" y="1043.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.19%)</title><rect x="1093.2" y="1027.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.19%)</title><rect x="1093.2" y="1011.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.2" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="1093.2" y="995.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1096.2" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="1094.5" y="995.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.5" y="1006.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="1094.5" y="979.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1097.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.10%)</title><rect x="1095.4" y="1043.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.10%)</title><rect x="1095.4" y="1027.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.4" y="1038.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.47%)</title><rect x="1095.4" y="1011.0" width="5.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1098.4" y="1022.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.24%)</title><rect x="1100.9" y="1011.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1103.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.39%)</title><rect x="1103.8" y="1011.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.39%)</title><rect x="1103.8" y="995.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.39%)</title><rect x="1103.8" y="979.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.8" y="990.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.39%)</title><rect x="1103.8" y="963.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1106.8" y="974.0"></text>
</g>
<g>
<title>[RMI TCP Connection(21)-127.0.0.1 tid=33811] (370 samples, 6.90%)</title><rect x="1108.4" y="1123.0" width="81.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1111.4" y="1134.0">[RMI TCP ..</text>
</g>
<g>
<title>java/lang/Thread.run (370 samples, 6.90%)</title><rect x="1108.4" y="1107.0" width="81.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.4" y="1118.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (370 samples, 6.90%)</title><rect x="1108.4" y="1091.0" width="81.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.4" y="1102.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (370 samples, 6.90%)</title><rect x="1108.4" y="1075.0" width="81.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.4" y="1086.0">java/util..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (370 samples, 6.90%)</title><rect x="1108.4" y="1059.0" width="81.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.4" y="1070.0">sun/rmi/t..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (370 samples, 6.90%)</title><rect x="1108.4" y="1043.0" width="81.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.4" y="1054.0">java/secu..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$103/1230999400.run (370 samples, 6.90%)</title><rect x="1108.4" y="1027.0" width="81.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.4" y="1038.0">sun/rmi/t..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (370 samples, 6.90%)</title><rect x="1108.4" y="1011.0" width="81.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.4" y="1022.0">sun/rmi/t..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (370 samples, 6.90%)</title><rect x="1108.4" y="995.0" width="81.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.4" y="1006.0">sun/rmi/t..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (370 samples, 6.90%)</title><rect x="1108.4" y="979.0" width="81.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.4" y="990.0">sun/rmi/t..</text>
</g>
<g>
<title>java.io.DataOutputStream (8 samples, 0.15%)</title><rect x="1108.4" y="963.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1111.4" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (362 samples, 6.75%)</title><rect x="1110.2" y="963.0" width="79.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.2" y="974.0">sun/rmi/t..</text>
</g>
<g>
<title>java/rmi/server/ObjID.read (3 samples, 0.06%)</title><rect x="1110.2" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.2" y="958.0"></text>
</g>
<g>
<title>java/rmi/server/UID.read (2 samples, 0.04%)</title><rect x="1110.4" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.4" y="942.0"></text>
</g>
<g>
<title>java.rmi.server.UID (2 samples, 0.04%)</title><rect x="1110.4" y="915.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1113.4" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (301 samples, 5.61%)</title><rect x="1110.8" y="947.0" width="66.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.8" y="958.0">java/se..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (301 samples, 5.61%)</title><rect x="1110.8" y="931.0" width="66.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.8" y="942.0">sun/rmi..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (301 samples, 5.61%)</title><rect x="1110.8" y="915.0" width="66.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.8" y="926.0">sun/rmi..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (301 samples, 5.61%)</title><rect x="1110.8" y="899.0" width="66.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.8" y="910.0">sun/rmi..</text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="1110.8" y="883.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1113.8" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (2 samples, 0.04%)</title><rect x="1111.3" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.3" y="894.0"></text>
</g>
<g>
<title>java.lang.Class[] (2 samples, 0.04%)</title><rect x="1111.3" y="867.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1114.3" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (136 samples, 2.53%)</title><rect x="1111.7" y="883.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.7" y="894.0">ja..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (136 samples, 2.53%)</title><rect x="1111.7" y="867.0" width="29.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.7" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (131 samples, 2.44%)</title><rect x="1111.9" y="851.0" width="28.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1114.9" y="862.0">jd..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (131 samples, 2.44%)</title><rect x="1111.9" y="835.0" width="28.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.9" y="846.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (120 samples, 2.24%)</title><rect x="1111.9" y="819.0" width="26.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.9" y="830.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (120 samples, 2.24%)</title><rect x="1111.9" y="803.0" width="26.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.9" y="814.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (120 samples, 2.24%)</title><rect x="1111.9" y="787.0" width="26.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.9" y="798.0">j..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (120 samples, 2.24%)</title><rect x="1111.9" y="771.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.9" y="782.0">c..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (120 samples, 2.24%)</title><rect x="1111.9" y="755.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.9" y="766.0">c..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (120 samples, 2.24%)</title><rect x="1111.9" y="739.0" width="26.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.9" y="750.0">j..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (120 samples, 2.24%)</title><rect x="1111.9" y="723.0" width="26.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.9" y="734.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (120 samples, 2.24%)</title><rect x="1111.9" y="707.0" width="26.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.9" y="718.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (120 samples, 2.24%)</title><rect x="1111.9" y="691.0" width="26.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.9" y="702.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (120 samples, 2.24%)</title><rect x="1111.9" y="675.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.9" y="686.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (120 samples, 2.24%)</title><rect x="1111.9" y="659.0" width="26.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.9" y="670.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (120 samples, 2.24%)</title><rect x="1111.9" y="643.0" width="26.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.9" y="654.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (120 samples, 2.24%)</title><rect x="1111.9" y="627.0" width="26.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.9" y="638.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (99 samples, 1.85%)</title><rect x="1111.9" y="611.0" width="21.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.9" y="622.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (99 samples, 1.85%)</title><rect x="1111.9" y="595.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.9" y="606.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (99 samples, 1.85%)</title><rect x="1111.9" y="579.0" width="21.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.9" y="590.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (99 samples, 1.85%)</title><rect x="1111.9" y="563.0" width="21.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.9" y="574.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (31 samples, 0.58%)</title><rect x="1111.9" y="547.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.9" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (30 samples, 0.56%)</title><rect x="1111.9" y="531.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.9" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (26 samples, 0.48%)</title><rect x="1111.9" y="515.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.9" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (26 samples, 0.48%)</title><rect x="1111.9" y="499.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="1111.9" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1114.9" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (15 samples, 0.28%)</title><rect x="1112.4" y="483.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.4" y="494.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (6 samples, 0.11%)</title><rect x="1112.4" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (6 samples, 0.11%)</title><rect x="1112.4" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (6 samples, 0.11%)</title><rect x="1112.4" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (6 samples, 0.11%)</title><rect x="1112.4" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (6 samples, 0.11%)</title><rect x="1112.4" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.4" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (6 samples, 0.11%)</title><rect x="1112.4" y="387.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1115.4" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (9 samples, 0.17%)</title><rect x="1113.7" y="467.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.15%)</title><rect x="1113.9" y="451.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.15%)</title><rect x="1113.9" y="435.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1116.9" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (9 samples, 0.17%)</title><rect x="1115.7" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.7" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.17%)</title><rect x="1115.7" y="467.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1118.7" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (4 samples, 0.07%)</title><rect x="1117.6" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.6" y="526.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (4 samples, 0.07%)</title><rect x="1117.6" y="499.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1120.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="1118.7" y="547.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1121.7" y="558.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (2 samples, 0.04%)</title><rect x="1119.4" y="547.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1122.4" y="558.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (37 samples, 0.69%)</title><rect x="1119.8" y="547.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.8" y="558.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1119.8" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.04%)</title><rect x="1119.8" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1119.8" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="1119.8" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.04%)</title><rect x="1119.8" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.04%)</title><rect x="1119.8" y="451.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1122.8" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (33 samples, 0.62%)</title><rect x="1120.7" y="531.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.04%)</title><rect x="1120.7" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1123.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.58%)</title><rect x="1121.2" y="515.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.2" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (31 samples, 0.58%)</title><rect x="1121.2" y="499.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1124.2" y="510.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (26 samples, 0.48%)</title><rect x="1128.0" y="547.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.48%)</title><rect x="1128.0" y="531.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1131.0" y="542.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="611.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.7" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="595.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="579.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="563.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.7" y="574.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="547.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.7" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="531.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="515.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (21 samples, 0.39%)</title><rect x="1133.7" y="499.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.7" y="510.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (21 samples, 0.39%)</title><rect x="1133.7" y="483.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.7" y="494.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (21 samples, 0.39%)</title><rect x="1133.7" y="467.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.7" y="478.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (2 samples, 0.04%)</title><rect x="1133.7" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1136.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (2 samples, 0.04%)</title><rect x="1134.1" y="451.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1137.1" y="462.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (9 samples, 0.17%)</title><rect x="1134.6" y="451.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1137.6" y="462.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (8 samples, 0.15%)</title><rect x="1136.6" y="451.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.6" y="462.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (8 samples, 0.15%)</title><rect x="1136.6" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.6" y="446.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo (2 samples, 0.04%)</title><rect x="1136.6" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1139.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="1137.0" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.11%)</title><rect x="1137.0" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/131635550.invoke (6 samples, 0.11%)</title><rect x="1137.0" y="387.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="1137.0" y="371.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.11%)</title><rect x="1137.0" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.11%)</title><rect x="1137.0" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.0" y="350.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="1137.0" y="323.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1140.0" y="334.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (2 samples, 0.04%)</title><rect x="1138.3" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.3" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.04%)</title><rect x="1138.3" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.3" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$6.run (2 samples, 0.04%)</title><rect x="1138.3" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.3" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getClassLoaderFor (2 samples, 0.04%)</title><rect x="1138.3" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.3" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getClassLoaderFor (2 samples, 0.04%)</title><rect x="1138.3" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.3" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (2 samples, 0.04%)</title><rect x="1138.3" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.3" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (2 samples, 0.04%)</title><rect x="1138.3" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.3" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (2 samples, 0.04%)</title><rect x="1138.3" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.3" y="718.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (2 samples, 0.04%)</title><rect x="1138.3" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1138.3" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1138.3" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.3" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (9 samples, 0.17%)</title><rect x="1138.8" y="819.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.8" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.07%)</title><rect x="1138.8" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (4 samples, 0.07%)</title><rect x="1138.8" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.8" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (4 samples, 0.07%)</title><rect x="1138.8" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.8" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1139.0" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.0" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1139.2" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1139.2" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1139.2" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.2" y="718.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1139.2" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.2" y="702.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1139.2" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.2" y="686.0"></text>
</g>
<g>
<title>java.util.Hashtable$Entry[] (2 samples, 0.04%)</title><rect x="1139.2" y="659.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1142.2" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (5 samples, 0.09%)</title><rect x="1139.6" y="803.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.6" y="814.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (5 samples, 0.09%)</title><rect x="1139.6" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (4 samples, 0.07%)</title><rect x="1139.6" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.6" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (4 samples, 0.07%)</title><rect x="1139.6" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.6" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (4 samples, 0.07%)</title><rect x="1139.6" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (4 samples, 0.07%)</title><rect x="1139.6" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.6" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.04%)</title><rect x="1139.6" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.04%)</title><rect x="1139.6" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.04%)</title><rect x="1139.6" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.04%)</title><rect x="1139.6" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.04%)</title><rect x="1140.1" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.04%)</title><rect x="1140.1" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.04%)</title><rect x="1140.1" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.1" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.04%)</title><rect x="1140.1" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.1" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.04%)</title><rect x="1140.1" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.7" y="862.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (3 samples, 0.06%)</title><rect x="1140.7" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.7" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.06%)</title><rect x="1140.7" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.7" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.06%)</title><rect x="1140.7" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.7" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.06%)</title><rect x="1140.7" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.7" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (3 samples, 0.06%)</title><rect x="1140.7" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.7" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (3 samples, 0.06%)</title><rect x="1140.7" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.7" y="766.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (3 samples, 0.06%)</title><rect x="1140.7" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.7" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (3 samples, 0.06%)</title><rect x="1140.7" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.7" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (3 samples, 0.06%)</title><rect x="1140.7" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.7" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (3 samples, 0.06%)</title><rect x="1140.7" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.7" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 0.06%)</title><rect x="1140.7" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.7" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.06%)</title><rect x="1140.7" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.7" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.06%)</title><rect x="1140.7" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.7" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.06%)</title><rect x="1140.7" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.7" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.06%)</title><rect x="1140.7" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.7" y="622.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.7" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.7" y="558.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.7" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor39.invoke (3 samples, 0.06%)</title><rect x="1140.7" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.7" y="494.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (3 samples, 0.06%)</title><rect x="1140.7" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.7" y="478.0"></text>
</g>
<g>
<title>long[] (3 samples, 0.06%)</title><rect x="1140.7" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1143.7" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (73 samples, 1.36%)</title><rect x="1141.6" y="883.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1144.6" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (73 samples, 1.36%)</title><rect x="1141.6" y="867.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.6" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (73 samples, 1.36%)</title><rect x="1141.6" y="851.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.6" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (72 samples, 1.34%)</title><rect x="1141.6" y="835.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.6" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (72 samples, 1.34%)</title><rect x="1141.6" y="819.0" width="15.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.6" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (71 samples, 1.32%)</title><rect x="1141.6" y="803.0" width="15.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.6" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (21 samples, 0.39%)</title><rect x="1141.6" y="787.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (21 samples, 0.39%)</title><rect x="1141.6" y="771.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.6" y="782.0"></text>
</g>
<g>
<title>int[] (9 samples, 0.17%)</title><rect x="1141.8" y="755.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1144.8" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.19%)</title><rect x="1144.0" y="755.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1147.0" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (50 samples, 0.93%)</title><rect x="1146.2" y="787.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.2" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (50 samples, 0.93%)</title><rect x="1146.2" y="771.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.2" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="1146.2" y="755.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1149.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (48 samples, 0.89%)</title><rect x="1146.7" y="755.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (45 samples, 0.84%)</title><rect x="1146.7" y="739.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.7" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (45 samples, 0.84%)</title><rect x="1146.7" y="723.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.7" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.19%)</title><rect x="1146.7" y="707.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.19%)</title><rect x="1146.7" y="691.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.19%)</title><rect x="1146.7" y="675.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.19%)</title><rect x="1146.7" y="659.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (9 samples, 0.17%)</title><rect x="1146.9" y="643.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.9" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.17%)</title><rect x="1146.9" y="627.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.17%)</title><rect x="1146.9" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (9 samples, 0.17%)</title><rect x="1146.9" y="595.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (9 samples, 0.17%)</title><rect x="1146.9" y="579.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (8 samples, 0.15%)</title><rect x="1146.9" y="563.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (8 samples, 0.15%)</title><rect x="1146.9" y="547.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.11%)</title><rect x="1146.9" y="531.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.11%)</title><rect x="1146.9" y="515.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 0.11%)</title><rect x="1146.9" y="499.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.11%)</title><rect x="1146.9" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.11%)</title><rect x="1146.9" y="467.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.11%)</title><rect x="1146.9" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.06%)</title><rect x="1146.9" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.06%)</title><rect x="1146.9" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.06%)</title><rect x="1146.9" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.06%)</title><rect x="1146.9" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.06%)</title><rect x="1146.9" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.06%)</title><rect x="1146.9" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.06%)</title><rect x="1146.9" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.06%)</title><rect x="1146.9" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.06%)</title><rect x="1146.9" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.06%)</title><rect x="1146.9" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.06%)</title><rect x="1146.9" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.06%)</title><rect x="1146.9" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.06%)</title><rect x="1146.9" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.06%)</title><rect x="1146.9" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.9" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.06%)</title><rect x="1146.9" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.06%)</title><rect x="1146.9" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.06%)</title><rect x="1146.9" y="179.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.06%)</title><rect x="1146.9" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.9" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.06%)</title><rect x="1146.9" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.06%)</title><rect x="1146.9" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.06%)</title><rect x="1146.9" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.06%)</title><rect x="1146.9" y="99.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.9" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.06%)</title><rect x="1146.9" y="83.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.9" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.06%)</title><rect x="1146.9" y="67.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.9" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.06%)</title><rect x="1146.9" y="51.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.9" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.06%)</title><rect x="1146.9" y="35.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1149.9" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.06%)</title><rect x="1147.6" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.6" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.04%)</title><rect x="1147.8" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.04%)</title><rect x="1147.8" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.04%)</title><rect x="1147.8" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.04%)</title><rect x="1147.8" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.04%)</title><rect x="1148.2" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.2" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.04%)</title><rect x="1148.2" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1151.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (35 samples, 0.65%)</title><rect x="1148.9" y="707.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.9" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (34 samples, 0.63%)</title><rect x="1149.1" y="691.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (34 samples, 0.63%)</title><rect x="1149.1" y="675.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (34 samples, 0.63%)</title><rect x="1149.1" y="659.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (34 samples, 0.63%)</title><rect x="1149.1" y="643.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1152.1" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (31 samples, 0.58%)</title><rect x="1149.3" y="627.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (31 samples, 0.58%)</title><rect x="1149.3" y="611.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (11 samples, 0.21%)</title><rect x="1149.3" y="595.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.21%)</title><rect x="1149.3" y="579.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.21%)</title><rect x="1149.3" y="563.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.3" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (11 samples, 0.21%)</title><rect x="1149.3" y="547.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (11 samples, 0.21%)</title><rect x="1149.3" y="531.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.21%)</title><rect x="1149.3" y="515.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.17%)</title><rect x="1149.3" y="499.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.17%)</title><rect x="1149.3" y="483.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (8 samples, 0.15%)</title><rect x="1149.5" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.15%)</title><rect x="1149.5" y="451.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.15%)</title><rect x="1149.5" y="435.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (8 samples, 0.15%)</title><rect x="1149.5" y="419.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (8 samples, 0.15%)</title><rect x="1149.5" y="403.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (2 samples, 0.04%)</title><rect x="1149.5" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.04%)</title><rect x="1149.5" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="1149.5" y="355.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1152.5" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (5 samples, 0.09%)</title><rect x="1150.2" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (5 samples, 0.09%)</title><rect x="1150.2" y="371.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1153.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.04%)</title><rect x="1151.3" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.3" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.04%)</title><rect x="1151.3" y="483.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1154.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.09%)</title><rect x="1151.7" y="595.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.07%)</title><rect x="1151.7" y="579.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (4 samples, 0.07%)</title><rect x="1151.7" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (5 samples, 0.09%)</title><rect x="1152.8" y="595.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (5 samples, 0.09%)</title><rect x="1152.8" y="579.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.09%)</title><rect x="1152.8" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.8" y="574.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.04%)</title><rect x="1152.8" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="1153.5" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (10 samples, 0.19%)</title><rect x="1153.9" y="595.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.9" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (10 samples, 0.19%)</title><rect x="1153.9" y="579.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1156.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.06%)</title><rect x="1156.6" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.6" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.06%)</title><rect x="1156.6" y="723.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1159.6" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (42 samples, 0.78%)</title><rect x="1157.7" y="883.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.7" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (41 samples, 0.76%)</title><rect x="1157.9" y="867.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.9" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (41 samples, 0.76%)</title><rect x="1157.9" y="851.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.9" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (41 samples, 0.76%)</title><rect x="1157.9" y="835.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.9" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (5 samples, 0.09%)</title><rect x="1157.9" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.9" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.06%)</title><rect x="1157.9" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.9" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.06%)</title><rect x="1157.9" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.9" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.06%)</title><rect x="1157.9" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.04%)</title><rect x="1158.1" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.04%)</title><rect x="1158.1" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.04%)</title><rect x="1158.1" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.04%)</title><rect x="1158.1" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.04%)</title><rect x="1158.5" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.5" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.04%)</title><rect x="1158.5" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.5" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.04%)</title><rect x="1158.5" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.5" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.04%)</title><rect x="1158.5" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.5" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (36 samples, 0.67%)</title><rect x="1159.0" y="819.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.0" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (10 samples, 0.19%)</title><rect x="1159.0" y="803.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.0" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (10 samples, 0.19%)</title><rect x="1159.0" y="787.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.0" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (5 samples, 0.09%)</title><rect x="1159.0" y="771.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1162.0" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (4 samples, 0.07%)</title><rect x="1160.1" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (4 samples, 0.07%)</title><rect x="1160.1" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (4 samples, 0.07%)</title><rect x="1160.1" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (4 samples, 0.07%)</title><rect x="1160.1" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (4 samples, 0.07%)</title><rect x="1160.1" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.06%)</title><rect x="1160.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="1160.3" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1163.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="1160.5" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.5" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1160.5" y="643.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1163.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (26 samples, 0.48%)</title><rect x="1161.2" y="803.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.2" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (3 samples, 0.06%)</title><rect x="1161.4" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.4" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (3 samples, 0.06%)</title><rect x="1161.4" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1161.6" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.04%)</title><rect x="1161.6" y="739.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1164.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (22 samples, 0.41%)</title><rect x="1162.1" y="787.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.1" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (22 samples, 0.41%)</title><rect x="1162.1" y="771.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (22 samples, 0.41%)</title><rect x="1162.1" y="755.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (8 samples, 0.15%)</title><rect x="1162.1" y="739.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.1" y="750.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (8 samples, 0.15%)</title><rect x="1162.1" y="723.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (2 samples, 0.04%)</title><rect x="1162.1" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1165.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (2 samples, 0.04%)</title><rect x="1162.1" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.1" y="702.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues (2 samples, 0.04%)</title><rect x="1162.1" y="675.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1165.1" y="686.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (5 samples, 0.09%)</title><rect x="1162.7" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.7" y="718.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (2 samples, 0.04%)</title><rect x="1163.2" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="1163.2" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="1163.2" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (14 samples, 0.26%)</title><rect x="1163.8" y="739.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.8" y="750.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (14 samples, 0.26%)</title><rect x="1163.8" y="723.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (14 samples, 0.26%)</title><rect x="1163.8" y="707.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (14 samples, 0.26%)</title><rect x="1163.8" y="691.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (14 samples, 0.26%)</title><rect x="1163.8" y="675.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1166.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (14 samples, 0.26%)</title><rect x="1163.8" y="659.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.8" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (5 samples, 0.09%)</title><rect x="1163.8" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (5 samples, 0.09%)</title><rect x="1163.8" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.06%)</title><rect x="1163.8" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.8" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.04%)</title><rect x="1163.8" y="595.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1166.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (2 samples, 0.04%)</title><rect x="1164.5" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.04%)</title><rect x="1164.5" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.04%)</title><rect x="1164.5" y="579.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1167.5" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (9 samples, 0.17%)</title><rect x="1164.9" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.9" y="654.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="1164.9" y="627.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1167.9" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (46 samples, 0.86%)</title><rect x="1166.9" y="883.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.9" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (45 samples, 0.84%)</title><rect x="1167.1" y="867.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.1" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (45 samples, 0.84%)</title><rect x="1167.1" y="851.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.1" y="862.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (45 samples, 0.84%)</title><rect x="1167.1" y="835.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.1" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (45 samples, 0.84%)</title><rect x="1167.1" y="819.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.1" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (45 samples, 0.84%)</title><rect x="1167.1" y="803.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (31 samples, 0.58%)</title><rect x="1167.3" y="787.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.3" y="798.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="1167.3" y="771.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1170.3" y="782.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.17%)</title><rect x="1168.2" y="771.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1171.2" y="782.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.19%)</title><rect x="1170.2" y="771.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1173.2" y="782.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.11%)</title><rect x="1172.4" y="771.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1175.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1174.2" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.2" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="1174.2" y="771.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1177.2" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (10 samples, 0.19%)</title><rect x="1174.8" y="787.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.8" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (2 samples, 0.04%)</title><rect x="1174.8" y="771.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1177.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (8 samples, 0.15%)</title><rect x="1175.3" y="771.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.3" y="782.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.15%)</title><rect x="1175.3" y="755.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1178.3" y="766.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$1 (3 samples, 0.06%)</title><rect x="1177.0" y="947.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1180.0" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (55 samples, 1.03%)</title><rect x="1177.7" y="947.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.7" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (55 samples, 1.03%)</title><rect x="1177.7" y="931.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.7" y="942.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (55 samples, 1.03%)</title><rect x="1177.7" y="915.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap (3 samples, 0.06%)</title><rect x="1177.7" y="899.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1180.7" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (52 samples, 0.97%)</title><rect x="1178.3" y="899.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.3" y="910.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (2 samples, 0.04%)</title><rect x="1178.6" y="883.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1181.6" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (43 samples, 0.80%)</title><rect x="1179.0" y="883.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.0" y="894.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="1179.0" y="867.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1182.0" y="878.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.28%)</title><rect x="1179.9" y="867.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1182.9" y="878.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.11%)</title><rect x="1183.2" y="867.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1186.2" y="878.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.09%)</title><rect x="1184.5" y="867.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.5" y="878.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (12 samples, 0.22%)</title><rect x="1185.8" y="867.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.8" y="878.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="1185.8" y="851.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.17%)</title><rect x="1186.5" y="851.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (6 samples, 0.11%)</title><rect x="1188.5" y="883.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.5" y="894.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (2 samples, 0.04%)</title><rect x="1188.5" y="867.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="1188.9" y="867.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
</g>
</svg>
