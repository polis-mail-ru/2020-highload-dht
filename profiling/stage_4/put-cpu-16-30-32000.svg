<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (10,805 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>[Java: C2 CompilerThread0 tid=21763] (338 samples, 3.13%)</title><rect x="10.4" y="531.0" width="36.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.4" y="542.0">[Ja..</text>
</g>
<g>
<title>thread_start (338 samples, 3.13%)</title><rect x="10.4" y="515.0" width="36.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.4" y="526.0">thr..</text>
</g>
<g>
<title>_pthread_start (338 samples, 3.13%)</title><rect x="10.4" y="499.0" width="36.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.4" y="510.0">_pt..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (338 samples, 3.13%)</title><rect x="10.4" y="483.0" width="36.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.4" y="494.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (338 samples, 3.13%)</title><rect x="10.4" y="467.0" width="36.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.4" y="478.0">Thr..</text>
</g>
<g>
<title>JavaThread::run() (338 samples, 3.13%)</title><rect x="10.4" y="451.0" width="36.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.4" y="462.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (338 samples, 3.13%)</title><rect x="10.4" y="435.0" width="36.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.4" y="446.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (338 samples, 3.13%)</title><rect x="10.4" y="419.0" width="36.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.4" y="430.0">Com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (338 samples, 3.13%)</title><rect x="10.4" y="403.0" width="36.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.4" y="414.0">Com..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (337 samples, 3.12%)</title><rect x="10.4" y="387.0" width="36.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="398.0">C2C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (336 samples, 3.11%)</title><rect x="10.4" y="371.0" width="36.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="382.0">Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (208 samples, 1.93%)</title><rect x="10.4" y="355.0" width="22.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.4" y="366.0">C..</text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.06%)</title><rect x="10.4" y="339.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.4" y="350.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (5 samples, 0.05%)</title><rect x="10.7" y="323.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.7" y="334.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (5 samples, 0.05%)</title><rect x="10.7" y="307.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.7" y="318.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (7 samples, 0.06%)</title><rect x="11.2" y="339.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.2" y="350.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.03%)</title><rect x="11.2" y="323.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.2" y="334.0"></text>
</g>
<g>
<title>NonSafepointEmitter::observe_instruction(Node*, int) (3 samples, 0.03%)</title><rect x="11.6" y="323.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.6" y="334.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (3 samples, 0.03%)</title><rect x="11.6" y="307.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.6" y="318.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.03%)</title><rect x="11.6" y="291.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.6" y="302.0"></text>
</g>
<g>
<title>Matcher::match() (18 samples, 0.17%)</title><rect x="12.0" y="339.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.0" y="350.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (14 samples, 0.13%)</title><rect x="12.1" y="323.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.1" y="334.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.03%)</title><rect x="12.5" y="307.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.5" y="318.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.04%)</title><rect x="12.9" y="307.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.9" y="318.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (18 samples, 0.17%)</title><rect x="14.3" y="339.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.3" y="350.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (17 samples, 0.16%)</title><rect x="14.4" y="323.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.4" y="334.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.03%)</title><rect x="14.6" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.6" y="318.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (4 samples, 0.04%)</title><rect x="14.9" y="307.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.9" y="318.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (7 samples, 0.06%)</title><rect x="15.5" y="307.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.5" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (155 samples, 1.43%)</title><rect x="16.2" y="339.0" width="17.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.2" y="350.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (8 samples, 0.07%)</title><rect x="16.7" y="323.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.7" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (9 samples, 0.08%)</title><rect x="17.5" y="323.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.5" y="334.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (6 samples, 0.06%)</title><rect x="17.9" y="307.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.9" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.10%)</title><rect x="18.5" y="323.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.5" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (4 samples, 0.04%)</title><rect x="19.3" y="307.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="22.3" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (45 samples, 0.42%)</title><rect x="19.7" y="323.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.7" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.03%)</title><rect x="20.5" y="307.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.5" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (15 samples, 0.14%)</title><rect x="21.2" y="307.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.2" y="318.0"></text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (4 samples, 0.04%)</title><rect x="21.5" y="291.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.5" y="302.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.03%)</title><rect x="21.9" y="291.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>RegMask::overlap(RegMask const&amp;) const (4 samples, 0.04%)</title><rect x="22.4" y="291.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.4" y="302.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (12 samples, 0.11%)</title><rect x="23.1" y="307.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.1" y="318.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.03%)</title><rect x="23.1" y="291.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.1" y="302.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (5 samples, 0.05%)</title><rect x="23.9" y="291.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (3 samples, 0.03%)</title><rect x="24.6" y="323.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="27.6" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (23 samples, 0.21%)</title><rect x="25.3" y="323.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.3" y="334.0"></text>
</g>
<g>
<title>RegMask::AND(RegMask const&amp;) (3 samples, 0.03%)</title><rect x="26.3" y="307.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.3" y="318.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (7 samples, 0.06%)</title><rect x="26.9" y="307.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.9" y="318.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.06%)</title><rect x="26.9" y="291.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.9" y="302.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (13 samples, 0.12%)</title><rect x="27.9" y="323.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.9" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (7 samples, 0.06%)</title><rect x="28.3" y="307.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.3" y="318.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (6 samples, 0.06%)</title><rect x="29.4" y="323.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.4" y="334.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (5 samples, 0.05%)</title><rect x="29.5" y="307.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.5" y="318.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (4 samples, 0.04%)</title><rect x="29.7" y="291.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.7" y="302.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (6 samples, 0.06%)</title><rect x="30.1" y="323.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="33.1" y="334.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (6 samples, 0.06%)</title><rect x="30.1" y="307.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.1" y="318.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.03%)</title><rect x="30.3" y="291.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="33.3" y="302.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (6 samples, 0.06%)</title><rect x="30.7" y="323.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.7" y="334.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (3 samples, 0.03%)</title><rect x="30.9" y="307.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="33.9" y="318.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (11 samples, 0.10%)</title><rect x="31.6" y="323.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="34.6" y="334.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (7 samples, 0.06%)</title><rect x="32.1" y="307.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.1" y="318.0"></text>
</g>
<g>
<title>Compile::Optimize() (90 samples, 0.83%)</title><rect x="33.2" y="355.0" width="9.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="36.2" y="366.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (3 samples, 0.03%)</title><rect x="33.3" y="339.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.3" y="350.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (3 samples, 0.03%)</title><rect x="33.3" y="323.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.3" y="334.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (4 samples, 0.04%)</title><rect x="33.6" y="339.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="36.6" y="350.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (4 samples, 0.04%)</title><rect x="33.6" y="323.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="36.6" y="334.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (29 samples, 0.27%)</title><rect x="34.0" y="339.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.0" y="350.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (29 samples, 0.27%)</title><rect x="34.0" y="323.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="37.0" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.03%)</title><rect x="34.4" y="307.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.4" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.04%)</title><rect x="34.7" y="307.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.7" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (3 samples, 0.03%)</title><rect x="34.7" y="291.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="37.7" y="302.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (3 samples, 0.03%)</title><rect x="34.7" y="275.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.7" y="286.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.05%)</title><rect x="35.1" y="307.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.1" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.04%)</title><rect x="35.2" y="291.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.2" y="302.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.03%)</title><rect x="35.3" y="275.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="38.3" y="286.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (3 samples, 0.03%)</title><rect x="35.3" y="259.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="38.3" y="270.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.03%)</title><rect x="35.7" y="307.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.7" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (6 samples, 0.06%)</title><rect x="36.1" y="307.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="39.1" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.03%)</title><rect x="36.4" y="291.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.4" y="302.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.04%)</title><rect x="36.8" y="307.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="39.8" y="318.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.03%)</title><rect x="36.8" y="291.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.8" y="302.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (3 samples, 0.03%)</title><rect x="37.8" y="339.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="40.8" y="350.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (3 samples, 0.03%)</title><rect x="37.8" y="323.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="40.8" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (29 samples, 0.27%)</title><rect x="38.2" y="339.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="41.2" y="350.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.03%)</title><rect x="38.5" y="323.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.5" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.06%)</title><rect x="38.8" y="323.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="41.8" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (3 samples, 0.03%)</title><rect x="39.0" y="307.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="42.0" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.10%)</title><rect x="39.5" y="323.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.5" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (7 samples, 0.06%)</title><rect x="39.8" y="307.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="42.8" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 0.04%)</title><rect x="40.0" y="291.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="43.0" y="302.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (10 samples, 0.09%)</title><rect x="41.3" y="339.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="44.3" y="350.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.08%)</title><rect x="41.5" y="323.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="44.5" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (29 samples, 0.27%)</title><rect x="43.5" y="355.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="46.5" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (29 samples, 0.27%)</title><rect x="43.5" y="339.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="46.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (29 samples, 0.27%)</title><rect x="43.5" y="323.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="46.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (29 samples, 0.27%)</title><rect x="43.5" y="307.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="46.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (27 samples, 0.25%)</title><rect x="43.5" y="291.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="46.5" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.14%)</title><rect x="43.7" y="275.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="46.7" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.14%)</title><rect x="43.7" y="259.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="46.7" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.13%)</title><rect x="43.7" y="243.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="46.7" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.13%)</title><rect x="43.7" y="227.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="46.7" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.11%)</title><rect x="43.7" y="211.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="46.7" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.06%)</title><rect x="43.9" y="195.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="46.9" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.06%)</title><rect x="43.9" y="179.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="46.9" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.06%)</title><rect x="43.9" y="163.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="46.9" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.06%)</title><rect x="43.9" y="147.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="46.9" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.06%)</title><rect x="43.9" y="131.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="46.9" y="142.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="44.3" y="115.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="47.3" y="126.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="44.3" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="47.3" y="110.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="44.3" y="83.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.3" y="94.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="44.3" y="67.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="47.3" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="44.3" y="51.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="47.3" y="62.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.03%)</title><rect x="44.3" y="35.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.3" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.04%)</title><rect x="44.6" y="195.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="47.6" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="44.6" y="179.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="47.6" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="44.6" y="163.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="47.6" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="44.6" y="147.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="47.6" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="44.6" y="131.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="47.6" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.03%)</title><rect x="44.6" y="115.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="47.6" y="126.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.03%)</title><rect x="44.6" y="99.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.6" y="110.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.03%)</title><rect x="44.6" y="83.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="47.6" y="94.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.03%)</title><rect x="44.6" y="67.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="47.6" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.03%)</title><rect x="44.6" y="51.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="47.6" y="62.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (10 samples, 0.09%)</title><rect x="45.4" y="275.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="48.4" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.08%)</title><rect x="45.4" y="259.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="48.4" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.08%)</title><rect x="45.4" y="243.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="48.4" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.08%)</title><rect x="45.4" y="227.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="48.4" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.08%)</title><rect x="45.4" y="211.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="48.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.07%)</title><rect x="45.5" y="195.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="48.5" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.05%)</title><rect x="45.6" y="179.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="48.6" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.05%)</title><rect x="45.6" y="163.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="48.6" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.05%)</title><rect x="45.6" y="147.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="48.6" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.05%)</title><rect x="45.6" y="131.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="48.6" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.03%)</title><rect x="45.6" y="115.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="48.6" y="126.0"></text>
</g>
<g>
<title>[Java: VM Thread tid=18947] (4 samples, 0.04%)</title><rect x="47.9" y="531.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="50.9" y="542.0"></text>
</g>
<g>
<title>thread_start (4 samples, 0.04%)</title><rect x="47.9" y="515.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="50.9" y="526.0"></text>
</g>
<g>
<title>_pthread_start (4 samples, 0.04%)</title><rect x="47.9" y="499.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="50.9" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.04%)</title><rect x="47.9" y="483.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="50.9" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.04%)</title><rect x="47.9" y="467.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="50.9" y="478.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.04%)</title><rect x="47.9" y="451.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="50.9" y="462.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.04%)</title><rect x="47.9" y="435.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="50.9" y="446.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (3 samples, 0.03%)</title><rect x="48.0" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="51.0" y="430.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.03%)</title><rect x="48.0" y="403.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="51.0" y="414.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.03%)</title><rect x="48.0" y="387.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="51.0" y="398.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.03%)</title><rect x="48.0" y="371.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="51.0" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (3 samples, 0.03%)</title><rect x="48.0" y="355.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="51.0" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25091] (185 samples, 1.71%)</title><rect x="48.3" y="531.0" width="20.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="51.3" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (185 samples, 1.71%)</title><rect x="48.3" y="515.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (115 samples, 1.06%)</title><rect x="48.7" y="499.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (113 samples, 1.05%)</title><rect x="48.9" y="483.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (113 samples, 1.05%)</title><rect x="48.9" y="467.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (113 samples, 1.05%)</title><rect x="48.9" y="451.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (104 samples, 0.96%)</title><rect x="48.9" y="435.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.9" y="446.0"></text>
</g>
<g>
<title>kevent (92 samples, 0.85%)</title><rect x="50.2" y="419.0" width="10.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="53.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.05%)</title><rect x="60.2" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.05%)</title><rect x="60.2" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.03%)</title><rect x="60.9" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (67 samples, 0.62%)</title><rect x="61.2" y="499.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (66 samples, 0.61%)</title><rect x="61.3" y="483.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (32 samples, 0.30%)</title><rect x="61.3" y="467.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.20%)</title><rect x="61.3" y="451.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.20%)</title><rect x="61.3" y="435.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (20 samples, 0.19%)</title><rect x="61.5" y="419.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (19 samples, 0.18%)</title><rect x="61.7" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (16 samples, 0.15%)</title><rect x="61.8" y="387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.15%)</title><rect x="61.8" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.15%)</title><rect x="61.8" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.11%)</title><rect x="61.9" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.10%)</title><rect x="62.0" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.10%)</title><rect x="62.0" y="307.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.10%)</title><rect x="62.0" y="291.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.10%)</title><rect x="62.0" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.10%)</title><rect x="62.0" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="62.2" y="243.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="65.2" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.07%)</title><rect x="62.3" y="227.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="65.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="63.7" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.7" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="63.7" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="64.2" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="64.2" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="64.3" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 0.31%)</title><rect x="64.8" y="467.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (34 samples, 0.31%)</title><rect x="64.8" y="451.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (33 samples, 0.31%)</title><rect x="64.9" y="435.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="64.9" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="64.9" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.28%)</title><rect x="65.3" y="419.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.28%)</title><rect x="65.3" y="403.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (29 samples, 0.27%)</title><rect x="65.4" y="387.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (29 samples, 0.27%)</title><rect x="65.4" y="371.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (29 samples, 0.27%)</title><rect x="65.4" y="355.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.4" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (25 samples, 0.23%)</title><rect x="65.8" y="339.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=28167] (84 samples, 0.78%)</title><rect x="68.5" y="531.0" width="9.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="71.5" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (84 samples, 0.78%)</title><rect x="68.5" y="515.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (52 samples, 0.48%)</title><rect x="68.6" y="499.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (52 samples, 0.48%)</title><rect x="68.6" y="483.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (52 samples, 0.48%)</title><rect x="68.6" y="467.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (52 samples, 0.48%)</title><rect x="68.6" y="451.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (51 samples, 0.47%)</title><rect x="68.8" y="435.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.8" y="446.0"></text>
</g>
<g>
<title>kevent (44 samples, 0.41%)</title><rect x="69.5" y="419.0" width="4.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="72.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31 samples, 0.29%)</title><rect x="74.3" y="499.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 0.29%)</title><rect x="74.3" y="483.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.19%)</title><rect x="74.3" y="467.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 0.13%)</title><rect x="74.4" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.12%)</title><rect x="74.5" y="435.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (13 samples, 0.12%)</title><rect x="74.5" y="419.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (13 samples, 0.12%)</title><rect x="74.5" y="403.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (13 samples, 0.12%)</title><rect x="74.5" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.12%)</title><rect x="74.5" y="371.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.12%)</title><rect x="74.5" y="355.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.10%)</title><rect x="74.5" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.10%)</title><rect x="74.5" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.10%)</title><rect x="74.5" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.10%)</title><rect x="74.5" y="291.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.10%)</title><rect x="74.5" y="275.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.10%)</title><rect x="74.5" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (11 samples, 0.10%)</title><rect x="74.5" y="243.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="77.5" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.07%)</title><rect x="74.8" y="227.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="77.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="76.0" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.09%)</title><rect x="76.6" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (10 samples, 0.09%)</title><rect x="76.6" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (9 samples, 0.08%)</title><rect x="76.7" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.08%)</title><rect x="76.7" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.08%)</title><rect x="76.7" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.07%)</title><rect x="76.7" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (8 samples, 0.07%)</title><rect x="76.7" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (8 samples, 0.07%)</title><rect x="76.7" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.7" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (7 samples, 0.06%)</title><rect x="76.8" y="339.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="79.8" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=44551] (138 samples, 1.28%)</title><rect x="77.7" y="531.0" width="15.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="80.7" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (138 samples, 1.28%)</title><rect x="77.7" y="515.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (83 samples, 0.77%)</title><rect x="77.9" y="499.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (83 samples, 0.77%)</title><rect x="77.9" y="483.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (83 samples, 0.77%)</title><rect x="77.9" y="467.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (83 samples, 0.77%)</title><rect x="77.9" y="451.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (81 samples, 0.75%)</title><rect x="77.9" y="435.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.9" y="446.0"></text>
</g>
<g>
<title>kevent (77 samples, 0.71%)</title><rect x="78.4" y="419.0" width="8.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="81.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (53 samples, 0.49%)</title><rect x="87.0" y="499.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (52 samples, 0.48%)</title><rect x="87.1" y="483.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 0.34%)</title><rect x="87.1" y="467.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 0.27%)</title><rect x="87.1" y="451.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 0.27%)</title><rect x="87.1" y="435.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (29 samples, 0.27%)</title><rect x="87.1" y="419.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (27 samples, 0.25%)</title><rect x="87.3" y="403.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (26 samples, 0.24%)</title><rect x="87.4" y="387.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.24%)</title><rect x="87.4" y="371.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.24%)</title><rect x="87.4" y="355.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (26 samples, 0.24%)</title><rect x="87.4" y="339.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.22%)</title><rect x="87.6" y="323.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.22%)</title><rect x="87.6" y="307.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.22%)</title><rect x="87.6" y="291.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.22%)</title><rect x="87.6" y="275.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.22%)</title><rect x="87.6" y="259.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (23 samples, 0.21%)</title><rect x="87.6" y="243.0" width="2.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="90.6" y="254.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.03%)</title><rect x="87.9" y="227.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="90.9" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (15 samples, 0.14%)</title><rect x="88.5" y="227.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="91.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="90.3" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.14%)</title><rect x="91.1" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (15 samples, 0.14%)</title><rect x="91.1" y="451.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (15 samples, 0.14%)</title><rect x="91.1" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.12%)</title><rect x="91.4" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.12%)</title><rect x="91.4" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.12%)</title><rect x="91.4" y="387.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.12%)</title><rect x="91.4" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (12 samples, 0.11%)</title><rect x="91.5" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.5" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (12 samples, 0.11%)</title><rect x="91.5" y="339.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="94.5" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=28675] (77 samples, 0.71%)</title><rect x="92.8" y="531.0" width="8.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="95.8" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 0.71%)</title><rect x="92.8" y="515.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (47 samples, 0.43%)</title><rect x="93.0" y="499.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (47 samples, 0.43%)</title><rect x="93.0" y="483.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (47 samples, 0.43%)</title><rect x="93.0" y="467.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (47 samples, 0.43%)</title><rect x="93.0" y="451.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (41 samples, 0.38%)</title><rect x="93.0" y="435.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.0" y="446.0"></text>
</g>
<g>
<title>kevent (39 samples, 0.36%)</title><rect x="93.2" y="419.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="96.2" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (28 samples, 0.26%)</title><rect x="98.1" y="499.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (28 samples, 0.26%)</title><rect x="98.1" y="483.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.19%)</title><rect x="98.1" y="467.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 0.12%)</title><rect x="98.1" y="451.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.12%)</title><rect x="98.1" y="435.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (13 samples, 0.12%)</title><rect x="98.1" y="419.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (12 samples, 0.11%)</title><rect x="98.2" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (12 samples, 0.11%)</title><rect x="98.2" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.11%)</title><rect x="98.2" y="371.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.11%)</title><rect x="98.2" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.11%)</title><rect x="98.2" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.09%)</title><rect x="98.5" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.09%)</title><rect x="98.5" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.09%)</title><rect x="98.5" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.09%)</title><rect x="98.5" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.09%)</title><rect x="98.5" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (8 samples, 0.07%)</title><rect x="98.5" y="243.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="101.5" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 0.06%)</title><rect x="98.7" y="227.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="101.7" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="100.1" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="100.1" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.06%)</title><rect x="100.4" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (7 samples, 0.06%)</title><rect x="100.4" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.06%)</title><rect x="100.4" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.06%)</title><rect x="100.5" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.06%)</title><rect x="100.5" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.06%)</title><rect x="100.5" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (6 samples, 0.06%)</title><rect x="100.5" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (6 samples, 0.06%)</title><rect x="100.5" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.5" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (6 samples, 0.06%)</title><rect x="100.5" y="339.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="103.5" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39171] (218 samples, 2.02%)</title><rect x="101.2" y="531.0" width="23.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="104.2" y="542.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (218 samples, 2.02%)</title><rect x="101.2" y="515.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.2" y="526.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (136 samples, 1.26%)</title><rect x="101.6" y="499.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (133 samples, 1.23%)</title><rect x="102.0" y="483.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (133 samples, 1.23%)</title><rect x="102.0" y="467.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (133 samples, 1.23%)</title><rect x="102.0" y="451.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (119 samples, 1.10%)</title><rect x="102.2" y="435.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.2" y="446.0"></text>
</g>
<g>
<title>kevent (106 samples, 0.98%)</title><rect x="103.6" y="419.0" width="11.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="106.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (4 samples, 0.04%)</title><rect x="115.4" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.04%)</title><rect x="116.0" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (78 samples, 0.72%)</title><rect x="116.5" y="499.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72 samples, 0.67%)</title><rect x="116.6" y="483.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (41 samples, 0.38%)</title><rect x="116.7" y="467.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.21%)</title><rect x="116.8" y="451.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.21%)</title><rect x="116.8" y="435.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (22 samples, 0.20%)</title><rect x="116.9" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (20 samples, 0.19%)</title><rect x="117.1" y="403.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (16 samples, 0.15%)</title><rect x="117.6" y="387.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.15%)</title><rect x="117.6" y="371.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.15%)</title><rect x="117.6" y="355.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.11%)</title><rect x="117.6" y="339.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.10%)</title><rect x="117.7" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.10%)</title><rect x="117.7" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.10%)</title><rect x="117.7" y="291.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.10%)</title><rect x="117.7" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.10%)</title><rect x="117.7" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="117.9" y="243.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="120.9" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.06%)</title><rect x="118.0" y="227.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="121.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="118.9" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="118.9" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.10%)</title><rect x="119.5" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.06%)</title><rect x="119.5" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="119.6" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="120.0" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="120.3" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="120.3" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="120.4" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="120.7" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.7" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="120.7" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 0.28%)</title><rect x="121.2" y="467.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (30 samples, 0.28%)</title><rect x="121.2" y="451.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (30 samples, 0.28%)</title><rect x="121.2" y="435.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.05%)</title><rect x="121.2" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="121.2" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 0.22%)</title><rect x="121.8" y="419.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 0.22%)</title><rect x="121.8" y="403.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (23 samples, 0.21%)</title><rect x="121.9" y="387.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (23 samples, 0.21%)</title><rect x="121.9" y="371.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (23 samples, 0.21%)</title><rect x="121.9" y="355.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.9" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (23 samples, 0.21%)</title><rect x="121.9" y="339.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="124.9" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.05%)</title><rect x="124.5" y="483.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="127.5" y="494.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="124.7" y="467.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="127.7" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=34051] (75 samples, 0.69%)</title><rect x="125.0" y="531.0" width="8.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="128.0" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (75 samples, 0.69%)</title><rect x="125.0" y="515.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (36 samples, 0.33%)</title><rect x="125.1" y="499.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (36 samples, 0.33%)</title><rect x="125.1" y="483.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (36 samples, 0.33%)</title><rect x="125.1" y="467.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (36 samples, 0.33%)</title><rect x="125.1" y="451.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (31 samples, 0.29%)</title><rect x="125.1" y="435.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.1" y="446.0"></text>
</g>
<g>
<title>kevent (27 samples, 0.25%)</title><rect x="125.5" y="419.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="128.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (38 samples, 0.35%)</title><rect x="129.0" y="499.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 0.33%)</title><rect x="129.0" y="483.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 0.22%)</title><rect x="129.0" y="467.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 0.19%)</title><rect x="129.0" y="451.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 0.19%)</title><rect x="129.0" y="435.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (21 samples, 0.19%)</title><rect x="129.0" y="419.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (20 samples, 0.19%)</title><rect x="129.1" y="403.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (18 samples, 0.17%)</title><rect x="129.4" y="387.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.17%)</title><rect x="129.4" y="371.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.17%)</title><rect x="129.4" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.14%)</title><rect x="129.4" y="339.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.12%)</title><rect x="129.6" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.12%)</title><rect x="129.6" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.11%)</title><rect x="129.6" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.11%)</title><rect x="129.6" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.11%)</title><rect x="129.6" y="259.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (11 samples, 0.10%)</title><rect x="129.7" y="243.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="132.7" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.07%)</title><rect x="129.9" y="227.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="132.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.11%)</title><rect x="131.7" y="467.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (12 samples, 0.11%)</title><rect x="131.7" y="451.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (11 samples, 0.10%)</title><rect x="131.8" y="435.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="131.9" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="131.9" y="403.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.08%)</title><rect x="132.0" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (9 samples, 0.08%)</title><rect x="132.0" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (9 samples, 0.08%)</title><rect x="132.0" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.0" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (9 samples, 0.08%)</title><rect x="132.0" y="339.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="135.0" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=38403] (180 samples, 1.67%)</title><rect x="133.2" y="531.0" width="19.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="136.2" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (180 samples, 1.67%)</title><rect x="133.2" y="515.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (116 samples, 1.07%)</title><rect x="133.5" y="499.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (116 samples, 1.07%)</title><rect x="133.5" y="483.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (116 samples, 1.07%)</title><rect x="133.5" y="467.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (116 samples, 1.07%)</title><rect x="133.5" y="451.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (104 samples, 0.96%)</title><rect x="133.5" y="435.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.5" y="446.0"></text>
</g>
<g>
<title>kevent (94 samples, 0.87%)</title><rect x="134.6" y="419.0" width="10.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="137.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.06%)</title><rect x="144.9" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.04%)</title><rect x="144.9" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.04%)</title><rect x="144.9" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (4 samples, 0.04%)</title><rect x="145.5" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (61 samples, 0.56%)</title><rect x="146.2" y="499.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (59 samples, 0.55%)</title><rect x="146.2" y="483.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (30 samples, 0.28%)</title><rect x="146.2" y="467.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.21%)</title><rect x="146.3" y="451.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.21%)</title><rect x="146.3" y="435.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (20 samples, 0.19%)</title><rect x="146.6" y="419.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (19 samples, 0.18%)</title><rect x="146.7" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (18 samples, 0.17%)</title><rect x="146.8" y="387.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.17%)</title><rect x="146.8" y="371.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.17%)</title><rect x="146.8" y="355.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.12%)</title><rect x="146.8" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.09%)</title><rect x="147.2" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.09%)</title><rect x="147.2" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.09%)</title><rect x="147.2" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.09%)</title><rect x="147.2" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.09%)</title><rect x="147.2" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (10 samples, 0.09%)</title><rect x="147.2" y="243.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="150.2" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.06%)</title><rect x="147.5" y="227.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="150.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="148.4" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="148.4" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="148.9" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (29 samples, 0.27%)</title><rect x="149.5" y="467.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.5" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (28 samples, 0.26%)</title><rect x="149.5" y="451.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (26 samples, 0.24%)</title><rect x="149.7" y="435.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.23%)</title><rect x="149.8" y="419.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.23%)</title><rect x="149.8" y="403.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (23 samples, 0.21%)</title><rect x="149.8" y="387.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (23 samples, 0.21%)</title><rect x="149.8" y="371.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (23 samples, 0.21%)</title><rect x="149.8" y="355.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.8" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (21 samples, 0.19%)</title><rect x="150.0" y="339.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="153.0" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25603] (171 samples, 1.58%)</title><rect x="152.8" y="531.0" width="18.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="155.8" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (171 samples, 1.58%)</title><rect x="152.8" y="515.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (116 samples, 1.07%)</title><rect x="152.8" y="499.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (114 samples, 1.06%)</title><rect x="153.1" y="483.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (114 samples, 1.06%)</title><rect x="153.1" y="467.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (114 samples, 1.06%)</title><rect x="153.1" y="451.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (105 samples, 0.97%)</title><rect x="153.1" y="435.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.1" y="446.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (3 samples, 0.03%)</title><rect x="153.6" y="419.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="156.6" y="430.0"></text>
</g>
<g>
<title>kevent (97 samples, 0.90%)</title><rect x="153.9" y="419.0" width="10.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="156.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (4 samples, 0.04%)</title><rect x="164.6" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.04%)</title><rect x="165.1" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55 samples, 0.51%)</title><rect x="165.5" y="499.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (50 samples, 0.46%)</title><rect x="165.7" y="483.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 0.21%)</title><rect x="165.7" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 0.15%)</title><rect x="165.8" y="451.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.15%)</title><rect x="165.8" y="435.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (14 samples, 0.13%)</title><rect x="166.1" y="419.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (13 samples, 0.12%)</title><rect x="166.2" y="403.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (10 samples, 0.09%)</title><rect x="166.4" y="387.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.09%)</title><rect x="166.4" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.09%)</title><rect x="166.4" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.07%)</title><rect x="166.4" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.06%)</title><rect x="166.6" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.06%)</title><rect x="166.6" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.06%)</title><rect x="166.6" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.06%)</title><rect x="166.6" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="166.6" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.06%)</title><rect x="166.6" y="243.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="169.6" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="166.9" y="227.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="169.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="167.8" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="167.8" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="167.8" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 0.25%)</title><rect x="168.2" y="467.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (27 samples, 0.25%)</title><rect x="168.2" y="451.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (27 samples, 0.25%)</title><rect x="168.2" y="435.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.23%)</title><rect x="168.5" y="419.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.23%)</title><rect x="168.5" y="403.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.22%)</title><rect x="168.5" y="387.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (23 samples, 0.21%)</title><rect x="168.6" y="371.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (23 samples, 0.21%)</title><rect x="168.6" y="355.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.6" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (23 samples, 0.21%)</title><rect x="168.6" y="339.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="171.6" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="171.2" y="483.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="174.2" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=29699] (53 samples, 0.49%)</title><rect x="171.5" y="531.0" width="5.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="174.5" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (53 samples, 0.49%)</title><rect x="171.5" y="515.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (32 samples, 0.30%)</title><rect x="171.5" y="499.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (32 samples, 0.30%)</title><rect x="171.5" y="483.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (32 samples, 0.30%)</title><rect x="171.5" y="467.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (32 samples, 0.30%)</title><rect x="171.5" y="451.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (30 samples, 0.28%)</title><rect x="171.5" y="435.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.5" y="446.0"></text>
</g>
<g>
<title>kevent (28 samples, 0.26%)</title><rect x="171.7" y="419.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="174.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (21 samples, 0.19%)</title><rect x="175.0" y="499.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (21 samples, 0.19%)</title><rect x="175.0" y="483.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 0.14%)</title><rect x="175.0" y="467.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10 samples, 0.09%)</title><rect x="175.1" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10 samples, 0.09%)</title><rect x="175.1" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (10 samples, 0.09%)</title><rect x="175.1" y="419.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (10 samples, 0.09%)</title><rect x="175.1" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (10 samples, 0.09%)</title><rect x="175.1" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.09%)</title><rect x="175.1" y="371.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.09%)</title><rect x="175.1" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.08%)</title><rect x="175.1" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.08%)</title><rect x="175.1" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.08%)</title><rect x="175.1" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.08%)</title><rect x="175.1" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.08%)</title><rect x="175.1" y="275.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.08%)</title><rect x="175.1" y="259.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.1" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="175.1" y="243.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="178.1" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.06%)</title><rect x="175.1" y="227.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="178.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="176.3" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.06%)</title><rect x="176.7" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (6 samples, 0.06%)</title><rect x="176.7" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (6 samples, 0.06%)</title><rect x="176.7" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.06%)</title><rect x="176.7" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.06%)</title><rect x="176.7" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.06%)</title><rect x="176.7" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (6 samples, 0.06%)</title><rect x="176.7" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (6 samples, 0.06%)</title><rect x="176.7" y="355.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.7" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (6 samples, 0.06%)</title><rect x="176.7" y="339.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="179.7" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=33795] (126 samples, 1.17%)</title><rect x="177.3" y="531.0" width="13.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="180.3" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (126 samples, 1.17%)</title><rect x="177.3" y="515.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (76 samples, 0.70%)</title><rect x="177.3" y="499.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (75 samples, 0.69%)</title><rect x="177.4" y="483.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (75 samples, 0.69%)</title><rect x="177.4" y="467.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (75 samples, 0.69%)</title><rect x="177.4" y="451.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (71 samples, 0.66%)</title><rect x="177.4" y="435.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.4" y="446.0"></text>
</g>
<g>
<title>kevent (65 samples, 0.60%)</title><rect x="178.1" y="419.0" width="7.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="181.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (50 samples, 0.46%)</title><rect x="185.6" y="499.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 0.43%)</title><rect x="185.9" y="483.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 0.33%)</title><rect x="185.9" y="467.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 0.29%)</title><rect x="185.9" y="451.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 0.29%)</title><rect x="185.9" y="435.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (31 samples, 0.29%)</title><rect x="185.9" y="419.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (29 samples, 0.27%)</title><rect x="186.2" y="403.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (28 samples, 0.26%)</title><rect x="186.3" y="387.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.26%)</title><rect x="186.3" y="371.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (28 samples, 0.26%)</title><rect x="186.3" y="355.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (28 samples, 0.26%)</title><rect x="186.3" y="339.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.25%)</title><rect x="186.4" y="323.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.25%)</title><rect x="186.4" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 0.24%)</title><rect x="186.4" y="291.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.24%)</title><rect x="186.4" y="275.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.24%)</title><rect x="186.4" y="259.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.4" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (25 samples, 0.23%)</title><rect x="186.5" y="243.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="189.5" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (19 samples, 0.18%)</title><rect x="187.1" y="227.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="190.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="189.4" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.10%)</title><rect x="189.9" y="467.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (11 samples, 0.10%)</title><rect x="189.9" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (10 samples, 0.09%)</title><rect x="190.0" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="190.0" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="190.0" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.07%)</title><rect x="190.1" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (8 samples, 0.07%)</title><rect x="190.1" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (8 samples, 0.07%)</title><rect x="190.1" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.1" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (8 samples, 0.07%)</title><rect x="190.1" y="339.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="193.1" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=37635] (153 samples, 1.42%)</title><rect x="191.1" y="531.0" width="16.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="194.1" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (153 samples, 1.42%)</title><rect x="191.1" y="515.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (106 samples, 0.98%)</title><rect x="191.2" y="499.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (104 samples, 0.96%)</title><rect x="191.4" y="483.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (104 samples, 0.96%)</title><rect x="191.4" y="467.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (104 samples, 0.96%)</title><rect x="191.4" y="451.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (96 samples, 0.89%)</title><rect x="191.4" y="435.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.4" y="446.0"></text>
</g>
<g>
<title>kevent (93 samples, 0.86%)</title><rect x="191.7" y="419.0" width="10.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="194.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4 samples, 0.04%)</title><rect x="201.9" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46 samples, 0.43%)</title><rect x="202.8" y="499.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (44 samples, 0.41%)</title><rect x="202.8" y="483.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 0.20%)</title><rect x="202.8" y="467.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 0.16%)</title><rect x="202.8" y="451.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 0.16%)</title><rect x="202.8" y="435.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (16 samples, 0.15%)</title><rect x="202.9" y="419.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (14 samples, 0.13%)</title><rect x="203.1" y="403.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (14 samples, 0.13%)</title><rect x="203.1" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.13%)</title><rect x="203.1" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.13%)</title><rect x="203.1" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.10%)</title><rect x="203.1" y="339.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.09%)</title><rect x="203.2" y="323.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.09%)</title><rect x="203.2" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.09%)</title><rect x="203.2" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.09%)</title><rect x="203.2" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.09%)</title><rect x="203.2" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="203.3" y="243.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="206.3" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="203.8" y="227.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="206.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="204.6" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 0.20%)</title><rect x="205.2" y="467.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (22 samples, 0.20%)</title><rect x="205.2" y="451.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (22 samples, 0.20%)</title><rect x="205.2" y="435.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.19%)</title><rect x="205.3" y="419.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.19%)</title><rect x="205.3" y="403.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (20 samples, 0.19%)</title><rect x="205.4" y="387.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (20 samples, 0.19%)</title><rect x="205.4" y="371.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (20 samples, 0.19%)</title><rect x="205.4" y="355.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.4" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (19 samples, 0.18%)</title><rect x="205.5" y="339.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="208.5" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=85251] (62 samples, 0.57%)</title><rect x="207.8" y="531.0" width="6.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="210.8" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (62 samples, 0.57%)</title><rect x="207.8" y="515.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (40 samples, 0.37%)</title><rect x="208.1" y="499.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (39 samples, 0.36%)</title><rect x="208.2" y="483.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (39 samples, 0.36%)</title><rect x="208.2" y="467.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (39 samples, 0.36%)</title><rect x="208.2" y="451.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (33 samples, 0.31%)</title><rect x="208.3" y="435.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.3" y="446.0"></text>
</g>
<g>
<title>kevent (30 samples, 0.28%)</title><rect x="208.7" y="419.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="211.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.03%)</title><rect x="211.9" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="211.9" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="211.9" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="211.9" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.9" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="211.9" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (19 samples, 0.18%)</title><rect x="212.5" y="499.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (19 samples, 0.18%)</title><rect x="212.5" y="483.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13 samples, 0.12%)</title><rect x="212.5" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.11%)</title><rect x="212.5" y="451.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.11%)</title><rect x="212.5" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (12 samples, 0.11%)</title><rect x="212.5" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (12 samples, 0.11%)</title><rect x="212.5" y="403.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (11 samples, 0.10%)</title><rect x="212.6" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.10%)</title><rect x="212.6" y="371.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.10%)</title><rect x="212.6" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.10%)</title><rect x="212.6" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.09%)</title><rect x="212.7" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.09%)</title><rect x="212.7" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.09%)</title><rect x="212.7" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.09%)</title><rect x="212.7" y="275.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.09%)</title><rect x="212.7" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (10 samples, 0.09%)</title><rect x="212.7" y="243.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="215.7" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.06%)</title><rect x="212.9" y="227.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="215.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.06%)</title><rect x="213.9" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (6 samples, 0.06%)</title><rect x="213.9" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (6 samples, 0.06%)</title><rect x="213.9" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="213.9" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="213.9" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.05%)</title><rect x="213.9" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.05%)</title><rect x="213.9" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (5 samples, 0.05%)</title><rect x="213.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.9" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 0.05%)</title><rect x="213.9" y="339.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="216.9" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=26371] (157 samples, 1.45%)</title><rect x="214.5" y="531.0" width="17.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="217.5" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (157 samples, 1.45%)</title><rect x="214.5" y="515.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (98 samples, 0.91%)</title><rect x="214.9" y="499.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (98 samples, 0.91%)</title><rect x="214.9" y="483.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (98 samples, 0.91%)</title><rect x="214.9" y="467.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (98 samples, 0.91%)</title><rect x="214.9" y="451.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (95 samples, 0.88%)</title><rect x="214.9" y="435.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.9" y="446.0"></text>
</g>
<g>
<title>kevent (87 samples, 0.81%)</title><rect x="215.7" y="419.0" width="9.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="218.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56 samples, 0.52%)</title><rect x="225.6" y="499.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (55 samples, 0.51%)</title><rect x="225.7" y="483.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (30 samples, 0.28%)</title><rect x="225.7" y="467.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.20%)</title><rect x="225.7" y="451.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.20%)</title><rect x="225.7" y="435.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (22 samples, 0.20%)</title><rect x="225.7" y="419.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (19 samples, 0.18%)</title><rect x="226.0" y="403.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (18 samples, 0.17%)</title><rect x="226.1" y="387.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.17%)</title><rect x="226.1" y="371.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.17%)</title><rect x="226.1" y="355.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.12%)</title><rect x="226.1" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.10%)</title><rect x="226.3" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.10%)</title><rect x="226.3" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.10%)</title><rect x="226.3" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.10%)</title><rect x="226.3" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.10%)</title><rect x="226.3" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (11 samples, 0.10%)</title><rect x="226.3" y="243.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="229.3" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.09%)</title><rect x="226.5" y="227.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="229.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="227.7" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="227.7" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="228.4" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 0.23%)</title><rect x="229.0" y="467.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (25 samples, 0.23%)</title><rect x="229.0" y="451.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (25 samples, 0.23%)</title><rect x="229.0" y="435.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="229.0" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="229.0" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.19%)</title><rect x="229.4" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.19%)</title><rect x="229.4" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.18%)</title><rect x="229.5" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (19 samples, 0.18%)</title><rect x="229.5" y="371.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (18 samples, 0.17%)</title><rect x="229.6" y="355.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.6" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (17 samples, 0.16%)</title><rect x="229.7" y="339.0" width="1.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="232.7" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=46595] (93 samples, 0.86%)</title><rect x="231.7" y="531.0" width="10.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="234.7" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 0.86%)</title><rect x="231.7" y="515.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (50 samples, 0.46%)</title><rect x="231.8" y="499.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (48 samples, 0.44%)</title><rect x="232.0" y="483.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (48 samples, 0.44%)</title><rect x="232.0" y="467.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (48 samples, 0.44%)</title><rect x="232.0" y="451.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (41 samples, 0.38%)</title><rect x="232.1" y="435.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.1" y="446.0"></text>
</g>
<g>
<title>kevent (36 samples, 0.33%)</title><rect x="232.7" y="419.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="235.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.03%)</title><rect x="236.6" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="236.6" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="236.6" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="236.6" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="236.6" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (42 samples, 0.39%)</title><rect x="237.3" y="499.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40 samples, 0.37%)</title><rect x="237.5" y="483.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.19%)</title><rect x="237.5" y="467.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 0.17%)</title><rect x="237.5" y="451.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 0.17%)</title><rect x="237.5" y="435.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (18 samples, 0.17%)</title><rect x="237.5" y="419.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (18 samples, 0.17%)</title><rect x="237.5" y="403.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (18 samples, 0.17%)</title><rect x="237.5" y="387.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.17%)</title><rect x="237.5" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.17%)</title><rect x="237.5" y="355.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (18 samples, 0.17%)</title><rect x="237.5" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.16%)</title><rect x="237.6" y="323.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.16%)</title><rect x="237.6" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.16%)</title><rect x="237.6" y="291.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.16%)</title><rect x="237.6" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.16%)</title><rect x="237.6" y="259.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (17 samples, 0.16%)</title><rect x="237.6" y="243.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="240.6" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (12 samples, 0.11%)</title><rect x="238.0" y="227.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="241.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="239.4" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 0.18%)</title><rect x="239.8" y="467.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (19 samples, 0.18%)</title><rect x="239.8" y="451.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (19 samples, 0.18%)</title><rect x="239.8" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.16%)</title><rect x="240.0" y="419.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.16%)</title><rect x="240.0" y="403.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.15%)</title><rect x="240.0" y="387.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (16 samples, 0.15%)</title><rect x="240.0" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (16 samples, 0.15%)</title><rect x="240.0" y="355.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.0" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (15 samples, 0.14%)</title><rect x="240.1" y="339.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="243.1" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=30723] (67 samples, 0.62%)</title><rect x="241.9" y="531.0" width="7.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="244.9" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67 samples, 0.62%)</title><rect x="241.9" y="515.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (31 samples, 0.29%)</title><rect x="241.9" y="499.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (31 samples, 0.29%)</title><rect x="241.9" y="483.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (31 samples, 0.29%)</title><rect x="241.9" y="467.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (31 samples, 0.29%)</title><rect x="241.9" y="451.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (31 samples, 0.29%)</title><rect x="241.9" y="435.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.9" y="446.0"></text>
</g>
<g>
<title>kevent (30 samples, 0.28%)</title><rect x="242.0" y="419.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="245.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 0.33%)</title><rect x="245.2" y="499.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35 samples, 0.32%)</title><rect x="245.2" y="483.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 0.21%)</title><rect x="245.2" y="467.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.20%)</title><rect x="245.2" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.20%)</title><rect x="245.2" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (22 samples, 0.20%)</title><rect x="245.2" y="419.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (21 samples, 0.19%)</title><rect x="245.3" y="403.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (21 samples, 0.19%)</title><rect x="245.3" y="387.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.19%)</title><rect x="245.3" y="371.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 0.19%)</title><rect x="245.3" y="355.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (21 samples, 0.19%)</title><rect x="245.3" y="339.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.19%)</title><rect x="245.3" y="323.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.19%)</title><rect x="245.3" y="307.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.19%)</title><rect x="245.3" y="291.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.19%)</title><rect x="245.3" y="275.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.19%)</title><rect x="245.3" y="259.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (17 samples, 0.16%)</title><rect x="245.7" y="243.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="248.7" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (12 samples, 0.11%)</title><rect x="246.2" y="227.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.11%)</title><rect x="247.7" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (12 samples, 0.11%)</title><rect x="247.7" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (12 samples, 0.11%)</title><rect x="247.7" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.10%)</title><rect x="247.9" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.10%)</title><rect x="247.9" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.09%)</title><rect x="248.0" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (10 samples, 0.09%)</title><rect x="248.0" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (10 samples, 0.09%)</title><rect x="248.0" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.0" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (9 samples, 0.08%)</title><rect x="248.1" y="339.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="251.1" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=36867] (190 samples, 1.76%)</title><rect x="249.2" y="531.0" width="20.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="252.2" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (190 samples, 1.76%)</title><rect x="249.2" y="515.0" width="20.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (130 samples, 1.20%)</title><rect x="249.2" y="499.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (129 samples, 1.19%)</title><rect x="249.3" y="483.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (129 samples, 1.19%)</title><rect x="249.3" y="467.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (128 samples, 1.18%)</title><rect x="249.4" y="451.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (120 samples, 1.11%)</title><rect x="249.4" y="435.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.4" y="446.0"></text>
</g>
<g>
<title>kevent (113 samples, 1.05%)</title><rect x="250.1" y="419.0" width="12.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="253.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (60 samples, 0.56%)</title><rect x="263.4" y="499.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (59 samples, 0.55%)</title><rect x="263.5" y="483.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 0.29%)</title><rect x="263.5" y="467.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 0.14%)</title><rect x="263.7" y="451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 0.13%)</title><rect x="263.8" y="435.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (14 samples, 0.13%)</title><rect x="263.8" y="419.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (14 samples, 0.13%)</title><rect x="263.8" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (12 samples, 0.11%)</title><rect x="264.0" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.11%)</title><rect x="264.0" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.11%)</title><rect x="264.0" y="355.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.10%)</title><rect x="264.0" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.08%)</title><rect x="264.2" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.08%)</title><rect x="264.2" y="307.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.08%)</title><rect x="264.2" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.08%)</title><rect x="264.2" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.08%)</title><rect x="264.2" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="264.6" y="243.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="267.6" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="264.7" y="227.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="267.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.06%)</title><rect x="265.7" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="265.9" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="265.9" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="266.0" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="266.3" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="266.3" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (28 samples, 0.26%)</title><rect x="266.9" y="467.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (28 samples, 0.26%)</title><rect x="266.9" y="451.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (28 samples, 0.26%)</title><rect x="266.9" y="435.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="266.9" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="266.9" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.23%)</title><rect x="267.2" y="419.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.23%)</title><rect x="267.2" y="403.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.22%)</title><rect x="267.2" y="387.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (24 samples, 0.22%)</title><rect x="267.2" y="371.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (24 samples, 0.22%)</title><rect x="267.2" y="355.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.2" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (19 samples, 0.18%)</title><rect x="267.7" y="339.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="270.7" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=84483] (138 samples, 1.28%)</title><rect x="269.9" y="531.0" width="15.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="272.9" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (138 samples, 1.28%)</title><rect x="269.9" y="515.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (86 samples, 0.80%)</title><rect x="270.0" y="499.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (85 samples, 0.79%)</title><rect x="270.1" y="483.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (85 samples, 0.79%)</title><rect x="270.1" y="467.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (85 samples, 0.79%)</title><rect x="270.1" y="451.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (77 samples, 0.71%)</title><rect x="270.1" y="435.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.1" y="446.0"></text>
</g>
<g>
<title>kevent (77 samples, 0.71%)</title><rect x="270.1" y="419.0" width="8.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="273.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.04%)</title><rect x="279.0" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (51 samples, 0.47%)</title><rect x="279.4" y="499.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (51 samples, 0.47%)</title><rect x="279.4" y="483.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (38 samples, 0.35%)</title><rect x="279.4" y="467.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34 samples, 0.31%)</title><rect x="279.4" y="451.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34 samples, 0.31%)</title><rect x="279.4" y="435.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (31 samples, 0.29%)</title><rect x="279.7" y="419.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (30 samples, 0.28%)</title><rect x="279.9" y="403.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (30 samples, 0.28%)</title><rect x="279.9" y="387.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.28%)</title><rect x="279.9" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (30 samples, 0.28%)</title><rect x="279.9" y="355.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (28 samples, 0.26%)</title><rect x="279.9" y="339.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (25 samples, 0.23%)</title><rect x="280.2" y="323.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.23%)</title><rect x="280.2" y="307.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.23%)</title><rect x="280.2" y="291.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.23%)</title><rect x="280.2" y="275.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 0.23%)</title><rect x="280.2" y="259.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (23 samples, 0.21%)</title><rect x="280.4" y="243.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="283.4" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (17 samples, 0.16%)</title><rect x="280.9" y="227.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 0.12%)</title><rect x="283.6" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (13 samples, 0.12%)</title><rect x="283.6" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (12 samples, 0.11%)</title><rect x="283.7" y="435.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.10%)</title><rect x="283.8" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.10%)</title><rect x="283.8" y="403.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.09%)</title><rect x="283.9" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (10 samples, 0.09%)</title><rect x="283.9" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (10 samples, 0.09%)</title><rect x="283.9" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.9" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (10 samples, 0.09%)</title><rect x="283.9" y="339.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="286.9" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=31235] (91 samples, 0.84%)</title><rect x="285.0" y="531.0" width="9.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="288.0" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (89 samples, 0.82%)</title><rect x="285.2" y="515.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (58 samples, 0.54%)</title><rect x="285.6" y="499.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (58 samples, 0.54%)</title><rect x="285.6" y="483.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (58 samples, 0.54%)</title><rect x="285.6" y="467.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (58 samples, 0.54%)</title><rect x="285.6" y="451.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (53 samples, 0.49%)</title><rect x="285.8" y="435.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.8" y="446.0"></text>
</g>
<g>
<title>kevent (47 samples, 0.43%)</title><rect x="286.4" y="419.0" width="5.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="289.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27 samples, 0.25%)</title><rect x="292.0" y="499.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27 samples, 0.25%)</title><rect x="292.0" y="483.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.19%)</title><rect x="292.0" y="467.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 0.15%)</title><rect x="292.2" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.15%)</title><rect x="292.2" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (16 samples, 0.15%)</title><rect x="292.2" y="419.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (15 samples, 0.14%)</title><rect x="292.3" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (15 samples, 0.14%)</title><rect x="292.3" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.14%)</title><rect x="292.3" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.14%)</title><rect x="292.3" y="355.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.12%)</title><rect x="292.3" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.10%)</title><rect x="292.5" y="323.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.10%)</title><rect x="292.5" y="307.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.10%)</title><rect x="292.5" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.10%)</title><rect x="292.5" y="275.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.10%)</title><rect x="292.5" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (8 samples, 0.07%)</title><rect x="292.9" y="243.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="295.9" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="293.2" y="227.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="296.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.06%)</title><rect x="294.3" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (6 samples, 0.06%)</title><rect x="294.3" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (6 samples, 0.06%)</title><rect x="294.3" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="294.4" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.05%)</title><rect x="294.4" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.05%)</title><rect x="294.4" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.05%)</title><rect x="294.4" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (5 samples, 0.05%)</title><rect x="294.4" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.4" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 0.05%)</title><rect x="294.4" y="339.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="297.4" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=36355] (194 samples, 1.80%)</title><rect x="294.9" y="531.0" width="21.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="297.9" y="542.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (194 samples, 1.80%)</title><rect x="294.9" y="515.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.9" y="526.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (124 samples, 1.15%)</title><rect x="295.0" y="499.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (121 samples, 1.12%)</title><rect x="295.3" y="483.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (121 samples, 1.12%)</title><rect x="295.3" y="467.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (120 samples, 1.11%)</title><rect x="295.4" y="451.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (112 samples, 1.04%)</title><rect x="295.4" y="435.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.4" y="446.0"></text>
</g>
<g>
<title>kevent (105 samples, 0.97%)</title><rect x="296.1" y="419.0" width="11.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="299.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4 samples, 0.04%)</title><rect x="307.6" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="307.7" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (3 samples, 0.03%)</title><rect x="308.0" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.0" y="446.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.03%)</title><rect x="308.0" y="419.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="311.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (69 samples, 0.64%)</title><rect x="308.6" y="499.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 0.60%)</title><rect x="308.7" y="483.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 0.39%)</title><rect x="308.8" y="467.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 0.29%)</title><rect x="308.9" y="451.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 0.29%)</title><rect x="308.9" y="435.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (31 samples, 0.29%)</title><rect x="308.9" y="419.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (30 samples, 0.28%)</title><rect x="309.0" y="403.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (29 samples, 0.27%)</title><rect x="309.1" y="387.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (29 samples, 0.27%)</title><rect x="309.1" y="371.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (29 samples, 0.27%)</title><rect x="309.1" y="355.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (21 samples, 0.19%)</title><rect x="309.1" y="339.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.18%)</title><rect x="309.3" y="323.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.18%)</title><rect x="309.3" y="307.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.18%)</title><rect x="309.3" y="291.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.18%)</title><rect x="309.3" y="275.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.18%)</title><rect x="309.3" y="259.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (18 samples, 0.17%)</title><rect x="309.3" y="243.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="312.3" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (15 samples, 0.14%)</title><rect x="309.7" y="227.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="312.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.06%)</title><rect x="311.5" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="311.5" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="311.5" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.04%)</title><rect x="312.3" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="312.3" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="313.1" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="313.1" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 0.20%)</title><rect x="313.4" y="467.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (22 samples, 0.20%)</title><rect x="313.4" y="451.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (21 samples, 0.19%)</title><rect x="313.5" y="435.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.19%)</title><rect x="313.6" y="419.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.19%)</title><rect x="313.6" y="403.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.18%)</title><rect x="313.7" y="387.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (19 samples, 0.18%)</title><rect x="313.7" y="371.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (19 samples, 0.18%)</title><rect x="313.7" y="355.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.7" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (17 samples, 0.16%)</title><rect x="313.9" y="339.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="316.9" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="315.8" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="318.8" y="494.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="315.8" y="467.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="318.8" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=83971] (133 samples, 1.23%)</title><rect x="316.1" y="531.0" width="14.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="319.1" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (133 samples, 1.23%)</title><rect x="316.1" y="515.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (77 samples, 0.71%)</title><rect x="316.2" y="499.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (77 samples, 0.71%)</title><rect x="316.2" y="483.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (77 samples, 0.71%)</title><rect x="316.2" y="467.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (77 samples, 0.71%)</title><rect x="316.2" y="451.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (75 samples, 0.69%)</title><rect x="316.2" y="435.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.2" y="446.0"></text>
</g>
<g>
<title>kevent (71 samples, 0.66%)</title><rect x="316.7" y="419.0" width="7.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="319.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55 samples, 0.51%)</title><rect x="324.6" y="499.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 0.49%)</title><rect x="324.8" y="483.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35 samples, 0.32%)</title><rect x="324.8" y="467.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 0.27%)</title><rect x="324.8" y="451.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 0.27%)</title><rect x="324.8" y="435.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (28 samples, 0.26%)</title><rect x="325.0" y="419.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (28 samples, 0.26%)</title><rect x="325.0" y="403.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (26 samples, 0.24%)</title><rect x="325.2" y="387.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.24%)</title><rect x="325.2" y="371.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.24%)</title><rect x="325.2" y="355.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (23 samples, 0.21%)</title><rect x="325.2" y="339.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.20%)</title><rect x="325.3" y="323.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.20%)</title><rect x="325.3" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.20%)</title><rect x="325.3" y="291.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.19%)</title><rect x="325.4" y="275.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.19%)</title><rect x="325.4" y="259.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.4" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (19 samples, 0.18%)</title><rect x="325.6" y="243.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="328.6" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (13 samples, 0.12%)</title><rect x="326.0" y="227.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="329.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="328.0" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.17%)</title><rect x="328.7" y="467.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (18 samples, 0.17%)</title><rect x="328.7" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (17 samples, 0.16%)</title><rect x="328.8" y="435.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="328.8" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="328.8" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.13%)</title><rect x="329.1" y="419.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.13%)</title><rect x="329.1" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.12%)</title><rect x="329.2" y="387.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.12%)</title><rect x="329.2" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (13 samples, 0.12%)</title><rect x="329.2" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.2" y="366.0"></text>
</g>
<g>
<title>rpc_errlist (12 samples, 0.11%)</title><rect x="329.3" y="339.0" width="1.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="332.3" y="350.0"></text>
</g>
<g>
<title>[RMI TCP Connection(1)-127.0.0.1 tid=80131] (4 samples, 0.04%)</title><rect x="330.6" y="531.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="333.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.04%)</title><rect x="330.6" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.04%)</title><rect x="330.6" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.04%)</title><rect x="330.6" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.6" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (4 samples, 0.04%)</title><rect x="330.6" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.6" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.04%)</title><rect x="330.6" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.6" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$102/2037680639.run (4 samples, 0.04%)</title><rect x="330.6" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.6" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (4 samples, 0.04%)</title><rect x="330.6" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.6" y="430.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (4 samples, 0.04%)</title><rect x="330.6" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.6" y="414.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (4 samples, 0.04%)</title><rect x="330.6" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.6" y="398.0"></text>
</g>
<g>
<title>[worker tid=39943] (553 samples, 5.12%)</title><rect x="331.1" y="531.0" width="60.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="334.1" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (551 samples, 5.10%)</title><rect x="331.3" y="515.0" width="60.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.3" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (551 samples, 5.10%)</title><rect x="331.3" y="499.0" width="60.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.3" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (551 samples, 5.10%)</title><rect x="331.3" y="483.0" width="60.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.3" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.03%)</title><rect x="331.5" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="331.5" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.03%)</title><rect x="331.5" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (90 samples, 0.83%)</title><rect x="331.8" y="467.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (90 samples, 0.83%)</title><rect x="331.8" y="451.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (73 samples, 0.68%)</title><rect x="331.8" y="435.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.64%)</title><rect x="332.3" y="419.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (68 samples, 0.63%)</title><rect x="332.4" y="403.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.4" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (65 samples, 0.60%)</title><rect x="332.7" y="387.0" width="7.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="335.7" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (63 samples, 0.58%)</title><rect x="332.9" y="371.0" width="6.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="335.9" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (57 samples, 0.53%)</title><rect x="333.1" y="355.0" width="6.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="336.1" y="366.0"></text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.03%)</title><rect x="339.4" y="355.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="342.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.04%)</title><rect x="339.8" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.04%)</title><rect x="339.8" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="339.8" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.03%)</title><rect x="339.8" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.03%)</title><rect x="339.8" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.12%)</title><rect x="340.2" y="435.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.12%)</title><rect x="340.2" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.12%)</title><rect x="340.2" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.12%)</title><rect x="340.2" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.12%)</title><rect x="340.2" y="371.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.2" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (13 samples, 0.12%)</title><rect x="340.2" y="355.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="343.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.09%)</title><rect x="340.6" y="339.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="343.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (456 samples, 4.22%)</title><rect x="341.7" y="467.0" width="49.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.7" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (456 samples, 4.22%)</title><rect x="341.7" y="451.0" width="49.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="462.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (81 samples, 0.75%)</title><rect x="341.7" y="435.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (80 samples, 0.74%)</title><rect x="341.7" y="419.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.05%)</title><rect x="341.7" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="341.9" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="341.9" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="341.9" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="341.9" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="341.9" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (75 samples, 0.69%)</title><rect x="342.2" y="403.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (75 samples, 0.69%)</title><rect x="342.2" y="387.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (75 samples, 0.69%)</title><rect x="342.2" y="371.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (75 samples, 0.69%)</title><rect x="342.2" y="355.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (75 samples, 0.69%)</title><rect x="342.2" y="339.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="342.2" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="342.2" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (72 samples, 0.67%)</title><rect x="342.5" y="323.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (72 samples, 0.67%)</title><rect x="342.5" y="307.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (65 samples, 0.60%)</title><rect x="342.8" y="291.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (65 samples, 0.60%)</title><rect x="342.8" y="275.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (65 samples, 0.60%)</title><rect x="342.8" y="259.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.8" y="270.0"></text>
</g>
<g>
<title>write (63 samples, 0.58%)</title><rect x="343.0" y="243.0" width="6.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="346.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="349.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.03%)</title><rect x="350.0" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (172 samples, 1.59%)</title><rect x="350.5" y="435.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (172 samples, 1.59%)</title><rect x="350.5" y="419.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (172 samples, 1.59%)</title><rect x="350.5" y="403.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (171 samples, 1.58%)</title><rect x="350.6" y="387.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.6" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (162 samples, 1.50%)</title><rect x="350.6" y="371.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.6" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (162 samples, 1.50%)</title><rect x="350.6" y="355.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.6" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (162 samples, 1.50%)</title><rect x="350.6" y="339.0" width="17.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="353.6" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (161 samples, 1.49%)</title><rect x="350.7" y="323.0" width="17.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="353.7" y="334.0"></text>
</g>
<g>
<title>free_tiny (3 samples, 0.03%)</title><rect x="350.7" y="307.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="353.7" y="318.0"></text>
</g>
<g>
<title>tiny_free_no_lock (3 samples, 0.03%)</title><rect x="350.7" y="291.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="353.7" y="302.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (153 samples, 1.42%)</title><rect x="351.5" y="307.0" width="16.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="354.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (153 samples, 1.42%)</title><rect x="351.5" y="291.0" width="16.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="354.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (153 samples, 1.42%)</title><rect x="351.5" y="275.0" width="16.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="354.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (146 samples, 1.35%)</title><rect x="351.5" y="259.0" width="15.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="354.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (145 samples, 1.34%)</title><rect x="351.5" y="243.0" width="15.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="354.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (41 samples, 0.38%)</title><rect x="351.9" y="227.0" width="4.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="354.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (38 samples, 0.35%)</title><rect x="352.2" y="211.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="355.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (36 samples, 0.33%)</title><rect x="352.4" y="195.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="355.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (34 samples, 0.31%)</title><rect x="352.4" y="179.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="355.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (32 samples, 0.30%)</title><rect x="352.6" y="163.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="355.6" y="174.0"></text>
</g>
<g>
<title>write (30 samples, 0.28%)</title><rect x="352.8" y="147.0" width="3.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="355.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (12 samples, 0.11%)</title><rect x="356.6" y="227.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="359.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="356.6" y="211.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="359.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="356.6" y="195.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="359.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (10 samples, 0.09%)</title><rect x="356.8" y="179.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (10 samples, 0.09%)</title><rect x="356.8" y="163.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="359.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (7 samples, 0.06%)</title><rect x="357.2" y="147.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="360.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (55 samples, 0.51%)</title><rect x="358.3" y="227.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="361.3" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (46 samples, 0.43%)</title><rect x="359.2" y="211.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="362.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (27 samples, 0.25%)</title><rect x="364.3" y="227.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="367.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 0.25%)</title><rect x="364.3" y="211.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="367.3" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (25 samples, 0.23%)</title><rect x="364.5" y="195.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="367.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.03%)</title><rect x="367.4" y="259.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="370.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (7 samples, 0.06%)</title><rect x="368.5" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.04%)</title><rect x="368.5" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.04%)</title><rect x="368.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.03%)</title><rect x="369.0" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (203 samples, 1.88%)</title><rect x="369.3" y="435.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.3" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (203 samples, 1.88%)</title><rect x="369.3" y="419.0" width="22.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.3" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (202 samples, 1.87%)</title><rect x="369.4" y="403.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.4" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (202 samples, 1.87%)</title><rect x="369.4" y="387.0" width="22.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.4" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (202 samples, 1.87%)</title><rect x="369.4" y="371.0" width="22.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.4" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (124 samples, 1.15%)</title><rect x="369.4" y="355.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (122 samples, 1.13%)</title><rect x="369.6" y="339.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (122 samples, 1.13%)</title><rect x="369.6" y="323.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (118 samples, 1.09%)</title><rect x="369.7" y="307.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (118 samples, 1.09%)</title><rect x="369.7" y="291.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (117 samples, 1.08%)</title><rect x="369.8" y="275.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (117 samples, 1.08%)</title><rect x="369.8" y="259.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (117 samples, 1.08%)</title><rect x="369.8" y="243.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.8" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (108 samples, 1.00%)</title><rect x="370.8" y="227.0" width="11.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="373.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (3 samples, 0.03%)</title><rect x="382.6" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.03%)</title><rect x="382.9" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="385.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.04%)</title><rect x="383.3" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="383.4" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="383.4" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="383.4" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (66 samples, 0.61%)</title><rect x="384.0" y="355.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (47 samples, 0.43%)</title><rect x="384.0" y="339.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.0" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (47 samples, 0.43%)</title><rect x="384.0" y="323.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.0" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (47 samples, 0.43%)</title><rect x="384.0" y="307.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (47 samples, 0.43%)</title><rect x="384.0" y="291.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (42 samples, 0.39%)</title><rect x="384.4" y="275.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (42 samples, 0.39%)</title><rect x="384.4" y="259.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (35 samples, 0.32%)</title><rect x="384.7" y="243.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (35 samples, 0.32%)</title><rect x="384.7" y="227.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (35 samples, 0.32%)</title><rect x="384.7" y="211.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.7" y="222.0"></text>
</g>
<g>
<title>write (35 samples, 0.32%)</title><rect x="384.7" y="195.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="387.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="388.5" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (19 samples, 0.18%)</title><rect x="389.2" y="339.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.2" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (19 samples, 0.18%)</title><rect x="389.2" y="323.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.2" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (15 samples, 0.14%)</title><rect x="389.2" y="307.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="392.2" y="318.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.04%)</title><rect x="389.7" y="291.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="392.7" y="302.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.03%)</title><rect x="390.2" y="291.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="393.2" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.03%)</title><rect x="390.5" y="291.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="393.5" y="302.0"></text>
</g>
<g>
<title>[worker tid=52739] (526 samples, 4.87%)</title><rect x="391.5" y="531.0" width="57.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="394.5" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (525 samples, 4.86%)</title><rect x="391.6" y="515.0" width="57.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.6" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (525 samples, 4.86%)</title><rect x="391.6" y="499.0" width="57.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.6" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (525 samples, 4.86%)</title><rect x="391.6" y="483.0" width="57.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.6" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (94 samples, 0.87%)</title><rect x="391.6" y="467.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (94 samples, 0.87%)</title><rect x="391.6" y="451.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (71 samples, 0.66%)</title><rect x="391.6" y="435.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="391.6" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="391.6" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="391.6" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="391.6" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="391.6" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (68 samples, 0.63%)</title><rect x="391.9" y="419.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (68 samples, 0.63%)</title><rect x="391.9" y="403.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.9" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (65 samples, 0.60%)</title><rect x="392.2" y="387.0" width="7.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="395.2" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (62 samples, 0.57%)</title><rect x="392.2" y="371.0" width="6.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="395.2" y="382.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (4 samples, 0.04%)</title><rect x="392.2" y="355.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="395.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (56 samples, 0.52%)</title><rect x="392.7" y="355.0" width="6.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="395.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.07%)</title><rect x="399.4" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.07%)</title><rect x="399.4" y="419.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.06%)</title><rect x="399.4" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.05%)</title><rect x="399.5" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.05%)</title><rect x="399.5" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (3 samples, 0.03%)</title><rect x="399.5" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.13%)</title><rect x="400.3" y="435.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.13%)</title><rect x="400.3" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.13%)</title><rect x="400.3" y="403.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.13%)</title><rect x="400.3" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.13%)</title><rect x="400.3" y="371.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.3" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (13 samples, 0.12%)</title><rect x="400.4" y="355.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="403.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (12 samples, 0.11%)</title><rect x="400.4" y="339.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="403.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (431 samples, 3.99%)</title><rect x="401.8" y="467.0" width="47.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.8" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (431 samples, 3.99%)</title><rect x="401.8" y="451.0" width="47.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.8" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (63 samples, 0.58%)</title><rect x="401.8" y="435.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (61 samples, 0.56%)</title><rect x="402.0" y="419.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.04%)</title><rect x="402.0" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 0.53%)</title><rect x="402.4" y="403.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 0.53%)</title><rect x="402.4" y="387.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (57 samples, 0.53%)</title><rect x="402.4" y="371.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (57 samples, 0.53%)</title><rect x="402.4" y="355.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (57 samples, 0.53%)</title><rect x="402.4" y="339.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.51%)</title><rect x="402.6" y="323.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.51%)</title><rect x="402.6" y="307.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (52 samples, 0.48%)</title><rect x="402.7" y="291.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (52 samples, 0.48%)</title><rect x="402.7" y="275.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (52 samples, 0.48%)</title><rect x="402.7" y="259.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.7" y="270.0"></text>
</g>
<g>
<title>write (51 samples, 0.47%)</title><rect x="402.8" y="243.0" width="5.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="405.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (156 samples, 1.44%)</title><rect x="408.7" y="435.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (156 samples, 1.44%)</title><rect x="408.7" y="419.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (156 samples, 1.44%)</title><rect x="408.7" y="403.0" width="17.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (156 samples, 1.44%)</title><rect x="408.7" y="387.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (150 samples, 1.39%)</title><rect x="408.8" y="371.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.8" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (150 samples, 1.39%)</title><rect x="408.8" y="355.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.8" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (149 samples, 1.38%)</title><rect x="408.9" y="339.0" width="16.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="411.9" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (149 samples, 1.38%)</title><rect x="408.9" y="323.0" width="16.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="411.9" y="334.0"></text>
</g>
<g>
<title>operator new(unsigned long) (5 samples, 0.05%)</title><rect x="409.7" y="307.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="412.7" y="318.0"></text>
</g>
<g>
<title>malloc (5 samples, 0.05%)</title><rect x="409.7" y="291.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="412.7" y="302.0"></text>
</g>
<g>
<title>malloc_zone_malloc (5 samples, 0.05%)</title><rect x="409.7" y="275.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="412.7" y="286.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="409.9" y="259.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="412.9" y="270.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="409.9" y="243.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="412.9" y="254.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (137 samples, 1.27%)</title><rect x="410.2" y="307.0" width="15.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="413.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (137 samples, 1.27%)</title><rect x="410.2" y="291.0" width="15.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="413.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (135 samples, 1.25%)</title><rect x="410.2" y="275.0" width="14.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="413.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (130 samples, 1.20%)</title><rect x="410.4" y="259.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="413.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (129 samples, 1.19%)</title><rect x="410.4" y="243.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="413.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (34 samples, 0.31%)</title><rect x="410.7" y="227.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="413.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (34 samples, 0.31%)</title><rect x="410.7" y="211.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="413.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (34 samples, 0.31%)</title><rect x="410.7" y="195.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="413.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (30 samples, 0.28%)</title><rect x="410.8" y="179.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="413.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (28 samples, 0.26%)</title><rect x="411.0" y="163.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="414.0" y="174.0"></text>
</g>
<g>
<title>write (28 samples, 0.26%)</title><rect x="411.0" y="147.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="414.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (6 samples, 0.06%)</title><rect x="414.5" y="227.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="417.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="414.5" y="211.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="417.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="414.5" y="195.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="417.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="414.5" y="179.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="417.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.05%)</title><rect x="414.6" y="163.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="417.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (4 samples, 0.04%)</title><rect x="414.7" y="147.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="417.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (52 samples, 0.48%)</title><rect x="415.4" y="227.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="418.4" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (43 samples, 0.40%)</title><rect x="416.0" y="211.0" width="4.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="419.0" y="222.0"></text>
</g>
<g>
<title>std::__1::condition_variable::wait(std::__1::unique_lock&lt;std::__1::mutex&gt;&amp;) (3 samples, 0.03%)</title><rect x="420.7" y="211.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="423.7" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="420.7" y="195.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="423.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (31 samples, 0.29%)</title><rect x="421.1" y="227.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="424.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (31 samples, 0.29%)</title><rect x="421.1" y="211.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="424.1" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (29 samples, 0.27%)</title><rect x="421.2" y="195.0" width="3.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="424.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (3 samples, 0.03%)</title><rect x="425.4" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (212 samples, 1.96%)</title><rect x="425.8" y="435.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.8" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (212 samples, 1.96%)</title><rect x="425.8" y="419.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.8" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (211 samples, 1.95%)</title><rect x="425.9" y="403.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.9" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (209 samples, 1.93%)</title><rect x="426.1" y="387.0" width="22.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (209 samples, 1.93%)</title><rect x="426.1" y="371.0" width="22.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (128 samples, 1.18%)</title><rect x="426.1" y="355.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.1" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (124 samples, 1.15%)</title><rect x="426.5" y="339.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (124 samples, 1.15%)</title><rect x="426.5" y="323.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (118 samples, 1.09%)</title><rect x="427.0" y="307.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (118 samples, 1.09%)</title><rect x="427.0" y="291.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (116 samples, 1.07%)</title><rect x="427.1" y="275.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (116 samples, 1.07%)</title><rect x="427.1" y="259.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (116 samples, 1.07%)</title><rect x="427.1" y="243.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.1" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (109 samples, 1.01%)</title><rect x="427.8" y="227.0" width="11.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="430.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.07%)</title><rect x="440.1" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="440.2" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="440.6" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="441.2" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="441.2" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="441.2" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (67 samples, 0.62%)</title><rect x="441.5" y="355.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (40 samples, 0.37%)</title><rect x="441.5" y="339.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (40 samples, 0.37%)</title><rect x="441.5" y="323.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (40 samples, 0.37%)</title><rect x="441.5" y="307.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (40 samples, 0.37%)</title><rect x="441.5" y="291.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="441.5" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="441.5" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (36 samples, 0.33%)</title><rect x="441.8" y="275.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (36 samples, 0.33%)</title><rect x="441.8" y="259.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (33 samples, 0.31%)</title><rect x="441.9" y="243.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (33 samples, 0.31%)</title><rect x="441.9" y="227.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (33 samples, 0.31%)</title><rect x="441.9" y="211.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.9" y="222.0"></text>
</g>
<g>
<title>write (32 samples, 0.30%)</title><rect x="442.0" y="195.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="445.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (27 samples, 0.25%)</title><rect x="445.9" y="339.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.9" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (27 samples, 0.25%)</title><rect x="445.9" y="323.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.9" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (16 samples, 0.15%)</title><rect x="446.3" y="307.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="449.3" y="318.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.03%)</title><rect x="446.7" y="291.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="449.7" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.06%)</title><rect x="447.3" y="291.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.3" y="302.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.03%)</title><rect x="447.3" y="275.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.3" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (4 samples, 0.04%)</title><rect x="447.6" y="275.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="450.6" y="286.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.04%)</title><rect x="447.6" y="259.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="450.6" y="270.0"></text>
</g>
<g>
<title>[worker tid=53763] (531 samples, 4.91%)</title><rect x="448.9" y="531.0" width="58.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="451.9" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (529 samples, 4.90%)</title><rect x="449.1" y="515.0" width="57.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.1" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (529 samples, 4.90%)</title><rect x="449.1" y="499.0" width="57.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.1" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (528 samples, 4.89%)</title><rect x="449.2" y="483.0" width="57.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.2" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (6 samples, 0.06%)</title><rect x="449.3" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="452.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="449.3" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (6 samples, 0.06%)</title><rect x="449.3" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (72 samples, 0.67%)</title><rect x="450.1" y="467.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (70 samples, 0.65%)</title><rect x="450.3" y="451.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.55%)</title><rect x="450.3" y="435.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (58 samples, 0.54%)</title><rect x="450.4" y="419.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 0.54%)</title><rect x="450.4" y="403.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.4" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (55 samples, 0.51%)</title><rect x="450.8" y="387.0" width="6.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="453.8" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (48 samples, 0.44%)</title><rect x="451.3" y="371.0" width="5.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="454.3" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (44 samples, 0.41%)</title><rect x="451.5" y="355.0" width="4.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="454.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="456.8" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.07%)</title><rect x="457.1" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.07%)</title><rect x="457.1" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.07%)</title><rect x="457.1" y="403.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.07%)</title><rect x="457.1" y="387.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.07%)</title><rect x="457.1" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.1" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.06%)</title><rect x="457.2" y="355.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="460.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="457.5" y="339.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="460.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (448 samples, 4.15%)</title><rect x="458.0" y="467.0" width="48.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.0" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (448 samples, 4.15%)</title><rect x="458.0" y="451.0" width="48.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.0" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (68 samples, 0.63%)</title><rect x="458.0" y="435.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 0.61%)</title><rect x="458.1" y="419.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.05%)</title><rect x="458.1" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 0.56%)</title><rect x="458.6" y="403.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 0.56%)</title><rect x="458.6" y="387.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (61 samples, 0.56%)</title><rect x="458.6" y="371.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (61 samples, 0.56%)</title><rect x="458.6" y="355.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (61 samples, 0.56%)</title><rect x="458.6" y="339.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.06%)</title><rect x="458.6" y="323.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="458.6" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.05%)</title><rect x="458.6" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.04%)</title><rect x="458.7" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="458.8" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.03%)</title><rect x="458.8" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.51%)</title><rect x="459.3" y="323.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.51%)</title><rect x="459.3" y="307.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (54 samples, 0.50%)</title><rect x="459.4" y="291.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (54 samples, 0.50%)</title><rect x="459.4" y="275.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (54 samples, 0.50%)</title><rect x="459.4" y="259.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.4" y="270.0"></text>
</g>
<g>
<title>write (54 samples, 0.50%)</title><rect x="459.4" y="243.0" width="5.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="462.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (162 samples, 1.50%)</title><rect x="465.4" y="435.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (162 samples, 1.50%)</title><rect x="465.4" y="419.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (162 samples, 1.50%)</title><rect x="465.4" y="403.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (162 samples, 1.50%)</title><rect x="465.4" y="387.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.4" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (157 samples, 1.45%)</title><rect x="465.4" y="371.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.4" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (157 samples, 1.45%)</title><rect x="465.4" y="355.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.4" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (156 samples, 1.44%)</title><rect x="465.5" y="339.0" width="17.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="468.5" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (155 samples, 1.43%)</title><rect x="465.6" y="323.0" width="16.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="468.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (147 samples, 1.36%)</title><rect x="466.5" y="307.0" width="16.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="469.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (147 samples, 1.36%)</title><rect x="466.5" y="291.0" width="16.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="469.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (145 samples, 1.34%)</title><rect x="466.5" y="275.0" width="15.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="469.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (140 samples, 1.30%)</title><rect x="466.7" y="259.0" width="15.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="469.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (139 samples, 1.29%)</title><rect x="466.8" y="243.0" width="15.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="469.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (32 samples, 0.30%)</title><rect x="466.9" y="227.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="469.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (31 samples, 0.29%)</title><rect x="467.0" y="211.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="470.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (30 samples, 0.28%)</title><rect x="467.1" y="195.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="470.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 0.26%)</title><rect x="467.3" y="179.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="470.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (27 samples, 0.25%)</title><rect x="467.4" y="163.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="470.4" y="174.0"></text>
</g>
<g>
<title>write (25 samples, 0.23%)</title><rect x="467.6" y="147.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="470.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (12 samples, 0.11%)</title><rect x="470.4" y="227.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="473.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="470.8" y="211.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="473.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="470.8" y="195.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="473.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="470.8" y="179.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="473.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 0.06%)</title><rect x="470.9" y="163.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="473.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (5 samples, 0.05%)</title><rect x="471.1" y="147.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="474.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="471.3" y="131.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="474.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (69 samples, 0.64%)</title><rect x="472.0" y="227.0" width="7.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="475.0" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (58 samples, 0.54%)</title><rect x="472.9" y="211.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="475.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (22 samples, 0.20%)</title><rect x="479.5" y="227.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="482.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (22 samples, 0.20%)</title><rect x="479.5" y="211.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="482.5" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (20 samples, 0.19%)</title><rect x="479.7" y="195.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="482.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (3 samples, 0.03%)</title><rect x="482.5" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.03%)</title><rect x="482.5" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (218 samples, 2.02%)</title><rect x="483.1" y="435.0" width="23.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.1" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (218 samples, 2.02%)</title><rect x="483.1" y="419.0" width="23.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.1" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (218 samples, 2.02%)</title><rect x="483.1" y="403.0" width="23.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.1" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (216 samples, 2.00%)</title><rect x="483.3" y="387.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.3" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (216 samples, 2.00%)</title><rect x="483.3" y="371.0" width="23.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.3" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (127 samples, 1.18%)</title><rect x="483.3" y="355.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (123 samples, 1.14%)</title><rect x="483.7" y="339.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (123 samples, 1.14%)</title><rect x="483.7" y="323.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (121 samples, 1.12%)</title><rect x="483.9" y="307.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (121 samples, 1.12%)</title><rect x="483.9" y="291.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (120 samples, 1.11%)</title><rect x="484.0" y="275.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (120 samples, 1.11%)</title><rect x="484.0" y="259.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (120 samples, 1.11%)</title><rect x="484.0" y="243.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.0" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (109 samples, 1.01%)</title><rect x="485.2" y="227.0" width="11.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="488.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 0.05%)</title><rect x="497.2" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.05%)</title><rect x="497.7" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.04%)</title><rect x="497.8" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.04%)</title><rect x="497.8" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.04%)</title><rect x="497.8" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.03%)</title><rect x="497.9" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (74 samples, 0.68%)</title><rect x="498.5" y="355.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (54 samples, 0.50%)</title><rect x="498.5" y="339.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (54 samples, 0.50%)</title><rect x="498.5" y="323.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.5" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (53 samples, 0.49%)</title><rect x="498.6" y="307.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (53 samples, 0.49%)</title><rect x="498.6" y="291.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.45%)</title><rect x="498.7" y="275.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.45%)</title><rect x="498.7" y="259.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (43 samples, 0.40%)</title><rect x="498.8" y="243.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (43 samples, 0.40%)</title><rect x="498.8" y="227.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (43 samples, 0.40%)</title><rect x="498.8" y="211.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.8" y="222.0"></text>
</g>
<g>
<title>write (41 samples, 0.38%)</title><rect x="499.0" y="195.0" width="4.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="502.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.05%)</title><rect x="503.5" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.5" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="503.7" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.03%)</title><rect x="504.1" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (20 samples, 0.19%)</title><rect x="504.4" y="339.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.4" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.19%)</title><rect x="504.4" y="323.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.4" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (14 samples, 0.13%)</title><rect x="504.5" y="307.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="507.5" y="318.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.03%)</title><rect x="504.7" y="291.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="507.7" y="302.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.06%)</title><rect x="505.0" y="291.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="508.0" y="302.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.04%)</title><rect x="505.2" y="275.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="508.2" y="286.0"></text>
</g>
<g>
<title>[worker tid=54531] (523 samples, 4.84%)</title><rect x="506.9" y="531.0" width="57.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="509.9" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (523 samples, 4.84%)</title><rect x="506.9" y="515.0" width="57.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.9" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (523 samples, 4.84%)</title><rect x="506.9" y="499.0" width="57.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.9" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (523 samples, 4.84%)</title><rect x="506.9" y="483.0" width="57.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.9" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (65 samples, 0.60%)</title><rect x="507.0" y="467.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (65 samples, 0.60%)</title><rect x="507.0" y="451.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (51 samples, 0.47%)</title><rect x="507.0" y="435.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.45%)</title><rect x="507.2" y="419.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.45%)</title><rect x="507.2" y="403.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.2" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (45 samples, 0.42%)</title><rect x="507.7" y="387.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="510.7" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (41 samples, 0.38%)</title><rect x="507.9" y="371.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="510.9" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (39 samples, 0.36%)</title><rect x="508.0" y="355.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="511.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.11%)</title><rect x="512.8" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.11%)</title><rect x="512.8" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.11%)</title><rect x="512.8" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.11%)</title><rect x="512.8" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.11%)</title><rect x="512.8" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (12 samples, 0.11%)</title><rect x="512.8" y="355.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="515.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (11 samples, 0.10%)</title><rect x="512.8" y="339.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="515.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (457 samples, 4.23%)</title><rect x="514.1" y="467.0" width="49.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.1" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (457 samples, 4.23%)</title><rect x="514.1" y="451.0" width="49.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.1" y="462.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (83 samples, 0.77%)</title><rect x="514.1" y="435.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (81 samples, 0.75%)</title><rect x="514.2" y="419.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.08%)</title><rect x="514.2" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 0.67%)</title><rect x="515.2" y="403.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 0.66%)</title><rect x="515.3" y="387.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (71 samples, 0.66%)</title><rect x="515.3" y="371.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (71 samples, 0.66%)</title><rect x="515.3" y="355.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (71 samples, 0.66%)</title><rect x="515.3" y="339.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.09%)</title><rect x="515.4" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.09%)</title><rect x="515.4" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.05%)</title><rect x="515.4" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.03%)</title><rect x="515.4" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.04%)</title><rect x="516.1" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.04%)</title><rect x="516.1" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (58 samples, 0.54%)</title><rect x="516.5" y="323.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (58 samples, 0.54%)</title><rect x="516.5" y="307.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.03%)</title><rect x="516.5" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.03%)</title><rect x="516.5" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.03%)</title><rect x="516.5" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.03%)</title><rect x="516.5" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.03%)</title><rect x="516.5" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="516.5" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (54 samples, 0.50%)</title><rect x="516.8" y="291.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (53 samples, 0.49%)</title><rect x="516.8" y="275.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (53 samples, 0.49%)</title><rect x="516.8" y="259.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.8" y="270.0"></text>
</g>
<g>
<title>write (49 samples, 0.45%)</title><rect x="517.3" y="243.0" width="5.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="520.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (145 samples, 1.34%)</title><rect x="523.2" y="435.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (145 samples, 1.34%)</title><rect x="523.2" y="419.0" width="15.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (145 samples, 1.34%)</title><rect x="523.2" y="403.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (145 samples, 1.34%)</title><rect x="523.2" y="387.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.2" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (138 samples, 1.28%)</title><rect x="523.2" y="371.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.2" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (138 samples, 1.28%)</title><rect x="523.2" y="355.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.2" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (138 samples, 1.28%)</title><rect x="523.2" y="339.0" width="15.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="526.2" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (136 samples, 1.26%)</title><rect x="523.4" y="323.0" width="14.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="526.4" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (130 samples, 1.20%)</title><rect x="524.0" y="307.0" width="14.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="527.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (130 samples, 1.20%)</title><rect x="524.0" y="291.0" width="14.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="527.0" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (130 samples, 1.20%)</title><rect x="524.0" y="275.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="527.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (129 samples, 1.19%)</title><rect x="524.0" y="259.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="527.0" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (129 samples, 1.19%)</title><rect x="524.0" y="243.0" width="14.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="527.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (31 samples, 0.29%)</title><rect x="524.3" y="227.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="527.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (30 samples, 0.28%)</title><rect x="524.4" y="211.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="527.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (30 samples, 0.28%)</title><rect x="524.4" y="195.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="527.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 0.26%)</title><rect x="524.5" y="179.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="527.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (26 samples, 0.24%)</title><rect x="524.7" y="163.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="527.7" y="174.0"></text>
</g>
<g>
<title>write (24 samples, 0.22%)</title><rect x="524.9" y="147.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="527.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (15 samples, 0.14%)</title><rect x="527.8" y="227.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="530.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="528.1" y="211.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="531.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="528.2" y="195.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="531.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="528.2" y="179.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="531.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.08%)</title><rect x="528.4" y="163.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="531.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (9 samples, 0.08%)</title><rect x="528.4" y="147.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="531.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.04%)</title><rect x="528.9" y="131.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="531.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (52 samples, 0.48%)</title><rect x="529.5" y="227.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="532.5" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (45 samples, 0.42%)</title><rect x="530.2" y="211.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="533.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (22 samples, 0.20%)</title><rect x="535.2" y="227.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (22 samples, 0.20%)</title><rect x="535.2" y="211.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="538.2" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (21 samples, 0.19%)</title><rect x="535.3" y="195.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="538.3" y="206.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (3 samples, 0.03%)</title><rect x="537.8" y="227.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="540.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArray (4 samples, 0.04%)</title><rect x="538.2" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.04%)</title><rect x="538.2" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (3 samples, 0.03%)</title><rect x="538.7" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (229 samples, 2.12%)</title><rect x="539.0" y="435.0" width="25.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.0" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (229 samples, 2.12%)</title><rect x="539.0" y="419.0" width="25.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.0" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (228 samples, 2.11%)</title><rect x="539.1" y="403.0" width="24.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.1" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (228 samples, 2.11%)</title><rect x="539.1" y="387.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (228 samples, 2.11%)</title><rect x="539.1" y="371.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (139 samples, 1.29%)</title><rect x="539.2" y="355.0" width="15.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (138 samples, 1.28%)</title><rect x="539.3" y="339.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (137 samples, 1.27%)</title><rect x="539.4" y="323.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="539.4" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="539.4" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (134 samples, 1.24%)</title><rect x="539.8" y="307.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (134 samples, 1.24%)</title><rect x="539.8" y="291.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="539.8" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (129 samples, 1.19%)</title><rect x="540.1" y="275.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (129 samples, 1.19%)</title><rect x="540.1" y="259.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (129 samples, 1.19%)</title><rect x="540.1" y="243.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.1" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (123 samples, 1.14%)</title><rect x="540.8" y="227.0" width="13.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="543.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.03%)</title><rect x="554.4" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.06%)</title><rect x="554.7" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="555.1" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (78 samples, 0.72%)</title><rect x="555.5" y="355.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (51 samples, 0.47%)</title><rect x="555.6" y="339.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.6" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (51 samples, 0.47%)</title><rect x="555.6" y="323.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.6" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (51 samples, 0.47%)</title><rect x="555.6" y="307.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (51 samples, 0.47%)</title><rect x="555.6" y="291.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.45%)</title><rect x="555.8" y="275.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.45%)</title><rect x="555.8" y="259.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (47 samples, 0.43%)</title><rect x="555.8" y="243.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (47 samples, 0.43%)</title><rect x="555.8" y="227.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (47 samples, 0.43%)</title><rect x="555.8" y="211.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.8" y="222.0"></text>
</g>
<g>
<title>write (45 samples, 0.42%)</title><rect x="556.0" y="195.0" width="5.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="559.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (26 samples, 0.24%)</title><rect x="561.2" y="339.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.2" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (26 samples, 0.24%)</title><rect x="561.2" y="323.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.2" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (20 samples, 0.19%)</title><rect x="561.3" y="307.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="564.3" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.03%)</title><rect x="561.7" y="291.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="564.7" y="302.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.04%)</title><rect x="562.0" y="291.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="565.0" y="302.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.04%)</title><rect x="562.5" y="291.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="565.5" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.05%)</title><rect x="562.9" y="291.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="565.9" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (5 samples, 0.05%)</title><rect x="562.9" y="275.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="565.9" y="286.0"></text>
</g>
<g>
<title>[worker tid=55043] (580 samples, 5.37%)</title><rect x="564.0" y="531.0" width="63.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="567.0" y="542.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (580 samples, 5.37%)</title><rect x="564.0" y="515.0" width="63.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.0" y="526.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (580 samples, 5.37%)</title><rect x="564.0" y="499.0" width="63.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.0" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (579 samples, 5.36%)</title><rect x="564.1" y="483.0" width="63.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.1" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (82 samples, 0.76%)</title><rect x="564.5" y="467.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (82 samples, 0.76%)</title><rect x="564.5" y="451.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (70 samples, 0.65%)</title><rect x="564.6" y="435.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.64%)</title><rect x="564.7" y="419.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 0.64%)</title><rect x="564.7" y="403.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (61 samples, 0.56%)</title><rect x="565.5" y="387.0" width="6.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="568.5" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (58 samples, 0.54%)</title><rect x="565.8" y="371.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="568.8" y="382.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (3 samples, 0.03%)</title><rect x="565.8" y="355.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="568.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (53 samples, 0.49%)</title><rect x="566.1" y="355.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="569.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.08%)</title><rect x="572.4" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.07%)</title><rect x="572.5" y="419.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.07%)</title><rect x="572.5" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.07%)</title><rect x="572.5" y="387.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.07%)</title><rect x="572.5" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.5" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (8 samples, 0.07%)</title><rect x="572.5" y="355.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="575.5" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.06%)</title><rect x="572.6" y="339.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="575.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (494 samples, 4.57%)</title><rect x="573.4" y="467.0" width="54.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.4" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (494 samples, 4.57%)</title><rect x="573.4" y="451.0" width="54.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.4" y="462.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (92 samples, 0.85%)</title><rect x="573.5" y="435.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (89 samples, 0.82%)</title><rect x="573.7" y="419.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="573.7" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (83 samples, 0.77%)</title><rect x="574.4" y="403.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (82 samples, 0.76%)</title><rect x="574.5" y="387.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (82 samples, 0.76%)</title><rect x="574.5" y="371.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (82 samples, 0.76%)</title><rect x="574.5" y="355.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (82 samples, 0.76%)</title><rect x="574.5" y="339.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="574.5" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="574.5" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="574.5" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="574.5" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="574.5" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.03%)</title><rect x="574.5" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (77 samples, 0.71%)</title><rect x="574.9" y="323.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (77 samples, 0.71%)</title><rect x="574.9" y="307.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (75 samples, 0.69%)</title><rect x="575.0" y="291.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (75 samples, 0.69%)</title><rect x="575.0" y="275.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (75 samples, 0.69%)</title><rect x="575.0" y="259.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.0" y="270.0"></text>
</g>
<g>
<title>write (69 samples, 0.64%)</title><rect x="575.7" y="243.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="578.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (165 samples, 1.53%)</title><rect x="583.6" y="435.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (165 samples, 1.53%)</title><rect x="583.6" y="419.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (165 samples, 1.53%)</title><rect x="583.6" y="403.0" width="18.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (164 samples, 1.52%)</title><rect x="583.7" y="387.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (161 samples, 1.49%)</title><rect x="583.7" y="371.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (161 samples, 1.49%)</title><rect x="583.7" y="355.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (161 samples, 1.49%)</title><rect x="583.7" y="339.0" width="17.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="586.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (160 samples, 1.48%)</title><rect x="583.8" y="323.0" width="17.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="586.8" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (154 samples, 1.43%)</title><rect x="584.4" y="307.0" width="16.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="587.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (154 samples, 1.43%)</title><rect x="584.4" y="291.0" width="16.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="587.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (154 samples, 1.43%)</title><rect x="584.4" y="275.0" width="16.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="587.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (145 samples, 1.34%)</title><rect x="584.7" y="259.0" width="15.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="587.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (144 samples, 1.33%)</title><rect x="584.7" y="243.0" width="15.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="587.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (35 samples, 0.32%)</title><rect x="584.9" y="227.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="587.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (35 samples, 0.32%)</title><rect x="584.9" y="211.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="587.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (34 samples, 0.31%)</title><rect x="584.9" y="195.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="587.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (29 samples, 0.27%)</title><rect x="585.2" y="179.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="588.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (28 samples, 0.26%)</title><rect x="585.3" y="163.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="588.3" y="174.0"></text>
</g>
<g>
<title>write (28 samples, 0.26%)</title><rect x="585.3" y="147.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="588.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (15 samples, 0.14%)</title><rect x="588.8" y="227.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="591.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 0.12%)</title><rect x="589.0" y="211.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="592.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (13 samples, 0.12%)</title><rect x="589.0" y="195.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="592.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (13 samples, 0.12%)</title><rect x="589.0" y="179.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="592.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.07%)</title><rect x="589.5" y="163.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="592.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (8 samples, 0.07%)</title><rect x="589.5" y="147.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="592.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (70 samples, 0.65%)</title><rect x="590.6" y="227.0" width="7.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.6" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (53 samples, 0.49%)</title><rect x="592.2" y="211.0" width="5.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="595.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (20 samples, 0.19%)</title><rect x="598.2" y="227.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="601.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (20 samples, 0.19%)</title><rect x="598.2" y="211.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="601.2" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (18 samples, 0.17%)</title><rect x="598.3" y="195.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="601.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (5 samples, 0.05%)</title><rect x="600.7" y="259.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="603.7" y="270.0"></text>
</g>
<g>
<title>free (4 samples, 0.04%)</title><rect x="600.7" y="243.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="603.7" y="254.0"></text>
</g>
<g>
<title>szone_size (3 samples, 0.03%)</title><rect x="600.8" y="227.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="603.8" y="238.0"></text>
</g>
<g>
<title>tiny_size (3 samples, 0.03%)</title><rect x="600.8" y="211.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="603.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (236 samples, 2.18%)</title><rect x="601.6" y="435.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.6" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (236 samples, 2.18%)</title><rect x="601.6" y="419.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.6" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (236 samples, 2.18%)</title><rect x="601.6" y="403.0" width="25.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.6" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (236 samples, 2.18%)</title><rect x="601.6" y="387.0" width="25.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.6" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (236 samples, 2.18%)</title><rect x="601.6" y="371.0" width="25.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.6" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (136 samples, 1.26%)</title><rect x="601.8" y="355.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (134 samples, 1.24%)</title><rect x="602.0" y="339.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (134 samples, 1.24%)</title><rect x="602.0" y="323.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="602.0" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="602.0" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="602.0" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="602.0" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="602.0" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.03%)</title><rect x="602.0" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.03%)</title><rect x="602.0" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.03%)</title><rect x="602.0" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (131 samples, 1.21%)</title><rect x="602.3" y="307.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (131 samples, 1.21%)</title><rect x="602.3" y="291.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (130 samples, 1.20%)</title><rect x="602.3" y="275.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (130 samples, 1.20%)</title><rect x="602.3" y="259.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (130 samples, 1.20%)</title><rect x="602.3" y="243.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.3" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (121 samples, 1.12%)</title><rect x="603.3" y="227.0" width="13.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="606.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.06%)</title><rect x="616.7" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (8 samples, 0.07%)</title><rect x="617.3" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.06%)</title><rect x="617.4" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (81 samples, 0.75%)</title><rect x="618.4" y="355.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.4" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (57 samples, 0.53%)</title><rect x="618.4" y="339.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.4" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (57 samples, 0.53%)</title><rect x="618.4" y="323.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.4" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (57 samples, 0.53%)</title><rect x="618.4" y="307.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (57 samples, 0.53%)</title><rect x="618.4" y="291.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (54 samples, 0.50%)</title><rect x="618.5" y="275.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (54 samples, 0.50%)</title><rect x="618.5" y="259.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (47 samples, 0.43%)</title><rect x="618.6" y="243.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (47 samples, 0.43%)</title><rect x="618.6" y="227.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (47 samples, 0.43%)</title><rect x="618.6" y="211.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.6" y="222.0"></text>
</g>
<g>
<title>write (47 samples, 0.43%)</title><rect x="618.6" y="195.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="621.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.06%)</title><rect x="623.8" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.03%)</title><rect x="624.1" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (22 samples, 0.20%)</title><rect x="624.6" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.6" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (22 samples, 0.20%)</title><rect x="624.6" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.6" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.16%)</title><rect x="624.7" y="307.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="627.7" y="318.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.04%)</title><rect x="625.5" y="291.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="628.5" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.04%)</title><rect x="626.2" y="291.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="629.2" y="302.0"></text>
</g>
<g>
<title>[worker tid=55555] (242 samples, 2.24%)</title><rect x="627.4" y="531.0" width="26.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="630.4" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (242 samples, 2.24%)</title><rect x="627.4" y="515.0" width="26.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (242 samples, 2.24%)</title><rect x="627.4" y="499.0" width="26.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (242 samples, 2.24%)</title><rect x="627.4" y="483.0" width="26.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (62 samples, 0.57%)</title><rect x="627.4" y="467.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (62 samples, 0.57%)</title><rect x="627.4" y="451.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.55%)</title><rect x="627.4" y="435.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.03%)</title><rect x="627.4" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (56 samples, 0.52%)</title><rect x="627.7" y="419.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (56 samples, 0.52%)</title><rect x="627.7" y="403.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (54 samples, 0.50%)</title><rect x="627.9" y="387.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="630.9" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (50 samples, 0.46%)</title><rect x="628.1" y="371.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="631.1" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (50 samples, 0.46%)</title><rect x="628.1" y="355.0" width="5.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="631.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="633.8" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="633.8" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="633.8" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="633.8" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="633.8" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (180 samples, 1.67%)</title><rect x="634.1" y="467.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (180 samples, 1.67%)</title><rect x="634.1" y="451.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.29%)</title><rect x="634.1" y="435.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.27%)</title><rect x="634.3" y="419.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.25%)</title><rect x="634.6" y="403.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.25%)</title><rect x="634.6" y="387.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (27 samples, 0.25%)</title><rect x="634.6" y="371.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (27 samples, 0.25%)</title><rect x="634.6" y="355.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (27 samples, 0.25%)</title><rect x="634.6" y="339.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="634.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="634.6" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="634.9" y="323.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="634.9" y="307.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 0.22%)</title><rect x="634.9" y="291.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (24 samples, 0.22%)</title><rect x="634.9" y="275.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (24 samples, 0.22%)</title><rect x="634.9" y="259.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.9" y="270.0"></text>
</g>
<g>
<title>write (24 samples, 0.22%)</title><rect x="634.9" y="243.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="637.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (149 samples, 1.38%)</title><rect x="637.5" y="435.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (149 samples, 1.38%)</title><rect x="637.5" y="419.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (149 samples, 1.38%)</title><rect x="637.5" y="403.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (149 samples, 1.38%)</title><rect x="637.5" y="387.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.5" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (149 samples, 1.38%)</title><rect x="637.5" y="371.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.5" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (149 samples, 1.38%)</title><rect x="637.5" y="355.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.5" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (148 samples, 1.37%)</title><rect x="637.6" y="339.0" width="16.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="640.6" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (147 samples, 1.36%)</title><rect x="637.7" y="323.0" width="16.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="640.7" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (141 samples, 1.30%)</title><rect x="638.4" y="307.0" width="15.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="641.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (141 samples, 1.30%)</title><rect x="638.4" y="291.0" width="15.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="641.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (141 samples, 1.30%)</title><rect x="638.4" y="275.0" width="15.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="641.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (135 samples, 1.25%)</title><rect x="638.4" y="259.0" width="14.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="641.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (134 samples, 1.24%)</title><rect x="638.4" y="243.0" width="14.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="641.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (37 samples, 0.34%)</title><rect x="638.9" y="227.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="641.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (37 samples, 0.34%)</title><rect x="638.9" y="211.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="641.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (37 samples, 0.34%)</title><rect x="638.9" y="195.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="641.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (34 samples, 0.31%)</title><rect x="638.9" y="179.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="641.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (34 samples, 0.31%)</title><rect x="638.9" y="163.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="641.9" y="174.0"></text>
</g>
<g>
<title>write (33 samples, 0.31%)</title><rect x="639.0" y="147.0" width="3.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="642.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (8 samples, 0.07%)</title><rect x="643.1" y="227.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="646.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.06%)</title><rect x="643.2" y="211.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="646.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="643.3" y="195.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="646.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.05%)</title><rect x="643.4" y="179.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="646.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (51 samples, 0.47%)</title><rect x="644.2" y="227.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="647.2" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (39 samples, 0.36%)</title><rect x="645.2" y="211.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="648.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (28 samples, 0.26%)</title><rect x="649.7" y="227.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="652.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (28 samples, 0.26%)</title><rect x="649.7" y="211.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="652.7" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (28 samples, 0.26%)</title><rect x="649.7" y="195.0" width="3.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="652.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.03%)</title><rect x="653.3" y="259.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="656.3" y="270.0"></text>
</g>
<g>
<title>[worker tid=55811] (234 samples, 2.17%)</title><rect x="653.8" y="531.0" width="25.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="656.8" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (234 samples, 2.17%)</title><rect x="653.8" y="515.0" width="25.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (234 samples, 2.17%)</title><rect x="653.8" y="499.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (234 samples, 2.17%)</title><rect x="653.8" y="483.0" width="25.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (59 samples, 0.55%)</title><rect x="653.8" y="467.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (59 samples, 0.55%)</title><rect x="653.8" y="451.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (58 samples, 0.54%)</title><rect x="653.8" y="435.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (57 samples, 0.53%)</title><rect x="653.9" y="419.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (57 samples, 0.53%)</title><rect x="653.9" y="403.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.9" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (52 samples, 0.48%)</title><rect x="654.4" y="387.0" width="5.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="657.4" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (45 samples, 0.42%)</title><rect x="654.8" y="371.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="657.8" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (41 samples, 0.38%)</title><rect x="655.0" y="355.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="658.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (175 samples, 1.62%)</title><rect x="660.2" y="467.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (175 samples, 1.62%)</title><rect x="660.2" y="451.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 0.33%)</title><rect x="660.2" y="435.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (33 samples, 0.31%)</title><rect x="660.3" y="419.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.30%)</title><rect x="660.4" y="403.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.30%)</title><rect x="660.4" y="387.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (32 samples, 0.30%)</title><rect x="660.4" y="371.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (32 samples, 0.30%)</title><rect x="660.4" y="355.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (32 samples, 0.30%)</title><rect x="660.4" y="339.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.29%)</title><rect x="660.6" y="323.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.29%)</title><rect x="660.6" y="307.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (29 samples, 0.27%)</title><rect x="660.6" y="291.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (29 samples, 0.27%)</title><rect x="660.6" y="275.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (29 samples, 0.27%)</title><rect x="660.6" y="259.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.6" y="270.0"></text>
</g>
<g>
<title>write (29 samples, 0.27%)</title><rect x="660.6" y="243.0" width="3.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="663.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (137 samples, 1.27%)</title><rect x="664.2" y="435.0" width="14.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (137 samples, 1.27%)</title><rect x="664.2" y="419.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (137 samples, 1.27%)</title><rect x="664.2" y="403.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (137 samples, 1.27%)</title><rect x="664.2" y="387.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.2" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (136 samples, 1.26%)</title><rect x="664.2" y="371.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.2" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (136 samples, 1.26%)</title><rect x="664.2" y="355.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.2" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (135 samples, 1.25%)</title><rect x="664.3" y="339.0" width="14.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="667.3" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (134 samples, 1.24%)</title><rect x="664.4" y="323.0" width="14.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="667.4" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (129 samples, 1.19%)</title><rect x="664.9" y="307.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="667.9" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (129 samples, 1.19%)</title><rect x="664.9" y="291.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="667.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (129 samples, 1.19%)</title><rect x="664.9" y="275.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="667.9" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (126 samples, 1.17%)</title><rect x="665.0" y="259.0" width="13.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="668.0" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (126 samples, 1.17%)</title><rect x="665.0" y="243.0" width="13.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="668.0" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (44 samples, 0.41%)</title><rect x="665.3" y="227.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="668.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (44 samples, 0.41%)</title><rect x="665.3" y="211.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="668.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (44 samples, 0.41%)</title><rect x="665.3" y="195.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="668.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (42 samples, 0.39%)</title><rect x="665.4" y="179.0" width="4.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="668.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (41 samples, 0.38%)</title><rect x="665.5" y="163.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="668.5" y="174.0"></text>
</g>
<g>
<title>write (40 samples, 0.37%)</title><rect x="665.6" y="147.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="668.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (10 samples, 0.09%)</title><rect x="670.1" y="227.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="673.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="670.2" y="211.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="673.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (8 samples, 0.07%)</title><rect x="670.3" y="195.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="673.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (8 samples, 0.07%)</title><rect x="670.3" y="179.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="673.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.07%)</title><rect x="670.3" y="163.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="673.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (7 samples, 0.06%)</title><rect x="670.4" y="147.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="673.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (41 samples, 0.38%)</title><rect x="671.3" y="227.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="674.3" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (31 samples, 0.29%)</title><rect x="672.0" y="211.0" width="3.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="675.0" y="222.0"></text>
</g>
<g>
<title>std::__1::condition_variable::wait(std::__1::unique_lock&lt;std::__1::mutex&gt;&amp;) (3 samples, 0.03%)</title><rect x="675.4" y="211.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="678.4" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="675.4" y="195.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="678.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (28 samples, 0.26%)</title><rect x="675.7" y="227.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="678.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (28 samples, 0.26%)</title><rect x="675.7" y="211.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="678.7" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (28 samples, 0.26%)</title><rect x="675.7" y="195.0" width="3.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="678.7" y="206.0"></text>
</g>
<g>
<title>[worker tid=56579] (235 samples, 2.17%)</title><rect x="679.3" y="531.0" width="25.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="682.3" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (235 samples, 2.17%)</title><rect x="679.3" y="515.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (235 samples, 2.17%)</title><rect x="679.3" y="499.0" width="25.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.3" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (235 samples, 2.17%)</title><rect x="679.3" y="483.0" width="25.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (52 samples, 0.48%)</title><rect x="679.6" y="467.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (52 samples, 0.48%)</title><rect x="679.6" y="451.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (50 samples, 0.46%)</title><rect x="679.6" y="435.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.45%)</title><rect x="679.7" y="419.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.45%)</title><rect x="679.7" y="403.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (48 samples, 0.44%)</title><rect x="679.8" y="387.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="682.8" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (43 samples, 0.40%)</title><rect x="680.1" y="371.0" width="4.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="683.1" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (42 samples, 0.39%)</title><rect x="680.2" y="355.0" width="4.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="683.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (181 samples, 1.68%)</title><rect x="685.2" y="467.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (181 samples, 1.68%)</title><rect x="685.2" y="451.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 0.27%)</title><rect x="685.2" y="435.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.27%)</title><rect x="685.2" y="419.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.2" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.25%)</title><rect x="685.5" y="403.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.24%)</title><rect x="685.6" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 0.24%)</title><rect x="685.6" y="371.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (26 samples, 0.24%)</title><rect x="685.6" y="355.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (26 samples, 0.24%)</title><rect x="685.6" y="339.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.24%)</title><rect x="685.6" y="323.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.24%)</title><rect x="685.6" y="307.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (23 samples, 0.21%)</title><rect x="685.7" y="291.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (22 samples, 0.20%)</title><rect x="685.8" y="275.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (22 samples, 0.20%)</title><rect x="685.8" y="259.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.8" y="270.0"></text>
</g>
<g>
<title>write (22 samples, 0.20%)</title><rect x="685.8" y="243.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="688.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (152 samples, 1.41%)</title><rect x="688.4" y="435.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (152 samples, 1.41%)</title><rect x="688.4" y="419.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (152 samples, 1.41%)</title><rect x="688.4" y="403.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (151 samples, 1.40%)</title><rect x="688.5" y="387.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.5" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (149 samples, 1.38%)</title><rect x="688.5" y="371.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.5" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (149 samples, 1.38%)</title><rect x="688.5" y="355.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.5" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (149 samples, 1.38%)</title><rect x="688.5" y="339.0" width="16.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="691.5" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (148 samples, 1.37%)</title><rect x="688.6" y="323.0" width="16.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="691.6" y="334.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.03%)</title><rect x="689.3" y="307.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="692.3" y="318.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.03%)</title><rect x="689.3" y="291.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="692.3" y="302.0"></text>
</g>
<g>
<title>malloc_zone_malloc (3 samples, 0.03%)</title><rect x="689.3" y="275.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="692.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (139 samples, 1.29%)</title><rect x="689.6" y="307.0" width="15.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="692.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (139 samples, 1.29%)</title><rect x="689.6" y="291.0" width="15.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="692.6" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (138 samples, 1.28%)</title><rect x="689.6" y="275.0" width="15.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="692.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (134 samples, 1.24%)</title><rect x="689.8" y="259.0" width="14.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="692.8" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (134 samples, 1.24%)</title><rect x="689.8" y="243.0" width="14.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="692.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (31 samples, 0.29%)</title><rect x="690.0" y="227.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="693.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (29 samples, 0.27%)</title><rect x="690.3" y="211.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="693.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (29 samples, 0.27%)</title><rect x="690.3" y="195.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="693.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (29 samples, 0.27%)</title><rect x="690.3" y="179.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="693.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (28 samples, 0.26%)</title><rect x="690.4" y="163.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="693.4" y="174.0"></text>
</g>
<g>
<title>write (27 samples, 0.25%)</title><rect x="690.5" y="147.0" width="2.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="693.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (14 samples, 0.13%)</title><rect x="693.5" y="227.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="696.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 0.12%)</title><rect x="693.6" y="211.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="696.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="693.9" y="195.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="696.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="693.9" y="179.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="696.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 0.10%)</title><rect x="693.9" y="163.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="696.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (9 samples, 0.08%)</title><rect x="694.1" y="147.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="697.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.04%)</title><rect x="695.1" y="227.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="695.2" y="211.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="698.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (58 samples, 0.54%)</title><rect x="695.5" y="227.0" width="6.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="698.5" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (51 samples, 0.47%)</title><rect x="696.3" y="211.0" width="5.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="699.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (23 samples, 0.21%)</title><rect x="701.8" y="227.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="704.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (23 samples, 0.21%)</title><rect x="701.8" y="211.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="704.8" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (19 samples, 0.18%)</title><rect x="702.3" y="195.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="705.3" y="206.0"></text>
</g>
<g>
<title>[worker tid=57091] (253 samples, 2.34%)</title><rect x="705.0" y="531.0" width="27.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="708.0" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (252 samples, 2.33%)</title><rect x="705.1" y="515.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (252 samples, 2.33%)</title><rect x="705.1" y="499.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (252 samples, 2.33%)</title><rect x="705.1" y="483.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (51 samples, 0.47%)</title><rect x="705.1" y="467.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (51 samples, 0.47%)</title><rect x="705.1" y="451.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (47 samples, 0.43%)</title><rect x="705.1" y="435.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.43%)</title><rect x="705.1" y="419.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.43%)</title><rect x="705.1" y="403.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.1" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (44 samples, 0.41%)</title><rect x="705.3" y="387.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="708.3" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (43 samples, 0.40%)</title><rect x="705.4" y="371.0" width="4.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="708.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (41 samples, 0.38%)</title><rect x="705.4" y="355.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="708.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="710.2" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="710.2" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="710.2" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="710.2" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (201 samples, 1.86%)</title><rect x="710.7" y="467.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.7" y="478.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (201 samples, 1.86%)</title><rect x="710.7" y="451.0" width="21.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.7" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.29%)</title><rect x="710.7" y="435.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 0.28%)</title><rect x="710.8" y="419.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 0.27%)</title><rect x="710.9" y="403.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 0.27%)</title><rect x="710.9" y="387.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (29 samples, 0.27%)</title><rect x="710.9" y="371.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (29 samples, 0.27%)</title><rect x="710.9" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (29 samples, 0.27%)</title><rect x="710.9" y="339.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 0.26%)</title><rect x="711.0" y="323.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 0.26%)</title><rect x="711.0" y="307.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (28 samples, 0.26%)</title><rect x="711.0" y="291.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (28 samples, 0.26%)</title><rect x="711.0" y="275.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (28 samples, 0.26%)</title><rect x="711.0" y="259.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.0" y="270.0"></text>
</g>
<g>
<title>write (28 samples, 0.26%)</title><rect x="711.0" y="243.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="714.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (169 samples, 1.56%)</title><rect x="714.1" y="435.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (169 samples, 1.56%)</title><rect x="714.1" y="419.0" width="18.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (169 samples, 1.56%)</title><rect x="714.1" y="403.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (169 samples, 1.56%)</title><rect x="714.1" y="387.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.1" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (168 samples, 1.55%)</title><rect x="714.1" y="371.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.1" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (168 samples, 1.55%)</title><rect x="714.1" y="355.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.1" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (168 samples, 1.55%)</title><rect x="714.1" y="339.0" width="18.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="717.1" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (168 samples, 1.55%)</title><rect x="714.1" y="323.0" width="18.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="717.1" y="334.0"></text>
</g>
<g>
<title>operator new(unsigned long) (5 samples, 0.05%)</title><rect x="714.7" y="307.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="717.7" y="318.0"></text>
</g>
<g>
<title>malloc (5 samples, 0.05%)</title><rect x="714.7" y="291.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="717.7" y="302.0"></text>
</g>
<g>
<title>malloc_zone_malloc (5 samples, 0.05%)</title><rect x="714.7" y="275.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="717.7" y="286.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (5 samples, 0.05%)</title><rect x="714.7" y="259.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="717.7" y="270.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (4 samples, 0.04%)</title><rect x="714.8" y="243.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="717.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (157 samples, 1.45%)</title><rect x="715.3" y="307.0" width="17.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.3" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (157 samples, 1.45%)</title><rect x="715.3" y="291.0" width="17.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="718.3" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (157 samples, 1.45%)</title><rect x="715.3" y="275.0" width="17.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="718.3" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (151 samples, 1.40%)</title><rect x="715.4" y="259.0" width="16.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="718.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (150 samples, 1.39%)</title><rect x="715.4" y="243.0" width="16.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (41 samples, 0.38%)</title><rect x="715.7" y="227.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (41 samples, 0.38%)</title><rect x="715.7" y="211.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (40 samples, 0.37%)</title><rect x="715.8" y="195.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (38 samples, 0.35%)</title><rect x="715.8" y="179.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="718.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (38 samples, 0.35%)</title><rect x="715.8" y="163.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="718.8" y="174.0"></text>
</g>
<g>
<title>write (38 samples, 0.35%)</title><rect x="715.8" y="147.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="718.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (13 samples, 0.12%)</title><rect x="720.2" y="227.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="723.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="720.4" y="211.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="723.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="720.4" y="195.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="723.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="720.4" y="179.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="723.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.07%)</title><rect x="720.5" y="163.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="723.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (8 samples, 0.07%)</title><rect x="720.5" y="147.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="723.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="721.1" y="131.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="724.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (55 samples, 0.51%)</title><rect x="721.6" y="227.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="724.6" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (48 samples, 0.44%)</title><rect x="722.1" y="211.0" width="5.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="725.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (36 samples, 0.33%)</title><rect x="727.6" y="227.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="730.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (36 samples, 0.33%)</title><rect x="727.6" y="211.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="730.6" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (33 samples, 0.31%)</title><rect x="727.9" y="195.0" width="3.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="730.9" y="206.0"></text>
</g>
<g>
<title>[worker tid=57859] (199 samples, 1.84%)</title><rect x="732.6" y="531.0" width="21.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="735.6" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (198 samples, 1.83%)</title><rect x="732.7" y="515.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (198 samples, 1.83%)</title><rect x="732.7" y="499.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.7" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (198 samples, 1.83%)</title><rect x="732.7" y="483.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.7" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (44 samples, 0.41%)</title><rect x="732.9" y="467.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 0.41%)</title><rect x="732.9" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (44 samples, 0.41%)</title><rect x="732.9" y="435.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.39%)</title><rect x="733.1" y="419.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 0.39%)</title><rect x="733.1" y="403.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.1" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (39 samples, 0.36%)</title><rect x="733.4" y="387.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="736.4" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (35 samples, 0.32%)</title><rect x="733.4" y="371.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="736.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (35 samples, 0.32%)</title><rect x="733.4" y="355.0" width="3.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="736.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (153 samples, 1.42%)</title><rect x="737.7" y="467.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (153 samples, 1.42%)</title><rect x="737.7" y="451.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 0.26%)</title><rect x="737.7" y="435.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 0.26%)</title><rect x="737.7" y="419.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.26%)</title><rect x="737.7" y="403.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.26%)</title><rect x="737.7" y="387.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (28 samples, 0.26%)</title><rect x="737.7" y="371.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (28 samples, 0.26%)</title><rect x="737.7" y="355.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (28 samples, 0.26%)</title><rect x="737.7" y="339.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (27 samples, 0.25%)</title><rect x="737.8" y="323.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (27 samples, 0.25%)</title><rect x="737.8" y="307.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (27 samples, 0.25%)</title><rect x="737.8" y="291.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (27 samples, 0.25%)</title><rect x="737.8" y="275.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (27 samples, 0.25%)</title><rect x="737.8" y="259.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.8" y="270.0"></text>
</g>
<g>
<title>write (26 samples, 0.24%)</title><rect x="737.9" y="243.0" width="2.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="740.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (124 samples, 1.15%)</title><rect x="740.7" y="435.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (124 samples, 1.15%)</title><rect x="740.7" y="419.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (124 samples, 1.15%)</title><rect x="740.7" y="403.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (124 samples, 1.15%)</title><rect x="740.7" y="387.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (124 samples, 1.15%)</title><rect x="740.7" y="371.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (124 samples, 1.15%)</title><rect x="740.7" y="355.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (124 samples, 1.15%)</title><rect x="740.7" y="339.0" width="13.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="743.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (123 samples, 1.14%)</title><rect x="740.8" y="323.0" width="13.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="743.8" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (120 samples, 1.11%)</title><rect x="741.2" y="307.0" width="13.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="744.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (120 samples, 1.11%)</title><rect x="741.2" y="291.0" width="13.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="744.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (120 samples, 1.11%)</title><rect x="741.2" y="275.0" width="13.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="744.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (117 samples, 1.08%)</title><rect x="741.3" y="259.0" width="12.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="744.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (114 samples, 1.06%)</title><rect x="741.4" y="243.0" width="12.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="744.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (33 samples, 0.31%)</title><rect x="741.5" y="227.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (31 samples, 0.29%)</title><rect x="741.6" y="211.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="744.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (29 samples, 0.27%)</title><rect x="741.8" y="195.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="744.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (29 samples, 0.27%)</title><rect x="741.8" y="179.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="744.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (29 samples, 0.27%)</title><rect x="741.8" y="163.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="744.8" y="174.0"></text>
</g>
<g>
<title>write (29 samples, 0.27%)</title><rect x="741.8" y="147.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="744.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (7 samples, 0.06%)</title><rect x="745.2" y="227.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="748.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.06%)</title><rect x="745.2" y="211.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="748.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.05%)</title><rect x="745.4" y="195.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="748.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (4 samples, 0.04%)</title><rect x="745.5" y="179.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="748.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (46 samples, 0.43%)</title><rect x="746.0" y="227.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="749.0" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (42 samples, 0.39%)</title><rect x="746.2" y="211.0" width="4.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="749.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (26 samples, 0.24%)</title><rect x="751.0" y="227.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="754.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (26 samples, 0.24%)</title><rect x="751.0" y="211.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="754.0" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (26 samples, 0.24%)</title><rect x="751.0" y="195.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="754.0" y="206.0"></text>
</g>
<g>
<title>[worker tid=59139] (211 samples, 1.95%)</title><rect x="754.4" y="531.0" width="23.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="757.4" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (211 samples, 1.95%)</title><rect x="754.4" y="515.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (211 samples, 1.95%)</title><rect x="754.4" y="499.0" width="23.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (211 samples, 1.95%)</title><rect x="754.4" y="483.0" width="23.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (53 samples, 0.49%)</title><rect x="754.5" y="467.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (53 samples, 0.49%)</title><rect x="754.5" y="451.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (48 samples, 0.44%)</title><rect x="754.5" y="435.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (48 samples, 0.44%)</title><rect x="754.5" y="419.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (48 samples, 0.44%)</title><rect x="754.5" y="403.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.5" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (45 samples, 0.42%)</title><rect x="754.8" y="387.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="757.8" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (42 samples, 0.39%)</title><rect x="754.8" y="371.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="757.8" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (41 samples, 0.38%)</title><rect x="754.9" y="355.0" width="4.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="757.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="759.9" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="759.9" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="759.9" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="759.9" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="759.9" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.9" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.03%)</title><rect x="759.9" y="355.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="762.9" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="759.9" y="339.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="762.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (157 samples, 1.45%)</title><rect x="760.3" y="467.0" width="17.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (157 samples, 1.45%)</title><rect x="760.3" y="451.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.20%)</title><rect x="760.3" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.19%)</title><rect x="760.3" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.18%)</title><rect x="760.4" y="403.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.18%)</title><rect x="760.4" y="387.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (19 samples, 0.18%)</title><rect x="760.4" y="371.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (19 samples, 0.18%)</title><rect x="760.4" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (19 samples, 0.18%)</title><rect x="760.4" y="339.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (18 samples, 0.17%)</title><rect x="760.5" y="323.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (18 samples, 0.17%)</title><rect x="760.5" y="307.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (17 samples, 0.16%)</title><rect x="760.6" y="291.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (17 samples, 0.16%)</title><rect x="760.6" y="275.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (17 samples, 0.16%)</title><rect x="760.6" y="259.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.6" y="270.0"></text>
</g>
<g>
<title>write (15 samples, 0.14%)</title><rect x="760.8" y="243.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="763.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (134 samples, 1.24%)</title><rect x="762.7" y="435.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (134 samples, 1.24%)</title><rect x="762.7" y="419.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (134 samples, 1.24%)</title><rect x="762.7" y="403.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (133 samples, 1.23%)</title><rect x="762.8" y="387.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.8" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (133 samples, 1.23%)</title><rect x="762.8" y="371.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.8" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (133 samples, 1.23%)</title><rect x="762.8" y="355.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.8" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (133 samples, 1.23%)</title><rect x="762.8" y="339.0" width="14.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="765.8" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (132 samples, 1.22%)</title><rect x="762.9" y="323.0" width="14.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="765.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (129 samples, 1.19%)</title><rect x="763.2" y="307.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="766.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (129 samples, 1.19%)</title><rect x="763.2" y="291.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="766.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (128 samples, 1.18%)</title><rect x="763.2" y="275.0" width="14.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="766.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (123 samples, 1.14%)</title><rect x="763.2" y="259.0" width="13.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="766.2" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (121 samples, 1.12%)</title><rect x="763.2" y="243.0" width="13.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="766.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (31 samples, 0.29%)</title><rect x="763.6" y="227.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="766.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (31 samples, 0.29%)</title><rect x="763.6" y="211.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="766.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (30 samples, 0.28%)</title><rect x="763.8" y="195.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="766.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 0.26%)</title><rect x="764.0" y="179.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="767.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (27 samples, 0.25%)</title><rect x="764.1" y="163.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="767.1" y="174.0"></text>
</g>
<g>
<title>write (26 samples, 0.24%)</title><rect x="764.2" y="147.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="767.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (6 samples, 0.06%)</title><rect x="767.0" y="227.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="770.0" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="767.0" y="211.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="770.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.05%)</title><rect x="767.1" y="195.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="770.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.05%)</title><rect x="767.1" y="179.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="770.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.04%)</title><rect x="767.3" y="163.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="770.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (4 samples, 0.04%)</title><rect x="767.3" y="147.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="770.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (60 samples, 0.56%)</title><rect x="767.8" y="227.0" width="6.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="770.8" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (52 samples, 0.48%)</title><rect x="768.3" y="211.0" width="5.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="771.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (18 samples, 0.17%)</title><rect x="774.4" y="227.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="777.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (18 samples, 0.17%)</title><rect x="774.4" y="211.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="777.4" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (17 samples, 0.16%)</title><rect x="774.5" y="195.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="777.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.03%)</title><rect x="776.9" y="259.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="779.9" y="270.0"></text>
</g>
<g>
<title>[worker tid=59395] (204 samples, 1.89%)</title><rect x="777.4" y="531.0" width="22.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="780.4" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (202 samples, 1.87%)</title><rect x="777.6" y="515.0" width="22.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (202 samples, 1.87%)</title><rect x="777.6" y="499.0" width="22.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (202 samples, 1.87%)</title><rect x="777.6" y="483.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (50 samples, 0.46%)</title><rect x="777.6" y="467.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (46 samples, 0.43%)</title><rect x="778.1" y="451.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.43%)</title><rect x="778.1" y="435.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (45 samples, 0.42%)</title><rect x="778.2" y="419.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (45 samples, 0.42%)</title><rect x="778.2" y="403.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.2" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (44 samples, 0.41%)</title><rect x="778.3" y="387.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="781.3" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (42 samples, 0.39%)</title><rect x="778.4" y="371.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (40 samples, 0.37%)</title><rect x="778.6" y="355.0" width="4.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="781.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (152 samples, 1.41%)</title><rect x="783.1" y="467.0" width="16.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (152 samples, 1.41%)</title><rect x="783.1" y="451.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 0.28%)</title><rect x="783.1" y="435.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 0.26%)</title><rect x="783.1" y="419.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.25%)</title><rect x="783.2" y="403.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.24%)</title><rect x="783.3" y="387.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 0.24%)</title><rect x="783.3" y="371.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (26 samples, 0.24%)</title><rect x="783.3" y="355.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (26 samples, 0.24%)</title><rect x="783.3" y="339.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="783.5" y="323.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="783.5" y="307.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (23 samples, 0.21%)</title><rect x="783.5" y="291.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (23 samples, 0.21%)</title><rect x="783.5" y="275.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (23 samples, 0.21%)</title><rect x="783.5" y="259.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.5" y="270.0"></text>
</g>
<g>
<title>write (23 samples, 0.21%)</title><rect x="783.5" y="243.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="786.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (121 samples, 1.12%)</title><rect x="786.4" y="435.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (121 samples, 1.12%)</title><rect x="786.4" y="419.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (121 samples, 1.12%)</title><rect x="786.4" y="403.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (121 samples, 1.12%)</title><rect x="786.4" y="387.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.4" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (121 samples, 1.12%)</title><rect x="786.4" y="371.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.4" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (121 samples, 1.12%)</title><rect x="786.4" y="355.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.4" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (120 samples, 1.11%)</title><rect x="786.5" y="339.0" width="13.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="789.5" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (119 samples, 1.10%)</title><rect x="786.6" y="323.0" width="13.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (114 samples, 1.06%)</title><rect x="787.0" y="307.0" width="12.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="790.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 1.06%)</title><rect x="787.0" y="291.0" width="12.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="790.0" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (114 samples, 1.06%)</title><rect x="787.0" y="275.0" width="12.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="790.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (111 samples, 1.03%)</title><rect x="787.0" y="259.0" width="12.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="790.0" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (110 samples, 1.02%)</title><rect x="787.1" y="243.0" width="12.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="790.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (31 samples, 0.29%)</title><rect x="787.2" y="227.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="790.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (31 samples, 0.29%)</title><rect x="787.2" y="211.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="790.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (31 samples, 0.29%)</title><rect x="787.2" y="195.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="790.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (29 samples, 0.27%)</title><rect x="787.3" y="179.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="790.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (28 samples, 0.26%)</title><rect x="787.5" y="163.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="790.5" y="174.0"></text>
</g>
<g>
<title>write (26 samples, 0.24%)</title><rect x="787.7" y="147.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="790.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (4 samples, 0.04%)</title><rect x="790.7" y="227.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="793.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.04%)</title><rect x="790.7" y="211.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="793.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="790.8" y="195.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="793.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="790.8" y="179.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="793.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.03%)</title><rect x="790.8" y="163.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="793.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (3 samples, 0.03%)</title><rect x="790.8" y="147.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="793.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (50 samples, 0.46%)</title><rect x="791.3" y="227.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="794.3" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (42 samples, 0.39%)</title><rect x="792.0" y="211.0" width="4.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="795.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (21 samples, 0.19%)</title><rect x="796.7" y="227.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="799.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (21 samples, 0.19%)</title><rect x="796.7" y="211.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.7" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (20 samples, 0.19%)</title><rect x="796.8" y="195.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="799.8" y="206.0"></text>
</g>
<g>
<title>[worker tid=60163] (172 samples, 1.59%)</title><rect x="799.7" y="531.0" width="18.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="802.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (172 samples, 1.59%)</title><rect x="799.7" y="515.0" width="18.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (172 samples, 1.59%)</title><rect x="799.7" y="499.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (172 samples, 1.59%)</title><rect x="799.7" y="483.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (48 samples, 0.44%)</title><rect x="799.8" y="467.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (48 samples, 0.44%)</title><rect x="799.8" y="451.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.43%)</title><rect x="799.8" y="435.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (44 samples, 0.41%)</title><rect x="800.0" y="419.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (44 samples, 0.41%)</title><rect x="800.0" y="403.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.0" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (43 samples, 0.40%)</title><rect x="800.1" y="387.0" width="4.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="803.1" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (40 samples, 0.37%)</title><rect x="800.2" y="371.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="803.2" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (39 samples, 0.36%)</title><rect x="800.2" y="355.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="803.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (123 samples, 1.14%)</title><rect x="805.0" y="467.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (123 samples, 1.14%)</title><rect x="805.0" y="451.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 0.22%)</title><rect x="805.0" y="435.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 0.22%)</title><rect x="805.0" y="419.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.03%)</title><rect x="805.0" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.19%)</title><rect x="805.4" y="403.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.19%)</title><rect x="805.4" y="387.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (21 samples, 0.19%)</title><rect x="805.4" y="371.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (21 samples, 0.19%)</title><rect x="805.4" y="355.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (21 samples, 0.19%)</title><rect x="805.4" y="339.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (20 samples, 0.19%)</title><rect x="805.5" y="323.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (20 samples, 0.19%)</title><rect x="805.5" y="307.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (19 samples, 0.18%)</title><rect x="805.6" y="291.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (19 samples, 0.18%)</title><rect x="805.6" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (19 samples, 0.18%)</title><rect x="805.6" y="259.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.6" y="270.0"></text>
</g>
<g>
<title>write (18 samples, 0.17%)</title><rect x="805.7" y="243.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="808.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (99 samples, 0.92%)</title><rect x="807.7" y="435.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (99 samples, 0.92%)</title><rect x="807.7" y="419.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (99 samples, 0.92%)</title><rect x="807.7" y="403.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (99 samples, 0.92%)</title><rect x="807.7" y="387.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 0.92%)</title><rect x="807.7" y="371.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 0.92%)</title><rect x="807.7" y="355.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (99 samples, 0.92%)</title><rect x="807.7" y="339.0" width="10.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="810.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (98 samples, 0.91%)</title><rect x="807.8" y="323.0" width="10.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="810.8" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (94 samples, 0.87%)</title><rect x="808.2" y="307.0" width="10.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="811.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (94 samples, 0.87%)</title><rect x="808.2" y="291.0" width="10.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="811.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (94 samples, 0.87%)</title><rect x="808.2" y="275.0" width="10.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="811.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (90 samples, 0.83%)</title><rect x="808.2" y="259.0" width="9.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="811.2" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (89 samples, 0.82%)</title><rect x="808.2" y="243.0" width="9.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="811.2" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (16 samples, 0.15%)</title><rect x="808.4" y="227.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="811.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (15 samples, 0.14%)</title><rect x="808.5" y="211.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="811.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (14 samples, 0.13%)</title><rect x="808.6" y="195.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="811.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (14 samples, 0.13%)</title><rect x="808.6" y="179.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="811.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (14 samples, 0.13%)</title><rect x="808.6" y="163.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="811.6" y="174.0"></text>
</g>
<g>
<title>write (14 samples, 0.13%)</title><rect x="808.6" y="147.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="811.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (14 samples, 0.13%)</title><rect x="810.3" y="227.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="813.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="810.5" y="211.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="813.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="810.6" y="195.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="813.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (10 samples, 0.09%)</title><rect x="810.7" y="179.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="813.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 0.06%)</title><rect x="810.9" y="163.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="813.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (5 samples, 0.05%)</title><rect x="811.2" y="147.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="814.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="811.4" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="814.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (39 samples, 0.36%)</title><rect x="811.9" y="227.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="814.9" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (34 samples, 0.31%)</title><rect x="812.2" y="211.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="815.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (16 samples, 0.15%)</title><rect x="816.2" y="227.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="819.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 0.15%)</title><rect x="816.2" y="211.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="819.2" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (16 samples, 0.15%)</title><rect x="816.2" y="195.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="819.2" y="206.0"></text>
</g>
<g>
<title>[worker tid=60675] (195 samples, 1.80%)</title><rect x="818.5" y="531.0" width="21.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="821.5" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (194 samples, 1.80%)</title><rect x="818.6" y="515.0" width="21.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (194 samples, 1.80%)</title><rect x="818.6" y="499.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (194 samples, 1.80%)</title><rect x="818.6" y="483.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (46 samples, 0.43%)</title><rect x="818.7" y="467.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 0.41%)</title><rect x="818.8" y="451.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (42 samples, 0.39%)</title><rect x="818.8" y="435.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.39%)</title><rect x="818.8" y="419.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 0.39%)</title><rect x="818.8" y="403.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.8" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (41 samples, 0.38%)</title><rect x="818.9" y="387.0" width="4.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="821.9" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (40 samples, 0.37%)</title><rect x="819.0" y="371.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="822.0" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (37 samples, 0.34%)</title><rect x="819.2" y="355.0" width="4.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="822.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (147 samples, 1.36%)</title><rect x="823.7" y="467.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (147 samples, 1.36%)</title><rect x="823.7" y="451.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.29%)</title><rect x="823.7" y="435.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.27%)</title><rect x="823.8" y="419.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.25%)</title><rect x="824.0" y="403.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.25%)</title><rect x="824.0" y="387.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (27 samples, 0.25%)</title><rect x="824.0" y="371.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (27 samples, 0.25%)</title><rect x="824.0" y="355.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (26 samples, 0.24%)</title><rect x="824.2" y="339.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="824.2" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="824.2" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (23 samples, 0.21%)</title><rect x="824.5" y="323.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (23 samples, 0.21%)</title><rect x="824.5" y="307.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (20 samples, 0.19%)</title><rect x="824.7" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (19 samples, 0.18%)</title><rect x="824.8" y="275.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (19 samples, 0.18%)</title><rect x="824.8" y="259.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.8" y="270.0"></text>
</g>
<g>
<title>write (19 samples, 0.18%)</title><rect x="824.8" y="243.0" width="2.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="827.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (116 samples, 1.07%)</title><rect x="827.1" y="435.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (116 samples, 1.07%)</title><rect x="827.1" y="419.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (116 samples, 1.07%)</title><rect x="827.1" y="403.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (116 samples, 1.07%)</title><rect x="827.1" y="387.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.1" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (116 samples, 1.07%)</title><rect x="827.1" y="371.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.1" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (116 samples, 1.07%)</title><rect x="827.1" y="355.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (116 samples, 1.07%)</title><rect x="827.1" y="339.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="830.1" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (114 samples, 1.06%)</title><rect x="827.3" y="323.0" width="12.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="830.3" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (111 samples, 1.03%)</title><rect x="827.5" y="307.0" width="12.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="830.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (111 samples, 1.03%)</title><rect x="827.5" y="291.0" width="12.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="830.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (111 samples, 1.03%)</title><rect x="827.5" y="275.0" width="12.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="830.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (109 samples, 1.01%)</title><rect x="827.5" y="259.0" width="11.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="830.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (106 samples, 0.98%)</title><rect x="827.6" y="243.0" width="11.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="830.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (32 samples, 0.30%)</title><rect x="827.8" y="227.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="830.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (31 samples, 0.29%)</title><rect x="827.9" y="211.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="830.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (30 samples, 0.28%)</title><rect x="828.0" y="195.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="831.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 0.26%)</title><rect x="828.0" y="179.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="831.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (28 samples, 0.26%)</title><rect x="828.0" y="163.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="831.0" y="174.0"></text>
</g>
<g>
<title>write (27 samples, 0.25%)</title><rect x="828.1" y="147.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="831.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (11 samples, 0.10%)</title><rect x="831.2" y="227.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="834.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="831.2" y="211.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="834.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (10 samples, 0.09%)</title><rect x="831.4" y="195.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="834.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="831.5" y="179.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="834.5" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.08%)</title><rect x="831.5" y="163.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="834.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (7 samples, 0.06%)</title><rect x="831.7" y="147.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="834.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (47 samples, 0.43%)</title><rect x="832.7" y="227.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="835.7" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (41 samples, 0.38%)</title><rect x="833.1" y="211.0" width="4.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="836.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (11 samples, 0.10%)</title><rect x="837.8" y="227.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="840.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (11 samples, 0.10%)</title><rect x="837.8" y="211.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="840.8" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (11 samples, 0.10%)</title><rect x="837.8" y="195.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="840.8" y="206.0"></text>
</g>
<g>
<title>[worker tid=61187] (170 samples, 1.57%)</title><rect x="839.8" y="531.0" width="18.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="842.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (169 samples, 1.56%)</title><rect x="839.9" y="515.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (169 samples, 1.56%)</title><rect x="839.9" y="499.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (169 samples, 1.56%)</title><rect x="839.9" y="483.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (49 samples, 0.45%)</title><rect x="840.1" y="467.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (46 samples, 0.43%)</title><rect x="840.3" y="451.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (44 samples, 0.41%)</title><rect x="840.3" y="435.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 0.40%)</title><rect x="840.4" y="419.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 0.40%)</title><rect x="840.4" y="403.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.4" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (41 samples, 0.38%)</title><rect x="840.6" y="387.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="843.6" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (38 samples, 0.35%)</title><rect x="840.8" y="371.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="843.8" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (37 samples, 0.34%)</title><rect x="840.8" y="355.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="843.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (118 samples, 1.09%)</title><rect x="845.4" y="467.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (118 samples, 1.09%)</title><rect x="845.4" y="451.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 0.13%)</title><rect x="845.4" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 0.13%)</title><rect x="845.4" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.12%)</title><rect x="845.6" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 0.12%)</title><rect x="845.6" y="387.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 0.12%)</title><rect x="845.6" y="371.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (13 samples, 0.12%)</title><rect x="845.6" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (13 samples, 0.12%)</title><rect x="845.6" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (12 samples, 0.11%)</title><rect x="845.6" y="323.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (12 samples, 0.11%)</title><rect x="845.6" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (12 samples, 0.11%)</title><rect x="845.6" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (12 samples, 0.11%)</title><rect x="845.6" y="275.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (12 samples, 0.11%)</title><rect x="845.6" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.6" y="270.0"></text>
</g>
<g>
<title>write (12 samples, 0.11%)</title><rect x="845.6" y="243.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="848.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (103 samples, 0.95%)</title><rect x="847.0" y="435.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (103 samples, 0.95%)</title><rect x="847.0" y="419.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (103 samples, 0.95%)</title><rect x="847.0" y="403.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (103 samples, 0.95%)</title><rect x="847.0" y="387.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.0" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (102 samples, 0.94%)</title><rect x="847.0" y="371.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.0" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (102 samples, 0.94%)</title><rect x="847.0" y="355.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.0" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (101 samples, 0.93%)</title><rect x="847.1" y="339.0" width="11.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="850.1" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (100 samples, 0.93%)</title><rect x="847.2" y="323.0" width="10.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="850.2" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (98 samples, 0.91%)</title><rect x="847.4" y="307.0" width="10.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="850.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (98 samples, 0.91%)</title><rect x="847.4" y="291.0" width="10.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="850.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (98 samples, 0.91%)</title><rect x="847.4" y="275.0" width="10.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="850.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (95 samples, 0.88%)</title><rect x="847.4" y="259.0" width="10.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="850.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (95 samples, 0.88%)</title><rect x="847.4" y="243.0" width="10.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="850.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (29 samples, 0.27%)</title><rect x="847.7" y="227.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="850.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (29 samples, 0.27%)</title><rect x="847.7" y="211.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="850.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (29 samples, 0.27%)</title><rect x="847.7" y="195.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="850.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 0.26%)</title><rect x="847.8" y="179.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="850.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (27 samples, 0.25%)</title><rect x="848.0" y="163.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="851.0" y="174.0"></text>
</g>
<g>
<title>write (25 samples, 0.23%)</title><rect x="848.2" y="147.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="851.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (8 samples, 0.07%)</title><rect x="850.9" y="227.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="853.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.06%)</title><rect x="851.0" y="211.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="854.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="851.1" y="195.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="854.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="851.1" y="179.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="854.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.04%)</title><rect x="851.3" y="163.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (4 samples, 0.04%)</title><rect x="851.3" y="147.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="854.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (38 samples, 0.35%)</title><rect x="851.8" y="227.0" width="4.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="854.8" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (31 samples, 0.29%)</title><rect x="852.5" y="211.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="855.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (16 samples, 0.15%)</title><rect x="855.9" y="227.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 0.15%)</title><rect x="855.9" y="211.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="858.9" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (16 samples, 0.15%)</title><rect x="855.9" y="195.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="858.9" y="206.0"></text>
</g>
<g>
<title>[worker tid=72195] (215 samples, 1.99%)</title><rect x="858.3" y="531.0" width="23.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="861.3" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (215 samples, 1.99%)</title><rect x="858.3" y="515.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (215 samples, 1.99%)</title><rect x="858.3" y="499.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.3" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (215 samples, 1.99%)</title><rect x="858.3" y="483.0" width="23.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (54 samples, 0.50%)</title><rect x="858.4" y="467.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (54 samples, 0.50%)</title><rect x="858.4" y="451.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (48 samples, 0.44%)</title><rect x="858.4" y="435.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.43%)</title><rect x="858.6" y="419.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.43%)</title><rect x="858.6" y="403.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.6" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (44 samples, 0.41%)</title><rect x="858.9" y="387.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="861.9" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (41 samples, 0.38%)</title><rect x="859.0" y="371.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="862.0" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (40 samples, 0.37%)</title><rect x="859.0" y="355.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="862.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="863.7" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="863.7" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="864.0" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="864.0" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="864.0" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="864.0" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="864.0" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.0" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.03%)</title><rect x="864.0" y="355.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="867.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (160 samples, 1.48%)</title><rect x="864.3" y="467.0" width="17.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (160 samples, 1.48%)</title><rect x="864.3" y="451.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 0.28%)</title><rect x="864.3" y="435.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 0.26%)</title><rect x="864.4" y="419.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.24%)</title><rect x="864.7" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.24%)</title><rect x="864.7" y="387.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 0.24%)</title><rect x="864.7" y="371.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (26 samples, 0.24%)</title><rect x="864.7" y="355.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (25 samples, 0.23%)</title><rect x="864.8" y="339.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="864.9" y="323.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="864.9" y="307.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (22 samples, 0.20%)</title><rect x="864.9" y="291.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (21 samples, 0.19%)</title><rect x="865.0" y="275.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (21 samples, 0.19%)</title><rect x="865.0" y="259.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.0" y="270.0"></text>
</g>
<g>
<title>write (21 samples, 0.19%)</title><rect x="865.0" y="243.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="868.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (130 samples, 1.20%)</title><rect x="867.6" y="435.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (130 samples, 1.20%)</title><rect x="867.6" y="419.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (130 samples, 1.20%)</title><rect x="867.6" y="403.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="870.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (129 samples, 1.19%)</title><rect x="867.7" y="387.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (127 samples, 1.18%)</title><rect x="867.7" y="371.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (127 samples, 1.18%)</title><rect x="867.7" y="355.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (127 samples, 1.18%)</title><rect x="867.7" y="339.0" width="13.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="870.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (126 samples, 1.17%)</title><rect x="867.8" y="323.0" width="13.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="870.8" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (121 samples, 1.12%)</title><rect x="868.4" y="307.0" width="13.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (121 samples, 1.12%)</title><rect x="868.4" y="291.0" width="13.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="871.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (121 samples, 1.12%)</title><rect x="868.4" y="275.0" width="13.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (117 samples, 1.08%)</title><rect x="868.4" y="259.0" width="12.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="871.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (115 samples, 1.06%)</title><rect x="868.5" y="243.0" width="12.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="871.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (20 samples, 0.19%)</title><rect x="868.9" y="227.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (20 samples, 0.19%)</title><rect x="868.9" y="211.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="871.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (20 samples, 0.19%)</title><rect x="868.9" y="195.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (20 samples, 0.19%)</title><rect x="868.9" y="179.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (20 samples, 0.19%)</title><rect x="868.9" y="163.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="871.9" y="174.0"></text>
</g>
<g>
<title>write (19 samples, 0.18%)</title><rect x="869.0" y="147.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="872.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (10 samples, 0.09%)</title><rect x="871.1" y="227.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="874.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 0.09%)</title><rect x="871.1" y="211.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="874.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (10 samples, 0.09%)</title><rect x="871.1" y="195.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="874.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (8 samples, 0.07%)</title><rect x="871.3" y="179.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.06%)</title><rect x="871.4" y="163.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (5 samples, 0.05%)</title><rect x="871.5" y="147.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="874.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (59 samples, 0.55%)</title><rect x="872.2" y="227.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="875.2" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (51 samples, 0.47%)</title><rect x="872.6" y="211.0" width="5.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="875.6" y="222.0"></text>
</g>
<g>
<title>std::__1::condition_variable::wait(std::__1::unique_lock&lt;std::__1::mutex&gt;&amp;) (4 samples, 0.04%)</title><rect x="878.2" y="211.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="881.2" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="878.2" y="195.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="881.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (21 samples, 0.19%)</title><rect x="878.6" y="227.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="881.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (21 samples, 0.19%)</title><rect x="878.6" y="211.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.6" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (20 samples, 0.19%)</title><rect x="878.8" y="195.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="881.8" y="206.0"></text>
</g>
<g>
<title>[worker tid=72963] (220 samples, 2.04%)</title><rect x="881.8" y="531.0" width="24.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="884.8" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (218 samples, 2.02%)</title><rect x="882.0" y="515.0" width="23.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (218 samples, 2.02%)</title><rect x="882.0" y="499.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (218 samples, 2.02%)</title><rect x="882.0" y="483.0" width="23.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (47 samples, 0.43%)</title><rect x="882.2" y="467.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 0.41%)</title><rect x="882.6" y="451.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (43 samples, 0.40%)</title><rect x="882.6" y="435.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.39%)</title><rect x="882.7" y="419.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 0.39%)</title><rect x="882.7" y="403.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (41 samples, 0.38%)</title><rect x="882.8" y="387.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="885.8" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (38 samples, 0.35%)</title><rect x="882.8" y="371.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="885.8" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (36 samples, 0.33%)</title><rect x="882.9" y="355.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="885.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (169 samples, 1.56%)</title><rect x="887.4" y="467.0" width="18.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (169 samples, 1.56%)</title><rect x="887.4" y="451.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 0.30%)</title><rect x="887.4" y="435.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.29%)</title><rect x="887.5" y="419.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.28%)</title><rect x="887.6" y="403.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.28%)</title><rect x="887.6" y="387.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (30 samples, 0.28%)</title><rect x="887.6" y="371.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (30 samples, 0.28%)</title><rect x="887.6" y="355.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (30 samples, 0.28%)</title><rect x="887.6" y="339.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="887.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="887.6" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (27 samples, 0.25%)</title><rect x="887.9" y="323.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (27 samples, 0.25%)</title><rect x="887.9" y="307.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (26 samples, 0.24%)</title><rect x="887.9" y="291.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (26 samples, 0.24%)</title><rect x="887.9" y="275.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (26 samples, 0.24%)</title><rect x="887.9" y="259.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.9" y="270.0"></text>
</g>
<g>
<title>write (26 samples, 0.24%)</title><rect x="887.9" y="243.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="890.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (136 samples, 1.26%)</title><rect x="890.9" y="435.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (136 samples, 1.26%)</title><rect x="890.9" y="419.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (136 samples, 1.26%)</title><rect x="890.9" y="403.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (135 samples, 1.25%)</title><rect x="891.0" y="387.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.0" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (134 samples, 1.24%)</title><rect x="891.0" y="371.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.0" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (134 samples, 1.24%)</title><rect x="891.0" y="355.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.0" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (134 samples, 1.24%)</title><rect x="891.0" y="339.0" width="14.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="894.0" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (131 samples, 1.21%)</title><rect x="891.3" y="323.0" width="14.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="894.3" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (123 samples, 1.14%)</title><rect x="892.2" y="307.0" width="13.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="895.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (123 samples, 1.14%)</title><rect x="892.2" y="291.0" width="13.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="895.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (122 samples, 1.13%)</title><rect x="892.2" y="275.0" width="13.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="895.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (117 samples, 1.08%)</title><rect x="892.4" y="259.0" width="12.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="895.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (117 samples, 1.08%)</title><rect x="892.4" y="243.0" width="12.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="895.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (27 samples, 0.25%)</title><rect x="892.7" y="227.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="895.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (27 samples, 0.25%)</title><rect x="892.7" y="211.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="895.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (27 samples, 0.25%)</title><rect x="892.7" y="195.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="895.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (26 samples, 0.24%)</title><rect x="892.8" y="179.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="895.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (26 samples, 0.24%)</title><rect x="892.8" y="163.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="895.8" y="174.0"></text>
</g>
<g>
<title>write (26 samples, 0.24%)</title><rect x="892.8" y="147.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="895.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (13 samples, 0.12%)</title><rect x="895.7" y="227.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="898.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="895.8" y="211.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="898.8" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="895.8" y="195.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.8" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="895.8" y="179.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="898.8" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.08%)</title><rect x="895.9" y="163.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="898.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (8 samples, 0.07%)</title><rect x="896.0" y="147.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="899.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (43 samples, 0.40%)</title><rect x="897.2" y="227.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="900.2" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (34 samples, 0.31%)</title><rect x="898.0" y="211.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="901.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (27 samples, 0.25%)</title><rect x="901.9" y="227.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="904.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 0.25%)</title><rect x="901.9" y="211.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="904.9" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (27 samples, 0.25%)</title><rect x="901.9" y="195.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="904.9" y="206.0"></text>
</g>
<g>
<title>[worker tid=73475] (234 samples, 2.17%)</title><rect x="905.8" y="531.0" width="25.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="908.8" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (234 samples, 2.17%)</title><rect x="905.8" y="515.0" width="25.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (234 samples, 2.17%)</title><rect x="905.8" y="499.0" width="25.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (234 samples, 2.17%)</title><rect x="905.8" y="483.0" width="25.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (47 samples, 0.43%)</title><rect x="905.9" y="467.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (46 samples, 0.43%)</title><rect x="905.9" y="451.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (43 samples, 0.40%)</title><rect x="905.9" y="435.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 0.39%)</title><rect x="906.1" y="419.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 0.39%)</title><rect x="906.1" y="403.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.1" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (40 samples, 0.37%)</title><rect x="906.3" y="387.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.3" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (38 samples, 0.35%)</title><rect x="906.4" y="371.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="909.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (35 samples, 0.32%)</title><rect x="906.4" y="355.0" width="3.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="909.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (186 samples, 1.72%)</title><rect x="911.1" y="467.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (186 samples, 1.72%)</title><rect x="911.1" y="451.0" width="20.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 0.27%)</title><rect x="911.1" y="435.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (27 samples, 0.25%)</title><rect x="911.1" y="419.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.24%)</title><rect x="911.2" y="403.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.24%)</title><rect x="911.2" y="387.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 0.24%)</title><rect x="911.2" y="371.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (26 samples, 0.24%)</title><rect x="911.2" y="355.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (25 samples, 0.23%)</title><rect x="911.3" y="339.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="911.4" y="323.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (24 samples, 0.22%)</title><rect x="911.4" y="307.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (21 samples, 0.19%)</title><rect x="911.5" y="291.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (21 samples, 0.19%)</title><rect x="911.5" y="275.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (21 samples, 0.19%)</title><rect x="911.5" y="259.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.5" y="270.0"></text>
</g>
<g>
<title>write (21 samples, 0.19%)</title><rect x="911.5" y="243.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="914.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (155 samples, 1.43%)</title><rect x="914.2" y="435.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (155 samples, 1.43%)</title><rect x="914.2" y="419.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (155 samples, 1.43%)</title><rect x="914.2" y="403.0" width="17.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (154 samples, 1.43%)</title><rect x="914.4" y="387.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.4" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (153 samples, 1.42%)</title><rect x="914.4" y="371.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.4" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (153 samples, 1.42%)</title><rect x="914.4" y="355.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.4" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (152 samples, 1.41%)</title><rect x="914.5" y="339.0" width="16.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="917.5" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (152 samples, 1.41%)</title><rect x="914.5" y="323.0" width="16.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="917.5" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (150 samples, 1.39%)</title><rect x="914.7" y="307.0" width="16.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.7" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (149 samples, 1.38%)</title><rect x="914.8" y="291.0" width="16.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.8" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (149 samples, 1.38%)</title><rect x="914.8" y="275.0" width="16.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="917.8" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (144 samples, 1.33%)</title><rect x="914.8" y="259.0" width="15.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.8" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (142 samples, 1.31%)</title><rect x="914.8" y="243.0" width="15.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="917.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (47 samples, 0.43%)</title><rect x="915.1" y="227.0" width="5.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="918.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (46 samples, 0.43%)</title><rect x="915.2" y="211.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="918.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (46 samples, 0.43%)</title><rect x="915.2" y="195.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="918.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (45 samples, 0.42%)</title><rect x="915.3" y="179.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="918.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (45 samples, 0.42%)</title><rect x="915.3" y="163.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="918.3" y="174.0"></text>
</g>
<g>
<title>write (45 samples, 0.42%)</title><rect x="915.3" y="147.0" width="5.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="918.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (12 samples, 0.11%)</title><rect x="920.4" y="227.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="923.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 0.10%)</title><rect x="920.5" y="211.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="923.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="920.7" y="195.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="923.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="920.7" y="179.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="923.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.06%)</title><rect x="920.8" y="163.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="923.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (6 samples, 0.06%)</title><rect x="920.8" y="147.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="923.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (58 samples, 0.54%)</title><rect x="921.9" y="227.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="924.9" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (48 samples, 0.44%)</title><rect x="922.7" y="211.0" width="5.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="925.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (17 samples, 0.16%)</title><rect x="928.2" y="227.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (17 samples, 0.16%)</title><rect x="928.2" y="211.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="931.2" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (14 samples, 0.13%)</title><rect x="928.6" y="195.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="931.6" y="206.0"></text>
</g>
<g>
<title>[worker tid=74499] (242 samples, 2.24%)</title><rect x="931.4" y="531.0" width="26.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="934.4" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (240 samples, 2.22%)</title><rect x="931.6" y="515.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (240 samples, 2.22%)</title><rect x="931.6" y="499.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="934.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (240 samples, 2.22%)</title><rect x="931.6" y="483.0" width="26.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (53 samples, 0.49%)</title><rect x="932.2" y="467.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (51 samples, 0.47%)</title><rect x="932.4" y="451.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (48 samples, 0.44%)</title><rect x="932.4" y="435.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.43%)</title><rect x="932.6" y="419.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.43%)</title><rect x="932.6" y="403.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.6" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (45 samples, 0.42%)</title><rect x="932.7" y="387.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="935.7" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (42 samples, 0.39%)</title><rect x="932.8" y="371.0" width="4.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="935.8" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (42 samples, 0.39%)</title><rect x="932.8" y="355.0" width="4.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="935.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (182 samples, 1.68%)</title><rect x="937.9" y="467.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (182 samples, 1.68%)</title><rect x="937.9" y="451.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (33 samples, 0.31%)</title><rect x="937.9" y="435.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (33 samples, 0.31%)</title><rect x="937.9" y="419.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.30%)</title><rect x="938.1" y="403.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.30%)</title><rect x="938.1" y="387.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (31 samples, 0.29%)</title><rect x="938.1" y="371.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (31 samples, 0.29%)</title><rect x="938.1" y="355.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (30 samples, 0.28%)</title><rect x="938.2" y="339.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (29 samples, 0.27%)</title><rect x="938.3" y="323.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (29 samples, 0.27%)</title><rect x="938.3" y="307.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (28 samples, 0.26%)</title><rect x="938.3" y="291.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (28 samples, 0.26%)</title><rect x="938.3" y="275.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (28 samples, 0.26%)</title><rect x="938.3" y="259.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.3" y="270.0"></text>
</g>
<g>
<title>write (25 samples, 0.23%)</title><rect x="938.6" y="243.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="941.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (148 samples, 1.37%)</title><rect x="941.6" y="435.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (148 samples, 1.37%)</title><rect x="941.6" y="419.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (148 samples, 1.37%)</title><rect x="941.6" y="403.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (148 samples, 1.37%)</title><rect x="941.6" y="387.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.6" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (148 samples, 1.37%)</title><rect x="941.6" y="371.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.6" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (148 samples, 1.37%)</title><rect x="941.6" y="355.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.6" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (147 samples, 1.36%)</title><rect x="941.7" y="339.0" width="16.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="944.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (143 samples, 1.32%)</title><rect x="942.1" y="323.0" width="15.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="945.1" y="334.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.03%)</title><rect x="942.6" y="307.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="945.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (135 samples, 1.25%)</title><rect x="943.0" y="307.0" width="14.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="946.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (134 samples, 1.24%)</title><rect x="943.1" y="291.0" width="14.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="946.1" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (134 samples, 1.24%)</title><rect x="943.1" y="275.0" width="14.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="946.1" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (129 samples, 1.19%)</title><rect x="943.3" y="259.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="946.3" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (128 samples, 1.18%)</title><rect x="943.3" y="243.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="946.3" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (32 samples, 0.30%)</title><rect x="943.7" y="227.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="946.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (32 samples, 0.30%)</title><rect x="943.7" y="211.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="946.7" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (32 samples, 0.30%)</title><rect x="943.7" y="195.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="946.7" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (32 samples, 0.30%)</title><rect x="943.7" y="179.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="946.7" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (31 samples, 0.29%)</title><rect x="943.8" y="163.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="946.8" y="174.0"></text>
</g>
<g>
<title>write (31 samples, 0.29%)</title><rect x="943.8" y="147.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="946.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (8 samples, 0.07%)</title><rect x="947.2" y="227.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="950.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.06%)</title><rect x="947.4" y="211.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="950.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.05%)</title><rect x="947.6" y="195.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="950.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.05%)</title><rect x="947.6" y="179.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="950.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.03%)</title><rect x="948.1" y="227.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="951.1" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="948.1" y="211.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="951.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="948.1" y="195.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="951.1" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="948.1" y="179.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (58 samples, 0.54%)</title><rect x="948.4" y="227.0" width="6.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="951.4" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (51 samples, 0.47%)</title><rect x="949.1" y="211.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="952.1" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (22 samples, 0.20%)</title><rect x="954.8" y="227.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="957.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (22 samples, 0.20%)</title><rect x="954.8" y="211.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="957.8" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (21 samples, 0.19%)</title><rect x="954.9" y="195.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="957.9" y="206.0"></text>
</g>
<g>
<title>[worker tid=75011] (248 samples, 2.30%)</title><rect x="957.8" y="531.0" width="27.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="960.8" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (246 samples, 2.28%)</title><rect x="958.0" y="515.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (246 samples, 2.28%)</title><rect x="958.0" y="499.0" width="26.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (246 samples, 2.28%)</title><rect x="958.0" y="483.0" width="26.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (68 samples, 0.63%)</title><rect x="958.4" y="467.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (64 samples, 0.59%)</title><rect x="958.8" y="451.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (63 samples, 0.58%)</title><rect x="958.8" y="435.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (60 samples, 0.56%)</title><rect x="959.1" y="419.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 0.56%)</title><rect x="959.1" y="403.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.1" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (59 samples, 0.55%)</title><rect x="959.2" y="387.0" width="6.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="962.2" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (55 samples, 0.51%)</title><rect x="959.5" y="371.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="962.5" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (54 samples, 0.50%)</title><rect x="959.5" y="355.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="962.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (175 samples, 1.62%)</title><rect x="965.8" y="467.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (175 samples, 1.62%)</title><rect x="965.8" y="451.0" width="19.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (35 samples, 0.32%)</title><rect x="965.8" y="435.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="968.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (34 samples, 0.31%)</title><rect x="965.8" y="419.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.03%)</title><rect x="965.8" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 0.29%)</title><rect x="966.1" y="403.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 0.29%)</title><rect x="966.1" y="387.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (31 samples, 0.29%)</title><rect x="966.1" y="371.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (31 samples, 0.29%)</title><rect x="966.1" y="355.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (31 samples, 0.29%)</title><rect x="966.1" y="339.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="966.1" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="966.1" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 0.26%)</title><rect x="966.4" y="323.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="969.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (28 samples, 0.26%)</title><rect x="966.4" y="307.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (26 samples, 0.24%)</title><rect x="966.7" y="291.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (24 samples, 0.22%)</title><rect x="966.9" y="275.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (24 samples, 0.22%)</title><rect x="966.9" y="259.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.9" y="270.0"></text>
</g>
<g>
<title>write (24 samples, 0.22%)</title><rect x="966.9" y="243.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="969.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (139 samples, 1.29%)</title><rect x="969.6" y="435.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="972.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (139 samples, 1.29%)</title><rect x="969.6" y="419.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (139 samples, 1.29%)</title><rect x="969.6" y="403.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (138 samples, 1.28%)</title><rect x="969.7" y="387.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (136 samples, 1.26%)</title><rect x="969.7" y="371.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (136 samples, 1.26%)</title><rect x="969.7" y="355.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (136 samples, 1.26%)</title><rect x="969.7" y="339.0" width="14.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="972.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (134 samples, 1.24%)</title><rect x="969.9" y="323.0" width="14.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="972.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (130 samples, 1.20%)</title><rect x="970.4" y="307.0" width="14.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="973.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (130 samples, 1.20%)</title><rect x="970.4" y="291.0" width="14.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="973.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (129 samples, 1.19%)</title><rect x="970.4" y="275.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="973.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (124 samples, 1.15%)</title><rect x="970.4" y="259.0" width="13.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="973.4" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (122 samples, 1.13%)</title><rect x="970.5" y="243.0" width="13.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="973.5" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (39 samples, 0.36%)</title><rect x="970.9" y="227.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="973.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (39 samples, 0.36%)</title><rect x="970.9" y="211.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="973.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (39 samples, 0.36%)</title><rect x="970.9" y="195.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="973.9" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (38 samples, 0.35%)</title><rect x="970.9" y="179.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="973.9" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (38 samples, 0.35%)</title><rect x="970.9" y="163.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="973.9" y="174.0"></text>
</g>
<g>
<title>write (37 samples, 0.34%)</title><rect x="971.0" y="147.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="974.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (12 samples, 0.11%)</title><rect x="975.4" y="227.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.4" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="975.4" y="211.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="978.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="975.4" y="195.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="978.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (12 samples, 0.11%)</title><rect x="975.4" y="179.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="978.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (10 samples, 0.09%)</title><rect x="975.6" y="163.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="978.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (8 samples, 0.07%)</title><rect x="975.8" y="147.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="978.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (45 samples, 0.42%)</title><rect x="976.8" y="227.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="979.8" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (36 samples, 0.33%)</title><rect x="977.6" y="211.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="980.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (19 samples, 0.18%)</title><rect x="981.7" y="227.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="984.7" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (19 samples, 0.18%)</title><rect x="981.7" y="211.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="984.7" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (18 samples, 0.17%)</title><rect x="981.8" y="195.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="984.8" y="206.0"></text>
</g>
<g>
<title>[worker tid=76803] (237 samples, 2.19%)</title><rect x="984.9" y="531.0" width="25.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="987.9" y="542.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (236 samples, 2.18%)</title><rect x="985.0" y="515.0" width="25.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (236 samples, 2.18%)</title><rect x="985.0" y="499.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (236 samples, 2.18%)</title><rect x="985.0" y="483.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (47 samples, 0.43%)</title><rect x="985.2" y="467.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (45 samples, 0.42%)</title><rect x="985.5" y="451.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (36 samples, 0.33%)</title><rect x="985.5" y="435.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (34 samples, 0.31%)</title><rect x="985.7" y="419.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 0.31%)</title><rect x="985.7" y="403.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (33 samples, 0.31%)</title><rect x="985.8" y="387.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="988.8" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (32 samples, 0.30%)</title><rect x="985.9" y="371.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="988.9" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (30 samples, 0.28%)</title><rect x="986.1" y="355.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.06%)</title><rect x="989.6" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.06%)</title><rect x="989.6" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.06%)</title><rect x="989.6" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.06%)</title><rect x="989.6" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.06%)</title><rect x="989.6" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.06%)</title><rect x="989.7" y="355.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="992.7" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="989.9" y="339.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="992.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (187 samples, 1.73%)</title><rect x="990.4" y="467.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (187 samples, 1.73%)</title><rect x="990.4" y="451.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 0.33%)</title><rect x="990.4" y="435.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (33 samples, 0.31%)</title><rect x="990.7" y="419.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="993.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 0.31%)</title><rect x="990.7" y="403.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 0.31%)</title><rect x="990.7" y="387.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="993.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (33 samples, 0.31%)</title><rect x="990.7" y="371.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (33 samples, 0.31%)</title><rect x="990.7" y="355.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (33 samples, 0.31%)</title><rect x="990.7" y="339.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.29%)</title><rect x="990.9" y="323.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.29%)</title><rect x="990.9" y="307.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (30 samples, 0.28%)</title><rect x="990.9" y="291.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (30 samples, 0.28%)</title><rect x="990.9" y="275.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (30 samples, 0.28%)</title><rect x="990.9" y="259.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.9" y="270.0"></text>
</g>
<g>
<title>write (28 samples, 0.26%)</title><rect x="991.1" y="243.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="994.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (149 samples, 1.38%)</title><rect x="994.3" y="435.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (149 samples, 1.38%)</title><rect x="994.3" y="419.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (149 samples, 1.38%)</title><rect x="994.3" y="403.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (145 samples, 1.34%)</title><rect x="994.7" y="387.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (144 samples, 1.33%)</title><rect x="994.7" y="371.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (144 samples, 1.33%)</title><rect x="994.7" y="355.0" width="15.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (143 samples, 1.32%)</title><rect x="994.8" y="339.0" width="15.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="997.8" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (142 samples, 1.31%)</title><rect x="995.0" y="323.0" width="15.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="998.0" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (137 samples, 1.27%)</title><rect x="995.5" y="307.0" width="15.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="998.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (137 samples, 1.27%)</title><rect x="995.5" y="291.0" width="15.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="998.5" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (137 samples, 1.27%)</title><rect x="995.5" y="275.0" width="15.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="998.5" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (134 samples, 1.24%)</title><rect x="995.6" y="259.0" width="14.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="998.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (132 samples, 1.22%)</title><rect x="995.8" y="243.0" width="14.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (46 samples, 0.43%)</title><rect x="996.2" y="227.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="999.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (45 samples, 0.42%)</title><rect x="996.2" y="211.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="999.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (45 samples, 0.42%)</title><rect x="996.2" y="195.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="999.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (39 samples, 0.36%)</title><rect x="996.2" y="179.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="999.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (39 samples, 0.36%)</title><rect x="996.2" y="163.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="999.2" y="174.0"></text>
</g>
<g>
<title>write (38 samples, 0.35%)</title><rect x="996.3" y="147.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="999.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (5 samples, 0.05%)</title><rect x="1000.4" y="179.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1003.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.08%)</title><rect x="1001.2" y="227.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1004.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.06%)</title><rect x="1001.4" y="211.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1004.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (7 samples, 0.06%)</title><rect x="1001.4" y="195.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1004.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (7 samples, 0.06%)</title><rect x="1001.4" y="179.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.05%)</title><rect x="1001.5" y="163.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1004.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (4 samples, 0.04%)</title><rect x="1001.6" y="147.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1004.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (59 samples, 0.55%)</title><rect x="1002.2" y="227.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.2" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (51 samples, 0.47%)</title><rect x="1003.0" y="211.0" width="5.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1006.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (10 samples, 0.09%)</title><rect x="1008.6" y="227.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1011.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (10 samples, 0.09%)</title><rect x="1008.6" y="211.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.6" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (10 samples, 0.09%)</title><rect x="1008.6" y="195.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1011.6" y="206.0"></text>
</g>
<g>
<title>[worker tid=77571] (534 samples, 4.94%)</title><rect x="1010.8" y="531.0" width="58.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1013.8" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (534 samples, 4.94%)</title><rect x="1010.8" y="515.0" width="58.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.8" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (534 samples, 4.94%)</title><rect x="1010.8" y="499.0" width="58.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.8" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (534 samples, 4.94%)</title><rect x="1010.8" y="483.0" width="58.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.8" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.03%)</title><rect x="1011.0" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1014.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1011.0" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.03%)</title><rect x="1011.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (75 samples, 0.69%)</title><rect x="1011.4" y="467.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (74 samples, 0.68%)</title><rect x="1011.6" y="451.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (61 samples, 0.56%)</title><rect x="1011.6" y="435.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (60 samples, 0.56%)</title><rect x="1011.7" y="419.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 0.56%)</title><rect x="1011.7" y="403.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (53 samples, 0.49%)</title><rect x="1012.4" y="387.0" width="5.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1015.4" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (50 samples, 0.46%)</title><rect x="1012.4" y="371.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1015.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (47 samples, 0.43%)</title><rect x="1012.6" y="355.0" width="5.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1015.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.04%)</title><rect x="1018.2" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.04%)</title><rect x="1018.2" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1018.2" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.08%)</title><rect x="1018.7" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.08%)</title><rect x="1018.7" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.08%)</title><rect x="1018.7" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.08%)</title><rect x="1018.7" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1021.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.08%)</title><rect x="1018.7" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.7" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (8 samples, 0.07%)</title><rect x="1018.8" y="355.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1021.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.07%)</title><rect x="1018.8" y="339.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1021.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (452 samples, 4.18%)</title><rect x="1019.7" y="467.0" width="49.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.7" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (452 samples, 4.18%)</title><rect x="1019.7" y="451.0" width="49.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.7" y="462.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (80 samples, 0.74%)</title><rect x="1019.7" y="435.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 0.72%)</title><rect x="1019.9" y="419.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="1019.9" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 0.67%)</title><rect x="1020.5" y="403.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 0.67%)</title><rect x="1020.5" y="387.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (72 samples, 0.67%)</title><rect x="1020.5" y="371.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (72 samples, 0.67%)</title><rect x="1020.5" y="355.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (71 samples, 0.66%)</title><rect x="1020.6" y="339.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (69 samples, 0.64%)</title><rect x="1020.8" y="323.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (69 samples, 0.64%)</title><rect x="1020.8" y="307.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.03%)</title><rect x="1020.8" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.03%)</title><rect x="1020.8" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.03%)</title><rect x="1020.8" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.03%)</title><rect x="1020.8" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.03%)</title><rect x="1020.8" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="1020.8" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (65 samples, 0.60%)</title><rect x="1021.2" y="291.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (65 samples, 0.60%)</title><rect x="1021.2" y="275.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (65 samples, 0.60%)</title><rect x="1021.2" y="259.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.2" y="270.0"></text>
</g>
<g>
<title>write (62 samples, 0.57%)</title><rect x="1021.5" y="243.0" width="6.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1024.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (155 samples, 1.43%)</title><rect x="1028.5" y="435.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (155 samples, 1.43%)</title><rect x="1028.5" y="419.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (155 samples, 1.43%)</title><rect x="1028.5" y="403.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (153 samples, 1.42%)</title><rect x="1028.7" y="387.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (145 samples, 1.34%)</title><rect x="1028.9" y="371.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.9" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (145 samples, 1.34%)</title><rect x="1028.9" y="355.0" width="15.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.9" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (145 samples, 1.34%)</title><rect x="1028.9" y="339.0" width="15.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1031.9" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (145 samples, 1.34%)</title><rect x="1028.9" y="323.0" width="15.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1031.9" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="1029.2" y="307.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1032.2" y="318.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.04%)</title><rect x="1029.6" y="307.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1032.6" y="318.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.04%)</title><rect x="1029.6" y="291.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1032.6" y="302.0"></text>
</g>
<g>
<title>malloc_zone_malloc (4 samples, 0.04%)</title><rect x="1029.6" y="275.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1032.6" y="286.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (4 samples, 0.04%)</title><rect x="1029.6" y="259.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1032.6" y="270.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (4 samples, 0.04%)</title><rect x="1029.6" y="243.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1032.6" y="254.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (135 samples, 1.25%)</title><rect x="1030.0" y="307.0" width="14.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1033.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (135 samples, 1.25%)</title><rect x="1030.0" y="291.0" width="14.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.0" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (135 samples, 1.25%)</title><rect x="1030.0" y="275.0" width="14.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1033.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (131 samples, 1.21%)</title><rect x="1030.1" y="259.0" width="14.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.1" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (131 samples, 1.21%)</title><rect x="1030.1" y="243.0" width="14.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1033.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (38 samples, 0.35%)</title><rect x="1030.2" y="227.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.2" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (38 samples, 0.35%)</title><rect x="1030.2" y="211.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1033.2" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (38 samples, 0.35%)</title><rect x="1030.2" y="195.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.2" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (36 samples, 0.33%)</title><rect x="1030.2" y="179.0" width="4.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1033.2" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (35 samples, 0.32%)</title><rect x="1030.3" y="163.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.3" y="174.0"></text>
</g>
<g>
<title>write (34 samples, 0.31%)</title><rect x="1030.4" y="147.0" width="3.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1033.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (10 samples, 0.09%)</title><rect x="1034.5" y="227.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1037.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1034.6" y="211.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1037.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1034.6" y="195.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1037.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1034.6" y="179.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1037.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.07%)</title><rect x="1034.6" y="163.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1037.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (6 samples, 0.06%)</title><rect x="1034.8" y="147.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1037.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (65 samples, 0.60%)</title><rect x="1035.7" y="227.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.7" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (53 samples, 0.49%)</title><rect x="1036.6" y="211.0" width="5.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1039.6" y="222.0"></text>
</g>
<g>
<title>std::__1::condition_variable::wait(std::__1::unique_lock&lt;std::__1::mutex&gt;&amp;) (3 samples, 0.03%)</title><rect x="1042.5" y="211.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1045.5" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="1042.5" y="195.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1045.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (14 samples, 0.13%)</title><rect x="1042.8" y="227.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1045.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (14 samples, 0.13%)</title><rect x="1042.8" y="211.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1045.8" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (12 samples, 0.11%)</title><rect x="1042.9" y="195.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1045.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (4 samples, 0.04%)</title><rect x="1045.0" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (217 samples, 2.01%)</title><rect x="1045.4" y="435.0" width="23.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.4" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (217 samples, 2.01%)</title><rect x="1045.4" y="419.0" width="23.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.4" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (217 samples, 2.01%)</title><rect x="1045.4" y="403.0" width="23.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.4" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (215 samples, 1.99%)</title><rect x="1045.6" y="387.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.6" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (215 samples, 1.99%)</title><rect x="1045.6" y="371.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.6" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (129 samples, 1.19%)</title><rect x="1045.6" y="355.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (125 samples, 1.16%)</title><rect x="1046.1" y="339.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (124 samples, 1.15%)</title><rect x="1046.2" y="323.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (122 samples, 1.13%)</title><rect x="1046.3" y="307.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (122 samples, 1.13%)</title><rect x="1046.3" y="291.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (120 samples, 1.11%)</title><rect x="1046.4" y="275.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (120 samples, 1.11%)</title><rect x="1046.4" y="259.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (120 samples, 1.11%)</title><rect x="1046.4" y="243.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.4" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (116 samples, 1.07%)</title><rect x="1046.8" y="227.0" width="12.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1049.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.06%)</title><rect x="1059.7" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.05%)</title><rect x="1060.4" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (72 samples, 0.67%)</title><rect x="1060.9" y="355.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.9" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (48 samples, 0.44%)</title><rect x="1060.9" y="339.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.9" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (47 samples, 0.43%)</title><rect x="1061.0" y="323.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.0" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (47 samples, 0.43%)</title><rect x="1061.0" y="307.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (46 samples, 0.43%)</title><rect x="1061.1" y="291.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="1061.1" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1061.1" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (43 samples, 0.40%)</title><rect x="1061.5" y="275.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (43 samples, 0.40%)</title><rect x="1061.5" y="259.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (42 samples, 0.39%)</title><rect x="1061.6" y="243.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (42 samples, 0.39%)</title><rect x="1061.6" y="227.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (42 samples, 0.39%)</title><rect x="1061.6" y="211.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.6" y="222.0"></text>
</g>
<g>
<title>write (39 samples, 0.36%)</title><rect x="1061.9" y="195.0" width="4.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1064.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (24 samples, 0.22%)</title><rect x="1066.2" y="339.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.2" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 0.22%)</title><rect x="1066.2" y="323.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.2" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.16%)</title><rect x="1066.2" y="307.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1069.2" y="318.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.06%)</title><rect x="1067.2" y="291.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1070.2" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (5 samples, 0.05%)</title><rect x="1067.5" y="275.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1070.5" y="286.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (3 samples, 0.03%)</title><rect x="1067.7" y="259.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.7" y="270.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.03%)</title><rect x="1068.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.8" y="366.0"></text>
</g>
<g>
<title>[worker tid=78339] (539 samples, 4.99%)</title><rect x="1069.1" y="531.0" width="58.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1072.1" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (539 samples, 4.99%)</title><rect x="1069.1" y="515.0" width="58.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.1" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (539 samples, 4.99%)</title><rect x="1069.1" y="499.0" width="58.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.1" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (539 samples, 4.99%)</title><rect x="1069.1" y="483.0" width="58.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.1" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (88 samples, 0.81%)</title><rect x="1069.3" y="467.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (88 samples, 0.81%)</title><rect x="1069.3" y="451.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (70 samples, 0.65%)</title><rect x="1069.3" y="435.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1072.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (67 samples, 0.62%)</title><rect x="1069.7" y="419.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (67 samples, 0.62%)</title><rect x="1069.7" y="403.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.7" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (63 samples, 0.58%)</title><rect x="1070.1" y="387.0" width="6.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1073.1" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (58 samples, 0.54%)</title><rect x="1070.5" y="371.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1073.5" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (52 samples, 0.48%)</title><rect x="1070.7" y="355.0" width="5.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1073.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.06%)</title><rect x="1077.0" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.06%)</title><rect x="1077.0" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1077.2" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.11%)</title><rect x="1077.6" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.11%)</title><rect x="1077.6" y="419.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.11%)</title><rect x="1077.6" y="403.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.11%)</title><rect x="1077.6" y="387.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.11%)</title><rect x="1077.6" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="1077.8" y="355.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1080.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.07%)</title><rect x="1078.0" y="339.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1081.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (449 samples, 4.16%)</title><rect x="1078.9" y="467.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.9" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (448 samples, 4.15%)</title><rect x="1079.0" y="451.0" width="49.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.0" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (69 samples, 0.64%)</title><rect x="1079.0" y="435.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 0.61%)</title><rect x="1079.3" y="419.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.03%)</title><rect x="1079.3" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 0.58%)</title><rect x="1079.6" y="403.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 0.58%)</title><rect x="1079.6" y="387.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (63 samples, 0.58%)</title><rect x="1079.6" y="371.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (63 samples, 0.58%)</title><rect x="1079.6" y="355.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (62 samples, 0.57%)</title><rect x="1079.7" y="339.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.07%)</title><rect x="1079.9" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.07%)</title><rect x="1079.9" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="1080.0" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="1080.1" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="1080.1" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.03%)</title><rect x="1080.1" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.48%)</title><rect x="1080.8" y="323.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.48%)</title><rect x="1080.8" y="307.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (52 samples, 0.48%)</title><rect x="1080.8" y="291.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (52 samples, 0.48%)</title><rect x="1080.8" y="275.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (52 samples, 0.48%)</title><rect x="1080.8" y="259.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.8" y="270.0"></text>
</g>
<g>
<title>write (46 samples, 0.43%)</title><rect x="1081.4" y="243.0" width="5.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1084.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (157 samples, 1.45%)</title><rect x="1086.6" y="435.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (157 samples, 1.45%)</title><rect x="1086.6" y="419.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (157 samples, 1.45%)</title><rect x="1086.6" y="403.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (156 samples, 1.44%)</title><rect x="1086.7" y="387.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.7" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (154 samples, 1.43%)</title><rect x="1086.7" y="371.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.7" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (154 samples, 1.43%)</title><rect x="1086.7" y="355.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.7" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (154 samples, 1.43%)</title><rect x="1086.7" y="339.0" width="16.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1089.7" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (152 samples, 1.41%)</title><rect x="1086.9" y="323.0" width="16.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.9" y="334.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (146 samples, 1.35%)</title><rect x="1087.6" y="307.0" width="15.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.6" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (145 samples, 1.34%)</title><rect x="1087.7" y="291.0" width="15.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.7" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (145 samples, 1.34%)</title><rect x="1087.7" y="275.0" width="15.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1090.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (139 samples, 1.29%)</title><rect x="1087.7" y="259.0" width="15.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (137 samples, 1.27%)</title><rect x="1087.7" y="243.0" width="14.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1090.7" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (30 samples, 0.28%)</title><rect x="1088.3" y="227.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1091.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (30 samples, 0.28%)</title><rect x="1088.3" y="211.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1091.3" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (30 samples, 0.28%)</title><rect x="1088.3" y="195.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1091.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (25 samples, 0.23%)</title><rect x="1088.3" y="179.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1091.3" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (23 samples, 0.21%)</title><rect x="1088.5" y="163.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1091.5" y="174.0"></text>
</g>
<g>
<title>write (22 samples, 0.20%)</title><rect x="1088.7" y="147.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1091.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (3 samples, 0.03%)</title><rect x="1091.1" y="179.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1094.1" y="190.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (11 samples, 0.10%)</title><rect x="1091.8" y="227.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.8" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1092.0" y="211.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1095.0" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1092.0" y="195.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1095.0" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1092.0" y="179.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1095.0" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 0.06%)</title><rect x="1092.3" y="163.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1095.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (5 samples, 0.05%)</title><rect x="1092.5" y="147.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1095.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (54 samples, 0.50%)</title><rect x="1093.0" y="227.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.0" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (46 samples, 0.43%)</title><rect x="1093.9" y="211.0" width="5.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1096.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (33 samples, 0.31%)</title><rect x="1098.9" y="227.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1101.9" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (33 samples, 0.31%)</title><rect x="1098.9" y="211.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1101.9" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (28 samples, 0.26%)</title><rect x="1099.5" y="195.0" width="3.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1102.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.03%)</title><rect x="1103.2" y="259.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (222 samples, 2.05%)</title><rect x="1103.7" y="435.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (222 samples, 2.05%)</title><rect x="1103.7" y="419.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (221 samples, 2.05%)</title><rect x="1103.8" y="403.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.8" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (219 samples, 2.03%)</title><rect x="1104.1" y="387.0" width="23.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (219 samples, 2.03%)</title><rect x="1104.1" y="371.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (112 samples, 1.04%)</title><rect x="1104.2" y="355.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (111 samples, 1.03%)</title><rect x="1104.3" y="339.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (111 samples, 1.03%)</title><rect x="1104.3" y="323.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (106 samples, 0.98%)</title><rect x="1104.6" y="307.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (106 samples, 0.98%)</title><rect x="1104.6" y="291.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (106 samples, 0.98%)</title><rect x="1104.6" y="275.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (106 samples, 0.98%)</title><rect x="1104.6" y="259.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (106 samples, 0.98%)</title><rect x="1104.6" y="243.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.6" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (101 samples, 0.93%)</title><rect x="1105.1" y="227.0" width="11.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1108.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.06%)</title><rect x="1116.4" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.04%)</title><rect x="1116.4" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="1116.4" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="1116.4" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (8 samples, 0.07%)</title><rect x="1117.2" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="1117.3" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (88 samples, 0.81%)</title><rect x="1118.2" y="355.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.2" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (63 samples, 0.58%)</title><rect x="1118.2" y="339.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.03%)</title><rect x="1118.2" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.03%)</title><rect x="1118.2" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.2" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (60 samples, 0.56%)</title><rect x="1118.6" y="323.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.6" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (60 samples, 0.56%)</title><rect x="1118.6" y="307.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (60 samples, 0.56%)</title><rect x="1118.6" y="291.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (56 samples, 0.52%)</title><rect x="1118.8" y="275.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (56 samples, 0.52%)</title><rect x="1118.8" y="259.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (54 samples, 0.50%)</title><rect x="1118.9" y="243.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (54 samples, 0.50%)</title><rect x="1118.9" y="227.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (54 samples, 0.50%)</title><rect x="1118.9" y="211.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.9" y="222.0"></text>
</g>
<g>
<title>write (52 samples, 0.48%)</title><rect x="1119.1" y="195.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1122.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (25 samples, 0.23%)</title><rect x="1125.1" y="339.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.1" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.23%)</title><rect x="1125.1" y="323.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.1" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (16 samples, 0.15%)</title><rect x="1125.2" y="307.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1128.2" y="318.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.06%)</title><rect x="1125.5" y="291.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.5" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.05%)</title><rect x="1126.4" y="291.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.4" y="302.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (4 samples, 0.04%)</title><rect x="1126.5" y="275.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.5" y="286.0"></text>
</g>
<g>
<title>[worker tid=79111] (568 samples, 5.26%)</title><rect x="1128.0" y="531.0" width="62.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1131.0" y="542.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (567 samples, 5.25%)</title><rect x="1128.1" y="515.0" width="61.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.1" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (567 samples, 5.25%)</title><rect x="1128.1" y="499.0" width="61.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.1" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (567 samples, 5.25%)</title><rect x="1128.1" y="483.0" width="61.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.1" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.03%)</title><rect x="1128.3" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1128.3" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (92 samples, 0.85%)</title><rect x="1128.6" y="467.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (87 samples, 0.81%)</title><rect x="1129.2" y="451.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (65 samples, 0.60%)</title><rect x="1129.2" y="435.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.57%)</title><rect x="1129.5" y="419.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.57%)</title><rect x="1129.5" y="403.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.5" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (58 samples, 0.54%)</title><rect x="1129.9" y="387.0" width="6.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1132.9" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (56 samples, 0.52%)</title><rect x="1130.0" y="371.0" width="6.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.0" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (49 samples, 0.45%)</title><rect x="1130.7" y="355.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1133.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.04%)</title><rect x="1136.3" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.04%)</title><rect x="1136.3" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1136.4" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.17%)</title><rect x="1136.7" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.17%)</title><rect x="1136.7" y="419.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.17%)</title><rect x="1136.7" y="403.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.16%)</title><rect x="1136.8" y="387.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.16%)</title><rect x="1136.8" y="371.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.8" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (15 samples, 0.14%)</title><rect x="1137.0" y="355.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1140.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvsignal (14 samples, 0.13%)</title><rect x="1137.0" y="339.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1140.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (470 samples, 4.35%)</title><rect x="1138.7" y="467.0" width="51.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.7" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (470 samples, 4.35%)</title><rect x="1138.7" y="451.0" width="51.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.7" y="462.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (81 samples, 0.75%)</title><rect x="1138.7" y="435.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (75 samples, 0.69%)</title><rect x="1139.3" y="419.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.05%)</title><rect x="1139.3" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 0.65%)</title><rect x="1139.9" y="403.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 0.65%)</title><rect x="1139.9" y="387.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (70 samples, 0.65%)</title><rect x="1139.9" y="371.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (70 samples, 0.65%)</title><rect x="1139.9" y="355.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (70 samples, 0.65%)</title><rect x="1139.9" y="339.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="1139.9" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1139.9" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (67 samples, 0.62%)</title><rect x="1140.2" y="323.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (67 samples, 0.62%)</title><rect x="1140.2" y="307.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (63 samples, 0.58%)</title><rect x="1140.3" y="291.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (62 samples, 0.57%)</title><rect x="1140.4" y="275.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (62 samples, 0.57%)</title><rect x="1140.4" y="259.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.4" y="270.0"></text>
</g>
<g>
<title>write (61 samples, 0.56%)</title><rect x="1140.5" y="243.0" width="6.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1143.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="1147.2" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$119/305969308.act (179 samples, 1.66%)</title><rect x="1147.5" y="435.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$2 (179 samples, 1.66%)</title><rect x="1147.5" y="419.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.put (179 samples, 1.66%)</title><rect x="1147.5" y="403.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (179 samples, 1.66%)</title><rect x="1147.5" y="387.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.5" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (174 samples, 1.61%)</title><rect x="1147.5" y="371.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.5" y="382.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (174 samples, 1.61%)</title><rect x="1147.5" y="355.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.5" y="366.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (174 samples, 1.61%)</title><rect x="1147.5" y="339.0" width="19.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1150.5" y="350.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (173 samples, 1.60%)</title><rect x="1147.6" y="323.0" width="18.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.6" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="1148.0" y="307.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1151.0" y="318.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.04%)</title><rect x="1148.3" y="307.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1151.3" y="318.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.04%)</title><rect x="1148.3" y="291.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1151.3" y="302.0"></text>
</g>
<g>
<title>malloc_zone_malloc (4 samples, 0.04%)</title><rect x="1148.3" y="275.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1151.3" y="286.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (4 samples, 0.04%)</title><rect x="1148.3" y="259.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1151.3" y="270.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="1148.4" y="243.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1151.4" y="254.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (162 samples, 1.50%)</title><rect x="1148.7" y="307.0" width="17.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.7" y="318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (162 samples, 1.50%)</title><rect x="1148.7" y="291.0" width="17.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.7" y="302.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (162 samples, 1.50%)</title><rect x="1148.7" y="275.0" width="17.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (156 samples, 1.44%)</title><rect x="1148.7" y="259.0" width="17.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.7" y="270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned long, rocksdb::PreReleaseCallback*) (154 samples, 1.43%)</title><rect x="1148.8" y="243.0" width="16.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (47 samples, 0.43%)</title><rect x="1149.3" y="227.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (46 samples, 0.43%)</title><rect x="1149.4" y="211.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.4" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (46 samples, 0.43%)</title><rect x="1149.4" y="195.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.4" y="206.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (45 samples, 0.42%)</title><rect x="1149.4" y="179.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.4" y="190.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (45 samples, 0.42%)</title><rect x="1149.4" y="163.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.4" y="174.0"></text>
</g>
<g>
<title>write (45 samples, 0.42%)</title><rect x="1149.4" y="147.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1152.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.08%)</title><rect x="1154.5" y="227.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1154.5" y="211.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (9 samples, 0.08%)</title><rect x="1154.5" y="195.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.5" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (8 samples, 0.07%)</title><rect x="1154.6" y="179.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.6" y="190.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.07%)</title><rect x="1154.6" y="163.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (8 samples, 0.07%)</title><rect x="1154.6" y="147.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.05%)</title><rect x="1154.9" y="131.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::ReverseBytewiseComparator() (3 samples, 0.03%)</title><rect x="1155.2" y="115.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (63 samples, 0.58%)</title><rect x="1155.7" y="227.0" width="6.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.7" y="238.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (50 samples, 0.46%)</title><rect x="1156.8" y="211.0" width="5.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.8" y="222.0"></text>
</g>
<g>
<title>std::__1::condition_variable::wait(std::__1::unique_lock&lt;std::__1::mutex&gt;&amp;) (3 samples, 0.03%)</title><rect x="1162.3" y="211.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.3" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="1162.3" y="195.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1165.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (27 samples, 0.25%)</title><rect x="1162.6" y="227.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.6" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 0.25%)</title><rect x="1162.6" y="211.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.6" y="222.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (27 samples, 0.25%)</title><rect x="1162.6" y="195.0" width="2.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1165.6" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.04%)</title><rect x="1165.9" y="259.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferConverter.toArrayShifted (4 samples, 0.04%)</title><rect x="1166.6" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (210 samples, 1.94%)</title><rect x="1167.1" y="435.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.1" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (210 samples, 1.94%)</title><rect x="1167.1" y="419.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1170.1" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (209 samples, 1.93%)</title><rect x="1167.2" y="403.0" width="22.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.2" y="414.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (206 samples, 1.91%)</title><rect x="1167.5" y="387.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.5" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (206 samples, 1.91%)</title><rect x="1167.5" y="371.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1170.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (131 samples, 1.21%)</title><rect x="1167.5" y="355.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (127 samples, 1.18%)</title><rect x="1167.9" y="339.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1170.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (127 samples, 1.18%)</title><rect x="1167.9" y="323.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="1167.9" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1167.9" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (124 samples, 1.15%)</title><rect x="1168.3" y="307.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (124 samples, 1.15%)</title><rect x="1168.3" y="291.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (123 samples, 1.14%)</title><rect x="1168.4" y="275.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (123 samples, 1.14%)</title><rect x="1168.4" y="259.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (123 samples, 1.14%)</title><rect x="1168.4" y="243.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.4" y="254.0"></text>
</g>
<g>
<title>rpc_errlist (115 samples, 1.06%)</title><rect x="1169.3" y="227.0" width="12.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1172.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.04%)</title><rect x="1181.8" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.03%)</title><rect x="1182.2" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (65 samples, 0.60%)</title><rect x="1182.8" y="355.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.8" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (51 samples, 0.47%)</title><rect x="1182.8" y="339.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.8" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (50 samples, 0.46%)</title><rect x="1182.9" y="323.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.9" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (50 samples, 0.46%)</title><rect x="1182.9" y="307.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (50 samples, 0.46%)</title><rect x="1182.9" y="291.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (47 samples, 0.43%)</title><rect x="1183.0" y="275.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (47 samples, 0.43%)</title><rect x="1183.0" y="259.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (46 samples, 0.43%)</title><rect x="1183.1" y="243.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (46 samples, 0.43%)</title><rect x="1183.1" y="227.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (46 samples, 0.43%)</title><rect x="1183.1" y="211.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.1" y="222.0"></text>
</g>
<g>
<title>write (45 samples, 0.42%)</title><rect x="1183.2" y="195.0" width="4.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1186.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (14 samples, 0.13%)</title><rect x="1188.4" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.4" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.13%)</title><rect x="1188.4" y="323.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.4" y="334.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.06%)</title><rect x="1188.5" y="307.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1191.5" y="318.0"></text>
</g>
</g>
</svg>
