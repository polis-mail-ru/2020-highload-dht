<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="437"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="437"> </text>
<g id="frames">
<g>
<title>all (10,628 samples, 100.00%)</title><rect x="10.0" y="403.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="414.0">all</text>
</g>
<g>
<title>[Java: C2 CompilerThread0 tid=21763] (15 samples, 0.14%)</title><rect x="10.2" y="387.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.2" y="398.0"></text>
</g>
<g>
<title>thread_start (15 samples, 0.14%)</title><rect x="10.2" y="371.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.2" y="382.0"></text>
</g>
<g>
<title>_pthread_start (15 samples, 0.14%)</title><rect x="10.2" y="355.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.2" y="366.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 0.14%)</title><rect x="10.2" y="339.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.2" y="350.0"></text>
</g>
<g>
<title>Thread::call_run() (15 samples, 0.14%)</title><rect x="10.2" y="323.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.2" y="334.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 0.14%)</title><rect x="10.2" y="307.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.2" y="318.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 0.14%)</title><rect x="10.2" y="291.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.2" y="302.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.14%)</title><rect x="10.2" y="275.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.2" y="286.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (15 samples, 0.14%)</title><rect x="10.2" y="259.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.2" y="270.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 0.14%)</title><rect x="10.2" y="243.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.2" y="254.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (15 samples, 0.14%)</title><rect x="10.2" y="227.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.2" y="238.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 0.07%)</title><rect x="10.2" y="211.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.2" y="222.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.05%)</title><rect x="10.4" y="195.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.4" y="206.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.05%)</title><rect x="11.0" y="211.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.0" y="222.0"></text>
</g>
<g>
<title>[Java: GC Thread#3 tid=82435] (4 samples, 0.04%)</title><rect x="12.4" y="387.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.4" y="398.0"></text>
</g>
<g>
<title>thread_start (4 samples, 0.04%)</title><rect x="12.4" y="371.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="15.4" y="382.0"></text>
</g>
<g>
<title>_pthread_start (4 samples, 0.04%)</title><rect x="12.4" y="355.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="15.4" y="366.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.04%)</title><rect x="12.4" y="339.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="15.4" y="350.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.04%)</title><rect x="12.4" y="323.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.4" y="334.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.04%)</title><rect x="12.4" y="307.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.4" y="318.0"></text>
</g>
<g>
<title>[Java: VM Thread tid=18947] (6 samples, 0.06%)</title><rect x="13.6" y="387.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="16.6" y="398.0"></text>
</g>
<g>
<title>thread_start (6 samples, 0.06%)</title><rect x="13.6" y="371.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="16.6" y="382.0"></text>
</g>
<g>
<title>_pthread_start (6 samples, 0.06%)</title><rect x="13.6" y="355.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="16.6" y="366.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.06%)</title><rect x="13.6" y="339.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="16.6" y="350.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.06%)</title><rect x="13.6" y="323.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.6" y="334.0"></text>
</g>
<g>
<title>VMThread::run() (6 samples, 0.06%)</title><rect x="13.6" y="307.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.6" y="318.0"></text>
</g>
<g>
<title>VMThread::loop() (6 samples, 0.06%)</title><rect x="13.6" y="291.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.6" y="302.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (4 samples, 0.04%)</title><rect x="13.8" y="275.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.8" y="286.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.04%)</title><rect x="13.8" y="259.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.8" y="270.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.03%)</title><rect x="13.8" y="243.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.8" y="254.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25091] (154 samples, 1.45%)</title><rect x="14.2" y="387.0" width="17.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="17.2" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (154 samples, 1.45%)</title><rect x="14.2" y="371.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (103 samples, 0.97%)</title><rect x="14.4" y="355.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (102 samples, 0.96%)</title><rect x="14.6" y="339.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (102 samples, 0.96%)</title><rect x="14.6" y="323.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (102 samples, 0.96%)</title><rect x="14.6" y="307.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (96 samples, 0.90%)</title><rect x="14.6" y="291.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.6" y="302.0"></text>
</g>
<g>
<title>kevent (85 samples, 0.80%)</title><rect x="15.8" y="275.0" width="9.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="18.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.03%)</title><rect x="25.3" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.3" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.03%)</title><rect x="25.3" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (49 samples, 0.46%)</title><rect x="25.9" y="355.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 0.44%)</title><rect x="25.9" y="339.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 0.24%)</title><rect x="26.1" y="323.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 0.17%)</title><rect x="26.2" y="307.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 0.17%)</title><rect x="26.2" y="291.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (16 samples, 0.15%)</title><rect x="26.4" y="275.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (16 samples, 0.15%)</title><rect x="26.4" y="259.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (11 samples, 0.10%)</title><rect x="27.0" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.10%)</title><rect x="27.0" y="227.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.10%)</title><rect x="27.0" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.08%)</title><rect x="27.0" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="27.0" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="27.0" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="27.0" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="27.0" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.08%)</title><rect x="27.0" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.0" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.07%)</title><rect x="27.1" y="99.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="30.1" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="27.3" y="83.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="30.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="27.9" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="27.9" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.05%)</title><rect x="28.2" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 0.18%)</title><rect x="29.0" y="323.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (19 samples, 0.18%)</title><rect x="29.0" y="307.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (19 samples, 0.18%)</title><rect x="29.0" y="291.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="29.0" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="29.0" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.14%)</title><rect x="29.4" y="275.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.14%)</title><rect x="29.4" y="259.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.14%)</title><rect x="29.4" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (15 samples, 0.14%)</title><rect x="29.4" y="227.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (15 samples, 0.14%)</title><rect x="29.4" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.4" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (15 samples, 0.14%)</title><rect x="29.4" y="195.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="32.4" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=28167] (125 samples, 1.18%)</title><rect x="31.3" y="387.0" width="13.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="34.3" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (125 samples, 1.18%)</title><rect x="31.3" y="371.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (71 samples, 0.67%)</title><rect x="31.3" y="355.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (71 samples, 0.67%)</title><rect x="31.3" y="339.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (71 samples, 0.67%)</title><rect x="31.3" y="323.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (71 samples, 0.67%)</title><rect x="31.3" y="307.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (67 samples, 0.63%)</title><rect x="31.3" y="291.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.3" y="302.0"></text>
</g>
<g>
<title>kevent (60 samples, 0.56%)</title><rect x="32.1" y="275.0" width="6.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="35.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (54 samples, 0.51%)</title><rect x="39.2" y="355.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (54 samples, 0.51%)</title><rect x="39.2" y="339.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 0.35%)</title><rect x="39.3" y="323.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35 samples, 0.33%)</title><rect x="39.3" y="307.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35 samples, 0.33%)</title><rect x="39.3" y="291.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (35 samples, 0.33%)</title><rect x="39.3" y="275.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (35 samples, 0.33%)</title><rect x="39.3" y="259.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.03%)</title><rect x="39.3" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (32 samples, 0.30%)</title><rect x="39.6" y="243.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.30%)</title><rect x="39.6" y="227.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.30%)</title><rect x="39.6" y="211.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (28 samples, 0.26%)</title><rect x="39.6" y="195.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (28 samples, 0.26%)</title><rect x="39.6" y="179.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (28 samples, 0.26%)</title><rect x="39.6" y="163.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 0.26%)</title><rect x="39.6" y="147.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 0.26%)</title><rect x="39.6" y="131.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 0.26%)</title><rect x="39.6" y="115.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.6" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (27 samples, 0.25%)</title><rect x="39.8" y="99.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="42.8" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (20 samples, 0.19%)</title><rect x="40.3" y="83.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="43.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="42.9" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="42.9" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.9" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.15%)</title><rect x="43.4" y="323.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (16 samples, 0.15%)</title><rect x="43.4" y="307.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (16 samples, 0.15%)</title><rect x="43.4" y="291.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="43.4" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="43.4" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.12%)</title><rect x="43.8" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.12%)</title><rect x="43.8" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.11%)</title><rect x="43.8" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (12 samples, 0.11%)</title><rect x="43.8" y="227.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (12 samples, 0.11%)</title><rect x="43.8" y="211.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.8" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (12 samples, 0.11%)</title><rect x="43.8" y="195.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="46.8" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=44551] (218 samples, 2.05%)</title><rect x="45.2" y="387.0" width="24.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="48.2" y="398.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (218 samples, 2.05%)</title><rect x="45.2" y="371.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.2" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (118 samples, 1.11%)</title><rect x="45.5" y="355.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (118 samples, 1.11%)</title><rect x="45.5" y="339.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (118 samples, 1.11%)</title><rect x="45.5" y="323.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (118 samples, 1.11%)</title><rect x="45.5" y="307.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (107 samples, 1.01%)</title><rect x="45.5" y="291.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.5" y="302.0"></text>
</g>
<g>
<title>kevent (104 samples, 0.98%)</title><rect x="45.9" y="275.0" width="11.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="48.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4 samples, 0.04%)</title><rect x="57.4" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="57.5" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.05%)</title><rect x="58.0" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.0" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.05%)</title><rect x="58.0" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.0" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="58.2" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (97 samples, 0.91%)</title><rect x="58.6" y="355.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (94 samples, 0.88%)</title><rect x="59.0" y="339.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (65 samples, 0.61%)</title><rect x="59.1" y="323.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (50 samples, 0.47%)</title><rect x="59.3" y="307.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (50 samples, 0.47%)</title><rect x="59.3" y="291.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (49 samples, 0.46%)</title><rect x="59.4" y="275.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (49 samples, 0.46%)</title><rect x="59.4" y="259.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.04%)</title><rect x="59.7" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (42 samples, 0.40%)</title><rect x="60.2" y="243.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.40%)</title><rect x="60.2" y="227.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.40%)</title><rect x="60.2" y="211.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (40 samples, 0.38%)</title><rect x="60.3" y="195.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (39 samples, 0.37%)</title><rect x="60.4" y="179.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 0.37%)</title><rect x="60.4" y="163.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (39 samples, 0.37%)</title><rect x="60.4" y="147.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (39 samples, 0.37%)</title><rect x="60.4" y="131.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.37%)</title><rect x="60.4" y="115.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.4" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (35 samples, 0.33%)</title><rect x="60.7" y="99.0" width="3.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="63.7" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (25 samples, 0.24%)</title><rect x="61.5" y="83.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="64.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.05%)</title><rect x="64.8" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.03%)</title><rect x="65.4" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.04%)</title><rect x="65.7" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (28 samples, 0.26%)</title><rect x="66.3" y="323.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (28 samples, 0.26%)</title><rect x="66.3" y="307.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (26 samples, 0.24%)</title><rect x="66.5" y="291.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="66.5" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="66.5" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 0.22%)</title><rect x="66.8" y="275.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 0.22%)</title><rect x="66.8" y="259.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (23 samples, 0.22%)</title><rect x="66.8" y="243.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (23 samples, 0.22%)</title><rect x="66.8" y="227.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (23 samples, 0.22%)</title><rect x="66.8" y="211.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.8" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (21 samples, 0.20%)</title><rect x="67.1" y="195.0" width="2.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="70.1" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=28675] (66 samples, 0.62%)</title><rect x="69.4" y="387.0" width="7.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="72.4" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (66 samples, 0.62%)</title><rect x="69.4" y="371.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (36 samples, 0.34%)</title><rect x="69.5" y="355.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (36 samples, 0.34%)</title><rect x="69.5" y="339.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (36 samples, 0.34%)</title><rect x="69.5" y="323.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (36 samples, 0.34%)</title><rect x="69.5" y="307.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (32 samples, 0.30%)</title><rect x="69.5" y="291.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.5" y="302.0"></text>
</g>
<g>
<title>kevent (29 samples, 0.27%)</title><rect x="69.8" y="275.0" width="3.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="72.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (29 samples, 0.27%)</title><rect x="73.5" y="355.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (28 samples, 0.26%)</title><rect x="73.6" y="339.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (20 samples, 0.19%)</title><rect x="73.6" y="323.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 0.17%)</title><rect x="73.6" y="307.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 0.17%)</title><rect x="73.6" y="291.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (18 samples, 0.17%)</title><rect x="73.6" y="275.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (17 samples, 0.16%)</title><rect x="73.7" y="259.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.03%)</title><rect x="73.7" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (14 samples, 0.13%)</title><rect x="74.1" y="243.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.12%)</title><rect x="74.2" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.12%)</title><rect x="74.2" y="211.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.11%)</title><rect x="74.2" y="195.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.11%)</title><rect x="74.2" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.11%)</title><rect x="74.2" y="163.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.11%)</title><rect x="74.2" y="147.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.11%)</title><rect x="74.2" y="131.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.11%)</title><rect x="74.2" y="115.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.2" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (12 samples, 0.11%)</title><rect x="74.2" y="99.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="77.2" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (10 samples, 0.09%)</title><rect x="74.4" y="83.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="77.4" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.08%)</title><rect x="75.8" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (8 samples, 0.08%)</title><rect x="75.8" y="307.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (8 samples, 0.08%)</title><rect x="75.8" y="291.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="76.0" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="76.0" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.07%)</title><rect x="76.0" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 0.07%)</title><rect x="76.0" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (7 samples, 0.07%)</title><rect x="76.0" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.0" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (6 samples, 0.06%)</title><rect x="76.1" y="195.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="79.1" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39171] (210 samples, 1.98%)</title><rect x="76.7" y="387.0" width="23.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="79.7" y="398.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (210 samples, 1.98%)</title><rect x="76.7" y="371.0" width="23.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.7" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (139 samples, 1.31%)</title><rect x="76.9" y="355.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (138 samples, 1.30%)</title><rect x="77.1" y="339.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (138 samples, 1.30%)</title><rect x="77.1" y="323.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (138 samples, 1.30%)</title><rect x="77.1" y="307.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (121 samples, 1.14%)</title><rect x="77.3" y="291.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.3" y="302.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (5 samples, 0.05%)</title><rect x="78.7" y="275.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.7" y="286.0"></text>
</g>
<g>
<title>kevent (103 samples, 0.97%)</title><rect x="79.3" y="275.0" width="11.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="82.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.06%)</title><rect x="90.7" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.05%)</title><rect x="90.8" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.8" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.05%)</title><rect x="90.8" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.8" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.05%)</title><rect x="90.8" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.8" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.05%)</title><rect x="90.8" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (5 samples, 0.05%)</title><rect x="91.8" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (69 samples, 0.65%)</title><rect x="92.4" y="355.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 0.65%)</title><rect x="92.4" y="339.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (28 samples, 0.26%)</title><rect x="92.4" y="323.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.11%)</title><rect x="92.7" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.11%)</title><rect x="92.7" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (11 samples, 0.10%)</title><rect x="92.8" y="275.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (11 samples, 0.10%)</title><rect x="92.8" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (8 samples, 0.08%)</title><rect x="93.2" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.08%)</title><rect x="93.2" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.08%)</title><rect x="93.2" y="211.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.07%)</title><rect x="93.3" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="93.3" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="93.3" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="93.3" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="93.3" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="93.3" y="115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.3" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.07%)</title><rect x="93.3" y="99.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="96.3" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 0.06%)</title><rect x="93.4" y="83.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="96.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.04%)</title><rect x="94.0" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.04%)</title><rect x="94.5" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (41 samples, 0.39%)</title><rect x="95.5" y="323.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (41 samples, 0.39%)</title><rect x="95.5" y="307.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (41 samples, 0.39%)</title><rect x="95.5" y="291.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.05%)</title><rect x="95.5" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="95.5" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="95.6" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 0.34%)</title><rect x="96.0" y="275.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 0.34%)</title><rect x="96.0" y="259.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 0.34%)</title><rect x="96.0" y="243.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (36 samples, 0.34%)</title><rect x="96.0" y="227.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (36 samples, 0.34%)</title><rect x="96.0" y="211.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.0" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (35 samples, 0.33%)</title><rect x="96.2" y="195.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="99.2" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=34051] (81 samples, 0.76%)</title><rect x="100.0" y="387.0" width="9.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="103.0" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (81 samples, 0.76%)</title><rect x="100.0" y="371.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (41 samples, 0.39%)</title><rect x="100.0" y="355.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (40 samples, 0.38%)</title><rect x="100.2" y="339.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (40 samples, 0.38%)</title><rect x="100.2" y="323.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (40 samples, 0.38%)</title><rect x="100.2" y="307.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (39 samples, 0.37%)</title><rect x="100.2" y="291.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.2" y="302.0"></text>
</g>
<g>
<title>kevent (36 samples, 0.34%)</title><rect x="100.5" y="275.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="103.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40 samples, 0.38%)</title><rect x="104.6" y="355.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40 samples, 0.38%)</title><rect x="104.6" y="339.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.27%)</title><rect x="104.6" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.22%)</title><rect x="104.7" y="307.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.22%)</title><rect x="104.7" y="291.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (21 samples, 0.20%)</title><rect x="104.9" y="275.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (21 samples, 0.20%)</title><rect x="104.9" y="259.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (20 samples, 0.19%)</title><rect x="105.0" y="243.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.18%)</title><rect x="105.2" y="227.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.18%)</title><rect x="105.2" y="211.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.16%)</title><rect x="105.2" y="195.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.16%)</title><rect x="105.2" y="179.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.16%)</title><rect x="105.2" y="163.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.16%)</title><rect x="105.2" y="147.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.16%)</title><rect x="105.2" y="131.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.16%)</title><rect x="105.2" y="115.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.2" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (17 samples, 0.16%)</title><rect x="105.2" y="99.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="108.2" y="110.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="105.7" y="83.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="108.7" y="94.0"></text>
</g>
<g>
<title>__psynch_cvsignal (7 samples, 0.07%)</title><rect x="106.0" y="83.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="109.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="107.3" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.3" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.10%)</title><rect x="107.8" y="323.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (11 samples, 0.10%)</title><rect x="107.8" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (11 samples, 0.10%)</title><rect x="107.8" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="107.9" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="107.9" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.09%)</title><rect x="107.9" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (10 samples, 0.09%)</title><rect x="107.9" y="227.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (10 samples, 0.09%)</title><rect x="107.9" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.9" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (9 samples, 0.08%)</title><rect x="108.0" y="195.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="111.0" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=38403] (200 samples, 1.88%)</title><rect x="109.0" y="387.0" width="22.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="112.0" y="398.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (200 samples, 1.88%)</title><rect x="109.0" y="371.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.0" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (133 samples, 1.25%)</title><rect x="109.5" y="355.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (132 samples, 1.24%)</title><rect x="109.6" y="339.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (132 samples, 1.24%)</title><rect x="109.6" y="323.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (132 samples, 1.24%)</title><rect x="109.6" y="307.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (124 samples, 1.17%)</title><rect x="109.7" y="291.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.7" y="302.0"></text>
</g>
<g>
<title>kevent (107 samples, 1.01%)</title><rect x="111.6" y="275.0" width="11.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="114.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.05%)</title><rect x="123.5" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.5" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.03%)</title><rect x="123.5" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.5" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="123.5" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (63 samples, 0.59%)</title><rect x="124.2" y="355.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62 samples, 0.58%)</title><rect x="124.4" y="339.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.27%)</title><rect x="124.4" y="323.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 0.16%)</title><rect x="124.5" y="307.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 0.16%)</title><rect x="124.5" y="291.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (14 samples, 0.13%)</title><rect x="124.8" y="275.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (13 samples, 0.12%)</title><rect x="124.9" y="259.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (11 samples, 0.10%)</title><rect x="125.1" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.10%)</title><rect x="125.1" y="227.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.10%)</title><rect x="125.1" y="211.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.09%)</title><rect x="125.1" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.09%)</title><rect x="125.1" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.09%)</title><rect x="125.1" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.09%)</title><rect x="125.1" y="147.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.09%)</title><rect x="125.1" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.09%)</title><rect x="125.1" y="115.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.1" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="125.2" y="99.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="128.2" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="125.5" y="83.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="128.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.06%)</title><rect x="126.4" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="126.5" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 0.31%)</title><rect x="127.6" y="323.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (33 samples, 0.31%)</title><rect x="127.6" y="307.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (33 samples, 0.31%)</title><rect x="127.6" y="291.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.29%)</title><rect x="127.8" y="275.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.29%)</title><rect x="127.8" y="259.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (31 samples, 0.29%)</title><rect x="127.8" y="243.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (31 samples, 0.29%)</title><rect x="127.8" y="227.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (31 samples, 0.29%)</title><rect x="127.8" y="211.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.8" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (29 samples, 0.27%)</title><rect x="128.0" y="195.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="131.0" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25603] (261 samples, 2.46%)</title><rect x="131.2" y="387.0" width="29.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="134.2" y="398.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (261 samples, 2.46%)</title><rect x="131.2" y="371.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.2" y="382.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (172 samples, 1.62%)</title><rect x="131.6" y="355.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (170 samples, 1.60%)</title><rect x="131.8" y="339.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (170 samples, 1.60%)</title><rect x="131.8" y="323.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (168 samples, 1.58%)</title><rect x="132.0" y="307.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (158 samples, 1.49%)</title><rect x="132.0" y="291.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.0" y="302.0"></text>
</g>
<g>
<title>kevent (141 samples, 1.33%)</title><rect x="133.9" y="275.0" width="15.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (7 samples, 0.07%)</title><rect x="149.9" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.9" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (7 samples, 0.07%)</title><rect x="149.9" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.9" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="150.1" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.1" y="270.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.04%)</title><rect x="150.2" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.04%)</title><rect x="150.2" y="227.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.2" y="238.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.03%)</title><rect x="150.3" y="211.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="153.3" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (86 samples, 0.81%)</title><rect x="150.7" y="355.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (86 samples, 0.81%)</title><rect x="150.7" y="339.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 0.29%)</title><rect x="150.7" y="323.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.22%)</title><rect x="150.9" y="307.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.22%)</title><rect x="150.9" y="291.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (23 samples, 0.22%)</title><rect x="150.9" y="275.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (21 samples, 0.20%)</title><rect x="151.1" y="259.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.04%)</title><rect x="151.2" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (14 samples, 0.13%)</title><rect x="151.7" y="243.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.12%)</title><rect x="151.8" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.12%)</title><rect x="151.8" y="211.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.09%)</title><rect x="151.8" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.08%)</title><rect x="151.9" y="179.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.08%)</title><rect x="151.9" y="163.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.08%)</title><rect x="151.9" y="147.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.08%)</title><rect x="151.9" y="131.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.08%)</title><rect x="151.9" y="115.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.9" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (9 samples, 0.08%)</title><rect x="151.9" y="99.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="154.9" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (8 samples, 0.08%)</title><rect x="152.0" y="83.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="155.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="152.9" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="152.9" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.04%)</title><rect x="153.4" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (55 samples, 0.52%)</title><rect x="154.1" y="323.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (55 samples, 0.52%)</title><rect x="154.1" y="307.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (55 samples, 0.52%)</title><rect x="154.1" y="291.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.07%)</title><rect x="154.1" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.07%)</title><rect x="154.1" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.05%)</title><rect x="154.1" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (5 samples, 0.05%)</title><rect x="154.1" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (48 samples, 0.45%)</title><rect x="154.9" y="275.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (48 samples, 0.45%)</title><rect x="154.9" y="259.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (48 samples, 0.45%)</title><rect x="154.9" y="243.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (48 samples, 0.45%)</title><rect x="154.9" y="227.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (48 samples, 0.45%)</title><rect x="154.9" y="211.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.9" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (47 samples, 0.44%)</title><rect x="155.0" y="195.0" width="5.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="158.0" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=29699] (170 samples, 1.60%)</title><rect x="160.2" y="387.0" width="18.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="163.2" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (170 samples, 1.60%)</title><rect x="160.2" y="371.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (92 samples, 0.87%)</title><rect x="160.3" y="355.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (90 samples, 0.85%)</title><rect x="160.6" y="339.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (90 samples, 0.85%)</title><rect x="160.6" y="323.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (90 samples, 0.85%)</title><rect x="160.6" y="307.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (83 samples, 0.78%)</title><rect x="160.7" y="291.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.7" y="302.0"></text>
</g>
<g>
<title>kevent (76 samples, 0.72%)</title><rect x="161.4" y="275.0" width="8.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="164.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.04%)</title><rect x="170.1" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.1" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.04%)</title><rect x="170.1" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (77 samples, 0.72%)</title><rect x="170.5" y="355.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (76 samples, 0.72%)</title><rect x="170.7" y="339.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (55 samples, 0.52%)</title><rect x="170.7" y="323.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (41 samples, 0.39%)</title><rect x="170.8" y="307.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (41 samples, 0.39%)</title><rect x="170.8" y="291.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (41 samples, 0.39%)</title><rect x="170.8" y="275.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (41 samples, 0.39%)</title><rect x="170.8" y="259.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (38 samples, 0.36%)</title><rect x="171.1" y="243.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (38 samples, 0.36%)</title><rect x="171.1" y="227.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (38 samples, 0.36%)</title><rect x="171.1" y="211.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (38 samples, 0.36%)</title><rect x="171.1" y="195.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 0.36%)</title><rect x="171.1" y="179.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (38 samples, 0.36%)</title><rect x="171.1" y="163.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 0.36%)</title><rect x="171.1" y="147.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.36%)</title><rect x="171.1" y="131.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 0.36%)</title><rect x="171.1" y="115.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.1" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (36 samples, 0.34%)</title><rect x="171.3" y="99.0" width="4.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="174.3" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (27 samples, 0.25%)</title><rect x="172.1" y="83.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="175.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.04%)</title><rect x="175.3" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="175.3" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.03%)</title><rect x="176.0" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.20%)</title><rect x="176.8" y="323.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (21 samples, 0.20%)</title><rect x="176.8" y="307.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (20 samples, 0.19%)</title><rect x="176.9" y="291.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.17%)</title><rect x="177.1" y="275.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.17%)</title><rect x="177.1" y="259.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.17%)</title><rect x="177.1" y="243.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (18 samples, 0.17%)</title><rect x="177.1" y="227.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (18 samples, 0.17%)</title><rect x="177.1" y="211.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.1" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (15 samples, 0.14%)</title><rect x="177.4" y="195.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="180.4" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=33795] (216 samples, 2.03%)</title><rect x="179.1" y="387.0" width="24.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="182.1" y="398.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (216 samples, 2.03%)</title><rect x="179.1" y="371.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (119 samples, 1.12%)</title><rect x="179.4" y="355.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (118 samples, 1.11%)</title><rect x="179.5" y="339.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (118 samples, 1.11%)</title><rect x="179.5" y="323.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (118 samples, 1.11%)</title><rect x="179.5" y="307.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (114 samples, 1.07%)</title><rect x="179.5" y="291.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.5" y="302.0"></text>
</g>
<g>
<title>kevent (107 samples, 1.01%)</title><rect x="180.3" y="275.0" width="11.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="183.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (94 samples, 0.88%)</title><rect x="192.6" y="355.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (90 samples, 0.85%)</title><rect x="193.1" y="339.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (49 samples, 0.46%)</title><rect x="193.2" y="323.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 0.38%)</title><rect x="193.3" y="307.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 0.38%)</title><rect x="193.3" y="291.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (40 samples, 0.38%)</title><rect x="193.3" y="275.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (40 samples, 0.38%)</title><rect x="193.3" y="259.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (38 samples, 0.36%)</title><rect x="193.5" y="243.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (38 samples, 0.36%)</title><rect x="193.5" y="227.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (38 samples, 0.36%)</title><rect x="193.5" y="211.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (35 samples, 0.33%)</title><rect x="193.6" y="195.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 0.33%)</title><rect x="193.6" y="179.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.33%)</title><rect x="193.6" y="163.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.33%)</title><rect x="193.6" y="147.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.33%)</title><rect x="193.6" y="131.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 0.33%)</title><rect x="193.6" y="115.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.6" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (32 samples, 0.30%)</title><rect x="194.0" y="99.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="197.0" y="110.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="194.3" y="83.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="197.3" y="94.0"></text>
</g>
<g>
<title>__psynch_cvsignal (24 samples, 0.23%)</title><rect x="194.6" y="83.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="197.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.05%)</title><rect x="197.7" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 0.38%)</title><rect x="198.6" y="323.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (39 samples, 0.37%)</title><rect x="198.6" y="307.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (39 samples, 0.37%)</title><rect x="198.6" y="291.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="198.6" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="198.6" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="198.6" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 0.34%)</title><rect x="199.0" y="275.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 0.34%)</title><rect x="199.0" y="259.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 0.34%)</title><rect x="199.0" y="243.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (36 samples, 0.34%)</title><rect x="199.0" y="227.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (36 samples, 0.34%)</title><rect x="199.0" y="211.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.0" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (36 samples, 0.34%)</title><rect x="199.0" y="195.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="202.0" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=37635] (144 samples, 1.35%)</title><rect x="203.1" y="387.0" width="16.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="206.1" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (144 samples, 1.35%)</title><rect x="203.1" y="371.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (101 samples, 0.95%)</title><rect x="203.1" y="355.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (97 samples, 0.91%)</title><rect x="203.5" y="339.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (97 samples, 0.91%)</title><rect x="203.5" y="323.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (96 samples, 0.90%)</title><rect x="203.6" y="307.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (88 samples, 0.83%)</title><rect x="203.6" y="291.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.6" y="302.0"></text>
</g>
<g>
<title>kevent (80 samples, 0.75%)</title><rect x="204.5" y="275.0" width="8.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="207.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.03%)</title><rect x="213.4" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="213.4" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.05%)</title><rect x="213.7" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.7" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.05%)</title><rect x="213.7" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.7" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="213.7" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.7" y="270.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.04%)</title><rect x="213.8" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.8" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.04%)</title><rect x="213.8" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (43 samples, 0.40%)</title><rect x="214.3" y="355.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (41 samples, 0.39%)</title><rect x="214.4" y="339.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 0.21%)</title><rect x="214.4" y="323.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 0.13%)</title><rect x="214.4" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 0.13%)</title><rect x="214.4" y="291.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (13 samples, 0.12%)</title><rect x="214.5" y="275.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (13 samples, 0.12%)</title><rect x="214.5" y="259.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.03%)</title><rect x="214.5" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (10 samples, 0.09%)</title><rect x="214.8" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.08%)</title><rect x="215.1" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.08%)</title><rect x="215.1" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.05%)</title><rect x="215.1" y="195.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.05%)</title><rect x="215.1" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="215.1" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.05%)</title><rect x="215.1" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.05%)</title><rect x="215.1" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="215.1" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.1" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="215.1" y="99.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="218.1" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="215.1" y="83.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="218.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="215.6" y="195.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="215.6" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="216.0" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="216.0" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="216.0" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 0.18%)</title><rect x="216.8" y="323.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (19 samples, 0.18%)</title><rect x="216.8" y="307.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (19 samples, 0.18%)</title><rect x="216.8" y="291.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.16%)</title><rect x="217.1" y="275.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.16%)</title><rect x="217.1" y="259.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.15%)</title><rect x="217.1" y="243.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (16 samples, 0.15%)</title><rect x="217.1" y="227.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (16 samples, 0.15%)</title><rect x="217.1" y="211.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.1" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (16 samples, 0.15%)</title><rect x="217.1" y="195.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="220.1" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=85251] (121 samples, 1.14%)</title><rect x="219.1" y="387.0" width="13.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="222.1" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (120 samples, 1.13%)</title><rect x="219.2" y="371.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (73 samples, 0.69%)</title><rect x="219.3" y="355.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (72 samples, 0.68%)</title><rect x="219.4" y="339.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (72 samples, 0.68%)</title><rect x="219.4" y="323.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (72 samples, 0.68%)</title><rect x="219.4" y="307.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (68 samples, 0.64%)</title><rect x="219.4" y="291.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.4" y="302.0"></text>
</g>
<g>
<title>kevent (59 samples, 0.56%)</title><rect x="220.4" y="275.0" width="6.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="223.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.03%)</title><rect x="227.1" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.1" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.03%)</title><rect x="227.1" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46 samples, 0.43%)</title><rect x="227.4" y="355.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (44 samples, 0.41%)</title><rect x="227.4" y="339.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 0.29%)</title><rect x="227.4" y="323.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 0.24%)</title><rect x="227.5" y="307.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 0.24%)</title><rect x="227.5" y="291.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (23 samples, 0.22%)</title><rect x="227.7" y="275.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (23 samples, 0.22%)</title><rect x="227.7" y="259.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (22 samples, 0.21%)</title><rect x="227.8" y="243.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.21%)</title><rect x="227.8" y="227.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.21%)</title><rect x="227.8" y="211.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (21 samples, 0.20%)</title><rect x="227.8" y="195.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.20%)</title><rect x="227.8" y="179.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.20%)</title><rect x="227.8" y="163.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.20%)</title><rect x="227.8" y="147.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.20%)</title><rect x="227.8" y="131.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.20%)</title><rect x="227.8" y="115.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.8" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (21 samples, 0.20%)</title><rect x="227.8" y="99.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="230.8" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (16 samples, 0.15%)</title><rect x="228.3" y="83.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="231.3" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 0.12%)</title><rect x="230.8" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (13 samples, 0.12%)</title><rect x="230.8" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (12 samples, 0.11%)</title><rect x="230.9" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="231.2" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.09%)</title><rect x="231.2" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.09%)</title><rect x="231.2" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (10 samples, 0.09%)</title><rect x="231.2" y="227.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (10 samples, 0.09%)</title><rect x="231.2" y="211.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.2" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (10 samples, 0.09%)</title><rect x="231.2" y="195.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="234.2" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=26371] (239 samples, 2.25%)</title><rect x="232.5" y="387.0" width="26.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="235.5" y="398.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (239 samples, 2.25%)</title><rect x="232.5" y="371.0" width="26.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (168 samples, 1.58%)</title><rect x="232.9" y="355.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (166 samples, 1.56%)</title><rect x="233.2" y="339.0" width="18.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (166 samples, 1.56%)</title><rect x="233.2" y="323.0" width="18.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (166 samples, 1.56%)</title><rect x="233.2" y="307.0" width="18.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (154 samples, 1.45%)</title><rect x="233.2" y="291.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.2" y="302.0"></text>
</g>
<g>
<title>kevent (136 samples, 1.28%)</title><rect x="235.2" y="275.0" width="15.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="238.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.05%)</title><rect x="250.3" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="250.5" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.06%)</title><rect x="250.8" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.8" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.06%)</title><rect x="250.8" y="275.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.8" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.04%)</title><rect x="251.0" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (67 samples, 0.63%)</title><rect x="251.6" y="355.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 0.61%)</title><rect x="251.6" y="339.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (25 samples, 0.24%)</title><rect x="251.6" y="323.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 0.15%)</title><rect x="251.6" y="307.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.15%)</title><rect x="251.6" y="291.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (15 samples, 0.14%)</title><rect x="251.7" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (14 samples, 0.13%)</title><rect x="251.8" y="259.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (9 samples, 0.08%)</title><rect x="252.3" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.08%)</title><rect x="252.3" y="227.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.08%)</title><rect x="252.3" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.07%)</title><rect x="252.3" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="252.3" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="252.3" y="163.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="252.3" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="252.3" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="252.3" y="115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.3" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.07%)</title><rect x="252.3" y="99.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="255.3" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="252.5" y="83.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="255.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="253.4" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 0.38%)</title><rect x="254.4" y="323.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (40 samples, 0.38%)</title><rect x="254.4" y="307.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (38 samples, 0.36%)</title><rect x="254.6" y="291.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.12%)</title><rect x="254.6" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.12%)</title><rect x="254.6" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.07%)</title><rect x="254.6" y="243.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.03%)</title><rect x="254.6" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.04%)</title><rect x="254.9" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.04%)</title><rect x="254.9" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.03%)</title><rect x="255.0" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.03%)</title><rect x="255.0" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.05%)</title><rect x="255.4" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.24%)</title><rect x="256.0" y="275.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.24%)</title><rect x="256.0" y="259.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.23%)</title><rect x="256.1" y="243.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (24 samples, 0.23%)</title><rect x="256.1" y="227.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (24 samples, 0.23%)</title><rect x="256.1" y="211.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.1" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (22 samples, 0.21%)</title><rect x="256.4" y="195.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="259.4" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=46595] (144 samples, 1.35%)</title><rect x="259.0" y="387.0" width="16.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="262.0" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (144 samples, 1.35%)</title><rect x="259.0" y="371.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (79 samples, 0.74%)</title><rect x="259.0" y="355.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (78 samples, 0.73%)</title><rect x="259.1" y="339.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (78 samples, 0.73%)</title><rect x="259.1" y="323.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (78 samples, 0.73%)</title><rect x="259.1" y="307.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (72 samples, 0.68%)</title><rect x="259.4" y="291.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.4" y="302.0"></text>
</g>
<g>
<title>kevent (65 samples, 0.61%)</title><rect x="260.1" y="275.0" width="7.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="263.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.04%)</title><rect x="267.4" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.4" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.04%)</title><rect x="267.4" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.4" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.04%)</title><rect x="267.4" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.4" y="270.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.04%)</title><rect x="267.4" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.4" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.04%)</title><rect x="267.4" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.4" y="238.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.03%)</title><rect x="267.5" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="270.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 0.61%)</title><rect x="267.8" y="355.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62 samples, 0.58%)</title><rect x="267.8" y="339.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (45 samples, 0.42%)</title><rect x="267.8" y="323.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 0.37%)</title><rect x="267.9" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39 samples, 0.37%)</title><rect x="267.9" y="291.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (38 samples, 0.36%)</title><rect x="268.0" y="275.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (38 samples, 0.36%)</title><rect x="268.0" y="259.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (36 samples, 0.34%)</title><rect x="268.2" y="243.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.34%)</title><rect x="268.2" y="227.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.34%)</title><rect x="268.2" y="211.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (33 samples, 0.31%)</title><rect x="268.2" y="195.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 0.31%)</title><rect x="268.2" y="179.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 0.31%)</title><rect x="268.2" y="163.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 0.31%)</title><rect x="268.2" y="147.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 0.31%)</title><rect x="268.2" y="131.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (33 samples, 0.31%)</title><rect x="268.2" y="115.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.2" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (30 samples, 0.28%)</title><rect x="268.6" y="99.0" width="3.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="271.6" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (19 samples, 0.18%)</title><rect x="269.4" y="83.0" width="2.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="272.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="271.9" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="271.9" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.04%)</title><rect x="272.2" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 0.16%)</title><rect x="272.8" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (17 samples, 0.16%)</title><rect x="272.8" y="307.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (16 samples, 0.15%)</title><rect x="272.9" y="291.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.13%)</title><rect x="273.1" y="275.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.13%)</title><rect x="273.1" y="259.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.12%)</title><rect x="273.2" y="243.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.12%)</title><rect x="273.2" y="227.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (13 samples, 0.12%)</title><rect x="273.2" y="211.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.2" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (12 samples, 0.11%)</title><rect x="273.4" y="195.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="276.4" y="206.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="274.7" y="339.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="277.7" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=30723] (106 samples, 1.00%)</title><rect x="275.0" y="387.0" width="11.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="278.0" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (105 samples, 0.99%)</title><rect x="275.1" y="371.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (58 samples, 0.55%)</title><rect x="275.5" y="355.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (56 samples, 0.53%)</title><rect x="275.7" y="339.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (56 samples, 0.53%)</title><rect x="275.7" y="323.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (56 samples, 0.53%)</title><rect x="275.7" y="307.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (51 samples, 0.48%)</title><rect x="275.7" y="291.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.7" y="302.0"></text>
</g>
<g>
<title>kevent (48 samples, 0.45%)</title><rect x="276.0" y="275.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="279.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.03%)</title><rect x="281.4" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (44 samples, 0.41%)</title><rect x="281.9" y="355.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (43 samples, 0.40%)</title><rect x="282.0" y="339.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (33 samples, 0.31%)</title><rect x="282.0" y="323.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (27 samples, 0.25%)</title><rect x="282.1" y="307.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 0.25%)</title><rect x="282.1" y="291.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (27 samples, 0.25%)</title><rect x="282.1" y="275.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (27 samples, 0.25%)</title><rect x="282.1" y="259.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (26 samples, 0.24%)</title><rect x="282.2" y="243.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.24%)</title><rect x="282.2" y="227.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.24%)</title><rect x="282.2" y="211.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (25 samples, 0.24%)</title><rect x="282.2" y="195.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (25 samples, 0.24%)</title><rect x="282.2" y="179.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.24%)</title><rect x="282.2" y="163.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.24%)</title><rect x="282.2" y="147.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.24%)</title><rect x="282.2" y="131.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 0.24%)</title><rect x="282.2" y="115.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.2" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (25 samples, 0.24%)</title><rect x="282.2" y="99.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="285.2" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (15 samples, 0.14%)</title><rect x="282.9" y="83.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="285.9" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.09%)</title><rect x="285.7" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.7" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (10 samples, 0.09%)</title><rect x="285.7" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (10 samples, 0.09%)</title><rect x="285.7" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.08%)</title><rect x="285.8" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.08%)</title><rect x="285.8" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.08%)</title><rect x="285.8" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (9 samples, 0.08%)</title><rect x="285.8" y="227.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (9 samples, 0.08%)</title><rect x="285.8" y="211.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.8" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (9 samples, 0.08%)</title><rect x="285.8" y="195.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="288.8" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=36867] (253 samples, 2.38%)</title><rect x="286.8" y="387.0" width="28.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="289.8" y="398.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (253 samples, 2.38%)</title><rect x="286.8" y="371.0" width="28.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.8" y="382.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (179 samples, 1.68%)</title><rect x="287.2" y="355.0" width="19.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (178 samples, 1.67%)</title><rect x="287.3" y="339.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (177 samples, 1.67%)</title><rect x="287.5" y="323.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (177 samples, 1.67%)</title><rect x="287.5" y="307.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (164 samples, 1.54%)</title><rect x="287.5" y="291.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.5" y="302.0"></text>
</g>
<g>
<title>kevent (154 samples, 1.45%)</title><rect x="288.6" y="275.0" width="17.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="291.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (7 samples, 0.07%)</title><rect x="305.7" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.05%)</title><rect x="305.9" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="305.9" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="305.9" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.05%)</title><rect x="306.4" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.4" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.05%)</title><rect x="306.4" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.4" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="306.4" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.4" y="270.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.05%)</title><rect x="306.4" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.4" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.05%)</title><rect x="306.4" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.4" y="238.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.04%)</title><rect x="306.6" y="211.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="309.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 0.66%)</title><rect x="307.1" y="355.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 0.65%)</title><rect x="307.1" y="339.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 0.35%)</title><rect x="307.2" y="323.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.22%)</title><rect x="307.4" y="307.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.22%)</title><rect x="307.4" y="291.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (22 samples, 0.21%)</title><rect x="307.6" y="275.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (22 samples, 0.21%)</title><rect x="307.6" y="259.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (15 samples, 0.14%)</title><rect x="308.0" y="243.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.14%)</title><rect x="308.0" y="227.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.14%)</title><rect x="308.0" y="211.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.12%)</title><rect x="308.0" y="195.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.11%)</title><rect x="308.1" y="179.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.11%)</title><rect x="308.1" y="163.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.11%)</title><rect x="308.1" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.11%)</title><rect x="308.1" y="131.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.11%)</title><rect x="308.1" y="115.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.1" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (12 samples, 0.11%)</title><rect x="308.1" y="99.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="311.1" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (9 samples, 0.08%)</title><rect x="308.4" y="83.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="311.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/Nodes.primaryFor (3 samples, 0.03%)</title><rect x="309.7" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.07%)</title><rect x="310.0" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="310.2" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 0.29%)</title><rect x="311.3" y="323.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (31 samples, 0.29%)</title><rect x="311.3" y="307.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (31 samples, 0.29%)</title><rect x="311.3" y="291.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (29 samples, 0.27%)</title><rect x="311.6" y="275.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (29 samples, 0.27%)</title><rect x="311.6" y="259.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 0.24%)</title><rect x="311.6" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (26 samples, 0.24%)</title><rect x="311.6" y="227.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (26 samples, 0.24%)</title><rect x="311.6" y="211.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.6" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (25 samples, 0.24%)</title><rect x="311.7" y="195.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="314.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="314.4" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.4" y="254.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=84483] (99 samples, 0.93%)</title><rect x="314.9" y="387.0" width="11.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="317.9" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (99 samples, 0.93%)</title><rect x="314.9" y="371.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (57 samples, 0.54%)</title><rect x="315.0" y="355.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (55 samples, 0.52%)</title><rect x="315.2" y="339.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (55 samples, 0.52%)</title><rect x="315.2" y="323.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (55 samples, 0.52%)</title><rect x="315.2" y="307.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (54 samples, 0.51%)</title><rect x="315.2" y="291.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.2" y="302.0"></text>
</g>
<g>
<title>kevent (46 samples, 0.43%)</title><rect x="316.1" y="275.0" width="5.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="319.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (41 samples, 0.39%)</title><rect x="321.3" y="355.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (41 samples, 0.39%)</title><rect x="321.3" y="339.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.27%)</title><rect x="321.3" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 0.23%)</title><rect x="321.3" y="307.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 0.23%)</title><rect x="321.3" y="291.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (24 samples, 0.23%)</title><rect x="321.3" y="275.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (24 samples, 0.23%)</title><rect x="321.3" y="259.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (22 samples, 0.21%)</title><rect x="321.5" y="243.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.21%)</title><rect x="321.5" y="227.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.21%)</title><rect x="321.5" y="211.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.19%)</title><rect x="321.5" y="195.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.19%)</title><rect x="321.5" y="179.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.19%)</title><rect x="321.5" y="163.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.19%)</title><rect x="321.5" y="147.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.19%)</title><rect x="321.5" y="131.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.19%)</title><rect x="321.5" y="115.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.5" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (20 samples, 0.19%)</title><rect x="321.5" y="99.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="324.5" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (14 samples, 0.13%)</title><rect x="322.0" y="83.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="325.0" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.11%)</title><rect x="324.5" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (12 samples, 0.11%)</title><rect x="324.5" y="307.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (12 samples, 0.11%)</title><rect x="324.5" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.05%)</title><rect x="324.5" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="324.5" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="324.8" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.03%)</title><rect x="324.8" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.03%)</title><rect x="324.8" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.03%)</title><rect x="324.8" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.8" y="206.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="324.8" y="179.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="327.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="325.1" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.07%)</title><rect x="325.1" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.07%)</title><rect x="325.1" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 0.07%)</title><rect x="325.1" y="227.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (7 samples, 0.07%)</title><rect x="325.1" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.1" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (7 samples, 0.07%)</title><rect x="325.1" y="195.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="328.1" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=31235] (124 samples, 1.17%)</title><rect x="325.9" y="387.0" width="13.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="328.9" y="398.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (124 samples, 1.17%)</title><rect x="325.9" y="371.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (69 samples, 0.65%)</title><rect x="326.2" y="355.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (69 samples, 0.65%)</title><rect x="326.2" y="339.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (69 samples, 0.65%)</title><rect x="326.2" y="323.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (69 samples, 0.65%)</title><rect x="326.2" y="307.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (62 samples, 0.58%)</title><rect x="326.2" y="291.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.2" y="302.0"></text>
</g>
<g>
<title>kevent (58 samples, 0.55%)</title><rect x="326.7" y="275.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="329.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.03%)</title><rect x="333.1" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.04%)</title><rect x="333.4" y="291.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.4" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.04%)</title><rect x="333.4" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.4" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.04%)</title><rect x="333.4" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.4" y="270.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="333.5" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.5" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="333.5" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.5" y="238.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.03%)</title><rect x="333.5" y="211.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (52 samples, 0.49%)</title><rect x="333.9" y="355.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (49 samples, 0.46%)</title><rect x="333.9" y="339.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (30 samples, 0.28%)</title><rect x="334.1" y="323.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.21%)</title><rect x="334.2" y="307.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.21%)</title><rect x="334.2" y="291.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (22 samples, 0.21%)</title><rect x="334.2" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (22 samples, 0.21%)</title><rect x="334.2" y="259.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (21 samples, 0.20%)</title><rect x="334.3" y="243.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.20%)</title><rect x="334.3" y="227.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 0.20%)</title><rect x="334.3" y="211.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.19%)</title><rect x="334.3" y="195.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.19%)</title><rect x="334.3" y="179.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.19%)</title><rect x="334.3" y="163.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.19%)</title><rect x="334.3" y="147.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.19%)</title><rect x="334.3" y="131.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.19%)</title><rect x="334.3" y="115.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.3" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (17 samples, 0.16%)</title><rect x="334.6" y="99.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="337.6" y="110.0"></text>
</g>
<g>
<title>__psynch_cvsignal (12 samples, 0.11%)</title><rect x="335.1" y="83.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="338.1" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="337.0" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="337.1" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 0.16%)</title><rect x="337.4" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (17 samples, 0.16%)</title><rect x="337.4" y="307.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (17 samples, 0.16%)</title><rect x="337.4" y="291.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.14%)</title><rect x="337.6" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.14%)</title><rect x="337.6" y="259.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.14%)</title><rect x="337.6" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (15 samples, 0.14%)</title><rect x="337.6" y="227.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (15 samples, 0.14%)</title><rect x="337.6" y="211.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.6" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (14 samples, 0.13%)</title><rect x="337.8" y="195.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="340.8" y="206.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="339.3" y="339.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.3" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=36355] (214 samples, 2.01%)</title><rect x="339.6" y="387.0" width="23.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="342.6" y="398.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (214 samples, 2.01%)</title><rect x="339.6" y="371.0" width="23.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.6" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (152 samples, 1.43%)</title><rect x="339.6" y="355.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (151 samples, 1.42%)</title><rect x="339.8" y="339.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (151 samples, 1.42%)</title><rect x="339.8" y="323.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (151 samples, 1.42%)</title><rect x="339.8" y="307.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (137 samples, 1.29%)</title><rect x="340.1" y="291.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.1" y="302.0"></text>
</g>
<g>
<title>kevent (124 samples, 1.17%)</title><rect x="341.5" y="275.0" width="13.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="344.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.05%)</title><rect x="355.3" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.03%)</title><rect x="356.0" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.0" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.03%)</title><rect x="356.0" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62 samples, 0.58%)</title><rect x="356.5" y="355.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62 samples, 0.58%)</title><rect x="356.5" y="339.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (30 samples, 0.28%)</title><rect x="356.6" y="323.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.11%)</title><rect x="357.1" y="307.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.11%)</title><rect x="357.1" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (12 samples, 0.11%)</title><rect x="357.1" y="275.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (12 samples, 0.11%)</title><rect x="357.1" y="259.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (8 samples, 0.08%)</title><rect x="357.5" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.08%)</title><rect x="357.5" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.08%)</title><rect x="357.5" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.06%)</title><rect x="357.5" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.06%)</title><rect x="357.5" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.06%)</title><rect x="357.5" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.06%)</title><rect x="357.5" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.06%)</title><rect x="357.5" y="131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="357.5" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.5" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.06%)</title><rect x="357.5" y="99.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="360.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.06%)</title><rect x="358.4" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.04%)</title><rect x="358.6" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="358.7" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="358.7" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="358.7" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.03%)</title><rect x="359.1" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.03%)</title><rect x="359.4" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 0.29%)</title><rect x="360.0" y="323.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (31 samples, 0.29%)</title><rect x="360.0" y="307.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (31 samples, 0.29%)</title><rect x="360.0" y="291.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.09%)</title><rect x="360.0" y="275.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.09%)</title><rect x="360.0" y="259.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.06%)</title><rect x="360.0" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.03%)</title><rect x="360.0" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="360.3" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="360.3" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="360.6" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.20%)</title><rect x="361.1" y="275.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.20%)</title><rect x="361.1" y="259.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 0.20%)</title><rect x="361.1" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (21 samples, 0.20%)</title><rect x="361.1" y="227.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (21 samples, 0.20%)</title><rect x="361.1" y="211.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.1" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (19 samples, 0.18%)</title><rect x="361.3" y="195.0" width="2.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="364.3" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=83971] (262 samples, 2.47%)</title><rect x="363.4" y="387.0" width="29.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="366.4" y="398.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (262 samples, 2.47%)</title><rect x="363.4" y="371.0" width="29.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.4" y="382.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (148 samples, 1.39%)</title><rect x="363.7" y="355.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (147 samples, 1.38%)</title><rect x="363.8" y="339.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (147 samples, 1.38%)</title><rect x="363.8" y="323.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (147 samples, 1.38%)</title><rect x="363.8" y="307.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (137 samples, 1.29%)</title><rect x="363.8" y="291.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.8" y="302.0"></text>
</g>
<g>
<title>kevent (127 samples, 1.19%)</title><rect x="365.0" y="275.0" width="14.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="368.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.05%)</title><rect x="379.1" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.04%)</title><rect x="379.2" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.03%)</title><rect x="379.6" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.6" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.03%)</title><rect x="379.6" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.6" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="379.6" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (111 samples, 1.04%)</title><rect x="380.2" y="355.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (110 samples, 1.04%)</title><rect x="380.3" y="339.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (79 samples, 0.74%)</title><rect x="380.4" y="323.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (62 samples, 0.58%)</title><rect x="380.6" y="307.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (62 samples, 0.58%)</title><rect x="380.6" y="291.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.handleDefault (61 samples, 0.57%)</title><rect x="380.7" y="275.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.entity (61 samples, 0.57%)</title><rect x="380.7" y="259.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.executeAsync (57 samples, 0.54%)</title><rect x="381.2" y="243.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (56 samples, 0.53%)</title><rect x="381.3" y="227.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (56 samples, 0.53%)</title><rect x="381.3" y="211.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (54 samples, 0.51%)</title><rect x="381.3" y="195.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (54 samples, 0.51%)</title><rect x="381.3" y="179.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (54 samples, 0.51%)</title><rect x="381.3" y="163.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (54 samples, 0.51%)</title><rect x="381.3" y="147.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 0.51%)</title><rect x="381.3" y="131.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 0.51%)</title><rect x="381.3" y="115.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.3" y="126.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (49 samples, 0.46%)</title><rect x="381.7" y="99.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="384.7" y="110.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.03%)</title><rect x="381.8" y="83.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.8" y="94.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="382.5" y="83.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="385.5" y="94.0"></text>
</g>
<g>
<title>__psynch_cvsignal (37 samples, 0.35%)</title><rect x="382.8" y="83.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="385.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.07%)</title><rect x="387.5" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="387.5" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.5" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="387.8" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="387.8" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.03%)</title><rect x="388.3" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.3" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 0.28%)</title><rect x="389.2" y="323.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (30 samples, 0.28%)</title><rect x="389.2" y="307.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (29 samples, 0.27%)</title><rect x="389.3" y="291.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="389.3" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="389.3" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (26 samples, 0.24%)</title><rect x="389.6" y="275.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (26 samples, 0.24%)</title><rect x="389.6" y="259.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.23%)</title><rect x="389.6" y="243.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (24 samples, 0.23%)</title><rect x="389.6" y="227.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (24 samples, 0.23%)</title><rect x="389.6" y="211.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.6" y="222.0"></text>
</g>
<g>
<title>rpc_errlist (21 samples, 0.20%)</title><rect x="389.9" y="195.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="392.9" y="206.0"></text>
</g>
<g>
<title>[RMI TCP Connection(3)-127.0.0.1 tid=61703] (5 samples, 0.05%)</title><rect x="392.5" y="387.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="395.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 0.05%)</title><rect x="392.5" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.05%)</title><rect x="392.5" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.05%)</title><rect x="392.5" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.5" y="350.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (5 samples, 0.05%)</title><rect x="392.5" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.5" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.05%)</title><rect x="392.5" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.5" y="318.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$102/2037680639.run (5 samples, 0.05%)</title><rect x="392.5" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.5" y="302.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (5 samples, 0.05%)</title><rect x="392.5" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.5" y="286.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (5 samples, 0.05%)</title><rect x="392.5" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.5" y="270.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (5 samples, 0.05%)</title><rect x="392.5" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.5" y="254.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (3 samples, 0.03%)</title><rect x="392.7" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.7" y="238.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.03%)</title><rect x="392.7" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.7" y="222.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.03%)</title><rect x="392.7" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.7" y="206.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.03%)</title><rect x="392.7" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.7" y="190.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 0.03%)</title><rect x="392.7" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.7" y="174.0"></text>
</g>
<g>
<title>[worker tid=39943] (634 samples, 5.97%)</title><rect x="393.0" y="387.0" width="70.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="396.0" y="398.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (634 samples, 5.97%)</title><rect x="393.0" y="371.0" width="70.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.0" y="382.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (634 samples, 5.97%)</title><rect x="393.0" y="355.0" width="70.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.0" y="366.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (634 samples, 5.97%)</title><rect x="393.0" y="339.0" width="70.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.0" y="350.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.03%)</title><rect x="393.0" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="393.0" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.03%)</title><rect x="393.0" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 0.81%)</title><rect x="393.4" y="323.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (84 samples, 0.79%)</title><rect x="393.5" y="307.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (68 samples, 0.64%)</title><rect x="393.5" y="291.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (63 samples, 0.59%)</title><rect x="394.0" y="275.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (63 samples, 0.59%)</title><rect x="394.0" y="259.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (61 samples, 0.57%)</title><rect x="394.3" y="243.0" width="6.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="397.3" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (57 samples, 0.54%)</title><rect x="394.5" y="227.0" width="6.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="397.5" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (51 samples, 0.48%)</title><rect x="394.6" y="211.0" width="5.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="397.6" y="222.0"></text>
</g>
<g>
<title>_pthread_cond_wait (5 samples, 0.05%)</title><rect x="400.3" y="211.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="403.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.06%)</title><rect x="401.0" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.06%)</title><rect x="401.0" y="275.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.05%)</title><rect x="401.1" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.03%)</title><rect x="401.4" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.09%)</title><rect x="401.7" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.09%)</title><rect x="401.7" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.09%)</title><rect x="401.7" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.09%)</title><rect x="401.7" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.09%)</title><rect x="401.7" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.7" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.07%)</title><rect x="401.9" y="211.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="404.9" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="402.0" y="195.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="405.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (545 samples, 5.13%)</title><rect x="402.9" y="323.0" width="60.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.9" y="334.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (544 samples, 5.12%)</title><rect x="403.0" y="307.0" width="60.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.0" y="318.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 1.10%)</title><rect x="403.1" y="291.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 1.06%)</title><rect x="403.6" y="275.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="403.6" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 1.00%)</title><rect x="404.4" y="259.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 1.00%)</title><rect x="404.4" y="243.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (106 samples, 1.00%)</title><rect x="404.4" y="227.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (106 samples, 1.00%)</title><rect x="404.4" y="211.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (104 samples, 0.98%)</title><rect x="404.6" y="195.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="404.7" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="404.7" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (100 samples, 0.94%)</title><rect x="405.0" y="179.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (100 samples, 0.94%)</title><rect x="405.0" y="163.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (98 samples, 0.92%)</title><rect x="405.1" y="147.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (98 samples, 0.92%)</title><rect x="405.1" y="131.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (98 samples, 0.92%)</title><rect x="405.1" y="115.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.1" y="126.0"></text>
</g>
<g>
<title>write (93 samples, 0.88%)</title><rect x="405.7" y="99.0" width="10.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="408.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (382 samples, 3.59%)</title><rect x="416.1" y="291.0" width="42.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.1" y="302.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (380 samples, 3.58%)</title><rect x="416.4" y="275.0" width="42.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.4" y="286.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (380 samples, 3.58%)</title><rect x="416.4" y="259.0" width="42.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.4" y="270.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (380 samples, 3.58%)</title><rect x="416.4" y="243.0" width="42.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.4" y="254.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (380 samples, 3.58%)</title><rect x="416.4" y="227.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.4" y="238.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (223 samples, 2.10%)</title><rect x="416.4" y="211.0" width="24.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.4" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (218 samples, 2.05%)</title><rect x="416.9" y="195.0" width="24.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.9" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (218 samples, 2.05%)</title><rect x="416.9" y="179.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.9" y="190.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="417.0" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="417.0" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (212 samples, 1.99%)</title><rect x="417.4" y="163.0" width="23.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.4" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (212 samples, 1.99%)</title><rect x="417.4" y="147.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.4" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (211 samples, 1.99%)</title><rect x="417.4" y="131.0" width="23.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.4" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (211 samples, 1.99%)</title><rect x="417.4" y="115.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.4" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (211 samples, 1.99%)</title><rect x="417.4" y="99.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.4" y="110.0">s..</text>
</g>
<g>
<title>rpc_errlist (197 samples, 1.85%)</title><rect x="418.9" y="83.0" width="21.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="421.9" y="94.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (16 samples, 0.15%)</title><rect x="441.1" y="211.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (8 samples, 0.08%)</title><rect x="441.5" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.06%)</title><rect x="441.7" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.06%)</title><rect x="441.7" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="442.6" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="442.6" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="442.6" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.05%)</title><rect x="442.9" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.04%)</title><rect x="442.9" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="442.9" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.9" y="190.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (127 samples, 1.19%)</title><rect x="443.6" y="211.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (85 samples, 0.80%)</title><rect x="443.6" y="195.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.6" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (84 samples, 0.79%)</title><rect x="443.7" y="179.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.7" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (82 samples, 0.77%)</title><rect x="443.9" y="163.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (82 samples, 0.77%)</title><rect x="443.9" y="147.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.06%)</title><rect x="443.9" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="443.9" y="115.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="444.2" y="99.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="447.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="444.2" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.03%)</title><rect x="444.2" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (73 samples, 0.69%)</title><rect x="444.6" y="131.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (73 samples, 0.69%)</title><rect x="444.6" y="115.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (70 samples, 0.66%)</title><rect x="444.6" y="99.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (70 samples, 0.66%)</title><rect x="444.6" y="83.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (70 samples, 0.66%)</title><rect x="444.6" y="67.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.6" y="78.0"></text>
</g>
<g>
<title>write (67 samples, 0.63%)</title><rect x="444.9" y="51.0" width="7.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="447.9" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="452.3" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.03%)</title><rect x="452.7" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (41 samples, 0.39%)</title><rect x="453.0" y="195.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.0" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 0.39%)</title><rect x="453.0" y="179.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.0" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.26%)</title><rect x="453.3" y="163.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="456.3" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.07%)</title><rect x="454.2" y="147.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="457.2" y="158.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.03%)</title><rect x="455.0" y="147.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="458.0" y="158.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (3 samples, 0.03%)</title><rect x="455.3" y="147.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="458.3" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.05%)</title><rect x="455.9" y="147.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="458.9" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (4 samples, 0.04%)</title><rect x="456.0" y="131.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="459.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (3 samples, 0.03%)</title><rect x="457.2" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.2" y="174.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.03%)</title><rect x="457.7" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.7" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.03%)</title><rect x="457.7" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.7" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.03%)</title><rect x="457.7" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.7" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (5 samples, 0.05%)</title><rect x="458.0" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.0" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (3 samples, 0.03%)</title><rect x="458.2" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.2" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (3 samples, 0.03%)</title><rect x="458.2" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="190.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (3 samples, 0.03%)</title><rect x="458.2" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (44 samples, 0.41%)</title><rect x="458.6" y="291.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (44 samples, 0.41%)</title><rect x="458.6" y="275.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (44 samples, 0.41%)</title><rect x="458.6" y="259.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (43 samples, 0.40%)</title><rect x="458.7" y="243.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.7" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 0.40%)</title><rect x="458.7" y="227.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.7" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 0.40%)</title><rect x="458.7" y="211.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.7" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (40 samples, 0.38%)</title><rect x="458.7" y="195.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="461.7" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (34 samples, 0.32%)</title><rect x="459.3" y="179.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="462.3" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (8 samples, 0.08%)</title><rect x="459.3" y="163.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="462.3" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.06%)</title><rect x="459.4" y="147.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="462.4" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.05%)</title><rect x="459.6" y="131.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="462.6" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.05%)</title><rect x="459.6" y="115.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="462.6" y="126.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.04%)</title><rect x="459.6" y="99.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="462.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="460.9" y="163.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="463.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="460.9" y="147.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="463.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (20 samples, 0.19%)</title><rect x="460.9" y="131.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="463.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (20 samples, 0.19%)</title><rect x="460.9" y="115.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="463.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (19 samples, 0.18%)</title><rect x="461.0" y="99.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="464.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (16 samples, 0.15%)</title><rect x="461.3" y="83.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="464.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (14 samples, 0.13%)</title><rect x="461.5" y="67.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="464.5" y="78.0"></text>
</g>
<g>
<title>[worker tid=52739] (569 samples, 5.35%)</title><rect x="463.4" y="387.0" width="63.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="466.4" y="398.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (567 samples, 5.33%)</title><rect x="463.7" y="371.0" width="62.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.7" y="382.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (567 samples, 5.33%)</title><rect x="463.7" y="355.0" width="62.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.7" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (567 samples, 5.33%)</title><rect x="463.7" y="339.0" width="62.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.7" y="350.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (56 samples, 0.53%)</title><rect x="463.8" y="323.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (56 samples, 0.53%)</title><rect x="463.8" y="307.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.43%)</title><rect x="463.8" y="291.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (44 samples, 0.41%)</title><rect x="464.0" y="275.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (44 samples, 0.41%)</title><rect x="464.0" y="259.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (40 samples, 0.38%)</title><rect x="464.4" y="243.0" width="4.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="467.4" y="254.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.03%)</title><rect x="464.4" y="227.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="467.4" y="238.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (33 samples, 0.31%)</title><rect x="464.8" y="227.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="467.8" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (32 samples, 0.30%)</title><rect x="464.9" y="211.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="467.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.08%)</title><rect x="469.1" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.08%)</title><rect x="469.1" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.08%)</title><rect x="469.1" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.08%)</title><rect x="469.1" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.08%)</title><rect x="469.1" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.1" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.07%)</title><rect x="469.2" y="211.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="472.2" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="469.4" y="195.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="472.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (510 samples, 4.80%)</title><rect x="470.0" y="323.0" width="56.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.0" y="334.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (510 samples, 4.80%)</title><rect x="470.0" y="307.0" width="56.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.0" y="318.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (118 samples, 1.11%)</title><rect x="470.0" y="291.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 1.06%)</title><rect x="470.4" y="275.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.09%)</title><rect x="470.4" y="259.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.05%)</title><rect x="471.0" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="471.0" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="471.0" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.0" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.05%)</title><rect x="471.0" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.05%)</title><rect x="471.0" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.0" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 0.97%)</title><rect x="471.5" y="259.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 0.96%)</title><rect x="471.7" y="243.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (102 samples, 0.96%)</title><rect x="471.7" y="227.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (102 samples, 0.96%)</title><rect x="471.7" y="211.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (102 samples, 0.96%)</title><rect x="471.7" y="195.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.06%)</title><rect x="471.7" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="471.7" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (95 samples, 0.89%)</title><rect x="472.3" y="179.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (95 samples, 0.89%)</title><rect x="472.3" y="163.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (93 samples, 0.88%)</title><rect x="472.3" y="147.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (92 samples, 0.87%)</title><rect x="472.4" y="131.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (92 samples, 0.87%)</title><rect x="472.4" y="115.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.4" y="126.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (3 samples, 0.03%)</title><rect x="473.0" y="99.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="476.0" y="110.0"></text>
</g>
<g>
<title>write (84 samples, 0.79%)</title><rect x="473.3" y="99.0" width="9.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="476.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (358 samples, 3.37%)</title><rect x="483.1" y="291.0" width="39.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.1" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (356 samples, 3.35%)</title><rect x="483.3" y="275.0" width="39.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.3" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (356 samples, 3.35%)</title><rect x="483.3" y="259.0" width="39.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.3" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (355 samples, 3.34%)</title><rect x="483.4" y="243.0" width="39.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.4" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (354 samples, 3.33%)</title><rect x="483.5" y="227.0" width="39.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.5" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (210 samples, 1.98%)</title><rect x="483.8" y="211.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.8" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (206 samples, 1.94%)</title><rect x="484.2" y="195.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.2" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (206 samples, 1.94%)</title><rect x="484.2" y="179.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.2" y="190.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.06%)</title><rect x="484.3" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="484.3" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (198 samples, 1.86%)</title><rect x="485.0" y="163.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.0" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (198 samples, 1.86%)</title><rect x="485.0" y="147.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.0" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (197 samples, 1.85%)</title><rect x="485.0" y="131.0" width="21.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.0" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (197 samples, 1.85%)</title><rect x="485.0" y="115.0" width="21.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.0" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (197 samples, 1.85%)</title><rect x="485.0" y="99.0" width="21.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.0" y="110.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.03%)</title><rect x="485.8" y="83.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="488.8" y="94.0"></text>
</g>
<g>
<title>rpc_errlist (187 samples, 1.76%)</title><rect x="486.1" y="83.0" width="20.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="489.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 0.09%)</title><rect x="507.1" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.05%)</title><rect x="507.3" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="507.4" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.4" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="507.5" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="507.8" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="507.8" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="507.8" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.10%)</title><rect x="508.2" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.2" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.07%)</title><rect x="508.4" y="195.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.04%)</title><rect x="508.6" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.04%)</title><rect x="508.6" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (116 samples, 1.09%)</title><rect x="509.6" y="211.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.6" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (82 samples, 0.77%)</title><rect x="509.6" y="195.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.6" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (80 samples, 0.75%)</title><rect x="509.8" y="179.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (80 samples, 0.75%)</title><rect x="509.8" y="163.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (80 samples, 0.75%)</title><rect x="509.8" y="147.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (74 samples, 0.70%)</title><rect x="510.1" y="131.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (74 samples, 0.70%)</title><rect x="510.1" y="115.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (69 samples, 0.65%)</title><rect x="510.1" y="99.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (69 samples, 0.65%)</title><rect x="510.1" y="83.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (69 samples, 0.65%)</title><rect x="510.1" y="67.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.1" y="78.0"></text>
</g>
<g>
<title>write (69 samples, 0.65%)</title><rect x="510.1" y="51.0" width="7.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="513.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.05%)</title><rect x="517.7" y="99.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.03%)</title><rect x="518.0" y="83.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (4 samples, 0.04%)</title><rect x="518.3" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.3" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="518.3" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (34 samples, 0.32%)</title><rect x="518.7" y="195.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.7" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 0.31%)</title><rect x="518.8" y="179.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.8" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (30 samples, 0.28%)</title><rect x="518.8" y="163.0" width="3.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="521.8" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.05%)</title><rect x="519.9" y="147.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="522.9" y="158.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.03%)</title><rect x="520.5" y="147.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="523.5" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.09%)</title><rect x="521.1" y="147.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="524.1" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.05%)</title><rect x="521.1" y="131.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="524.1" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (5 samples, 0.05%)</title><rect x="521.6" y="131.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="524.6" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (5 samples, 0.05%)</title><rect x="521.6" y="115.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="524.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (34 samples, 0.32%)</title><rect x="522.8" y="291.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (34 samples, 0.32%)</title><rect x="522.8" y="275.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (34 samples, 0.32%)</title><rect x="522.8" y="259.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (34 samples, 0.32%)</title><rect x="522.8" y="243.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.8" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="522.9" y="227.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.9" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.29%)</title><rect x="523.1" y="211.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.1" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (31 samples, 0.29%)</title><rect x="523.1" y="195.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="526.1" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (31 samples, 0.29%)</title><rect x="523.1" y="179.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="526.1" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="523.2" y="163.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="526.2" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.06%)</title><rect x="523.2" y="147.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="526.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="524.3" y="163.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="527.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (19 samples, 0.18%)</title><rect x="524.4" y="147.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="527.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (19 samples, 0.18%)</title><rect x="524.4" y="131.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="527.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (18 samples, 0.17%)</title><rect x="524.4" y="115.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="527.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 0.16%)</title><rect x="524.5" y="99.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="527.5" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 0.13%)</title><rect x="524.8" y="83.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="527.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (13 samples, 0.12%)</title><rect x="524.9" y="67.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="527.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long long, bool, rocksdb::ReadCallback*, bool*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*) (3 samples, 0.03%)</title><rect x="525.5" y="51.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="528.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.05%)</title><rect x="525.8" y="51.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.8" y="62.0"></text>
</g>
<g>
<title>[worker tid=53763] (575 samples, 5.41%)</title><rect x="526.6" y="387.0" width="63.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="529.6" y="398.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (575 samples, 5.41%)</title><rect x="526.6" y="371.0" width="63.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.6" y="382.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (575 samples, 5.41%)</title><rect x="526.6" y="355.0" width="63.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="366.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (575 samples, 5.41%)</title><rect x="526.6" y="339.0" width="63.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.6" y="350.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (64 samples, 0.60%)</title><rect x="526.7" y="323.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (64 samples, 0.60%)</title><rect x="526.7" y="307.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (54 samples, 0.51%)</title><rect x="526.7" y="291.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (52 samples, 0.49%)</title><rect x="526.9" y="275.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (52 samples, 0.49%)</title><rect x="526.9" y="259.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.9" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (46 samples, 0.43%)</title><rect x="527.6" y="243.0" width="5.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="530.6" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (42 samples, 0.40%)</title><rect x="527.8" y="227.0" width="4.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="530.8" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (42 samples, 0.40%)</title><rect x="527.8" y="211.0" width="4.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="530.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="532.7" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="532.7" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="532.7" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.03%)</title><rect x="532.7" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.03%)</title><rect x="532.7" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="533.1" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="533.1" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="533.1" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="533.1" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="533.1" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.1" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.06%)</title><rect x="533.2" y="211.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="536.2" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="533.3" y="195.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="536.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (510 samples, 4.80%)</title><rect x="533.8" y="323.0" width="56.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.8" y="334.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (509 samples, 4.79%)</title><rect x="533.9" y="307.0" width="56.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.9" y="318.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (137 samples, 1.29%)</title><rect x="534.0" y="291.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (133 samples, 1.25%)</title><rect x="534.3" y="275.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.12%)</title><rect x="534.3" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="535.4" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="535.4" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="535.4" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="535.4" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="535.4" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.4" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (120 samples, 1.13%)</title><rect x="535.7" y="259.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (120 samples, 1.13%)</title><rect x="535.7" y="243.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (120 samples, 1.13%)</title><rect x="535.7" y="227.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (120 samples, 1.13%)</title><rect x="535.7" y="211.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (118 samples, 1.11%)</title><rect x="535.9" y="195.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.08%)</title><rect x="535.9" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.08%)</title><rect x="535.9" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="535.9" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="535.9" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="535.9" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="536.5" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="536.5" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.03%)</title><rect x="536.5" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.03%)</title><rect x="536.5" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (3 samples, 0.03%)</title><rect x="536.5" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (106 samples, 1.00%)</title><rect x="536.8" y="179.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (106 samples, 1.00%)</title><rect x="536.8" y="163.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (104 samples, 0.98%)</title><rect x="536.8" y="147.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (104 samples, 0.98%)</title><rect x="536.8" y="131.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (104 samples, 0.98%)</title><rect x="536.8" y="115.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.8" y="126.0"></text>
</g>
<g>
<title>write (93 samples, 0.88%)</title><rect x="538.0" y="99.0" width="10.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="541.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (4 samples, 0.04%)</title><rect x="548.6" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.6" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.04%)</title><rect x="548.6" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.6" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.04%)</title><rect x="548.6" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.6" y="158.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.04%)</title><rect x="548.6" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.6" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="548.7" y="115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (326 samples, 3.07%)</title><rect x="549.4" y="291.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.4" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (325 samples, 3.06%)</title><rect x="549.5" y="275.0" width="36.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.5" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (325 samples, 3.06%)</title><rect x="549.5" y="259.0" width="36.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.5" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (323 samples, 3.04%)</title><rect x="549.7" y="243.0" width="35.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.7" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (323 samples, 3.04%)</title><rect x="549.7" y="227.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.7" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (194 samples, 1.83%)</title><rect x="549.7" y="211.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.7" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (189 samples, 1.78%)</title><rect x="550.3" y="195.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (189 samples, 1.78%)</title><rect x="550.3" y="179.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.05%)</title><rect x="550.4" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="550.4" y="147.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="550.6" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (3 samples, 0.03%)</title><rect x="550.6" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.03%)</title><rect x="550.6" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (183 samples, 1.72%)</title><rect x="550.9" y="163.0" width="20.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (183 samples, 1.72%)</title><rect x="550.9" y="147.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (182 samples, 1.71%)</title><rect x="551.0" y="131.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (182 samples, 1.71%)</title><rect x="551.0" y="115.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (182 samples, 1.71%)</title><rect x="551.0" y="99.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.0" y="110.0"></text>
</g>
<g>
<title>rpc_errlist (174 samples, 1.64%)</title><rect x="551.9" y="83.0" width="19.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="554.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 0.09%)</title><rect x="571.2" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (6 samples, 0.06%)</title><rect x="571.6" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="571.7" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.05%)</title><rect x="571.7" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (9 samples, 0.08%)</title><rect x="572.4" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.07%)</title><rect x="572.6" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.07%)</title><rect x="572.6" y="179.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.06%)</title><rect x="572.6" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.03%)</title><rect x="572.9" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.9" y="158.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (101 samples, 0.95%)</title><rect x="573.6" y="211.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.6" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (63 samples, 0.59%)</title><rect x="573.6" y="195.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.6" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (61 samples, 0.57%)</title><rect x="573.8" y="179.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (61 samples, 0.57%)</title><rect x="573.8" y="163.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (61 samples, 0.57%)</title><rect x="573.8" y="147.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (58 samples, 0.55%)</title><rect x="573.8" y="131.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (58 samples, 0.55%)</title><rect x="573.8" y="115.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (50 samples, 0.47%)</title><rect x="573.9" y="99.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (50 samples, 0.47%)</title><rect x="573.9" y="83.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (50 samples, 0.47%)</title><rect x="573.9" y="67.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.9" y="78.0"></text>
</g>
<g>
<title>write (49 samples, 0.46%)</title><rect x="574.0" y="51.0" width="5.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="577.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.07%)</title><rect x="579.5" y="99.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.5" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.04%)</title><rect x="579.7" y="83.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.7" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.04%)</title><rect x="579.7" y="67.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.03%)</title><rect x="580.2" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (38 samples, 0.36%)</title><rect x="580.6" y="195.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.6" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (38 samples, 0.36%)</title><rect x="580.6" y="179.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.6" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (32 samples, 0.30%)</title><rect x="580.7" y="163.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="583.7" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 0.09%)</title><rect x="581.3" y="147.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="584.3" y="158.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.03%)</title><rect x="582.5" y="147.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="585.5" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.10%)</title><rect x="583.0" y="147.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="586.0" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (7 samples, 0.07%)</title><rect x="583.5" y="131.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="586.5" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (5 samples, 0.05%)</title><rect x="583.7" y="115.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="586.7" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.05%)</title><rect x="584.8" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.8" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.03%)</title><rect x="585.0" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.0" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.03%)</title><rect x="585.0" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (44 samples, 0.41%)</title><rect x="585.6" y="291.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (44 samples, 0.41%)</title><rect x="585.6" y="275.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (44 samples, 0.41%)</title><rect x="585.6" y="259.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (43 samples, 0.40%)</title><rect x="585.7" y="243.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.7" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 0.40%)</title><rect x="585.7" y="227.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.7" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 0.40%)</title><rect x="585.7" y="211.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.7" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (42 samples, 0.40%)</title><rect x="585.7" y="195.0" width="4.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="588.7" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (42 samples, 0.40%)</title><rect x="585.7" y="179.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="588.7" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (9 samples, 0.08%)</title><rect x="585.9" y="163.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="588.9" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 0.08%)</title><rect x="586.0" y="147.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="589.0" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.07%)</title><rect x="586.1" y="131.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="589.1" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.05%)</title><rect x="586.3" y="115.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="589.3" y="126.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="586.5" y="99.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="589.5" y="110.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="587.2" y="163.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="590.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (22 samples, 0.21%)</title><rect x="587.8" y="163.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="590.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (22 samples, 0.21%)</title><rect x="587.8" y="147.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="590.8" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (22 samples, 0.21%)</title><rect x="587.8" y="131.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="590.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (22 samples, 0.21%)</title><rect x="587.8" y="115.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="590.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (19 samples, 0.18%)</title><rect x="588.0" y="99.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="591.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.03%)</title><rect x="588.0" y="83.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="591.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (15 samples, 0.14%)</title><rect x="588.3" y="83.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="591.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (15 samples, 0.14%)</title><rect x="588.3" y="67.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="591.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long long, bool, rocksdb::ReadCallback*, bool*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*) (3 samples, 0.03%)</title><rect x="588.9" y="51.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="591.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.04%)</title><rect x="589.2" y="51.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.2" y="62.0"></text>
</g>
<g>
<title>[worker tid=54531] (568 samples, 5.34%)</title><rect x="590.5" y="387.0" width="63.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="593.5" y="398.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (567 samples, 5.33%)</title><rect x="590.6" y="371.0" width="62.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.6" y="382.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (567 samples, 5.33%)</title><rect x="590.6" y="355.0" width="62.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.6" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (567 samples, 5.33%)</title><rect x="590.6" y="339.0" width="62.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.6" y="350.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (65 samples, 0.61%)</title><rect x="590.6" y="323.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (65 samples, 0.61%)</title><rect x="590.6" y="307.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (55 samples, 0.52%)</title><rect x="590.6" y="291.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="590.6" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="590.6" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="590.6" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="590.6" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="590.6" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.6" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.03%)</title><rect x="590.6" y="195.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="593.6" y="206.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="590.6" y="179.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="593.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (52 samples, 0.49%)</title><rect x="590.9" y="275.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (52 samples, 0.49%)</title><rect x="590.9" y="259.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.9" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (46 samples, 0.43%)</title><rect x="591.6" y="243.0" width="5.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="594.6" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (43 samples, 0.40%)</title><rect x="591.7" y="227.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="594.7" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (39 samples, 0.37%)</title><rect x="592.1" y="211.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="595.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="596.7" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="596.7" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="597.0" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="597.0" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="597.0" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="597.0" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="597.0" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.0" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.06%)</title><rect x="597.1" y="211.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="600.1" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="597.2" y="195.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="600.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (502 samples, 4.72%)</title><rect x="597.8" y="323.0" width="55.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.8" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (502 samples, 4.72%)</title><rect x="597.8" y="307.0" width="55.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.8" y="318.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (103 samples, 0.97%)</title><rect x="597.8" y="291.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (103 samples, 0.97%)</title><rect x="597.8" y="275.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.05%)</title><rect x="597.8" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 0.92%)</title><rect x="598.3" y="259.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.3" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (97 samples, 0.91%)</title><rect x="598.4" y="243.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (97 samples, 0.91%)</title><rect x="598.4" y="227.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (97 samples, 0.91%)</title><rect x="598.4" y="211.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (97 samples, 0.91%)</title><rect x="598.4" y="195.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 0.10%)</title><rect x="598.6" y="179.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.10%)</title><rect x="598.6" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.08%)</title><rect x="598.6" y="147.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (4 samples, 0.04%)</title><rect x="598.6" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.05%)</title><rect x="599.0" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.05%)</title><rect x="599.0" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (5 samples, 0.05%)</title><rect x="599.0" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.0" y="110.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.05%)</title><rect x="599.0" y="83.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="602.0" y="94.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="599.1" y="67.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="602.1" y="78.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (3 samples, 0.03%)</title><rect x="599.2" y="51.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="602.2" y="62.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (3 samples, 0.03%)</title><rect x="599.2" y="35.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="602.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (84 samples, 0.79%)</title><rect x="599.8" y="179.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (84 samples, 0.79%)</title><rect x="599.8" y="163.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (79 samples, 0.74%)</title><rect x="599.8" y="147.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (78 samples, 0.73%)</title><rect x="599.9" y="131.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (78 samples, 0.73%)</title><rect x="599.9" y="115.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.9" y="126.0"></text>
</g>
<g>
<title>write (74 samples, 0.70%)</title><rect x="600.3" y="99.0" width="8.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="603.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="608.5" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="608.5" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (352 samples, 3.31%)</title><rect x="609.2" y="291.0" width="39.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.2" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (350 samples, 3.29%)</title><rect x="609.4" y="275.0" width="38.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.4" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (350 samples, 3.29%)</title><rect x="609.4" y="259.0" width="38.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.4" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (350 samples, 3.29%)</title><rect x="609.4" y="243.0" width="38.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.4" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (350 samples, 3.29%)</title><rect x="609.4" y="227.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.4" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (214 samples, 2.01%)</title><rect x="609.7" y="211.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.7" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (211 samples, 1.99%)</title><rect x="610.0" y="195.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.0" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (209 samples, 1.97%)</title><rect x="610.2" y="179.0" width="23.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.2" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (203 samples, 1.91%)</title><rect x="610.4" y="163.0" width="22.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.4" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (203 samples, 1.91%)</title><rect x="610.4" y="147.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.4" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (203 samples, 1.91%)</title><rect x="610.4" y="131.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.4" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (203 samples, 1.91%)</title><rect x="610.4" y="115.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.4" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (203 samples, 1.91%)</title><rect x="610.4" y="99.0" width="22.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.4" y="110.0">s..</text>
</g>
<g>
<title>rpc_errlist (190 samples, 1.79%)</title><rect x="611.9" y="83.0" width="21.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="614.9" y="94.0">r..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (4 samples, 0.04%)</title><rect x="633.0" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.0" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="633.0" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 0.09%)</title><rect x="633.4" y="211.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="634.2" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.07%)</title><rect x="634.5" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.04%)</title><rect x="634.9" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="635.0" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.0" y="190.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (107 samples, 1.01%)</title><rect x="635.6" y="211.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.6" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (67 samples, 0.63%)</title><rect x="635.6" y="195.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.6" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (64 samples, 0.60%)</title><rect x="636.0" y="179.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.0" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (64 samples, 0.60%)</title><rect x="636.0" y="163.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (64 samples, 0.60%)</title><rect x="636.0" y="147.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (61 samples, 0.57%)</title><rect x="636.1" y="131.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (61 samples, 0.57%)</title><rect x="636.1" y="115.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (59 samples, 0.56%)</title><rect x="636.1" y="99.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (59 samples, 0.56%)</title><rect x="636.1" y="83.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (58 samples, 0.55%)</title><rect x="636.2" y="67.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.2" y="78.0"></text>
</g>
<g>
<title>write (57 samples, 0.54%)</title><rect x="636.3" y="51.0" width="6.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="639.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (39 samples, 0.37%)</title><rect x="643.1" y="195.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.1" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 0.37%)</title><rect x="643.1" y="179.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.1" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (30 samples, 0.28%)</title><rect x="643.3" y="163.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="646.3" y="174.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.03%)</title><rect x="643.6" y="147.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="646.6" y="158.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.03%)</title><rect x="643.6" y="131.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="646.6" y="142.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.03%)</title><rect x="644.6" y="147.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="647.6" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (3 samples, 0.03%)</title><rect x="645.3" y="147.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="648.3" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (9 samples, 0.08%)</title><rect x="645.6" y="147.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="648.6" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.06%)</title><rect x="645.6" y="131.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="648.6" y="142.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.03%)</title><rect x="646.0" y="115.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="649.0" y="126.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (3 samples, 0.03%)</title><rect x="646.3" y="131.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="649.3" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (3 samples, 0.03%)</title><rect x="646.3" y="115.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="649.3" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.04%)</title><rect x="647.5" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.5" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.03%)</title><rect x="647.6" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.6" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.03%)</title><rect x="647.6" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.6" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.03%)</title><rect x="648.0" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (47 samples, 0.44%)</title><rect x="648.3" y="291.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (47 samples, 0.44%)</title><rect x="648.3" y="275.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (47 samples, 0.44%)</title><rect x="648.3" y="259.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (47 samples, 0.44%)</title><rect x="648.3" y="243.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.3" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (47 samples, 0.44%)</title><rect x="648.3" y="227.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.3" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (47 samples, 0.44%)</title><rect x="648.3" y="211.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.3" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (47 samples, 0.44%)</title><rect x="648.3" y="195.0" width="5.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="651.3" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (45 samples, 0.42%)</title><rect x="648.5" y="179.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="651.5" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (7 samples, 0.07%)</title><rect x="648.6" y="163.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="651.6" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.07%)</title><rect x="648.6" y="147.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="651.6" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.05%)</title><rect x="648.9" y="131.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="651.9" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.04%)</title><rect x="649.0" y="115.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="652.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (32 samples, 0.30%)</title><rect x="650.0" y="163.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="653.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (31 samples, 0.29%)</title><rect x="650.1" y="147.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="653.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (30 samples, 0.28%)</title><rect x="650.1" y="131.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="653.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (30 samples, 0.28%)</title><rect x="650.1" y="115.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="653.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (25 samples, 0.24%)</title><rect x="650.4" y="99.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="653.4" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (20 samples, 0.19%)</title><rect x="650.7" y="83.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="653.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (15 samples, 0.14%)</title><rect x="651.3" y="67.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="654.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.05%)</title><rect x="652.4" y="51.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="655.4" y="62.0"></text>
</g>
<g>
<title>rocksdb::ReverseBytewiseComparator() (3 samples, 0.03%)</title><rect x="652.6" y="35.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="655.6" y="46.0"></text>
</g>
<g>
<title>[worker tid=55043] (571 samples, 5.37%)</title><rect x="653.5" y="387.0" width="63.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="656.5" y="398.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (570 samples, 5.36%)</title><rect x="653.6" y="371.0" width="63.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="382.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (570 samples, 5.36%)</title><rect x="653.6" y="355.0" width="63.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.6" y="366.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (570 samples, 5.36%)</title><rect x="653.6" y="339.0" width="63.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.6" y="350.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (45 samples, 0.42%)</title><rect x="653.6" y="323.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (45 samples, 0.42%)</title><rect x="653.6" y="307.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.33%)</title><rect x="653.6" y="291.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.31%)</title><rect x="653.8" y="275.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.31%)</title><rect x="653.8" y="259.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.8" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (30 samples, 0.28%)</title><rect x="654.2" y="243.0" width="3.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="657.2" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (29 samples, 0.27%)</title><rect x="654.2" y="227.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="657.2" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (25 samples, 0.24%)</title><rect x="654.4" y="211.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="657.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="657.5" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="657.5" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="657.8" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="657.8" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="657.8" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="657.8" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="657.8" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.8" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="658.0" y="211.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="661.0" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="658.1" y="195.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="661.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (525 samples, 4.94%)</title><rect x="658.6" y="323.0" width="58.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.6" y="334.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (525 samples, 4.94%)</title><rect x="658.6" y="307.0" width="58.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.6" y="318.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (105 samples, 0.99%)</title><rect x="658.7" y="291.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (100 samples, 0.94%)</title><rect x="659.1" y="275.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.05%)</title><rect x="659.1" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 0.89%)</title><rect x="659.6" y="259.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 0.88%)</title><rect x="659.8" y="243.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (93 samples, 0.88%)</title><rect x="659.8" y="227.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (93 samples, 0.88%)</title><rect x="659.8" y="211.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (93 samples, 0.88%)</title><rect x="659.8" y="195.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="660.1" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="660.1" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (88 samples, 0.83%)</title><rect x="660.4" y="179.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (88 samples, 0.83%)</title><rect x="660.4" y="163.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (86 samples, 0.81%)</title><rect x="660.4" y="147.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (86 samples, 0.81%)</title><rect x="660.4" y="131.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (86 samples, 0.81%)</title><rect x="660.4" y="115.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.4" y="126.0"></text>
</g>
<g>
<title>write (84 samples, 0.79%)</title><rect x="660.6" y="99.0" width="9.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="663.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (376 samples, 3.54%)</title><rect x="670.4" y="291.0" width="41.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.4" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (374 samples, 3.52%)</title><rect x="670.6" y="275.0" width="41.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.6" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (374 samples, 3.52%)</title><rect x="670.6" y="259.0" width="41.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.6" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (373 samples, 3.51%)</title><rect x="670.7" y="243.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.7" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (373 samples, 3.51%)</title><rect x="670.7" y="227.0" width="41.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.7" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (240 samples, 2.26%)</title><rect x="670.7" y="211.0" width="26.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.7" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (235 samples, 2.21%)</title><rect x="671.3" y="195.0" width="26.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.3" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (232 samples, 2.18%)</title><rect x="671.6" y="179.0" width="25.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.6" y="190.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="671.9" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="671.9" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (225 samples, 2.12%)</title><rect x="672.3" y="163.0" width="25.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.3" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (225 samples, 2.12%)</title><rect x="672.3" y="147.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.3" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (222 samples, 2.09%)</title><rect x="672.5" y="131.0" width="24.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.5" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (222 samples, 2.09%)</title><rect x="672.5" y="115.0" width="24.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.5" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (222 samples, 2.09%)</title><rect x="672.5" y="99.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.5" y="110.0">s..</text>
</g>
<g>
<title>rpc_errlist (212 samples, 1.99%)</title><rect x="673.6" y="83.0" width="23.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="676.6" y="94.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 0.09%)</title><rect x="697.4" y="211.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.04%)</title><rect x="697.7" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="697.7" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="697.7" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (10 samples, 0.09%)</title><rect x="698.5" y="211.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.04%)</title><rect x="698.7" y="195.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.7" y="206.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="698.8" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.8" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.04%)</title><rect x="699.1" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.04%)</title><rect x="699.1" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="699.1" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (105 samples, 0.99%)</title><rect x="699.9" y="211.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.9" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (72 samples, 0.68%)</title><rect x="699.9" y="195.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.9" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (70 samples, 0.66%)</title><rect x="700.1" y="179.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (69 samples, 0.65%)</title><rect x="700.3" y="163.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (69 samples, 0.65%)</title><rect x="700.3" y="147.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.05%)</title><rect x="700.3" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="700.3" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (60 samples, 0.56%)</title><rect x="700.8" y="131.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (60 samples, 0.56%)</title><rect x="700.8" y="115.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (56 samples, 0.53%)</title><rect x="700.8" y="99.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (56 samples, 0.53%)</title><rect x="700.8" y="83.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (56 samples, 0.53%)</title><rect x="700.8" y="67.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.8" y="78.0"></text>
</g>
<g>
<title>write (56 samples, 0.53%)</title><rect x="700.8" y="51.0" width="6.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="703.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="707.0" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (4 samples, 0.04%)</title><rect x="707.5" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.03%)</title><rect x="707.6" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (33 samples, 0.31%)</title><rect x="707.9" y="195.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.9" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 0.31%)</title><rect x="707.9" y="179.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.9" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (26 samples, 0.24%)</title><rect x="708.0" y="163.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="711.0" y="174.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.03%)</title><rect x="708.4" y="147.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="711.4" y="158.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.08%)</title><rect x="708.8" y="147.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="711.8" y="158.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.04%)</title><rect x="709.1" y="131.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="712.1" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.08%)</title><rect x="710.0" y="147.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="713.0" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (6 samples, 0.06%)</title><rect x="710.3" y="131.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="713.3" y="142.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.05%)</title><rect x="710.3" y="115.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="713.3" y="126.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.03%)</title><rect x="711.0" y="163.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="714.0" y="174.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.03%)</title><rect x="711.6" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (43 samples, 0.40%)</title><rect x="712.1" y="291.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (42 samples, 0.40%)</title><rect x="712.2" y="275.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (42 samples, 0.40%)</title><rect x="712.2" y="259.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (41 samples, 0.39%)</title><rect x="712.4" y="243.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.4" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (38 samples, 0.36%)</title><rect x="712.6" y="227.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.6" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (38 samples, 0.36%)</title><rect x="712.6" y="211.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.6" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (38 samples, 0.36%)</title><rect x="712.6" y="195.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="715.6" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (35 samples, 0.33%)</title><rect x="712.9" y="179.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="715.9" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (5 samples, 0.05%)</title><rect x="713.0" y="163.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="716.0" y="174.0"></text>
</g>
<g>
<title>free (3 samples, 0.03%)</title><rect x="713.6" y="163.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="716.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (23 samples, 0.22%)</title><rect x="714.2" y="163.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="717.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (23 samples, 0.22%)</title><rect x="714.2" y="147.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="717.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (23 samples, 0.22%)</title><rect x="714.2" y="131.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="717.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (23 samples, 0.22%)</title><rect x="714.2" y="115.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="717.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (23 samples, 0.22%)</title><rect x="714.2" y="99.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="717.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (21 samples, 0.20%)</title><rect x="714.5" y="83.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="717.5" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (18 samples, 0.17%)</title><rect x="714.8" y="67.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="717.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="716.2" y="51.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="719.2" y="62.0"></text>
</g>
<g>
<title>[worker tid=55555] (204 samples, 1.92%)</title><rect x="716.9" y="387.0" width="22.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="719.9" y="398.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (204 samples, 1.92%)</title><rect x="716.9" y="371.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.9" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (204 samples, 1.92%)</title><rect x="716.9" y="355.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.9" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (204 samples, 1.92%)</title><rect x="716.9" y="339.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.9" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (104 samples, 0.98%)</title><rect x="716.9" y="323.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (104 samples, 0.98%)</title><rect x="716.9" y="307.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 0.91%)</title><rect x="716.9" y="291.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.03%)</title><rect x="716.9" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (90 samples, 0.85%)</title><rect x="717.7" y="275.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (90 samples, 0.85%)</title><rect x="717.7" y="259.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (84 samples, 0.79%)</title><rect x="718.4" y="243.0" width="9.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="721.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (80 samples, 0.75%)</title><rect x="718.6" y="227.0" width="8.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="721.6" y="238.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (3 samples, 0.03%)</title><rect x="718.6" y="211.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="721.6" y="222.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.03%)</title><rect x="718.6" y="195.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="721.6" y="206.0"></text>
</g>
<g>
<title>__psynch_cvwait (74 samples, 0.70%)</title><rect x="718.9" y="211.0" width="8.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="721.9" y="222.0"></text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.03%)</title><rect x="727.1" y="211.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="730.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.05%)</title><rect x="727.9" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="727.9" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.05%)</title><rect x="727.9" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.05%)</title><rect x="727.9" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="727.9" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.9" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="727.9" y="211.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="730.9" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="728.0" y="195.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="731.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (100 samples, 0.94%)</title><rect x="728.5" y="323.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (100 samples, 0.94%)</title><rect x="728.5" y="307.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 0.48%)</title><rect x="728.6" y="291.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.43%)</title><rect x="729.0" y="275.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.03%)</title><rect x="729.0" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 0.40%)</title><rect x="729.3" y="259.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.3" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 0.40%)</title><rect x="729.3" y="243.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.3" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (43 samples, 0.40%)</title><rect x="729.3" y="227.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.3" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (43 samples, 0.40%)</title><rect x="729.3" y="211.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (43 samples, 0.40%)</title><rect x="729.3" y="195.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.08%)</title><rect x="729.3" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.08%)</title><rect x="729.3" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.07%)</title><rect x="729.5" y="147.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.07%)</title><rect x="729.5" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.05%)</title><rect x="729.7" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.05%)</title><rect x="729.7" y="99.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (4 samples, 0.04%)</title><rect x="729.7" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.7" y="94.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="729.8" y="67.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="732.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (34 samples, 0.32%)</title><rect x="730.2" y="179.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (34 samples, 0.32%)</title><rect x="730.2" y="163.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (33 samples, 0.31%)</title><rect x="730.2" y="147.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (33 samples, 0.31%)</title><rect x="730.2" y="131.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (33 samples, 0.31%)</title><rect x="730.2" y="115.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.2" y="126.0"></text>
</g>
<g>
<title>write (33 samples, 0.31%)</title><rect x="730.2" y="99.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="733.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (47 samples, 0.44%)</title><rect x="734.3" y="291.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (47 samples, 0.44%)</title><rect x="734.3" y="275.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (47 samples, 0.44%)</title><rect x="734.3" y="259.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (45 samples, 0.42%)</title><rect x="734.6" y="243.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.6" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 0.41%)</title><rect x="734.7" y="227.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.7" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 0.41%)</title><rect x="734.7" y="211.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.7" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (43 samples, 0.40%)</title><rect x="734.7" y="195.0" width="4.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="737.7" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (36 samples, 0.34%)</title><rect x="735.5" y="179.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="738.5" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (7 samples, 0.07%)</title><rect x="735.8" y="163.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="738.8" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.04%)</title><rect x="736.1" y="147.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="739.1" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="736.2" y="131.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="739.2" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="736.2" y="115.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="739.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (21 samples, 0.20%)</title><rect x="737.1" y="163.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="740.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (21 samples, 0.20%)</title><rect x="737.1" y="147.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="740.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (21 samples, 0.20%)</title><rect x="737.1" y="131.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="740.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (21 samples, 0.20%)</title><rect x="737.1" y="115.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="740.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (19 samples, 0.18%)</title><rect x="737.2" y="99.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="740.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (15 samples, 0.14%)</title><rect x="737.7" y="83.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="740.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (15 samples, 0.14%)</title><rect x="737.7" y="67.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="740.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long long, bool, rocksdb::ReadCallback*, bool*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*) (4 samples, 0.04%)</title><rect x="738.8" y="51.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="741.8" y="62.0"></text>
</g>
<g>
<title>[worker tid=55811] (163 samples, 1.53%)</title><rect x="739.6" y="387.0" width="18.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="742.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (163 samples, 1.53%)</title><rect x="739.6" y="371.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (163 samples, 1.53%)</title><rect x="739.6" y="355.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (163 samples, 1.53%)</title><rect x="739.6" y="339.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (70 samples, 0.66%)</title><rect x="739.9" y="323.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (70 samples, 0.66%)</title><rect x="739.9" y="307.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (66 samples, 0.62%)</title><rect x="739.9" y="291.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 0.57%)</title><rect x="740.4" y="275.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (61 samples, 0.57%)</title><rect x="740.4" y="259.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.4" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (57 samples, 0.54%)</title><rect x="740.9" y="243.0" width="6.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="743.9" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (52 samples, 0.49%)</title><rect x="741.2" y="227.0" width="5.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="744.2" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (49 samples, 0.46%)</title><rect x="741.4" y="211.0" width="5.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="744.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.04%)</title><rect x="747.2" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.04%)</title><rect x="747.2" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="747.3" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (90 samples, 0.85%)</title><rect x="747.7" y="323.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (90 samples, 0.85%)</title><rect x="747.7" y="307.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (54 samples, 0.51%)</title><rect x="747.7" y="291.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 0.44%)</title><rect x="748.2" y="275.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.04%)</title><rect x="748.2" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 0.40%)</title><rect x="748.7" y="259.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 0.40%)</title><rect x="748.7" y="243.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (43 samples, 0.40%)</title><rect x="748.7" y="227.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (43 samples, 0.40%)</title><rect x="748.7" y="211.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (42 samples, 0.40%)</title><rect x="748.8" y="195.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="748.8" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="748.8" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.36%)</title><rect x="749.2" y="179.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.36%)</title><rect x="749.2" y="163.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (38 samples, 0.36%)</title><rect x="749.2" y="147.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (36 samples, 0.34%)</title><rect x="749.4" y="131.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (36 samples, 0.34%)</title><rect x="749.4" y="115.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.4" y="126.0"></text>
</g>
<g>
<title>write (35 samples, 0.33%)</title><rect x="749.6" y="99.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="752.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (36 samples, 0.34%)</title><rect x="753.7" y="291.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (36 samples, 0.34%)</title><rect x="753.7" y="275.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (36 samples, 0.34%)</title><rect x="753.7" y="259.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (35 samples, 0.33%)</title><rect x="753.8" y="243.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.8" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (34 samples, 0.32%)</title><rect x="753.8" y="227.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.8" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (34 samples, 0.32%)</title><rect x="753.8" y="211.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.8" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (33 samples, 0.31%)</title><rect x="753.9" y="195.0" width="3.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="756.9" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (28 samples, 0.26%)</title><rect x="754.2" y="179.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="757.2" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="754.2" y="163.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="757.2" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.04%)</title><rect x="754.3" y="147.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="757.3" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="754.4" y="131.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="757.4" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="754.4" y="115.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="757.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (17 samples, 0.16%)</title><rect x="755.3" y="163.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="758.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (14 samples, 0.13%)</title><rect x="755.5" y="147.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="758.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (14 samples, 0.13%)</title><rect x="755.5" y="131.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="758.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (14 samples, 0.13%)</title><rect x="755.5" y="115.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="758.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (13 samples, 0.12%)</title><rect x="755.7" y="99.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="758.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (10 samples, 0.09%)</title><rect x="756.0" y="83.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="759.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (10 samples, 0.09%)</title><rect x="756.0" y="67.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="759.0" y="78.0"></text>
</g>
<g>
<title>[worker tid=56579] (150 samples, 1.41%)</title><rect x="757.7" y="387.0" width="16.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="760.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (150 samples, 1.41%)</title><rect x="757.7" y="371.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (150 samples, 1.41%)</title><rect x="757.7" y="355.0" width="16.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (150 samples, 1.41%)</title><rect x="757.7" y="339.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (70 samples, 0.66%)</title><rect x="757.8" y="323.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (70 samples, 0.66%)</title><rect x="757.8" y="307.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (67 samples, 0.63%)</title><rect x="757.8" y="291.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="757.9" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="757.9" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (63 samples, 0.59%)</title><rect x="758.2" y="275.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (63 samples, 0.59%)</title><rect x="758.2" y="259.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (62 samples, 0.58%)</title><rect x="758.3" y="243.0" width="6.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="761.3" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (59 samples, 0.56%)</title><rect x="758.5" y="227.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.5" y="238.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (3 samples, 0.03%)</title><rect x="758.5" y="211.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="761.5" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (54 samples, 0.51%)</title><rect x="758.9" y="211.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="761.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (79 samples, 0.74%)</title><rect x="765.5" y="323.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (79 samples, 0.74%)</title><rect x="765.5" y="307.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (44 samples, 0.41%)</title><rect x="765.5" y="291.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 0.40%)</title><rect x="765.8" y="275.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (40 samples, 0.38%)</title><rect x="766.0" y="259.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (40 samples, 0.38%)</title><rect x="766.0" y="243.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (40 samples, 0.38%)</title><rect x="766.0" y="227.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (40 samples, 0.38%)</title><rect x="766.0" y="211.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (39 samples, 0.37%)</title><rect x="766.1" y="195.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.36%)</title><rect x="766.2" y="179.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.36%)</title><rect x="766.2" y="163.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (36 samples, 0.34%)</title><rect x="766.3" y="147.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (36 samples, 0.34%)</title><rect x="766.3" y="131.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (36 samples, 0.34%)</title><rect x="766.3" y="115.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.3" y="126.0"></text>
</g>
<g>
<title>write (35 samples, 0.33%)</title><rect x="766.4" y="99.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="769.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (35 samples, 0.33%)</title><rect x="770.4" y="291.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (35 samples, 0.33%)</title><rect x="770.4" y="275.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (35 samples, 0.33%)</title><rect x="770.4" y="259.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (33 samples, 0.31%)</title><rect x="770.6" y="243.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.6" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="770.6" y="227.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.6" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="770.6" y="211.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.6" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (32 samples, 0.30%)</title><rect x="770.6" y="195.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="773.6" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (30 samples, 0.28%)</title><rect x="770.9" y="179.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="773.9" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (5 samples, 0.05%)</title><rect x="771.2" y="163.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="774.2" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.04%)</title><rect x="771.2" y="147.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="774.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (18 samples, 0.17%)</title><rect x="771.9" y="163.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="774.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (18 samples, 0.17%)</title><rect x="771.9" y="147.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="774.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (18 samples, 0.17%)</title><rect x="771.9" y="131.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="774.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (18 samples, 0.17%)</title><rect x="771.9" y="115.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="774.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (18 samples, 0.17%)</title><rect x="771.9" y="99.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="774.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (15 samples, 0.14%)</title><rect x="772.1" y="83.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="775.1" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (12 samples, 0.11%)</title><rect x="772.4" y="67.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="775.4" y="78.0"></text>
</g>
<g>
<title>[worker tid=57091] (169 samples, 1.59%)</title><rect x="774.3" y="387.0" width="18.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="777.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (168 samples, 1.58%)</title><rect x="774.4" y="371.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (168 samples, 1.58%)</title><rect x="774.4" y="355.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (168 samples, 1.58%)</title><rect x="774.4" y="339.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (84 samples, 0.79%)</title><rect x="774.5" y="323.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (82 samples, 0.77%)</title><rect x="774.8" y="307.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (79 samples, 0.74%)</title><rect x="774.8" y="291.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 0.70%)</title><rect x="775.3" y="275.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (74 samples, 0.70%)</title><rect x="775.3" y="259.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (66 samples, 0.62%)</title><rect x="776.2" y="243.0" width="7.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="779.2" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (61 samples, 0.57%)</title><rect x="776.5" y="227.0" width="6.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="779.5" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (57 samples, 0.54%)</title><rect x="776.9" y="211.0" width="6.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="779.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (83 samples, 0.78%)</title><rect x="783.9" y="323.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (83 samples, 0.78%)</title><rect x="783.9" y="307.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 0.43%)</title><rect x="784.0" y="291.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 0.42%)</title><rect x="784.1" y="275.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="784.1" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.37%)</title><rect x="784.7" y="259.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.37%)</title><rect x="784.7" y="243.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.7" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (39 samples, 0.37%)</title><rect x="784.7" y="227.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (39 samples, 0.37%)</title><rect x="784.7" y="211.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (39 samples, 0.37%)</title><rect x="784.7" y="195.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.36%)</title><rect x="784.9" y="179.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.36%)</title><rect x="784.9" y="163.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (35 samples, 0.33%)</title><rect x="784.9" y="147.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (34 samples, 0.32%)</title><rect x="785.0" y="131.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (34 samples, 0.32%)</title><rect x="785.0" y="115.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.0" y="126.0"></text>
</g>
<g>
<title>write (33 samples, 0.31%)</title><rect x="785.1" y="99.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="788.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (36 samples, 0.34%)</title><rect x="789.1" y="291.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (35 samples, 0.33%)</title><rect x="789.2" y="275.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (35 samples, 0.33%)</title><rect x="789.2" y="259.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (34 samples, 0.32%)</title><rect x="789.3" y="243.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.3" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 0.31%)</title><rect x="789.4" y="227.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.4" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 0.31%)</title><rect x="789.4" y="211.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.4" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (33 samples, 0.31%)</title><rect x="789.4" y="195.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="792.4" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (32 samples, 0.30%)</title><rect x="789.5" y="179.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="792.5" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (5 samples, 0.05%)</title><rect x="789.5" y="163.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="792.5" y="174.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="789.7" y="147.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="792.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (22 samples, 0.21%)</title><rect x="790.3" y="163.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="793.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (22 samples, 0.21%)</title><rect x="790.3" y="147.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="793.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (22 samples, 0.21%)</title><rect x="790.3" y="131.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="793.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (21 samples, 0.20%)</title><rect x="790.4" y="115.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="793.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (21 samples, 0.20%)</title><rect x="790.4" y="99.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="793.4" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (18 samples, 0.17%)</title><rect x="790.7" y="83.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="793.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (18 samples, 0.17%)</title><rect x="790.7" y="67.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="793.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.07%)</title><rect x="791.9" y="51.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="794.9" y="62.0"></text>
</g>
<g>
<title>[worker tid=57859] (150 samples, 1.41%)</title><rect x="793.1" y="387.0" width="16.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="796.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (150 samples, 1.41%)</title><rect x="793.1" y="371.0" width="16.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (150 samples, 1.41%)</title><rect x="793.1" y="355.0" width="16.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (150 samples, 1.41%)</title><rect x="793.1" y="339.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (79 samples, 0.74%)</title><rect x="793.2" y="323.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (79 samples, 0.74%)</title><rect x="793.2" y="307.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (72 samples, 0.68%)</title><rect x="793.2" y="291.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.65%)</title><rect x="793.5" y="275.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 0.65%)</title><rect x="793.5" y="259.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (66 samples, 0.62%)</title><rect x="793.9" y="243.0" width="7.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="796.9" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (63 samples, 0.59%)</title><rect x="794.1" y="227.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="797.1" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (59 samples, 0.56%)</title><rect x="794.3" y="211.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="797.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.05%)</title><rect x="801.4" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="801.4" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.05%)</title><rect x="801.4" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.05%)</title><rect x="801.4" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="801.4" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.4" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="801.4" y="211.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="804.4" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 0.05%)</title><rect x="801.4" y="195.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="804.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (70 samples, 0.66%)</title><rect x="802.0" y="323.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (70 samples, 0.66%)</title><rect x="802.0" y="307.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 0.40%)</title><rect x="802.0" y="291.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39 samples, 0.37%)</title><rect x="802.2" y="275.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.2" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.37%)</title><rect x="802.2" y="259.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.37%)</title><rect x="802.2" y="243.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (39 samples, 0.37%)</title><rect x="802.2" y="227.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (39 samples, 0.37%)</title><rect x="802.2" y="211.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (39 samples, 0.37%)</title><rect x="802.2" y="195.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="802.2" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="802.2" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="802.2" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (35 samples, 0.33%)</title><rect x="802.6" y="179.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (35 samples, 0.33%)</title><rect x="802.6" y="163.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (32 samples, 0.30%)</title><rect x="802.7" y="147.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (32 samples, 0.30%)</title><rect x="802.7" y="131.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (32 samples, 0.30%)</title><rect x="802.7" y="115.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.7" y="126.0"></text>
</g>
<g>
<title>write (31 samples, 0.29%)</title><rect x="802.8" y="99.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="805.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (28 samples, 0.26%)</title><rect x="806.6" y="291.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (27 samples, 0.25%)</title><rect x="806.7" y="275.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (27 samples, 0.25%)</title><rect x="806.7" y="259.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (26 samples, 0.24%)</title><rect x="806.8" y="243.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.8" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (24 samples, 0.23%)</title><rect x="807.0" y="227.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.0" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (24 samples, 0.23%)</title><rect x="807.0" y="211.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.0" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (24 samples, 0.23%)</title><rect x="807.0" y="195.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="810.0" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (23 samples, 0.22%)</title><rect x="807.0" y="179.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="810.0" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="807.1" y="163.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="810.1" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.03%)</title><rect x="807.4" y="147.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="810.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (12 samples, 0.11%)</title><rect x="808.1" y="163.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="811.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (11 samples, 0.10%)</title><rect x="808.1" y="147.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="811.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (11 samples, 0.10%)</title><rect x="808.1" y="131.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="811.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (11 samples, 0.10%)</title><rect x="808.1" y="115.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="811.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (11 samples, 0.10%)</title><rect x="808.1" y="99.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="811.1" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (10 samples, 0.09%)</title><rect x="808.2" y="83.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="811.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (9 samples, 0.08%)</title><rect x="808.3" y="67.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="811.3" y="78.0"></text>
</g>
<g>
<title>[worker tid=59139] (130 samples, 1.22%)</title><rect x="809.7" y="387.0" width="14.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="812.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (129 samples, 1.21%)</title><rect x="809.8" y="371.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (129 samples, 1.21%)</title><rect x="809.8" y="355.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (129 samples, 1.21%)</title><rect x="809.8" y="339.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (65 samples, 0.61%)</title><rect x="810.0" y="323.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (65 samples, 0.61%)</title><rect x="810.0" y="307.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (63 samples, 0.59%)</title><rect x="810.0" y="291.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (60 samples, 0.56%)</title><rect x="810.3" y="275.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 0.56%)</title><rect x="810.3" y="259.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (59 samples, 0.56%)</title><rect x="810.4" y="243.0" width="6.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="813.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (55 samples, 0.52%)</title><rect x="810.6" y="227.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="813.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (55 samples, 0.52%)</title><rect x="810.6" y="211.0" width="6.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="813.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (63 samples, 0.59%)</title><rect x="817.2" y="323.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (63 samples, 0.59%)</title><rect x="817.2" y="307.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 0.26%)</title><rect x="817.2" y="291.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 0.23%)</title><rect x="817.5" y="275.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.22%)</title><rect x="817.6" y="259.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.22%)</title><rect x="817.6" y="243.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (23 samples, 0.22%)</title><rect x="817.6" y="227.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (23 samples, 0.22%)</title><rect x="817.6" y="211.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (22 samples, 0.21%)</title><rect x="817.7" y="195.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (20 samples, 0.19%)</title><rect x="817.9" y="179.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (20 samples, 0.19%)</title><rect x="817.9" y="163.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (18 samples, 0.17%)</title><rect x="817.9" y="147.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (17 samples, 0.16%)</title><rect x="818.1" y="131.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (17 samples, 0.16%)</title><rect x="818.1" y="115.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.1" y="126.0"></text>
</g>
<g>
<title>write (16 samples, 0.15%)</title><rect x="818.2" y="99.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="821.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (35 samples, 0.33%)</title><rect x="820.3" y="291.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (35 samples, 0.33%)</title><rect x="820.3" y="275.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (35 samples, 0.33%)</title><rect x="820.3" y="259.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (34 samples, 0.32%)</title><rect x="820.4" y="243.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.4" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (34 samples, 0.32%)</title><rect x="820.4" y="227.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.4" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (34 samples, 0.32%)</title><rect x="820.4" y="211.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.4" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (34 samples, 0.32%)</title><rect x="820.4" y="195.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="823.4" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (32 samples, 0.30%)</title><rect x="820.6" y="179.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="823.6" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (9 samples, 0.08%)</title><rect x="820.7" y="163.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="823.7" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.07%)</title><rect x="820.8" y="147.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="823.8" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.05%)</title><rect x="820.9" y="131.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="823.9" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="821.2" y="115.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="824.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (16 samples, 0.15%)</title><rect x="822.4" y="163.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="825.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (16 samples, 0.15%)</title><rect x="822.4" y="147.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.4" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (16 samples, 0.15%)</title><rect x="822.4" y="131.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (16 samples, 0.15%)</title><rect x="822.4" y="115.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="825.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (16 samples, 0.15%)</title><rect x="822.4" y="99.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="825.4" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (13 samples, 0.12%)</title><rect x="822.7" y="83.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="825.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (13 samples, 0.12%)</title><rect x="822.7" y="67.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="825.7" y="78.0"></text>
</g>
<g>
<title>[worker tid=59395] (155 samples, 1.46%)</title><rect x="824.2" y="387.0" width="17.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="827.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (155 samples, 1.46%)</title><rect x="824.2" y="371.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (155 samples, 1.46%)</title><rect x="824.2" y="355.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (155 samples, 1.46%)</title><rect x="824.2" y="339.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (79 samples, 0.74%)</title><rect x="824.3" y="323.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (78 samples, 0.73%)</title><rect x="824.4" y="307.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (75 samples, 0.71%)</title><rect x="824.4" y="291.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 0.70%)</title><rect x="824.5" y="275.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (74 samples, 0.70%)</title><rect x="824.5" y="259.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (69 samples, 0.65%)</title><rect x="825.1" y="243.0" width="7.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="828.1" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (59 samples, 0.56%)</title><rect x="825.4" y="227.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="828.4" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (59 samples, 0.56%)</title><rect x="825.4" y="211.0" width="6.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="828.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="832.7" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="832.7" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="832.7" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="832.7" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="832.7" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.7" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.03%)</title><rect x="832.7" y="211.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="835.7" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="832.7" y="195.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="835.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (75 samples, 0.71%)</title><rect x="833.0" y="323.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (75 samples, 0.71%)</title><rect x="833.0" y="307.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 0.36%)</title><rect x="833.0" y="291.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (34 samples, 0.32%)</title><rect x="833.5" y="275.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.04%)</title><rect x="833.5" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.28%)</title><rect x="833.9" y="259.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 0.27%)</title><rect x="834.0" y="243.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (29 samples, 0.27%)</title><rect x="834.0" y="227.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (29 samples, 0.27%)</title><rect x="834.0" y="211.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (29 samples, 0.27%)</title><rect x="834.0" y="195.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="834.0" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="834.0" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (25 samples, 0.24%)</title><rect x="834.4" y="179.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (25 samples, 0.24%)</title><rect x="834.4" y="163.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 0.23%)</title><rect x="834.4" y="147.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (23 samples, 0.22%)</title><rect x="834.5" y="131.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (23 samples, 0.22%)</title><rect x="834.5" y="115.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.5" y="126.0"></text>
</g>
<g>
<title>write (22 samples, 0.21%)</title><rect x="834.6" y="99.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="837.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (37 samples, 0.35%)</title><rect x="837.3" y="291.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (37 samples, 0.35%)</title><rect x="837.3" y="275.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (37 samples, 0.35%)</title><rect x="837.3" y="259.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (34 samples, 0.32%)</title><rect x="837.6" y="243.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.6" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 0.31%)</title><rect x="837.6" y="227.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.6" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (33 samples, 0.31%)</title><rect x="837.6" y="211.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.6" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (32 samples, 0.30%)</title><rect x="837.7" y="195.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="840.7" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (31 samples, 0.29%)</title><rect x="837.8" y="179.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="840.8" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="837.8" y="163.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="840.8" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="838.9" y="163.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="841.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="838.9" y="147.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (18 samples, 0.17%)</title><rect x="839.0" y="131.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="842.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (18 samples, 0.17%)</title><rect x="839.0" y="115.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="842.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (16 samples, 0.15%)</title><rect x="839.2" y="99.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="842.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (13 samples, 0.12%)</title><rect x="839.4" y="83.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="842.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (10 samples, 0.09%)</title><rect x="839.7" y="67.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="842.7" y="78.0"></text>
</g>
<g>
<title>[worker tid=60163] (167 samples, 1.57%)</title><rect x="841.4" y="387.0" width="18.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="844.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (164 samples, 1.54%)</title><rect x="841.7" y="371.0" width="18.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (164 samples, 1.54%)</title><rect x="841.7" y="355.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (164 samples, 1.54%)</title><rect x="841.7" y="339.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 0.81%)</title><rect x="842.0" y="323.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (86 samples, 0.81%)</title><rect x="842.0" y="307.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.76%)</title><rect x="842.0" y="291.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (76 samples, 0.72%)</title><rect x="842.6" y="275.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (76 samples, 0.72%)</title><rect x="842.6" y="259.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (68 samples, 0.64%)</title><rect x="843.5" y="243.0" width="7.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="846.5" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (66 samples, 0.62%)</title><rect x="843.6" y="227.0" width="7.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="846.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (62 samples, 0.58%)</title><rect x="843.8" y="211.0" width="6.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="846.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="851.3" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="851.3" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="851.3" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="851.3" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="851.3" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.3" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.03%)</title><rect x="851.3" y="211.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="854.3" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="851.3" y="195.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="854.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (75 samples, 0.71%)</title><rect x="851.6" y="323.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (75 samples, 0.71%)</title><rect x="851.6" y="307.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 0.37%)</title><rect x="851.6" y="291.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (36 samples, 0.34%)</title><rect x="851.9" y="275.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 0.32%)</title><rect x="852.1" y="259.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 0.32%)</title><rect x="852.1" y="243.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 0.32%)</title><rect x="852.1" y="227.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (34 samples, 0.32%)</title><rect x="852.1" y="211.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (33 samples, 0.31%)</title><rect x="852.3" y="195.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.29%)</title><rect x="852.5" y="179.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (31 samples, 0.29%)</title><rect x="852.5" y="163.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (30 samples, 0.28%)</title><rect x="852.5" y="147.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (29 samples, 0.27%)</title><rect x="852.6" y="131.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (29 samples, 0.27%)</title><rect x="852.6" y="115.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.6" y="126.0"></text>
</g>
<g>
<title>write (26 samples, 0.24%)</title><rect x="852.9" y="99.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="855.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (36 samples, 0.34%)</title><rect x="855.9" y="291.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (36 samples, 0.34%)</title><rect x="855.9" y="275.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (36 samples, 0.34%)</title><rect x="855.9" y="259.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (36 samples, 0.34%)</title><rect x="855.9" y="243.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.9" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (35 samples, 0.33%)</title><rect x="856.0" y="227.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.0" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (35 samples, 0.33%)</title><rect x="856.0" y="211.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.0" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (35 samples, 0.33%)</title><rect x="856.0" y="195.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="859.0" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (34 samples, 0.32%)</title><rect x="856.1" y="179.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.1" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (7 samples, 0.07%)</title><rect x="856.3" y="163.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="859.3" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.04%)</title><rect x="856.4" y="147.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="859.4" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="856.5" y="131.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="859.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (21 samples, 0.20%)</title><rect x="857.6" y="163.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="860.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (21 samples, 0.20%)</title><rect x="857.6" y="147.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="860.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (21 samples, 0.20%)</title><rect x="857.6" y="131.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="860.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (21 samples, 0.20%)</title><rect x="857.6" y="115.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="860.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (21 samples, 0.20%)</title><rect x="857.6" y="99.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="860.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (17 samples, 0.16%)</title><rect x="858.0" y="83.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="861.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (16 samples, 0.15%)</title><rect x="858.1" y="67.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="861.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="859.4" y="51.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="862.4" y="62.0"></text>
</g>
<g>
<title>[worker tid=60675] (165 samples, 1.55%)</title><rect x="859.9" y="387.0" width="18.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="862.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (165 samples, 1.55%)</title><rect x="859.9" y="371.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (165 samples, 1.55%)</title><rect x="859.9" y="355.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (165 samples, 1.55%)</title><rect x="859.9" y="339.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (87 samples, 0.82%)</title><rect x="860.0" y="323.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (87 samples, 0.82%)</title><rect x="860.0" y="307.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (82 samples, 0.77%)</title><rect x="860.0" y="291.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (80 samples, 0.75%)</title><rect x="860.2" y="275.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (80 samples, 0.75%)</title><rect x="860.2" y="259.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (76 samples, 0.72%)</title><rect x="860.7" y="243.0" width="8.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="863.7" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (68 samples, 0.64%)</title><rect x="861.1" y="227.0" width="7.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="864.1" y="238.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (3 samples, 0.03%)</title><rect x="861.1" y="211.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="864.1" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (65 samples, 0.61%)</title><rect x="861.5" y="211.0" width="7.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="869.1" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="869.1" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="869.1" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (77 samples, 0.72%)</title><rect x="869.7" y="323.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (77 samples, 0.72%)</title><rect x="869.7" y="307.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.45%)</title><rect x="869.7" y="291.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 0.44%)</title><rect x="869.8" y="275.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 0.42%)</title><rect x="870.0" y="259.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 0.42%)</title><rect x="870.0" y="243.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.0" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (45 samples, 0.42%)</title><rect x="870.0" y="227.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (45 samples, 0.42%)</title><rect x="870.0" y="211.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (45 samples, 0.42%)</title><rect x="870.0" y="195.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="870.2" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="870.2" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (40 samples, 0.38%)</title><rect x="870.6" y="179.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (40 samples, 0.38%)</title><rect x="870.6" y="163.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (38 samples, 0.36%)</title><rect x="870.7" y="147.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (36 samples, 0.34%)</title><rect x="870.9" y="131.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (36 samples, 0.34%)</title><rect x="870.9" y="115.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.9" y="126.0"></text>
</g>
<g>
<title>write (33 samples, 0.31%)</title><rect x="871.2" y="99.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="874.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (29 samples, 0.27%)</title><rect x="875.0" y="291.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (29 samples, 0.27%)</title><rect x="875.0" y="275.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (29 samples, 0.27%)</title><rect x="875.0" y="259.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (27 samples, 0.25%)</title><rect x="875.2" y="243.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.2" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (27 samples, 0.25%)</title><rect x="875.2" y="227.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.2" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (27 samples, 0.25%)</title><rect x="875.2" y="211.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.2" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (26 samples, 0.24%)</title><rect x="875.2" y="195.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="878.2" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (25 samples, 0.24%)</title><rect x="875.3" y="179.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="878.3" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="875.3" y="163.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="878.3" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.04%)</title><rect x="875.5" y="147.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="878.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (16 samples, 0.15%)</title><rect x="876.3" y="163.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="879.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (15 samples, 0.14%)</title><rect x="876.5" y="147.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="879.5" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (15 samples, 0.14%)</title><rect x="876.5" y="131.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="879.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (15 samples, 0.14%)</title><rect x="876.5" y="115.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="879.5" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (14 samples, 0.13%)</title><rect x="876.6" y="99.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="879.6" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (8 samples, 0.08%)</title><rect x="876.9" y="83.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="879.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (7 samples, 0.07%)</title><rect x="877.0" y="67.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="880.0" y="78.0"></text>
</g>
<g>
<title>[worker tid=61187] (137 samples, 1.29%)</title><rect x="878.2" y="387.0" width="15.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="881.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (137 samples, 1.29%)</title><rect x="878.2" y="371.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (137 samples, 1.29%)</title><rect x="878.2" y="355.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (137 samples, 1.29%)</title><rect x="878.2" y="339.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (67 samples, 0.63%)</title><rect x="878.2" y="323.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (66 samples, 0.62%)</title><rect x="878.3" y="307.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (61 samples, 0.57%)</title><rect x="878.3" y="291.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.56%)</title><rect x="878.6" y="275.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.56%)</title><rect x="878.6" y="259.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (53 samples, 0.50%)</title><rect x="879.2" y="243.0" width="5.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="882.2" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (45 samples, 0.42%)</title><rect x="879.5" y="227.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="882.5" y="238.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (3 samples, 0.03%)</title><rect x="879.5" y="211.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="882.5" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (41 samples, 0.39%)</title><rect x="879.8" y="211.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="882.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="885.3" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="885.3" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="885.3" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="885.3" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="885.3" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.3" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.03%)</title><rect x="885.3" y="211.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="888.3" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="885.3" y="195.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="888.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (70 samples, 0.66%)</title><rect x="885.7" y="323.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (70 samples, 0.66%)</title><rect x="885.7" y="307.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (34 samples, 0.32%)</title><rect x="886.0" y="291.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (33 samples, 0.31%)</title><rect x="886.1" y="275.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 0.31%)</title><rect x="886.1" y="259.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 0.31%)</title><rect x="886.1" y="243.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (33 samples, 0.31%)</title><rect x="886.1" y="227.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (33 samples, 0.31%)</title><rect x="886.1" y="211.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (32 samples, 0.30%)</title><rect x="886.2" y="195.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.05%)</title><rect x="886.3" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="886.3" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="886.6" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="886.6" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.24%)</title><rect x="886.9" y="179.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.24%)</title><rect x="886.9" y="163.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (25 samples, 0.24%)</title><rect x="886.9" y="147.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (25 samples, 0.24%)</title><rect x="886.9" y="131.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (25 samples, 0.24%)</title><rect x="886.9" y="115.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.9" y="126.0"></text>
</g>
<g>
<title>write (22 samples, 0.21%)</title><rect x="887.2" y="99.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="890.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (33 samples, 0.31%)</title><rect x="889.8" y="291.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (33 samples, 0.31%)</title><rect x="889.8" y="275.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (33 samples, 0.31%)</title><rect x="889.8" y="259.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (31 samples, 0.29%)</title><rect x="890.0" y="243.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.0" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.29%)</title><rect x="890.0" y="227.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.0" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 0.29%)</title><rect x="890.0" y="211.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.0" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (29 samples, 0.27%)</title><rect x="890.1" y="195.0" width="3.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="893.1" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (29 samples, 0.27%)</title><rect x="890.1" y="179.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="893.1" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="890.1" y="163.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="893.1" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.05%)</title><rect x="890.2" y="147.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="893.2" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.04%)</title><rect x="890.3" y="131.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="893.3" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="890.4" y="115.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (18 samples, 0.17%)</title><rect x="891.3" y="163.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="894.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (18 samples, 0.17%)</title><rect x="891.3" y="147.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="894.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (18 samples, 0.17%)</title><rect x="891.3" y="131.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="894.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (18 samples, 0.17%)</title><rect x="891.3" y="115.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="894.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 0.16%)</title><rect x="891.3" y="99.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 0.13%)</title><rect x="891.6" y="83.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="894.6" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (14 samples, 0.13%)</title><rect x="891.6" y="67.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="894.6" y="78.0"></text>
</g>
<g>
<title>[worker tid=72195] (158 samples, 1.49%)</title><rect x="893.4" y="387.0" width="17.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="896.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (157 samples, 1.48%)</title><rect x="893.6" y="371.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (157 samples, 1.48%)</title><rect x="893.6" y="355.0" width="17.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (157 samples, 1.48%)</title><rect x="893.6" y="339.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (72 samples, 0.68%)</title><rect x="893.7" y="323.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (72 samples, 0.68%)</title><rect x="893.7" y="307.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (67 samples, 0.63%)</title><rect x="893.7" y="291.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (64 samples, 0.60%)</title><rect x="894.0" y="275.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (64 samples, 0.60%)</title><rect x="894.0" y="259.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (60 samples, 0.56%)</title><rect x="894.4" y="243.0" width="6.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="897.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (55 samples, 0.52%)</title><rect x="894.6" y="227.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="897.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (53 samples, 0.50%)</title><rect x="894.7" y="211.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="897.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.04%)</title><rect x="901.2" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.04%)</title><rect x="901.2" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.04%)</title><rect x="901.2" y="259.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.04%)</title><rect x="901.2" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.04%)</title><rect x="901.2" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.2" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.04%)</title><rect x="901.2" y="211.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="904.2" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.04%)</title><rect x="901.2" y="195.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="904.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (84 samples, 0.79%)</title><rect x="901.7" y="323.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (84 samples, 0.79%)</title><rect x="901.7" y="307.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 0.42%)</title><rect x="901.9" y="291.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (44 samples, 0.41%)</title><rect x="902.0" y="275.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.40%)</title><rect x="902.2" y="259.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.40%)</title><rect x="902.2" y="243.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (42 samples, 0.40%)</title><rect x="902.2" y="227.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (42 samples, 0.40%)</title><rect x="902.2" y="211.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (42 samples, 0.40%)</title><rect x="902.2" y="195.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="902.2" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="902.2" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (39 samples, 0.37%)</title><rect x="902.5" y="179.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (39 samples, 0.37%)</title><rect x="902.5" y="163.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (39 samples, 0.37%)</title><rect x="902.5" y="147.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (36 samples, 0.34%)</title><rect x="902.9" y="131.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (36 samples, 0.34%)</title><rect x="902.9" y="115.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.9" y="126.0"></text>
</g>
<g>
<title>write (35 samples, 0.33%)</title><rect x="903.0" y="99.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="906.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (37 samples, 0.35%)</title><rect x="906.9" y="291.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (37 samples, 0.35%)</title><rect x="906.9" y="275.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (37 samples, 0.35%)</title><rect x="906.9" y="259.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (36 samples, 0.34%)</title><rect x="907.0" y="243.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.0" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (35 samples, 0.33%)</title><rect x="907.0" y="227.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="910.0" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (35 samples, 0.33%)</title><rect x="907.0" y="211.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.0" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (35 samples, 0.33%)</title><rect x="907.0" y="195.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="910.0" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (32 samples, 0.30%)</title><rect x="907.3" y="179.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="910.3" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="907.4" y="163.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="910.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (22 samples, 0.21%)</title><rect x="908.4" y="163.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="911.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (19 samples, 0.18%)</title><rect x="908.7" y="147.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="911.7" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (18 samples, 0.17%)</title><rect x="908.8" y="131.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="911.8" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (18 samples, 0.17%)</title><rect x="908.8" y="115.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="911.8" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 0.16%)</title><rect x="908.8" y="99.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="911.8" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (11 samples, 0.10%)</title><rect x="909.3" y="83.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="912.3" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (11 samples, 0.10%)</title><rect x="909.3" y="67.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="912.3" y="78.0"></text>
</g>
<g>
<title>[worker tid=72963] (184 samples, 1.73%)</title><rect x="911.0" y="387.0" width="20.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="914.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (183 samples, 1.72%)</title><rect x="911.1" y="371.0" width="20.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (183 samples, 1.72%)</title><rect x="911.1" y="355.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (183 samples, 1.72%)</title><rect x="911.1" y="339.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (80 samples, 0.75%)</title><rect x="911.3" y="323.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (80 samples, 0.75%)</title><rect x="911.3" y="307.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (76 samples, 0.72%)</title><rect x="911.3" y="291.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (76 samples, 0.72%)</title><rect x="911.3" y="275.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (76 samples, 0.72%)</title><rect x="911.3" y="259.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (70 samples, 0.66%)</title><rect x="912.0" y="243.0" width="7.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="915.0" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (65 samples, 0.61%)</title><rect x="912.4" y="227.0" width="7.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="915.4" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (63 samples, 0.59%)</title><rect x="912.5" y="211.0" width="7.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="915.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="919.8" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="922.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="919.8" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (101 samples, 0.95%)</title><rect x="920.2" y="323.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (101 samples, 0.95%)</title><rect x="920.2" y="307.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 0.48%)</title><rect x="920.2" y="291.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (50 samples, 0.47%)</title><rect x="920.3" y="275.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (50 samples, 0.47%)</title><rect x="920.3" y="259.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.3" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (50 samples, 0.47%)</title><rect x="920.3" y="243.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.3" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (50 samples, 0.47%)</title><rect x="920.3" y="227.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.3" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (50 samples, 0.47%)</title><rect x="920.3" y="211.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (50 samples, 0.47%)</title><rect x="920.3" y="195.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="920.3" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="920.3" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (47 samples, 0.44%)</title><rect x="920.6" y="179.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (47 samples, 0.44%)</title><rect x="920.6" y="163.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (47 samples, 0.44%)</title><rect x="920.6" y="147.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (47 samples, 0.44%)</title><rect x="920.6" y="131.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (47 samples, 0.44%)</title><rect x="920.6" y="115.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.6" y="126.0"></text>
</g>
<g>
<title>write (46 samples, 0.43%)</title><rect x="920.8" y="99.0" width="5.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="923.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (50 samples, 0.47%)</title><rect x="925.9" y="291.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (48 samples, 0.45%)</title><rect x="926.1" y="275.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (48 samples, 0.45%)</title><rect x="926.1" y="259.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (47 samples, 0.44%)</title><rect x="926.2" y="243.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.2" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 0.41%)</title><rect x="926.3" y="227.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.3" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 0.41%)</title><rect x="926.3" y="211.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.3" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (44 samples, 0.41%)</title><rect x="926.3" y="195.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="929.3" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (41 samples, 0.39%)</title><rect x="926.6" y="179.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="929.6" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="926.6" y="163.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="929.6" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.05%)</title><rect x="926.6" y="147.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="929.6" y="158.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.03%)</title><rect x="927.6" y="163.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="930.6" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (29 samples, 0.27%)</title><rect x="928.0" y="163.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="931.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (28 samples, 0.26%)</title><rect x="928.0" y="147.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="931.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (28 samples, 0.26%)</title><rect x="928.0" y="131.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="931.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (28 samples, 0.26%)</title><rect x="928.0" y="115.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="931.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (26 samples, 0.24%)</title><rect x="928.0" y="99.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="931.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (22 samples, 0.21%)</title><rect x="928.4" y="83.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="931.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (22 samples, 0.21%)</title><rect x="928.4" y="67.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="931.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.08%)</title><rect x="929.8" y="51.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="932.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::ReverseBytewiseComparator() (4 samples, 0.04%)</title><rect x="930.1" y="35.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="933.1" y="46.0"></text>
</g>
<g>
<title>[worker tid=73475] (161 samples, 1.51%)</title><rect x="931.4" y="387.0" width="17.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="934.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (160 samples, 1.51%)</title><rect x="931.5" y="371.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (160 samples, 1.51%)</title><rect x="931.5" y="355.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (160 samples, 1.51%)</title><rect x="931.5" y="339.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (80 samples, 0.75%)</title><rect x="931.8" y="323.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (80 samples, 0.75%)</title><rect x="931.8" y="307.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (69 samples, 0.65%)</title><rect x="931.9" y="291.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (67 samples, 0.63%)</title><rect x="932.1" y="275.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (67 samples, 0.63%)</title><rect x="932.1" y="259.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.1" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (64 samples, 0.60%)</title><rect x="932.4" y="243.0" width="7.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="935.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (62 samples, 0.58%)</title><rect x="932.6" y="227.0" width="6.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="935.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (59 samples, 0.56%)</title><rect x="932.6" y="211.0" width="6.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="935.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.05%)</title><rect x="939.5" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.05%)</title><rect x="939.5" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.04%)</title><rect x="939.6" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.03%)</title><rect x="939.7" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.05%)</title><rect x="940.1" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="940.1" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.05%)</title><rect x="940.1" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.05%)</title><rect x="940.1" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="940.1" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.1" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="940.1" y="211.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="943.1" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="940.1" y="195.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="943.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (78 samples, 0.73%)</title><rect x="940.6" y="323.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (78 samples, 0.73%)</title><rect x="940.6" y="307.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 0.42%)</title><rect x="940.6" y="291.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.6" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="940.7" y="275.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="943.7" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="940.7" y="259.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="943.7" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.03%)</title><rect x="940.7" y="243.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="943.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 0.38%)</title><rect x="941.2" y="275.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.04%)</title><rect x="941.2" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.2" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 0.34%)</title><rect x="941.6" y="259.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 0.34%)</title><rect x="941.6" y="243.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (36 samples, 0.34%)</title><rect x="941.6" y="227.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.6" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (36 samples, 0.34%)</title><rect x="941.6" y="211.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (36 samples, 0.34%)</title><rect x="941.6" y="195.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="941.6" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="941.6" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (33 samples, 0.31%)</title><rect x="942.0" y="179.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (33 samples, 0.31%)</title><rect x="942.0" y="163.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (33 samples, 0.31%)</title><rect x="942.0" y="147.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (30 samples, 0.28%)</title><rect x="942.3" y="131.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (30 samples, 0.28%)</title><rect x="942.3" y="115.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.3" y="126.0"></text>
</g>
<g>
<title>write (30 samples, 0.28%)</title><rect x="942.3" y="99.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="945.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (33 samples, 0.31%)</title><rect x="945.6" y="291.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (32 samples, 0.30%)</title><rect x="945.7" y="275.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (32 samples, 0.30%)</title><rect x="945.7" y="259.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (32 samples, 0.30%)</title><rect x="945.7" y="243.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.7" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="945.7" y="227.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.7" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="945.7" y="211.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.7" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (32 samples, 0.30%)</title><rect x="945.7" y="195.0" width="3.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="948.7" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (30 samples, 0.28%)</title><rect x="946.0" y="179.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="949.0" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (4 samples, 0.04%)</title><rect x="946.1" y="163.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="949.1" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.03%)</title><rect x="946.2" y="147.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="949.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (19 samples, 0.18%)</title><rect x="947.2" y="163.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="950.2" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (19 samples, 0.18%)</title><rect x="947.2" y="147.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="950.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (19 samples, 0.18%)</title><rect x="947.2" y="131.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="950.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (19 samples, 0.18%)</title><rect x="947.2" y="115.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="950.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (18 samples, 0.17%)</title><rect x="947.2" y="99.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="950.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (13 samples, 0.12%)</title><rect x="947.6" y="83.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="950.6" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (12 samples, 0.11%)</title><rect x="947.7" y="67.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="950.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.04%)</title><rect x="948.6" y="51.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="951.6" y="62.0"></text>
</g>
<g>
<title>[worker tid=74499] (181 samples, 1.70%)</title><rect x="949.3" y="387.0" width="20.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="952.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (181 samples, 1.70%)</title><rect x="949.3" y="371.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (181 samples, 1.70%)</title><rect x="949.3" y="355.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (181 samples, 1.70%)</title><rect x="949.3" y="339.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (81 samples, 0.76%)</title><rect x="949.4" y="323.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (80 samples, 0.75%)</title><rect x="949.5" y="307.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (78 samples, 0.73%)</title><rect x="949.5" y="291.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="949.5" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="950.0" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="950.0" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (70 samples, 0.66%)</title><rect x="950.4" y="275.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (70 samples, 0.66%)</title><rect x="950.4" y="259.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.4" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (65 samples, 0.61%)</title><rect x="951.0" y="243.0" width="7.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="954.0" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (62 samples, 0.58%)</title><rect x="951.2" y="227.0" width="6.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="954.2" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (60 samples, 0.56%)</title><rect x="951.3" y="211.0" width="6.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="954.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (99 samples, 0.93%)</title><rect x="958.4" y="323.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (99 samples, 0.93%)</title><rect x="958.4" y="307.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (61 samples, 0.57%)</title><rect x="958.4" y="291.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (57 samples, 0.54%)</title><rect x="958.8" y="275.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 0.54%)</title><rect x="958.8" y="259.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 0.54%)</title><rect x="958.8" y="243.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (57 samples, 0.54%)</title><rect x="958.8" y="227.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (57 samples, 0.54%)</title><rect x="958.8" y="211.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (57 samples, 0.54%)</title><rect x="958.8" y="195.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.52%)</title><rect x="959.0" y="179.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 0.52%)</title><rect x="959.0" y="163.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (54 samples, 0.51%)</title><rect x="959.0" y="147.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (52 samples, 0.49%)</title><rect x="959.2" y="131.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (52 samples, 0.49%)</title><rect x="959.2" y="115.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.2" y="126.0"></text>
</g>
<g>
<title>write (50 samples, 0.47%)</title><rect x="959.4" y="99.0" width="5.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="962.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (38 samples, 0.36%)</title><rect x="965.2" y="291.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (38 samples, 0.36%)</title><rect x="965.2" y="275.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (38 samples, 0.36%)</title><rect x="965.2" y="259.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (38 samples, 0.36%)</title><rect x="965.2" y="243.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.2" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (38 samples, 0.36%)</title><rect x="965.2" y="227.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.2" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (38 samples, 0.36%)</title><rect x="965.2" y="211.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.2" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (38 samples, 0.36%)</title><rect x="965.2" y="195.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="968.2" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (36 samples, 0.34%)</title><rect x="965.4" y="179.0" width="4.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="968.4" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (8 samples, 0.08%)</title><rect x="965.4" y="163.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="968.4" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.05%)</title><rect x="965.6" y="147.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="968.6" y="158.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.03%)</title><rect x="966.4" y="163.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="969.4" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="967.1" y="163.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.1" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="967.1" y="147.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="970.1" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (20 samples, 0.19%)</title><rect x="967.1" y="131.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="970.1" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (20 samples, 0.19%)</title><rect x="967.1" y="115.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="970.1" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (18 samples, 0.17%)</title><rect x="967.2" y="99.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="970.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (13 samples, 0.12%)</title><rect x="967.7" y="83.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="970.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (13 samples, 0.12%)</title><rect x="967.7" y="67.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="970.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="968.7" y="51.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="971.7" y="62.0"></text>
</g>
<g>
<title>[worker tid=75011] (160 samples, 1.51%)</title><rect x="969.4" y="387.0" width="17.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="972.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (160 samples, 1.51%)</title><rect x="969.4" y="371.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (160 samples, 1.51%)</title><rect x="969.4" y="355.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (160 samples, 1.51%)</title><rect x="969.4" y="339.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (90 samples, 0.85%)</title><rect x="969.6" y="323.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="972.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (90 samples, 0.85%)</title><rect x="969.6" y="307.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (87 samples, 0.82%)</title><rect x="969.6" y="291.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (85 samples, 0.80%)</title><rect x="969.8" y="275.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (85 samples, 0.80%)</title><rect x="969.8" y="259.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.8" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (75 samples, 0.71%)</title><rect x="970.9" y="243.0" width="8.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="973.9" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (70 samples, 0.66%)</title><rect x="971.4" y="227.0" width="7.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="974.4" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (63 samples, 0.59%)</title><rect x="971.8" y="211.0" width="7.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="974.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (67 samples, 0.63%)</title><rect x="979.7" y="323.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (67 samples, 0.63%)</title><rect x="979.7" y="307.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 0.30%)</title><rect x="979.7" y="291.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 0.29%)</title><rect x="979.7" y="275.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.7" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.28%)</title><rect x="979.8" y="259.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.28%)</title><rect x="979.8" y="243.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (30 samples, 0.28%)</title><rect x="979.8" y="227.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (30 samples, 0.28%)</title><rect x="979.8" y="211.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (30 samples, 0.28%)</title><rect x="979.8" y="195.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="979.8" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="979.8" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.24%)</title><rect x="980.3" y="179.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (26 samples, 0.24%)</title><rect x="980.3" y="163.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (25 samples, 0.24%)</title><rect x="980.3" y="147.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (25 samples, 0.24%)</title><rect x="980.3" y="131.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (25 samples, 0.24%)</title><rect x="980.3" y="115.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.3" y="126.0"></text>
</g>
<g>
<title>write (25 samples, 0.24%)</title><rect x="980.3" y="99.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="983.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (35 samples, 0.33%)</title><rect x="983.3" y="291.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (34 samples, 0.32%)</title><rect x="983.4" y="275.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (34 samples, 0.32%)</title><rect x="983.4" y="259.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="986.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (34 samples, 0.32%)</title><rect x="983.4" y="243.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.4" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="983.5" y="227.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.5" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 0.30%)</title><rect x="983.5" y="211.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.5" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (31 samples, 0.29%)</title><rect x="983.5" y="195.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="986.5" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (30 samples, 0.28%)</title><rect x="983.6" y="179.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="986.6" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (8 samples, 0.08%)</title><rect x="983.8" y="163.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="986.8" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.06%)</title><rect x="983.9" y="147.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="986.9" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.05%)</title><rect x="984.0" y="131.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="987.0" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="984.3" y="115.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="987.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (17 samples, 0.16%)</title><rect x="985.0" y="163.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="988.0" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (17 samples, 0.16%)</title><rect x="985.0" y="147.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.0" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (17 samples, 0.16%)</title><rect x="985.0" y="131.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="988.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (17 samples, 0.16%)</title><rect x="985.0" y="115.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="988.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 0.16%)</title><rect x="985.0" y="99.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="988.0" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (17 samples, 0.16%)</title><rect x="985.0" y="83.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="988.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (17 samples, 0.16%)</title><rect x="985.0" y="67.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="988.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.04%)</title><rect x="986.5" y="51.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="989.5" y="62.0"></text>
</g>
<g>
<title>rocksdb::ReverseBytewiseComparator() (3 samples, 0.03%)</title><rect x="986.6" y="35.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="989.6" y="46.0"></text>
</g>
<g>
<title>[worker tid=76803] (184 samples, 1.73%)</title><rect x="987.2" y="387.0" width="20.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="990.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.run (183 samples, 1.72%)</title><rect x="987.3" y="371.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (183 samples, 1.72%)</title><rect x="987.3" y="355.0" width="20.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (183 samples, 1.72%)</title><rect x="987.3" y="339.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 0.81%)</title><rect x="987.4" y="323.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (85 samples, 0.80%)</title><rect x="987.5" y="307.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (79 samples, 0.74%)</title><rect x="987.5" y="291.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (77 samples, 0.72%)</title><rect x="987.7" y="275.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (77 samples, 0.72%)</title><rect x="987.7" y="259.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (71 samples, 0.67%)</title><rect x="988.4" y="243.0" width="7.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="991.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (66 samples, 0.62%)</title><rect x="988.8" y="227.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="991.8" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (64 samples, 0.60%)</title><rect x="988.9" y="211.0" width="7.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="991.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.06%)</title><rect x="996.3" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.06%)</title><rect x="996.3" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.06%)</title><rect x="996.3" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.06%)</title><rect x="996.3" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="996.3" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.3" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.04%)</title><rect x="996.5" y="211.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="999.5" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="996.6" y="195.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="999.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (96 samples, 0.90%)</title><rect x="996.9" y="323.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (95 samples, 0.89%)</title><rect x="997.0" y="307.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (56 samples, 0.53%)</title><rect x="997.1" y="291.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (52 samples, 0.49%)</title><rect x="997.6" y="275.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1000.6" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (51 samples, 0.48%)</title><rect x="997.7" y="259.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (50 samples, 0.47%)</title><rect x="997.8" y="243.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (50 samples, 0.47%)</title><rect x="997.8" y="227.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (50 samples, 0.47%)</title><rect x="997.8" y="211.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (50 samples, 0.47%)</title><rect x="997.8" y="195.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="997.9" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="997.9" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (45 samples, 0.42%)</title><rect x="998.4" y="179.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (45 samples, 0.42%)</title><rect x="998.4" y="163.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (43 samples, 0.40%)</title><rect x="998.4" y="147.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (41 samples, 0.39%)</title><rect x="998.6" y="131.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (40 samples, 0.38%)</title><rect x="998.7" y="115.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.7" y="126.0"></text>
</g>
<g>
<title>write (39 samples, 0.37%)</title><rect x="998.8" y="99.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1001.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (38 samples, 0.36%)</title><rect x="1003.4" y="291.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (38 samples, 0.36%)</title><rect x="1003.4" y="275.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (38 samples, 0.36%)</title><rect x="1003.4" y="259.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (37 samples, 0.35%)</title><rect x="1003.5" y="243.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.5" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (37 samples, 0.35%)</title><rect x="1003.5" y="227.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.5" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (37 samples, 0.35%)</title><rect x="1003.5" y="211.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.5" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (37 samples, 0.35%)</title><rect x="1003.5" y="195.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1006.5" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (32 samples, 0.30%)</title><rect x="1003.9" y="179.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.9" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (7 samples, 0.07%)</title><rect x="1003.9" y="163.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1006.9" y="174.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.03%)</title><rect x="1004.9" y="163.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1007.9" y="174.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.03%)</title><rect x="1004.9" y="147.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1007.9" y="158.0"></text>
</g>
<g>
<title>malloc_zone_malloc (3 samples, 0.03%)</title><rect x="1004.9" y="131.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1007.9" y="142.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="1004.9" y="115.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1007.9" y="126.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="1004.9" y="99.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1007.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="1005.3" y="163.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1008.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.19%)</title><rect x="1005.3" y="147.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (20 samples, 0.19%)</title><rect x="1005.3" y="131.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (20 samples, 0.19%)</title><rect x="1005.3" y="115.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1008.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (19 samples, 0.18%)</title><rect x="1005.4" y="99.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1008.4" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (16 samples, 0.15%)</title><rect x="1005.7" y="83.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.7" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (14 samples, 0.13%)</title><rect x="1005.9" y="67.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1008.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="1007.1" y="51.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1010.1" y="62.0"></text>
</g>
<g>
<title>rocksdb::ReverseBytewiseComparator() (3 samples, 0.03%)</title><rect x="1007.1" y="35.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.1" y="46.0"></text>
</g>
<g>
<title>[worker tid=77571] (528 samples, 4.97%)</title><rect x="1007.6" y="387.0" width="58.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1010.6" y="398.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (528 samples, 4.97%)</title><rect x="1007.6" y="371.0" width="58.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1010.6" y="382.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (528 samples, 4.97%)</title><rect x="1007.6" y="355.0" width="58.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.6" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (528 samples, 4.97%)</title><rect x="1007.6" y="339.0" width="58.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.6" y="350.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (48 samples, 0.45%)</title><rect x="1007.6" y="323.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (47 samples, 0.44%)</title><rect x="1007.7" y="307.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 0.32%)</title><rect x="1007.7" y="291.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.31%)</title><rect x="1007.8" y="275.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.31%)</title><rect x="1007.8" y="259.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.8" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (28 samples, 0.26%)</title><rect x="1008.4" y="243.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1011.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (26 samples, 0.24%)</title><rect x="1008.4" y="227.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1011.4" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (25 samples, 0.24%)</title><rect x="1008.4" y="211.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1011.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.06%)</title><rect x="1011.5" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.06%)</title><rect x="1011.5" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.05%)</title><rect x="1011.5" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.04%)</title><rect x="1011.6" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.04%)</title><rect x="1011.6" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1014.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="1011.7" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.7" y="222.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.03%)</title><rect x="1011.7" y="195.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1014.7" y="206.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.03%)</title><rect x="1011.7" y="179.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1014.7" y="190.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="1011.7" y="163.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1014.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.07%)</title><rect x="1012.1" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.07%)</title><rect x="1012.1" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.07%)</title><rect x="1012.1" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.07%)</title><rect x="1012.1" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.07%)</title><rect x="1012.1" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.1" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.07%)</title><rect x="1012.1" y="211.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1015.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (480 samples, 4.52%)</title><rect x="1012.9" y="323.0" width="53.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.9" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (480 samples, 4.52%)</title><rect x="1012.9" y="307.0" width="53.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.9" y="318.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (103 samples, 0.97%)</title><rect x="1012.9" y="291.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 0.88%)</title><rect x="1013.6" y="275.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="1013.6" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.6" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="1014.0" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="1014.0" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="1014.0" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.0" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.03%)</title><rect x="1014.0" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="1014.0" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.0" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 0.82%)</title><rect x="1014.4" y="259.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 0.81%)</title><rect x="1014.5" y="243.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.5" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (86 samples, 0.81%)</title><rect x="1014.5" y="227.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.5" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (86 samples, 0.81%)</title><rect x="1014.5" y="211.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (85 samples, 0.80%)</title><rect x="1014.6" y="195.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.06%)</title><rect x="1014.7" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="1014.7" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="1014.7" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.04%)</title><rect x="1014.7" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.04%)</title><rect x="1014.7" y="115.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.04%)</title><rect x="1014.7" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.7" y="110.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.04%)</title><rect x="1014.7" y="83.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.7" y="94.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="1014.7" y="67.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1017.7" y="78.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (4 samples, 0.04%)</title><rect x="1014.7" y="51.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1017.7" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (78 samples, 0.73%)</title><rect x="1015.4" y="179.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (78 samples, 0.73%)</title><rect x="1015.4" y="163.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (76 samples, 0.72%)</title><rect x="1015.5" y="147.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (76 samples, 0.72%)</title><rect x="1015.5" y="131.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (76 samples, 0.72%)</title><rect x="1015.5" y="115.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.5" y="126.0"></text>
</g>
<g>
<title>write (75 samples, 0.71%)</title><rect x="1015.6" y="99.0" width="8.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1018.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (347 samples, 3.26%)</title><rect x="1024.3" y="291.0" width="38.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.3" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (345 samples, 3.25%)</title><rect x="1024.6" y="275.0" width="38.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.6" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (345 samples, 3.25%)</title><rect x="1024.6" y="259.0" width="38.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.6" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (345 samples, 3.25%)</title><rect x="1024.6" y="243.0" width="38.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.6" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (345 samples, 3.25%)</title><rect x="1024.6" y="227.0" width="38.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.6" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (212 samples, 1.99%)</title><rect x="1024.8" y="211.0" width="23.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.8" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (205 samples, 1.93%)</title><rect x="1025.6" y="195.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.6" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (204 samples, 1.92%)</title><rect x="1025.7" y="179.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.7" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (202 samples, 1.90%)</title><rect x="1025.8" y="163.0" width="22.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.8" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (202 samples, 1.90%)</title><rect x="1025.8" y="147.0" width="22.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1028.8" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (202 samples, 1.90%)</title><rect x="1025.8" y="131.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.8" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (202 samples, 1.90%)</title><rect x="1025.8" y="115.0" width="22.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1028.8" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (202 samples, 1.90%)</title><rect x="1025.8" y="99.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1028.8" y="110.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.03%)</title><rect x="1027.1" y="83.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1030.1" y="94.0"></text>
</g>
<g>
<title>rpc_errlist (187 samples, 1.76%)</title><rect x="1027.5" y="83.0" width="20.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1030.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (11 samples, 0.10%)</title><rect x="1048.3" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.04%)</title><rect x="1048.6" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="1048.6" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="1048.6" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1049.0" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.05%)</title><rect x="1049.6" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (111 samples, 1.04%)</title><rect x="1050.2" y="211.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.2" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (75 samples, 0.71%)</title><rect x="1050.2" y="195.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (73 samples, 0.69%)</title><rect x="1050.4" y="179.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.4" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (70 samples, 0.66%)</title><rect x="1050.8" y="163.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (70 samples, 0.66%)</title><rect x="1050.8" y="147.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="1050.8" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1050.8" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (66 samples, 0.62%)</title><rect x="1051.1" y="131.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (66 samples, 0.62%)</title><rect x="1051.1" y="115.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (63 samples, 0.59%)</title><rect x="1051.1" y="99.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (63 samples, 0.59%)</title><rect x="1051.1" y="83.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (63 samples, 0.59%)</title><rect x="1051.1" y="67.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.1" y="78.0"></text>
</g>
<g>
<title>write (63 samples, 0.59%)</title><rect x="1051.1" y="51.0" width="7.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1054.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="1058.1" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (36 samples, 0.34%)</title><rect x="1058.5" y="195.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.5" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.34%)</title><rect x="1058.5" y="179.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.5" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (24 samples, 0.23%)</title><rect x="1058.7" y="163.0" width="2.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1061.7" y="174.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.06%)</title><rect x="1059.0" y="147.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1062.0" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.09%)</title><rect x="1060.2" y="147.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1063.2" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.03%)</title><rect x="1060.2" y="131.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.2" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (7 samples, 0.07%)</title><rect x="1060.5" y="131.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1063.5" y="142.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.03%)</title><rect x="1060.5" y="115.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.5" y="126.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (3 samples, 0.03%)</title><rect x="1061.0" y="115.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.0" y="126.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (3 samples, 0.03%)</title><rect x="1061.0" y="99.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (30 samples, 0.28%)</title><rect x="1062.9" y="291.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (29 samples, 0.27%)</title><rect x="1063.0" y="275.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (29 samples, 0.27%)</title><rect x="1063.0" y="259.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (28 samples, 0.26%)</title><rect x="1063.1" y="243.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.1" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 0.26%)</title><rect x="1063.1" y="227.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.1" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 0.26%)</title><rect x="1063.1" y="211.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.1" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (28 samples, 0.26%)</title><rect x="1063.1" y="195.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1066.1" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (27 samples, 0.25%)</title><rect x="1063.2" y="179.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.2" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (7 samples, 0.07%)</title><rect x="1063.2" y="163.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1066.2" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.06%)</title><rect x="1063.3" y="147.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1066.3" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1063.7" y="131.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1066.7" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (16 samples, 0.15%)</title><rect x="1064.3" y="163.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1067.3" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (16 samples, 0.15%)</title><rect x="1064.3" y="147.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.3" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (16 samples, 0.15%)</title><rect x="1064.3" y="131.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1067.3" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (16 samples, 0.15%)</title><rect x="1064.3" y="115.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1067.3" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (16 samples, 0.15%)</title><rect x="1064.3" y="99.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1067.3" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (12 samples, 0.11%)</title><rect x="1064.8" y="83.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1067.8" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (10 samples, 0.09%)</title><rect x="1065.0" y="67.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1068.0" y="78.0"></text>
</g>
<g>
<title>[worker tid=78339] (557 samples, 5.24%)</title><rect x="1066.2" y="387.0" width="61.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1069.2" y="398.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (557 samples, 5.24%)</title><rect x="1066.2" y="371.0" width="61.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.2" y="382.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (557 samples, 5.24%)</title><rect x="1066.2" y="355.0" width="61.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.2" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (557 samples, 5.24%)</title><rect x="1066.2" y="339.0" width="61.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.2" y="350.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.03%)</title><rect x="1066.3" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1066.3" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.03%)</title><rect x="1066.3" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (61 samples, 0.57%)</title><rect x="1066.9" y="323.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (60 samples, 0.56%)</title><rect x="1066.9" y="307.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (47 samples, 0.44%)</title><rect x="1066.9" y="291.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.43%)</title><rect x="1067.0" y="275.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.43%)</title><rect x="1067.0" y="259.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (42 samples, 0.40%)</title><rect x="1067.4" y="243.0" width="4.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1070.4" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (41 samples, 0.39%)</title><rect x="1067.4" y="227.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.4" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (40 samples, 0.38%)</title><rect x="1067.4" y="211.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1070.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.08%)</title><rect x="1072.1" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1075.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.08%)</title><rect x="1072.1" y="275.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.07%)</title><rect x="1072.1" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.06%)</title><rect x="1072.2" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.06%)</title><rect x="1072.2" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.06%)</title><rect x="1072.2" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.2" y="222.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (5 samples, 0.05%)</title><rect x="1072.3" y="195.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1075.3" y="206.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.03%)</title><rect x="1072.3" y="179.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.3" y="190.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.03%)</title><rect x="1072.3" y="163.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1075.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.05%)</title><rect x="1073.0" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.05%)</title><rect x="1073.0" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.05%)</title><rect x="1073.0" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.05%)</title><rect x="1073.0" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.05%)</title><rect x="1073.0" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.0" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.04%)</title><rect x="1073.1" y="211.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1076.1" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="1073.2" y="195.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1076.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (490 samples, 4.61%)</title><rect x="1073.6" y="323.0" width="54.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1076.6" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (490 samples, 4.61%)</title><rect x="1073.6" y="307.0" width="54.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.6" y="318.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 1.10%)</title><rect x="1073.8" y="291.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 1.06%)</title><rect x="1074.1" y="275.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.06%)</title><rect x="1074.1" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (107 samples, 1.01%)</title><rect x="1074.8" y="259.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1077.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 1.00%)</title><rect x="1074.9" y="243.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (106 samples, 1.00%)</title><rect x="1074.9" y="227.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (106 samples, 1.00%)</title><rect x="1074.9" y="211.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (106 samples, 1.00%)</title><rect x="1074.9" y="195.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="1074.9" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1074.9" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="1074.9" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (103 samples, 0.97%)</title><rect x="1075.2" y="179.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (103 samples, 0.97%)</title><rect x="1075.2" y="163.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (103 samples, 0.97%)</title><rect x="1075.2" y="147.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (102 samples, 0.96%)</title><rect x="1075.3" y="131.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1078.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (102 samples, 0.96%)</title><rect x="1075.3" y="115.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.3" y="126.0"></text>
</g>
<g>
<title>write (97 samples, 0.91%)</title><rect x="1075.9" y="99.0" width="10.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1078.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (333 samples, 3.13%)</title><rect x="1086.7" y="291.0" width="37.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.7" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (332 samples, 3.12%)</title><rect x="1086.9" y="275.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.9" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (332 samples, 3.12%)</title><rect x="1086.9" y="259.0" width="36.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.9" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 3.12%)</title><rect x="1086.9" y="243.0" width="36.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.9" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (331 samples, 3.11%)</title><rect x="1087.0" y="227.0" width="36.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.0" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (207 samples, 1.95%)</title><rect x="1087.0" y="211.0" width="22.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.0" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (204 samples, 1.92%)</title><rect x="1087.3" y="195.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.3" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (204 samples, 1.92%)</title><rect x="1087.3" y="179.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.3" y="190.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="1087.3" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="1087.3" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="1087.4" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="1087.4" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="1087.4" y="99.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (198 samples, 1.86%)</title><rect x="1087.7" y="163.0" width="22.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.7" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (198 samples, 1.86%)</title><rect x="1087.7" y="147.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.7" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (197 samples, 1.85%)</title><rect x="1087.7" y="131.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.7" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (197 samples, 1.85%)</title><rect x="1087.7" y="115.0" width="21.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.7" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (197 samples, 1.85%)</title><rect x="1087.7" y="99.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.7" y="110.0">s..</text>
</g>
<g>
<title>rpc_errlist (184 samples, 1.73%)</title><rect x="1089.2" y="83.0" width="20.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1092.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (13 samples, 0.12%)</title><rect x="1109.9" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.04%)</title><rect x="1110.9" y="195.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="1110.9" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="1110.9" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1113.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.05%)</title><rect x="1111.4" y="211.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.4" y="222.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (98 samples, 0.92%)</title><rect x="1112.1" y="211.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1115.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (64 samples, 0.60%)</title><rect x="1112.1" y="195.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (63 samples, 0.59%)</title><rect x="1112.2" y="179.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.2" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (61 samples, 0.57%)</title><rect x="1112.4" y="163.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (61 samples, 0.57%)</title><rect x="1112.4" y="147.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (56 samples, 0.53%)</title><rect x="1112.6" y="131.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (56 samples, 0.53%)</title><rect x="1112.6" y="115.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (52 samples, 0.49%)</title><rect x="1112.6" y="99.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (52 samples, 0.49%)</title><rect x="1112.6" y="83.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (52 samples, 0.49%)</title><rect x="1112.6" y="67.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.6" y="78.0"></text>
</g>
<g>
<title>write (50 samples, 0.47%)</title><rect x="1112.8" y="51.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1115.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="1118.4" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.03%)</title><rect x="1118.5" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.03%)</title><rect x="1118.8" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (34 samples, 0.32%)</title><rect x="1119.2" y="195.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.2" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 0.31%)</title><rect x="1119.3" y="179.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.3" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (27 samples, 0.25%)</title><rect x="1119.4" y="163.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1122.4" y="174.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.03%)</title><rect x="1120.3" y="147.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.3" y="158.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.04%)</title><rect x="1120.6" y="147.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.6" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (3 samples, 0.03%)</title><rect x="1121.3" y="147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.3" y="158.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.03%)</title><rect x="1121.3" y="131.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.3" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.07%)</title><rect x="1121.6" y="147.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.6" y="158.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (6 samples, 0.06%)</title><rect x="1121.7" y="131.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.7" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (5 samples, 0.05%)</title><rect x="1121.8" y="115.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.8" y="126.0"></text>
</g>
<g>
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (4 samples, 0.04%)</title><rect x="1121.8" y="99.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.8" y="110.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (6 samples, 0.06%)</title><rect x="1122.9" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.9" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (4 samples, 0.04%)</title><rect x="1123.2" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.2" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.04%)</title><rect x="1123.2" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (39 samples, 0.37%)</title><rect x="1123.7" y="291.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (39 samples, 0.37%)</title><rect x="1123.7" y="275.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (39 samples, 0.37%)</title><rect x="1123.7" y="259.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (39 samples, 0.37%)</title><rect x="1123.7" y="243.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.7" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 0.37%)</title><rect x="1123.7" y="227.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.7" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 0.37%)</title><rect x="1123.7" y="211.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.7" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (38 samples, 0.36%)</title><rect x="1123.8" y="195.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1126.8" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (34 samples, 0.32%)</title><rect x="1124.3" y="179.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1127.3" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="1124.4" y="163.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1127.4" y="174.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.05%)</title><rect x="1124.5" y="147.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1127.5" y="158.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1124.7" y="131.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.7" y="142.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1124.7" y="115.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.7" y="126.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1124.7" y="99.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1127.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (22 samples, 0.21%)</title><rect x="1125.5" y="163.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.5" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (21 samples, 0.20%)</title><rect x="1125.6" y="147.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1128.6" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (21 samples, 0.20%)</title><rect x="1125.6" y="131.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.6" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (21 samples, 0.20%)</title><rect x="1125.6" y="115.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.6" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (20 samples, 0.19%)</title><rect x="1125.7" y="99.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (17 samples, 0.16%)</title><rect x="1126.0" y="83.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.0" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (13 samples, 0.12%)</title><rect x="1126.5" y="67.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1129.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.05%)</title><rect x="1127.4" y="51.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.4" y="62.0"></text>
</g>
<g>
<title>[worker tid=79111] (558 samples, 5.25%)</title><rect x="1128.0" y="387.0" width="62.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1131.0" y="398.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (558 samples, 5.25%)</title><rect x="1128.0" y="371.0" width="62.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.0" y="382.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (558 samples, 5.25%)</title><rect x="1128.0" y="355.0" width="62.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.0" y="366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (557 samples, 5.24%)</title><rect x="1128.0" y="339.0" width="61.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.0" y="350.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.03%)</title><rect x="1128.0" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="1128.0" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.03%)</title><rect x="1128.0" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1131.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (62 samples, 0.58%)</title><rect x="1128.4" y="323.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (61 samples, 0.57%)</title><rect x="1128.4" y="307.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (47 samples, 0.44%)</title><rect x="1128.5" y="291.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (45 samples, 0.42%)</title><rect x="1128.7" y="275.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (45 samples, 0.42%)</title><rect x="1128.7" y="259.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (40 samples, 0.38%)</title><rect x="1129.3" y="243.0" width="4.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1132.3" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (35 samples, 0.33%)</title><rect x="1129.6" y="227.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (34 samples, 0.32%)</title><rect x="1129.6" y="211.0" width="3.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1132.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.07%)</title><rect x="1133.7" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.07%)</title><rect x="1133.7" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.07%)</title><rect x="1133.7" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.03%)</title><rect x="1133.7" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.03%)</title><rect x="1133.7" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (4 samples, 0.04%)</title><rect x="1134.0" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.06%)</title><rect x="1134.5" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.06%)</title><rect x="1134.5" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.06%)</title><rect x="1134.5" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.06%)</title><rect x="1134.5" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.06%)</title><rect x="1134.5" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="238.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.05%)</title><rect x="1134.6" y="211.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1137.6" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.03%)</title><rect x="1134.8" y="195.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1137.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$123/383388983.run (492 samples, 4.63%)</title><rect x="1135.3" y="323.0" width="54.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.3" y="334.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$executeAsync$4 (490 samples, 4.61%)</title><rect x="1135.5" y="307.0" width="54.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.5" y="318.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (106 samples, 1.00%)</title><rect x="1135.5" y="291.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (101 samples, 0.95%)</title><rect x="1136.0" y="275.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.08%)</title><rect x="1136.0" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 0.87%)</title><rect x="1137.0" y="259.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 0.86%)</title><rect x="1137.2" y="243.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (91 samples, 0.86%)</title><rect x="1137.2" y="227.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (91 samples, 0.86%)</title><rect x="1137.2" y="211.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (91 samples, 0.86%)</title><rect x="1137.2" y="195.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="1137.3" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="1137.3" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1140.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (85 samples, 0.80%)</title><rect x="1137.7" y="179.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1140.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (85 samples, 0.80%)</title><rect x="1137.7" y="163.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (81 samples, 0.76%)</title><rect x="1137.9" y="147.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (81 samples, 0.76%)</title><rect x="1137.9" y="131.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (81 samples, 0.76%)</title><rect x="1137.9" y="115.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.9" y="126.0"></text>
</g>
<g>
<title>write (78 samples, 0.73%)</title><rect x="1138.3" y="99.0" width="8.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1141.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$121/1166943705.act (354 samples, 3.33%)</title><rect x="1147.3" y="291.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.3" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$0 (351 samples, 3.30%)</title><rect x="1147.6" y="275.0" width="39.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.6" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.forwardRequestTo (351 samples, 3.30%)</title><rect x="1147.6" y="259.0" width="39.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.6" y="270.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (349 samples, 3.28%)</title><rect x="1147.8" y="243.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.8" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (349 samples, 3.28%)</title><rect x="1147.8" y="227.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.8" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (210 samples, 1.98%)</title><rect x="1147.9" y="211.0" width="23.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.9" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (207 samples, 1.95%)</title><rect x="1148.3" y="195.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.3" y="206.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (207 samples, 1.95%)</title><rect x="1148.3" y="179.0" width="22.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.3" y="190.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="1148.3" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="1148.3" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="1148.3" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.03%)</title><rect x="1148.3" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.03%)</title><rect x="1148.3" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (203 samples, 1.91%)</title><rect x="1148.7" y="163.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.7" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (203 samples, 1.91%)</title><rect x="1148.7" y="147.0" width="22.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.7" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (203 samples, 1.91%)</title><rect x="1148.7" y="131.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1151.7" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (203 samples, 1.91%)</title><rect x="1148.7" y="115.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.7" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (203 samples, 1.91%)</title><rect x="1148.7" y="99.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.7" y="110.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.03%)</title><rect x="1149.3" y="83.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1152.3" y="94.0"></text>
</g>
<g>
<title>rpc_errlist (195 samples, 1.83%)</title><rect x="1149.6" y="83.0" width="21.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1152.6" y="94.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (14 samples, 0.13%)</title><rect x="1171.2" y="211.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (9 samples, 0.08%)</title><rect x="1171.3" y="195.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.08%)</title><rect x="1171.5" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.5" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.08%)</title><rect x="1171.5" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (10 samples, 0.09%)</title><rect x="1172.8" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.8" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.06%)</title><rect x="1173.2" y="195.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.2" y="206.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (107 samples, 1.01%)</title><rect x="1174.1" y="211.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (76 samples, 0.72%)</title><rect x="1174.1" y="195.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (76 samples, 0.72%)</title><rect x="1174.1" y="179.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (76 samples, 0.72%)</title><rect x="1174.1" y="163.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (76 samples, 0.72%)</title><rect x="1174.1" y="147.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (71 samples, 0.67%)</title><rect x="1174.3" y="131.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (71 samples, 0.67%)</title><rect x="1174.3" y="115.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (66 samples, 0.62%)</title><rect x="1174.3" y="99.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (66 samples, 0.62%)</title><rect x="1174.3" y="83.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (66 samples, 0.62%)</title><rect x="1174.3" y="67.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.3" y="78.0"></text>
</g>
<g>
<title>write (65 samples, 0.61%)</title><rect x="1174.5" y="51.0" width="7.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1177.5" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.05%)</title><rect x="1181.7" y="99.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.03%)</title><rect x="1181.9" y="83.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1184.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.03%)</title><rect x="1182.2" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (30 samples, 0.28%)</title><rect x="1182.6" y="195.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.6" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (30 samples, 0.28%)</title><rect x="1182.6" y="179.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.6" y="190.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (21 samples, 0.20%)</title><rect x="1182.8" y="163.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1185.8" y="174.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.05%)</title><rect x="1183.6" y="147.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="158.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.04%)</title><rect x="1183.6" y="131.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="142.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.07%)</title><rect x="1184.3" y="147.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.3" y="158.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.04%)</title><rect x="1184.3" y="131.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.3" y="142.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.03%)</title><rect x="1184.4" y="115.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.4" y="126.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (3 samples, 0.03%)</title><rect x="1184.8" y="131.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.8" y="142.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.05%)</title><rect x="1186.0" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.0" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.05%)</title><rect x="1186.0" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.0" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (5 samples, 0.05%)</title><rect x="1186.0" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl$$Lambda$128/884960503.act (30 samples, 0.28%)</title><rect x="1186.6" y="291.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.lambda$entity$1 (29 samples, 0.27%)</title><rect x="1186.7" y="275.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/AsyncServiceImpl.get (29 samples, 0.27%)</title><rect x="1186.7" y="259.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (29 samples, 0.27%)</title><rect x="1186.7" y="243.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.7" y="254.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (29 samples, 0.27%)</title><rect x="1186.7" y="227.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.7" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (29 samples, 0.27%)</title><rect x="1186.7" y="211.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.7" y="222.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (29 samples, 0.27%)</title><rect x="1186.7" y="195.0" width="3.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1189.7" y="206.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (28 samples, 0.26%)</title><rect x="1186.8" y="179.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.8" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_ColumnFamilyHandle_disposeInternal (6 samples, 0.06%)</title><rect x="1186.9" y="163.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (17 samples, 0.16%)</title><rect x="1187.9" y="163.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.9" y="174.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (17 samples, 0.16%)</title><rect x="1187.9" y="147.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.9" y="158.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (17 samples, 0.16%)</title><rect x="1187.9" y="131.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.9" y="142.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) (17 samples, 0.16%)</title><rect x="1187.9" y="115.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (17 samples, 0.16%)</title><rect x="1187.9" y="99.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 0.13%)</title><rect x="1188.2" y="83.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::SkipListFactory::CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&amp;, rocksdb::Allocator*, rocksdb::SliceTransform const*, rocksdb::Logger*) (13 samples, 0.12%)</title><rect x="1188.3" y="67.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.03%)</title><rect x="1189.4" y="51.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="62.0"></text>
</g>
</g>
</svg>
