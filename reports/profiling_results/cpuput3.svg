<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (1,474 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>[Attach Listener tid=33299] (1 samples, 0.07%)</title><rect x="10.0" y="515.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.07%)</title><rect x="10.0" y="499.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.07%)</title><rect x="10.0" y="483.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.07%)</title><rect x="10.0" y="467.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.07%)</title><rect x="10.0" y="451.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.07%)</title><rect x="10.0" y="435.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.07%)</title><rect x="10.0" y="419.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.07%)</title><rect x="10.0" y="403.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.07%)</title><rect x="10.0" y="387.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.07%)</title><rect x="10.0" y="371.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>Agent_OnAttach (1 samples, 0.07%)</title><rect x="10.0" y="355.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (1 samples, 0.07%)</title><rect x="10.0" y="339.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.07%)</title><rect x="10.0" y="323.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>[Java: C2 CompilerThread0 tid=22019] (9 samples, 0.61%)</title><rect x="10.8" y="515.0" width="7.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.8" y="526.0"></text>
</g>
<g>
<title>thread_start (9 samples, 0.61%)</title><rect x="10.8" y="499.0" width="7.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.8" y="510.0"></text>
</g>
<g>
<title>_pthread_start (9 samples, 0.61%)</title><rect x="10.8" y="483.0" width="7.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.8" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.61%)</title><rect x="10.8" y="467.0" width="7.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.8" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.61%)</title><rect x="10.8" y="451.0" width="7.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.8" y="462.0"></text>
</g>
<g>
<title>JavaThread::run() (9 samples, 0.61%)</title><rect x="10.8" y="435.0" width="7.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.8" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (9 samples, 0.61%)</title><rect x="10.8" y="419.0" width="7.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.8" y="430.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (9 samples, 0.61%)</title><rect x="10.8" y="403.0" width="7.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.8" y="414.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (9 samples, 0.61%)</title><rect x="10.8" y="387.0" width="7.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.8" y="398.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 0.61%)</title><rect x="10.8" y="371.0" width="7.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.8" y="382.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (9 samples, 0.61%)</title><rect x="10.8" y="355.0" width="7.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.8" y="366.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 0.27%)</title><rect x="10.8" y="339.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.8" y="350.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.07%)</title><rect x="10.8" y="323.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.8" y="334.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.07%)</title><rect x="10.8" y="307.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.8" y="318.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.07%)</title><rect x="10.8" y="291.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.8" y="302.0"></text>
</g>
<g>
<title>LiveRangeMap::find(Node const*) (1 samples, 0.07%)</title><rect x="10.8" y="275.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.8" y="286.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.20%)</title><rect x="11.6" y="323.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.6" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.07%)</title><rect x="11.6" y="307.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.6" y="318.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.07%)</title><rect x="11.6" y="291.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.6" y="302.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.07%)</title><rect x="11.6" y="275.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.6" y="286.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.07%)</title><rect x="12.4" y="307.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.4" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::replace_and_yank_if_dead(Node*, int, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.07%)</title><rect x="12.4" y="291.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.4" y="302.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.07%)</title><rect x="12.4" y="275.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.4" y="286.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.07%)</title><rect x="13.2" y="307.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.2" y="318.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.07%)</title><rect x="13.2" y="291.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.2" y="302.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.27%)</title><rect x="14.0" y="339.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.0" y="350.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.07%)</title><rect x="14.0" y="323.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.0" y="334.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.07%)</title><rect x="14.0" y="307.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.0" y="318.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.07%)</title><rect x="14.0" y="291.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.0" y="302.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.20%)</title><rect x="14.8" y="323.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.8" y="334.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.20%)</title><rect x="14.8" y="307.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.8" y="318.0"></text>
</g>
<g>
<title>MemBarNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="14.8" y="291.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.8" y="302.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.07%)</title><rect x="14.8" y="275.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.8" y="286.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="14.8" y="259.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.8" y="270.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.14%)</title><rect x="15.6" y="291.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.6" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="17.2" y="339.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.2" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="17.2" y="323.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="17.2" y="307.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.2" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="17.2" y="291.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.2" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="17.2" y="275.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.2" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="17.2" y="259.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="20.2" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="17.2" y="243.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="20.2" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="17.2" y="227.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="20.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="17.2" y="211.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="17.2" y="195.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="20.2" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="17.2" y="179.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.2" y="190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="17.2" y="163.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.2" y="174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="17.2" y="147.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.2" y="158.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="17.2" y="131.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.2" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="17.2" y="115.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.2" y="126.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="17.2" y="99.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="20.2" y="110.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.07%)</title><rect x="17.2" y="83.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="20.2" y="94.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.07%)</title><rect x="17.2" y="67.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.2" y="78.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.07%)</title><rect x="17.2" y="51.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.2" y="62.0"></text>
</g>
<g>
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.07%)</title><rect x="17.2" y="35.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.2" y="46.0"></text>
</g>
<g>
<title>[Java: Service Thread tid=23299] (1 samples, 0.07%)</title><rect x="18.0" y="515.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="21.0" y="526.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.07%)</title><rect x="18.0" y="499.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="21.0" y="510.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.07%)</title><rect x="18.0" y="483.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="21.0" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.07%)</title><rect x="18.0" y="467.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="21.0" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.07%)</title><rect x="18.0" y="451.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.0" y="462.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.07%)</title><rect x="18.0" y="435.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.0" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.07%)</title><rect x="18.0" y="419.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.0" y="430.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.07%)</title><rect x="18.0" y="403.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="21.0" y="414.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.07%)</title><rect x="18.0" y="387.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.0" y="398.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.07%)</title><rect x="18.0" y="371.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.0" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.07%)</title><rect x="18.0" y="355.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="18.0" y="339.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="21.0" y="350.0"></text>
</g>
<g>
<title>[Java: VM Periodic Task Thread tid=23555] (1 samples, 0.07%)</title><rect x="18.8" y="515.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.8" y="526.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.07%)</title><rect x="18.8" y="499.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="21.8" y="510.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.07%)</title><rect x="18.8" y="483.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="21.8" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.07%)</title><rect x="18.8" y="467.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="21.8" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.07%)</title><rect x="18.8" y="451.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.8" y="462.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.07%)</title><rect x="18.8" y="435.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.8" y="446.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.07%)</title><rect x="18.8" y="419.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.8" y="430.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.07%)</title><rect x="18.8" y="403.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.8" y="414.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.07%)</title><rect x="18.8" y="387.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="21.8" y="398.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.07%)</title><rect x="18.8" y="371.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.8" y="382.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="18.8" y="355.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="21.8" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25091] (122 samples, 8.28%)</title><rect x="19.6" y="515.0" width="97.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="22.6" y="526.0">[NIO Select..</text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.27%)</title><rect x="19.6" y="499.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="22.6" y="510.0"></text>
</g>
<g>
<title>Interpreter (2 samples, 0.14%)</title><rect x="19.6" y="483.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="22.6" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (2 samples, 0.14%)</title><rect x="21.2" y="483.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.2" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="21.2" y="467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.2" y="478.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="21.2" y="451.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="24.2" y="462.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (1 samples, 0.07%)</title><rect x="22.0" y="467.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (118 samples, 8.01%)</title><rect x="22.8" y="499.0" width="94.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.8" y="510.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (76 samples, 5.16%)</title><rect x="24.4" y="483.0" width="60.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.4" y="494.0">one/ni..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.20%)</title><rect x="26.0" y="467.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.0" y="478.0"></text>
</g>
<g>
<title>java/lang/System.nanoTime (2 samples, 0.14%)</title><rect x="28.4" y="467.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (68 samples, 4.61%)</title><rect x="30.0" y="467.0" width="54.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.0" y="478.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (68 samples, 4.61%)</title><rect x="30.0" y="451.0" width="54.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.0" y="462.0">sun/n..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="30.8" y="435.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="33.8" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="30.8" y="419.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="33.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (66 samples, 4.48%)</title><rect x="31.6" y="435.0" width="52.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.6" y="446.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (64 samples, 4.34%)</title><rect x="32.4" y="419.0" width="51.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.4" y="430.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.07%)</title><rect x="34.0" y="403.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="37.0" y="414.0"></text>
</g>
<g>
<title>kevent (61 samples, 4.14%)</title><rect x="34.8" y="403.0" width="48.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="37.8" y="414.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.07%)</title><rect x="83.6" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.6" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.07%)</title><rect x="83.6" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="83.6" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (1 samples, 0.07%)</title><rect x="84.5" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (1 samples, 0.07%)</title><rect x="84.5" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.5" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (1 samples, 0.07%)</title><rect x="84.5" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.07%)</title><rect x="84.5" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40 samples, 2.71%)</title><rect x="85.3" y="483.0" width="32.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.3" y="494.0">on..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="85.3" y="467.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="88.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (38 samples, 2.58%)</title><rect x="86.1" y="467.0" width="30.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.1" y="478.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 1.63%)</title><rect x="86.1" y="451.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 1.42%)</title><rect x="86.1" y="435.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 1.42%)</title><rect x="86.1" y="419.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.1" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (21 samples, 1.42%)</title><rect x="86.1" y="403.0" width="16.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="86.1" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="86.1" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (20 samples, 1.36%)</title><rect x="86.9" y="387.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 1.36%)</title><rect x="86.9" y="371.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (20 samples, 1.36%)</title><rect x="86.9" y="355.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="86.9" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="86.9" y="323.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="86.9" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="86.9" y="291.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.68%)</title><rect x="87.7" y="339.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.68%)</title><rect x="87.7" y="323.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.68%)</title><rect x="87.7" y="307.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.68%)</title><rect x="87.7" y="291.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.68%)</title><rect x="87.7" y="275.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.68%)</title><rect x="87.7" y="259.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (10 samples, 0.68%)</title><rect x="87.7" y="243.0" width="8.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="90.7" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.68%)</title><rect x="87.7" y="227.0" width="8.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="90.7" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 0.68%)</title><rect x="87.7" y="211.0" width="8.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="90.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.61%)</title><rect x="95.7" y="339.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.61%)</title><rect x="95.7" y="323.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.61%)</title><rect x="95.7" y="307.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.61%)</title><rect x="95.7" y="291.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="95.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.54%)</title><rect x="96.5" y="275.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.5" y="286.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="96.5" y="259.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="99.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.34%)</title><rect x="97.3" y="259.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="100.3" y="270.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="97.3" y="243.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="100.3" y="254.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.07%)</title><rect x="97.3" y="227.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="100.3" y="238.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.07%)</title><rect x="97.3" y="211.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="100.3" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="98.1" y="243.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="101.1" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.20%)</title><rect x="98.9" y="243.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="101.9" y="254.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.14%)</title><rect x="101.3" y="259.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="104.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.14%)</title><rect x="102.9" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="102.9" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="102.9" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="103.7" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.7" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="104.5" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="104.5" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 0.95%)</title><rect x="105.3" y="451.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (14 samples, 0.95%)</title><rect x="105.3" y="435.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (14 samples, 0.95%)</title><rect x="105.3" y="419.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.3" y="430.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="105.3" y="403.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="108.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.88%)</title><rect x="106.1" y="403.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.88%)</title><rect x="106.1" y="387.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.88%)</title><rect x="106.1" y="371.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.88%)</title><rect x="106.1" y="355.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (13 samples, 0.88%)</title><rect x="106.1" y="339.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.1" y="350.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.07%)</title><rect x="106.1" y="323.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="109.1" y="334.0"></text>
</g>
<g>
<title>rpc_errlist (12 samples, 0.81%)</title><rect x="106.9" y="323.0" width="9.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="109.9" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="116.5" y="467.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.5" y="478.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.07%)</title><rect x="116.5" y="451.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="119.5" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25859] (126 samples, 8.55%)</title><rect x="117.3" y="515.0" width="100.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="120.3" y="526.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (126 samples, 8.55%)</title><rect x="117.3" y="499.0" width="100.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.3" y="510.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (1 samples, 0.07%)</title><rect x="117.3" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (1 samples, 0.07%)</title><rect x="117.3" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.07%)</title><rect x="117.3" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (78 samples, 5.29%)</title><rect x="118.1" y="483.0" width="62.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.1" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.07%)</title><rect x="118.1" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (77 samples, 5.22%)</title><rect x="118.9" y="467.0" width="61.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.9" y="478.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (77 samples, 5.22%)</title><rect x="118.9" y="451.0" width="61.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.9" y="462.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (77 samples, 5.22%)</title><rect x="118.9" y="435.0" width="61.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.9" y="446.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (74 samples, 5.02%)</title><rect x="118.9" y="419.0" width="59.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.9" y="430.0">sun/ni..</text>
</g>
<g>
<title>kevent (73 samples, 4.95%)</title><rect x="119.7" y="403.0" width="58.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="122.7" y="414.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.20%)</title><rect x="178.1" y="419.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="178.1" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="178.1" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.14%)</title><rect x="178.9" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="178.9" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.9" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="178.9" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="178.9" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.9" y="366.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="178.9" y="339.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="181.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (1 samples, 0.07%)</title><rect x="179.7" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 3.19%)</title><rect x="180.5" y="483.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.5" y="494.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (44 samples, 2.99%)</title><rect x="180.5" y="467.0" width="35.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.5" y="478.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 1.97%)</title><rect x="181.3" y="451.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.3" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 1.22%)</title><rect x="184.5" y="435.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 1.22%)</title><rect x="184.5" y="419.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.5" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (17 samples, 1.15%)</title><rect x="184.5" y="403.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (17 samples, 1.15%)</title><rect x="184.5" y="387.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 1.15%)</title><rect x="184.5" y="371.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (17 samples, 1.15%)</title><rect x="184.5" y="355.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.68%)</title><rect x="185.3" y="339.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.68%)</title><rect x="185.3" y="323.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.68%)</title><rect x="185.3" y="307.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.68%)</title><rect x="185.3" y="291.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.68%)</title><rect x="185.3" y="275.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.68%)</title><rect x="185.3" y="259.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.3" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (10 samples, 0.68%)</title><rect x="185.3" y="243.0" width="8.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="188.3" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.68%)</title><rect x="185.3" y="227.0" width="8.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="188.3" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 0.68%)</title><rect x="185.3" y="211.0" width="8.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="188.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.41%)</title><rect x="193.3" y="339.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.41%)</title><rect x="193.3" y="323.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.41%)</title><rect x="193.3" y="307.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.41%)</title><rect x="193.3" y="291.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.41%)</title><rect x="193.3" y="275.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.3" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.27%)</title><rect x="194.9" y="259.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="197.9" y="270.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.07%)</title><rect x="194.9" y="243.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="197.9" y="254.0"></text>
</g>
<g>
<title>Thread::current_or_null() (1 samples, 0.07%)</title><rect x="194.9" y="227.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.9" y="238.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="195.7" y="243.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="198.7" y="254.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.07%)</title><rect x="195.7" y="227.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="198.7" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="196.5" y="243.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="199.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="198.1" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="198.1" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="198.1" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="198.1" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="198.1" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.41%)</title><rect x="198.9" y="435.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="201.3" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="201.3" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.14%)</title><rect x="202.1" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="203.7" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 0.95%)</title><rect x="204.5" y="451.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (13 samples, 0.88%)</title><rect x="205.3" y="435.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (13 samples, 0.88%)</title><rect x="205.3" y="419.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.3" y="430.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="205.3" y="403.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="208.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.75%)</title><rect x="206.1" y="403.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.75%)</title><rect x="206.1" y="387.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.1" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.isReadOnly (1 samples, 0.07%)</title><rect x="206.1" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.61%)</title><rect x="206.9" y="371.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (9 samples, 0.61%)</title><rect x="206.9" y="355.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (9 samples, 0.61%)</title><rect x="206.9" y="339.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.9" y="350.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.07%)</title><rect x="206.9" y="323.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="209.9" y="334.0"></text>
</g>
<g>
<title>rpc_errlist (8 samples, 0.54%)</title><rect x="207.7" y="323.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="210.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="214.1" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.1" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="214.1" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (1 samples, 0.07%)</title><rect x="214.9" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.9" y="414.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.20%)</title><rect x="215.7" y="467.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="218.7" y="478.0"></text>
</g>
<g>
<title>__chk_fail_overlap.cold.1 (1 samples, 0.07%)</title><rect x="216.5" y="451.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="219.5" y="462.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.07%)</title><rect x="217.3" y="451.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="220.3" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=41219] (118 samples, 8.01%)</title><rect x="218.1" y="515.0" width="94.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="221.1" y="526.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (118 samples, 8.01%)</title><rect x="218.1" y="499.0" width="94.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.1" y="510.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (80 samples, 5.43%)</title><rect x="220.5" y="483.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.5" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.07%)</title><rect x="220.5" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (79 samples, 5.36%)</title><rect x="221.3" y="467.0" width="63.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.3" y="478.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (79 samples, 5.36%)</title><rect x="221.3" y="451.0" width="63.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.3" y="462.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (79 samples, 5.36%)</title><rect x="221.3" y="435.0" width="63.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.3" y="446.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (70 samples, 4.75%)</title><rect x="222.1" y="419.0" width="56.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.1" y="430.0">sun/ni..</text>
</g>
<g>
<title>kevent (68 samples, 4.61%)</title><rect x="223.7" y="403.0" width="54.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="226.7" y="414.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4 samples, 0.27%)</title><rect x="278.2" y="419.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.07%)</title><rect x="279.0" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="279.8" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="279.8" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.07%)</title><rect x="279.8" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.07%)</title><rect x="280.6" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="280.6" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="280.6" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="280.6" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.6" y="366.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="280.6" y="339.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="283.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (2 samples, 0.14%)</title><rect x="281.4" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.14%)</title><rect x="283.0" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.0" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.07%)</title><rect x="283.8" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.8" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="283.8" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35 samples, 2.37%)</title><rect x="284.6" y="483.0" width="28.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.6" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 2.31%)</title><rect x="285.4" y="467.0" width="27.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.4" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 1.29%)</title><rect x="285.4" y="451.0" width="15.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 1.09%)</title><rect x="285.4" y="435.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 1.09%)</title><rect x="285.4" y="419.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.4" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (16 samples, 1.09%)</title><rect x="285.4" y="403.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.14%)</title><rect x="285.4" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.14%)</title><rect x="285.4" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.14%)</title><rect x="285.4" y="355.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (14 samples, 0.95%)</title><rect x="287.0" y="387.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.95%)</title><rect x="287.0" y="371.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.95%)</title><rect x="287.0" y="355.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.14%)</title><rect x="287.0" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.14%)</title><rect x="287.0" y="323.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.14%)</title><rect x="287.0" y="307.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.14%)</title><rect x="287.0" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.54%)</title><rect x="288.6" y="339.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.54%)</title><rect x="288.6" y="323.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.54%)</title><rect x="288.6" y="307.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.54%)</title><rect x="288.6" y="291.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.54%)</title><rect x="288.6" y="275.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.54%)</title><rect x="288.6" y="259.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (8 samples, 0.54%)</title><rect x="288.6" y="243.0" width="6.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="291.6" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.54%)</title><rect x="288.6" y="227.0" width="6.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="291.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 0.54%)</title><rect x="288.6" y="211.0" width="6.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="291.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.27%)</title><rect x="295.0" y="339.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.27%)</title><rect x="295.0" y="323.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.27%)</title><rect x="295.0" y="307.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.27%)</title><rect x="295.0" y="291.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.27%)</title><rect x="295.0" y="275.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.0" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.27%)</title><rect x="295.0" y="259.0" width="3.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="298.0" y="270.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.27%)</title><rect x="295.0" y="243.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="298.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.07%)</title><rect x="298.2" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="298.2" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="298.2" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="299.0" y="435.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 1.02%)</title><rect x="300.6" y="451.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (15 samples, 1.02%)</title><rect x="300.6" y="435.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="300.6" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="300.6" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="300.6" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="300.6" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="300.6" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="300.6" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (14 samples, 0.95%)</title><rect x="301.4" y="419.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="301.4" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="301.4" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.07%)</title><rect x="301.4" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.07%)</title><rect x="301.4" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.07%)</title><rect x="301.4" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.88%)</title><rect x="302.2" y="403.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.88%)</title><rect x="302.2" y="387.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.75%)</title><rect x="303.0" y="371.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (11 samples, 0.75%)</title><rect x="303.0" y="355.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (11 samples, 0.75%)</title><rect x="303.0" y="339.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.0" y="350.0"></text>
</g>
<g>
<title>rpc_errlist (10 samples, 0.68%)</title><rect x="303.8" y="323.0" width="8.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="306.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="311.8" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="311.8" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="311.8" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.07%)</title><rect x="311.8" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.8" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=40707] (102 samples, 6.92%)</title><rect x="312.6" y="515.0" width="81.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="315.6" y="526.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.14%)</title><rect x="312.6" y="499.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="315.6" y="510.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="312.6" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.6" y="494.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.07%)</title><rect x="313.4" y="483.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="316.4" y="494.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (100 samples, 6.78%)</title><rect x="314.2" y="499.0" width="80.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="510.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (64 samples, 4.34%)</title><rect x="314.2" y="483.0" width="51.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.2" y="494.0">one/n..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="316.6" y="467.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="319.6" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="316.6" y="451.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="319.6" y="462.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="316.6" y="435.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="319.6" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="316.6" y="419.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="319.6" y="430.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.07%)</title><rect x="316.6" y="403.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="319.6" y="414.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="316.6" y="387.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="319.6" y="398.0"></text>
</g>
<g>
<title>java/lang/System.nanoTime (1 samples, 0.07%)</title><rect x="317.4" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.4" y="478.0"></text>
</g>
<g>
<title>__block_literal_global (1 samples, 0.07%)</title><rect x="317.4" y="451.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="320.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.07%)</title><rect x="318.2" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.07%)</title><rect x="318.2" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (57 samples, 3.87%)</title><rect x="319.0" y="467.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.0" y="478.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (57 samples, 3.87%)</title><rect x="319.0" y="451.0" width="45.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.0" y="462.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (55 samples, 3.73%)</title><rect x="320.6" y="435.0" width="44.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.6" y="446.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (53 samples, 3.60%)</title><rect x="320.6" y="419.0" width="42.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.6" y="430.0">sun/..</text>
</g>
<g>
<title>kevent (52 samples, 3.53%)</title><rect x="321.4" y="403.0" width="41.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="324.4" y="414.0">kev..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.07%)</title><rect x="363.0" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.07%)</title><rect x="363.0" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="363.0" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="363.0" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.0" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="363.0" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.07%)</title><rect x="363.0" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.07%)</title><rect x="363.8" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.07%)</title><rect x="364.6" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 2.44%)</title><rect x="365.4" y="483.0" width="28.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.4" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 2.31%)</title><rect x="365.4" y="467.0" width="27.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.4" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 1.56%)</title><rect x="365.4" y="451.0" width="18.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20 samples, 1.36%)</title><rect x="365.4" y="435.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20 samples, 1.36%)</title><rect x="365.4" y="419.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.4" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (19 samples, 1.29%)</title><rect x="366.2" y="403.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.14%)</title><rect x="366.2" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.14%)</title><rect x="366.2" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="366.2" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="366.2" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="367.0" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (17 samples, 1.15%)</title><rect x="367.8" y="387.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 1.15%)</title><rect x="367.8" y="371.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (17 samples, 1.15%)</title><rect x="367.8" y="355.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="370.2" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="370.2" y="323.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="370.2" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="370.2" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.54%)</title><rect x="371.0" y="339.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.54%)</title><rect x="371.0" y="323.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.54%)</title><rect x="371.0" y="307.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.47%)</title><rect x="371.8" y="291.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.47%)</title><rect x="371.8" y="275.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.41%)</title><rect x="372.6" y="259.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (6 samples, 0.41%)</title><rect x="372.6" y="243.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="375.6" y="254.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="372.6" y="227.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="375.6" y="238.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::JavaThreadStatusChanger(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="372.6" y="211.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="375.6" y="222.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.07%)</title><rect x="372.6" y="195.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="375.6" y="206.0"></text>
</g>
<g>
<title>JavaThreadParkedState::~JavaThreadParkedState() (1 samples, 0.07%)</title><rect x="373.4" y="227.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="376.4" y="238.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.27%)</title><rect x="374.2" y="227.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="377.2" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.27%)</title><rect x="374.2" y="211.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="377.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.20%)</title><rect x="377.4" y="339.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="377.4" y="323.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="377.4" y="307.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="377.4" y="291.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.20%)</title><rect x="377.4" y="275.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.4" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.20%)</title><rect x="377.4" y="259.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="380.4" y="270.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.20%)</title><rect x="377.4" y="243.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="380.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.14%)</title><rect x="379.9" y="339.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.14%)</title><rect x="381.5" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="381.5" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="381.5" y="403.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="383.1" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.75%)</title><rect x="383.9" y="451.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.9" y="462.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.07%)</title><rect x="383.9" y="435.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="386.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (10 samples, 0.68%)</title><rect x="384.7" y="435.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (10 samples, 0.68%)</title><rect x="384.7" y="419.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.68%)</title><rect x="384.7" y="403.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.68%)</title><rect x="384.7" y="387.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.61%)</title><rect x="384.7" y="371.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (9 samples, 0.61%)</title><rect x="384.7" y="355.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (9 samples, 0.61%)</title><rect x="384.7" y="339.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.7" y="350.0"></text>
</g>
<g>
<title>rpc_errlist (9 samples, 0.61%)</title><rect x="384.7" y="323.0" width="7.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="387.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="391.9" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.9" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="391.9" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.9" y="366.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.14%)</title><rect x="392.7" y="467.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="395.7" y="478.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="393.5" y="451.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="396.5" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=27395] (67 samples, 4.55%)</title><rect x="394.3" y="515.0" width="53.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="397.3" y="526.0">[NIO ..</text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.34%)</title><rect x="394.3" y="499.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="397.3" y="510.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="394.3" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.3" y="494.0"></text>
</g>
<g>
<title>Interpreter (4 samples, 0.27%)</title><rect x="395.1" y="483.0" width="3.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="398.1" y="494.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (62 samples, 4.21%)</title><rect x="398.3" y="499.0" width="49.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.3" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (43 samples, 2.92%)</title><rect x="399.1" y="483.0" width="34.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.1" y="494.0">on..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="401.5" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (39 samples, 2.65%)</title><rect x="402.3" y="467.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.3" y="478.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (38 samples, 2.58%)</title><rect x="403.1" y="451.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.1" y="462.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (38 samples, 2.58%)</title><rect x="403.1" y="435.0" width="30.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.1" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (38 samples, 2.58%)</title><rect x="403.1" y="419.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.1" y="430.0">su..</text>
</g>
<g>
<title>JNI_OnLoad (1 samples, 0.07%)</title><rect x="403.9" y="403.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="406.9" y="414.0"></text>
</g>
<g>
<title>kevent (36 samples, 2.44%)</title><rect x="404.7" y="403.0" width="28.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="407.7" y="414.0">ke..</text>
</g>
<g>
<title>one/nio/net/Session.process (18 samples, 1.22%)</title><rect x="433.5" y="483.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (17 samples, 1.15%)</title><rect x="434.3" y="467.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 0.54%)</title><rect x="434.3" y="451.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 0.41%)</title><rect x="434.3" y="435.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="437.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 0.41%)</title><rect x="434.3" y="419.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="437.3" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (6 samples, 0.41%)</title><rect x="434.3" y="403.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="434.3" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="434.3" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="434.3" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="434.3" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="434.3" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="434.3" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="437.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (5 samples, 0.34%)</title><rect x="435.1" y="387.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.34%)</title><rect x="435.1" y="371.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.34%)</title><rect x="435.1" y="355.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.20%)</title><rect x="435.9" y="339.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.20%)</title><rect x="435.9" y="323.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.20%)</title><rect x="435.9" y="307.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="435.9" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="435.9" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="435.9" y="259.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.9" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="435.9" y="243.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="438.9" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="435.9" y="227.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="438.9" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="435.9" y="211.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="438.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="437.5" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="438.3" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="438.3" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="438.3" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="438.3" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="438.3" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.3" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="438.3" y="259.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="441.3" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.07%)</title><rect x="438.3" y="243.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="441.3" y="254.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="438.3" y="227.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="441.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.14%)</title><rect x="439.1" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="439.9" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.61%)</title><rect x="440.7" y="451.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (9 samples, 0.61%)</title><rect x="440.7" y="435.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (9 samples, 0.61%)</title><rect x="440.7" y="419.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.61%)</title><rect x="440.7" y="403.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.61%)</title><rect x="440.7" y="387.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.54%)</title><rect x="441.5" y="371.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (8 samples, 0.54%)</title><rect x="441.5" y="355.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (8 samples, 0.54%)</title><rect x="441.5" y="339.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.5" y="350.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.07%)</title><rect x="441.5" y="323.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="444.5" y="334.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.07%)</title><rect x="441.5" y="307.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="444.5" y="318.0"></text>
</g>
<g>
<title>rpc_errlist (7 samples, 0.47%)</title><rect x="442.3" y="323.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="445.3" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=40195] (68 samples, 4.61%)</title><rect x="447.9" y="515.0" width="54.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="450.9" y="526.0">[NIO ..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.14%)</title><rect x="447.9" y="499.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="450.9" y="510.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.07%)</title><rect x="447.9" y="483.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="450.9" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.07%)</title><rect x="448.7" y="483.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="451.7" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="448.7" y="467.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="451.7" y="478.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="448.7" y="451.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="451.7" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (66 samples, 4.48%)</title><rect x="449.5" y="499.0" width="52.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.5" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (44 samples, 2.99%)</title><rect x="449.5" y="483.0" width="35.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="494.0">one..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="451.9" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (2 samples, 0.14%)</title><rect x="452.7" y="467.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.07%)</title><rect x="454.3" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.07%)</title><rect x="454.3" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (36 samples, 2.44%)</title><rect x="455.1" y="467.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.1" y="478.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (36 samples, 2.44%)</title><rect x="455.1" y="451.0" width="28.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.1" y="462.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (36 samples, 2.44%)</title><rect x="455.1" y="435.0" width="28.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.1" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (33 samples, 2.24%)</title><rect x="455.1" y="419.0" width="26.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.1" y="430.0">s..</text>
</g>
<g>
<title>JNI_OnLoad (1 samples, 0.07%)</title><rect x="457.5" y="403.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="460.5" y="414.0"></text>
</g>
<g>
<title>kevent (29 samples, 1.97%)</title><rect x="458.3" y="403.0" width="23.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="461.3" y="414.0">k..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.07%)</title><rect x="481.5" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.14%)</title><rect x="482.3" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.3" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.14%)</title><rect x="482.3" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="482.3" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.3" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="483.1" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.1" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="483.1" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="483.1" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.07%)</title><rect x="483.9" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (22 samples, 1.49%)</title><rect x="484.7" y="483.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (21 samples, 1.42%)</title><rect x="485.5" y="467.0" width="16.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 0.95%)</title><rect x="485.5" y="451.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.75%)</title><rect x="485.5" y="435.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.75%)</title><rect x="485.5" y="419.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.5" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (10 samples, 0.68%)</title><rect x="485.5" y="403.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (10 samples, 0.68%)</title><rect x="485.5" y="387.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.68%)</title><rect x="485.5" y="371.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.68%)</title><rect x="485.5" y="355.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.27%)</title><rect x="485.5" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.27%)</title><rect x="485.5" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.27%)</title><rect x="485.5" y="307.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.27%)</title><rect x="485.5" y="291.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.27%)</title><rect x="485.5" y="275.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.27%)</title><rect x="485.5" y="259.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.5" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.20%)</title><rect x="486.3" y="243.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="489.3" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.20%)</title><rect x="486.3" y="227.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="489.3" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="486.3" y="211.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="489.3" y="222.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="487.9" y="211.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="490.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.41%)</title><rect x="488.7" y="339.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.41%)</title><rect x="488.7" y="323.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.41%)</title><rect x="488.7" y="307.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.41%)</title><rect x="488.7" y="291.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.41%)</title><rect x="488.7" y="275.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (6 samples, 0.41%)</title><rect x="488.7" y="259.0" width="4.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="491.7" y="270.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 0.41%)</title><rect x="488.7" y="243.0" width="4.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="491.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="493.5" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="493.5" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="493.5" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="493.5" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="493.5" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.07%)</title><rect x="494.3" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="494.3" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="494.3" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="495.1" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="495.9" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.47%)</title><rect x="496.7" y="451.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (7 samples, 0.47%)</title><rect x="496.7" y="435.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.47%)</title><rect x="496.7" y="419.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.47%)</title><rect x="496.7" y="403.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.47%)</title><rect x="496.7" y="387.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.47%)</title><rect x="496.7" y="371.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 0.47%)</title><rect x="496.7" y="355.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (7 samples, 0.47%)</title><rect x="496.7" y="339.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="350.0"></text>
</g>
<g>
<title>rpc_errlist (7 samples, 0.47%)</title><rect x="496.7" y="323.0" width="5.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="499.7" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=28163] (54 samples, 3.66%)</title><rect x="502.3" y="515.0" width="43.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="505.3" y="526.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (54 samples, 3.66%)</title><rect x="502.3" y="499.0" width="43.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.3" y="510.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (31 samples, 2.10%)</title><rect x="502.3" y="483.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.3" y="494.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (31 samples, 2.10%)</title><rect x="502.3" y="467.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.3" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (31 samples, 2.10%)</title><rect x="502.3" y="451.0" width="24.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.3" y="462.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (31 samples, 2.10%)</title><rect x="502.3" y="435.0" width="24.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.3" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (29 samples, 1.97%)</title><rect x="503.1" y="419.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.1" y="430.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.07%)</title><rect x="503.1" y="403.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="506.1" y="414.0"></text>
</g>
<g>
<title>kevent (28 samples, 1.90%)</title><rect x="503.9" y="403.0" width="22.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="506.9" y="414.0">k..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.07%)</title><rect x="526.4" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (23 samples, 1.56%)</title><rect x="527.2" y="483.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (21 samples, 1.42%)</title><rect x="527.2" y="467.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 1.09%)</title><rect x="527.2" y="451.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 0.88%)</title><rect x="528.0" y="435.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.88%)</title><rect x="528.0" y="419.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.0" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (12 samples, 0.81%)</title><rect x="528.0" y="403.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="528.0" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="528.0" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (11 samples, 0.75%)</title><rect x="528.8" y="387.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.75%)</title><rect x="528.8" y="371.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.75%)</title><rect x="528.8" y="355.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.47%)</title><rect x="529.6" y="339.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.47%)</title><rect x="529.6" y="323.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.41%)</title><rect x="529.6" y="307.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.41%)</title><rect x="529.6" y="291.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.41%)</title><rect x="529.6" y="275.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.34%)</title><rect x="529.6" y="259.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.6" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (5 samples, 0.34%)</title><rect x="529.6" y="243.0" width="4.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="532.6" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.34%)</title><rect x="529.6" y="227.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="532.6" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.27%)</title><rect x="530.4" y="211.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="533.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="533.6" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="534.4" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.20%)</title><rect x="535.2" y="339.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="535.2" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="535.2" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="535.2" y="291.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.20%)</title><rect x="535.2" y="275.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.2" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.20%)</title><rect x="535.2" y="259.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="538.2" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.07%)</title><rect x="535.2" y="243.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="538.2" y="254.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="535.2" y="227.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="538.2" y="238.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="536.0" y="243.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="539.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="537.6" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="537.6" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="537.6" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="537.6" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="537.6" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="538.4" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.4" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.34%)</title><rect x="540.0" y="451.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (5 samples, 0.34%)</title><rect x="540.0" y="435.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (4 samples, 0.27%)</title><rect x="540.8" y="419.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.27%)</title><rect x="540.8" y="403.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.27%)</title><rect x="540.8" y="387.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.27%)</title><rect x="540.8" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 0.27%)</title><rect x="540.8" y="355.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (4 samples, 0.27%)</title><rect x="540.8" y="339.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.8" y="350.0"></text>
</g>
<g>
<title>rpc_errlist (4 samples, 0.27%)</title><rect x="540.8" y="323.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="543.8" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.14%)</title><rect x="544.0" y="467.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="547.0" y="478.0"></text>
</g>
<g>
<title>__commpage_gettimeofday (1 samples, 0.07%)</title><rect x="544.8" y="451.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="547.8" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=28419] (53 samples, 3.60%)</title><rect x="545.6" y="515.0" width="42.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="548.6" y="526.0">[NIO..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.20%)</title><rect x="545.6" y="499.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="548.6" y="510.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="545.6" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.6" y="494.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.07%)</title><rect x="546.4" y="483.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="549.4" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.07%)</title><rect x="547.2" y="483.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="550.2" y="494.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (1 samples, 0.07%)</title><rect x="547.2" y="467.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="550.2" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (50 samples, 3.39%)</title><rect x="548.0" y="499.0" width="40.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.0" y="510.0">one..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="548.8" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (30 samples, 2.04%)</title><rect x="549.6" y="483.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.6" y="494.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 1.97%)</title><rect x="550.4" y="467.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.4" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 1.97%)</title><rect x="550.4" y="451.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.4" y="462.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 1.97%)</title><rect x="550.4" y="435.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.4" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (28 samples, 1.90%)</title><rect x="550.4" y="419.0" width="22.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.4" y="430.0">s..</text>
</g>
<g>
<title>kevent (28 samples, 1.90%)</title><rect x="550.4" y="403.0" width="22.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="553.4" y="414.0">k..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.07%)</title><rect x="572.8" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.07%)</title><rect x="572.8" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="572.8" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.8" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="572.8" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="572.8" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.07%)</title><rect x="572.8" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (18 samples, 1.22%)</title><rect x="573.6" y="483.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (17 samples, 1.15%)</title><rect x="573.6" y="467.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (12 samples, 0.81%)</title><rect x="573.6" y="451.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.75%)</title><rect x="574.4" y="435.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.75%)</title><rect x="574.4" y="419.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.4" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (11 samples, 0.75%)</title><rect x="574.4" y="403.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.put (11 samples, 0.75%)</title><rect x="574.4" y="387.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.75%)</title><rect x="574.4" y="371.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.75%)</title><rect x="574.4" y="355.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="574.4" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="574.4" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="574.4" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="574.4" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.47%)</title><rect x="575.2" y="339.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.47%)</title><rect x="575.2" y="323.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.47%)</title><rect x="575.2" y="307.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.47%)</title><rect x="575.2" y="291.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.47%)</title><rect x="575.2" y="275.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.41%)</title><rect x="576.0" y="259.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (6 samples, 0.41%)</title><rect x="576.0" y="243.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="579.0" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.41%)</title><rect x="576.0" y="227.0" width="4.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="579.0" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.34%)</title><rect x="576.0" y="211.0" width="4.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="579.0" y="222.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="580.0" y="211.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="583.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.20%)</title><rect x="580.8" y="339.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="580.8" y="323.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="580.8" y="307.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="580.8" y="291.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="581.6" y="275.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.6" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="581.6" y="259.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="584.6" y="270.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::release_stable_list() (1 samples, 0.07%)</title><rect x="581.6" y="243.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="584.6" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="582.4" y="243.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="585.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.34%)</title><rect x="583.2" y="451.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (5 samples, 0.34%)</title><rect x="583.2" y="435.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="583.2" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="583.2" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="583.2" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="583.2" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.14%)</title><rect x="583.2" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.14%)</title><rect x="583.2" y="339.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (3 samples, 0.20%)</title><rect x="584.8" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.20%)</title><rect x="584.8" y="403.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.20%)</title><rect x="584.8" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="585.6" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.14%)</title><rect x="585.6" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.14%)</title><rect x="585.6" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.6" y="350.0"></text>
</g>
<g>
<title>rpc_errlist (2 samples, 0.14%)</title><rect x="585.6" y="323.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="588.6" y="334.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="587.2" y="467.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="590.2" y="478.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="587.2" y="451.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="590.2" y="462.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.07%)</title><rect x="587.2" y="435.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="590.2" y="446.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.07%)</title><rect x="587.2" y="419.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="590.2" y="430.0"></text>
</g>
<g>
<title>[worker_504 tid=46347] (7 samples, 0.47%)</title><rect x="588.0" y="515.0" width="5.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="591.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.47%)</title><rect x="588.0" y="499.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.47%)</title><rect x="588.0" y="483.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.47%)</title><rect x="588.0" y="467.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.34%)</title><rect x="588.0" y="451.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.34%)</title><rect x="588.0" y="435.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.34%)</title><rect x="588.0" y="419.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="588.0" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="588.0" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="588.0" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="588.0" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="588.0" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="588.0" y="323.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="591.0" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="588.0" y="307.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="591.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.27%)</title><rect x="588.8" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.27%)</title><rect x="588.8" y="387.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.8" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (4 samples, 0.27%)</title><rect x="588.8" y="371.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="591.8" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.27%)</title><rect x="588.8" y="355.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="591.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.27%)</title><rect x="588.8" y="339.0" width="3.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="591.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="592.0" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="592.0" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="592.0" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="592.0" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="592.0" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="592.0" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="592.0" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.07%)</title><rect x="592.0" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.07%)</title><rect x="592.0" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="592.0" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="592.0" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.07%)</title><rect x="592.0" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.07%)</title><rect x="592.0" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.07%)</title><rect x="592.0" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="254.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="592.0" y="227.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="595.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="592.8" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="592.8" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="592.8" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="592.8" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="592.8" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="592.8" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="592.8" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.8" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="592.8" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.8" y="318.0"></text>
</g>
<g>
<title>[worker_513 tid=86339] (63 samples, 4.27%)</title><rect x="593.6" y="515.0" width="50.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="596.6" y="526.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (63 samples, 4.27%)</title><rect x="593.6" y="499.0" width="50.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.6" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (63 samples, 4.27%)</title><rect x="593.6" y="483.0" width="50.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.6" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (63 samples, 4.27%)</title><rect x="593.6" y="467.0" width="50.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.6" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (41 samples, 2.78%)</title><rect x="593.6" y="451.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.6" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (41 samples, 2.78%)</title><rect x="593.6" y="435.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.6" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (33 samples, 2.24%)</title><rect x="593.6" y="419.0" width="26.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.6" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.27%)</title><rect x="593.6" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.27%)</title><rect x="593.6" y="387.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.27%)</title><rect x="593.6" y="371.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.27%)</title><rect x="593.6" y="355.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.27%)</title><rect x="593.6" y="339.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.6" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.27%)</title><rect x="593.6" y="323.0" width="3.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="596.6" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.07%)</title><rect x="593.6" y="307.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="596.6" y="318.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.07%)</title><rect x="593.6" y="291.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="596.6" y="302.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="593.6" y="275.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="596.6" y="286.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.07%)</title><rect x="593.6" y="259.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="596.6" y="270.0"></text>
</g>
<g>
<title>compiler_barrier() (1 samples, 0.07%)</title><rect x="593.6" y="243.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="596.6" y="254.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.20%)</title><rect x="594.4" y="307.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="597.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (29 samples, 1.97%)</title><rect x="596.8" y="403.0" width="23.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.8" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (29 samples, 1.97%)</title><rect x="596.8" y="387.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.8" y="398.0">j..</text>
</g>
<g>
<title>HandleMarkCleaner::HandleMarkCleaner(Thread*) (1 samples, 0.07%)</title><rect x="597.6" y="371.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="600.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (27 samples, 1.83%)</title><rect x="598.4" y="371.0" width="21.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="601.4" y="382.0">U..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="598.4" y="355.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="601.4" y="366.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="599.2" y="355.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="602.2" y="366.0"></text>
</g>
<g>
<title>ThreadStatistics::monitor_wait() (1 samples, 0.07%)</title><rect x="599.2" y="339.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="602.2" y="350.0"></text>
</g>
<g>
<title>ThreadStatistics::check_and_reset_count() (1 samples, 0.07%)</title><rect x="599.2" y="323.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="602.2" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (25 samples, 1.70%)</title><rect x="600.0" y="355.0" width="20.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="603.0" y="366.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="600.0" y="339.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="603.0" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (24 samples, 1.63%)</title><rect x="600.8" y="339.0" width="19.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="603.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="620.0" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="620.0" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="620.0" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="620.0" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="620.0" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="620.0" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="620.0" y="323.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="623.0" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="620.0" y="307.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="623.0" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="620.0" y="291.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="623.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.47%)</title><rect x="620.8" y="419.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.47%)</title><rect x="620.8" y="403.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.47%)</title><rect x="620.8" y="387.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.47%)</title><rect x="620.8" y="371.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.47%)</title><rect x="620.8" y="355.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.8" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (7 samples, 0.47%)</title><rect x="620.8" y="339.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="623.8" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (6 samples, 0.41%)</title><rect x="620.8" y="323.0" width="4.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="623.8" y="334.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.07%)</title><rect x="625.6" y="323.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="628.6" y="334.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (1 samples, 0.07%)</title><rect x="625.6" y="307.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="628.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (22 samples, 1.49%)</title><rect x="626.4" y="451.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (22 samples, 1.49%)</title><rect x="626.4" y="435.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 1.22%)</title><rect x="626.4" y="419.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.4" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="626.4" y="403.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="629.4" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="626.4" y="387.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="629.4" y="398.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="626.4" y="371.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="629.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 1.15%)</title><rect x="627.2" y="403.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.14%)</title><rect x="627.2" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.14%)</title><rect x="627.2" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.14%)</title><rect x="627.2" y="355.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.14%)</title><rect x="627.2" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 1.02%)</title><rect x="628.8" y="387.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 1.02%)</title><rect x="628.8" y="371.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (15 samples, 1.02%)</title><rect x="628.8" y="355.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (15 samples, 1.02%)</title><rect x="628.8" y="339.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (15 samples, 1.02%)</title><rect x="628.8" y="323.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (15 samples, 1.02%)</title><rect x="628.8" y="307.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (15 samples, 1.02%)</title><rect x="628.8" y="291.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (15 samples, 1.02%)</title><rect x="628.8" y="275.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (15 samples, 1.02%)</title><rect x="628.8" y="259.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (15 samples, 1.02%)</title><rect x="628.8" y="243.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.8" y="254.0"></text>
</g>
<g>
<title>write (15 samples, 1.02%)</title><rect x="628.8" y="227.0" width="12.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="631.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (4 samples, 0.27%)</title><rect x="640.8" y="419.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (3 samples, 0.20%)</title><rect x="641.6" y="403.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.20%)</title><rect x="641.6" y="387.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.20%)</title><rect x="641.6" y="371.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.14%)</title><rect x="642.4" y="355.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="642.4" y="339.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="642.4" y="323.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.4" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="642.4" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.4" y="318.0"></text>
</g>
<g>
<title>[worker_514 tid=85359] (33 samples, 2.24%)</title><rect x="644.0" y="515.0" width="26.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="647.0" y="526.0">[..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="644.0" y="499.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="647.0" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="644.0" y="483.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="647.0" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="644.0" y="467.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="647.0" y="478.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.07%)</title><rect x="644.0" y="451.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="647.0" y="462.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="644.0" y="435.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="647.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (32 samples, 2.17%)</title><rect x="644.8" y="499.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32 samples, 2.17%)</title><rect x="644.8" y="483.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32 samples, 2.17%)</title><rect x="644.8" y="467.0" width="25.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.8" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 1.49%)</title><rect x="644.8" y="451.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (22 samples, 1.49%)</title><rect x="644.8" y="435.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 1.42%)</title><rect x="644.8" y="419.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="644.8" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="644.8" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="644.8" y="371.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="644.8" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="644.8" y="339.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="645.6" y="323.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="648.6" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="645.6" y="307.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="648.6" y="318.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.07%)</title><rect x="645.6" y="291.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="648.6" y="302.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.07%)</title><rect x="645.6" y="275.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="648.6" y="286.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="645.6" y="259.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="648.6" y="270.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.07%)</title><rect x="645.6" y="243.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="648.6" y="254.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="645.6" y="227.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="648.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 1.29%)</title><rect x="646.4" y="403.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 1.29%)</title><rect x="646.4" y="387.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (19 samples, 1.29%)</title><rect x="646.4" y="371.0" width="15.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="649.4" y="382.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="646.4" y="355.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="649.4" y="366.0"></text>
</g>
<g>
<title>ThreadService::is_thread_monitoring_contention() (1 samples, 0.07%)</title><rect x="646.4" y="339.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="649.4" y="350.0"></text>
</g>
<g>
<title>JfrEventSetting::is_enabled(JfrEventId) (1 samples, 0.07%)</title><rect x="647.2" y="355.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="650.2" y="366.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (17 samples, 1.15%)</title><rect x="648.0" y="355.0" width="13.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="651.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (17 samples, 1.15%)</title><rect x="648.0" y="339.0" width="13.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="651.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="661.6" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="661.6" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="661.6" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="661.6" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="661.6" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.6" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="661.6" y="339.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="664.6" y="350.0"></text>
</g>
<g>
<title>Thread::current_or_null() (1 samples, 0.07%)</title><rect x="661.6" y="323.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="664.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (10 samples, 0.68%)</title><rect x="662.4" y="451.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (10 samples, 0.68%)</title><rect x="662.4" y="435.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.68%)</title><rect x="662.4" y="419.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.68%)</title><rect x="662.4" y="403.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.68%)</title><rect x="662.4" y="387.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.68%)</title><rect x="662.4" y="371.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.68%)</title><rect x="662.4" y="355.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (10 samples, 0.68%)</title><rect x="662.4" y="339.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (10 samples, 0.68%)</title><rect x="662.4" y="323.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="662.4" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="662.4" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="662.4" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="662.4" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="662.4" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="663.2" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="663.2" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="663.2" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="663.2" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (8 samples, 0.54%)</title><rect x="664.0" y="307.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (8 samples, 0.54%)</title><rect x="664.0" y="291.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (8 samples, 0.54%)</title><rect x="664.0" y="275.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (8 samples, 0.54%)</title><rect x="664.0" y="259.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (8 samples, 0.54%)</title><rect x="664.0" y="243.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.0" y="254.0"></text>
</g>
<g>
<title>write (7 samples, 0.47%)</title><rect x="664.8" y="227.0" width="5.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="667.8" y="238.0"></text>
</g>
<g>
<title>[worker_515 tid=84519] (1 samples, 0.07%)</title><rect x="670.4" y="515.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="673.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.07%)</title><rect x="670.4" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.07%)</title><rect x="670.4" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.07%)</title><rect x="670.4" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.07%)</title><rect x="670.4" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.07%)</title><rect x="670.4" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="670.4" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="670.4" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="670.4" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="670.4" y="371.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="673.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="670.4" y="355.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="673.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="670.4" y="339.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="673.4" y="350.0"></text>
</g>
<g>
<title>[worker_516 tid=32631] (52 samples, 3.53%)</title><rect x="671.2" y="515.0" width="41.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="674.2" y="526.0">[wo..</text>
</g>
<g>
<title>java/lang/Thread.run (52 samples, 3.53%)</title><rect x="671.2" y="499.0" width="41.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.2" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (52 samples, 3.53%)</title><rect x="671.2" y="483.0" width="41.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.2" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (52 samples, 3.53%)</title><rect x="671.2" y="467.0" width="41.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.2" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (36 samples, 2.44%)</title><rect x="671.2" y="451.0" width="28.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.2" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (36 samples, 2.44%)</title><rect x="671.2" y="435.0" width="28.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.2" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 1.90%)</title><rect x="671.2" y="419.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.20%)</title><rect x="671.2" y="403.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="671.2" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="671.2" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="671.2" y="355.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.20%)</title><rect x="671.2" y="339.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.20%)</title><rect x="671.2" y="323.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="674.2" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.20%)</title><rect x="671.2" y="307.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="674.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (25 samples, 1.70%)</title><rect x="673.6" y="403.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 1.70%)</title><rect x="673.6" y="387.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (24 samples, 1.63%)</title><rect x="674.5" y="371.0" width="19.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="677.5" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 1.63%)</title><rect x="674.5" y="355.0" width="19.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="677.5" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (23 samples, 1.56%)</title><rect x="674.5" y="339.0" width="18.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="677.5" y="350.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="692.9" y="339.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="695.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.14%)</title><rect x="693.7" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.14%)</title><rect x="693.7" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.14%)</title><rect x="693.7" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="693.7" y="371.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="693.7" y="355.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="693.7" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="693.7" y="323.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="696.7" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="693.7" y="307.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="696.7" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="693.7" y="291.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="696.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.41%)</title><rect x="695.3" y="419.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.41%)</title><rect x="695.3" y="403.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.41%)</title><rect x="695.3" y="387.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.41%)</title><rect x="695.3" y="371.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.34%)</title><rect x="696.1" y="355.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.34%)</title><rect x="696.1" y="339.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="699.1" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.27%)</title><rect x="696.1" y="323.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="699.1" y="334.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="699.3" y="323.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="702.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (16 samples, 1.09%)</title><rect x="700.1" y="451.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (16 samples, 1.09%)</title><rect x="700.1" y="435.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.02%)</title><rect x="700.1" y="419.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 1.02%)</title><rect x="700.1" y="403.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 1.02%)</title><rect x="700.1" y="387.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 1.02%)</title><rect x="700.1" y="371.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (15 samples, 1.02%)</title><rect x="700.1" y="355.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.1" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (15 samples, 1.02%)</title><rect x="700.1" y="339.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (15 samples, 1.02%)</title><rect x="700.1" y="323.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.14%)</title><rect x="700.1" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.14%)</title><rect x="700.1" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.14%)</title><rect x="700.1" y="275.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="700.1" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="700.1" y="243.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.88%)</title><rect x="701.7" y="307.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.88%)</title><rect x="701.7" y="291.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.7" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.07%)</title><rect x="701.7" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.07%)</title><rect x="701.7" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.7" y="270.0"></text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.07%)</title><rect x="701.7" y="243.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="704.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (12 samples, 0.81%)</title><rect x="702.5" y="275.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (12 samples, 0.81%)</title><rect x="702.5" y="259.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (12 samples, 0.81%)</title><rect x="702.5" y="243.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.5" y="254.0"></text>
</g>
<g>
<title>write (12 samples, 0.81%)</title><rect x="702.5" y="227.0" width="9.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="705.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="712.1" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="712.1" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="712.1" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="712.1" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.1" y="382.0"></text>
</g>
<g>
<title>[worker_518 tid=37655] (64 samples, 4.34%)</title><rect x="712.9" y="515.0" width="51.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="715.9" y="526.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (64 samples, 4.34%)</title><rect x="712.9" y="499.0" width="51.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.9" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (64 samples, 4.34%)</title><rect x="712.9" y="483.0" width="51.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.9" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (64 samples, 4.34%)</title><rect x="712.9" y="467.0" width="51.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.9" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (45 samples, 3.05%)</title><rect x="712.9" y="451.0" width="36.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.9" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (45 samples, 3.05%)</title><rect x="712.9" y="435.0" width="36.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.9" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (43 samples, 2.92%)</title><rect x="712.9" y="419.0" width="34.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.9" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="712.9" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="712.9" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="712.9" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="712.9" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.9" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="712.9" y="339.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="715.9" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="712.9" y="323.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="715.9" y="334.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="712.9" y="307.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="715.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="713.7" y="403.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="713.7" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="713.7" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="713.7" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="713.7" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="713.7" y="323.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="716.7" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="713.7" y="307.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="716.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 2.71%)</title><rect x="715.3" y="403.0" width="32.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.3" y="414.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 2.71%)</title><rect x="715.3" y="387.0" width="32.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.3" y="398.0">jd..</text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::should_commit() (1 samples, 0.07%)</title><rect x="716.1" y="371.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="719.1" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (38 samples, 2.58%)</title><rect x="716.9" y="371.0" width="30.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="719.9" y="382.0">Un..</text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_with_handler(JavaThread*) (1 samples, 0.07%)</title><rect x="716.9" y="355.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="719.9" y="366.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="717.7" y="355.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.7" y="366.0"></text>
</g>
<g>
<title>ThreadStatistics::monitor_wait() (1 samples, 0.07%)</title><rect x="717.7" y="339.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="720.7" y="350.0"></text>
</g>
<g>
<title>ThreadStatistics::check_and_reset_count() (1 samples, 0.07%)</title><rect x="717.7" y="323.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="720.7" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (34 samples, 2.31%)</title><rect x="718.5" y="355.0" width="27.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="721.5" y="366.0">P..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.07%)</title><rect x="718.5" y="339.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.5" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (33 samples, 2.24%)</title><rect x="719.3" y="339.0" width="26.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="722.3" y="350.0">_..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.07%)</title><rect x="745.7" y="355.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="748.7" y="366.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.07%)</title><rect x="745.7" y="339.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="748.7" y="350.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="745.7" y="323.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="748.7" y="334.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.07%)</title><rect x="745.7" y="307.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="748.7" y="318.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.07%)</title><rect x="745.7" y="291.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="748.7" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="746.5" y="355.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="749.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="747.3" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="747.3" y="403.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="747.3" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="747.3" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="747.3" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.3" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="747.3" y="339.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="750.3" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="747.3" y="323.0" width="1.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="750.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (19 samples, 1.29%)</title><rect x="748.9" y="451.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (19 samples, 1.29%)</title><rect x="748.9" y="435.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.02%)</title><rect x="748.9" y="419.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 0.95%)</title><rect x="748.9" y="403.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.95%)</title><rect x="748.9" y="387.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.95%)</title><rect x="748.9" y="371.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (14 samples, 0.95%)</title><rect x="748.9" y="355.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (14 samples, 0.95%)</title><rect x="748.9" y="339.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (14 samples, 0.95%)</title><rect x="748.9" y="323.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (14 samples, 0.95%)</title><rect x="748.9" y="307.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (14 samples, 0.95%)</title><rect x="748.9" y="291.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.07%)</title><rect x="748.9" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.07%)</title><rect x="748.9" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="748.9" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.07%)</title><rect x="748.9" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.07%)</title><rect x="748.9" y="211.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.07%)</title><rect x="748.9" y="195.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (13 samples, 0.88%)</title><rect x="749.7" y="275.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (13 samples, 0.88%)</title><rect x="749.7" y="259.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (13 samples, 0.88%)</title><rect x="749.7" y="243.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.7" y="254.0"></text>
</g>
<g>
<title>write (12 samples, 0.81%)</title><rect x="750.5" y="227.0" width="9.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="753.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="760.1" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (4 samples, 0.27%)</title><rect x="760.9" y="419.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (3 samples, 0.20%)</title><rect x="761.7" y="403.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.20%)</title><rect x="761.7" y="387.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.14%)</title><rect x="761.7" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.7" y="382.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="763.3" y="371.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="766.3" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="763.3" y="355.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="766.3" y="366.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.07%)</title><rect x="763.3" y="339.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="766.3" y="350.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.07%)</title><rect x="763.3" y="323.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="766.3" y="334.0"></text>
</g>
<g>
<title>[worker_519 tid=43547] (67 samples, 4.55%)</title><rect x="764.1" y="515.0" width="53.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="767.1" y="526.0">[work..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="764.1" y="499.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="767.1" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="764.1" y="483.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="767.1" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="764.1" y="467.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="767.1" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="764.1" y="451.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="767.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (66 samples, 4.48%)</title><rect x="764.9" y="499.0" width="52.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.9" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (66 samples, 4.48%)</title><rect x="764.9" y="483.0" width="52.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.9" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (66 samples, 4.48%)</title><rect x="764.9" y="467.0" width="52.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.9" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (49 samples, 3.32%)</title><rect x="765.7" y="451.0" width="39.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.7" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (49 samples, 3.32%)</title><rect x="765.7" y="435.0" width="39.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.7" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 3.12%)</title><rect x="765.7" y="419.0" width="36.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.7" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.41%)</title><rect x="765.7" y="403.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.41%)</title><rect x="765.7" y="387.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.41%)</title><rect x="765.7" y="371.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.41%)</title><rect x="765.7" y="355.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.41%)</title><rect x="765.7" y="339.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.34%)</title><rect x="766.5" y="323.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="769.5" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="766.5" y="307.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="769.5" y="318.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested(JavaThread*) (1 samples, 0.07%)</title><rect x="766.5" y="291.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="769.5" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.07%)</title><rect x="767.3" y="307.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="770.3" y="318.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="767.3" y="291.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="770.3" y="302.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.20%)</title><rect x="768.1" y="307.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="771.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 2.71%)</title><rect x="770.5" y="403.0" width="32.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.5" y="414.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 2.71%)</title><rect x="770.5" y="387.0" width="32.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.5" y="398.0">jd..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (38 samples, 2.58%)</title><rect x="772.1" y="371.0" width="30.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="775.1" y="382.0">Un..</text>
</g>
<g>
<title>Parker::park(bool, long) (38 samples, 2.58%)</title><rect x="772.1" y="355.0" width="30.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="775.1" y="366.0">Pa..</text>
</g>
<g>
<title>__psynch_cvwait (38 samples, 2.58%)</title><rect x="772.1" y="339.0" width="30.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="775.1" y="350.0">__..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.14%)</title><rect x="802.5" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.14%)</title><rect x="802.5" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.14%)</title><rect x="802.5" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="802.5" y="371.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="802.5" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="802.5" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.5" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="802.5" y="323.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="805.5" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="802.5" y="307.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="805.5" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="802.5" y="291.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="805.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="804.1" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="804.1" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="804.1" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="804.1" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="804.1" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="804.1" y="339.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="807.1" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="804.1" y="323.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="807.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (16 samples, 1.09%)</title><rect x="804.9" y="451.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (16 samples, 1.09%)</title><rect x="804.9" y="435.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.81%)</title><rect x="804.9" y="419.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 0.75%)</title><rect x="805.7" y="403.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.75%)</title><rect x="805.7" y="387.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.75%)</title><rect x="805.7" y="371.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (11 samples, 0.75%)</title><rect x="805.7" y="355.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (11 samples, 0.75%)</title><rect x="805.7" y="339.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (11 samples, 0.75%)</title><rect x="805.7" y="323.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (11 samples, 0.75%)</title><rect x="805.7" y="307.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (11 samples, 0.75%)</title><rect x="805.7" y="291.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (11 samples, 0.75%)</title><rect x="805.7" y="275.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (11 samples, 0.75%)</title><rect x="805.7" y="259.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (11 samples, 0.75%)</title><rect x="805.7" y="243.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.7" y="254.0"></text>
</g>
<g>
<title>write (10 samples, 0.68%)</title><rect x="806.5" y="227.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="809.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (4 samples, 0.27%)</title><rect x="814.5" y="419.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.14%)</title><rect x="814.5" y="403.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.14%)</title><rect x="814.5" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.14%)</title><rect x="814.5" y="371.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.5" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.14%)</title><rect x="814.5" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (2 samples, 0.14%)</title><rect x="814.5" y="339.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (2 samples, 0.14%)</title><rect x="814.5" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="816.1" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="816.1" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.14%)</title><rect x="816.1" y="371.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.14%)</title><rect x="816.1" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="816.1" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="816.1" y="323.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.1" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="816.1" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.1" y="318.0"></text>
</g>
<g>
<title>[worker_520 tid=29499] (85 samples, 5.77%)</title><rect x="817.7" y="515.0" width="68.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="820.7" y="526.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (85 samples, 5.77%)</title><rect x="817.7" y="499.0" width="68.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.7" y="510.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (85 samples, 5.77%)</title><rect x="817.7" y="483.0" width="68.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.7" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (85 samples, 5.77%)</title><rect x="817.7" y="467.0" width="68.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.7" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (61 samples, 4.14%)</title><rect x="817.7" y="451.0" width="48.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.7" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (59 samples, 4.00%)</title><rect x="819.3" y="435.0" width="47.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.3" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 3.60%)</title><rect x="819.3" y="419.0" width="42.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.3" y="430.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="819.3" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="819.3" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="819.3" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="819.3" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="819.3" y="339.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.3" y="350.0"></text>
</g>
<g>
<title>addr_from_java(long) (1 samples, 0.07%)</title><rect x="819.3" y="323.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="822.3" y="334.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.07%)</title><rect x="820.1" y="323.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="823.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (51 samples, 3.46%)</title><rect x="820.9" y="403.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.9" y="414.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (51 samples, 3.46%)</title><rect x="820.9" y="387.0" width="40.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.9" y="398.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (50 samples, 3.39%)</title><rect x="821.8" y="371.0" width="40.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="824.8" y="382.0">Uns..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="822.6" y="355.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.6" y="366.0"></text>
</g>
<g>
<title>ThreadStatistics::monitor_wait() (1 samples, 0.07%)</title><rect x="822.6" y="339.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="825.6" y="350.0"></text>
</g>
<g>
<title>ThreadStatistics::check_and_reset_count() (1 samples, 0.07%)</title><rect x="822.6" y="323.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="825.6" y="334.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (1 samples, 0.07%)</title><rect x="823.4" y="355.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="826.4" y="366.0"></text>
</g>
<g>
<title>JfrEventSetting::is_enabled(JfrEventId) (1 samples, 0.07%)</title><rect x="823.4" y="339.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="826.4" y="350.0"></text>
</g>
<g>
<title>JfrEventSetting::setting(JfrEventId) (1 samples, 0.07%)</title><rect x="823.4" y="323.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="826.4" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (47 samples, 3.19%)</title><rect x="824.2" y="355.0" width="37.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="827.2" y="366.0">Par..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="824.2" y="339.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="827.2" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (45 samples, 3.05%)</title><rect x="825.0" y="339.0" width="36.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="828.0" y="350.0">__p..</text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="861.0" y="339.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="864.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="861.8" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="861.8" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="861.8" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="861.8" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="861.8" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="861.8" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.34%)</title><rect x="862.6" y="419.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.34%)</title><rect x="862.6" y="403.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.34%)</title><rect x="862.6" y="387.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.34%)</title><rect x="862.6" y="371.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.34%)</title><rect x="862.6" y="355.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.6" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (5 samples, 0.34%)</title><rect x="862.6" y="339.0" width="4.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="865.6" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.27%)</title><rect x="862.6" y="323.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="865.6" y="334.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="865.8" y="323.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="868.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (24 samples, 1.63%)</title><rect x="866.6" y="451.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (24 samples, 1.63%)</title><rect x="866.6" y="435.0" width="19.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.6" y="446.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="866.6" y="419.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="869.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 1.22%)</title><rect x="867.4" y="419.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.4" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="868.2" y="403.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="871.2" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="868.2" y="387.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="871.2" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="868.2" y="371.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="871.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 1.09%)</title><rect x="869.0" y="403.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 1.09%)</title><rect x="869.0" y="387.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 1.09%)</title><rect x="869.0" y="371.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (16 samples, 1.09%)</title><rect x="869.0" y="355.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (16 samples, 1.09%)</title><rect x="869.0" y="339.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (16 samples, 1.09%)</title><rect x="869.0" y="323.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (16 samples, 1.09%)</title><rect x="869.0" y="307.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (16 samples, 1.09%)</title><rect x="869.0" y="291.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (16 samples, 1.09%)</title><rect x="869.0" y="275.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (16 samples, 1.09%)</title><rect x="869.0" y="259.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (16 samples, 1.09%)</title><rect x="869.0" y="243.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.0" y="254.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.07%)</title><rect x="870.6" y="227.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="873.6" y="238.0"></text>
</g>
<g>
<title>write (13 samples, 0.88%)</title><rect x="871.4" y="227.0" width="10.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="874.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (5 samples, 0.34%)</title><rect x="881.8" y="419.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (5 samples, 0.34%)</title><rect x="881.8" y="403.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.34%)</title><rect x="881.8" y="387.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.27%)</title><rect x="881.8" y="371.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.20%)</title><rect x="882.6" y="355.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.20%)</title><rect x="882.6" y="339.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.20%)</title><rect x="882.6" y="323.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.20%)</title><rect x="882.6" y="307.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.6" y="318.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="885.0" y="371.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.0" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="885.0" y="355.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="888.0" y="366.0"></text>
</g>
<g>
<title>__block_literal_global (1 samples, 0.07%)</title><rect x="885.0" y="339.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="888.0" y="350.0"></text>
</g>
<g>
<title>[worker_521 tid=34607] (22 samples, 1.49%)</title><rect x="885.8" y="515.0" width="17.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="888.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 1.49%)</title><rect x="885.8" y="499.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22 samples, 1.49%)</title><rect x="885.8" y="483.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22 samples, 1.49%)</title><rect x="885.8" y="467.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 1.09%)</title><rect x="885.8" y="451.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 1.09%)</title><rect x="885.8" y="435.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.81%)</title><rect x="885.8" y="419.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="885.8" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="885.8" y="387.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="885.8" y="371.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="885.8" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="885.8" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="885.8" y="323.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="888.8" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="885.8" y="307.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="888.8" y="318.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="886.6" y="307.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="889.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.68%)</title><rect x="887.4" y="403.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.68%)</title><rect x="887.4" y="387.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (10 samples, 0.68%)</title><rect x="887.4" y="371.0" width="8.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="890.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.68%)</title><rect x="887.4" y="355.0" width="8.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="890.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (9 samples, 0.61%)</title><rect x="887.4" y="339.0" width="7.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="890.4" y="350.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="894.6" y="339.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="897.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.27%)</title><rect x="895.4" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.27%)</title><rect x="895.4" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.27%)</title><rect x="895.4" y="387.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.27%)</title><rect x="895.4" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.27%)</title><rect x="895.4" y="355.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.4" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (4 samples, 0.27%)</title><rect x="895.4" y="339.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="898.4" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (4 samples, 0.27%)</title><rect x="895.4" y="323.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="898.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (6 samples, 0.41%)</title><rect x="898.6" y="451.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (6 samples, 0.41%)</title><rect x="898.6" y="435.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="898.6" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.14%)</title><rect x="898.6" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="898.6" y="387.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="898.6" y="371.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.14%)</title><rect x="898.6" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.14%)</title><rect x="898.6" y="339.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.14%)</title><rect x="898.6" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="898.6" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="898.6" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="898.6" y="275.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="898.6" y="259.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="898.6" y="243.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.6" y="254.0"></text>
</g>
<g>
<title>write (2 samples, 0.14%)</title><rect x="898.6" y="227.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="901.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (4 samples, 0.27%)</title><rect x="900.2" y="419.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (4 samples, 0.27%)</title><rect x="900.2" y="403.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (4 samples, 0.27%)</title><rect x="900.2" y="387.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.20%)</title><rect x="900.2" y="371.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.20%)</title><rect x="900.2" y="355.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.20%)</title><rect x="900.2" y="339.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.20%)</title><rect x="900.2" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.2" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.20%)</title><rect x="900.2" y="307.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.2" y="318.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="902.6" y="371.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="905.6" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="902.6" y="355.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="905.6" y="366.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.07%)</title><rect x="902.6" y="339.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="905.6" y="350.0"></text>
</g>
<g>
<title>[worker_522 tid=36655] (16 samples, 1.09%)</title><rect x="903.4" y="515.0" width="12.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="906.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 1.09%)</title><rect x="903.4" y="499.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 1.09%)</title><rect x="903.4" y="483.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 1.09%)</title><rect x="903.4" y="467.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.95%)</title><rect x="903.4" y="451.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.95%)</title><rect x="903.4" y="435.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.88%)</title><rect x="903.4" y="419.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="903.4" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="903.4" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="903.4" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="903.4" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="903.4" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.4" y="350.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="903.4" y="323.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="906.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.07%)</title><rect x="904.2" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.07%)</title><rect x="904.2" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.75%)</title><rect x="905.0" y="403.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.75%)</title><rect x="905.0" y="387.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (11 samples, 0.75%)</title><rect x="905.0" y="371.0" width="8.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="908.0" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.68%)</title><rect x="905.8" y="355.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="908.8" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 0.68%)</title><rect x="905.8" y="339.0" width="8.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="908.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="913.8" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="913.8" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="913.8" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="913.8" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="913.8" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="913.8" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="913.8" y="323.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="916.8" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="913.8" y="307.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="916.8" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="913.8" y="291.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="914.6" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="914.6" y="435.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="914.6" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="914.6" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="914.6" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="914.6" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="914.6" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.07%)</title><rect x="914.6" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.07%)</title><rect x="914.6" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="914.6" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="914.6" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.07%)</title><rect x="914.6" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.07%)</title><rect x="914.6" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.07%)</title><rect x="914.6" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.6" y="254.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="914.6" y="227.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="917.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="915.4" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="915.4" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="915.4" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.4" y="398.0"></text>
</g>
<g>
<title>[worker_523 tid=85363] (8 samples, 0.54%)</title><rect x="916.2" y="515.0" width="6.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="919.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.54%)</title><rect x="916.2" y="499.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.54%)</title><rect x="916.2" y="483.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.54%)</title><rect x="916.2" y="467.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="916.2" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.14%)</title><rect x="916.2" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.14%)</title><rect x="916.2" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="916.2" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="916.2" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="916.2" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="916.2" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="916.2" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.2" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="916.2" y="323.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="919.2" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="916.2" y="307.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="919.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="917.0" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="917.0" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="917.0" y="371.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="920.0" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="917.0" y="355.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="920.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="917.0" y="339.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="920.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (6 samples, 0.41%)</title><rect x="917.8" y="451.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (6 samples, 0.41%)</title><rect x="917.8" y="435.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.27%)</title><rect x="917.8" y="419.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.27%)</title><rect x="917.8" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.27%)</title><rect x="917.8" y="387.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.27%)</title><rect x="917.8" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.27%)</title><rect x="917.8" y="355.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (4 samples, 0.27%)</title><rect x="917.8" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.27%)</title><rect x="917.8" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.27%)</title><rect x="917.8" y="307.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.27%)</title><rect x="917.8" y="291.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.14%)</title><rect x="917.8" y="275.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.14%)</title><rect x="917.8" y="259.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.8" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="917.8" y="243.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="920.8" y="254.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.07%)</title><rect x="917.8" y="227.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="920.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="918.6" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.07%)</title><rect x="918.6" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.07%)</title><rect x="918.6" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="919.4" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="922.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="919.4" y="259.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="919.4" y="243.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.4" y="254.0"></text>
</g>
<g>
<title>write (2 samples, 0.14%)</title><rect x="919.4" y="227.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="922.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (2 samples, 0.14%)</title><rect x="921.0" y="419.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="921.0" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="921.0" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="921.0" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="921.0" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="921.0" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="921.0" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="921.0" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.0" y="318.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="921.8" y="371.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="924.8" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="921.8" y="355.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="924.8" y="366.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.07%)</title><rect x="921.8" y="339.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="924.8" y="350.0"></text>
</g>
<g>
<title>__block_literal_global (1 samples, 0.07%)</title><rect x="921.8" y="323.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="924.8" y="334.0"></text>
</g>
<g>
<title>[worker_524 tid=36011] (21 samples, 1.42%)</title><rect x="922.6" y="515.0" width="16.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="925.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 1.42%)</title><rect x="922.6" y="499.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 1.42%)</title><rect x="922.6" y="483.0" width="16.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 1.42%)</title><rect x="922.6" y="467.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.95%)</title><rect x="922.6" y="451.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.95%)</title><rect x="922.6" y="435.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.88%)</title><rect x="922.6" y="419.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="922.6" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="922.6" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="922.6" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="922.6" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="922.6" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.6" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="922.6" y="323.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="925.6" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="922.6" y="307.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="925.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.81%)</title><rect x="923.4" y="403.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.81%)</title><rect x="923.4" y="387.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (12 samples, 0.81%)</title><rect x="923.4" y="371.0" width="9.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="926.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.81%)</title><rect x="923.4" y="355.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="926.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (12 samples, 0.81%)</title><rect x="923.4" y="339.0" width="9.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="926.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="933.0" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="933.0" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="933.0" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="933.0" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="933.0" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="933.0" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="936.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="933.0" y="323.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="936.0" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="933.0" y="307.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="936.0" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="933.0" y="291.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="936.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (7 samples, 0.47%)</title><rect x="933.8" y="451.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="936.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (7 samples, 0.47%)</title><rect x="933.8" y="435.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.41%)</title><rect x="933.8" y="419.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.8" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="933.8" y="403.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="936.8" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="933.8" y="387.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.8" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="933.8" y="371.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="936.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.34%)</title><rect x="934.6" y="403.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.34%)</title><rect x="934.6" y="387.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.34%)</title><rect x="934.6" y="371.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.34%)</title><rect x="934.6" y="355.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (5 samples, 0.34%)</title><rect x="934.6" y="339.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (5 samples, 0.34%)</title><rect x="934.6" y="323.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.34%)</title><rect x="934.6" y="307.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.34%)</title><rect x="934.6" y="291.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (5 samples, 0.34%)</title><rect x="934.6" y="275.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (5 samples, 0.34%)</title><rect x="934.6" y="259.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.6" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="934.6" y="243.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="937.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (4 samples, 0.27%)</title><rect x="935.4" y="243.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.4" y="254.0"></text>
</g>
<g>
<title>write (4 samples, 0.27%)</title><rect x="935.4" y="227.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="938.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="938.6" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="938.6" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="938.6" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="938.6" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="941.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="938.6" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="938.6" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="938.6" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="938.6" y="307.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.6" y="318.0"></text>
</g>
<g>
<title>[worker_525 tid=85367] (29 samples, 1.97%)</title><rect x="939.4" y="515.0" width="23.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="942.4" y="526.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (29 samples, 1.97%)</title><rect x="939.4" y="499.0" width="23.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (29 samples, 1.97%)</title><rect x="939.4" y="483.0" width="23.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (29 samples, 1.97%)</title><rect x="939.4" y="467.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.4" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 1.49%)</title><rect x="939.4" y="451.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (22 samples, 1.49%)</title><rect x="939.4" y="435.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 1.36%)</title><rect x="939.4" y="419.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.20%)</title><rect x="939.4" y="403.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="939.4" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="939.4" y="371.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="939.4" y="355.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.07%)</title><rect x="939.4" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="940.2" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.2" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="940.2" y="323.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="943.2" y="334.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="940.2" y="307.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="943.2" y="318.0"></text>
</g>
<g>
<title>Chunk::next() const (1 samples, 0.07%)</title><rect x="940.2" y="291.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="943.2" y="302.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="941.0" y="307.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="944.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 1.15%)</title><rect x="941.8" y="403.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 1.15%)</title><rect x="941.8" y="387.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.8" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (17 samples, 1.15%)</title><rect x="941.8" y="371.0" width="13.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="944.8" y="382.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="941.8" y="355.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="944.8" y="366.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (1 samples, 0.07%)</title><rect x="941.8" y="339.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="944.8" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 1.02%)</title><rect x="942.6" y="355.0" width="12.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="945.6" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (15 samples, 1.02%)</title><rect x="942.6" y="339.0" width="12.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="945.6" y="350.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="954.6" y="355.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="957.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="955.4" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="955.4" y="403.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="955.4" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="955.4" y="371.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="958.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="955.4" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.4" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="955.4" y="339.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="958.4" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="955.4" y="323.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="958.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (7 samples, 0.47%)</title><rect x="957.0" y="451.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (7 samples, 0.47%)</title><rect x="957.0" y="435.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.47%)</title><rect x="957.0" y="419.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.47%)</title><rect x="957.0" y="403.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.47%)</title><rect x="957.0" y="387.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.47%)</title><rect x="957.0" y="371.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.47%)</title><rect x="957.0" y="355.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (7 samples, 0.47%)</title><rect x="957.0" y="339.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (7 samples, 0.47%)</title><rect x="957.0" y="323.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.47%)</title><rect x="957.0" y="307.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.47%)</title><rect x="957.0" y="291.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 0.47%)</title><rect x="957.0" y="275.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (7 samples, 0.47%)</title><rect x="957.0" y="259.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 0.47%)</title><rect x="957.0" y="243.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.0" y="254.0"></text>
</g>
<g>
<title>write (7 samples, 0.47%)</title><rect x="957.0" y="227.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="960.0" y="238.0"></text>
</g>
<g>
<title>[worker_526 tid=82327] (21 samples, 1.42%)</title><rect x="962.6" y="515.0" width="16.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="965.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 1.42%)</title><rect x="962.6" y="499.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 1.42%)</title><rect x="962.6" y="483.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 1.42%)</title><rect x="962.6" y="467.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 1.09%)</title><rect x="962.6" y="451.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 1.09%)</title><rect x="962.6" y="435.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.95%)</title><rect x="963.4" y="419.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="963.4" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="963.4" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="963.4" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="963.4" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.07%)</title><rect x="963.4" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="964.2" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.2" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="964.2" y="323.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="967.2" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="964.2" y="307.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="967.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.81%)</title><rect x="965.0" y="403.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.81%)</title><rect x="965.0" y="387.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (12 samples, 0.81%)</title><rect x="965.0" y="371.0" width="9.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="968.0" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.81%)</title><rect x="965.0" y="355.0" width="9.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="968.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (12 samples, 0.81%)</title><rect x="965.0" y="339.0" width="9.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="968.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="974.7" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="974.7" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="977.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="974.7" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="974.7" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="974.7" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="974.7" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (5 samples, 0.34%)</title><rect x="975.5" y="451.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (5 samples, 0.34%)</title><rect x="975.5" y="435.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.27%)</title><rect x="975.5" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.27%)</title><rect x="975.5" y="403.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.27%)</title><rect x="975.5" y="387.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.27%)</title><rect x="975.5" y="371.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="978.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.27%)</title><rect x="975.5" y="355.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (4 samples, 0.27%)</title><rect x="975.5" y="339.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.27%)</title><rect x="975.5" y="323.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.27%)</title><rect x="975.5" y="307.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.27%)</title><rect x="975.5" y="291.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (4 samples, 0.27%)</title><rect x="975.5" y="275.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (4 samples, 0.27%)</title><rect x="975.5" y="259.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (4 samples, 0.27%)</title><rect x="975.5" y="243.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.5" y="254.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.07%)</title><rect x="975.5" y="227.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="978.5" y="238.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="976.3" y="227.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="979.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="978.7" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="978.7" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="978.7" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="978.7" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.7" y="382.0"></text>
</g>
<g>
<title>[worker_527 tid=31039] (16 samples, 1.09%)</title><rect x="979.5" y="515.0" width="12.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="982.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 1.09%)</title><rect x="979.5" y="499.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 1.09%)</title><rect x="979.5" y="483.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 1.09%)</title><rect x="979.5" y="467.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.54%)</title><rect x="979.5" y="451.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.54%)</title><rect x="979.5" y="435.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.54%)</title><rect x="979.5" y="419.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="979.5" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="979.5" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="979.5" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="979.5" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="979.5" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.5" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="979.5" y="323.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="982.5" y="334.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="979.5" y="307.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="982.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.47%)</title><rect x="980.3" y="403.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.47%)</title><rect x="980.3" y="387.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.3" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (7 samples, 0.47%)</title><rect x="980.3" y="371.0" width="5.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="983.3" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.47%)</title><rect x="980.3" y="355.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="983.3" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (6 samples, 0.41%)</title><rect x="981.1" y="339.0" width="4.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="984.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (8 samples, 0.54%)</title><rect x="985.9" y="451.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (8 samples, 0.54%)</title><rect x="985.9" y="435.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.9" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="985.9" y="419.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="988.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.34%)</title><rect x="986.7" y="419.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.27%)</title><rect x="987.5" y="403.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.27%)</title><rect x="987.5" y="387.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.27%)</title><rect x="987.5" y="371.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.27%)</title><rect x="987.5" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (4 samples, 0.27%)</title><rect x="987.5" y="339.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.27%)</title><rect x="987.5" y="323.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.27%)</title><rect x="987.5" y="307.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.27%)</title><rect x="987.5" y="291.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (4 samples, 0.27%)</title><rect x="987.5" y="275.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (4 samples, 0.27%)</title><rect x="987.5" y="259.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (4 samples, 0.27%)</title><rect x="987.5" y="243.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.5" y="254.0"></text>
</g>
<g>
<title>write (4 samples, 0.27%)</title><rect x="987.5" y="227.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="990.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (2 samples, 0.14%)</title><rect x="990.7" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="990.7" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="990.7" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="991.5" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="991.5" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="991.5" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="991.5" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="994.5" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="991.5" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.5" y="318.0"></text>
</g>
<g>
<title>[worker_529 tid=32323] (13 samples, 0.88%)</title><rect x="992.3" y="515.0" width="10.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="995.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13 samples, 0.88%)</title><rect x="992.3" y="499.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13 samples, 0.88%)</title><rect x="992.3" y="483.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13 samples, 0.88%)</title><rect x="992.3" y="467.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.68%)</title><rect x="992.3" y="451.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.68%)</title><rect x="992.3" y="435.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.61%)</title><rect x="992.3" y="419.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="995.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="992.3" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="992.3" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="995.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="992.3" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="992.3" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="992.3" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.3" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="992.3" y="323.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="995.3" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="992.3" y="307.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="995.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.54%)</title><rect x="993.1" y="403.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="996.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.54%)</title><rect x="993.1" y="387.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.1" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (8 samples, 0.54%)</title><rect x="993.1" y="371.0" width="6.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="996.1" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.54%)</title><rect x="993.1" y="355.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="996.1" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 0.47%)</title><rect x="993.1" y="339.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="996.1" y="350.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="998.7" y="339.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1001.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="999.5" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="999.5" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="999.5" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="999.5" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (3 samples, 0.20%)</title><rect x="1000.3" y="451.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (3 samples, 0.20%)</title><rect x="1000.3" y="435.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.20%)</title><rect x="1000.3" y="419.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.20%)</title><rect x="1000.3" y="403.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1000.3" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1000.3" y="371.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.20%)</title><rect x="1000.3" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.20%)</title><rect x="1000.3" y="339.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.20%)</title><rect x="1000.3" y="323.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1000.3" y="307.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1000.3" y="291.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 0.20%)</title><rect x="1000.3" y="275.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (3 samples, 0.20%)</title><rect x="1000.3" y="259.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.20%)</title><rect x="1000.3" y="243.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.3" y="254.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="1000.3" y="227.0" width="2.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1003.3" y="238.0"></text>
</g>
<g>
<title>[worker_530 tid=35735] (20 samples, 1.36%)</title><rect x="1002.7" y="515.0" width="16.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1005.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 1.36%)</title><rect x="1002.7" y="499.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 1.36%)</title><rect x="1002.7" y="483.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 1.36%)</title><rect x="1002.7" y="467.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 1.09%)</title><rect x="1002.7" y="451.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.poll (1 samples, 0.07%)</title><rect x="1002.7" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1002.7" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1002.7" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1002.7" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1002.7" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.7" y="382.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1002.7" y="355.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1005.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 1.02%)</title><rect x="1003.5" y="435.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.75%)</title><rect x="1003.5" y="419.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="1003.5" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1003.5" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1003.5" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1003.5" y="355.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="1003.5" y="339.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.5" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1003.5" y="323.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1006.5" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.14%)</title><rect x="1003.5" y="307.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1006.5" y="318.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list() (1 samples, 0.07%)</title><rect x="1003.5" y="291.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1006.5" y="302.0"></text>
</g>
<g>
<title>SafeThreadsListPtr::acquire_stable_list_fast_path() (1 samples, 0.07%)</title><rect x="1004.3" y="291.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1007.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.61%)</title><rect x="1005.1" y="403.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.61%)</title><rect x="1005.1" y="387.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.1" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (9 samples, 0.61%)</title><rect x="1005.1" y="371.0" width="7.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1008.1" y="382.0"></text>
</g>
<g>
<title>JavaThreadStatusChanger::set_thread_status(JavaThread*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="1005.1" y="355.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.1" y="366.0"></text>
</g>
<g>
<title>JavaThread::threadObj() const (1 samples, 0.07%)</title><rect x="1005.1" y="339.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1008.1" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.54%)</title><rect x="1005.9" y="355.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1008.9" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 0.54%)</title><rect x="1005.9" y="339.0" width="6.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1008.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1012.3" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1012.3" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1015.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1012.3" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.07%)</title><rect x="1012.3" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1015.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.07%)</title><rect x="1012.3" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.20%)</title><rect x="1013.1" y="419.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="1013.1" y="403.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="1013.1" y="387.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="1013.1" y="371.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.20%)</title><rect x="1013.1" y="355.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1013.1" y="339.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1016.1" y="350.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="1013.1" y="323.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1016.1" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1013.9" y="323.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1016.9" y="334.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.07%)</title><rect x="1014.7" y="339.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1017.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (4 samples, 0.27%)</title><rect x="1015.5" y="451.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (4 samples, 0.27%)</title><rect x="1015.5" y="435.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.27%)</title><rect x="1015.5" y="419.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.27%)</title><rect x="1015.5" y="403.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.07%)</title><rect x="1015.5" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1016.3" y="387.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1016.3" y="371.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.20%)</title><rect x="1016.3" y="355.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.20%)</title><rect x="1016.3" y="339.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1019.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.20%)</title><rect x="1016.3" y="323.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1019.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="1016.3" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="1016.3" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="1016.3" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1016.3" y="259.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1016.3" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1019.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1017.1" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1017.1" y="291.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="1017.1" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="1017.1" y="259.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="1017.1" y="243.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.1" y="254.0"></text>
</g>
<g>
<title>[worker_531 tid=35331] (32 samples, 2.17%)</title><rect x="1018.7" y="515.0" width="25.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1021.7" y="526.0">[..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1018.7" y="499.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1021.7" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1018.7" y="483.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.7" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="1018.7" y="467.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1021.7" y="478.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.07%)</title><rect x="1018.7" y="451.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1021.7" y="462.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1018.7" y="435.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1021.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (31 samples, 2.10%)</title><rect x="1019.5" y="499.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.5" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (31 samples, 2.10%)</title><rect x="1019.5" y="483.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.5" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (31 samples, 2.10%)</title><rect x="1019.5" y="467.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.5" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23 samples, 1.56%)</title><rect x="1019.5" y="451.0" width="18.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.poll (1 samples, 0.07%)</title><rect x="1019.5" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1019.5" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1019.5" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1019.5" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1019.5" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1019.5" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1019.5" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.5" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::ThreadInVMfromNative(JavaThread*) (1 samples, 0.07%)</title><rect x="1019.5" y="323.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (22 samples, 1.49%)</title><rect x="1020.3" y="435.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 1.22%)</title><rect x="1021.1" y="419.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.20%)</title><rect x="1021.1" y="403.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.20%)</title><rect x="1021.1" y="387.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.20%)</title><rect x="1021.1" y="371.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="1021.1" y="355.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.20%)</title><rect x="1021.1" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.1" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.20%)</title><rect x="1021.1" y="323.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1024.1" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1021.1" y="307.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1024.1" y="318.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.07%)</title><rect x="1021.9" y="307.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1024.9" y="318.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="1022.7" y="307.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1025.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 1.02%)</title><rect x="1023.5" y="403.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 1.02%)</title><rect x="1023.5" y="387.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.5" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (14 samples, 0.95%)</title><rect x="1024.3" y="371.0" width="11.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1027.3" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="1024.3" y="355.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1027.3" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (1 samples, 0.07%)</title><rect x="1024.3" y="339.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1027.3" y="350.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="1025.1" y="355.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1028.1" y="366.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.75%)</title><rect x="1025.9" y="355.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1028.9" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (11 samples, 0.75%)</title><rect x="1025.9" y="339.0" width="8.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1028.9" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="1034.7" y="355.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1037.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1035.5" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1035.5" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1035.5" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1035.5" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1035.5" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1035.5" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.5" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1035.5" y="323.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1038.5" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1035.5" y="307.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1038.5" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1035.5" y="291.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1038.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="1036.3" y="419.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1036.3" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1036.3" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1036.3" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="1036.3" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.3" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1036.3" y="339.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1039.3" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="1036.3" y="323.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1039.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (8 samples, 0.54%)</title><rect x="1037.9" y="451.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (8 samples, 0.54%)</title><rect x="1037.9" y="435.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.41%)</title><rect x="1037.9" y="419.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.41%)</title><rect x="1037.9" y="403.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.41%)</title><rect x="1037.9" y="387.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.41%)</title><rect x="1037.9" y="371.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.41%)</title><rect x="1037.9" y="355.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1040.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (6 samples, 0.41%)</title><rect x="1037.9" y="339.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1040.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (6 samples, 0.41%)</title><rect x="1037.9" y="323.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 0.41%)</title><rect x="1037.9" y="307.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 0.41%)</title><rect x="1037.9" y="291.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (6 samples, 0.41%)</title><rect x="1037.9" y="275.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (6 samples, 0.41%)</title><rect x="1037.9" y="259.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (6 samples, 0.41%)</title><rect x="1037.9" y="243.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.9" y="254.0"></text>
</g>
<g>
<title>write (5 samples, 0.34%)</title><rect x="1038.7" y="227.0" width="4.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1041.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (2 samples, 0.14%)</title><rect x="1042.7" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="1042.7" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="1042.7" y="387.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.14%)</title><rect x="1042.7" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.14%)</title><rect x="1042.7" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="1042.7" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="1042.7" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="1042.7" y="307.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="318.0"></text>
</g>
<g>
<title>[worker_532 tid=38347] (11 samples, 0.75%)</title><rect x="1044.3" y="515.0" width="8.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1047.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.75%)</title><rect x="1044.3" y="499.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.75%)</title><rect x="1044.3" y="483.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.75%)</title><rect x="1044.3" y="467.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.61%)</title><rect x="1044.3" y="451.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.61%)</title><rect x="1044.3" y="435.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.47%)</title><rect x="1044.3" y="419.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.41%)</title><rect x="1045.1" y="403.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.41%)</title><rect x="1045.1" y="387.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.1" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (6 samples, 0.41%)</title><rect x="1045.1" y="371.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.1" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.41%)</title><rect x="1045.1" y="355.0" width="4.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1048.1" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (6 samples, 0.41%)</title><rect x="1045.1" y="339.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1048.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="1049.9" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1049.9" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1049.9" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1049.9" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="1049.9" y="355.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.9" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1049.9" y="339.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1052.9" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="1049.9" y="323.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1052.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="1051.5" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="1051.5" y="435.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (2 samples, 0.14%)</title><rect x="1051.5" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="1051.5" y="403.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="1051.5" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.5" y="398.0"></text>
</g>
<g>
<title>__cxx_global_var_init.4 (1 samples, 0.07%)</title><rect x="1051.5" y="371.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1054.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="1052.3" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="1052.3" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1052.3" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1052.3" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.3" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="1052.3" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.3" y="318.0"></text>
</g>
<g>
<title>[worker_533 tid=37659] (17 samples, 1.15%)</title><rect x="1053.1" y="515.0" width="13.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1056.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 1.15%)</title><rect x="1053.1" y="499.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 1.15%)</title><rect x="1053.1" y="483.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 1.15%)</title><rect x="1053.1" y="467.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.68%)</title><rect x="1053.1" y="451.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.68%)</title><rect x="1053.1" y="435.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.54%)</title><rect x="1053.1" y="419.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="1053.1" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1053.1" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1053.1" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1053.1" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1053.1" y="339.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1056.1" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1053.1" y="323.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1056.1" y="334.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1053.1" y="307.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1056.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.47%)</title><rect x="1053.9" y="403.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.47%)</title><rect x="1053.9" y="387.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.9" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (7 samples, 0.47%)</title><rect x="1053.9" y="371.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1056.9" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.47%)</title><rect x="1053.9" y="355.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.9" y="366.0"></text>
</g>
<g>
<title>ThreadBlockInVM::ThreadBlockInVM(JavaThread*) (1 samples, 0.07%)</title><rect x="1053.9" y="339.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1056.9" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (6 samples, 0.41%)</title><rect x="1054.7" y="339.0" width="4.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1057.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="1059.5" y="419.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1059.5" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1059.5" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1059.5" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="1059.5" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.5" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1059.5" y="339.0" width="1.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1062.5" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="1059.5" y="323.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1062.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (7 samples, 0.47%)</title><rect x="1061.1" y="451.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (7 samples, 0.47%)</title><rect x="1061.1" y="435.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.1" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1061.1" y="419.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1064.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.41%)</title><rect x="1061.9" y="419.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.41%)</title><rect x="1061.9" y="403.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.41%)</title><rect x="1061.9" y="387.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.41%)</title><rect x="1061.9" y="371.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.41%)</title><rect x="1061.9" y="355.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (6 samples, 0.41%)</title><rect x="1061.9" y="339.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (6 samples, 0.41%)</title><rect x="1061.9" y="323.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="1061.9" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="1061.9" y="291.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="1061.9" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1061.9" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1061.9" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.34%)</title><rect x="1062.7" y="307.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.34%)</title><rect x="1062.7" y="291.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (5 samples, 0.34%)</title><rect x="1062.7" y="275.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (5 samples, 0.34%)</title><rect x="1062.7" y="259.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (5 samples, 0.34%)</title><rect x="1062.7" y="243.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.7" y="254.0"></text>
</g>
<g>
<title>write (5 samples, 0.34%)</title><rect x="1062.7" y="227.0" width="4.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1065.7" y="238.0"></text>
</g>
<g>
<title>[worker_534 tid=86027] (4 samples, 0.27%)</title><rect x="1066.7" y="515.0" width="3.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1069.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.27%)</title><rect x="1066.7" y="499.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.27%)</title><rect x="1066.7" y="483.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1069.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.27%)</title><rect x="1066.7" y="467.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.27%)</title><rect x="1066.7" y="451.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.27%)</title><rect x="1066.7" y="435.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1066.7" y="419.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.20%)</title><rect x="1066.7" y="403.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.20%)</title><rect x="1066.7" y="387.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.7" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="1067.5" y="371.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1070.5" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1067.5" y="355.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.5" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1067.5" y="339.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1070.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1069.1" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1069.1" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1069.1" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1069.1" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1069.1" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1069.1" y="339.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1072.1" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1069.1" y="323.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1072.1" y="334.0"></text>
</g>
<g>
<title>[worker_535 tid=86031] (3 samples, 0.20%)</title><rect x="1069.9" y="515.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1072.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.20%)</title><rect x="1069.9" y="499.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.20%)</title><rect x="1069.9" y="483.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.20%)</title><rect x="1069.9" y="467.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.20%)</title><rect x="1069.9" y="451.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.20%)</title><rect x="1069.9" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1069.9" y="419.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.20%)</title><rect x="1069.9" y="403.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.20%)</title><rect x="1069.9" y="387.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.9" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.20%)</title><rect x="1069.9" y="371.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1072.9" y="382.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="1069.9" y="355.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.9" y="366.0"></text>
</g>
<g>
<title>ThreadService::is_thread_monitoring_contention() (1 samples, 0.07%)</title><rect x="1069.9" y="339.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.9" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1070.7" y="355.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1073.7" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1070.7" y="339.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1073.7" y="350.0"></text>
</g>
<g>
<title>[worker_536 tid=85371] (8 samples, 0.54%)</title><rect x="1072.3" y="515.0" width="6.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1075.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.54%)</title><rect x="1072.3" y="499.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.54%)</title><rect x="1072.3" y="483.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.54%)</title><rect x="1072.3" y="467.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.41%)</title><rect x="1072.3" y="451.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.41%)</title><rect x="1072.3" y="435.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.41%)</title><rect x="1072.3" y="419.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.41%)</title><rect x="1072.3" y="403.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.41%)</title><rect x="1072.3" y="387.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.3" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (6 samples, 0.41%)</title><rect x="1072.3" y="371.0" width="4.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1075.3" y="382.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (1 samples, 0.07%)</title><rect x="1072.3" y="355.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1075.3" y="366.0"></text>
</g>
<g>
<title>JfrEventSetting::is_enabled(JfrEventId) (1 samples, 0.07%)</title><rect x="1072.3" y="339.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1075.3" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.34%)</title><rect x="1073.1" y="355.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.1" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.34%)</title><rect x="1073.1" y="339.0" width="4.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1076.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="1077.1" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1080.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="1077.1" y="435.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="1077.1" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1080.1" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1077.1" y="403.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.1" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1077.1" y="387.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1080.1" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="1077.1" y="371.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1080.1" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.07%)</title><rect x="1077.1" y="355.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="1077.9" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="1077.9" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="1077.9" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="1077.9" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.9" y="382.0"></text>
</g>
<g>
<title>[worker_537 tid=32639] (11 samples, 0.75%)</title><rect x="1078.7" y="515.0" width="8.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1081.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.75%)</title><rect x="1078.7" y="499.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.75%)</title><rect x="1078.7" y="483.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1081.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.75%)</title><rect x="1078.7" y="467.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.54%)</title><rect x="1078.7" y="451.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1081.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.54%)</title><rect x="1078.7" y="435.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.54%)</title><rect x="1078.7" y="419.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="1078.7" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1081.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1078.7" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1078.7" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1078.7" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.7" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1078.7" y="339.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1081.7" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1078.7" y="323.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.7" y="334.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1078.7" y="307.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1081.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="1079.5" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1079.5" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1079.5" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1079.5" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1079.5" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.5" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1079.5" y="323.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1082.5" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1079.5" y="307.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1082.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.41%)</title><rect x="1080.3" y="403.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.41%)</title><rect x="1080.3" y="387.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.3" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (5 samples, 0.34%)</title><rect x="1081.1" y="371.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1084.1" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.34%)</title><rect x="1081.1" y="355.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1084.1" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.34%)</title><rect x="1081.1" y="339.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1084.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (3 samples, 0.20%)</title><rect x="1085.1" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (3 samples, 0.20%)</title><rect x="1085.1" y="435.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="1085.1" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.14%)</title><rect x="1085.1" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="1085.1" y="387.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="1085.1" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.14%)</title><rect x="1085.1" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.1" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.14%)</title><rect x="1085.1" y="339.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.14%)</title><rect x="1085.1" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1085.1" y="307.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1085.1" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="1085.1" y="275.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="1085.1" y="259.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="1085.1" y="243.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.1" y="254.0"></text>
</g>
<g>
<title>write (2 samples, 0.14%)</title><rect x="1085.1" y="227.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1088.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (1 samples, 0.07%)</title><rect x="1086.7" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (1 samples, 0.07%)</title><rect x="1086.7" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.07%)</title><rect x="1086.7" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.07%)</title><rect x="1086.7" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="1086.7" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1086.7" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1086.7" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.7" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="1086.7" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.7" y="318.0"></text>
</g>
<g>
<title>[worker_538 tid=86347] (24 samples, 1.63%)</title><rect x="1087.5" y="515.0" width="19.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1090.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (24 samples, 1.63%)</title><rect x="1087.5" y="499.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (24 samples, 1.63%)</title><rect x="1087.5" y="483.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (24 samples, 1.63%)</title><rect x="1087.5" y="467.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (17 samples, 1.15%)</title><rect x="1087.5" y="451.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (17 samples, 1.15%)</title><rect x="1087.5" y="435.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.95%)</title><rect x="1087.5" y="419.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="1087.5" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1087.5" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1087.5" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1087.5" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1087.5" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.5" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1087.5" y="323.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1090.5" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1087.5" y="307.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1090.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.88%)</title><rect x="1088.3" y="403.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.88%)</title><rect x="1088.3" y="387.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.3" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (13 samples, 0.88%)</title><rect x="1088.3" y="371.0" width="10.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1091.3" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.88%)</title><rect x="1088.3" y="355.0" width="10.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1091.3" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (11 samples, 0.75%)</title><rect x="1088.3" y="339.0" width="8.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1091.3" y="350.0"></text>
</g>
<g>
<title>_pthread_cond_wait (2 samples, 0.14%)</title><rect x="1097.1" y="339.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1100.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1098.7" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1098.7" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1098.7" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1098.7" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1098.7" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1098.7" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1098.7" y="323.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1101.7" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1098.7" y="307.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.7" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1098.7" y="291.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1101.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="1099.5" y="419.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1099.5" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1099.5" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1099.5" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1100.3" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.3" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1100.3" y="339.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1103.3" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1100.3" y="323.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1103.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (7 samples, 0.47%)</title><rect x="1101.1" y="451.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (7 samples, 0.47%)</title><rect x="1101.1" y="435.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.34%)</title><rect x="1101.1" y="419.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.34%)</title><rect x="1101.1" y="403.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.34%)</title><rect x="1101.1" y="387.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.34%)</title><rect x="1101.1" y="371.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.34%)</title><rect x="1101.1" y="355.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.1" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (5 samples, 0.34%)</title><rect x="1101.1" y="339.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (5 samples, 0.34%)</title><rect x="1101.1" y="323.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.34%)</title><rect x="1101.1" y="307.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.34%)</title><rect x="1101.1" y="291.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (5 samples, 0.34%)</title><rect x="1101.1" y="275.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (5 samples, 0.34%)</title><rect x="1101.1" y="259.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (5 samples, 0.34%)</title><rect x="1101.1" y="243.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.1" y="254.0"></text>
</g>
<g>
<title>write (4 samples, 0.27%)</title><rect x="1101.9" y="227.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1104.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (2 samples, 0.14%)</title><rect x="1105.1" y="419.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="1105.1" y="403.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="1105.1" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.14%)</title><rect x="1105.1" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="1105.9" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1105.9" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1105.9" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.9" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="1105.9" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.9" y="318.0"></text>
</g>
<g>
<title>[worker_539 tid=36671] (16 samples, 1.09%)</title><rect x="1106.7" y="515.0" width="12.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1109.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 1.09%)</title><rect x="1106.7" y="499.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 1.09%)</title><rect x="1106.7" y="483.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 1.09%)</title><rect x="1106.7" y="467.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 0.88%)</title><rect x="1106.7" y="451.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13 samples, 0.88%)</title><rect x="1106.7" y="435.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.75%)</title><rect x="1107.5" y="419.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.75%)</title><rect x="1107.5" y="403.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.75%)</title><rect x="1107.5" y="387.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.5" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (9 samples, 0.61%)</title><rect x="1109.1" y="371.0" width="7.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1112.1" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.61%)</title><rect x="1109.1" y="355.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.1" y="366.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="1109.1" y="339.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.1" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 0.54%)</title><rect x="1109.9" y="339.0" width="6.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1112.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1116.4" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1116.4" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1116.4" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1116.4" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1116.4" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1116.4" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.4" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1116.4" y="323.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1119.4" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1116.4" y="307.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.4" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1116.4" y="291.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1119.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (3 samples, 0.20%)</title><rect x="1117.2" y="451.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (3 samples, 0.20%)</title><rect x="1117.2" y="435.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.20%)</title><rect x="1117.2" y="419.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.20%)</title><rect x="1117.2" y="403.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1117.2" y="387.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1117.2" y="371.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.20%)</title><rect x="1117.2" y="355.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.20%)</title><rect x="1117.2" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.20%)</title><rect x="1117.2" y="323.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="1117.2" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="1117.2" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="1117.2" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1117.2" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1117.2" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1118.0" y="307.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1118.0" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="1118.0" y="275.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="1118.0" y="259.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="1118.0" y="243.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.0" y="254.0"></text>
</g>
<g>
<title>write (2 samples, 0.14%)</title><rect x="1118.0" y="227.0" width="1.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1121.0" y="238.0"></text>
</g>
<g>
<title>[worker_540 tid=38351] (6 samples, 0.41%)</title><rect x="1119.6" y="515.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1122.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.41%)</title><rect x="1119.6" y="499.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.41%)</title><rect x="1119.6" y="483.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.41%)</title><rect x="1119.6" y="467.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.27%)</title><rect x="1119.6" y="451.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.27%)</title><rect x="1119.6" y="435.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1119.6" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="1119.6" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1119.6" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1119.6" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1119.6" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1119.6" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.6" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1119.6" y="323.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1122.6" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1119.6" y="307.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1122.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="1120.4" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="1120.4" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="1120.4" y="371.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1123.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1120.4" y="355.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1120.4" y="339.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1123.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1122.0" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1122.0" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1122.0" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1122.0" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1122.0" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1122.0" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1122.0" y="323.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1125.0" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1122.0" y="307.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1125.0" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1122.0" y="291.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1125.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="1122.8" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="1122.8" y="435.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="1122.8" y="419.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.14%)</title><rect x="1122.8" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="1122.8" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="1122.8" y="371.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.14%)</title><rect x="1122.8" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.14%)</title><rect x="1122.8" y="339.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.14%)</title><rect x="1122.8" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1122.8" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1122.8" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="1122.8" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="1122.8" y="259.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="1122.8" y="243.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.8" y="254.0"></text>
</g>
<g>
<title>write (2 samples, 0.14%)</title><rect x="1122.8" y="227.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1125.8" y="238.0"></text>
</g>
<g>
<title>[worker_541 tid=85019] (2 samples, 0.14%)</title><rect x="1124.4" y="515.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1127.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.14%)</title><rect x="1124.4" y="499.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.14%)</title><rect x="1124.4" y="483.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.14%)</title><rect x="1124.4" y="467.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="1124.4" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.14%)</title><rect x="1124.4" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.14%)</title><rect x="1124.4" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="1124.4" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="1124.4" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="1124.4" y="371.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1127.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1124.4" y="355.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1127.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1124.4" y="339.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1127.4" y="350.0"></text>
</g>
<g>
<title>[worker_542 tid=30219] (20 samples, 1.36%)</title><rect x="1126.0" y="515.0" width="16.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1129.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 1.36%)</title><rect x="1126.0" y="499.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 1.36%)</title><rect x="1126.0" y="483.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 1.36%)</title><rect x="1126.0" y="467.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 1.02%)</title><rect x="1126.0" y="451.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 1.02%)</title><rect x="1126.0" y="435.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.95%)</title><rect x="1126.0" y="419.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.14%)</title><rect x="1126.0" y="403.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1126.0" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1126.0" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1126.0" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="1126.0" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1126.0" y="323.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1129.0" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.14%)</title><rect x="1126.0" y="307.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1129.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.81%)</title><rect x="1127.6" y="403.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.81%)</title><rect x="1127.6" y="387.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (12 samples, 0.81%)</title><rect x="1127.6" y="371.0" width="9.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1130.6" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="1127.6" y="355.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.6" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (1 samples, 0.07%)</title><rect x="1127.6" y="339.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.6" y="350.0"></text>
</g>
<g>
<title>int OrderAccess::load_acquire&lt;int&gt;(int const volatile*) (1 samples, 0.07%)</title><rect x="1127.6" y="323.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1130.6" y="334.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, OrderAccess::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (1 samples, 0.07%)</title><rect x="1127.6" y="307.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.6" y="318.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.07%)</title><rect x="1127.6" y="291.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.6" y="302.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.75%)</title><rect x="1128.4" y="355.0" width="8.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (11 samples, 0.75%)</title><rect x="1128.4" y="339.0" width="8.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1131.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1137.2" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1137.2" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1137.2" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1137.2" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1137.2" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.2" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1137.2" y="339.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1140.2" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1137.2" y="323.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1140.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (5 samples, 0.34%)</title><rect x="1138.0" y="451.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (5 samples, 0.34%)</title><rect x="1138.0" y="435.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.20%)</title><rect x="1138.0" y="419.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.20%)</title><rect x="1138.0" y="403.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1138.0" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1138.0" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.20%)</title><rect x="1138.0" y="355.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.20%)</title><rect x="1138.0" y="339.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.20%)</title><rect x="1138.0" y="323.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1138.0" y="307.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1138.0" y="291.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 0.20%)</title><rect x="1138.0" y="275.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (3 samples, 0.20%)</title><rect x="1138.0" y="259.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.20%)</title><rect x="1138.0" y="243.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.0" y="254.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="1138.0" y="227.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1141.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/TurboDAO.upsert (2 samples, 0.14%)</title><rect x="1140.4" y="419.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/suhova/MemTable.upsert (2 samples, 0.14%)</title><rect x="1140.4" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.14%)</title><rect x="1140.4" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.14%)</title><rect x="1140.4" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="1141.2" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1141.2" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1141.2" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.2" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="1141.2" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.2" y="318.0"></text>
</g>
<g>
<title>[worker_544 tid=34563] (1 samples, 0.07%)</title><rect x="1142.0" y="515.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1145.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.07%)</title><rect x="1142.0" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.07%)</title><rect x="1142.0" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.07%)</title><rect x="1142.0" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (1 samples, 0.07%)</title><rect x="1142.0" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (1 samples, 0.07%)</title><rect x="1142.0" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="1142.0" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="1142.0" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1142.0" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1142.0" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="1142.0" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.07%)</title><rect x="1142.0" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.07%)</title><rect x="1142.0" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="1142.0" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="1142.0" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.07%)</title><rect x="1142.0" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.07%)</title><rect x="1142.0" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.07%)</title><rect x="1142.0" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.0" y="254.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="1142.0" y="227.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1145.0" y="238.0"></text>
</g>
<g>
<title>[worker_545 tid=32335] (4 samples, 0.27%)</title><rect x="1142.8" y="515.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1145.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.27%)</title><rect x="1142.8" y="499.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.27%)</title><rect x="1142.8" y="483.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.27%)</title><rect x="1142.8" y="467.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.20%)</title><rect x="1142.8" y="451.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.20%)</title><rect x="1142.8" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1142.8" y="419.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.20%)</title><rect x="1142.8" y="403.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.20%)</title><rect x="1142.8" y="387.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.8" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.20%)</title><rect x="1142.8" y="371.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1145.8" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.20%)</title><rect x="1142.8" y="355.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.8" y="366.0"></text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.07%)</title><rect x="1142.8" y="339.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.8" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1143.6" y="339.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1146.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (1 samples, 0.07%)</title><rect x="1145.2" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (1 samples, 0.07%)</title><rect x="1145.2" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="1145.2" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="1145.2" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1145.2" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1145.2" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="1145.2" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.07%)</title><rect x="1145.2" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.07%)</title><rect x="1145.2" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="1145.2" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="1145.2" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="1145.2" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1145.2" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1148.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1145.2" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.2" y="254.0"></text>
</g>
<g>
<title>[worker_546 tid=36379] (3 samples, 0.20%)</title><rect x="1146.0" y="515.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1149.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.20%)</title><rect x="1146.0" y="499.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.20%)</title><rect x="1146.0" y="483.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.20%)</title><rect x="1146.0" y="467.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="1146.0" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.14%)</title><rect x="1146.0" y="435.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.14%)</title><rect x="1146.0" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="1146.0" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="1146.0" y="387.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="1146.0" y="371.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1149.0" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1146.0" y="355.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1146.0" y="339.0" width="1.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1149.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (1 samples, 0.07%)</title><rect x="1147.6" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (1 samples, 0.07%)</title><rect x="1147.6" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="1147.6" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="1147.6" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1147.6" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1147.6" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="1147.6" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.07%)</title><rect x="1147.6" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.07%)</title><rect x="1147.6" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="1147.6" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="1147.6" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.07%)</title><rect x="1147.6" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.07%)</title><rect x="1147.6" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.07%)</title><rect x="1147.6" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.6" y="254.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="1147.6" y="227.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1150.6" y="238.0"></text>
</g>
<g>
<title>[worker_547 tid=85379] (3 samples, 0.20%)</title><rect x="1148.4" y="515.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1151.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.20%)</title><rect x="1148.4" y="499.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.20%)</title><rect x="1148.4" y="483.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.20%)</title><rect x="1148.4" y="467.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.20%)</title><rect x="1148.4" y="451.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.20%)</title><rect x="1148.4" y="435.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="1148.4" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1148.4" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1148.4" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1148.4" y="371.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1151.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1148.4" y="355.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.4" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1148.4" y="339.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1151.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="1149.2" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="1149.2" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.07%)</title><rect x="1149.2" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="1149.2" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1149.2" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1149.2" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.2" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1149.2" y="323.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1152.2" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1149.2" y="307.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.2" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1149.2" y="291.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1152.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1150.0" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1150.0" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1150.0" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1150.0" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1150.0" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.0" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1150.0" y="339.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1153.0" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1150.0" y="323.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1153.0" y="334.0"></text>
</g>
<g>
<title>[worker_548 tid=31051] (16 samples, 1.09%)</title><rect x="1150.8" y="515.0" width="12.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1153.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 1.09%)</title><rect x="1150.8" y="499.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 1.09%)</title><rect x="1150.8" y="483.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 1.09%)</title><rect x="1150.8" y="467.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.95%)</title><rect x="1150.8" y="451.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.95%)</title><rect x="1150.8" y="435.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.88%)</title><rect x="1150.8" y="419.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="1150.8" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1150.8" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1150.8" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1150.8" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1150.8" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1150.8" y="323.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1153.8" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1150.8" y="307.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1153.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.81%)</title><rect x="1151.6" y="403.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.81%)</title><rect x="1151.6" y="387.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.6" y="398.0"></text>
</g>
<g>
<title>EventThreadPark::EventThreadPark(EventStartTime) (1 samples, 0.07%)</title><rect x="1152.4" y="371.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (10 samples, 0.68%)</title><rect x="1153.2" y="371.0" width="8.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1156.2" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.68%)</title><rect x="1153.2" y="355.0" width="8.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 0.68%)</title><rect x="1153.2" y="339.0" width="8.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1156.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1161.2" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1161.2" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1161.2" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1161.2" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="1162.0" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="1162.0" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="1162.0" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.14%)</title><rect x="1162.0" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="1162.0" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="1162.0" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.14%)</title><rect x="1162.0" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (2 samples, 0.14%)</title><rect x="1162.0" y="339.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1165.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.14%)</title><rect x="1162.0" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1162.0" y="307.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.14%)</title><rect x="1162.0" y="291.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1165.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (2 samples, 0.14%)</title><rect x="1162.0" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 0.14%)</title><rect x="1162.0" y="259.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.14%)</title><rect x="1162.0" y="243.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.0" y="254.0"></text>
</g>
<g>
<title>write (2 samples, 0.14%)</title><rect x="1162.0" y="227.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1165.0" y="238.0"></text>
</g>
<g>
<title>[worker_549 tid=85027] (8 samples, 0.54%)</title><rect x="1163.6" y="515.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1166.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 0.54%)</title><rect x="1163.6" y="499.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8 samples, 0.54%)</title><rect x="1163.6" y="483.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8 samples, 0.54%)</title><rect x="1163.6" y="467.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.34%)</title><rect x="1163.6" y="451.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.34%)</title><rect x="1163.6" y="435.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1163.6" y="419.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.20%)</title><rect x="1163.6" y="403.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.20%)</title><rect x="1163.6" y="387.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.20%)</title><rect x="1163.6" y="371.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1166.6" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.20%)</title><rect x="1163.6" y="355.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.6" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.20%)</title><rect x="1163.6" y="339.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1166.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="1166.0" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="1166.0" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1169.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="1166.0" y="387.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="1166.0" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="1166.0" y="355.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.0" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (2 samples, 0.14%)</title><rect x="1166.0" y="339.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1169.0" y="350.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_with_handler(JavaThread*) (1 samples, 0.07%)</title><rect x="1166.0" y="323.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.0" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="1166.8" y="323.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.8" y="334.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.07%)</title><rect x="1166.8" y="307.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.8" y="318.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.07%)</title><rect x="1166.8" y="291.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.8" y="302.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="1166.8" y="275.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.8" y="286.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.07%)</title><rect x="1166.8" y="259.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.8" y="270.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (1 samples, 0.07%)</title><rect x="1166.8" y="243.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (3 samples, 0.20%)</title><rect x="1167.6" y="451.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (3 samples, 0.20%)</title><rect x="1167.6" y="435.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.20%)</title><rect x="1167.6" y="419.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.20%)</title><rect x="1167.6" y="403.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1167.6" y="387.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1167.6" y="371.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.20%)</title><rect x="1167.6" y="355.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.20%)</title><rect x="1167.6" y="339.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.20%)</title><rect x="1167.6" y="323.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1170.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1167.6" y="307.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1167.6" y="291.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 0.20%)</title><rect x="1167.6" y="275.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (3 samples, 0.20%)</title><rect x="1167.6" y="259.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.20%)</title><rect x="1167.6" y="243.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.6" y="254.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="1167.6" y="227.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1170.6" y="238.0"></text>
</g>
<g>
<title>[worker_550 tid=36031] (1 samples, 0.07%)</title><rect x="1170.0" y="515.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1173.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.07%)</title><rect x="1170.0" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.07%)</title><rect x="1170.0" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.07%)</title><rect x="1170.0" y="467.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1173.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.07%)</title><rect x="1170.0" y="451.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.07%)</title><rect x="1170.0" y="435.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="1170.0" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1173.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1170.0" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1170.0" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (1 samples, 0.07%)</title><rect x="1170.0" y="371.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1173.0" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="1170.0" y="355.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1170.0" y="339.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1173.0" y="350.0"></text>
</g>
<g>
<title>[worker_552 tid=43555] (4 samples, 0.27%)</title><rect x="1170.8" y="515.0" width="3.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1173.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.27%)</title><rect x="1170.8" y="499.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.27%)</title><rect x="1170.8" y="483.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.27%)</title><rect x="1170.8" y="467.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.27%)</title><rect x="1170.8" y="451.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.27%)</title><rect x="1170.8" y="435.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.27%)</title><rect x="1170.8" y="419.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="1170.8" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1170.8" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1170.8" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1170.8" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1170.8" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1170.8" y="323.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1173.8" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1170.8" y="307.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1173.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.20%)</title><rect x="1171.6" y="403.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.20%)</title><rect x="1171.6" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.20%)</title><rect x="1171.6" y="371.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1174.6" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.20%)</title><rect x="1171.6" y="355.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.6" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.20%)</title><rect x="1171.6" y="339.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1174.6" y="350.0"></text>
</g>
<g>
<title>[worker_553 tid=29447] (11 samples, 0.75%)</title><rect x="1174.0" y="515.0" width="8.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1177.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 0.75%)</title><rect x="1174.0" y="499.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 0.75%)</title><rect x="1174.0" y="483.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 0.75%)</title><rect x="1174.0" y="467.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.61%)</title><rect x="1174.0" y="451.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.61%)</title><rect x="1174.0" y="435.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.54%)</title><rect x="1174.0" y="419.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.54%)</title><rect x="1174.0" y="403.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.54%)</title><rect x="1174.0" y="387.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (8 samples, 0.54%)</title><rect x="1174.0" y="371.0" width="6.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1177.0" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.54%)</title><rect x="1174.0" y="355.0" width="6.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 0.54%)</title><rect x="1174.0" y="339.0" width="6.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1177.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1180.4" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1180.4" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1180.4" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1180.4" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1180.4" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.4" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1180.4" y="339.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1183.4" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1180.4" y="323.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1183.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (2 samples, 0.14%)</title><rect x="1181.2" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (2 samples, 0.14%)</title><rect x="1181.2" y="435.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="1181.2" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.14%)</title><rect x="1181.2" y="403.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.07%)</title><rect x="1181.2" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1182.0" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1182.0" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="1182.0" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.07%)</title><rect x="1182.0" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.07%)</title><rect x="1182.0" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="1182.0" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.07%)</title><rect x="1182.0" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.07%)</title><rect x="1182.0" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.07%)</title><rect x="1182.0" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.07%)</title><rect x="1182.0" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.0" y="254.0"></text>
</g>
<g>
<title>[worker_554 tid=36675] (3 samples, 0.20%)</title><rect x="1182.8" y="515.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1185.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.20%)</title><rect x="1182.8" y="499.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1185.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.20%)</title><rect x="1182.8" y="483.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.20%)</title><rect x="1182.8" y="467.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.20%)</title><rect x="1182.8" y="451.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.20%)</title><rect x="1182.8" y="435.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1182.8" y="419.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="1182.8" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1182.8" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1182.8" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1182.8" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1182.8" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.07%)</title><rect x="1182.8" y="323.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1185.8" y="334.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="1182.8" y="307.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1185.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="1183.6" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="1183.6" y="387.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (2 samples, 0.14%)</title><rect x="1183.6" y="371.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1186.6" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1183.6" y="355.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.6" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.14%)</title><rect x="1183.6" y="339.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1186.6" y="350.0"></text>
</g>
<g>
<title>[worker_555 tid=84543] (3 samples, 0.20%)</title><rect x="1185.2" y="515.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1188.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.20%)</title><rect x="1185.2" y="499.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.20%)</title><rect x="1185.2" y="483.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.20%)</title><rect x="1185.2" y="467.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.20%)</title><rect x="1185.2" y="451.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.20%)</title><rect x="1185.2" y="435.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.20%)</title><rect x="1185.2" y="419.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.20%)</title><rect x="1185.2" y="403.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.20%)</title><rect x="1185.2" y="387.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.2" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.20%)</title><rect x="1185.2" y="371.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1188.2" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.20%)</title><rect x="1185.2" y="355.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.20%)</title><rect x="1185.2" y="339.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1188.2" y="350.0"></text>
</g>
<g>
<title>[worker_556 tid=46371] (3 samples, 0.20%)</title><rect x="1187.6" y="515.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1190.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.20%)</title><rect x="1187.6" y="499.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.20%)</title><rect x="1187.6" y="483.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.20%)</title><rect x="1187.6" y="467.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1190.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService$$Lambda$71/1445503855.run (3 samples, 0.20%)</title><rect x="1187.6" y="451.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/suhova/MoribundService.lambda$put$1 (3 samples, 0.20%)</title><rect x="1187.6" y="435.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.20%)</title><rect x="1187.6" y="419.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.20%)</title><rect x="1187.6" y="403.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1187.6" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.20%)</title><rect x="1187.6" y="371.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.20%)</title><rect x="1187.6" y="355.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.20%)</title><rect x="1187.6" y="339.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.20%)</title><rect x="1187.6" y="323.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1187.6" y="307.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.20%)</title><rect x="1187.6" y="291.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 0.20%)</title><rect x="1187.6" y="275.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (3 samples, 0.20%)</title><rect x="1187.6" y="259.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.20%)</title><rect x="1187.6" y="243.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.6" y="254.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="1187.6" y="227.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.6" y="238.0"></text>
</g>
</g>
</svg>
