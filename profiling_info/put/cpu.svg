<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (121 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[unknown] (1 samples, 0.83%)</title><rect x="10.0" y="547.0" width="9.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.83%)</title><rect x="10.0" y="531.0" width="9.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.83%)</title><rect x="19.8" y="547.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.83%)</title><rect x="19.8" y="531.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.83%)</title><rect x="19.8" y="515.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.8" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1 samples, 0.83%)</title><rect x="19.8" y="499.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.8" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.83%)</title><rect x="19.8" y="483.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.8" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$90/453267912.run (1 samples, 0.83%)</title><rect x="19.8" y="467.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1 samples, 0.83%)</title><rect x="19.8" y="451.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.8" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1 samples, 0.83%)</title><rect x="19.8" y="435.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.8" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1 samples, 0.83%)</title><rect x="19.8" y="419.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="430.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1 samples, 0.83%)</title><rect x="19.8" y="403.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.8" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.83%)</title><rect x="19.8" y="387.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.8" y="398.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1 samples, 0.83%)</title><rect x="19.8" y="371.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.8" y="382.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1 samples, 0.83%)</title><rect x="19.8" y="355.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.8" y="366.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1 samples, 0.83%)</title><rect x="19.8" y="339.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.8" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (1 samples, 0.83%)</title><rect x="19.8" y="323.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.83%)</title><rect x="19.8" y="307.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.83%)</title><rect x="19.8" y="291.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.83%)</title><rect x="19.8" y="275.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.83%)</title><rect x="19.8" y="259.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.8" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.83%)</title><rect x="19.8" y="243.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.83%)</title><rect x="19.8" y="227.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.83%)</title><rect x="19.8" y="211.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.83%)</title><rect x="19.8" y="195.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.83%)</title><rect x="19.8" y="179.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.8" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.83%)</title><rect x="19.8" y="163.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.8" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.83%)</title><rect x="19.8" y="147.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.8" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.83%)</title><rect x="19.8" y="131.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.83%)</title><rect x="19.8" y="115.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.83%)</title><rect x="19.8" y="99.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.8" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.83%)</title><rect x="19.8" y="83.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.83%)</title><rect x="19.8" y="67.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.8" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.83%)</title><rect x="19.8" y="51.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.8" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.83%)</title><rect x="19.8" y="35.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.8" y="46.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (96 samples, 79.34%)</title><rect x="29.5" y="547.0" width="936.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.5" y="558.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.83%)</title><rect x="29.5" y="531.0" width="9.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="32.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 8.26%)</title><rect x="39.3" y="531.0" width="97.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.3" y="542.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 8.26%)</title><rect x="39.3" y="515.0" width="97.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.3" y="526.0">one/nio/net..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.83%)</title><rect x="58.8" y="499.0" width="9.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="61.8" y="510.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 4.13%)</title><rect x="68.5" y="499.0" width="48.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="71.5" y="510.0">cloc..</text>
</g>
<g>
<title>epoll_wait (2 samples, 1.65%)</title><rect x="117.3" y="499.0" width="19.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="120.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 70.25%)</title><rect x="136.8" y="531.0" width="828.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.8" y="542.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (85 samples, 70.25%)</title><rect x="136.8" y="515.0" width="828.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.8" y="526.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (78 samples, 64.46%)</title><rect x="136.8" y="499.0" width="760.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.8" y="510.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (70 samples, 57.85%)</title><rect x="136.8" y="483.0" width="682.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.8" y="494.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>java/util/LinkedList.addLast (1 samples, 0.83%)</title><rect x="136.8" y="467.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (69 samples, 57.02%)</title><rect x="146.5" y="467.0" width="672.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.5" y="478.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (68 samples, 56.20%)</title><rect x="146.5" y="451.0" width="663.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.5" y="462.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 7.44%)</title><rect x="156.3" y="435.0" width="87.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.3" y="446.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.83%)</title><rect x="166.0" y="419.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.83%)</title><rect x="166.0" y="403.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.83%)</title><rect x="166.0" y="387.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 4.13%)</title><rect x="175.8" y="419.0" width="48.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.8" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 2.48%)</title><rect x="175.8" y="403.0" width="29.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.8" y="414.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.83%)</title><rect x="195.3" y="387.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.83%)</title><rect x="195.3" y="371.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.83%)</title><rect x="195.3" y="355.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 1.65%)</title><rect x="205.0" y="403.0" width="19.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 1.65%)</title><rect x="205.0" y="387.0" width="19.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 1.65%)</title><rect x="205.0" y="371.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.83%)</title><rect x="214.8" y="355.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.8" y="366.0"></text>
</g>
<g>
<title>__send (1 samples, 0.83%)</title><rect x="214.8" y="339.0" width="9.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="217.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 1.65%)</title><rect x="224.5" y="419.0" width="19.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 1.65%)</title><rect x="244.0" y="435.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 1.65%)</title><rect x="244.0" y="419.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 1.65%)</title><rect x="244.0" y="403.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MyService.put (56 samples, 46.28%)</title><rect x="263.6" y="435.0" width="546.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.6" y="446.0">ru/mail/polis/service/re1nex/MyService.put</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (30 samples, 24.79%)</title><rect x="283.1" y="419.0" width="292.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.1" y="430.0">ch/qos/logback/classic/Logger.error</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (29 samples, 23.97%)</title><rect x="283.1" y="403.0" width="282.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.1" y="414.0">ch/qos/logback/classic/Logger.filterAn..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (28 samples, 23.14%)</title><rect x="292.8" y="387.0" width="273.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.8" y="398.0">ch/qos/logback/classic/Logger.buildLo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (26 samples, 21.49%)</title><rect x="292.8" y="371.0" width="253.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.8" y="382.0">ch/qos/logback/classic/Logger.call..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (26 samples, 21.49%)</title><rect x="292.8" y="355.0" width="253.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.8" y="366.0">ch/qos/logback/classic/Logger.appe..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (26 samples, 21.49%)</title><rect x="292.8" y="339.0" width="253.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.8" y="350.0">ch/qos/logback/core/spi/AppenderAt..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (26 samples, 21.49%)</title><rect x="292.8" y="323.0" width="253.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.8" y="334.0">ch/qos/logback/core/Unsynchronized..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (23 samples, 19.01%)</title><rect x="292.8" y="307.0" width="224.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.8" y="318.0">ch/qos/logback/core/OutputStre..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (23 samples, 19.01%)</title><rect x="292.8" y="291.0" width="224.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.8" y="302.0">ch/qos/logback/core/OutputStre..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 4.13%)</title><rect x="292.8" y="275.0" width="48.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.8" y="286.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 2.48%)</title><rect x="292.8" y="259.0" width="29.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.8" y="270.0">ch..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 2.48%)</title><rect x="292.8" y="243.0" width="29.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.8" y="254.0">or..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 2.48%)</title><rect x="292.8" y="227.0" width="29.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.8" y="238.0">or..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 2.48%)</title><rect x="292.8" y="211.0" width="29.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.8" y="222.0">or..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 2.48%)</title><rect x="292.8" y="195.0" width="29.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.8" y="206.0">or..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 2.48%)</title><rect x="292.8" y="179.0" width="29.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.8" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 2.48%)</title><rect x="292.8" y="163.0" width="29.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.8" y="174.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 2.48%)</title><rect x="292.8" y="147.0" width="29.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.8" y="158.0">ja..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (2 samples, 1.65%)</title><rect x="322.1" y="259.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.83%)</title><rect x="331.8" y="243.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.8" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.83%)</title><rect x="331.8" y="227.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.83%)</title><rect x="331.8" y="211.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.83%)</title><rect x="331.8" y="195.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.8" y="206.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.83%)</title><rect x="331.8" y="179.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.83%)</title><rect x="331.8" y="163.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.83%)</title><rect x="331.8" y="147.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.8" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (10 samples, 8.26%)</title><rect x="341.6" y="275.0" width="97.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.6" y="286.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (10 samples, 8.26%)</title><rect x="341.6" y="259.0" width="97.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.6" y="270.0">ch/qos/logb..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (10 samples, 8.26%)</title><rect x="341.6" y="243.0" width="97.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.6" y="254.0">java/io/Fil..</text>
</g>
<g>
<title>java/io/PrintStream.write (10 samples, 8.26%)</title><rect x="341.6" y="227.0" width="97.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.6" y="238.0">java/io/Pri..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (10 samples, 8.26%)</title><rect x="341.6" y="211.0" width="97.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.6" y="222.0">java/io/Buf..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (10 samples, 8.26%)</title><rect x="341.6" y="195.0" width="97.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.6" y="206.0">java/io/Buf..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (10 samples, 8.26%)</title><rect x="341.6" y="179.0" width="97.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.6" y="190.0">java/io/Fil..</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (10 samples, 8.26%)</title><rect x="341.6" y="163.0" width="97.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.6" y="174.0">java/io/Fil..</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (8 samples, 6.61%)</title><rect x="361.1" y="147.0" width="78.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="364.1" y="158.0">Java_java..</text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.83%)</title><rect x="370.8" y="131.0" width="9.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="373.8" y="142.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.83%)</title><rect x="380.6" y="131.0" width="9.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="383.6" y="142.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 4.13%)</title><rect x="390.3" y="131.0" width="48.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="393.3" y="142.0">writ..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.83%)</title><rect x="400.1" y="115.0" width="9.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="403.1" y="126.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.83%)</title><rect x="409.8" y="115.0" width="9.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="412.8" y="126.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.83%)</title><rect x="419.6" y="115.0" width="9.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="422.6" y="126.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.83%)</title><rect x="419.6" y="99.0" width="9.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="422.6" y="110.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.83%)</title><rect x="429.3" y="115.0" width="9.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="432.3" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (8 samples, 6.61%)</title><rect x="439.1" y="275.0" width="78.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.1" y="286.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (8 samples, 6.61%)</title><rect x="439.1" y="259.0" width="78.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.1" y="270.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (8 samples, 6.61%)</title><rect x="439.1" y="243.0" width="78.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.1" y="254.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (4 samples, 3.31%)</title><rect x="439.1" y="227.0" width="39.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.1" y="238.0">ch/..</text>
</g>
<g>
<title>java/text/DateFormat.format (4 samples, 3.31%)</title><rect x="439.1" y="211.0" width="39.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.1" y="222.0">jav..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (4 samples, 3.31%)</title><rect x="439.1" y="195.0" width="39.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.1" y="206.0">jav..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (4 samples, 3.31%)</title><rect x="439.1" y="179.0" width="39.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.1" y="190.0">jav..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 1.65%)</title><rect x="439.1" y="163.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (1 samples, 0.83%)</title><rect x="439.1" y="147.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.1" y="158.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.83%)</title><rect x="448.8" y="147.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.83%)</title><rect x="448.8" y="131.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.8" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.83%)</title><rect x="448.8" y="115.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.8" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.83%)</title><rect x="448.8" y="99.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.8" y="110.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (2 samples, 1.65%)</title><rect x="458.6" y="163.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.6" y="174.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (2 samples, 1.65%)</title><rect x="458.6" y="147.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.6" y="158.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 1.65%)</title><rect x="458.6" y="131.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.6" y="142.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 0.83%)</title><rect x="458.6" y="115.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.6" y="126.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.83%)</title><rect x="458.6" y="99.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.6" y="110.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.83%)</title><rect x="468.3" y="115.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.3" y="126.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.83%)</title><rect x="468.3" y="99.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.3" y="110.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.83%)</title><rect x="468.3" y="83.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.3" y="94.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTransitionIndex (1 samples, 0.83%)</title><rect x="468.3" y="67.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 3.31%)</title><rect x="478.1" y="227.0" width="39.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.1" y="238.0">jav..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 3.31%)</title><rect x="478.1" y="211.0" width="39.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.1" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 1.65%)</title><rect x="478.1" y="195.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.1" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.83%)</title><rect x="497.6" y="195.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.83%)</title><rect x="497.6" y="179.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.83%)</title><rect x="507.4" y="195.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 2.48%)</title><rect x="517.1" y="307.0" width="29.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.1" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 2.48%)</title><rect x="517.1" y="291.0" width="29.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.1" y="302.0">ja..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.83%)</title><rect x="546.4" y="371.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.4" y="382.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.83%)</title><rect x="556.1" y="371.0" width="9.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="559.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.83%)</title><rect x="565.9" y="403.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (24 samples, 19.83%)</title><rect x="575.6" y="419.0" width="234.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.6" y="430.0">ru/mail/polis/dao/re1nex/NewDAO..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (24 samples, 19.83%)</title><rect x="575.6" y="403.0" width="234.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.6" y="414.0">ru/mail/polis/dao/re1nex/MemTab..</text>
</g>
<g>
<title>java/util/TreeMap.containsKey (16 samples, 13.22%)</title><rect x="585.4" y="387.0" width="156.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.4" y="398.0">java/util/TreeMap.co..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (16 samples, 13.22%)</title><rect x="585.4" y="371.0" width="156.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.4" y="382.0">java/util/TreeMap.ge..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 10.74%)</title><rect x="614.6" y="355.0" width="126.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.6" y="366.0">java/nio/ByteBuf..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 8.26%)</title><rect x="643.9" y="339.0" width="97.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.9" y="350.0">java/nio/By..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 8.26%)</title><rect x="643.9" y="323.0" width="97.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.9" y="334.0">java/nio/Bu..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 3.31%)</title><rect x="682.9" y="307.0" width="39.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="318.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 3.31%)</title><rect x="682.9" y="291.0" width="39.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="302.0">jav..</text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 1.65%)</title><rect x="721.9" y="307.0" width="19.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="724.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 2.48%)</title><rect x="741.4" y="387.0" width="29.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.4" y="398.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 3.31%)</title><rect x="770.7" y="387.0" width="39.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.7" y="398.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.83%)</title><rect x="770.7" y="371.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.83%)</title><rect x="770.7" y="355.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.7" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.83%)</title><rect x="770.7" y="339.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.83%)</title><rect x="770.7" y="323.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.83%)</title><rect x="770.7" y="307.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 2.48%)</title><rect x="780.4" y="371.0" width="29.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.4" y="382.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.83%)</title><rect x="780.4" y="355.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 1.65%)</title><rect x="790.2" y="355.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.83%)</title><rect x="809.7" y="451.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.83%)</title><rect x="809.7" y="435.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.83%)</title><rect x="809.7" y="419.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.7" y="430.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.83%)</title><rect x="809.7" y="403.0" width="9.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="812.7" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.83%)</title><rect x="809.7" y="387.0" width="9.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="812.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 3.31%)</title><rect x="819.4" y="483.0" width="39.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.4" y="494.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 1.65%)</title><rect x="838.9" y="467.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 1.65%)</title><rect x="838.9" y="451.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 1.65%)</title><rect x="838.9" y="435.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 1.65%)</title><rect x="838.9" y="419.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.83%)</title><rect x="858.4" y="483.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.83%)</title><rect x="858.4" y="467.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.4" y="478.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.83%)</title><rect x="858.4" y="451.0" width="9.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="861.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 2.48%)</title><rect x="868.2" y="483.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.2" y="494.0">on..</text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 2.48%)</title><rect x="868.2" y="467.0" width="29.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.2" y="478.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 2.48%)</title><rect x="868.2" y="451.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.2" y="462.0">ja..</text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 5.79%)</title><rect x="897.4" y="499.0" width="68.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.4" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 5.79%)</title><rect x="897.4" y="483.0" width="68.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.4" y="494.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 1.65%)</title><rect x="907.2" y="467.0" width="19.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="910.2" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.83%)</title><rect x="907.2" y="451.0" width="9.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="910.2" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.83%)</title><rect x="916.9" y="451.0" width="9.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="919.9" y="462.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.83%)</title><rect x="926.7" y="467.0" width="9.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="929.7" y="478.0"></text>
</g>
<g>
<title>recv (3 samples, 2.48%)</title><rect x="936.4" y="467.0" width="29.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="939.4" y="478.0">recv</text>
</g>
<g>
<title>start_thread (23 samples, 19.01%)</title><rect x="965.7" y="547.0" width="224.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="968.7" y="558.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (23 samples, 19.01%)</title><rect x="965.7" y="531.0" width="224.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="968.7" y="542.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (23 samples, 19.01%)</title><rect x="965.7" y="515.0" width="224.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="968.7" y="526.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (4 samples, 3.31%)</title><rect x="965.7" y="499.0" width="39.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="968.7" y="510.0">Con..</text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (4 samples, 3.31%)</title><rect x="965.7" y="483.0" width="39.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="968.7" y="494.0">G1C..</text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (4 samples, 3.31%)</title><rect x="965.7" y="467.0" width="39.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="968.7" y="478.0">Dir..</text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (4 samples, 3.31%)</title><rect x="965.7" y="451.0" width="39.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="968.7" y="462.0">G1R..</text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (3 samples, 2.48%)</title><rect x="965.7" y="435.0" width="29.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="968.7" y="446.0">bo..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 2.48%)</title><rect x="965.7" y="419.0" width="29.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="968.7" y="430.0">G1..</text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 1.65%)</title><rect x="975.5" y="403.0" width="19.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="978.5" y="414.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.83%)</title><rect x="995.0" y="435.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="998.0" y="446.0"></text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 15.70%)</title><rect x="1004.7" y="499.0" width="185.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1007.7" y="510.0">GangWorker::loop()</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (19 samples, 15.70%)</title><rect x="1004.7" y="483.0" width="185.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1007.7" y="494.0">G1ParTask::work(unsigned..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 7.44%)</title><rect x="1004.7" y="467.0" width="87.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.7" y="478.0">G1ParEvacu..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (9 samples, 7.44%)</title><rect x="1004.7" y="451.0" width="87.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1007.7" y="462.0">G1ParScanT..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 4.13%)</title><rect x="1034.0" y="435.0" width="48.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1037.0" y="446.0">G1Pa..</text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.83%)</title><rect x="1082.7" y="435.0" width="9.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.7" y="446.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 1.65%)</title><rect x="1092.5" y="467.0" width="19.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1095.5" y="478.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 1.65%)</title><rect x="1092.5" y="451.0" width="19.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1095.5" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 1.65%)</title><rect x="1092.5" y="435.0" width="19.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1095.5" y="446.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 1.65%)</title><rect x="1092.5" y="419.0" width="19.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1095.5" y="430.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 1.65%)</title><rect x="1092.5" y="403.0" width="19.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1095.5" y="414.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 1.65%)</title><rect x="1092.5" y="387.0" width="19.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1095.5" y="398.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 1.65%)</title><rect x="1092.5" y="371.0" width="19.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1095.5" y="382.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.83%)</title><rect x="1092.5" y="355.0" width="9.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1095.5" y="366.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.83%)</title><rect x="1102.2" y="355.0" width="9.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.2" y="366.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 6.61%)</title><rect x="1112.0" y="467.0" width="78.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1115.0" y="478.0">G1RemSet:..</text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (8 samples, 6.61%)</title><rect x="1112.0" y="451.0" width="78.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1115.0" y="462.0">G1Collect..</text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (8 samples, 6.61%)</title><rect x="1112.0" y="435.0" width="78.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.0" y="446.0">G1ScanRSF..</text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.83%)</title><rect x="1112.0" y="419.0" width="9.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.0" y="430.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.83%)</title><rect x="1112.0" y="403.0" width="9.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.0" y="414.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.83%)</title><rect x="1112.0" y="387.0" width="9.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1115.0" y="398.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.83%)</title><rect x="1112.0" y="371.0" width="9.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.0" y="382.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.83%)</title><rect x="1112.0" y="355.0" width="9.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.0" y="366.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (7 samples, 5.79%)</title><rect x="1121.7" y="419.0" width="68.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.7" y="430.0">G1ScanR..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 1.65%)</title><rect x="1121.7" y="403.0" width="19.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.7" y="414.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.83%)</title><rect x="1131.5" y="387.0" width="9.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.5" y="398.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.83%)</title><rect x="1131.5" y="371.0" width="9.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1134.5" y="382.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (5 samples, 4.13%)</title><rect x="1141.2" y="403.0" width="48.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.2" y="414.0">bool..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 1.65%)</title><rect x="1160.7" y="387.0" width="19.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.7" y="398.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 1.65%)</title><rect x="1160.7" y="371.0" width="19.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.7" y="382.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.83%)</title><rect x="1180.2" y="387.0" width="9.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.2" y="398.0"></text>
</g>
</g>
</svg>
