<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="485"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="485"> </text>
<g id="frames">
<g>
<title>all (124 samples, 100.00%)</title><rect x="10.0" y="451.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="462.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (124 samples, 100.00%)</title><rect x="10.0" y="435.0" width="1180.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 1.61%)</title><rect x="10.0" y="419.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 1.61%)</title><rect x="10.0" y="403.0" width="19.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (122 samples, 98.39%)</title><rect x="29.0" y="419.0" width="1161.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.0" y="430.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (122 samples, 98.39%)</title><rect x="29.0" y="403.0" width="1161.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.0" y="414.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (122 samples, 98.39%)</title><rect x="29.0" y="387.0" width="1161.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.0" y="398.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 76.61%)</title><rect x="29.0" y="371.0" width="904.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.0" y="382.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (95 samples, 76.61%)</title><rect x="29.0" y="355.0" width="904.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.0" y="366.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (92 samples, 74.19%)</title><rect x="29.0" y="339.0" width="875.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.0" y="350.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 8.06%)</title><rect x="29.0" y="323.0" width="95.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.0" y="334.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 8.06%)</title><rect x="29.0" y="307.0" width="95.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.0" y="318.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 7.26%)</title><rect x="29.0" y="291.0" width="85.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.0" y="302.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 7.26%)</title><rect x="29.0" y="275.0" width="85.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.0" y="286.0">one/nio/ut..</text>
</g>
<g>
<title>byte[] (9 samples, 7.26%)</title><rect x="29.0" y="259.0" width="85.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="32.0" y="270.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.81%)</title><rect x="114.7" y="291.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.7" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.81%)</title><rect x="114.7" y="275.0" width="9.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="117.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 3.23%)</title><rect x="124.2" y="323.0" width="38.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.2" y="334.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 3.23%)</title><rect x="124.2" y="307.0" width="38.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.2" y="318.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 3.23%)</title><rect x="124.2" y="291.0" width="38.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.2" y="302.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 3.23%)</title><rect x="124.2" y="275.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.2" y="286.0">jav..</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.81%)</title><rect x="124.2" y="259.0" width="9.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="127.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 2.42%)</title><rect x="133.7" y="259.0" width="28.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.7" y="270.0">ja..</text>
</g>
<g>
<title>byte[] (3 samples, 2.42%)</title><rect x="133.7" y="243.0" width="28.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="136.7" y="254.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MyService.put (78 samples, 62.90%)</title><rect x="162.3" y="323.0" width="742.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.3" y="334.0">ru/mail/polis/service/re1nex/MyService.put</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (54 samples, 43.55%)</title><rect x="162.3" y="307.0" width="513.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.3" y="318.0">ch/qos/logback/classic/Logger.error</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (54 samples, 43.55%)</title><rect x="162.3" y="291.0" width="513.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.3" y="302.0">ch/qos/logback/classic/Logger.filterAndLog_1</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (54 samples, 43.55%)</title><rect x="162.3" y="275.0" width="513.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.3" y="286.0">ch/qos/logback/classic/Logger.buildLoggingEventAndAppend</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (4 samples, 3.23%)</title><rect x="162.3" y="259.0" width="38.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="165.3" y="270.0">ch...</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (50 samples, 40.32%)</title><rect x="200.3" y="259.0" width="475.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.3" y="270.0">ch/qos/logback/classic/Logger.callAppenders</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (50 samples, 40.32%)</title><rect x="200.3" y="243.0" width="475.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.3" y="254.0">ch/qos/logback/classic/Logger.appendLoopOnAppenders</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (50 samples, 40.32%)</title><rect x="200.3" y="227.0" width="475.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.3" y="238.0">ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppend..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (50 samples, 40.32%)</title><rect x="200.3" y="211.0" width="475.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.3" y="222.0">ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (50 samples, 40.32%)</title><rect x="200.3" y="195.0" width="475.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.3" y="206.0">ch/qos/logback/core/OutputStreamAppender.append</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (50 samples, 40.32%)</title><rect x="200.3" y="179.0" width="475.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.3" y="190.0">ch/qos/logback/core/OutputStreamAppender.subAppend</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (10 samples, 8.06%)</title><rect x="200.3" y="163.0" width="95.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.3" y="174.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (10 samples, 8.06%)</title><rect x="200.3" y="147.0" width="95.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.3" y="158.0">ch/qos/logb..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (10 samples, 8.06%)</title><rect x="200.3" y="131.0" width="95.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.3" y="142.0">org/slf4j/h..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (10 samples, 8.06%)</title><rect x="200.3" y="115.0" width="95.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.3" y="126.0">org/slf4j/h..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 4.84%)</title><rect x="200.3" y="99.0" width="57.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.3" y="110.0">java/l..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 4.84%)</title><rect x="200.3" y="83.0" width="57.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.3" y="94.0">java/l..</text>
</g>
<g>
<title>byte[] (6 samples, 4.84%)</title><rect x="200.3" y="67.0" width="57.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="203.3" y="78.0">byte[]</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 3.23%)</title><rect x="257.4" y="99.0" width="38.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.4" y="110.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 3.23%)</title><rect x="257.4" y="83.0" width="38.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.4" y="94.0">jav..</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.81%)</title><rect x="257.4" y="67.0" width="9.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="260.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 2.42%)</title><rect x="266.9" y="67.0" width="28.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.9" y="78.0">ja..</text>
</g>
<g>
<title>byte[] (3 samples, 2.42%)</title><rect x="266.9" y="51.0" width="28.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="269.9" y="62.0">by..</text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (40 samples, 32.26%)</title><rect x="295.5" y="163.0" width="380.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.5" y="174.0">ch/qos/logback/core/encoder/LayoutWrappingEncoder.en..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (32 samples, 25.81%)</title><rect x="295.5" y="147.0" width="304.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.5" y="158.0">ch/qos/logback/classic/layout/TTLLLayout...</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (32 samples, 25.81%)</title><rect x="295.5" y="131.0" width="304.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.5" y="142.0">ch/qos/logback/classic/layout/TTLLLayout...</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 2.42%)</title><rect x="295.5" y="115.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.5" y="126.0">ch..</text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 2.42%)</title><rect x="295.5" y="99.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.5" y="110.0">ja..</text>
</g>
<g>
<title>java.lang.StringBuffer (1 samples, 0.81%)</title><rect x="295.5" y="83.0" width="9.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="298.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.81%)</title><rect x="305.0" y="83.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.81%)</title><rect x="305.0" y="67.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.0" y="78.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.81%)</title><rect x="305.0" y="51.0" width="9.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="308.0" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.81%)</title><rect x="314.5" y="83.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.81%)</title><rect x="314.5" y="67.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.81%)</title><rect x="314.5" y="51.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.5" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.81%)</title><rect x="314.5" y="35.0" width="9.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="317.5" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.81%)</title><rect x="324.0" y="115.0" width="9.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="327.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 3.23%)</title><rect x="333.5" y="115.0" width="38.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.5" y="126.0">jav..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 3.23%)</title><rect x="333.5" y="99.0" width="38.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.5" y="110.0">jav..</text>
</g>
<g>
<title>byte[] (4 samples, 3.23%)</title><rect x="333.5" y="83.0" width="38.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="336.5" y="94.0">byt..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (20 samples, 16.13%)</title><rect x="371.6" y="115.0" width="190.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.6" y="126.0">java/lang/StringBuilder.a..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 16.13%)</title><rect x="371.6" y="99.0" width="190.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.6" y="110.0">java/lang/AbstractStringB..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (20 samples, 16.13%)</title><rect x="371.6" y="83.0" width="190.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.6" y="94.0">java/lang/AbstractStringB..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 16.13%)</title><rect x="371.6" y="67.0" width="190.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.6" y="78.0">java/util/Arrays.copyOf</text>
</g>
<g>
<title>byte[] (20 samples, 16.13%)</title><rect x="371.6" y="51.0" width="190.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="374.6" y="62.0">byte[]</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 3.23%)</title><rect x="561.9" y="115.0" width="38.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.9" y="126.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 3.23%)</title><rect x="561.9" y="99.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.9" y="110.0">jav..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 3.23%)</title><rect x="561.9" y="83.0" width="38.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.9" y="94.0">jav..</text>
</g>
<g>
<title>byte[] (4 samples, 3.23%)</title><rect x="561.9" y="67.0" width="38.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="564.9" y="78.0">byt..</text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (8 samples, 6.45%)</title><rect x="600.0" y="147.0" width="76.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="158.0">ch/qos/l..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 6.45%)</title><rect x="600.0" y="131.0" width="76.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.0" y="142.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 6.45%)</title><rect x="600.0" y="115.0" width="76.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="126.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 6.45%)</title><rect x="600.0" y="99.0" width="76.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.0" y="110.0">java/lan..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 6.45%)</title><rect x="600.0" y="83.0" width="76.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.0" y="94.0">java/uti..</text>
</g>
<g>
<title>byte[] (8 samples, 6.45%)</title><rect x="600.0" y="67.0" width="76.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="603.0" y="78.0">byte[]</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.81%)</title><rect x="676.1" y="307.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.81%)</title><rect x="676.1" y="291.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.81%)</title><rect x="676.1" y="275.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.81%)</title><rect x="676.1" y="259.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.1" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.81%)</title><rect x="676.1" y="243.0" width="9.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="679.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 2.42%)</title><rect x="685.6" y="307.0" width="28.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.6" y="318.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 2.42%)</title><rect x="685.6" y="291.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.6" y="302.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 2.42%)</title><rect x="685.6" y="275.0" width="28.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="688.6" y="286.0">ja..</text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 1.61%)</title><rect x="714.2" y="307.0" width="19.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="717.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 4.84%)</title><rect x="733.2" y="307.0" width="57.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.2" y="318.0">one/ni..</text>
</g>
<g>
<title>byte[] (1 samples, 0.81%)</title><rect x="733.2" y="291.0" width="9.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="736.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 3.23%)</title><rect x="742.7" y="291.0" width="38.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="745.7" y="302.0">jav..</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.81%)</title><rect x="780.8" y="291.0" width="9.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="783.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (12 samples, 9.68%)</title><rect x="790.3" y="307.0" width="114.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.3" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (12 samples, 9.68%)</title><rect x="790.3" y="291.0" width="114.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.3" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 8.06%)</title><rect x="790.3" y="275.0" width="95.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.3" y="286.0">java/nio/He..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 8.06%)</title><rect x="790.3" y="259.0" width="95.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="793.3" y="270.0">java.nio.He..</text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 1.61%)</title><rect x="885.5" y="275.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 1.61%)</title><rect x="885.5" y="259.0" width="19.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="888.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 2.42%)</title><rect x="904.5" y="339.0" width="28.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.5" y="350.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 2.42%)</title><rect x="904.5" y="323.0" width="28.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="334.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 2.42%)</title><rect x="904.5" y="307.0" width="28.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.5" y="318.0">ja..</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.81%)</title><rect x="904.5" y="291.0" width="9.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="907.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 1.61%)</title><rect x="914.0" y="291.0" width="19.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.0" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.61%)</title><rect x="914.0" y="275.0" width="19.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="917.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 8.06%)</title><rect x="933.1" y="371.0" width="95.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.1" y="382.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 1.61%)</title><rect x="933.1" y="355.0" width="19.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 4.03%)</title><rect x="952.1" y="355.0" width="47.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.1" y="366.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (5 samples, 4.03%)</title><rect x="952.1" y="339.0" width="47.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="955.1" y="350.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 2.42%)</title><rect x="999.7" y="355.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.7" y="366.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 2.42%)</title><rect x="999.7" y="339.0" width="28.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.7" y="350.0">on..</text>
</g>
<g>
<title>char[] (2 samples, 1.61%)</title><rect x="999.7" y="323.0" width="19.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1002.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.81%)</title><rect x="1018.7" y="323.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.81%)</title><rect x="1018.7" y="307.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.81%)</title><rect x="1018.7" y="291.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.7" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.81%)</title><rect x="1018.7" y="275.0" width="9.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1021.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 2.42%)</title><rect x="1028.2" y="371.0" width="28.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.2" y="382.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 2.42%)</title><rect x="1028.2" y="355.0" width="28.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.2" y="366.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 2.42%)</title><rect x="1028.2" y="339.0" width="28.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.2" y="350.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 2.42%)</title><rect x="1028.2" y="323.0" width="28.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.2" y="334.0">ja..</text>
</g>
<g>
<title>byte[] (3 samples, 2.42%)</title><rect x="1028.2" y="307.0" width="28.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1031.2" y="318.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 11.29%)</title><rect x="1056.8" y="371.0" width="133.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.8" y="382.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 11.29%)</title><rect x="1056.8" y="355.0" width="133.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.8" y="366.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (9 samples, 7.26%)</title><rect x="1056.8" y="339.0" width="85.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1059.8" y="350.0">char[]</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.81%)</title><rect x="1142.4" y="339.0" width="9.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1145.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 3.23%)</title><rect x="1151.9" y="339.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.9" y="350.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 3.23%)</title><rect x="1151.9" y="323.0" width="38.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.9" y="334.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 3.23%)</title><rect x="1151.9" y="307.0" width="38.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.9" y="318.0">jav..</text>
</g>
<g>
<title>byte[] (4 samples, 3.23%)</title><rect x="1151.9" y="291.0" width="38.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1154.9" y="302.0">byt..</text>
</g>
</g>
</svg>
