<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="725"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="725"> </text>
<g id="frames">
<g>
<title>all (98 samples, 100.00%)</title><rect x="10.0" y="691.0" width="1180.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="702.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 3.06%)</title><rect x="10.0" y="675.0" width="36.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 3.06%)</title><rect x="10.0" y="659.0" width="36.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 3.06%)</title><rect x="10.0" y="643.0" width="36.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="654.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 3.06%)</title><rect x="10.0" y="627.0" width="36.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="638.0">sun..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 3.06%)</title><rect x="10.0" y="611.0" width="36.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="622.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$90/453267912.run (3 samples, 3.06%)</title><rect x="10.0" y="595.0" width="36.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="606.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 3.06%)</title><rect x="10.0" y="579.0" width="36.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="590.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 3.06%)</title><rect x="10.0" y="563.0" width="36.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="574.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 3.06%)</title><rect x="10.0" y="547.0" width="36.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="558.0">sun..</text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 1.02%)</title><rect x="10.0" y="531.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 1.02%)</title><rect x="10.0" y="515.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (1 samples, 1.02%)</title><rect x="10.0" y="499.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 1.02%)</title><rect x="10.0" y="483.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 1.02%)</title><rect x="10.0" y="467.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (1 samples, 1.02%)</title><rect x="10.0" y="451.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (1 samples, 1.02%)</title><rect x="10.0" y="435.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (1 samples, 1.02%)</title><rect x="10.0" y="419.0" width="12.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>poll (1 samples, 1.02%)</title><rect x="10.0" y="403.0" width="12.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (2 samples, 2.04%)</title><rect x="22.0" y="531.0" width="24.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.0" y="542.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 2.04%)</title><rect x="22.0" y="515.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.0" y="526.0">j..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 2.04%)</title><rect x="22.0" y="499.0" width="24.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.0" y="510.0">s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 2.04%)</title><rect x="22.0" y="483.0" width="24.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.0" y="494.0">s..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (2 samples, 2.04%)</title><rect x="22.0" y="467.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.0" y="478.0">s..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.02%)</title><rect x="22.0" y="451.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.02%)</title><rect x="22.0" y="435.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (1 samples, 1.02%)</title><rect x="22.0" y="419.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.0" y="430.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 1.02%)</title><rect x="22.0" y="403.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.0" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 1.02%)</title><rect x="22.0" y="387.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 1.02%)</title><rect x="22.0" y="371.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.0" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 1.02%)</title><rect x="22.0" y="355.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.0" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 1.02%)</title><rect x="22.0" y="339.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.0" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 1.02%)</title><rect x="22.0" y="323.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.0" y="334.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 1.02%)</title><rect x="22.0" y="307.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.0" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 1.02%)</title><rect x="22.0" y="291.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.0" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 1.02%)</title><rect x="22.0" y="275.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.0" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 1.02%)</title><rect x="22.0" y="259.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.0" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 1.02%)</title><rect x="22.0" y="243.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.0" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 1.02%)</title><rect x="22.0" y="227.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.0" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 1.02%)</title><rect x="22.0" y="211.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.0" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 1.02%)</title><rect x="22.0" y="195.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.0" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="179.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.0" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="163.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.0" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="147.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.0" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="131.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.0" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="115.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.0" y="126.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="99.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.0" y="110.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="83.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.0" y="94.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 1.02%)</title><rect x="22.0" y="67.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.0" y="78.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 1.02%)</title><rect x="22.0" y="51.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.0" y="62.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.02%)</title><rect x="22.0" y="35.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.0" y="46.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (1 samples, 1.02%)</title><rect x="34.1" y="451.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.1" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 1.02%)</title><rect x="34.1" y="435.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.02%)</title><rect x="34.1" y="419.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 1.02%)</title><rect x="34.1" y="403.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.1" y="414.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 94.90%)</title><rect x="46.1" y="675.0" width="1119.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.1" y="686.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 18.37%)</title><rect x="46.1" y="659.0" width="216.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.1" y="670.0">one/nio/net/NativeSelector.s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 18.37%)</title><rect x="46.1" y="643.0" width="216.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.1" y="654.0">one/nio/net/NativeSelector.e..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 1.02%)</title><rect x="70.2" y="627.0" width="12.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="73.2" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 1.02%)</title><rect x="82.2" y="627.0" width="12.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.2" y="638.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 12.24%)</title><rect x="94.3" y="627.0" width="144.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="97.3" y="638.0">clock_gettime</text>
</g>
<g>
<title>clock_gettime (2 samples, 2.04%)</title><rect x="214.7" y="611.0" width="24.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="217.7" y="622.0">c..</text>
</g>
<g>
<title>[vdso] (1 samples, 1.02%)</title><rect x="226.7" y="595.0" width="12.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="229.7" y="606.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 1.02%)</title><rect x="238.8" y="627.0" width="12.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="241.8" y="638.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 1.02%)</title><rect x="250.8" y="627.0" width="12.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="253.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (75 samples, 76.53%)</title><rect x="262.9" y="659.0" width="903.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.9" y="670.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (74 samples, 75.51%)</title><rect x="274.9" y="643.0" width="891.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.9" y="654.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (61 samples, 62.24%)</title><rect x="274.9" y="627.0" width="734.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.9" y="638.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (59 samples, 60.20%)</title><rect x="286.9" y="611.0" width="710.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.9" y="622.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 59.18%)</title><rect x="299.0" y="595.0" width="698.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.0" y="606.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler3_delete.handleRequest (56 samples, 57.14%)</title><rect x="299.0" y="579.0" width="674.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.0" y="590.0">RequestHandler3_delete.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 7.14%)</title><rect x="299.0" y="563.0" width="84.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.0" y="574.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 7.14%)</title><rect x="299.0" y="547.0" width="84.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.0" y="558.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 1.02%)</title><rect x="299.0" y="531.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 6.12%)</title><rect x="311.0" y="531.0" width="72.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.0" y="542.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 6.12%)</title><rect x="311.0" y="515.0" width="72.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.0" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 5.10%)</title><rect x="323.1" y="499.0" width="60.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.1" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 5.10%)</title><rect x="323.1" y="483.0" width="60.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.1" y="494.0">one/ni..</text>
</g>
<g>
<title>__send (5 samples, 5.10%)</title><rect x="323.1" y="467.0" width="60.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="326.1" y="478.0">__send</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 3.06%)</title><rect x="383.3" y="563.0" width="36.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.3" y="574.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 3.06%)</title><rect x="383.3" y="547.0" width="36.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.3" y="558.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 1.02%)</title><rect x="383.3" y="531.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.02%)</title><rect x="383.3" y="515.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.3" y="526.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 1.02%)</title><rect x="383.3" y="499.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.3" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 1.02%)</title><rect x="395.3" y="531.0" width="12.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="398.3" y="542.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 1.02%)</title><rect x="407.3" y="531.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MyService.delete (46 samples, 46.94%)</title><rect x="419.4" y="563.0" width="553.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.4" y="574.0">ru/mail/polis/service/re1nex/MyService.delete</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (34 samples, 34.69%)</title><rect x="443.5" y="547.0" width="409.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.5" y="558.0">ch/qos/logback/classic/Logger.error</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (34 samples, 34.69%)</title><rect x="443.5" y="531.0" width="409.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.5" y="542.0">ch/qos/logback/classic/Logger.filterAndLog_1</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (33 samples, 33.67%)</title><rect x="455.5" y="515.0" width="397.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="526.0">ch/qos/logback/classic/Logger.buildLoggingEventAndAppend</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (32 samples, 32.65%)</title><rect x="455.5" y="499.0" width="385.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.5" y="510.0">ch/qos/logback/classic/Logger.callAppenders</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (32 samples, 32.65%)</title><rect x="455.5" y="483.0" width="385.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.5" y="494.0">ch/qos/logback/classic/Logger.appendLoopOnAppenders</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (31 samples, 31.63%)</title><rect x="467.6" y="467.0" width="373.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.6" y="478.0">ch/qos/logback/core/spi/AppenderAttachableImpl.appe..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (31 samples, 31.63%)</title><rect x="467.6" y="451.0" width="373.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.6" y="462.0">ch/qos/logback/core/UnsynchronizedAppenderBase.doAp..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (27 samples, 27.55%)</title><rect x="479.6" y="435.0" width="325.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.6" y="446.0">ch/qos/logback/core/OutputStreamAppender.app..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (27 samples, 27.55%)</title><rect x="479.6" y="419.0" width="325.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.6" y="430.0">ch/qos/logback/core/OutputStreamAppender.sub..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 4.08%)</title><rect x="479.6" y="403.0" width="48.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.6" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 1.02%)</title><rect x="479.6" y="387.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.6" y="398.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 1.02%)</title><rect x="479.6" y="371.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.6" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 1.02%)</title><rect x="479.6" y="355.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.6" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 1.02%)</title><rect x="479.6" y="339.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.6" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 1.02%)</title><rect x="479.6" y="323.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 1.02%)</title><rect x="479.6" y="307.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.6" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 1.02%)</title><rect x="479.6" y="291.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.6" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 1.02%)</title><rect x="479.6" y="275.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.6" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 3.06%)</title><rect x="491.6" y="387.0" width="36.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.6" y="398.0">ch/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.02%)</title><rect x="515.7" y="371.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (16 samples, 16.33%)</title><rect x="527.8" y="403.0" width="192.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.8" y="414.0">ch/qos/logback/core/Outpu..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (16 samples, 16.33%)</title><rect x="527.8" y="387.0" width="192.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.8" y="398.0">ch/qos/logback/core/joran..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (16 samples, 16.33%)</title><rect x="527.8" y="371.0" width="192.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.8" y="382.0">java/io/FilterOutputStrea..</text>
</g>
<g>
<title>java/io/PrintStream.write (16 samples, 16.33%)</title><rect x="527.8" y="355.0" width="192.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.8" y="366.0">java/io/PrintStream.write</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (16 samples, 16.33%)</title><rect x="527.8" y="339.0" width="192.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.8" y="350.0">java/io/BufferedOutputStr..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (16 samples, 16.33%)</title><rect x="527.8" y="323.0" width="192.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.8" y="334.0">java/io/BufferedOutputStr..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (16 samples, 16.33%)</title><rect x="527.8" y="307.0" width="192.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.8" y="318.0">java/io/FileOutputStream...</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (16 samples, 16.33%)</title><rect x="527.8" y="291.0" width="192.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.8" y="302.0">java/io/FileOutputStream...</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (15 samples, 15.31%)</title><rect x="539.8" y="275.0" width="180.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="542.8" y="286.0">Java_java_io_FileOutput..</text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 1.02%)</title><rect x="539.8" y="259.0" width="12.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="542.8" y="270.0"></text>
</g>
<g>
<title>writeBytes (14 samples, 14.29%)</title><rect x="551.8" y="259.0" width="168.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="554.8" y="270.0">writeBytes</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 1.02%)</title><rect x="600.0" y="243.0" width="12.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="603.0" y="254.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 5.10%)</title><rect x="612.0" y="243.0" width="60.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="615.0" y="254.0">__libc..</text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 1.02%)</title><rect x="672.2" y="243.0" width="12.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="675.2" y="254.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 1.02%)</title><rect x="684.3" y="243.0" width="12.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="687.3" y="254.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 1.02%)</title><rect x="684.3" y="227.0" width="12.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="687.3" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 2.04%)</title><rect x="696.3" y="243.0" width="24.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="699.3" y="254.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 1.02%)</title><rect x="708.4" y="227.0" width="12.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="711.4" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 7.14%)</title><rect x="720.4" y="403.0" width="84.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.4" y="414.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 7.14%)</title><rect x="720.4" y="387.0" width="84.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.4" y="398.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 7.14%)</title><rect x="720.4" y="371.0" width="84.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.4" y="382.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getThrowableProxy (1 samples, 1.02%)</title><rect x="744.5" y="355.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 2.04%)</title><rect x="756.5" y="355.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.5" y="366.0">c..</text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 2.04%)</title><rect x="756.5" y="339.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.5" y="350.0">j..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 2.04%)</title><rect x="756.5" y="323.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.5" y="334.0">j..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 2.04%)</title><rect x="756.5" y="307.0" width="24.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.5" y="318.0">j..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 1.02%)</title><rect x="756.5" y="291.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.5" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 1.02%)</title><rect x="756.5" y="275.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.5" y="286.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 1.02%)</title><rect x="756.5" y="259.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.5" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 1.02%)</title><rect x="756.5" y="243.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.5" y="254.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 1.02%)</title><rect x="756.5" y="227.0" width="12.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="759.5" y="238.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 1.02%)</title><rect x="768.6" y="291.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.6" y="302.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 1.02%)</title><rect x="768.6" y="275.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.6" y="286.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 1.02%)</title><rect x="768.6" y="259.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.6" y="270.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 1.02%)</title><rect x="768.6" y="243.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.6" y="254.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 1.02%)</title><rect x="768.6" y="227.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 1.02%)</title><rect x="780.6" y="355.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 1.02%)</title><rect x="792.7" y="355.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.7" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 3.06%)</title><rect x="804.7" y="435.0" width="36.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.7" y="446.0">jav..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 3.06%)</title><rect x="804.7" y="419.0" width="36.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.7" y="430.0">jav..</text>
</g>
<g>
<title>gettimeofday (1 samples, 1.02%)</title><rect x="840.8" y="499.0" width="12.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="843.8" y="510.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 1.02%)</title><rect x="852.9" y="547.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 1.02%)</title><rect x="852.9" y="531.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 1.02%)</title><rect x="852.9" y="515.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 1.02%)</title><rect x="864.9" y="547.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.02%)</title><rect x="876.9" y="547.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 1.02%)</title><rect x="876.9" y="531.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.remove (7 samples, 7.14%)</title><rect x="889.0" y="547.0" width="84.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.0" y="558.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.remove (7 samples, 7.14%)</title><rect x="889.0" y="531.0" width="84.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.0" y="542.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 7.14%)</title><rect x="889.0" y="515.0" width="84.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.0" y="526.0">java/util/..</text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 1.02%)</title><rect x="889.0" y="499.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 1.02%)</title><rect x="889.0" y="483.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 1.02%)</title><rect x="889.0" y="467.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 1.02%)</title><rect x="889.0" y="451.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 1.02%)</title><rect x="889.0" y="435.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.0" y="446.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 1.02%)</title><rect x="889.0" y="419.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.04%)</title><rect x="901.0" y="499.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.0" y="510.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.04%)</title><rect x="901.0" y="483.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.0" y="494.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 2.04%)</title><rect x="901.0" y="467.0" width="24.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.0" y="478.0">j..</text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (1 samples, 1.02%)</title><rect x="925.1" y="499.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 3.06%)</title><rect x="937.1" y="499.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.1" y="510.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (3 samples, 3.06%)</title><rect x="937.1" y="483.0" width="36.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.1" y="494.0">jav..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 2.04%)</title><rect x="973.3" y="579.0" width="24.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.3" y="590.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 2.04%)</title><rect x="973.3" y="563.0" width="24.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="976.3" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 2.04%)</title><rect x="973.3" y="547.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.3" y="558.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 2.04%)</title><rect x="973.3" y="531.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.3" y="542.0">j..</text>
</g>
<g>
<title>itable stub (2 samples, 2.04%)</title><rect x="973.3" y="515.0" width="24.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="976.3" y="526.0">i..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 1.02%)</title><rect x="997.3" y="611.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 1.02%)</title><rect x="997.3" y="595.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 1.02%)</title><rect x="1009.4" y="627.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 12.24%)</title><rect x="1021.4" y="627.0" width="144.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.4" y="638.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 9.18%)</title><rect x="1057.6" y="611.0" width="108.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.6" y="622.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 3.06%)</title><rect x="1081.6" y="595.0" width="36.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1084.6" y="606.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 2.04%)</title><rect x="1081.6" y="579.0" width="24.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1084.6" y="590.0">A..</text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.02%)</title><rect x="1105.7" y="579.0" width="12.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1108.7" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 1.02%)</title><rect x="1117.8" y="595.0" width="12.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1120.8" y="606.0"></text>
</g>
<g>
<title>recv (3 samples, 3.06%)</title><rect x="1129.8" y="595.0" width="36.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1132.8" y="606.0">recv</text>
</g>
<g>
<title>start_thread (2 samples, 2.04%)</title><rect x="1165.9" y="675.0" width="24.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1168.9" y="686.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 2.04%)</title><rect x="1165.9" y="659.0" width="24.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1168.9" y="670.0">t..</text>
</g>
<g>
<title>Thread::call_run() (2 samples, 2.04%)</title><rect x="1165.9" y="643.0" width="24.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.9" y="654.0">T..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 2.04%)</title><rect x="1165.9" y="627.0" width="24.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.9" y="638.0">C..</text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (2 samples, 2.04%)</title><rect x="1165.9" y="611.0" width="24.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.9" y="622.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 2.04%)</title><rect x="1165.9" y="595.0" width="24.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.9" y="606.0">D..</text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 2.04%)</title><rect x="1165.9" y="579.0" width="24.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.9" y="590.0">G..</text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (2 samples, 2.04%)</title><rect x="1165.9" y="563.0" width="24.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.9" y="574.0">b..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 1.02%)</title><rect x="1178.0" y="547.0" width="12.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.0" y="558.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 1.02%)</title><rect x="1178.0" y="531.0" width="12.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.0" y="542.0"></text>
</g>
</g>
</svg>
