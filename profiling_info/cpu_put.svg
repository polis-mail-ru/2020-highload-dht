<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="549"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="549"> </text>
<g id="frames">
<g>
<title>all (113 samples, 100.00%)</title><rect x="10.0" y="515.0" width="1180.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="526.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (111 samples, 98.23%)</title><rect x="10.0" y="499.0" width="1159.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="510.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 1.77%)</title><rect x="20.4" y="483.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 1.77%)</title><rect x="20.4" y="467.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.88%)</title><rect x="30.9" y="451.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 17.70%)</title><rect x="41.3" y="483.0" width="208.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.3" y="494.0">one/nio/net/NativeSelector...</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 16.81%)</title><rect x="51.8" y="467.0" width="198.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.8" y="478.0">one/nio/net/NativeSelector..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.88%)</title><rect x="93.5" y="451.0" width="10.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="96.5" y="462.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 7.08%)</title><rect x="104.0" y="451.0" width="83.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="107.0" y="462.0">clock_get..</text>
</g>
<g>
<title>[vdso] (1 samples, 0.88%)</title><rect x="177.1" y="435.0" width="10.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="180.1" y="446.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 5.31%)</title><rect x="187.5" y="451.0" width="62.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="190.5" y="462.0">epoll_..</text>
</g>
<g>
<title>one/nio/net/Session.process (88 samples, 77.88%)</title><rect x="250.2" y="483.0" width="918.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.2" y="494.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (87 samples, 76.99%)</title><rect x="250.2" y="467.0" width="908.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.2" y="478.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (75 samples, 66.37%)</title><rect x="250.2" y="451.0" width="783.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.2" y="462.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 59.29%)</title><rect x="250.2" y="435.0" width="699.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.2" y="446.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (67 samples, 59.29%)</title><rect x="250.2" y="419.0" width="699.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.2" y="430.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (65 samples, 57.52%)</title><rect x="250.2" y="403.0" width="678.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.2" y="414.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 7.96%)</title><rect x="250.2" y="387.0" width="94.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.2" y="398.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 7.08%)</title><rect x="250.2" y="371.0" width="83.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.2" y="382.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 1.77%)</title><rect x="250.2" y="355.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 1.77%)</title><rect x="250.2" y="339.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 1.77%)</title><rect x="250.2" y="323.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 1.77%)</title><rect x="250.2" y="307.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 5.31%)</title><rect x="271.1" y="355.0" width="62.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.1" y="366.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 5.31%)</title><rect x="271.1" y="339.0" width="62.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.1" y="350.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 5.31%)</title><rect x="271.1" y="323.0" width="62.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.1" y="334.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 5.31%)</title><rect x="271.1" y="307.0" width="62.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.1" y="318.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.88%)</title><rect x="281.5" y="291.0" width="10.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="284.5" y="302.0"></text>
</g>
<g>
<title>__send (4 samples, 3.54%)</title><rect x="291.9" y="291.0" width="41.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="294.9" y="302.0">__s..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.88%)</title><rect x="333.7" y="371.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.88%)</title><rect x="333.7" y="355.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.88%)</title><rect x="333.7" y="339.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.7" y="350.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.88%)</title><rect x="333.7" y="323.0" width="10.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="336.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 1.77%)</title><rect x="344.2" y="387.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 1.77%)</title><rect x="344.2" y="371.0" width="20.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.88%)</title><rect x="344.2" y="355.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.88%)</title><rect x="344.2" y="339.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.88%)</title><rect x="354.6" y="355.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.88%)</title><rect x="354.6" y="339.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.88%)</title><rect x="354.6" y="323.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.88%)</title><rect x="354.6" y="307.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MyService.put (54 samples, 47.79%)</title><rect x="365.0" y="387.0" width="563.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.0" y="398.0">ru/mail/polis/service/re1nex/MyService.put</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (35 samples, 30.97%)</title><rect x="365.0" y="371.0" width="365.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.0" y="382.0">ch/qos/logback/classic/Logger.error</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (35 samples, 30.97%)</title><rect x="365.0" y="355.0" width="365.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.0" y="366.0">ch/qos/logback/classic/Logger.filterAndLog_1</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (35 samples, 30.97%)</title><rect x="365.0" y="339.0" width="365.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.0" y="350.0">ch/qos/logback/classic/Logger.buildLoggingEventAnd..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (35 samples, 30.97%)</title><rect x="365.0" y="323.0" width="365.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.0" y="334.0">ch/qos/logback/classic/Logger.callAppenders</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (35 samples, 30.97%)</title><rect x="365.0" y="307.0" width="365.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.0" y="318.0">ch/qos/logback/classic/Logger.appendLoopOnAppenders</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (35 samples, 30.97%)</title><rect x="365.0" y="291.0" width="365.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.0" y="302.0">ch/qos/logback/core/spi/AppenderAttachableImpl.app..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (35 samples, 30.97%)</title><rect x="365.0" y="275.0" width="365.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.0" y="286.0">ch/qos/logback/core/UnsynchronizedAppenderBase.doA..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (32 samples, 28.32%)</title><rect x="365.0" y="259.0" width="334.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.0" y="270.0">ch/qos/logback/core/OutputStreamAppender.append</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (32 samples, 28.32%)</title><rect x="365.0" y="243.0" width="334.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="254.0">ch/qos/logback/core/OutputStreamAppender.subA..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (11 samples, 9.73%)</title><rect x="365.0" y="227.0" width="114.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.0" y="238.0">ch/qos/logback..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (11 samples, 9.73%)</title><rect x="365.0" y="211.0" width="114.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.0" y="222.0">ch/qos/logback..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (11 samples, 9.73%)</title><rect x="365.0" y="195.0" width="114.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.0" y="206.0">org/slf4j/help..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (10 samples, 8.85%)</title><rect x="365.0" y="179.0" width="104.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="190.0">org/slf4j/he..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.88%)</title><rect x="375.5" y="163.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.88%)</title><rect x="385.9" y="163.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.9" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.88%)</title><rect x="385.9" y="147.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 4.42%)</title><rect x="396.4" y="163.0" width="52.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.4" y="174.0">java/..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 4.42%)</title><rect x="396.4" y="147.0" width="52.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.4" y="158.0">java/..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 2.65%)</title><rect x="417.3" y="131.0" width="31.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.3" y="142.0">ja..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.88%)</title><rect x="448.6" y="163.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.6" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.88%)</title><rect x="448.6" y="147.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.88%)</title><rect x="448.6" y="131.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.6" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.88%)</title><rect x="448.6" y="115.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.88%)</title><rect x="448.6" y="99.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.6" y="110.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.isEscapedDelimeter (1 samples, 0.88%)</title><rect x="459.0" y="163.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.0" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.getThrowableCandidate (1 samples, 0.88%)</title><rect x="469.5" y="179.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.5" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (13 samples, 11.50%)</title><rect x="479.9" y="227.0" width="135.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.9" y="238.0">ch/qos/logback/co..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (13 samples, 11.50%)</title><rect x="479.9" y="211.0" width="135.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.9" y="222.0">ch/qos/logback/co..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (13 samples, 11.50%)</title><rect x="479.9" y="195.0" width="135.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.9" y="206.0">java/io/FilterOut..</text>
</g>
<g>
<title>java/io/PrintStream.write (13 samples, 11.50%)</title><rect x="479.9" y="179.0" width="135.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.9" y="190.0">java/io/PrintStre..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (13 samples, 11.50%)</title><rect x="479.9" y="163.0" width="135.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.9" y="174.0">java/io/BufferedO..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (13 samples, 11.50%)</title><rect x="479.9" y="147.0" width="135.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.9" y="158.0">java/io/BufferedO..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (13 samples, 11.50%)</title><rect x="479.9" y="131.0" width="135.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.9" y="142.0">java/io/FileOutpu..</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (13 samples, 11.50%)</title><rect x="479.9" y="115.0" width="135.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.9" y="126.0">java/io/FileOutpu..</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (13 samples, 11.50%)</title><rect x="479.9" y="99.0" width="135.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="482.9" y="110.0">Java_java_io_File..</text>
</g>
<g>
<title>jni_ExceptionOccurred (2 samples, 1.77%)</title><rect x="479.9" y="83.0" width="20.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="482.9" y="94.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.88%)</title><rect x="500.8" y="83.0" width="10.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="503.8" y="94.0"></text>
</g>
<g>
<title>writeBytes (10 samples, 8.85%)</title><rect x="511.2" y="83.0" width="104.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="514.2" y="94.0">writeBytes</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.88%)</title><rect x="521.7" y="67.0" width="10.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.7" y="78.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 4.42%)</title><rect x="532.1" y="67.0" width="52.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="535.1" y="78.0">__lib..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.88%)</title><rect x="584.3" y="67.0" width="10.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="587.3" y="78.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.88%)</title><rect x="594.8" y="67.0" width="10.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="597.8" y="78.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.88%)</title><rect x="594.8" y="51.0" width="10.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="597.8" y="62.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.88%)</title><rect x="605.2" y="67.0" width="10.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="608.2" y="78.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.88%)</title><rect x="605.2" y="51.0" width="10.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="608.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (8 samples, 7.08%)</title><rect x="615.7" y="227.0" width="83.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.7" y="238.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (8 samples, 7.08%)</title><rect x="615.7" y="211.0" width="83.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.7" y="222.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (8 samples, 7.08%)</title><rect x="615.7" y="195.0" width="83.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.7" y="206.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.88%)</title><rect x="615.7" y="179.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.7" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.88%)</title><rect x="615.7" y="163.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.7" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.88%)</title><rect x="615.7" y="147.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.88%)</title><rect x="615.7" y="131.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.88%)</title><rect x="615.7" y="115.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.88%)</title><rect x="615.7" y="99.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.7" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (4 samples, 3.54%)</title><rect x="626.1" y="179.0" width="41.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.1" y="190.0">ch/..</text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 2.65%)</title><rect x="626.1" y="163.0" width="31.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.1" y="174.0">ja..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 2.65%)</title><rect x="626.1" y="147.0" width="31.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.1" y="158.0">ja..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 2.65%)</title><rect x="626.1" y="131.0" width="31.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.1" y="142.0">ja..</text>
</g>
<g>
<title>java/util/Calendar.setTime (3 samples, 2.65%)</title><rect x="626.1" y="115.0" width="31.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.1" y="126.0">ja..</text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (3 samples, 2.65%)</title><rect x="626.1" y="99.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.1" y="110.0">ja..</text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (3 samples, 2.65%)</title><rect x="626.1" y="83.0" width="31.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.1" y="94.0">ja..</text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 0.88%)</title><rect x="626.1" y="67.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.1" y="78.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 1.77%)</title><rect x="636.5" y="67.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.5" y="78.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.getWeekNumber (1 samples, 0.88%)</title><rect x="647.0" y="51.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.0" y="62.0"></text>
</g>
<g>
<title>java/util/Calendar.getMinimalDaysInFirstWeek (1 samples, 0.88%)</title><rect x="647.0" y="35.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.0" y="46.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.88%)</title><rect x="657.4" y="163.0" width="10.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="660.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 2.65%)</title><rect x="667.9" y="179.0" width="31.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.9" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 2.65%)</title><rect x="667.9" y="163.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.9" y="174.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.88%)</title><rect x="667.9" y="147.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.9" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.88%)</title><rect x="678.3" y="147.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.3" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.88%)</title><rect x="688.8" y="147.0" width="10.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="691.8" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.getFilterChainDecision (1 samples, 0.88%)</title><rect x="699.2" y="259.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/FilterAttachableImpl.getFilterChainDecision (1 samples, 0.88%)</title><rect x="699.2" y="243.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.2" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 1.77%)</title><rect x="709.6" y="259.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.6" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 1.77%)</title><rect x="709.6" y="243.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.6" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 1.77%)</title><rect x="709.6" y="227.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.6" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 1.77%)</title><rect x="709.6" y="211.0" width="20.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="712.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.88%)</title><rect x="730.5" y="371.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.88%)</title><rect x="730.5" y="355.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.88%)</title><rect x="730.5" y="339.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.88%)</title><rect x="730.5" y="323.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.88%)</title><rect x="730.5" y="307.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.88%)</title><rect x="730.5" y="291.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.88%)</title><rect x="730.5" y="275.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (18 samples, 15.93%)</title><rect x="741.0" y="371.0" width="187.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.0" y="382.0">ru/mail/polis/dao/re1nex..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (18 samples, 15.93%)</title><rect x="741.0" y="355.0" width="187.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.0" y="366.0">ru/mail/polis/dao/re1nex..</text>
</g>
<g>
<title>java/util/TreeMap.containsKey (11 samples, 9.73%)</title><rect x="741.0" y="339.0" width="114.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.0" y="350.0">java/util/Tree..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (11 samples, 9.73%)</title><rect x="741.0" y="323.0" width="114.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.0" y="334.0">java/util/Tree..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 9.73%)</title><rect x="741.0" y="307.0" width="114.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.0" y="318.0">java/nio/ByteB..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 5.31%)</title><rect x="793.2" y="291.0" width="62.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.2" y="302.0">java/n..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 5.31%)</title><rect x="793.2" y="275.0" width="62.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.2" y="286.0">java/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 2.65%)</title><rect x="814.1" y="259.0" width="31.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.1" y="270.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 2.65%)</title><rect x="814.1" y="243.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.1" y="254.0">ja..</text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.88%)</title><rect x="845.4" y="259.0" width="10.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="848.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 6.19%)</title><rect x="855.8" y="339.0" width="73.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.8" y="350.0">java/uti..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 4.42%)</title><rect x="855.8" y="323.0" width="52.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.8" y="334.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 4.42%)</title><rect x="855.8" y="307.0" width="52.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.8" y="318.0">java/..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.88%)</title><rect x="855.8" y="291.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.8" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 2.65%)</title><rect x="866.3" y="291.0" width="31.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="869.3" y="302.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.88%)</title><rect x="897.6" y="291.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.6" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.88%)</title><rect x="897.6" y="275.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 1.77%)</title><rect x="908.1" y="323.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.parentOf (1 samples, 0.88%)</title><rect x="908.1" y="307.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.88%)</title><rect x="918.5" y="307.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.88%)</title><rect x="928.9" y="403.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.88%)</title><rect x="928.9" y="387.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.9" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.88%)</title><rect x="928.9" y="371.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.88%)</title><rect x="928.9" y="355.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.88%)</title><rect x="939.4" y="403.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.88%)</title><rect x="939.4" y="387.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.88%)</title><rect x="939.4" y="371.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 2.65%)</title><rect x="949.8" y="435.0" width="31.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.8" y="446.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.77%)</title><rect x="960.3" y="419.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.77%)</title><rect x="960.3" y="403.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="963.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 1.77%)</title><rect x="981.2" y="435.0" width="20.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.88%)</title><rect x="981.2" y="419.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.88%)</title><rect x="981.2" y="403.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.88%)</title><rect x="981.2" y="387.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.88%)</title><rect x="981.2" y="371.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.2" y="382.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.88%)</title><rect x="981.2" y="355.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="984.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.88%)</title><rect x="991.6" y="419.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.88%)</title><rect x="1002.0" y="435.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.88%)</title><rect x="1002.0" y="419.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.88%)</title><rect x="1002.0" y="403.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.88%)</title><rect x="1002.0" y="387.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.88%)</title><rect x="1002.0" y="371.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.77%)</title><rect x="1012.5" y="435.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.77%)</title><rect x="1012.5" y="419.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 10.62%)</title><rect x="1033.4" y="451.0" width="125.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.4" y="462.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 10.62%)</title><rect x="1033.4" y="435.0" width="125.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.4" y="446.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 5.31%)</title><rect x="1043.8" y="419.0" width="62.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1046.8" y="430.0">Java_o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.88%)</title><rect x="1043.8" y="403.0" width="10.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1046.8" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.88%)</title><rect x="1054.2" y="403.0" width="10.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.2" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 2.65%)</title><rect x="1064.7" y="403.0" width="31.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1067.7" y="414.0">jn..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.88%)</title><rect x="1064.7" y="387.0" width="10.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1067.7" y="398.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 1.77%)</title><rect x="1075.1" y="387.0" width="20.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1078.1" y="398.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 1.77%)</title><rect x="1075.1" y="371.0" width="20.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1078.1" y="382.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.88%)</title><rect x="1096.0" y="403.0" width="10.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.0" y="414.0"></text>
</g>
<g>
<title>recv (5 samples, 4.42%)</title><rect x="1106.5" y="419.0" width="52.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1109.5" y="430.0">recv</text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.88%)</title><rect x="1158.7" y="467.0" width="10.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.7" y="478.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.88%)</title><rect x="1158.7" y="451.0" width="10.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1161.7" y="462.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.88%)</title><rect x="1158.7" y="435.0" width="10.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1161.7" y="446.0"></text>
</g>
<g>
<title>start_thread (2 samples, 1.77%)</title><rect x="1169.1" y="499.0" width="20.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1172.1" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 1.77%)</title><rect x="1169.1" y="483.0" width="20.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1172.1" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 1.77%)</title><rect x="1169.1" y="467.0" width="20.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.1" y="478.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 1.77%)</title><rect x="1169.1" y="451.0" width="20.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.1" y="462.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 1.77%)</title><rect x="1169.1" y="435.0" width="20.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.1" y="446.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 1.77%)</title><rect x="1169.1" y="419.0" width="20.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.1" y="430.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.88%)</title><rect x="1169.1" y="403.0" width="10.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.1" y="414.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.88%)</title><rect x="1169.1" y="387.0" width="10.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.1" y="398.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.88%)</title><rect x="1169.1" y="371.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.1" y="382.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.88%)</title><rect x="1169.1" y="355.0" width="10.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.1" y="366.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.88%)</title><rect x="1169.1" y="339.0" width="10.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.1" y="350.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.88%)</title><rect x="1169.1" y="323.0" width="10.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.1" y="334.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.88%)</title><rect x="1169.1" y="307.0" width="10.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.1" y="318.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.167] (1 samples, 0.88%)</title><rect x="1169.1" y="291.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.1" y="302.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (1 samples, 0.88%)</title><rect x="1179.6" y="403.0" width="10.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.6" y="414.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (1 samples, 0.88%)</title><rect x="1179.6" y="387.0" width="10.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.6" y="398.0"></text>
</g>
</g>
</svg>
