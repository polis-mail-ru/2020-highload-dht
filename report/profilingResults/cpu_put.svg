<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (1,062 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[unknown] (3 samples, 0.28%)</title><rect x="10.0" y="915.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="10.0" y="899.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.09%)</title><rect x="10.0" y="883.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>_IO_vsnprintf (1 samples, 0.09%)</title><rect x="11.1" y="899.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (1 samples, 0.09%)</title><rect x="11.1" y="883.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="14.1" y="894.0"></text>
</g>
<g>
<title>__mpn_divrem (1 samples, 0.09%)</title><rect x="11.1" y="867.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="14.1" y="878.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.09%)</title><rect x="12.2" y="899.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="15.2" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="13.3" y="915.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="13.3" y="899.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="13.3" y="883.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="13.3" y="867.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.3" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="13.3" y="851.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.3" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="13.3" y="835.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.3" y="846.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="13.3" y="819.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="16.3" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="13.3" y="803.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="16.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="13.3" y="787.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.09%)</title><rect x="14.4" y="915.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="17.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="14.4" y="899.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="17.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="14.4" y="883.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="17.4" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="14.4" y="867.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.4" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="14.4" y="851.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="17.4" y="862.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="14.4" y="835.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="17.4" y="846.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.09%)</title><rect x="14.4" y="819.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="17.4" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (940 samples, 88.51%)</title><rect x="15.6" y="915.0" width="1044.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.6" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (85 samples, 8.00%)</title><rect x="16.7" y="899.0" width="94.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.7" y="910.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (83 samples, 7.82%)</title><rect x="18.9" y="883.0" width="92.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.9" y="894.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.09%)</title><rect x="25.6" y="867.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="28.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 6.97%)</title><rect x="26.7" y="867.0" width="82.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="29.7" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (11 samples, 1.04%)</title><rect x="26.7" y="851.0" width="12.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="29.7" y="862.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 1.04%)</title><rect x="26.7" y="835.0" width="12.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="29.7" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.19%)</title><rect x="27.8" y="819.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="30.8" y="830.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.75%)</title><rect x="30.0" y="819.0" width="8.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="33.0" y="830.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.66%)</title><rect x="31.1" y="803.0" width="7.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="34.1" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.19%)</title><rect x="38.9" y="851.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="41.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (61 samples, 5.74%)</title><rect x="41.1" y="851.0" width="67.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="44.1" y="862.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 2.92%)</title><rect x="74.4" y="835.0" width="34.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.4" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 2.92%)</title><rect x="74.4" y="819.0" width="34.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.4" y="830.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 1.98%)</title><rect x="85.6" y="803.0" width="23.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.6" y="814.0">_..</text>
</g>
<g>
<title>do_epoll_wait (21 samples, 1.98%)</title><rect x="85.6" y="787.0" width="23.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.6" y="798.0">d..</text>
</g>
<g>
<title>__fdget (5 samples, 0.47%)</title><rect x="85.6" y="771.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.6" y="782.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.47%)</title><rect x="85.6" y="755.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.6" y="766.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.47%)</title><rect x="85.6" y="739.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.6" y="750.0"></text>
</g>
<g>
<title>ep_poll (15 samples, 1.41%)</title><rect x="91.1" y="771.0" width="16.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.1" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (9 samples, 0.85%)</title><rect x="95.6" y="755.0" width="10.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="98.6" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.38%)</title><rect x="101.1" y="739.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="104.1" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.19%)</title><rect x="103.3" y="723.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="106.3" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.19%)</title><rect x="103.3" y="707.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.3" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.09%)</title><rect x="103.3" y="691.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.3" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.09%)</title><rect x="103.3" y="675.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="106.3" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.09%)</title><rect x="104.4" y="691.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="107.4" y="702.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.09%)</title><rect x="105.6" y="755.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.6" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.09%)</title><rect x="106.7" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.7" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.09%)</title><rect x="106.7" y="739.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="109.7" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="106.7" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="109.7" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.09%)</title><rect x="106.7" y="707.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.7" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.09%)</title><rect x="107.8" y="771.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.8" y="782.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.19%)</title><rect x="108.9" y="867.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="111.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (854 samples, 80.41%)</title><rect x="111.1" y="899.0" width="948.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.1" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (851 samples, 80.13%)</title><rect x="113.3" y="883.0" width="945.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.3" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (794 samples, 74.76%)</title><rect x="114.4" y="867.0" width="882.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.4" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (763 samples, 71.85%)</title><rect x="123.3" y="851.0" width="847.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.3" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (763 samples, 71.85%)</title><rect x="123.3" y="835.0" width="847.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.3" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (752 samples, 70.81%)</title><rect x="124.4" y="819.0" width="835.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.4" y="830.0">RequestHandler3_upsert.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (227 samples, 21.37%)</title><rect x="124.4" y="803.0" width="252.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.4" y="814.0">one/nio/http/HttpSession.sendRespo..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (219 samples, 20.62%)</title><rect x="127.8" y="787.0" width="243.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.8" y="798.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.56%)</title><rect x="127.8" y="771.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="133.3" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="133.3" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="133.3" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="133.3" y="707.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="133.3" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (213 samples, 20.06%)</title><rect x="134.4" y="771.0" width="236.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.4" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (213 samples, 20.06%)</title><rect x="134.4" y="755.0" width="236.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.4" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (212 samples, 19.96%)</title><rect x="134.4" y="739.0" width="235.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.4" y="750.0">one/nio/net/Session$ArrayQueueI..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (212 samples, 19.96%)</title><rect x="134.4" y="723.0" width="235.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.4" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__send (210 samples, 19.77%)</title><rect x="136.7" y="707.0" width="233.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="139.7" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (195 samples, 18.36%)</title><rect x="153.3" y="691.0" width="216.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="156.3" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.09%)</title><rect x="153.3" y="675.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="156.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (194 samples, 18.27%)</title><rect x="154.4" y="675.0" width="215.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="157.4" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (190 samples, 17.89%)</title><rect x="158.9" y="659.0" width="211.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.9" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (190 samples, 17.89%)</title><rect x="158.9" y="643.0" width="211.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="161.9" y="654.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.09%)</title><rect x="158.9" y="627.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="161.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (188 samples, 17.70%)</title><rect x="160.0" y="627.0" width="208.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="163.0" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (181 samples, 17.04%)</title><rect x="161.1" y="611.0" width="201.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="164.1" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (180 samples, 16.95%)</title><rect x="162.2" y="595.0" width="200.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.2" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.09%)</title><rect x="162.2" y="579.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="165.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.09%)</title><rect x="162.2" y="563.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (179 samples, 16.85%)</title><rect x="163.3" y="579.0" width="198.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="166.3" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.19%)</title><rect x="166.7" y="563.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="169.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.19%)</title><rect x="166.7" y="547.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="169.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.38%)</title><rect x="168.9" y="563.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="171.9" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.28%)</title><rect x="170.0" y="547.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (2 samples, 0.19%)</title><rect x="170.0" y="531.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.19%)</title><rect x="170.0" y="515.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.0" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.09%)</title><rect x="171.1" y="499.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.1" y="510.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.09%)</title><rect x="172.2" y="531.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.2" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.09%)</title><rect x="172.2" y="515.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.2" y="526.0"></text>
</g>
<g>
<title>tcp_push (169 samples, 15.91%)</title><rect x="173.3" y="563.0" width="187.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="176.3" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (169 samples, 15.91%)</title><rect x="173.3" y="547.0" width="187.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.3" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (169 samples, 15.91%)</title><rect x="173.3" y="531.0" width="187.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.3" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (164 samples, 15.44%)</title><rect x="176.7" y="515.0" width="182.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="179.7" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (158 samples, 14.88%)</title><rect x="177.8" y="499.0" width="175.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="180.8" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (157 samples, 14.78%)</title><rect x="177.8" y="483.0" width="174.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.8" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (153 samples, 14.41%)</title><rect x="181.1" y="467.0" width="170.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="184.1" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.09%)</title><rect x="181.1" y="451.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.09%)</title><rect x="181.1" y="435.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="184.1" y="446.0"></text>
</g>
<g>
<title>ip_output (151 samples, 14.22%)</title><rect x="182.2" y="451.0" width="167.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.2" y="462.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.09%)</title><rect x="183.3" y="435.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="186.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (143 samples, 13.47%)</title><rect x="184.4" y="435.0" width="158.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.4" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.56%)</title><rect x="184.4" y="419.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.4" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (135 samples, 12.71%)</title><rect x="191.1" y="419.0" width="150.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.1" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (134 samples, 12.62%)</title><rect x="191.1" y="403.0" width="148.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="194.1" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (122 samples, 11.49%)</title><rect x="193.3" y="387.0" width="135.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.3" y="398.0">__local_bh_enable..</text>
</g>
<g>
<title>do_softirq.part.20 (122 samples, 11.49%)</title><rect x="193.3" y="371.0" width="135.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="196.3" y="382.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (118 samples, 11.11%)</title><rect x="197.8" y="355.0" width="131.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.8" y="366.0">do_softirq_own_s..</text>
</g>
<g>
<title>__softirqentry_text_start (118 samples, 11.11%)</title><rect x="197.8" y="339.0" width="131.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="200.8" y="350.0">__softirqentry_t..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.09%)</title><rect x="201.1" y="323.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (113 samples, 10.64%)</title><rect x="202.2" y="323.0" width="125.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.2" y="334.0">net_rx_action</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.19%)</title><rect x="202.2" y="307.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.2" y="318.0"></text>
</g>
<g>
<title>process_backlog (111 samples, 10.45%)</title><rect x="204.4" y="307.0" width="123.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.4" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (107 samples, 10.08%)</title><rect x="208.9" y="291.0" width="118.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.9" y="302.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (107 samples, 10.08%)</title><rect x="208.9" y="275.0" width="118.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.9" y="286.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.19%)</title><rect x="208.9" y="259.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (105 samples, 9.89%)</title><rect x="211.1" y="259.0" width="116.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="214.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="211.1" y="243.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="214.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (103 samples, 9.70%)</title><rect x="212.2" y="243.0" width="114.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.2" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (103 samples, 9.70%)</title><rect x="212.2" y="227.0" width="114.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.2" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (102 samples, 9.60%)</title><rect x="212.2" y="211.0" width="113.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="215.2" y="222.0">ip_local_deliv..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (102 samples, 9.60%)</title><rect x="212.2" y="195.0" width="113.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="215.2" y="206.0">ip_protocol_de..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="212.2" y="179.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (101 samples, 9.51%)</title><rect x="213.3" y="179.0" width="112.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.3" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.19%)</title><rect x="215.6" y="163.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.6" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.09%)</title><rect x="217.8" y="163.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="220.8" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (12 samples, 1.13%)</title><rect x="218.9" y="163.0" width="13.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.9" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.09%)</title><rect x="218.9" y="147.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.9" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (10 samples, 0.94%)</title><rect x="220.0" y="147.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="223.0" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (8 samples, 0.75%)</title><rect x="222.2" y="131.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="225.2" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.09%)</title><rect x="225.6" y="115.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.6" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (4 samples, 0.38%)</title><rect x="226.7" y="115.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="229.7" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.09%)</title><rect x="230.0" y="99.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.0" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.09%)</title><rect x="231.1" y="147.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="234.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (84 samples, 7.91%)</title><rect x="232.2" y="163.0" width="93.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.2" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.09%)</title><rect x="233.3" y="147.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.3" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.19%)</title><rect x="234.4" y="147.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="237.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (80 samples, 7.53%)</title><rect x="236.7" y="147.0" width="88.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.7" y="158.0">tcp_rcv_es..</text>
</g>
<g>
<title>sock_def_readable (47 samples, 4.43%)</title><rect x="237.8" y="131.0" width="52.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="240.8" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (45 samples, 4.24%)</title><rect x="240.0" y="115.0" width="50.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.0" y="126.0">__wak..</text>
</g>
<g>
<title>__wake_up_common_lock (45 samples, 4.24%)</title><rect x="240.0" y="99.0" width="50.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.0" y="110.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (45 samples, 4.24%)</title><rect x="240.0" y="83.0" width="50.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.0" y="94.0">_raw_..</text>
</g>
<g>
<title>tcp_ack (24 samples, 2.26%)</title><rect x="290.0" y="131.0" width="26.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.0" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (14 samples, 1.32%)</title><rect x="295.6" y="115.0" width="15.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="298.6" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.38%)</title><rect x="295.6" y="99.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.6" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.38%)</title><rect x="295.6" y="83.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.28%)</title><rect x="296.7" y="67.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.94%)</title><rect x="300.0" y="99.0" width="11.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.94%)</title><rect x="300.0" y="83.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="303.0" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.09%)</title><rect x="303.3" y="67.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.3" y="78.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.56%)</title><rect x="304.4" y="67.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.4" y="78.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.56%)</title><rect x="304.4" y="51.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="307.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.28%)</title><rect x="307.8" y="35.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.8" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.09%)</title><rect x="311.1" y="115.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.1" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.09%)</title><rect x="312.2" y="115.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="315.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (2 samples, 0.19%)</title><rect x="313.3" y="115.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.3" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.09%)</title><rect x="315.6" y="115.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.6" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.09%)</title><rect x="316.7" y="131.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="319.7" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.09%)</title><rect x="317.8" y="131.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="320.8" y="142.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="317.8" y="115.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="320.8" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.28%)</title><rect x="318.9" y="131.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="321.9" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.19%)</title><rect x="322.2" y="131.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="325.2" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.09%)</title><rect x="324.4" y="131.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="327.4" y="142.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.09%)</title><rect x="325.6" y="211.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.09%)</title><rect x="326.7" y="243.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.7" y="254.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.09%)</title><rect x="327.8" y="323.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="330.8" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.94%)</title><rect x="328.9" y="387.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="331.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.94%)</title><rect x="328.9" y="371.0" width="11.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="331.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.56%)</title><rect x="331.1" y="355.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="334.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.19%)</title><rect x="332.2" y="339.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.09%)</title><rect x="332.2" y="323.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="335.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.09%)</title><rect x="332.2" y="307.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="335.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.09%)</title><rect x="332.2" y="291.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.2" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.09%)</title><rect x="333.3" y="323.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="336.3" y="334.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.09%)</title><rect x="333.3" y="307.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="336.3" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.28%)</title><rect x="334.4" y="339.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="337.4" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.09%)</title><rect x="337.8" y="355.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.09%)</title><rect x="338.9" y="355.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.9" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.09%)</title><rect x="338.9" y="339.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="341.9" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.09%)</title><rect x="338.9" y="323.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.9" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.09%)</title><rect x="340.0" y="403.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="343.0" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.09%)</title><rect x="341.1" y="419.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="344.1" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.09%)</title><rect x="342.2" y="419.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="345.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.47%)</title><rect x="343.3" y="435.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="346.3" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.09%)</title><rect x="343.3" y="419.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="346.3" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.38%)</title><rect x="344.4" y="419.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="347.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.38%)</title><rect x="344.4" y="403.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.38%)</title><rect x="344.4" y="387.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="347.4" y="398.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (3 samples, 0.28%)</title><rect x="345.6" y="371.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="348.6" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.28%)</title><rect x="345.6" y="355.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.6" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.09%)</title><rect x="348.9" y="435.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="351.9" y="446.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.09%)</title><rect x="350.0" y="451.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.0" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.09%)</title><rect x="351.1" y="467.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.1" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.09%)</title><rect x="352.2" y="483.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.2" y="494.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.28%)</title><rect x="353.3" y="499.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.19%)</title><rect x="354.4" y="483.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.4" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.19%)</title><rect x="354.4" y="467.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.4" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.09%)</title><rect x="356.7" y="499.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="359.7" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.09%)</title><rect x="357.8" y="499.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="360.8" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.09%)</title><rect x="357.8" y="483.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="360.8" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.09%)</title><rect x="358.9" y="515.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="361.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.09%)</title><rect x="358.9" y="499.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="361.9" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.09%)</title><rect x="358.9" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.9" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.09%)</title><rect x="358.9" y="467.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="361.9" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.09%)</title><rect x="360.0" y="515.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="363.0" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.09%)</title><rect x="361.1" y="563.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.1" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.09%)</title><rect x="361.1" y="547.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.1" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.47%)</title><rect x="362.2" y="611.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="365.2" y="622.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.19%)</title><rect x="363.3" y="595.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="366.3" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.19%)</title><rect x="365.6" y="595.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="368.6" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (2 samples, 0.19%)</title><rect x="365.6" y="579.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="368.6" y="590.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.09%)</title><rect x="367.8" y="611.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.09%)</title><rect x="368.9" y="627.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.9" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.09%)</title><rect x="368.9" y="611.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="368.9" y="595.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.9" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="368.9" y="579.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="371.9" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="370.0" y="739.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="373.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="370.0" y="723.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="373.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="370.0" y="707.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="373.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.38%)</title><rect x="371.1" y="787.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="375.6" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.28%)</title><rect x="376.7" y="803.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.19%)</title><rect x="376.7" y="787.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="376.7" y="771.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="376.7" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.7" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="376.7" y="739.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="379.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.09%)</title><rect x="377.8" y="771.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="377.8" y="755.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="377.8" y="739.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="377.8" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.09%)</title><rect x="378.9" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (1 samples, 0.09%)</title><rect x="380.0" y="803.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (521 samples, 49.06%)</title><rect x="381.1" y="803.0" width="578.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.1" y="814.0">ru/mail/polis/service/zvladn7/BasicService.upsert</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.28%)</title><rect x="381.1" y="787.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.28%)</title><rect x="381.1" y="771.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (2 samples, 0.19%)</title><rect x="381.1" y="755.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.09%)</title><rect x="383.3" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.09%)</title><rect x="383.3" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="383.3" y="723.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="383.3" y="707.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (509 samples, 47.93%)</title><rect x="384.4" y="787.0" width="565.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.4" y="798.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.flush (470 samples, 44.26%)</title><rect x="384.4" y="771.0" width="522.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.4" y="782.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.flush</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (470 samples, 44.26%)</title><rect x="384.4" y="755.0" width="522.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.4" y="766.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (470 samples, 44.26%)</title><rect x="384.4" y="739.0" width="522.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.4" y="750.0">ru/mail/polis/dao/zvladn7/SSTable.serialize</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 1.04%)</title><rect x="385.6" y="723.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 1.04%)</title><rect x="385.6" y="707.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 1.04%)</title><rect x="385.6" y="691.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.6" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (3 samples, 0.28%)</title><rect x="385.6" y="675.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.6" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (3 samples, 0.28%)</title><rect x="385.6" y="659.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (3 samples, 0.28%)</title><rect x="385.6" y="643.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.28%)</title><rect x="385.6" y="627.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.28%)</title><rect x="385.6" y="611.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (3 samples, 0.28%)</title><rect x="385.6" y="595.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.28%)</title><rect x="385.6" y="579.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.75%)</title><rect x="388.9" y="675.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$85/1999939271.getAsBoolean (8 samples, 0.75%)</title><rect x="388.9" y="659.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.75%)</title><rect x="388.9" y="643.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.9" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (8 samples, 0.75%)</title><rect x="388.9" y="627.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (6 samples, 0.56%)</title><rect x="388.9" y="611.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (6 samples, 0.56%)</title><rect x="388.9" y="595.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (6 samples, 0.56%)</title><rect x="388.9" y="579.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (6 samples, 0.56%)</title><rect x="388.9" y="563.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (2 samples, 0.19%)</title><rect x="395.6" y="611.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (1 samples, 0.09%)</title><rect x="397.8" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.09%)</title><rect x="397.8" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.8" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.09%)</title><rect x="397.8" y="691.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="400.8" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="397.8" y="675.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="400.8" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.09%)</title><rect x="397.8" y="659.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="400.8" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="397.8" y="643.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="400.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.09%)</title><rect x="397.8" y="627.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="400.8" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.09%)</title><rect x="397.8" y="611.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="400.8" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.09%)</title><rect x="397.8" y="595.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="400.8" y="606.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.09%)</title><rect x="397.8" y="579.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="400.8" y="590.0"></text>
</g>
<g>
<title>Thread::get_priority(Thread const*) (1 samples, 0.09%)</title><rect x="397.8" y="563.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="400.8" y="574.0"></text>
</g>
<g>
<title>os::get_native_priority(Thread const*, int*) (1 samples, 0.09%)</title><rect x="397.8" y="547.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="400.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (457 samples, 43.03%)</title><rect x="398.9" y="723.0" width="507.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.9" y="734.0">sun/nio/ch/FileChannelImpl.write</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.09%)</title><rect x="400.0" y="707.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.85%)</title><rect x="401.1" y="707.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.1" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.85%)</title><rect x="401.1" y="691.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.1" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.28%)</title><rect x="407.8" y="675.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.8" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.28%)</title><rect x="407.8" y="659.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.28%)</title><rect x="407.8" y="643.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.38%)</title><rect x="411.1" y="707.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.1" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.38%)</title><rect x="411.1" y="691.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (441 samples, 41.53%)</title><rect x="415.6" y="707.0" width="490.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.6" y="718.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="421.1" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.09%)</title><rect x="421.1" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.1" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.28%)</title><rect x="422.2" y="691.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.19%)</title><rect x="422.2" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.19%)</title><rect x="422.2" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.2" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.09%)</title><rect x="424.4" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.4" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="424.4" y="659.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="427.4" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.09%)</title><rect x="425.6" y="691.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.6" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.09%)</title><rect x="425.6" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.09%)</title><rect x="425.6" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.6" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.09%)</title><rect x="425.6" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (418 samples, 39.36%)</title><rect x="426.7" y="691.0" width="464.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.7" y="702.0">sun/nio/ch/IOUtil.writeFromNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (417 samples, 39.27%)</title><rect x="426.7" y="675.0" width="463.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.7" y="686.0">sun/nio/ch/FileDispatcherImpl.write</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (417 samples, 39.27%)</title><rect x="426.7" y="659.0" width="463.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.7" y="670.0">sun/nio/ch/FileDispatcherImpl.write0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.19%)</title><rect x="428.9" y="643.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="431.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (412 samples, 38.79%)</title><rect x="431.1" y="643.0" width="457.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="434.1" y="654.0">[unknown]</text>
</g>
<g>
<title>__libc_write (410 samples, 38.61%)</title><rect x="431.1" y="627.0" width="455.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="434.1" y="638.0">__libc_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (326 samples, 30.70%)</title><rect x="524.4" y="611.0" width="362.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="527.4" y="622.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.38%)</title><rect x="524.4" y="595.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="527.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (322 samples, 30.32%)</title><rect x="528.9" y="595.0" width="357.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="531.9" y="606.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (285 samples, 26.84%)</title><rect x="570.0" y="579.0" width="316.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="573.0" y="590.0">__x64_sys_write</text>
</g>
<g>
<title>ksys_write (285 samples, 26.84%)</title><rect x="570.0" y="563.0" width="316.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="573.0" y="574.0">ksys_write</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.19%)</title><rect x="572.2" y="547.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="575.2" y="558.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.19%)</title><rect x="572.2" y="531.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="575.2" y="542.0"></text>
</g>
<g>
<title>__fdget_pos (14 samples, 1.32%)</title><rect x="574.4" y="547.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.4" y="558.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.94%)</title><rect x="576.7" y="531.0" width="11.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="579.7" y="542.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.47%)</title><rect x="582.2" y="515.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.2" y="526.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.19%)</title><rect x="587.8" y="531.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="590.8" y="542.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="590.0" y="547.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.0" y="558.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.09%)</title><rect x="591.1" y="547.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.1" y="558.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.09%)</title><rect x="592.2" y="547.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.2" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.09%)</title><rect x="593.3" y="547.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.3" y="558.0"></text>
</g>
<g>
<title>vfs_write (263 samples, 24.76%)</title><rect x="594.4" y="547.0" width="292.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="597.4" y="558.0">vfs_write</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.19%)</title><rect x="595.6" y="531.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.6" y="542.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.09%)</title><rect x="597.8" y="531.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="600.8" y="542.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.28%)</title><rect x="598.9" y="531.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="601.9" y="542.0"></text>
</g>
<g>
<title>__vfs_write (247 samples, 23.26%)</title><rect x="602.2" y="531.0" width="274.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="605.2" y="542.0">__vfs_write</text>
</g>
<g>
<title>ext4_file_write_iter (3 samples, 0.28%)</title><rect x="602.2" y="515.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="605.2" y="526.0"></text>
</g>
<g>
<title>new_sync_write (244 samples, 22.98%)</title><rect x="605.6" y="515.0" width="271.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="608.6" y="526.0">new_sync_write</text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.09%)</title><rect x="611.1" y="499.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="614.1" y="510.0"></text>
</g>
<g>
<title>ext4_file_write_iter (236 samples, 22.22%)</title><rect x="612.2" y="499.0" width="262.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="615.2" y="510.0">ext4_file_write_iter</text>
</g>
<g>
<title>__generic_file_write_iter (222 samples, 20.90%)</title><rect x="623.3" y="483.0" width="246.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="626.3" y="494.0">__generic_file_write_iter</text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.38%)</title><rect x="623.3" y="467.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="626.3" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 0.38%)</title><rect x="627.8" y="467.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="630.8" y="478.0"></text>
</g>
<g>
<title>file_remove_privs (1 samples, 0.09%)</title><rect x="632.2" y="467.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.2" y="478.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.38%)</title><rect x="633.3" y="467.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="636.3" y="478.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.28%)</title><rect x="634.4" y="451.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.4" y="462.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.28%)</title><rect x="634.4" y="435.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="637.4" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (209 samples, 19.68%)</title><rect x="637.8" y="467.0" width="232.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="640.8" y="478.0">generic_perform_write</text>
</g>
<g>
<title>ext4_da_write_begin (49 samples, 4.61%)</title><rect x="644.4" y="451.0" width="54.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.4" y="462.0">ext4_..</text>
</g>
<g>
<title>__ext4_journal_start_sb (28 samples, 2.64%)</title><rect x="648.9" y="435.0" width="31.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="651.9" y="446.0">__..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.09%)</title><rect x="648.9" y="419.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.9" y="430.0"></text>
</g>
<g>
<title>jbd2__journal_start (26 samples, 2.45%)</title><rect x="650.0" y="419.0" width="28.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="653.0" y="430.0">jb..</text>
</g>
<g>
<title>kmem_cache_alloc (6 samples, 0.56%)</title><rect x="652.2" y="403.0" width="6.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.2" y="414.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.19%)</title><rect x="656.7" y="387.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="659.7" y="398.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.19%)</title><rect x="656.7" y="371.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="659.7" y="382.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.38%)</title><rect x="658.9" y="403.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="661.9" y="414.0"></text>
</g>
<g>
<title>start_this_handle (14 samples, 1.32%)</title><rect x="663.3" y="403.0" width="15.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="666.3" y="414.0"></text>
</g>
<g>
<title>_raw_read_lock (3 samples, 0.28%)</title><rect x="671.1" y="387.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="674.1" y="398.0"></text>
</g>
<g>
<title>add_transaction_credits (4 samples, 0.38%)</title><rect x="674.4" y="387.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.4" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="678.9" y="419.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.9" y="430.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.19%)</title><rect x="680.0" y="435.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="683.0" y="446.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (14 samples, 1.32%)</title><rect x="682.2" y="435.0" width="15.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="685.2" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.94%)</title><rect x="683.3" y="419.0" width="11.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.3" y="430.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.94%)</title><rect x="683.3" y="403.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="686.3" y="414.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.47%)</title><rect x="688.9" y="387.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.9" y="398.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.28%)</title><rect x="691.1" y="371.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="694.1" y="382.0"></text>
</g>
<g>
<title>wait_for_stable_page (3 samples, 0.28%)</title><rect x="694.4" y="419.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.4" y="430.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.09%)</title><rect x="697.8" y="435.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="700.8" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_end (135 samples, 12.71%)</title><rect x="698.9" y="451.0" width="150.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.9" y="462.0">ext4_da_write_end</text>
</g>
<g>
<title>__ext4_journal_stop (22 samples, 2.07%)</title><rect x="701.1" y="435.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.1" y="446.0">_..</text>
</g>
<g>
<title>jbd2_journal_stop (20 samples, 1.88%)</title><rect x="703.3" y="419.0" width="22.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.3" y="430.0">j..</text>
</g>
<g>
<title>__wake_up (4 samples, 0.38%)</title><rect x="716.7" y="403.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="719.7" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.28%)</title><rect x="716.7" y="387.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="719.7" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.28%)</title><rect x="716.7" y="371.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="719.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="720.0" y="387.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="723.0" y="398.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.38%)</title><rect x="721.1" y="403.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="724.1" y="414.0"></text>
</g>
<g>
<title>generic_write_end (111 samples, 10.45%)</title><rect x="725.6" y="435.0" width="123.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="728.6" y="446.0">generic_write_end</text>
</g>
<g>
<title>__mark_inode_dirty (102 samples, 9.60%)</title><rect x="728.9" y="419.0" width="113.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.9" y="430.0">__mark_inode_d..</text>
</g>
<g>
<title>ext4_dirty_inode (99 samples, 9.32%)</title><rect x="732.2" y="403.0" width="110.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.2" y="414.0">ext4_dirty_in..</text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.47%)</title><rect x="733.3" y="387.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="736.3" y="398.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.09%)</title><rect x="735.6" y="371.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.6" y="382.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.19%)</title><rect x="736.7" y="371.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.7" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.09%)</title><rect x="738.9" y="387.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="741.9" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (92 samples, 8.66%)</title><rect x="740.0" y="387.0" width="102.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="743.0" y="398.0">ext4_mark_in..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (69 samples, 6.50%)</title><rect x="741.1" y="371.0" width="76.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="744.1" y="382.0">ext4_mar..</text>
</g>
<g>
<title>__brelse (1 samples, 0.09%)</title><rect x="754.4" y="355.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.4" y="366.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.09%)</title><rect x="755.6" y="355.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.6" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.09%)</title><rect x="755.6" y="339.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.6" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.19%)</title><rect x="756.7" y="355.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.7" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (50 samples, 4.71%)</title><rect x="758.9" y="355.0" width="55.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.9" y="366.0">ext4_..</text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.19%)</title><rect x="760.0" y="339.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.0" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (47 samples, 4.43%)</title><rect x="762.2" y="339.0" width="52.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="765.2" y="350.0">ext4_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="767.8" y="323.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="770.8" y="334.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (18 samples, 1.69%)</title><rect x="768.9" y="323.0" width="20.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.9" y="334.0"></text>
</g>
<g>
<title>crypto_shash_update (23 samples, 2.17%)</title><rect x="788.9" y="323.0" width="25.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="791.9" y="334.0">c..</text>
</g>
<g>
<title>crc32c_pcl_intel_update (20 samples, 1.88%)</title><rect x="792.2" y="307.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="795.2" y="318.0">c..</text>
</g>
<g>
<title>from_kgid (1 samples, 0.09%)</title><rect x="814.4" y="355.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="817.4" y="366.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.09%)</title><rect x="814.4" y="339.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="817.4" y="350.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.09%)</title><rect x="815.6" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="818.6" y="366.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.09%)</title><rect x="815.6" y="339.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.6" y="350.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.09%)</title><rect x="816.7" y="355.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.7" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (22 samples, 2.07%)</title><rect x="817.8" y="371.0" width="24.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="820.8" y="382.0">e..</text>
</g>
<g>
<title>__ext4_get_inode_loc (21 samples, 1.98%)</title><rect x="817.8" y="355.0" width="23.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.8" y="366.0">_..</text>
</g>
<g>
<title>__getblk_gfp (7 samples, 0.66%)</title><rect x="832.2" y="339.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.2" y="350.0"></text>
</g>
<g>
<title>__find_get_block (6 samples, 0.56%)</title><rect x="832.2" y="323.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="835.2" y="334.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.09%)</title><rect x="838.9" y="323.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.9" y="334.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.09%)</title><rect x="840.0" y="339.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="843.0" y="350.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.09%)</title><rect x="841.1" y="355.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="844.1" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.09%)</title><rect x="841.1" y="339.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.1" y="350.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.09%)</title><rect x="841.1" y="323.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="844.1" y="334.0"></text>
</g>
<g>
<title>block_write_end (5 samples, 0.47%)</title><rect x="842.2" y="419.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="845.2" y="430.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (5 samples, 0.47%)</title><rect x="842.2" y="403.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="845.2" y="414.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.19%)</title><rect x="845.6" y="387.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="848.6" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.09%)</title><rect x="847.8" y="419.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="850.8" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.19%)</title><rect x="848.9" y="451.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="851.9" y="462.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (8 samples, 0.75%)</title><rect x="851.1" y="451.0" width="8.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.1" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.38%)</title><rect x="855.6" y="435.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="858.6" y="446.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (9 samples, 0.85%)</title><rect x="860.0" y="451.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="863.0" y="462.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.19%)</title><rect x="870.0" y="483.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.0" y="494.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.09%)</title><rect x="871.1" y="467.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.1" y="478.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.09%)</title><rect x="871.1" y="451.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="874.1" y="462.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.19%)</title><rect x="872.2" y="483.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.2" y="494.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.19%)</title><rect x="874.4" y="499.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.4" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.09%)</title><rect x="876.7" y="531.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="879.7" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.75%)</title><rect x="877.8" y="531.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.8" y="542.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.66%)</title><rect x="877.8" y="515.0" width="7.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="880.8" y="526.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.19%)</title><rect x="877.8" y="499.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.8" y="510.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.19%)</title><rect x="877.8" y="483.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="880.8" y="494.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.09%)</title><rect x="878.9" y="467.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="881.9" y="478.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.47%)</title><rect x="880.0" y="499.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="883.0" y="510.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.09%)</title><rect x="884.4" y="483.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.4" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.09%)</title><rect x="884.4" y="467.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="887.4" y="478.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.09%)</title><rect x="885.6" y="515.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="888.6" y="526.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.19%)</title><rect x="886.7" y="627.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="889.7" y="638.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.09%)</title><rect x="888.9" y="643.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="891.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.09%)</title><rect x="890.0" y="675.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.75%)</title><rect x="891.1" y="691.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.56%)</title><rect x="892.2" y="675.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.09%)</title><rect x="897.8" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.09%)</title><rect x="898.9" y="675.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.47%)</title><rect x="900.0" y="691.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="902.2" y="675.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.09%)</title><rect x="902.2" y="659.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.19%)</title><rect x="903.3" y="675.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.09%)</title><rect x="905.6" y="707.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (39 samples, 3.67%)</title><rect x="906.7" y="771.0" width="43.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.7" y="782.0">ru/m..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="907.8" y="755.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="910.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.19%)</title><rect x="908.9" y="755.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.9" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.09%)</title><rect x="910.0" y="739.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="913.0" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="910.0" y="723.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="913.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.09%)</title><rect x="910.0" y="707.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="910.0" y="691.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="913.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.09%)</title><rect x="910.0" y="675.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="913.0" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.09%)</title><rect x="910.0" y="659.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="913.0" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.09%)</title><rect x="910.0" y="643.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="913.0" y="654.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.09%)</title><rect x="910.0" y="627.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="913.0" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::used_unlocked() const (1 samples, 0.09%)</title><rect x="910.0" y="611.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="913.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (34 samples, 3.20%)</title><rect x="911.1" y="755.0" width="37.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.1" y="766.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (27 samples, 2.54%)</title><rect x="915.6" y="739.0" width="30.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.6" y="750.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 1.69%)</title><rect x="925.6" y="723.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.6" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 1.51%)</title><rect x="925.6" y="707.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.6" y="718.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.38%)</title><rect x="938.9" y="691.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="941.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.19%)</title><rect x="943.3" y="707.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.19%)</title><rect x="943.3" y="691.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.28%)</title><rect x="945.6" y="739.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.09%)</title><rect x="947.8" y="723.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.8" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="948.9" y="755.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="951.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="948.9" y="739.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="951.9" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="948.9" y="723.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="951.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (4 samples, 0.38%)</title><rect x="950.0" y="787.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.38%)</title><rect x="950.0" y="771.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.38%)</title><rect x="950.0" y="755.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.38%)</title><rect x="950.0" y="739.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.38%)</title><rect x="950.0" y="723.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.38%)</title><rect x="950.0" y="707.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.19%)</title><rect x="952.2" y="691.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="953.3" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.09%)</title><rect x="953.3" y="659.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (5 samples, 0.47%)</title><rect x="954.4" y="787.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.47%)</title><rect x="954.4" y="771.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.47%)</title><rect x="954.4" y="755.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.47%)</title><rect x="954.4" y="739.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.47%)</title><rect x="954.4" y="723.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.47%)</title><rect x="954.4" y="707.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="955.6" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="958.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="955.6" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="958.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.09%)</title><rect x="955.6" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.28%)</title><rect x="956.7" y="691.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.19%)</title><rect x="957.8" y="675.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.38%)</title><rect x="960.0" y="819.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.38%)</title><rect x="960.0" y="803.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.28%)</title><rect x="961.1" y="787.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.56%)</title><rect x="964.4" y="819.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.56%)</title><rect x="964.4" y="803.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="964.4" y="787.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.47%)</title><rect x="965.6" y="787.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="965.6" y="771.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="965.6" y="755.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.6" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.19%)</title><rect x="966.7" y="771.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.7" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.09%)</title><rect x="967.8" y="755.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="970.8" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="967.8" y="739.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="970.8" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="967.8" y="723.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="970.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.19%)</title><rect x="968.9" y="771.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.85%)</title><rect x="971.1" y="851.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.19%)</title><rect x="971.1" y="835.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.1" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.09%)</title><rect x="971.1" y="819.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="974.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="972.2" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="972.2" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="972.2" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.56%)</title><rect x="973.3" y="835.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.47%)</title><rect x="974.4" y="819.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.4" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.09%)</title><rect x="978.9" y="803.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="981.9" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="978.9" y="787.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="981.9" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="978.9" y="771.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="981.9" y="782.0"></text>
</g>
<g>
<title>JfrAllocationTracer::~JfrAllocationTracer() (1 samples, 0.09%)</title><rect x="978.9" y="755.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="981.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="980.0" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.28%)</title><rect x="981.1" y="851.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.19%)</title><rect x="982.2" y="835.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.28%)</title><rect x="984.4" y="851.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="985.6" y="835.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="985.6" y="819.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="986.7" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="986.7" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.7" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="986.7" y="803.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="989.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.75%)</title><rect x="987.8" y="851.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="987.8" y="835.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.66%)</title><rect x="988.9" y="835.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.09%)</title><rect x="995.6" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="998.6" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="995.6" y="803.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="998.6" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="995.6" y="787.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="998.6" y="798.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.09%)</title><rect x="995.6" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="998.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (56 samples, 5.27%)</title><rect x="996.7" y="867.0" width="62.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.7" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (56 samples, 5.27%)</title><rect x="996.7" y="851.0" width="62.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.7" y="862.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.75%)</title><rect x="997.8" y="835.0" width="8.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1000.8" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.19%)</title><rect x="998.9" y="819.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.9" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.09%)</title><rect x="1001.1" y="819.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1004.1" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.09%)</title><rect x="1002.2" y="819.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1005.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="1003.3" y="819.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1006.3" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.19%)</title><rect x="1004.4" y="819.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1007.4" y="830.0"></text>
</g>
<g>
<title>__recv (47 samples, 4.43%)</title><rect x="1006.7" y="835.0" width="52.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1009.7" y="846.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 3.01%)</title><rect x="1023.3" y="819.0" width="35.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1026.3" y="830.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.09%)</title><rect x="1023.3" y="803.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 2.92%)</title><rect x="1024.4" y="803.0" width="34.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.4" y="814.0">do..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.19%)</title><rect x="1028.9" y="787.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1031.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (25 samples, 2.35%)</title><rect x="1031.1" y="787.0" width="27.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1034.1" y="798.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (25 samples, 2.35%)</title><rect x="1031.1" y="771.0" width="27.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1034.1" y="782.0">_..</text>
</g>
<g>
<title>sock_recvmsg (24 samples, 2.26%)</title><rect x="1032.2" y="755.0" width="26.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.2" y="766.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (21 samples, 1.98%)</title><rect x="1033.3" y="739.0" width="23.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1036.3" y="750.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 1.98%)</title><rect x="1033.3" y="723.0" width="23.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1036.3" y="734.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.09%)</title><rect x="1038.9" y="707.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1041.9" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.09%)</title><rect x="1038.9" y="691.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.9" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.28%)</title><rect x="1040.0" y="707.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.0" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.09%)</title><rect x="1040.0" y="691.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1043.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.19%)</title><rect x="1041.1" y="691.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1044.1" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.09%)</title><rect x="1043.3" y="707.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.09%)</title><rect x="1043.3" y="691.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1046.3" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.85%)</title><rect x="1044.4" y="707.0" width="10.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1047.4" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.75%)</title><rect x="1045.6" y="691.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1048.6" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.75%)</title><rect x="1045.6" y="675.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1048.6" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.28%)</title><rect x="1045.6" y="659.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1048.6" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.47%)</title><rect x="1048.9" y="659.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.9" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.28%)</title><rect x="1051.1" y="643.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1054.1" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.19%)</title><rect x="1054.4" y="707.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1057.4" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.19%)</title><rect x="1054.4" y="691.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1057.4" y="702.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.19%)</title><rect x="1054.4" y="675.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1057.4" y="686.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.19%)</title><rect x="1054.4" y="659.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1057.4" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.19%)</title><rect x="1056.7" y="739.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1059.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.19%)</title><rect x="1056.7" y="723.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1059.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.19%)</title><rect x="1056.7" y="707.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1059.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.19%)</title><rect x="1056.7" y="691.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1059.7" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="1058.9" y="883.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1061.9" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="1058.9" y="867.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1061.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="1058.9" y="851.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1061.9" y="862.0"></text>
</g>
<g>
<title>start_thread (117 samples, 11.02%)</title><rect x="1060.0" y="915.0" width="130.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1063.0" y="926.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (117 samples, 11.02%)</title><rect x="1060.0" y="899.0" width="130.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1063.0" y="910.0">thread_native_en..</text>
</g>
<g>
<title>Thread::call_run() (117 samples, 11.02%)</title><rect x="1060.0" y="883.0" width="130.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.0" y="894.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (116 samples, 10.92%)</title><rect x="1060.0" y="867.0" width="128.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.0" y="878.0">GangWorker::loop()</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (14 samples, 1.32%)</title><rect x="1060.0" y="851.0" width="15.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.0" y="862.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (14 samples, 1.32%)</title><rect x="1060.0" y="835.0" width="15.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.0" y="846.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (11 samples, 1.04%)</title><rect x="1060.0" y="819.0" width="12.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.0" y="830.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (10 samples, 0.94%)</title><rect x="1060.0" y="803.0" width="11.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.0" y="814.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (10 samples, 0.94%)</title><rect x="1060.0" y="787.0" width="11.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1063.0" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (8 samples, 0.75%)</title><rect x="1061.1" y="771.0" width="8.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.1" y="782.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (5 samples, 0.47%)</title><rect x="1064.4" y="755.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.4" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="1070.0" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1073.0" y="782.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.09%)</title><rect x="1070.0" y="755.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1073.0" y="766.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.09%)</title><rect x="1071.1" y="803.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.1" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="1071.1" y="787.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1074.1" y="798.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.09%)</title><rect x="1071.1" y="771.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.1" y="782.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (3 samples, 0.28%)</title><rect x="1072.2" y="819.0" width="3.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1075.2" y="830.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.28%)</title><rect x="1072.2" y="803.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.2" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.28%)</title><rect x="1072.2" y="787.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1075.2" y="798.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (3 samples, 0.28%)</title><rect x="1072.2" y="771.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.2" y="782.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.09%)</title><rect x="1074.4" y="755.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1077.4" y="766.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.09%)</title><rect x="1075.6" y="851.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1078.6" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.09%)</title><rect x="1075.6" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1078.6" y="846.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.09%)</title><rect x="1075.6" y="819.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1078.6" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1075.6" y="803.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1078.6" y="814.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (90 samples, 8.47%)</title><rect x="1076.7" y="851.0" width="100.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.7" y="862.0">G1ParTask::w..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (59 samples, 5.56%)</title><rect x="1076.7" y="835.0" width="65.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.7" y="846.0">G1ParEv..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.28%)</title><rect x="1087.8" y="819.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.8" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (46 samples, 4.33%)</title><rect x="1091.1" y="819.0" width="51.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1094.1" y="830.0">G1Par..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (26 samples, 2.45%)</title><rect x="1112.2" y="803.0" width="28.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.2" y="814.0">G1..</text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="1132.2" y="787.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1135.2" y="798.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="1132.2" y="771.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1135.2" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="1132.2" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1135.2" y="766.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.09%)</title><rect x="1132.2" y="739.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.2" y="750.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.09%)</title><rect x="1132.2" y="723.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1135.2" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.66%)</title><rect x="1133.3" y="787.0" width="7.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.3" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="1141.1" y="803.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.1" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (30 samples, 2.82%)</title><rect x="1142.2" y="835.0" width="33.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.2" y="846.0">G1..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (30 samples, 2.82%)</title><rect x="1142.2" y="819.0" width="33.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1145.2" y="830.0">G1..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (30 samples, 2.82%)</title><rect x="1142.2" y="803.0" width="33.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.2" y="814.0">G1..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (30 samples, 2.82%)</title><rect x="1142.2" y="787.0" width="33.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.2" y="798.0">Di..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (30 samples, 2.82%)</title><rect x="1142.2" y="771.0" width="33.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1145.2" y="782.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (25 samples, 2.35%)</title><rect x="1142.2" y="755.0" width="27.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.2" y="766.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (12 samples, 1.13%)</title><rect x="1156.7" y="739.0" width="13.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.7" y="750.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.09%)</title><rect x="1166.7" y="723.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.7" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.19%)</title><rect x="1167.8" y="723.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.8" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.47%)</title><rect x="1170.0" y="755.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.0" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.47%)</title><rect x="1170.0" y="739.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.0" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.19%)</title><rect x="1171.1" y="723.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.1" y="734.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.19%)</title><rect x="1171.1" y="707.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.1" y="718.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (2 samples, 0.19%)</title><rect x="1171.1" y="691.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.1" y="702.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.09%)</title><rect x="1173.3" y="723.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.3" y="734.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.577] (1 samples, 0.09%)</title><rect x="1174.4" y="723.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.4" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.09%)</title><rect x="1175.6" y="835.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.6" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.09%)</title><rect x="1175.6" y="819.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.6" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.09%)</title><rect x="1175.6" y="803.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.6" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.09%)</title><rect x="1175.6" y="787.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.6" y="798.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (1 samples, 0.09%)</title><rect x="1175.6" y="771.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.6" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="1175.6" y="755.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.6" y="766.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (10 samples, 0.94%)</title><rect x="1176.7" y="851.0" width="11.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.7" y="862.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (10 samples, 0.94%)</title><rect x="1176.7" y="835.0" width="11.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.7" y="846.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (10 samples, 0.94%)</title><rect x="1176.7" y="819.0" width="11.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.7" y="830.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (1 samples, 0.09%)</title><rect x="1180.0" y="803.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.0" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (6 samples, 0.56%)</title><rect x="1181.1" y="803.0" width="6.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.1" y="814.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_reference(void*, unsigned int) [clone .part.54] (1 samples, 0.09%)</title><rect x="1183.3" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.3" y="798.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.09%)</title><rect x="1184.4" y="787.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.4" y="798.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (2 samples, 0.19%)</title><rect x="1185.6" y="787.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.6" y="798.0"></text>
</g>
<g>
<title>ParallelCleaningTask::work(unsigned int) (1 samples, 0.09%)</title><rect x="1187.8" y="851.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>nmethod::do_unloading(bool) (1 samples, 0.09%)</title><rect x="1187.8" y="835.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::unload_nmethod_caches(bool) (1 samples, 0.09%)</title><rect x="1187.8" y="819.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (1 samples, 0.09%)</title><rect x="1187.8" y="803.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="814.0"></text>
</g>
<g>
<title>nmethod::is_unloading() (1 samples, 0.09%)</title><rect x="1187.8" y="787.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const (1 samples, 0.09%)</title><rect x="1187.8" y="771.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.09%)</title><rect x="1187.8" y="755.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.09%)</title><rect x="1188.9" y="867.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.09%)</title><rect x="1188.9" y="851.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (1 samples, 0.09%)</title><rect x="1188.9" y="835.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.09%)</title><rect x="1188.9" y="819.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.09%)</title><rect x="1188.9" y="803.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::eagerly_reclaim_humongous_regions() (1 samples, 0.09%)</title><rect x="1188.9" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
</g>
</svg>
