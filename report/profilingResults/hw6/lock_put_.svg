<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (547,420 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (466,373 samples, 85.19%)</title><rect x="10.0" y="563.0" width="1005.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (466,373 samples, 85.19%)</title><rect x="10.0" y="547.0" width="1005.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (466,373 samples, 85.19%)</title><rect x="10.0" y="531.0" width="1005.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (187,548 samples, 34.26%)</title><rect x="10.0" y="515.0" width="404.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (187,548 samples, 34.26%)</title><rect x="10.0" y="499.0" width="404.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,744 samples, 0.87%)</title><rect x="10.0" y="483.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,744 samples, 0.87%)</title><rect x="10.0" y="467.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,744 samples, 0.87%)</title><rect x="10.0" y="451.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4,744 samples, 0.87%)</title><rect x="10.0" y="435.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,744 samples, 0.87%)</title><rect x="10.0" y="419.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,744 samples, 0.87%)</title><rect x="10.0" y="403.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,744 samples, 0.87%)</title><rect x="10.0" y="387.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,744 samples, 0.87%)</title><rect x="10.0" y="371.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,744 samples, 0.87%)</title><rect x="10.0" y="355.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,744 samples, 0.87%)</title><rect x="10.0" y="339.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,744 samples, 0.87%)</title><rect x="10.0" y="323.0" width="10.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (182,802 samples, 33.39%)</title><rect x="20.2" y="483.0" width="394.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.2" y="494.0">java/util/concurrent/CompletableFuture$UniCompose.tryF..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.apply (182,802 samples, 33.39%)</title><rect x="20.2" y="467.0" width="394.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.2" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$187/600703..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (182,802 samples, 33.39%)</title><rect x="20.2" y="451.0" width="394.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.2" y="462.0">jdk/internal/net/http/MultiExchange.lambda$responseAsy..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (182,802 samples, 33.39%)</title><rect x="20.2" y="435.0" width="394.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.2" y="446.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (164,842 samples, 30.11%)</title><rect x="20.2" y="419.0" width="355.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.2" y="430.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (164,842 samples, 30.11%)</title><rect x="20.2" y="403.0" width="355.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.2" y="414.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (164,842 samples, 30.11%)</title><rect x="20.2" y="387.0" width="355.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.2" y="398.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (114,220 samples, 20.87%)</title><rect x="20.2" y="371.0" width="246.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="382.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (114,220 samples, 20.87%)</title><rect x="20.2" y="355.0" width="246.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.2" y="366.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (114,220 samples, 20.87%)</title><rect x="20.2" y="339.0" width="246.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.2" y="350.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/378141810.apply (114,220 samples, 20.87%)</title><rect x="20.2" y="323.0" width="246.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.2" y="334.0">jdk/internal/net/http/Exchange$$L..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (114,220 samples, 20.87%)</title><rect x="20.2" y="307.0" width="246.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.2" y="318.0">jdk/internal/net/http/Exchange.la..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (114,220 samples, 20.87%)</title><rect x="20.2" y="291.0" width="246.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.2" y="302.0">jdk/internal/net/http/Exchange.ch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/565635497.apply (114,220 samples, 20.87%)</title><rect x="20.2" y="275.0" width="246.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.2" y="286.0">jdk/internal/net/http/Exchange$$L..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (114,220 samples, 20.87%)</title><rect x="20.2" y="259.0" width="246.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.2" y="270.0">jdk/internal/net/http/Exchange.la..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (114,220 samples, 20.87%)</title><rect x="20.2" y="243.0" width="246.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.2" y="254.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (114,220 samples, 20.87%)</title><rect x="20.2" y="227.0" width="246.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.2" y="238.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (114,220 samples, 20.87%)</title><rect x="20.2" y="211.0" width="246.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.2" y="222.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/364181208.apply (114,220 samples, 20.87%)</title><rect x="20.2" y="195.0" width="246.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.2" y="206.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (114,220 samples, 20.87%)</title><rect x="20.2" y="179.0" width="246.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.2" y="190.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (114,220 samples, 20.87%)</title><rect x="20.2" y="163.0" width="246.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.2" y="174.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (114,220 samples, 20.87%)</title><rect x="20.2" y="147.0" width="246.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.2" y="158.0">jdk/internal/net/http/SocketTube...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (11,992 samples, 2.19%)</title><rect x="20.2" y="131.0" width="25.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.2" y="142.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (11,992 samples, 2.19%)</title><rect x="20.2" y="115.0" width="25.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.2" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11,992 samples, 2.19%)</title><rect x="20.2" y="99.0" width="25.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.2" y="110.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (11,992 samples, 2.19%)</title><rect x="20.2" y="83.0" width="25.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.2" y="94.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (11,992 samples, 2.19%)</title><rect x="20.2" y="67.0" width="25.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.2" y="78.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (10,310 samples, 1.88%)</title><rect x="20.2" y="51.0" width="22.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.2" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,682 samples, 0.31%)</title><rect x="42.4" y="51.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,682 samples, 0.31%)</title><rect x="42.4" y="35.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="45.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (102,228 samples, 18.67%)</title><rect x="46.1" y="131.0" width="220.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.1" y="142.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (102,228 samples, 18.67%)</title><rect x="46.1" y="115.0" width="220.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.1" y="126.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (102,228 samples, 18.67%)</title><rect x="46.1" y="99.0" width="220.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.1" y="110.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (102,228 samples, 18.67%)</title><rect x="46.1" y="83.0" width="220.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.1" y="94.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (102,228 samples, 18.67%)</title><rect x="46.1" y="67.0" width="220.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.1" y="78.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (99,429 samples, 18.16%)</title><rect x="46.1" y="51.0" width="214.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="49.1" y="62.0">jdk.internal.net.http.HttpCl..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,799 samples, 0.51%)</title><rect x="260.4" y="51.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (2,799 samples, 0.51%)</title><rect x="260.4" y="35.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="263.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (50,622 samples, 9.25%)</title><rect x="266.4" y="371.0" width="109.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.4" y="382.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (50,622 samples, 9.25%)</title><rect x="266.4" y="355.0" width="109.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.4" y="366.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (50,622 samples, 9.25%)</title><rect x="266.4" y="339.0" width="109.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.4" y="350.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (50,622 samples, 9.25%)</title><rect x="266.4" y="323.0" width="109.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.4" y="334.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (50,622 samples, 9.25%)</title><rect x="266.4" y="307.0" width="109.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.4" y="318.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (50,622 samples, 9.25%)</title><rect x="266.4" y="291.0" width="109.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.4" y="302.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (50,622 samples, 9.25%)</title><rect x="266.4" y="275.0" width="109.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="269.4" y="286.0">jdk.internal...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (16,915 samples, 3.09%)</title><rect x="375.6" y="419.0" width="36.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.6" y="430.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (12,337 samples, 2.25%)</title><rect x="375.6" y="403.0" width="26.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="378.6" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (4,578 samples, 0.84%)</title><rect x="402.1" y="403.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4,578 samples, 0.84%)</title><rect x="402.1" y="387.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (4,578 samples, 0.84%)</title><rect x="402.1" y="371.0" width="9.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="405.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1,045 samples, 0.19%)</title><rect x="412.0" y="419.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (1,045 samples, 0.19%)</title><rect x="412.0" y="403.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (994 samples, 0.18%)</title><rect x="412.1" y="387.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (994 samples, 0.18%)</title><rect x="412.1" y="371.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="415.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (32,055 samples, 5.86%)</title><rect x="414.3" y="515.0" width="69.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.3" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (18,158 samples, 3.32%)</title><rect x="414.3" y="499.0" width="39.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.3" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5,574 samples, 1.02%)</title><rect x="414.3" y="483.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5,574 samples, 1.02%)</title><rect x="414.3" y="467.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5,574 samples, 1.02%)</title><rect x="414.3" y="451.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5,574 samples, 1.02%)</title><rect x="414.3" y="435.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5,574 samples, 1.02%)</title><rect x="414.3" y="419.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5,574 samples, 1.02%)</title><rect x="414.3" y="403.0" width="12.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="417.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12,584 samples, 2.30%)</title><rect x="426.3" y="483.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12,584 samples, 2.30%)</title><rect x="426.3" y="467.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12,584 samples, 2.30%)</title><rect x="426.3" y="451.0" width="27.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12,584 samples, 2.30%)</title><rect x="426.3" y="435.0" width="27.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12,584 samples, 2.30%)</title><rect x="426.3" y="419.0" width="27.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.3" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12,584 samples, 2.30%)</title><rect x="426.3" y="403.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.3" y="414.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12,584 samples, 2.30%)</title><rect x="426.3" y="387.0" width="27.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="429.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13,897 samples, 2.54%)</title><rect x="453.4" y="499.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.4" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (906 samples, 0.17%)</title><rect x="453.4" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (906 samples, 0.17%)</title><rect x="453.4" y="467.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (906 samples, 0.17%)</title><rect x="453.4" y="451.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (906 samples, 0.17%)</title><rect x="453.4" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (906 samples, 0.17%)</title><rect x="453.4" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (906 samples, 0.17%)</title><rect x="453.4" y="403.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="456.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12,991 samples, 2.37%)</title><rect x="455.4" y="483.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.4" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12,991 samples, 2.37%)</title><rect x="455.4" y="467.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.4" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12,991 samples, 2.37%)</title><rect x="455.4" y="451.0" width="28.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.4" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12,991 samples, 2.37%)</title><rect x="455.4" y="435.0" width="28.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.4" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12,991 samples, 2.37%)</title><rect x="455.4" y="419.0" width="28.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.4" y="430.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12,991 samples, 2.37%)</title><rect x="455.4" y="403.0" width="28.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.4" y="414.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12,991 samples, 2.37%)</title><rect x="455.4" y="387.0" width="28.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="458.4" y="398.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (246,734 samples, 45.07%)</title><rect x="483.4" y="515.0" width="531.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.4" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (246,734 samples, 45.07%)</title><rect x="483.4" y="499.0" width="531.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask...</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (84,804 samples, 15.49%)</title><rect x="483.4" y="483.0" width="182.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.4" y="494.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (84,804 samples, 15.49%)</title><rect x="483.4" y="467.0" width="182.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.4" y="478.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (84,804 samples, 15.49%)</title><rect x="483.4" y="451.0" width="182.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="462.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (77,959 samples, 14.24%)</title><rect x="483.4" y="435.0" width="168.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.4" y="446.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (77,959 samples, 14.24%)</title><rect x="483.4" y="419.0" width="168.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.4" y="430.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (77,959 samples, 14.24%)</title><rect x="483.4" y="403.0" width="168.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="414.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (77,959 samples, 14.24%)</title><rect x="483.4" y="387.0" width="168.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="398.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (77,959 samples, 14.24%)</title><rect x="483.4" y="371.0" width="168.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.4" y="382.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (77,959 samples, 14.24%)</title><rect x="483.4" y="355.0" width="168.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.4" y="366.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (77,959 samples, 14.24%)</title><rect x="483.4" y="339.0" width="168.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="350.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (77,959 samples, 14.24%)</title><rect x="483.4" y="323.0" width="168.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.4" y="334.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (77,959 samples, 14.24%)</title><rect x="483.4" y="307.0" width="168.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.4" y="318.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (75,052 samples, 13.71%)</title><rect x="483.4" y="291.0" width="161.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="486.4" y="302.0">jdk.internal.net.http..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,907 samples, 0.53%)</title><rect x="645.2" y="291.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.2" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (2,907 samples, 0.53%)</title><rect x="645.2" y="275.0" width="6.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="648.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6,845 samples, 1.25%)</title><rect x="651.5" y="435.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6,845 samples, 1.25%)</title><rect x="651.5" y="419.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,845 samples, 1.25%)</title><rect x="651.5" y="403.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,845 samples, 1.25%)</title><rect x="651.5" y="387.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6,845 samples, 1.25%)</title><rect x="651.5" y="371.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,845 samples, 1.25%)</title><rect x="651.5" y="355.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6,845 samples, 1.25%)</title><rect x="651.5" y="339.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6,845 samples, 1.25%)</title><rect x="651.5" y="323.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6,845 samples, 1.25%)</title><rect x="651.5" y="307.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (6,845 samples, 1.25%)</title><rect x="651.5" y="291.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6,845 samples, 1.25%)</title><rect x="651.5" y="275.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6,845 samples, 1.25%)</title><rect x="651.5" y="259.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,845 samples, 1.25%)</title><rect x="651.5" y="243.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,262 samples, 0.23%)</title><rect x="651.5" y="227.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.apply (1,262 samples, 0.23%)</title><rect x="651.5" y="211.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,262 samples, 0.23%)</title><rect x="651.5" y="195.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,262 samples, 0.23%)</title><rect x="651.5" y="179.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1,262 samples, 0.23%)</title><rect x="651.5" y="163.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,262 samples, 0.23%)</title><rect x="651.5" y="147.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (1,262 samples, 0.23%)</title><rect x="651.5" y="131.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="654.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5,583 samples, 1.02%)</title><rect x="654.2" y="227.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,583 samples, 1.02%)</title><rect x="654.2" y="211.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.apply (5,583 samples, 1.02%)</title><rect x="654.2" y="195.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (5,583 samples, 1.02%)</title><rect x="654.2" y="179.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (5,583 samples, 1.02%)</title><rect x="654.2" y="163.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (5,583 samples, 1.02%)</title><rect x="654.2" y="147.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (5,583 samples, 1.02%)</title><rect x="654.2" y="131.0" width="12.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="657.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (161,930 samples, 29.58%)</title><rect x="666.2" y="483.0" width="349.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.2" y="494.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (161,930 samples, 29.58%)</title><rect x="666.2" y="467.0" width="349.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.2" y="478.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (161,930 samples, 29.58%)</title><rect x="666.2" y="451.0" width="349.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.2" y="462.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (161,930 samples, 29.58%)</title><rect x="666.2" y="435.0" width="349.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.2" y="446.0">jdk/internal/net/http/Http1AsyncReceiver$$Lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (161,930 samples, 29.58%)</title><rect x="666.2" y="419.0" width="349.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.2" y="430.0">jdk/internal/net/http/Http1AsyncReceiver.flush</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (161,396 samples, 29.48%)</title><rect x="666.2" y="403.0" width="347.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.2" y="414.0">jdk/internal/net/http/Http1AsyncReceiver.handle..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (161,396 samples, 29.48%)</title><rect x="666.2" y="387.0" width="347.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.2" y="398.0">jdk/internal/net/http/Http1Response$BodyReader...</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (161,396 samples, 29.48%)</title><rect x="666.2" y="371.0" width="347.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.2" y="382.0">jdk/internal/net/http/ResponseContent$FixedLeng..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$471/282701340.run (161,396 samples, 29.48%)</title><rect x="666.2" y="355.0" width="347.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.2" y="366.0">jdk/internal/net/http/Http1Response$$Lambda$471..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (161,396 samples, 29.48%)</title><rect x="666.2" y="339.0" width="347.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.2" y="350.0">jdk/internal/net/http/Http1Response.onFinished</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (161,396 samples, 29.48%)</title><rect x="666.2" y="323.0" width="347.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.2" y="334.0">jdk/internal/net/http/HttpConnection.closeOrRet..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (161,396 samples, 29.48%)</title><rect x="666.2" y="307.0" width="347.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.2" y="318.0">jdk/internal/net/http/ConnectionPool.returnToPool</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (161,396 samples, 29.48%)</title><rect x="666.2" y="291.0" width="347.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.2" y="302.0">jdk/internal/net/http/ConnectionPool.returnToPool</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (58,834 samples, 10.75%)</title><rect x="666.2" y="275.0" width="126.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="669.2" y="286.0">jdk.internal.net..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (102,562 samples, 18.74%)</title><rect x="793.1" y="275.0" width="221.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.1" y="286.0">jdk/internal/net/http/Connect..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (102,562 samples, 18.74%)</title><rect x="793.1" y="259.0" width="221.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.1" y="270.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (12,572 samples, 2.30%)</title><rect x="793.1" y="243.0" width="27.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.1" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12,572 samples, 2.30%)</title><rect x="793.1" y="227.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.1" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (12,572 samples, 2.30%)</title><rect x="793.1" y="211.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.1" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (12,572 samples, 2.30%)</title><rect x="793.1" y="195.0" width="27.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.1" y="206.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (12,572 samples, 2.30%)</title><rect x="793.1" y="179.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.1" y="190.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (11,242 samples, 2.05%)</title><rect x="793.1" y="163.0" width="24.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="796.1" y="174.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,330 samples, 0.24%)</title><rect x="817.3" y="163.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,330 samples, 0.24%)</title><rect x="817.3" y="147.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="820.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (89,990 samples, 16.44%)</title><rect x="820.2" y="243.0" width="193.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.2" y="254.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (89,990 samples, 16.44%)</title><rect x="820.2" y="227.0" width="193.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.2" y="238.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (89,990 samples, 16.44%)</title><rect x="820.2" y="211.0" width="193.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.2" y="222.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (89,990 samples, 16.44%)</title><rect x="820.2" y="195.0" width="193.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.2" y="206.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (89,990 samples, 16.44%)</title><rect x="820.2" y="179.0" width="193.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.2" y="190.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (88,013 samples, 16.08%)</title><rect x="820.2" y="163.0" width="189.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="823.2" y="174.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,977 samples, 0.36%)</title><rect x="1009.9" y="163.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,977 samples, 0.36%)</title><rect x="1009.9" y="147.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1012.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (534 samples, 0.10%)</title><rect x="1014.1" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (534 samples, 0.10%)</title><rect x="1014.1" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (534 samples, 0.10%)</title><rect x="1014.1" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (534 samples, 0.10%)</title><rect x="1014.1" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (534 samples, 0.10%)</title><rect x="1014.1" y="339.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (534 samples, 0.10%)</title><rect x="1014.1" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (534 samples, 0.10%)</title><rect x="1014.1" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (534 samples, 0.10%)</title><rect x="1014.1" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (534 samples, 0.10%)</title><rect x="1014.1" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (534 samples, 0.10%)</title><rect x="1014.1" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (534 samples, 0.10%)</title><rect x="1014.1" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (534 samples, 0.10%)</title><rect x="1014.1" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (534 samples, 0.10%)</title><rect x="1014.1" y="211.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (458 samples, 0.08%)</title><rect x="1014.3" y="195.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (458 samples, 0.08%)</title><rect x="1014.3" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.apply (458 samples, 0.08%)</title><rect x="1014.3" y="163.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (458 samples, 0.08%)</title><rect x="1014.3" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (458 samples, 0.08%)</title><rect x="1014.3" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (458 samples, 0.08%)</title><rect x="1014.3" y="115.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.3" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (458 samples, 0.08%)</title><rect x="1014.3" y="99.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1017.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,351 samples, 0.25%)</title><rect x="1015.3" y="563.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,351 samples, 0.25%)</title><rect x="1015.3" y="547.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,351 samples, 0.25%)</title><rect x="1015.3" y="531.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,351 samples, 0.25%)</title><rect x="1015.3" y="515.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,351 samples, 0.25%)</title><rect x="1015.3" y="499.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,351 samples, 0.25%)</title><rect x="1015.3" y="483.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,351 samples, 0.25%)</title><rect x="1015.3" y="467.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,351 samples, 0.25%)</title><rect x="1015.3" y="451.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1018.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,351 samples, 0.25%)</title><rect x="1015.3" y="435.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,351 samples, 0.25%)</title><rect x="1015.3" y="419.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,351 samples, 0.25%)</title><rect x="1015.3" y="403.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1018.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (1,351 samples, 0.25%)</title><rect x="1015.3" y="387.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (1,351 samples, 0.25%)</title><rect x="1015.3" y="371.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,346 samples, 0.25%)</title><rect x="1015.3" y="355.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,346 samples, 0.25%)</title><rect x="1015.3" y="339.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,346 samples, 0.25%)</title><rect x="1015.3" y="323.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,346 samples, 0.25%)</title><rect x="1015.3" y="307.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,346 samples, 0.25%)</title><rect x="1015.3" y="291.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,346 samples, 0.25%)</title><rect x="1015.3" y="275.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,346 samples, 0.25%)</title><rect x="1015.3" y="259.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1018.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,346 samples, 0.25%)</title><rect x="1015.3" y="243.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,346 samples, 0.25%)</title><rect x="1015.3" y="227.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1018.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,346 samples, 0.25%)</title><rect x="1015.3" y="211.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1018.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,346 samples, 0.25%)</title><rect x="1015.3" y="195.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,346 samples, 0.25%)</title><rect x="1015.3" y="179.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1018.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,346 samples, 0.25%)</title><rect x="1015.3" y="163.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1018.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (64,175 samples, 11.72%)</title><rect x="1018.2" y="563.0" width="138.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.2" y="574.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (281 samples, 0.05%)</title><rect x="1018.2" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$385/1818596436.accept (281 samples, 0.05%)</title><rect x="1018.2" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (281 samples, 0.05%)</title><rect x="1018.2" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (281 samples, 0.05%)</title><rect x="1018.2" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (281 samples, 0.05%)</title><rect x="1018.2" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (281 samples, 0.05%)</title><rect x="1018.2" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (281 samples, 0.05%)</title><rect x="1018.2" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (281 samples, 0.05%)</title><rect x="1018.2" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (281 samples, 0.05%)</title><rect x="1018.2" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (281 samples, 0.05%)</title><rect x="1018.2" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (281 samples, 0.05%)</title><rect x="1018.2" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (281 samples, 0.05%)</title><rect x="1018.2" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (281 samples, 0.05%)</title><rect x="1018.2" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (275 samples, 0.05%)</title><rect x="1018.2" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (275 samples, 0.05%)</title><rect x="1018.2" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (275 samples, 0.05%)</title><rect x="1018.2" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (275 samples, 0.05%)</title><rect x="1018.2" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (275 samples, 0.05%)</title><rect x="1018.2" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (275 samples, 0.05%)</title><rect x="1018.2" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (275 samples, 0.05%)</title><rect x="1018.2" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (275 samples, 0.05%)</title><rect x="1018.2" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (179 samples, 0.03%)</title><rect x="1018.2" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (179 samples, 0.03%)</title><rect x="1018.2" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1021.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (179 samples, 0.03%)</title><rect x="1018.2" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (179 samples, 0.03%)</title><rect x="1018.2" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (179 samples, 0.03%)</title><rect x="1018.2" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (179 samples, 0.03%)</title><rect x="1018.2" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1021.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (179 samples, 0.03%)</title><rect x="1018.2" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (179 samples, 0.03%)</title><rect x="1018.2" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1021.2" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (41,027 samples, 7.49%)</title><rect x="1018.8" y="547.0" width="88.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1021.8" y="558.0">jdk.intern..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (643 samples, 0.12%)</title><rect x="1107.3" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1724186899.run (176 samples, 0.03%)</title><rect x="1107.3" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (176 samples, 0.03%)</title><rect x="1107.3" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (176 samples, 0.03%)</title><rect x="1107.3" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (176 samples, 0.03%)</title><rect x="1107.3" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (176 samples, 0.03%)</title><rect x="1107.3" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (176 samples, 0.03%)</title><rect x="1107.3" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (176 samples, 0.03%)</title><rect x="1107.3" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (176 samples, 0.03%)</title><rect x="1107.3" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (176 samples, 0.03%)</title><rect x="1107.3" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (176 samples, 0.03%)</title><rect x="1107.3" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (176 samples, 0.03%)</title><rect x="1107.3" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (176 samples, 0.03%)</title><rect x="1107.3" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (176 samples, 0.03%)</title><rect x="1107.3" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (176 samples, 0.03%)</title><rect x="1107.3" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (176 samples, 0.03%)</title><rect x="1107.3" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (176 samples, 0.03%)</title><rect x="1107.3" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (133 samples, 0.02%)</title><rect x="1107.3" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (133 samples, 0.02%)</title><rect x="1107.3" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (133 samples, 0.02%)</title><rect x="1107.3" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (133 samples, 0.02%)</title><rect x="1107.3" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (133 samples, 0.02%)</title><rect x="1107.3" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (133 samples, 0.02%)</title><rect x="1107.3" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (133 samples, 0.02%)</title><rect x="1107.3" y="179.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1110.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$270/68138278.run (467 samples, 0.09%)</title><rect x="1107.6" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1110.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (467 samples, 0.09%)</title><rect x="1107.6" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (467 samples, 0.09%)</title><rect x="1107.6" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (467 samples, 0.09%)</title><rect x="1107.6" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (467 samples, 0.09%)</title><rect x="1107.6" y="467.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (180 samples, 0.03%)</title><rect x="1107.6" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (180 samples, 0.03%)</title><rect x="1107.6" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1110.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (180 samples, 0.03%)</title><rect x="1107.6" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (180 samples, 0.03%)</title><rect x="1107.6" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1110.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (180 samples, 0.03%)</title><rect x="1107.6" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1110.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (180 samples, 0.03%)</title><rect x="1107.6" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (180 samples, 0.03%)</title><rect x="1107.6" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (180 samples, 0.03%)</title><rect x="1107.6" y="339.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1110.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (287 samples, 0.05%)</title><rect x="1108.0" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (287 samples, 0.05%)</title><rect x="1108.0" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (287 samples, 0.05%)</title><rect x="1108.0" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (287 samples, 0.05%)</title><rect x="1108.0" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (287 samples, 0.05%)</title><rect x="1108.0" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (287 samples, 0.05%)</title><rect x="1108.0" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (287 samples, 0.05%)</title><rect x="1108.0" y="355.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1111.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (14,831 samples, 2.71%)</title><rect x="1108.6" y="547.0" width="32.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.6" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (14,831 samples, 2.71%)</title><rect x="1108.6" y="531.0" width="32.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.6" y="542.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (14,831 samples, 2.71%)</title><rect x="1108.6" y="515.0" width="32.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1111.6" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (6,563 samples, 1.20%)</title><rect x="1140.6" y="547.0" width="14.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (6,563 samples, 1.20%)</title><rect x="1140.6" y="531.0" width="14.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1143.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (460 samples, 0.08%)</title><rect x="1154.8" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (460 samples, 0.08%)</title><rect x="1154.8" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (460 samples, 0.08%)</title><rect x="1154.8" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (460 samples, 0.08%)</title><rect x="1154.8" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (460 samples, 0.08%)</title><rect x="1154.8" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (460 samples, 0.08%)</title><rect x="1154.8" y="467.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1157.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (370 samples, 0.07%)</title><rect x="1155.7" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (370 samples, 0.07%)</title><rect x="1155.7" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (370 samples, 0.07%)</title><rect x="1155.7" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (370 samples, 0.07%)</title><rect x="1155.7" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (370 samples, 0.07%)</title><rect x="1155.7" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.7" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (370 samples, 0.07%)</title><rect x="1155.7" y="467.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1158.7" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15,521 samples, 2.84%)</title><rect x="1156.5" y="563.0" width="33.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.5" y="574.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (15,521 samples, 2.84%)</title><rect x="1156.5" y="547.0" width="33.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.5" y="558.0">on..</text>
</g>
<g>
<title>one.nio.http.HttpSession (5,337 samples, 0.97%)</title><rect x="1156.5" y="531.0" width="11.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1159.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10,184 samples, 1.86%)</title><rect x="1168.0" y="531.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.0" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10,184 samples, 1.86%)</title><rect x="1168.0" y="515.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.0" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10,184 samples, 1.86%)</title><rect x="1168.0" y="499.0" width="22.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.0" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10,184 samples, 1.86%)</title><rect x="1168.0" y="483.0" width="22.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.0" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (10,184 samples, 1.86%)</title><rect x="1168.0" y="467.0" width="22.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.0" y="478.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (10,184 samples, 1.86%)</title><rect x="1168.0" y="451.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.0" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (10,184 samples, 1.86%)</title><rect x="1168.0" y="435.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.0" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$140/1562537078.process (10,184 samples, 1.86%)</title><rect x="1168.0" y="419.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.0" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (10,184 samples, 1.86%)</title><rect x="1168.0" y="403.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.0" y="414.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (10,184 samples, 1.86%)</title><rect x="1168.0" y="387.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.0" y="398.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy (10,184 samples, 1.86%)</title><rect x="1168.0" y="371.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.0" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$146/705152323.execute (8,554 samples, 1.56%)</title><rect x="1168.1" y="355.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$9 (8,554 samples, 1.56%)</title><rect x="1168.1" y="339.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localUpsert (8,554 samples, 1.56%)</title><rect x="1168.1" y="323.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (8,554 samples, 1.56%)</title><rect x="1168.1" y="307.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (8,554 samples, 1.56%)</title><rect x="1168.1" y="291.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8,554 samples, 1.56%)</title><rect x="1168.1" y="275.0" width="18.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8,554 samples, 1.56%)</title><rect x="1168.1" y="259.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8,554 samples, 1.56%)</title><rect x="1168.1" y="243.0" width="18.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1171.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8,554 samples, 1.56%)</title><rect x="1168.1" y="227.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8,554 samples, 1.56%)</title><rect x="1168.1" y="211.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8,554 samples, 1.56%)</title><rect x="1168.1" y="195.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8,554 samples, 1.56%)</title><rect x="1168.1" y="179.0" width="18.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8,554 samples, 1.56%)</title><rect x="1168.1" y="163.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (8,554 samples, 1.56%)</title><rect x="1168.1" y="147.0" width="18.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1171.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (1,609 samples, 0.29%)</title><rect x="1186.5" y="355.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,609 samples, 0.29%)</title><rect x="1186.5" y="339.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$164/1671372122.accept (1,609 samples, 0.29%)</title><rect x="1186.5" y="323.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (1,609 samples, 0.29%)</title><rect x="1186.5" y="307.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,609 samples, 0.29%)</title><rect x="1186.5" y="291.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,609 samples, 0.29%)</title><rect x="1186.5" y="275.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,609 samples, 0.29%)</title><rect x="1186.5" y="259.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,609 samples, 0.29%)</title><rect x="1186.5" y="243.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,609 samples, 0.29%)</title><rect x="1186.5" y="227.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,609 samples, 0.29%)</title><rect x="1186.5" y="211.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,609 samples, 0.29%)</title><rect x="1186.5" y="195.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,609 samples, 0.29%)</title><rect x="1186.5" y="179.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (164 samples, 0.03%)</title><rect x="1186.5" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (164 samples, 0.03%)</title><rect x="1186.5" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (164 samples, 0.03%)</title><rect x="1186.5" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (164 samples, 0.03%)</title><rect x="1186.5" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (164 samples, 0.03%)</title><rect x="1186.5" y="99.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (164 samples, 0.03%)</title><rect x="1186.5" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (164 samples, 0.03%)</title><rect x="1186.5" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (164 samples, 0.03%)</title><rect x="1186.5" y="51.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1189.5" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,445 samples, 0.26%)</title><rect x="1186.9" y="163.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,445 samples, 0.26%)</title><rect x="1186.9" y="147.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,445 samples, 0.26%)</title><rect x="1186.9" y="131.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,445 samples, 0.26%)</title><rect x="1186.9" y="115.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,445 samples, 0.26%)</title><rect x="1186.9" y="99.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,445 samples, 0.26%)</title><rect x="1186.9" y="83.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,445 samples, 0.26%)</title><rect x="1186.9" y="67.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1189.9" y="78.0"></text>
</g>
</g>
</svg>
