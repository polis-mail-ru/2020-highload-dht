<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (354,666 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (306,590 samples, 86.44%)</title><rect x="10.0" y="563.0" width="1020.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (306,590 samples, 86.44%)</title><rect x="10.0" y="547.0" width="1020.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (306,590 samples, 86.44%)</title><rect x="10.0" y="531.0" width="1020.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (110,369 samples, 31.12%)</title><rect x="10.0" y="515.0" width="367.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSupply..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110,369 samples, 31.12%)</title><rect x="10.0" y="499.0" width="367.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (106,022 samples, 29.89%)</title><rect x="10.0" y="483.0" width="352.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompos..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/2054707338.apply (106,022 samples, 29.89%)</title><rect x="10.0" y="467.0" width="352.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$191/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (106,022 samples, 29.89%)</title><rect x="10.0" y="451.0" width="352.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$respo..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (106,022 samples, 29.89%)</title><rect x="10.0" y="435.0" width="352.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (95,013 samples, 26.79%)</title><rect x="10.0" y="419.0" width="316.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (95,013 samples, 26.79%)</title><rect x="10.0" y="403.0" width="316.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.responseAsyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (95,013 samples, 26.79%)</title><rect x="10.0" y="387.0" width="316.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.responseAsyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (74,872 samples, 21.11%)</title><rect x="10.0" y="371.0" width="249.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (74,872 samples, 21.11%)</title><rect x="10.0" y="355.0" width="249.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (74,872 samples, 21.11%)</title><rect x="10.0" y="339.0" width="249.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/1888700414.apply (74,872 samples, 21.11%)</title><rect x="10.0" y="323.0" width="249.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Exchange$$L..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (74,872 samples, 21.11%)</title><rect x="10.0" y="307.0" width="249.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Exchange.la..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (74,872 samples, 21.11%)</title><rect x="10.0" y="291.0" width="249.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Exchange.ch..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$222/461624569.apply (74,872 samples, 21.11%)</title><rect x="10.0" y="275.0" width="249.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Exchange$$L..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (74,872 samples, 21.11%)</title><rect x="10.0" y="259.0" width="249.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Exchange.la..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (74,872 samples, 21.11%)</title><rect x="10.0" y="243.0" width="249.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (74,872 samples, 21.11%)</title><rect x="10.0" y="227.0" width="249.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (74,872 samples, 21.11%)</title><rect x="10.0" y="211.0" width="249.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$341/1844096335.apply (74,872 samples, 21.11%)</title><rect x="10.0" y="195.0" width="249.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (74,872 samples, 21.11%)</title><rect x="10.0" y="179.0" width="249.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (74,872 samples, 21.11%)</title><rect x="10.0" y="163.0" width="249.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1Exchan..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (74,872 samples, 21.11%)</title><rect x="10.0" y="147.0" width="249.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/SocketTube...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (8,437 samples, 2.38%)</title><rect x="10.0" y="131.0" width="28.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="142.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8,437 samples, 2.38%)</title><rect x="10.0" y="115.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="126.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8,437 samples, 2.38%)</title><rect x="10.0" y="99.0" width="28.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="110.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8,437 samples, 2.38%)</title><rect x="10.0" y="83.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="94.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8,437 samples, 2.38%)</title><rect x="10.0" y="67.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="78.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (7,420 samples, 2.09%)</title><rect x="10.0" y="51.0" width="24.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,017 samples, 0.29%)</title><rect x="34.7" y="51.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,017 samples, 0.29%)</title><rect x="34.7" y="35.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="37.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (66,435 samples, 18.73%)</title><rect x="38.1" y="131.0" width="221.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.1" y="142.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (66,435 samples, 18.73%)</title><rect x="38.1" y="115.0" width="221.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="126.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (66,435 samples, 18.73%)</title><rect x="38.1" y="99.0" width="221.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.1" y="110.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (66,435 samples, 18.73%)</title><rect x="38.1" y="83.0" width="221.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.1" y="94.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (66,435 samples, 18.73%)</title><rect x="38.1" y="67.0" width="221.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.1" y="78.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (64,763 samples, 18.26%)</title><rect x="38.1" y="51.0" width="215.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="41.1" y="62.0">jdk.internal.net.http.HttpCl..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,672 samples, 0.47%)</title><rect x="253.5" y="51.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.5" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,672 samples, 0.47%)</title><rect x="253.5" y="35.0" width="5.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="256.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (20,141 samples, 5.68%)</title><rect x="259.1" y="371.0" width="67.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.1" y="382.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (20,141 samples, 5.68%)</title><rect x="259.1" y="355.0" width="67.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.1" y="366.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (20,141 samples, 5.68%)</title><rect x="259.1" y="339.0" width="67.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.1" y="350.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (20,141 samples, 5.68%)</title><rect x="259.1" y="323.0" width="67.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.1" y="334.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (20,138 samples, 5.68%)</title><rect x="259.1" y="307.0" width="67.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.1" y="318.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (20,138 samples, 5.68%)</title><rect x="259.1" y="291.0" width="67.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.1" y="302.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (20,138 samples, 5.68%)</title><rect x="259.1" y="275.0" width="67.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="262.1" y="286.0">jdk.int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (10,113 samples, 2.85%)</title><rect x="326.1" y="419.0" width="33.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.1" y="430.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (7,281 samples, 2.05%)</title><rect x="326.1" y="403.0" width="24.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="329.1" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2,832 samples, 0.80%)</title><rect x="350.3" y="403.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,832 samples, 0.80%)</title><rect x="350.3" y="387.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (2,832 samples, 0.80%)</title><rect x="350.3" y="371.0" width="9.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="353.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (896 samples, 0.25%)</title><rect x="359.8" y="419.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (896 samples, 0.25%)</title><rect x="359.8" y="403.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (870 samples, 0.25%)</title><rect x="359.8" y="387.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (870 samples, 0.25%)</title><rect x="359.8" y="371.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="362.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4,347 samples, 1.23%)</title><rect x="362.7" y="483.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4,347 samples, 1.23%)</title><rect x="362.7" y="467.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,347 samples, 1.23%)</title><rect x="362.7" y="451.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,347 samples, 1.23%)</title><rect x="362.7" y="435.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4,347 samples, 1.23%)</title><rect x="362.7" y="419.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,347 samples, 1.23%)</title><rect x="362.7" y="403.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,347 samples, 1.23%)</title><rect x="362.7" y="387.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,347 samples, 1.23%)</title><rect x="362.7" y="371.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,347 samples, 1.23%)</title><rect x="362.7" y="355.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,347 samples, 1.23%)</title><rect x="362.7" y="339.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,347 samples, 1.23%)</title><rect x="362.7" y="323.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,347 samples, 1.23%)</title><rect x="362.7" y="307.0" width="14.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="365.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (972 samples, 0.27%)</title><rect x="377.2" y="515.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (972 samples, 0.27%)</title><rect x="377.2" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (972 samples, 0.27%)</title><rect x="377.2" y="483.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$216/1120270908.accept (927 samples, 0.26%)</title><rect x="377.4" y="467.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (927 samples, 0.26%)</title><rect x="377.4" y="451.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (927 samples, 0.26%)</title><rect x="377.4" y="435.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (927 samples, 0.26%)</title><rect x="377.4" y="419.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (927 samples, 0.26%)</title><rect x="377.4" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (927 samples, 0.26%)</title><rect x="377.4" y="387.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (927 samples, 0.26%)</title><rect x="377.4" y="371.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (927 samples, 0.26%)</title><rect x="377.4" y="355.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (927 samples, 0.26%)</title><rect x="377.4" y="339.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (927 samples, 0.26%)</title><rect x="377.4" y="323.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (927 samples, 0.26%)</title><rect x="377.4" y="307.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (927 samples, 0.26%)</title><rect x="377.4" y="291.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (927 samples, 0.26%)</title><rect x="377.4" y="275.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (927 samples, 0.26%)</title><rect x="377.4" y="259.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (927 samples, 0.26%)</title><rect x="377.4" y="243.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (927 samples, 0.26%)</title><rect x="377.4" y="227.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="380.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (32,259 samples, 9.10%)</title><rect x="380.4" y="515.0" width="107.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.4" y="526.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (25,008 samples, 7.05%)</title><rect x="380.4" y="499.0" width="83.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.4" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10,179 samples, 2.87%)</title><rect x="380.4" y="483.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.4" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10,179 samples, 2.87%)</title><rect x="380.4" y="467.0" width="33.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.4" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10,179 samples, 2.87%)</title><rect x="380.4" y="451.0" width="33.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10,179 samples, 2.87%)</title><rect x="380.4" y="435.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.4" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10,179 samples, 2.87%)</title><rect x="380.4" y="419.0" width="33.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.4" y="430.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10,179 samples, 2.87%)</title><rect x="380.4" y="403.0" width="33.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="383.4" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (14,829 samples, 4.18%)</title><rect x="414.3" y="483.0" width="49.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.3" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (14,829 samples, 4.18%)</title><rect x="414.3" y="467.0" width="49.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.3" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (14,829 samples, 4.18%)</title><rect x="414.3" y="451.0" width="49.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.3" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14,829 samples, 4.18%)</title><rect x="414.3" y="435.0" width="49.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.3" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14,829 samples, 4.18%)</title><rect x="414.3" y="419.0" width="49.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.3" y="430.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14,829 samples, 4.18%)</title><rect x="414.3" y="403.0" width="49.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.3" y="414.0">jdk/i..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (14,829 samples, 4.18%)</title><rect x="414.3" y="387.0" width="49.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="417.3" y="398.0">java...</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (7,251 samples, 2.04%)</title><rect x="463.6" y="499.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (639 samples, 0.18%)</title><rect x="463.6" y="483.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (639 samples, 0.18%)</title><rect x="463.6" y="467.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (639 samples, 0.18%)</title><rect x="463.6" y="451.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (639 samples, 0.18%)</title><rect x="463.6" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (639 samples, 0.18%)</title><rect x="463.6" y="419.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (639 samples, 0.18%)</title><rect x="463.6" y="403.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="466.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6,612 samples, 1.86%)</title><rect x="465.8" y="483.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6,612 samples, 1.86%)</title><rect x="465.8" y="467.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.8" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6,612 samples, 1.86%)</title><rect x="465.8" y="451.0" width="22.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.8" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6,612 samples, 1.86%)</title><rect x="465.8" y="435.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.8" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6,612 samples, 1.86%)</title><rect x="465.8" y="419.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.8" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6,612 samples, 1.86%)</title><rect x="465.8" y="403.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.8" y="414.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (6,612 samples, 1.86%)</title><rect x="465.8" y="387.0" width="22.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="468.8" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (156,602 samples, 44.15%)</title><rect x="487.9" y="515.0" width="521.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.9" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (156,602 samples, 44.15%)</title><rect x="487.9" y="499.0" width="521.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.9" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (64,946 samples, 18.31%)</title><rect x="487.9" y="483.0" width="216.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.9" y="494.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (64,946 samples, 18.31%)</title><rect x="487.9" y="467.0" width="216.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.9" y="478.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (64,946 samples, 18.31%)</title><rect x="487.9" y="451.0" width="216.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.9" y="462.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (60,379 samples, 17.02%)</title><rect x="487.9" y="435.0" width="200.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.9" y="446.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (60,379 samples, 17.02%)</title><rect x="487.9" y="419.0" width="200.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.9" y="430.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (60,379 samples, 17.02%)</title><rect x="487.9" y="403.0" width="200.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.9" y="414.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (60,379 samples, 17.02%)</title><rect x="487.9" y="387.0" width="200.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.9" y="398.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (60,379 samples, 17.02%)</title><rect x="487.9" y="371.0" width="200.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.9" y="382.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (60,379 samples, 17.02%)</title><rect x="487.9" y="355.0" width="200.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.9" y="366.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (60,379 samples, 17.02%)</title><rect x="487.9" y="339.0" width="200.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.9" y="350.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (60,379 samples, 17.02%)</title><rect x="487.9" y="323.0" width="200.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.9" y="334.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (60,379 samples, 17.02%)</title><rect x="487.9" y="307.0" width="200.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.9" y="318.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (58,262 samples, 16.43%)</title><rect x="487.9" y="291.0" width="193.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="490.9" y="302.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,117 samples, 0.60%)</title><rect x="681.7" y="291.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (2,117 samples, 0.60%)</title><rect x="681.7" y="275.0" width="7.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="684.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4,567 samples, 1.29%)</title><rect x="688.8" y="435.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,567 samples, 1.29%)</title><rect x="688.8" y="419.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,567 samples, 1.29%)</title><rect x="688.8" y="403.0" width="15.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,567 samples, 1.29%)</title><rect x="688.8" y="387.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4,567 samples, 1.29%)</title><rect x="688.8" y="371.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,567 samples, 1.29%)</title><rect x="688.8" y="355.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,567 samples, 1.29%)</title><rect x="688.8" y="339.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,567 samples, 1.29%)</title><rect x="688.8" y="323.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,567 samples, 1.29%)</title><rect x="688.8" y="307.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4,567 samples, 1.29%)</title><rect x="688.8" y="291.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,567 samples, 1.29%)</title><rect x="688.8" y="275.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4,567 samples, 1.29%)</title><rect x="688.8" y="259.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,567 samples, 1.29%)</title><rect x="688.8" y="243.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,003 samples, 0.28%)</title><rect x="688.8" y="227.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$345/573480486.apply (1,003 samples, 0.28%)</title><rect x="688.8" y="211.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,003 samples, 0.28%)</title><rect x="688.8" y="195.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,003 samples, 0.28%)</title><rect x="688.8" y="179.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1,003 samples, 0.28%)</title><rect x="688.8" y="163.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,003 samples, 0.28%)</title><rect x="688.8" y="147.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (1,003 samples, 0.28%)</title><rect x="688.8" y="131.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="691.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,564 samples, 1.00%)</title><rect x="692.1" y="227.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,564 samples, 1.00%)</title><rect x="692.1" y="211.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$346/325847571.apply (3,564 samples, 1.00%)</title><rect x="692.1" y="195.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3,564 samples, 1.00%)</title><rect x="692.1" y="179.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3,564 samples, 1.00%)</title><rect x="692.1" y="163.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3,564 samples, 1.00%)</title><rect x="692.1" y="147.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,564 samples, 1.00%)</title><rect x="692.1" y="131.0" width="11.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="695.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (91,656 samples, 25.84%)</title><rect x="704.0" y="483.0" width="304.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.0" y="494.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (91,656 samples, 25.84%)</title><rect x="704.0" y="467.0" width="304.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.0" y="478.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (91,656 samples, 25.84%)</title><rect x="704.0" y="451.0" width="304.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.0" y="462.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (91,656 samples, 25.84%)</title><rect x="704.0" y="435.0" width="304.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.0" y="446.0">jdk/internal/net/http/Http1AsyncReceiver$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (91,656 samples, 25.84%)</title><rect x="704.0" y="419.0" width="304.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.0" y="430.0">jdk/internal/net/http/Http1AsyncReceiver...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (91,225 samples, 25.72%)</title><rect x="704.0" y="403.0" width="303.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.0" y="414.0">jdk/internal/net/http/Http1AsyncReceiver...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (91,225 samples, 25.72%)</title><rect x="704.0" y="387.0" width="303.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.0" y="398.0">jdk/internal/net/http/Http1Response$BodyR..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (91,225 samples, 25.72%)</title><rect x="704.0" y="371.0" width="303.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.0" y="382.0">jdk/internal/net/http/ResponseContent$Fix..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.run (91,225 samples, 25.72%)</title><rect x="704.0" y="355.0" width="303.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.0" y="366.0">jdk/internal/net/http/Http1Response$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (91,225 samples, 25.72%)</title><rect x="704.0" y="339.0" width="303.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.0" y="350.0">jdk/internal/net/http/Http1Response.onFin..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (91,225 samples, 25.72%)</title><rect x="704.0" y="323.0" width="303.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.0" y="334.0">jdk/internal/net/http/HttpConnection.clos..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (91,225 samples, 25.72%)</title><rect x="704.0" y="307.0" width="303.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.0" y="318.0">jdk/internal/net/http/ConnectionPool.retu..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (91,225 samples, 25.72%)</title><rect x="704.0" y="291.0" width="303.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.0" y="302.0">jdk/internal/net/http/ConnectionPool.retu..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (20,945 samples, 5.91%)</title><rect x="704.0" y="275.0" width="69.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.0" y="286.0">jdk.int..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (70,280 samples, 19.82%)</title><rect x="773.7" y="275.0" width="233.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="286.0">jdk/internal/net/http/Connectio..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (70,280 samples, 19.82%)</title><rect x="773.7" y="259.0" width="233.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.7" y="270.0">jdk/internal/net/http/SocketTub..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (9,304 samples, 2.62%)</title><rect x="773.7" y="243.0" width="30.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.7" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9,304 samples, 2.62%)</title><rect x="773.7" y="227.0" width="30.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.7" y="238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9,304 samples, 2.62%)</title><rect x="773.7" y="211.0" width="30.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.7" y="222.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9,304 samples, 2.62%)</title><rect x="773.7" y="195.0" width="30.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.7" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9,304 samples, 2.62%)</title><rect x="773.7" y="179.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.7" y="190.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (8,506 samples, 2.40%)</title><rect x="773.7" y="163.0" width="28.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="776.7" y="174.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (798 samples, 0.23%)</title><rect x="802.0" y="163.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (798 samples, 0.23%)</title><rect x="802.0" y="147.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="805.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (60,976 samples, 17.19%)</title><rect x="804.6" y="243.0" width="202.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.6" y="254.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (60,976 samples, 17.19%)</title><rect x="804.6" y="227.0" width="202.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.6" y="238.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (60,976 samples, 17.19%)</title><rect x="804.6" y="211.0" width="202.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.6" y="222.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (60,976 samples, 17.19%)</title><rect x="804.6" y="195.0" width="202.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.6" y="206.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (60,976 samples, 17.19%)</title><rect x="804.6" y="179.0" width="202.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.6" y="190.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (59,589 samples, 16.80%)</title><rect x="804.6" y="163.0" width="198.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="807.6" y="174.0">jdk.internal.net.http.Http..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,387 samples, 0.39%)</title><rect x="1002.9" y="163.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,387 samples, 0.39%)</title><rect x="1002.9" y="147.0" width="4.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1005.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (431 samples, 0.12%)</title><rect x="1007.5" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (431 samples, 0.12%)</title><rect x="1007.5" y="387.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (431 samples, 0.12%)</title><rect x="1007.5" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (431 samples, 0.12%)</title><rect x="1007.5" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (431 samples, 0.12%)</title><rect x="1007.5" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (431 samples, 0.12%)</title><rect x="1007.5" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (431 samples, 0.12%)</title><rect x="1007.5" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (431 samples, 0.12%)</title><rect x="1007.5" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (431 samples, 0.12%)</title><rect x="1007.5" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (431 samples, 0.12%)</title><rect x="1007.5" y="259.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (431 samples, 0.12%)</title><rect x="1007.5" y="243.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1010.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (431 samples, 0.12%)</title><rect x="1007.5" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (431 samples, 0.12%)</title><rect x="1007.5" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (80 samples, 0.02%)</title><rect x="1007.5" y="195.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$345/573480486.apply (80 samples, 0.02%)</title><rect x="1007.5" y="179.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (80 samples, 0.02%)</title><rect x="1007.5" y="163.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (80 samples, 0.02%)</title><rect x="1007.5" y="147.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (80 samples, 0.02%)</title><rect x="1007.5" y="131.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (80 samples, 0.02%)</title><rect x="1007.5" y="115.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Class (80 samples, 0.02%)</title><rect x="1007.5" y="99.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1010.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (351 samples, 0.10%)</title><rect x="1007.7" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (351 samples, 0.10%)</title><rect x="1007.7" y="179.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$346/325847571.apply (351 samples, 0.10%)</title><rect x="1007.7" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1010.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (351 samples, 0.10%)</title><rect x="1007.7" y="147.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (351 samples, 0.10%)</title><rect x="1007.7" y="131.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1010.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (351 samples, 0.10%)</title><rect x="1007.7" y="115.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (351 samples, 0.10%)</title><rect x="1007.7" y="99.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1010.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.run (6,352 samples, 1.79%)</title><rect x="1008.9" y="515.0" width="21.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.9" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (6,352 samples, 1.79%)</title><rect x="1008.9" y="499.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.9" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$142/964833577.process (6,347 samples, 1.79%)</title><rect x="1008.9" y="483.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.9" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (6,347 samples, 1.79%)</title><rect x="1008.9" y="467.0" width="21.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1011.9" y="478.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (6,347 samples, 1.79%)</title><rect x="1008.9" y="451.0" width="21.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.9" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy (6,347 samples, 1.79%)</title><rect x="1008.9" y="435.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.9" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$153/1356845972.execute (4,531 samples, 1.28%)</title><rect x="1008.9" y="419.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$9 (4,531 samples, 1.28%)</title><rect x="1008.9" y="403.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localUpsert (4,531 samples, 1.28%)</title><rect x="1008.9" y="387.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4,531 samples, 1.28%)</title><rect x="1008.9" y="371.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4,531 samples, 1.28%)</title><rect x="1008.9" y="355.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,531 samples, 1.28%)</title><rect x="1008.9" y="339.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4,531 samples, 1.28%)</title><rect x="1008.9" y="323.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,531 samples, 1.28%)</title><rect x="1008.9" y="307.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,531 samples, 1.28%)</title><rect x="1008.9" y="291.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,531 samples, 1.28%)</title><rect x="1008.9" y="275.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,531 samples, 1.28%)</title><rect x="1008.9" y="259.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,531 samples, 1.28%)</title><rect x="1008.9" y="243.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,531 samples, 1.28%)</title><rect x="1008.9" y="227.0" width="15.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,531 samples, 1.28%)</title><rect x="1008.9" y="211.0" width="15.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1011.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$154/1918512428.resolve (1,220 samples, 0.34%)</title><rect x="1024.0" y="419.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveChange (1,220 samples, 0.34%)</title><rect x="1024.0" y="403.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (1,220 samples, 0.34%)</title><rect x="1024.0" y="387.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,220 samples, 0.34%)</title><rect x="1024.0" y="371.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$215/1222288581.accept (1,220 samples, 0.34%)</title><rect x="1024.0" y="355.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (1,220 samples, 0.34%)</title><rect x="1024.0" y="339.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,220 samples, 0.34%)</title><rect x="1024.0" y="323.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,220 samples, 0.34%)</title><rect x="1024.0" y="307.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,211 samples, 0.34%)</title><rect x="1024.0" y="291.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,211 samples, 0.34%)</title><rect x="1024.0" y="275.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,211 samples, 0.34%)</title><rect x="1024.0" y="259.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,211 samples, 0.34%)</title><rect x="1024.0" y="243.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,211 samples, 0.34%)</title><rect x="1024.0" y="227.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,211 samples, 0.34%)</title><rect x="1024.0" y="211.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,211 samples, 0.34%)</title><rect x="1024.0" y="195.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,211 samples, 0.34%)</title><rect x="1024.0" y="179.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,211 samples, 0.34%)</title><rect x="1024.0" y="163.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1027.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (596 samples, 0.17%)</title><rect x="1028.0" y="419.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (596 samples, 0.17%)</title><rect x="1028.0" y="403.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$160/18761757.accept (596 samples, 0.17%)</title><rect x="1028.0" y="387.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (596 samples, 0.17%)</title><rect x="1028.0" y="371.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (596 samples, 0.17%)</title><rect x="1028.0" y="355.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (596 samples, 0.17%)</title><rect x="1028.0" y="339.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (596 samples, 0.17%)</title><rect x="1028.0" y="323.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (596 samples, 0.17%)</title><rect x="1028.0" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (596 samples, 0.17%)</title><rect x="1028.0" y="291.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (596 samples, 0.17%)</title><rect x="1028.0" y="275.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (596 samples, 0.17%)</title><rect x="1028.0" y="259.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (596 samples, 0.17%)</title><rect x="1028.0" y="243.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (105 samples, 0.03%)</title><rect x="1028.0" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (105 samples, 0.03%)</title><rect x="1028.0" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (105 samples, 0.03%)</title><rect x="1028.0" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (105 samples, 0.03%)</title><rect x="1028.0" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (105 samples, 0.03%)</title><rect x="1028.0" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (105 samples, 0.03%)</title><rect x="1028.0" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (105 samples, 0.03%)</title><rect x="1028.0" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (105 samples, 0.03%)</title><rect x="1028.0" y="115.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1031.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (491 samples, 0.14%)</title><rect x="1028.4" y="227.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (491 samples, 0.14%)</title><rect x="1028.4" y="211.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (491 samples, 0.14%)</title><rect x="1028.4" y="195.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1031.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (491 samples, 0.14%)</title><rect x="1028.4" y="179.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (491 samples, 0.14%)</title><rect x="1028.4" y="163.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (491 samples, 0.14%)</title><rect x="1028.4" y="147.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (491 samples, 0.14%)</title><rect x="1028.4" y="131.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1031.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,641 samples, 0.74%)</title><rect x="1030.0" y="563.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,641 samples, 0.74%)</title><rect x="1030.0" y="547.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,641 samples, 0.74%)</title><rect x="1030.0" y="531.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,641 samples, 0.74%)</title><rect x="1030.0" y="515.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,641 samples, 0.74%)</title><rect x="1030.0" y="499.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,641 samples, 0.74%)</title><rect x="1030.0" y="483.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,641 samples, 0.74%)</title><rect x="1030.0" y="467.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,641 samples, 0.74%)</title><rect x="1030.0" y="451.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,641 samples, 0.74%)</title><rect x="1030.0" y="435.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,641 samples, 0.74%)</title><rect x="1030.0" y="419.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,641 samples, 0.74%)</title><rect x="1030.0" y="403.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,641 samples, 0.74%)</title><rect x="1030.0" y="387.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,641 samples, 0.74%)</title><rect x="1030.0" y="371.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,641 samples, 0.74%)</title><rect x="1030.0" y="355.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,641 samples, 0.74%)</title><rect x="1030.0" y="339.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,641 samples, 0.74%)</title><rect x="1030.0" y="323.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,641 samples, 0.74%)</title><rect x="1030.0" y="307.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,641 samples, 0.74%)</title><rect x="1030.0" y="291.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,641 samples, 0.74%)</title><rect x="1030.0" y="275.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,641 samples, 0.74%)</title><rect x="1030.0" y="259.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,641 samples, 0.74%)</title><rect x="1030.0" y="243.0" width="8.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1033.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (40,287 samples, 11.36%)</title><rect x="1038.8" y="563.0" width="134.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.8" y="574.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (116 samples, 0.03%)</title><rect x="1038.8" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$350/367522421.accept (116 samples, 0.03%)</title><rect x="1038.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (116 samples, 0.03%)</title><rect x="1038.8" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (116 samples, 0.03%)</title><rect x="1038.8" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (116 samples, 0.03%)</title><rect x="1038.8" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (116 samples, 0.03%)</title><rect x="1038.8" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (116 samples, 0.03%)</title><rect x="1038.8" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 0.03%)</title><rect x="1038.8" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 0.03%)</title><rect x="1038.8" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (116 samples, 0.03%)</title><rect x="1038.8" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (116 samples, 0.03%)</title><rect x="1038.8" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1370831110.run (116 samples, 0.03%)</title><rect x="1038.8" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (116 samples, 0.03%)</title><rect x="1038.8" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (113 samples, 0.03%)</title><rect x="1038.8" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (113 samples, 0.03%)</title><rect x="1038.8" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (113 samples, 0.03%)</title><rect x="1038.8" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (113 samples, 0.03%)</title><rect x="1038.8" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (113 samples, 0.03%)</title><rect x="1038.8" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (113 samples, 0.03%)</title><rect x="1038.8" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (113 samples, 0.03%)</title><rect x="1038.8" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (113 samples, 0.03%)</title><rect x="1038.8" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1041.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (77 samples, 0.02%)</title><rect x="1038.8" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (77 samples, 0.02%)</title><rect x="1038.8" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (77 samples, 0.02%)</title><rect x="1038.8" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (77 samples, 0.02%)</title><rect x="1038.8" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (77 samples, 0.02%)</title><rect x="1038.8" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (77 samples, 0.02%)</title><rect x="1038.8" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1041.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (77 samples, 0.02%)</title><rect x="1038.8" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.8" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (77 samples, 0.02%)</title><rect x="1038.8" y="99.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1041.8" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (28,966 samples, 8.17%)</title><rect x="1039.2" y="547.0" width="96.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1042.2" y="558.0">jdk.interna..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (274 samples, 0.08%)</title><rect x="1135.6" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/1151414921.run (205 samples, 0.06%)</title><rect x="1135.8" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (205 samples, 0.06%)</title><rect x="1135.8" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (205 samples, 0.06%)</title><rect x="1135.8" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (205 samples, 0.06%)</title><rect x="1135.8" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (205 samples, 0.06%)</title><rect x="1135.8" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (145 samples, 0.04%)</title><rect x="1136.0" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (145 samples, 0.04%)</title><rect x="1136.0" y="435.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (145 samples, 0.04%)</title><rect x="1136.0" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (145 samples, 0.04%)</title><rect x="1136.0" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (145 samples, 0.04%)</title><rect x="1136.0" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (145 samples, 0.04%)</title><rect x="1136.0" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (145 samples, 0.04%)</title><rect x="1136.0" y="355.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1139.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6,287 samples, 1.77%)</title><rect x="1136.5" y="547.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6,287 samples, 1.77%)</title><rect x="1136.5" y="531.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (6,287 samples, 1.77%)</title><rect x="1136.5" y="515.0" width="20.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1139.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (4,152 samples, 1.17%)</title><rect x="1157.4" y="547.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (4,152 samples, 1.17%)</title><rect x="1157.4" y="531.0" width="13.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1160.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (311 samples, 0.09%)</title><rect x="1171.2" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (311 samples, 0.09%)</title><rect x="1171.2" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (311 samples, 0.09%)</title><rect x="1171.2" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (311 samples, 0.09%)</title><rect x="1171.2" y="499.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (311 samples, 0.09%)</title><rect x="1171.2" y="483.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (311 samples, 0.09%)</title><rect x="1171.2" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1174.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (181 samples, 0.05%)</title><rect x="1172.3" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (181 samples, 0.05%)</title><rect x="1172.3" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (181 samples, 0.05%)</title><rect x="1172.3" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (181 samples, 0.05%)</title><rect x="1172.3" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (181 samples, 0.05%)</title><rect x="1172.3" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (181 samples, 0.05%)</title><rect x="1172.3" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1175.3" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,148 samples, 1.45%)</title><rect x="1172.9" y="563.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,148 samples, 1.45%)</title><rect x="1172.9" y="547.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,084 samples, 1.43%)</title><rect x="1173.1" y="531.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,084 samples, 1.43%)</title><rect x="1173.1" y="515.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,084 samples, 1.43%)</title><rect x="1173.1" y="499.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,084 samples, 1.43%)</title><rect x="1173.1" y="483.0" width="16.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.1" y="494.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (5,084 samples, 1.43%)</title><rect x="1173.1" y="467.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (5,084 samples, 1.43%)</title><rect x="1173.1" y="451.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (5,084 samples, 1.43%)</title><rect x="1173.1" y="435.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5,084 samples, 1.43%)</title><rect x="1173.1" y="419.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5,084 samples, 1.43%)</title><rect x="1173.1" y="403.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5,084 samples, 1.43%)</title><rect x="1173.1" y="387.0" width="16.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5,084 samples, 1.43%)</title><rect x="1173.1" y="371.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5,084 samples, 1.43%)</title><rect x="1173.1" y="355.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5,084 samples, 1.43%)</title><rect x="1173.1" y="339.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5,084 samples, 1.43%)</title><rect x="1173.1" y="323.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5,084 samples, 1.43%)</title><rect x="1173.1" y="307.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5,084 samples, 1.43%)</title><rect x="1173.1" y="291.0" width="16.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1176.1" y="302.0"></text>
</g>
</g>
</svg>
