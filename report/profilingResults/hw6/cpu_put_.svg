<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1237"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1237"> </text>
<g id="frames">
<g>
<title>all (8,832 samples, 100.00%)</title><rect x="10.0" y="1203.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1214.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (189 samples, 2.14%)</title><rect x="10.0" y="1187.0" width="25.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1198.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (188 samples, 2.13%)</title><rect x="10.1" y="1171.0" width="25.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.1" y="1182.0">O..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (188 samples, 2.13%)</title><rect x="10.1" y="1155.0" width="25.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.1" y="1166.0">O..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (181 samples, 2.05%)</title><rect x="10.7" y="1139.0" width="24.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.7" y="1150.0">O..</text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (121 samples, 1.37%)</title><rect x="11.5" y="1123.0" width="16.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.5" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.02%)</title><rect x="27.4" y="1107.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="30.4" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="27.4" y="1091.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.4" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="27.4" y="1075.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="30.4" y="1086.0"></text>
</g>
<g>
<title>SpinPause (32 samples, 0.36%)</title><rect x="27.6" y="1123.0" width="4.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="30.6" y="1134.0"></text>
</g>
<g>
<title>__lll_unlock_wake (17 samples, 0.19%)</title><rect x="31.9" y="1123.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="34.9" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="33.4" y="1107.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="36.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="33.5" y="1091.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.5" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="33.9" y="1075.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.9" y="1086.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="33.9" y="1059.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="36.9" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="34.6" y="1123.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="37.6" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="34.9" y="1139.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="37.9" y="1150.0"></text>
</g>
<g>
<title>[no_Java_frame] (64 samples, 0.72%)</title><rect x="35.3" y="1187.0" width="8.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="38.3" y="1198.0"></text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.10%)</title><rect x="43.8" y="1187.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="46.8" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="43.8" y="1171.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="46.8" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.05%)</title><rect x="43.8" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="46.8" y="1166.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.03%)</title><rect x="43.9" y="1139.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="46.9" y="1150.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.03%)</title><rect x="43.9" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="46.9" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="44.3" y="1171.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="47.3" y="1182.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.03%)</title><rect x="44.3" y="1155.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.3" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="44.7" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="47.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.27%)</title><rect x="45.0" y="1187.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="48.0" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (20 samples, 0.23%)</title><rect x="45.5" y="1171.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="48.5" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="47.7" y="1155.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="50.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="47.7" y="1139.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.7" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="47.7" y="1123.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="50.7" y="1134.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="47.7" y="1107.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.7" y="1118.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="47.7" y="1091.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.7" y="1102.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.03%)</title><rect x="47.8" y="1075.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="50.8" y="1086.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="47.9" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.9" y="1070.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="47.9" y="1043.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.9" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (53 samples, 0.60%)</title><rect x="48.2" y="1187.0" width="7.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="51.2" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="48.3" y="1171.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="51.3" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="48.6" y="1171.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="51.6" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.02%)</title><rect x="48.6" y="1155.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="51.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="49.0" y="1171.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="52.0" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (45 samples, 0.51%)</title><rect x="49.3" y="1171.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="52.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.38%)</title><rect x="50.7" y="1155.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="53.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.38%)</title><rect x="50.7" y="1139.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="53.7" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.36%)</title><rect x="51.0" y="1123.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.0" y="1134.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.35%)</title><rect x="51.2" y="1107.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.2" y="1118.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 0.33%)</title><rect x="51.3" y="1091.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="54.3" y="1102.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="52.0" y="1075.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="55.0" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 0.25%)</title><rect x="52.2" y="1075.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="55.2" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.25%)</title><rect x="52.2" y="1059.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="55.2" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.25%)</title><rect x="52.2" y="1043.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="55.2" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (32 samples, 0.36%)</title><rect x="55.4" y="1187.0" width="4.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="58.4" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.19%)</title><rect x="57.4" y="1171.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.4" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.18%)</title><rect x="57.6" y="1155.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.6" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.17%)</title><rect x="57.7" y="1139.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.7" y="1150.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.11%)</title><rect x="58.0" y="1123.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="61.0" y="1134.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.11%)</title><rect x="58.0" y="1107.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.0" y="1118.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.07%)</title><rect x="58.1" y="1091.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.1" y="1102.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.05%)</title><rect x="58.1" y="1075.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.1" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="58.1" y="1059.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="61.1" y="1070.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="58.6" y="1075.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.6" y="1086.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="58.6" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.6" y="1070.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.03%)</title><rect x="58.9" y="1091.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.9" y="1102.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.03%)</title><rect x="58.9" y="1075.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="58.9" y="1059.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="61.9" y="1070.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.02%)</title><rect x="59.3" y="1123.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="62.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,037 samples, 57.03%)</title><rect x="60.0" y="1187.0" width="672.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.0" y="1198.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,037 samples, 57.03%)</title><rect x="60.0" y="1171.0" width="672.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.0" y="1182.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,036 samples, 57.02%)</title><rect x="60.1" y="1155.0" width="672.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="1166.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (971 samples, 10.99%)</title><rect x="60.2" y="1139.0" width="129.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.2" y="1150.0">java/util/concur..</text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="60.6" y="1123.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="63.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (736 samples, 8.33%)</title><rect x="60.9" y="1123.0" width="98.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.9" y="1134.0">java/util/co..</text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="61.4" y="1107.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="64.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (77 samples, 0.87%)</title><rect x="61.8" y="1107.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (72 samples, 0.82%)</title><rect x="61.8" y="1091.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (71 samples, 0.80%)</title><rect x="62.0" y="1075.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (71 samples, 0.80%)</title><rect x="62.0" y="1059.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.07%)</title><rect x="62.1" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.07%)</title><rect x="62.1" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.07%)</title><rect x="62.1" y="1011.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.07%)</title><rect x="62.1" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="62.9" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="62.9" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (62 samples, 0.70%)</title><rect x="63.2" y="1043.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (62 samples, 0.70%)</title><rect x="63.2" y="1027.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (62 samples, 0.70%)</title><rect x="63.2" y="1011.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (62 samples, 0.70%)</title><rect x="63.2" y="995.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (62 samples, 0.70%)</title><rect x="63.2" y="979.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.2" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.09%)</title><rect x="63.2" y="963.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="66.2" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="63.6" y="947.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="66.6" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.03%)</title><rect x="63.8" y="947.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="66.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (53 samples, 0.60%)</title><rect x="64.2" y="963.0" width="7.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="67.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.51%)</title><rect x="65.3" y="947.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.51%)</title><rect x="65.3" y="931.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="68.3" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.49%)</title><rect x="65.6" y="915.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.6" y="926.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.49%)</title><rect x="65.6" y="899.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.6" y="910.0"></text>
</g>
<g>
<title>futex_wake (42 samples, 0.48%)</title><rect x="65.6" y="883.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="68.6" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="66.2" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.2" y="878.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 0.40%)</title><rect x="66.5" y="867.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="69.5" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (32 samples, 0.36%)</title><rect x="66.9" y="851.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (32 samples, 0.36%)</title><rect x="66.9" y="835.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="69.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.06%)</title><rect x="71.5" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.06%)</title><rect x="71.5" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.5" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="71.5" y="1059.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="74.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.03%)</title><rect x="71.7" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (644 samples, 7.29%)</title><rect x="72.1" y="1107.0" width="86.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.1" y="1118.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.09%)</title><rect x="72.3" y="1091.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.3" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="72.7" y="1075.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="75.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.apply (3 samples, 0.03%)</title><rect x="72.9" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.apply (635 samples, 7.19%)</title><rect x="73.3" y="1091.0" width="84.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.3" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (635 samples, 7.19%)</title><rect x="73.3" y="1075.0" width="84.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.3" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (634 samples, 7.18%)</title><rect x="73.5" y="1059.0" width="84.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.5" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.02%)</title><rect x="74.0" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.02%)</title><rect x="74.0" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (538 samples, 6.09%)</title><rect x="74.4" y="1043.0" width="71.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.4" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (538 samples, 6.09%)</title><rect x="74.4" y="1027.0" width="71.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.4" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (536 samples, 6.07%)</title><rect x="74.7" y="1011.0" width="71.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.7" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (343 samples, 3.88%)</title><rect x="74.8" y="995.0" width="45.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.8" y="1006.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (343 samples, 3.88%)</title><rect x="74.8" y="979.0" width="45.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.8" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (343 samples, 3.88%)</title><rect x="74.8" y="963.0" width="45.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.8" y="974.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/378141810.apply (343 samples, 3.88%)</title><rect x="74.8" y="947.0" width="45.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.8" y="958.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (343 samples, 3.88%)</title><rect x="74.8" y="931.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.8" y="942.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (343 samples, 3.88%)</title><rect x="74.8" y="915.0" width="45.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.8" y="926.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/565635497.apply (343 samples, 3.88%)</title><rect x="74.8" y="899.0" width="45.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.8" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (343 samples, 3.88%)</title><rect x="74.8" y="883.0" width="45.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.8" y="894.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.05%)</title><rect x="74.9" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.05%)</title><rect x="74.9" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.05%)</title><rect x="74.9" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1660747199.apply (4 samples, 0.05%)</title><rect x="74.9" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.05%)</title><rect x="74.9" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.05%)</title><rect x="74.9" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1781629338.apply (3 samples, 0.03%)</title><rect x="74.9" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.03%)</title><rect x="74.9" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.03%)</title><rect x="74.9" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3 samples, 0.03%)</title><rect x="74.9" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3 samples, 0.03%)</title><rect x="74.9" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3 samples, 0.03%)</title><rect x="74.9" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$429/669699404.accept (3 samples, 0.03%)</title><rect x="74.9" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (3 samples, 0.03%)</title><rect x="74.9" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.03%)</title><rect x="74.9" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3 samples, 0.03%)</title><rect x="74.9" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (3 samples, 0.03%)</title><rect x="74.9" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="74.9" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="74.9" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.03%)</title><rect x="74.9" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.03%)</title><rect x="74.9" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.03%)</title><rect x="74.9" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.02%)</title><rect x="75.1" y="515.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.02%)</title><rect x="75.1" y="499.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="75.1" y="483.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="75.1" y="467.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="75.1" y="451.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="75.1" y="435.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.02%)</title><rect x="75.1" y="419.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.02%)</title><rect x="75.1" y="403.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.02%)</title><rect x="75.1" y="387.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.02%)</title><rect x="75.1" y="371.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.02%)</title><rect x="75.1" y="355.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.02%)</title><rect x="75.1" y="339.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.02%)</title><rect x="75.1" y="323.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.02%)</title><rect x="75.1" y="307.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.02%)</title><rect x="75.1" y="291.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.1" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.02%)</title><rect x="75.1" y="275.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.02%)</title><rect x="75.1" y="259.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.02%)</title><rect x="75.1" y="243.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.02%)</title><rect x="75.1" y="227.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.02%)</title><rect x="75.1" y="211.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.02%)</title><rect x="75.1" y="195.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="75.1" y="179.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="78.1" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="75.1" y="163.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="78.1" y="174.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.02%)</title><rect x="75.1" y="147.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="78.1" y="158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="75.1" y="131.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.1" y="142.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="75.1" y="115.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.1" y="126.0"></text>
</g>
<g>
<title>__x64_sys_writev (2 samples, 0.02%)</title><rect x="75.1" y="99.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="78.1" y="110.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.02%)</title><rect x="75.1" y="83.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (337 samples, 3.82%)</title><rect x="75.6" y="867.0" width="45.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.6" y="878.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (296 samples, 3.35%)</title><rect x="76.1" y="851.0" width="39.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.1" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (296 samples, 3.35%)</title><rect x="76.1" y="835.0" width="39.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.1" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (8 samples, 0.09%)</title><rect x="76.4" y="819.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.4" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="76.8" y="803.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="79.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/364181208.apply (2 samples, 0.02%)</title><rect x="77.1" y="803.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/364181208.apply (286 samples, 3.24%)</title><rect x="77.5" y="819.0" width="38.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.5" y="830.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (286 samples, 3.24%)</title><rect x="77.5" y="803.0" width="38.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.5" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.14%)</title><rect x="77.9" y="787.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.14%)</title><rect x="77.9" y="771.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.14%)</title><rect x="77.9" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.07%)</title><rect x="78.3" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.06%)</title><rect x="78.4" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.06%)</title><rect x="78.4" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.05%)</title><rect x="78.4" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.03%)</title><rect x="78.5" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.5" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="79.1" y="739.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="82.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (64 samples, 0.72%)</title><rect x="79.5" y="787.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (64 samples, 0.72%)</title><rect x="79.5" y="771.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (20 samples, 0.23%)</title><rect x="80.1" y="755.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (18 samples, 0.20%)</title><rect x="80.3" y="739.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (18 samples, 0.20%)</title><rect x="80.3" y="723.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (16 samples, 0.18%)</title><rect x="80.4" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.18%)</title><rect x="80.4" y="691.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.4" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="80.8" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="83.8" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="80.8" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="83.8" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="80.8" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="83.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.11%)</title><rect x="81.2" y="675.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.03%)</title><rect x="82.1" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="82.1" y="643.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="85.1" y="654.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.03%)</title><rect x="82.1" y="627.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="85.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="82.1" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="85.1" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="82.1" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.1" y="606.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.03%)</title><rect x="82.1" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.1" y="590.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.03%)</title><rect x="82.1" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.1" y="574.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.03%)</title><rect x="82.1" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="85.1" y="558.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.02%)</title><rect x="82.1" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.1" y="542.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.02%)</title><rect x="82.1" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.1" y="526.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.02%)</title><rect x="82.1" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="85.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (39 samples, 0.44%)</title><rect x="82.8" y="755.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (39 samples, 0.44%)</title><rect x="82.8" y="739.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (35 samples, 0.40%)</title><rect x="82.8" y="723.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (35 samples, 0.40%)</title><rect x="82.8" y="707.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (35 samples, 0.40%)</title><rect x="82.8" y="691.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.8" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="83.1" y="675.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="86.1" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.09%)</title><rect x="83.1" y="659.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="86.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.09%)</title><rect x="83.1" y="643.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="86.1" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (6 samples, 0.07%)</title><rect x="83.1" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="86.1" y="638.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="83.9" y="627.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="86.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="84.2" y="675.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="84.2" y="659.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="84.2" y="643.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="84.2" y="627.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="84.2" y="611.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.26%)</title><rect x="84.4" y="675.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.4" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="85.4" y="659.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="88.4" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.07%)</title><rect x="85.4" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="88.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.06%)</title><rect x="85.5" y="627.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="88.5" y="638.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.06%)</title><rect x="85.5" y="611.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="88.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.11%)</title><rect x="86.2" y="659.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.11%)</title><rect x="86.2" y="643.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="89.2" y="654.0"></text>
</g>
<g>
<title>__libc_write (10 samples, 0.11%)</title><rect x="86.2" y="627.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="89.2" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="86.3" y="611.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.3" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.10%)</title><rect x="86.3" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_write (9 samples, 0.10%)</title><rect x="86.3" y="579.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.3" y="590.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.10%)</title><rect x="86.3" y="563.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="89.3" y="574.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.09%)</title><rect x="86.4" y="547.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.4" y="558.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.09%)</title><rect x="86.4" y="531.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.4" y="542.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.08%)</title><rect x="86.6" y="515.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.6" y="526.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.08%)</title><rect x="86.6" y="499.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.6" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.06%)</title><rect x="86.6" y="483.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.6" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.06%)</title><rect x="86.6" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="86.7" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2 samples, 0.02%)</title><rect x="87.5" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.02%)</title><rect x="87.5" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="87.5" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (2 samples, 0.02%)</title><rect x="87.8" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (207 samples, 2.34%)</title><rect x="88.0" y="787.0" width="27.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.0" y="798.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.09%)</title><rect x="88.0" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.09%)</title><rect x="88.0" y="755.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (8 samples, 0.09%)</title><rect x="88.0" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.03%)</title><rect x="89.1" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.02%)</title><rect x="89.2" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.11%)</title><rect x="89.5" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.5" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="89.5" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.5" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.09%)</title><rect x="89.8" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="90.6" y="739.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="93.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (144 samples, 1.63%)</title><rect x="90.8" y="771.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.8" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (57 samples, 0.65%)</title><rect x="91.0" y="755.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.0" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (57 samples, 0.65%)</title><rect x="91.0" y="739.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.0" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (52 samples, 0.59%)</title><rect x="91.6" y="723.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (52 samples, 0.59%)</title><rect x="91.6" y="707.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (51 samples, 0.58%)</title><rect x="91.8" y="691.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (51 samples, 0.58%)</title><rect x="91.8" y="675.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (32 samples, 0.36%)</title><rect x="92.0" y="659.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (32 samples, 0.36%)</title><rect x="92.0" y="643.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.0" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (32 samples, 0.36%)</title><rect x="92.0" y="627.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$407/623734236.test (18 samples, 0.20%)</title><rect x="93.9" y="611.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (18 samples, 0.20%)</title><rect x="93.9" y="595.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (18 samples, 0.20%)</title><rect x="93.9" y="579.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.08%)</title><rect x="93.9" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.08%)</title><rect x="93.9" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.08%)</title><rect x="93.9" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.08%)</title><rect x="93.9" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.07%)</title><rect x="94.0" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.07%)</title><rect x="94.0" y="483.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.07%)</title><rect x="94.0" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.07%)</title><rect x="94.0" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.05%)</title><rect x="94.3" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.05%)</title><rect x="94.3" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="430.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.05%)</title><rect x="94.3" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.11%)</title><rect x="95.0" y="563.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.08%)</title><rect x="95.4" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.07%)</title><rect x="95.4" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.07%)</title><rect x="95.4" y="515.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="95.4" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.05%)</title><rect x="95.4" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.02%)</title><rect x="95.6" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="95.9" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.14%)</title><rect x="96.3" y="659.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.3" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (2 samples, 0.02%)</title><rect x="96.8" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.02%)</title><rect x="96.8" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$407/623734236.test (3 samples, 0.03%)</title><rect x="97.1" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$405/1324565099.test (3 samples, 0.03%)</title><rect x="97.5" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="97.9" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.02%)</title><rect x="98.2" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.05%)</title><rect x="98.6" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.6" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.05%)</title><rect x="98.6" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.6" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.05%)</title><rect x="98.6" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.05%)</title><rect x="98.6" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="98.6" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="98.6" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="98.6" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="98.6" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.05%)</title><rect x="98.6" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="98.8" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="98.8" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.8" y="606.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="98.8" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (44 samples, 0.50%)</title><rect x="99.1" y="755.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.1" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.02%)</title><rect x="100.5" y="739.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.5" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.02%)</title><rect x="100.5" y="723.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.02%)</title><rect x="100.5" y="707.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.02%)</title><rect x="100.5" y="691.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.02%)</title><rect x="100.5" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.02%)</title><rect x="100.5" y="659.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (5 samples, 0.06%)</title><rect x="100.7" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.7" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (5 samples, 0.06%)</title><rect x="100.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (5 samples, 0.06%)</title><rect x="100.7" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (5 samples, 0.06%)</title><rect x="100.7" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.7" y="702.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (3 samples, 0.03%)</title><rect x="101.4" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.4" y="750.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (3 samples, 0.03%)</title><rect x="101.4" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.4" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1229942176.test (18 samples, 0.20%)</title><rect x="101.8" y="739.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.8" y="750.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (18 samples, 0.20%)</title><rect x="101.8" y="723.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$108/341796579.test (18 samples, 0.20%)</title><rect x="101.8" y="707.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$11 (18 samples, 0.20%)</title><rect x="101.8" y="691.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.8" y="702.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$98/953742666.test (18 samples, 0.20%)</title><rect x="101.8" y="675.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.8" y="686.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (18 samples, 0.20%)</title><rect x="101.8" y="659.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$97/860481979.test (18 samples, 0.20%)</title><rect x="101.8" y="643.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$4 (18 samples, 0.20%)</title><rect x="101.8" y="627.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.10%)</title><rect x="101.8" y="611.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.06%)</title><rect x="101.8" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="102.2" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="102.5" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.10%)</title><rect x="103.0" y="611.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.06%)</title><rect x="103.0" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="103.7" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.03%)</title><rect x="103.8" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.07%)</title><rect x="104.2" y="739.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="107.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (38 samples, 0.43%)</title><rect x="105.0" y="755.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.0" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (38 samples, 0.43%)</title><rect x="105.0" y="739.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (38 samples, 0.43%)</title><rect x="105.0" y="723.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (33 samples, 0.37%)</title><rect x="105.0" y="707.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (26 samples, 0.29%)</title><rect x="105.1" y="691.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.1" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.29%)</title><rect x="105.1" y="675.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.05%)</title><rect x="105.4" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (4 samples, 0.05%)</title><rect x="105.4" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="105.4" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (10 samples, 0.11%)</title><rect x="105.9" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.9" y="670.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.06%)</title><rect x="106.3" y="643.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="109.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$93/1793799654.test (2 samples, 0.02%)</title><rect x="107.0" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.06%)</title><rect x="107.3" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.3" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (4 samples, 0.05%)</title><rect x="107.4" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="107.4" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.06%)</title><rect x="107.9" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.02%)</title><rect x="108.3" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (5 samples, 0.06%)</title><rect x="108.7" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.7" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (2 samples, 0.02%)</title><rect x="109.1" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.06%)</title><rect x="109.4" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.06%)</title><rect x="109.4" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (5 samples, 0.06%)</title><rect x="109.4" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.4" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (5 samples, 0.06%)</title><rect x="109.4" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.05%)</title><rect x="110.1" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.05%)</title><rect x="110.1" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (4 samples, 0.05%)</title><rect x="110.1" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (8 samples, 0.09%)</title><rect x="110.6" y="771.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (8 samples, 0.09%)</title><rect x="110.6" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="110.6" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (2 samples, 0.02%)</title><rect x="110.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="110.6" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (6 samples, 0.07%)</title><rect x="110.9" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="111.1" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.05%)</title><rect x="111.1" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (29 samples, 0.33%)</title><rect x="111.8" y="771.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.17%)</title><rect x="113.0" y="755.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="113.5" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.03%)</title><rect x="113.5" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.03%)</title><rect x="113.5" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (7 samples, 0.08%)</title><rect x="114.1" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="115.0" y="755.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="118.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (2 samples, 0.02%)</title><rect x="115.7" y="851.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (34 samples, 0.38%)</title><rect x="115.9" y="851.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (34 samples, 0.38%)</title><rect x="115.9" y="835.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (14 samples, 0.16%)</title><rect x="116.6" y="819.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (14 samples, 0.16%)</title><rect x="116.6" y="803.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.17%)</title><rect x="118.5" y="819.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.17%)</title><rect x="118.5" y="803.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14 samples, 0.16%)</title><rect x="118.6" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14 samples, 0.16%)</title><rect x="118.6" y="771.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.14%)</title><rect x="118.6" y="755.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (10 samples, 0.11%)</title><rect x="118.9" y="739.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9 samples, 0.10%)</title><rect x="119.0" y="723.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.02%)</title><rect x="119.2" y="707.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.02%)</title><rect x="119.2" y="691.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.02%)</title><rect x="119.2" y="675.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.02%)</title><rect x="119.2" y="659.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.07%)</title><rect x="119.4" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.02%)</title><rect x="119.6" y="691.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.02%)</title><rect x="119.6" y="675.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$471/282701340.run (2 samples, 0.02%)</title><rect x="119.6" y="659.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.02%)</title><rect x="119.6" y="643.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.02%)</title><rect x="119.6" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.02%)</title><rect x="119.6" y="611.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.02%)</title><rect x="119.6" y="595.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.02%)</title><rect x="119.6" y="579.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="119.6" y="563.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="119.6" y="547.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.03%)</title><rect x="119.8" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.03%)</title><rect x="119.8" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="119.8" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.02%)</title><rect x="120.2" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.02%)</title><rect x="120.2" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.02%)</title><rect x="120.2" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="120.6" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="120.6" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.03%)</title><rect x="120.8" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.8" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="120.8" y="947.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="123.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (188 samples, 2.13%)</title><rect x="121.2" y="995.0" width="25.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.2" y="1006.0">j..</text>
</g>
<g>
<title>_complete_monitor_locking_Java (2 samples, 0.02%)</title><rect x="121.3" y="979.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="124.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.15%)</title><rect x="121.6" y="979.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.15%)</title><rect x="121.6" y="963.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (7 samples, 0.08%)</title><rect x="122.1" y="947.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.1" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="122.2" y="931.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="125.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/898997379.apply (4 samples, 0.05%)</title><rect x="122.5" y="931.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/898997379.apply (2 samples, 0.02%)</title><rect x="123.0" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.02%)</title><rect x="123.0" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.02%)</title><rect x="123.0" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.02%)</title><rect x="123.0" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="123.0" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (172 samples, 1.95%)</title><rect x="123.3" y="979.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.3" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (172 samples, 1.95%)</title><rect x="123.3" y="963.0" width="23.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.3" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (172 samples, 1.95%)</title><rect x="123.3" y="947.0" width="23.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.3" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (12 samples, 0.14%)</title><rect x="123.6" y="931.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (9 samples, 0.10%)</title><rect x="125.2" y="931.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (9 samples, 0.10%)</title><rect x="125.2" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (9 samples, 0.10%)</title><rect x="125.2" y="899.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (9 samples, 0.10%)</title><rect x="125.2" y="883.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (9 samples, 0.10%)</title><rect x="125.2" y="867.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (9 samples, 0.10%)</title><rect x="125.2" y="851.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (8 samples, 0.09%)</title><rect x="126.4" y="931.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.09%)</title><rect x="126.4" y="915.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (8 samples, 0.09%)</title><rect x="126.4" y="899.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (8 samples, 0.09%)</title><rect x="126.4" y="883.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (8 samples, 0.09%)</title><rect x="126.4" y="867.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.4" y="878.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (8 samples, 0.09%)</title><rect x="126.4" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (111 samples, 1.26%)</title><rect x="127.4" y="931.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (110 samples, 1.25%)</title><rect x="127.4" y="915.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.4" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (52 samples, 0.59%)</title><rect x="132.1" y="899.0" width="7.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="135.1" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (51 samples, 0.58%)</title><rect x="132.2" y="883.0" width="6.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="135.2" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (50 samples, 0.57%)</title><rect x="132.2" y="867.0" width="6.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="135.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (42 samples, 0.48%)</title><rect x="132.2" y="851.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="135.2" y="862.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.09%)</title><rect x="137.9" y="851.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="140.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (23 samples, 0.26%)</title><rect x="139.1" y="899.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.1" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="139.5" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="139.5" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.03%)</title><rect x="139.5" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.5" y="862.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.03%)</title><rect x="139.5" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.5" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.03%)</title><rect x="139.5" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.5" y="830.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.03%)</title><rect x="139.5" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (16 samples, 0.18%)</title><rect x="140.0" y="883.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (30 samples, 0.34%)</title><rect x="142.3" y="931.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.3" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (30 samples, 0.34%)</title><rect x="142.3" y="915.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (30 samples, 0.34%)</title><rect x="142.3" y="899.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$230/1241923049.run (30 samples, 0.34%)</title><rect x="142.3" y="883.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (30 samples, 0.34%)</title><rect x="142.3" y="867.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="878.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (30 samples, 0.34%)</title><rect x="142.3" y="851.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.3" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (18 samples, 0.20%)</title><rect x="143.6" y="835.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.6" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 0.19%)</title><rect x="143.7" y="819.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.7" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.18%)</title><rect x="143.9" y="803.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.9" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (16 samples, 0.18%)</title><rect x="143.9" y="787.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (15 samples, 0.17%)</title><rect x="144.0" y="771.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.0" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="146.0" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (50 samples, 0.57%)</title><rect x="146.3" y="1043.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.3" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.08%)</title><rect x="146.4" y="1027.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="149.4" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.08%)</title><rect x="146.4" y="1011.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="149.4" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.07%)</title><rect x="146.4" y="995.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="149.4" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (5 samples, 0.06%)</title><rect x="146.4" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="149.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (13 samples, 0.15%)</title><rect x="147.3" y="1027.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.14%)</title><rect x="147.5" y="1011.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (5 samples, 0.06%)</title><rect x="148.4" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (29 samples, 0.33%)</title><rect x="149.1" y="1027.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (29 samples, 0.33%)</title><rect x="149.1" y="1011.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.1" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="149.2" y="995.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="152.2" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="149.2" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="152.2" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="149.2" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="152.2" y="974.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="149.2" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="152.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.28%)</title><rect x="149.6" y="995.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.28%)</title><rect x="149.6" y="979.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="152.6" y="990.0"></text>
</g>
<g>
<title>__libc_write (25 samples, 0.28%)</title><rect x="149.6" y="963.0" width="3.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="152.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.24%)</title><rect x="150.2" y="947.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="153.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.24%)</title><rect x="150.2" y="931.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="153.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_write (19 samples, 0.22%)</title><rect x="150.4" y="915.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.4" y="926.0"></text>
</g>
<g>
<title>ksys_write (19 samples, 0.22%)</title><rect x="150.4" y="899.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.4" y="910.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.19%)</title><rect x="150.7" y="883.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="153.7" y="894.0"></text>
</g>
<g>
<title>__vfs_write (15 samples, 0.17%)</title><rect x="150.7" y="867.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="153.7" y="878.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.17%)</title><rect x="150.7" y="851.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.7" y="862.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.16%)</title><rect x="150.8" y="835.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.8" y="846.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.07%)</title><rect x="151.1" y="819.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.1" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.07%)</title><rect x="151.1" y="803.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.1" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.07%)</title><rect x="151.1" y="787.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.1" y="798.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.02%)</title><rect x="151.9" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.9" y="830.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.02%)</title><rect x="152.2" y="819.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.2" y="830.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.02%)</title><rect x="152.2" y="803.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="155.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (6 samples, 0.07%)</title><rect x="153.0" y="1043.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (17 samples, 0.19%)</title><rect x="153.8" y="1043.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (15 samples, 0.17%)</title><rect x="154.0" y="1027.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (3 samples, 0.03%)</title><rect x="154.3" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.02%)</title><rect x="154.4" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.4" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.02%)</title><rect x="154.4" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.4" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.02%)</title><rect x="154.4" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.11%)</title><rect x="154.7" y="1011.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.7" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (8 samples, 0.09%)</title><rect x="155.0" y="995.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.0" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.02%)</title><rect x="155.1" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.1" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.02%)</title><rect x="155.1" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.1" y="974.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.02%)</title><rect x="155.1" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.1" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.02%)</title><rect x="155.1" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.1" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.06%)</title><rect x="155.4" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.4" y="990.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.06%)</title><rect x="155.4" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.4" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.02%)</title><rect x="155.5" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="158.5" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.191] (2 samples, 0.02%)</title><rect x="155.8" y="947.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="158.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (16 samples, 0.18%)</title><rect x="156.0" y="1043.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (16 samples, 0.18%)</title><rect x="156.0" y="1027.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (12 samples, 0.14%)</title><rect x="156.6" y="1011.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.6" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.10%)</title><rect x="156.6" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.6" y="1006.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.10%)</title><rect x="156.6" y="979.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.08%)</title><rect x="156.8" y="963.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.8" y="974.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.07%)</title><rect x="157.0" y="947.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="160.0" y="958.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="157.1" y="931.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="160.1" y="942.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.02%)</title><rect x="157.5" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="160.5" y="942.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="157.5" y="915.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="160.5" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.03%)</title><rect x="157.8" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.8" y="1006.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.03%)</title><rect x="157.8" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.8" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.03%)</title><rect x="157.8" y="963.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.8" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.03%)</title><rect x="157.8" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.8" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.03%)</title><rect x="157.8" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.8" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.03%)</title><rect x="157.8" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.8" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.03%)</title><rect x="157.8" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.8" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.03%)</title><rect x="157.8" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.03%)</title><rect x="158.2" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.03%)</title><rect x="158.2" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="158.2" y="1075.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.02%)</title><rect x="158.2" y="1059.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.2" y="1070.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="158.8" y="1107.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="161.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$154/526299918.get (230 samples, 2.60%)</title><rect x="159.2" y="1123.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.2" y="1134.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localUpsert$8 (230 samples, 2.60%)</title><rect x="159.2" y="1107.0" width="30.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.2" y="1118.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (221 samples, 2.50%)</title><rect x="159.8" y="1091.0" width="29.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.8" y="1102.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="159.8" y="1075.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="159.8" y="1059.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$160/1352926262.get$Lambda (2 samples, 0.02%)</title><rect x="159.8" y="1043.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (219 samples, 2.48%)</title><rect x="160.0" y="1075.0" width="29.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.0" y="1086.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.10%)</title><rect x="160.0" y="1059.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.09%)</title><rect x="160.2" y="1043.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.09%)</title><rect x="160.2" y="1027.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (7 samples, 0.08%)</title><rect x="160.3" y="1011.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (7 samples, 0.08%)</title><rect x="160.3" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$160/1352926262.run (210 samples, 2.38%)</title><rect x="161.2" y="1059.0" width="28.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.2" y="1070.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (210 samples, 2.38%)</title><rect x="161.2" y="1043.0" width="28.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.2" y="1054.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (210 samples, 2.38%)</title><rect x="161.2" y="1027.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.2" y="1038.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.10%)</title><rect x="161.2" y="1011.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.2" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.06%)</title><rect x="161.5" y="995.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="164.5" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.05%)</title><rect x="161.6" y="979.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="164.6" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.05%)</title><rect x="161.6" y="963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="164.6" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="161.6" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="164.6" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="161.6" y="931.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="164.6" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="162.2" y="995.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (199 samples, 2.25%)</title><rect x="162.4" y="1011.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.4" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (192 samples, 2.17%)</title><rect x="163.1" y="995.0" width="25.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.1" y="1006.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="164.2" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.02%)</title><rect x="164.8" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.02%)</title><rect x="164.8" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.06%)</title><rect x="165.1" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="165.5" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="165.5" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.5" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="165.5" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.5" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="165.5" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (172 samples, 1.95%)</title><rect x="165.8" y="979.0" width="23.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.8" y="990.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (73 samples, 0.83%)</title><rect x="179.0" y="963.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (73 samples, 0.83%)</title><rect x="179.0" y="947.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.0" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (73 samples, 0.83%)</title><rect x="179.0" y="931.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.0" y="942.0"></text>
</g>
<g>
<title>vectorizedMismatch (9 samples, 0.10%)</title><rect x="187.6" y="915.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="190.6" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="188.8" y="995.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="191.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (2 samples, 0.02%)</title><rect x="189.0" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="189.0" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="189.0" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.0" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="189.0" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="189.0" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.0" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="189.0" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapArray (5 samples, 0.06%)</title><rect x="189.3" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.3" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="189.3" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="189.3" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.3" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="189.6" y="1043.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="192.6" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="189.6" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="192.6" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="189.6" y="1011.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="192.6" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="189.6" y="995.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="192.6" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="189.7" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="192.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (626 samples, 7.09%)</title><rect x="190.0" y="1139.0" width="83.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.0" y="1150.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (626 samples, 7.09%)</title><rect x="190.0" y="1123.0" width="83.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.0" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (611 samples, 6.92%)</title><rect x="190.1" y="1107.0" width="81.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.1" y="1118.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (611 samples, 6.92%)</title><rect x="190.1" y="1091.0" width="81.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.1" y="1102.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (601 samples, 6.80%)</title><rect x="190.9" y="1075.0" width="80.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.9" y="1086.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (598 samples, 6.77%)</title><rect x="191.3" y="1059.0" width="79.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.3" y="1070.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.11%)</title><rect x="191.3" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (10 samples, 0.11%)</title><rect x="191.3" y="1027.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.3" y="1038.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="192.0" y="1011.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="195.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$221/1687115027.accept (2 samples, 0.02%)</title><rect x="192.4" y="1011.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$221/1687115027.accept (588 samples, 6.66%)</title><rect x="192.6" y="1043.0" width="78.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.6" y="1054.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$respond$4 (587 samples, 6.65%)</title><rect x="192.8" y="1027.0" width="78.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.8" y="1038.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (586 samples, 6.63%)</title><rect x="192.9" y="1011.0" width="78.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.9" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.11%)</title><rect x="193.8" y="995.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.11%)</title><rect x="193.8" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.11%)</title><rect x="193.8" y="963.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.8" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.07%)</title><rect x="194.4" y="947.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="197.4" y="958.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.07%)</title><rect x="194.4" y="931.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="197.4" y="942.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="194.4" y="915.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="197.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (559 samples, 6.33%)</title><rect x="195.2" y="995.0" width="74.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.2" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 0.36%)</title><rect x="195.2" y="979.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="198.9" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.9" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="199.1" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="202.1" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="199.1" y="931.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="202.1" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="199.2" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="202.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (527 samples, 5.97%)</title><rect x="199.5" y="979.0" width="70.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.5" y="990.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="199.5" y="963.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="202.5" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.03%)</title><rect x="199.6" y="947.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="202.6" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.03%)</title><rect x="199.6" y="931.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="202.6" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="199.6" y="915.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="202.6" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="199.6" y="899.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="202.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (523 samples, 5.92%)</title><rect x="200.0" y="963.0" width="69.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.0" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (523 samples, 5.92%)</title><rect x="200.0" y="947.0" width="69.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.0" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (517 samples, 5.85%)</title><rect x="200.8" y="931.0" width="69.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="203.8" y="942.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.22%)</title><rect x="201.1" y="915.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="204.1" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="202.0" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="205.0" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (3 samples, 0.03%)</title><rect x="202.3" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="205.3" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="202.7" y="899.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="205.7" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="202.9" y="899.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="205.9" y="910.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="203.7" y="915.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="206.7" y="926.0"></text>
</g>
<g>
<title>__send (492 samples, 5.57%)</title><rect x="204.0" y="915.0" width="65.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="207.0" y="926.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (449 samples, 5.08%)</title><rect x="209.7" y="899.0" width="60.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="212.7" y="910.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (448 samples, 5.07%)</title><rect x="209.9" y="883.0" width="59.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="212.9" y="894.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (436 samples, 4.94%)</title><rect x="211.5" y="867.0" width="58.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.5" y="878.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (434 samples, 4.91%)</title><rect x="211.5" y="851.0" width="58.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.5" y="862.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (413 samples, 4.68%)</title><rect x="212.1" y="835.0" width="55.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.1" y="846.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (404 samples, 4.57%)</title><rect x="212.1" y="819.0" width="54.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.1" y="830.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (401 samples, 4.54%)</title><rect x="212.5" y="803.0" width="53.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="215.5" y="814.0">tcp_s..</text>
</g>
<g>
<title>tcp_push (3 samples, 0.03%)</title><rect x="213.1" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="216.1" y="798.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.05%)</title><rect x="213.5" y="787.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.5" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="214.0" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.0" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (388 samples, 4.39%)</title><rect x="214.3" y="787.0" width="51.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="217.3" y="798.0">tcp_s..</text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="215.2" y="771.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.2" y="782.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.03%)</title><rect x="215.8" y="771.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="218.8" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.02%)</title><rect x="215.9" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.9" y="766.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.05%)</title><rect x="216.2" y="771.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.2" y="782.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.05%)</title><rect x="216.2" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.2" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.23%)</title><rect x="216.7" y="771.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.7" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.20%)</title><rect x="217.0" y="755.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="220.0" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (8 samples, 0.09%)</title><rect x="217.1" y="739.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.1" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.09%)</title><rect x="217.1" y="723.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="220.1" y="734.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="217.9" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.9" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.08%)</title><rect x="218.2" y="739.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="221.2" y="750.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="219.1" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="222.1" y="750.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="219.1" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.1" y="734.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="219.4" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="222.4" y="782.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="219.8" y="771.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.8" y="782.0"></text>
</g>
<g>
<title>tcp_push (337 samples, 3.82%)</title><rect x="220.2" y="771.0" width="45.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.2" y="782.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (336 samples, 3.80%)</title><rect x="220.3" y="755.0" width="44.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.3" y="766.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (335 samples, 3.79%)</title><rect x="220.4" y="739.0" width="44.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="223.4" y="750.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (291 samples, 3.29%)</title><rect x="221.8" y="723.0" width="38.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="224.8" y="734.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (266 samples, 3.01%)</title><rect x="223.9" y="707.0" width="35.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="226.9" y="718.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (264 samples, 2.99%)</title><rect x="223.9" y="691.0" width="35.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="226.9" y="702.0">__i..</text>
</g>
<g>
<title>ip_local_out (253 samples, 2.86%)</title><rect x="224.8" y="675.0" width="33.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.8" y="686.0">ip..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="224.8" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="227.8" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="225.0" y="643.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.0" y="654.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.02%)</title><rect x="225.0" y="627.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.0" y="638.0"></text>
</g>
<g>
<title>ip_output (248 samples, 2.81%)</title><rect x="225.2" y="659.0" width="33.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="228.2" y="670.0">ip..</text>
</g>
<g>
<title>ip_finish_output (234 samples, 2.65%)</title><rect x="225.5" y="643.0" width="31.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="228.5" y="654.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.03%)</title><rect x="225.5" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.5" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (230 samples, 2.60%)</title><rect x="225.9" y="627.0" width="30.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="228.9" y="638.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (226 samples, 2.56%)</title><rect x="226.4" y="611.0" width="30.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="229.4" y="622.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (185 samples, 2.09%)</title><rect x="227.6" y="595.0" width="24.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.6" y="606.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (185 samples, 2.09%)</title><rect x="227.6" y="579.0" width="24.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.6" y="590.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (181 samples, 2.05%)</title><rect x="228.2" y="563.0" width="24.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="231.2" y="574.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (179 samples, 2.03%)</title><rect x="228.2" y="547.0" width="23.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="231.2" y="558.0">_..</text>
</g>
<g>
<title>net_rx_action (171 samples, 1.94%)</title><rect x="229.0" y="531.0" width="22.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.0" y="542.0">n..</text>
</g>
<g>
<title>process_backlog (165 samples, 1.87%)</title><rect x="229.8" y="515.0" width="22.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.8" y="526.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (160 samples, 1.81%)</title><rect x="230.4" y="499.0" width="21.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="233.4" y="510.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (159 samples, 1.80%)</title><rect x="230.6" y="483.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="233.6" y="494.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.03%)</title><rect x="230.8" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.8" y="478.0"></text>
</g>
<g>
<title>ip_rcv (151 samples, 1.71%)</title><rect x="231.3" y="467.0" width="20.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="234.3" y="478.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.02%)</title><rect x="231.3" y="451.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.3" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (149 samples, 1.69%)</title><rect x="231.5" y="451.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="234.5" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (149 samples, 1.69%)</title><rect x="231.5" y="435.0" width="19.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.5" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (148 samples, 1.68%)</title><rect x="231.5" y="419.0" width="19.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.5" y="430.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (147 samples, 1.66%)</title><rect x="231.5" y="403.0" width="19.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="234.5" y="414.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.02%)</title><rect x="231.5" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="234.5" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (144 samples, 1.63%)</title><rect x="231.9" y="387.0" width="19.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.9" y="398.0"></text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.14%)</title><rect x="232.6" y="371.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.6" y="382.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.05%)</title><rect x="233.7" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.7" y="366.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (19 samples, 0.22%)</title><rect x="234.2" y="371.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.2" y="382.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.03%)</title><rect x="234.6" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.6" y="366.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (9 samples, 0.10%)</title><rect x="235.0" y="355.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="238.0" y="366.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (8 samples, 0.09%)</title><rect x="235.1" y="339.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.1" y="350.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (3 samples, 0.03%)</title><rect x="235.3" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="238.3" y="334.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.03%)</title><rect x="235.8" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="238.8" y="334.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (2 samples, 0.02%)</title><rect x="235.8" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="238.8" y="318.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.05%)</title><rect x="236.2" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="239.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (107 samples, 1.21%)</title><rect x="236.9" y="371.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="239.9" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="237.0" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.0" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (102 samples, 1.15%)</title><rect x="237.5" y="355.0" width="13.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="240.5" y="366.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.15%)</title><rect x="238.1" y="339.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.1" y="350.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.14%)</title><rect x="238.2" y="323.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="241.2" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.12%)</title><rect x="238.3" y="307.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="241.3" y="318.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.12%)</title><rect x="238.3" y="291.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="241.3" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.11%)</title><rect x="238.5" y="275.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="241.5" y="286.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.03%)</title><rect x="239.8" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="242.8" y="350.0"></text>
</g>
<g>
<title>sock_def_readable (58 samples, 0.66%)</title><rect x="240.2" y="339.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="243.2" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.61%)</title><rect x="240.7" y="323.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="243.7" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.61%)</title><rect x="240.7" y="307.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="243.7" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 0.60%)</title><rect x="240.9" y="291.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="243.9" y="302.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.18%)</title><rect x="248.0" y="339.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="251.0" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.08%)</title><rect x="248.6" y="323.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="251.6" y="334.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="248.6" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="251.6" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="248.6" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.6" y="302.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.06%)</title><rect x="248.9" y="307.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="251.9" y="318.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="248.9" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="251.9" y="302.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (2 samples, 0.02%)</title><rect x="249.7" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="252.7" y="334.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="250.4" y="339.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.4" y="350.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="250.4" y="323.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="253.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.02%)</title><rect x="251.4" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.4" y="478.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="251.8" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.8" y="542.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.02%)</title><rect x="252.1" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.1" y="558.0"></text>
</g>
<g>
<title>dev_queue_xmit (30 samples, 0.34%)</title><rect x="252.4" y="595.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.4" y="606.0"></text>
</g>
<g>
<title>__dev_queue_xmit (30 samples, 0.34%)</title><rect x="252.4" y="579.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.4" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (16 samples, 0.18%)</title><rect x="253.0" y="563.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.0" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.12%)</title><rect x="253.6" y="547.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.6" y="558.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.02%)</title><rect x="253.6" y="531.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.6" y="542.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.07%)</title><rect x="253.8" y="531.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="256.8" y="542.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.06%)</title><rect x="254.0" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.0" y="526.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.05%)</title><rect x="254.1" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.1" y="510.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="254.6" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.6" y="542.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.02%)</title><rect x="254.8" y="515.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.8" y="526.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.02%)</title><rect x="255.2" y="563.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="258.2" y="574.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.06%)</title><rect x="255.7" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="258.7" y="574.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.02%)</title><rect x="256.1" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="259.1" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.02%)</title><rect x="256.4" y="595.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="259.4" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.14%)</title><rect x="256.8" y="643.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="259.8" y="654.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (12 samples, 0.14%)</title><rect x="256.8" y="627.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.8" y="638.0"></text>
</g>
<g>
<title>selinux_ip_postroute (12 samples, 0.14%)</title><rect x="256.8" y="611.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.8" y="622.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (8 samples, 0.09%)</title><rect x="257.0" y="595.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.0" y="606.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.03%)</title><rect x="257.4" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.4" y="590.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.02%)</title><rect x="257.8" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.8" y="590.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.02%)</title><rect x="257.8" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="260.8" y="574.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.02%)</title><rect x="258.1" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="261.1" y="606.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.03%)</title><rect x="258.6" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.6" y="686.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="259.2" y="691.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="262.2" y="702.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.08%)</title><rect x="259.4" y="707.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="262.4" y="718.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.08%)</title><rect x="259.4" y="691.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="262.4" y="702.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.03%)</title><rect x="260.8" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="263.8" y="734.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="261.3" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.3" y="734.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.19%)</title><rect x="261.6" y="723.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.6" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (12 samples, 0.14%)</title><rect x="262.2" y="707.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="265.2" y="718.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.11%)</title><rect x="262.5" y="691.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.5" y="702.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.10%)</title><rect x="262.6" y="675.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="265.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.10%)</title><rect x="262.6" y="659.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.6" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="264.0" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.0" y="734.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.05%)</title><rect x="264.7" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="267.7" y="734.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.07%)</title><rect x="265.2" y="771.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="268.2" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="265.2" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="268.2" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="265.5" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.5" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.10%)</title><rect x="266.1" y="819.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="269.1" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.06%)</title><rect x="266.1" y="803.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="269.1" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.05%)</title><rect x="266.3" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="269.3" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="266.3" y="771.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="269.3" y="782.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.02%)</title><rect x="266.8" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="269.8" y="814.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.02%)</title><rect x="266.8" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="269.8" y="798.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.02%)</title><rect x="267.1" y="803.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.1" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.18%)</title><rect x="267.3" y="835.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.3" y="846.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.18%)</title><rect x="267.3" y="819.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="270.3" y="830.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.18%)</title><rect x="267.3" y="803.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="270.3" y="814.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.17%)</title><rect x="267.5" y="787.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.5" y="798.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="269.5" y="851.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.11%)</title><rect x="269.9" y="995.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.10%)</title><rect x="270.0" y="979.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.10%)</title><rect x="270.0" y="963.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (9 samples, 0.10%)</title><rect x="270.0" y="947.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (9 samples, 0.10%)</title><rect x="270.0" y="931.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.0" y="942.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (9 samples, 0.10%)</title><rect x="270.0" y="915.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$210/541436010.apply (2 samples, 0.02%)</title><rect x="271.2" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$457/821899123.apply (2 samples, 0.02%)</title><rect x="271.5" y="1075.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$210/541436010.apply (3 samples, 0.03%)</title><rect x="271.7" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$resolveChange$10 (3 samples, 0.03%)</title><rect x="271.7" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$457/821899123.apply (11 samples, 0.12%)</title><rect x="272.1" y="1107.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$11 (11 samples, 0.12%)</title><rect x="272.1" y="1091.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getChangeResponse (11 samples, 0.12%)</title><rect x="272.1" y="1075.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.05%)</title><rect x="272.3" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.3" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="272.3" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="275.3" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="272.3" y="1027.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="275.3" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="272.3" y="1011.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="275.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getResponseStatus (6 samples, 0.07%)</title><rect x="272.8" y="1059.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.07%)</title><rect x="272.8" y="1043.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (6 samples, 0.07%)</title><rect x="272.8" y="1027.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.8" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="273.3" y="1011.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="276.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (32 samples, 0.36%)</title><rect x="273.6" y="1139.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 0.36%)</title><rect x="273.6" y="1123.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 0.36%)</title><rect x="273.6" y="1107.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.36%)</title><rect x="273.6" y="1091.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.6" y="1102.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.07%)</title><rect x="275.1" y="1075.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="278.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5 samples, 0.06%)</title><rect x="275.9" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.02%)</title><rect x="276.5" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.run (3 samples, 0.03%)</title><rect x="276.8" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.06%)</title><rect x="277.2" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (944 samples, 10.69%)</title><rect x="277.9" y="1139.0" width="126.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.9" y="1150.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (614 samples, 6.95%)</title><rect x="279.6" y="1123.0" width="82.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.6" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (500 samples, 5.66%)</title><rect x="282.0" y="1107.0" width="66.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.0" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (103 samples, 1.17%)</title><rect x="282.7" y="1091.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (103 samples, 1.17%)</title><rect x="282.7" y="1075.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (87 samples, 0.99%)</title><rect x="284.3" y="1059.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (87 samples, 0.99%)</title><rect x="284.3" y="1043.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (86 samples, 0.97%)</title><rect x="284.4" y="1027.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.4" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.08%)</title><rect x="284.6" y="1011.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="287.6" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="285.2" y="995.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="288.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (78 samples, 0.88%)</title><rect x="285.5" y="1011.0" width="10.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="288.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 0.69%)</title><rect x="287.8" y="995.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 0.69%)</title><rect x="287.8" y="979.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.8" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (55 samples, 0.62%)</title><rect x="288.6" y="963.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.6" y="974.0"></text>
</g>
<g>
<title>do_futex (55 samples, 0.62%)</title><rect x="288.6" y="947.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.6" y="958.0"></text>
</g>
<g>
<title>futex_wake (55 samples, 0.62%)</title><rect x="288.6" y="931.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="291.6" y="942.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="289.1" y="915.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.1" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.02%)</title><rect x="289.2" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.2" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.06%)</title><rect x="289.5" y="915.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.5" y="926.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.02%)</title><rect x="289.8" y="899.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="292.8" y="910.0"></text>
</g>
<g>
<title>wake_up_q (43 samples, 0.49%)</title><rect x="290.2" y="915.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="293.2" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (42 samples, 0.48%)</title><rect x="290.3" y="899.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="293.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (42 samples, 0.48%)</title><rect x="290.3" y="883.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.05%)</title><rect x="295.9" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.9" y="1070.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.02%)</title><rect x="296.2" y="1043.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="299.2" y="1054.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.02%)</title><rect x="296.2" y="1027.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="299.2" y="1038.0"></text>
</g>
<g>
<title>G1SATBMarkQueueSet::filter(SATBMarkQueue*) (2 samples, 0.02%)</title><rect x="296.2" y="1011.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="299.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (391 samples, 4.43%)</title><rect x="296.4" y="1091.0" width="52.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.4" y="1102.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (388 samples, 4.39%)</title><rect x="296.6" y="1075.0" width="51.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.6" y="1086.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (133 samples, 1.51%)</title><rect x="297.1" y="1059.0" width="17.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="300.1" y="1070.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.02%)</title><rect x="298.6" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="301.6" y="1054.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.05%)</title><rect x="298.9" y="1043.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="301.9" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (23 samples, 0.26%)</title><rect x="299.4" y="1043.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="302.4" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (9 samples, 0.10%)</title><rect x="301.0" y="1027.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="304.0" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="302.2" y="1027.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="305.2" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="302.5" y="1043.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="305.5" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (77 samples, 0.87%)</title><rect x="302.7" y="1043.0" width="10.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="305.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.46%)</title><rect x="307.5" y="1027.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.46%)</title><rect x="307.5" y="1011.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="310.5" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.37%)</title><rect x="308.6" y="995.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="311.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.37%)</title><rect x="308.6" y="979.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="311.6" y="990.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (2 samples, 0.02%)</title><rect x="309.1" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="312.1" y="974.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.26%)</title><rect x="309.4" y="963.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="312.4" y="974.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="311.1" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.1" y="958.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.09%)</title><rect x="311.4" y="947.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="314.4" y="958.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (5 samples, 0.06%)</title><rect x="311.8" y="931.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.8" y="942.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.03%)</title><rect x="312.6" y="963.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="315.6" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="313.1" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="316.1" y="1054.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="313.4" y="1043.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="316.4" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.05%)</title><rect x="313.7" y="1043.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="316.7" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.05%)</title><rect x="314.2" y="1043.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="317.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (248 samples, 2.81%)</title><rect x="314.9" y="1059.0" width="33.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="317.9" y="1070.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.06%)</title><rect x="314.9" y="1043.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="317.9" y="1054.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (2 samples, 0.02%)</title><rect x="315.6" y="1043.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="318.6" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="315.8" y="1043.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="318.8" y="1054.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.03%)</title><rect x="316.1" y="1043.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="319.1" y="1054.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.02%)</title><rect x="316.5" y="1043.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="319.5" y="1054.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="316.8" y="1043.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="319.8" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (232 samples, 2.63%)</title><rect x="317.0" y="1043.0" width="31.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="320.0" y="1054.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.68%)</title><rect x="340.0" y="1027.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.0" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 0.67%)</title><rect x="340.1" y="1011.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 0.53%)</title><rect x="341.7" y="995.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="344.7" y="1006.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.49%)</title><rect x="342.1" y="979.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="345.1" y="990.0"></text>
</g>
<g>
<title>futex_wait (42 samples, 0.48%)</title><rect x="342.3" y="963.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="345.3" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (20 samples, 0.23%)</title><rect x="342.8" y="947.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.8" y="958.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.02%)</title><rect x="343.5" y="931.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.5" y="942.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.15%)</title><rect x="343.7" y="931.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="346.7" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.12%)</title><rect x="344.0" y="915.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.0" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.06%)</title><rect x="344.8" y="899.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.8" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.17%)</title><rect x="345.5" y="947.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="348.5" y="958.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="346.4" y="931.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.4" y="942.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.02%)</title><rect x="346.4" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.4" y="926.0"></text>
</g>
<g>
<title>get_futex_value_locked (6 samples, 0.07%)</title><rect x="346.7" y="931.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="349.7" y="942.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="347.6" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="350.6" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.03%)</title><rect x="348.0" y="1059.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="351.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.02%)</title><rect x="348.4" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.09%)</title><rect x="348.8" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.09%)</title><rect x="348.8" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8 samples, 0.09%)</title><rect x="348.8" y="1075.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.09%)</title><rect x="348.8" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.09%)</title><rect x="348.8" y="1043.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="349.5" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="349.5" y="1011.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="352.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="349.5" y="995.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="352.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (88 samples, 1.00%)</title><rect x="349.9" y="1107.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (88 samples, 1.00%)</title><rect x="349.9" y="1091.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (88 samples, 1.00%)</title><rect x="349.9" y="1075.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (88 samples, 1.00%)</title><rect x="349.9" y="1059.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (82 samples, 0.93%)</title><rect x="350.7" y="1043.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.7" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.12%)</title><rect x="350.8" y="1027.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="353.8" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="351.1" y="1011.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="354.1" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="352.0" y="1011.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="355.0" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (69 samples, 0.78%)</title><rect x="352.3" y="1027.0" width="9.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="355.3" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 0.67%)</title><rect x="353.6" y="1011.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="356.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 0.67%)</title><rect x="353.6" y="995.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (53 samples, 0.60%)</title><rect x="354.4" y="979.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.4" y="990.0"></text>
</g>
<g>
<title>do_futex (52 samples, 0.59%)</title><rect x="354.6" y="963.0" width="6.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="357.6" y="974.0"></text>
</g>
<g>
<title>futex_wake (52 samples, 0.59%)</title><rect x="354.6" y="947.0" width="6.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="357.6" y="958.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="355.6" y="931.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="358.6" y="942.0"></text>
</g>
<g>
<title>wake_up_q (42 samples, 0.48%)</title><rect x="355.9" y="931.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="358.9" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (42 samples, 0.48%)</title><rect x="355.9" y="915.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="358.9" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (42 samples, 0.48%)</title><rect x="355.9" y="899.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="358.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (317 samples, 3.59%)</title><rect x="361.6" y="1123.0" width="42.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.6" y="1134.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (184 samples, 2.08%)</title><rect x="361.9" y="1107.0" width="24.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.9" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (2 samples, 0.02%)</title><rect x="362.0" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.02%)</title><rect x="362.0" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.09%)</title><rect x="362.3" y="1091.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.09%)</title><rect x="362.3" y="1075.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.09%)</title><rect x="362.3" y="1059.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (30 samples, 0.34%)</title><rect x="363.4" y="1091.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (30 samples, 0.34%)</title><rect x="363.4" y="1075.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 0.29%)</title><rect x="363.8" y="1059.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.29%)</title><rect x="363.8" y="1043.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.29%)</title><rect x="363.8" y="1027.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.8" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.07%)</title><rect x="363.9" y="1011.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="366.9" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.22%)</title><rect x="364.7" y="1011.0" width="2.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="367.7" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.17%)</title><rect x="365.3" y="995.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.3" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.17%)</title><rect x="365.3" y="979.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="368.3" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.16%)</title><rect x="365.4" y="963.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="368.4" y="974.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.16%)</title><rect x="365.4" y="947.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="368.4" y="958.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.16%)</title><rect x="365.4" y="931.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="368.4" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="365.7" y="915.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.7" y="926.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.11%)</title><rect x="365.9" y="915.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="368.9" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.11%)</title><rect x="365.9" y="899.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="368.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.11%)</title><rect x="365.9" y="883.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (5 samples, 0.06%)</title><rect x="367.4" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (5 samples, 0.06%)</title><rect x="367.4" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (138 samples, 1.56%)</title><rect x="368.1" y="1091.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 1.56%)</title><rect x="368.1" y="1075.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.1" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (57 samples, 0.65%)</title><rect x="368.3" y="1059.0" width="7.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="371.3" y="1070.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.03%)</title><rect x="369.5" y="1043.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="372.5" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.12%)</title><rect x="369.9" y="1043.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="372.9" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.07%)</title><rect x="370.3" y="1027.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="373.3" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (29 samples, 0.33%)</title><rect x="371.5" y="1043.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="374.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="374.1" y="1027.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="377.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="374.1" y="1011.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="374.9" y="995.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="377.9" y="1006.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="374.9" y="979.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.9" y="990.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="374.9" y="963.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="377.9" y="974.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="375.1" y="963.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.1" y="974.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="375.5" y="1043.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="378.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.89%)</title><rect x="375.9" y="1059.0" width="10.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="378.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.03%)</title><rect x="376.2" y="1043.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="379.2" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (73 samples, 0.83%)</title><rect x="376.7" y="1043.0" width="9.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="379.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.22%)</title><rect x="384.0" y="1027.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.0" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.22%)</title><rect x="384.0" y="1011.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.0" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.17%)</title><rect x="384.5" y="995.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.5" y="1006.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.15%)</title><rect x="384.5" y="979.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.5" y="990.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.14%)</title><rect x="384.6" y="963.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.6" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.03%)</title><rect x="384.6" y="947.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.6" y="958.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="384.6" y="931.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="387.6" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="384.8" y="915.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.8" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.08%)</title><rect x="385.0" y="947.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.0" y="958.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="385.2" y="931.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.2" y="942.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.05%)</title><rect x="385.4" y="931.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.4" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="386.2" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (66 samples, 0.75%)</title><rect x="386.5" y="1107.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (61 samples, 0.69%)</title><rect x="387.2" y="1091.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.03%)</title><rect x="387.6" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (44 samples, 0.50%)</title><rect x="388.0" y="1075.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (15 samples, 0.17%)</title><rect x="389.3" y="1059.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.02%)</title><rect x="390.8" y="1043.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.02%)</title><rect x="390.8" y="1027.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.02%)</title><rect x="391.0" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="391.0" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (2 samples, 0.02%)</title><rect x="391.0" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.16%)</title><rect x="391.3" y="1059.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.16%)</title><rect x="391.3" y="1043.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.16%)</title><rect x="391.3" y="1027.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.3" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.08%)</title><rect x="391.3" y="1011.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="394.3" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.03%)</title><rect x="391.6" y="995.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="394.6" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.02%)</title><rect x="392.0" y="995.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="395.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.08%)</title><rect x="392.2" y="1011.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="395.2" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.07%)</title><rect x="392.4" y="995.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="395.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="392.5" y="979.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="392.5" y="963.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.5" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.06%)</title><rect x="392.5" y="947.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.5" y="958.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.06%)</title><rect x="392.5" y="931.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.5" y="942.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.06%)</title><rect x="392.5" y="915.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="395.5" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.05%)</title><rect x="392.6" y="899.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="395.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.03%)</title><rect x="393.2" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.02%)</title><rect x="393.6" y="1059.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.02%)</title><rect x="393.6" y="1043.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (11 samples, 0.12%)</title><rect x="393.8" y="1075.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (10 samples, 0.11%)</title><rect x="394.0" y="1059.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (10 samples, 0.11%)</title><rect x="394.0" y="1043.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (65 samples, 0.74%)</title><rect x="395.3" y="1107.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (65 samples, 0.74%)</title><rect x="395.3" y="1091.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (65 samples, 0.74%)</title><rect x="395.3" y="1075.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 0.74%)</title><rect x="395.3" y="1059.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (65 samples, 0.74%)</title><rect x="395.3" y="1043.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.20%)</title><rect x="395.6" y="1027.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="398.6" y="1038.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="396.0" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="399.0" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="396.4" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="399.4" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="396.8" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="399.8" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.07%)</title><rect x="397.2" y="1011.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="400.2" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 0.49%)</title><rect x="398.0" y="1027.0" width="5.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="401.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.40%)</title><rect x="399.1" y="1011.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.40%)</title><rect x="399.1" y="995.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (35 samples, 0.40%)</title><rect x="399.1" y="979.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="402.1" y="990.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.38%)</title><rect x="399.1" y="963.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="402.1" y="974.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.38%)</title><rect x="399.1" y="947.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.1" y="958.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.37%)</title><rect x="399.2" y="931.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="402.2" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (32 samples, 0.36%)</title><rect x="399.3" y="915.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.3" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (32 samples, 0.36%)</title><rect x="399.3" y="899.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.3" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="403.7" y="1027.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="406.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.run (963 samples, 10.90%)</title><rect x="404.0" y="1139.0" width="128.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.0" y="1150.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (963 samples, 10.90%)</title><rect x="404.0" y="1123.0" width="128.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.0" y="1134.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (961 samples, 10.88%)</title><rect x="404.3" y="1107.0" width="128.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.3" y="1118.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (948 samples, 10.73%)</title><rect x="405.9" y="1091.0" width="126.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.9" y="1102.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (948 samples, 10.73%)</title><rect x="405.9" y="1075.0" width="126.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.9" y="1086.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (946 samples, 10.71%)</title><rect x="406.1" y="1059.0" width="126.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.1" y="1070.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (946 samples, 10.71%)</title><rect x="406.1" y="1043.0" width="126.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.1" y="1054.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (946 samples, 10.71%)</title><rect x="406.1" y="1027.0" width="126.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.1" y="1038.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (945 samples, 10.70%)</title><rect x="406.3" y="1011.0" width="126.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.3" y="1022.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (945 samples, 10.70%)</title><rect x="406.3" y="995.0" width="126.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.3" y="1006.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (2 samples, 0.02%)</title><rect x="406.4" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (942 samples, 10.67%)</title><rect x="406.7" y="979.0" width="125.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.7" y="990.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (124 samples, 1.40%)</title><rect x="406.8" y="963.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (97 samples, 1.10%)</title><rect x="407.5" y="947.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (97 samples, 1.10%)</title><rect x="407.5" y="931.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (96 samples, 1.09%)</title><rect x="407.6" y="915.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (95 samples, 1.08%)</title><rect x="407.7" y="899.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (27 samples, 0.31%)</title><rect x="408.1" y="883.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.11%)</title><rect x="408.4" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.4" y="878.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.06%)</title><rect x="408.5" y="851.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="411.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/1589996959.apply (3 samples, 0.03%)</title><rect x="409.3" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/1589996959.apply (10 samples, 0.11%)</title><rect x="409.9" y="867.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (8 samples, 0.09%)</title><rect x="409.9" y="851.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (6 samples, 0.07%)</title><rect x="410.1" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.06%)</title><rect x="410.3" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.06%)</title><rect x="410.3" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.06%)</title><rect x="410.3" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.02%)</title><rect x="410.9" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.apply (4 samples, 0.05%)</title><rect x="411.2" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4 samples, 0.05%)</title><rect x="411.2" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4 samples, 0.05%)</title><rect x="411.2" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4 samples, 0.05%)</title><rect x="411.2" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (4 samples, 0.05%)</title><rect x="411.2" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.05%)</title><rect x="411.2" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/939439677.run (4 samples, 0.05%)</title><rect x="411.2" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.05%)</title><rect x="411.2" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.03%)</title><rect x="411.3" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.03%)</title><rect x="411.3" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="411.3" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="411.3" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.03%)</title><rect x="411.3" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.03%)</title><rect x="411.3" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.02%)</title><rect x="411.3" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (2 samples, 0.02%)</title><rect x="411.3" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.02%)</title><rect x="411.3" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.3" y="622.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.02%)</title><rect x="411.3" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.02%)</title><rect x="411.3" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="411.3" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="411.3" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="411.3" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.3" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="411.3" y="515.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="414.3" y="526.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="411.3" y="499.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="414.3" y="510.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="411.3" y="483.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="414.3" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="411.3" y="467.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="414.3" y="478.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.02%)</title><rect x="411.3" y="451.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="414.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (58 samples, 0.66%)</title><rect x="411.8" y="883.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (56 samples, 0.63%)</title><rect x="412.0" y="867.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1660747199.apply (56 samples, 0.63%)</title><rect x="412.0" y="851.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (55 samples, 0.62%)</title><rect x="412.2" y="835.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (55 samples, 0.62%)</title><rect x="412.2" y="819.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1781629338.apply (50 samples, 0.57%)</title><rect x="412.2" y="803.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (50 samples, 0.57%)</title><rect x="412.2" y="787.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="412.3" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="412.3" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (45 samples, 0.51%)</title><rect x="412.8" y="771.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (26 samples, 0.29%)</title><rect x="412.8" y="755.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (26 samples, 0.29%)</title><rect x="412.8" y="739.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (25 samples, 0.28%)</title><rect x="413.0" y="723.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$422/315871170.accept (7 samples, 0.08%)</title><rect x="413.1" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (7 samples, 0.08%)</title><rect x="413.1" y="691.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (7 samples, 0.08%)</title><rect x="413.1" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (7 samples, 0.08%)</title><rect x="413.1" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.08%)</title><rect x="413.1" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (7 samples, 0.08%)</title><rect x="413.1" y="627.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$429/669699404.accept (17 samples, 0.19%)</title><rect x="414.0" y="707.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (17 samples, 0.19%)</title><rect x="414.0" y="691.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (17 samples, 0.19%)</title><rect x="414.0" y="675.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (17 samples, 0.19%)</title><rect x="414.0" y="659.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (17 samples, 0.19%)</title><rect x="414.0" y="643.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.19%)</title><rect x="414.0" y="627.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.17%)</title><rect x="414.3" y="611.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.02%)</title><rect x="414.3" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.02%)</title><rect x="414.3" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.15%)</title><rect x="414.6" y="595.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.12%)</title><rect x="414.6" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (10 samples, 0.11%)</title><rect x="414.6" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (4 samples, 0.05%)</title><rect x="414.6" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="414.6" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="414.6" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="414.6" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.07%)</title><rect x="415.1" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.07%)</title><rect x="415.1" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.06%)</title><rect x="415.2" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.06%)</title><rect x="415.2" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.05%)</title><rect x="415.2" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.05%)</title><rect x="415.2" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.05%)</title><rect x="415.2" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (4 samples, 0.05%)</title><rect x="415.2" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (4 samples, 0.05%)</title><rect x="415.2" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="416.0" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.02%)</title><rect x="416.0" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (19 samples, 0.22%)</title><rect x="416.3" y="755.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (19 samples, 0.22%)</title><rect x="416.3" y="739.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (10 samples, 0.11%)</title><rect x="416.4" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (3 samples, 0.03%)</title><rect x="416.4" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (3 samples, 0.03%)</title><rect x="416.4" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.03%)</title><rect x="416.4" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="416.6" y="659.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (7 samples, 0.08%)</title><rect x="416.8" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (4 samples, 0.05%)</title><rect x="416.8" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (4 samples, 0.05%)</title><rect x="416.8" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (4 samples, 0.05%)</title><rect x="416.8" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="417.1" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.03%)</title><rect x="417.4" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.&lt;init&gt; (2 samples, 0.02%)</title><rect x="417.4" y="675.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (2 samples, 0.02%)</title><rect x="417.4" y="659.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (8 samples, 0.09%)</title><rect x="417.8" y="723.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.07%)</title><rect x="418.0" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.07%)</title><rect x="418.0" y="691.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.07%)</title><rect x="418.0" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.07%)</title><rect x="418.0" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.07%)</title><rect x="418.0" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/565635497.apply (5 samples, 0.06%)</title><rect x="418.8" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5 samples, 0.06%)</title><rect x="418.8" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (5 samples, 0.06%)</title><rect x="418.8" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="419.1" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.03%)</title><rect x="419.1" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.03%)</title><rect x="419.1" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.03%)</title><rect x="419.1" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.1" y="718.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.06%)</title><rect x="419.8" y="883.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="422.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (14 samples, 0.16%)</title><rect x="420.4" y="947.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (10 samples, 0.11%)</title><rect x="421.0" y="931.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (5 samples, 0.06%)</title><rect x="421.5" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.09%)</title><rect x="422.3" y="947.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$446/1188918267.run (8 samples, 0.09%)</title><rect x="422.3" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (8 samples, 0.09%)</title><rect x="422.3" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (8 samples, 0.09%)</title><rect x="422.3" y="899.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (8 samples, 0.09%)</title><rect x="422.3" y="883.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.09%)</title><rect x="422.3" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.05%)</title><rect x="422.8" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (5 samples, 0.06%)</title><rect x="423.4" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.06%)</title><rect x="423.4" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.06%)</title><rect x="423.4" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (812 samples, 9.19%)</title><rect x="424.0" y="963.0" width="108.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.0" y="974.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (812 samples, 9.19%)</title><rect x="424.0" y="947.0" width="108.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.0" y="958.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (812 samples, 9.19%)</title><rect x="424.0" y="931.0" width="108.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.0" y="942.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (806 samples, 9.13%)</title><rect x="424.8" y="915.0" width="107.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.8" y="926.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/2060516830.run (11 samples, 0.12%)</title><rect x="425.2" y="899.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (11 samples, 0.12%)</title><rect x="425.2" y="883.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (11 samples, 0.12%)</title><rect x="425.2" y="867.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (8 samples, 0.09%)</title><rect x="425.2" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.09%)</title><rect x="425.2" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="426.3" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (792 samples, 8.97%)</title><rect x="426.7" y="899.0" width="105.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.7" y="910.0">jdk/internal/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (784 samples, 8.88%)</title><rect x="426.7" y="883.0" width="104.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.7" y="894.0">java/nio/cha..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (784 samples, 8.88%)</title><rect x="426.7" y="867.0" width="104.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.7" y="878.0">sun/nio/ch/S..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="427.0" y="851.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="427.0" y="835.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (779 samples, 8.82%)</title><rect x="427.4" y="851.0" width="104.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.4" y="862.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (778 samples, 8.81%)</title><rect x="427.5" y="835.0" width="104.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.5" y="846.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (21 samples, 0.24%)</title><rect x="427.5" y="819.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.5" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (21 samples, 0.24%)</title><rect x="427.5" y="803.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.5" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (21 samples, 0.24%)</title><rect x="427.5" y="787.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.02%)</title><rect x="430.1" y="771.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (757 samples, 8.57%)</title><rect x="430.3" y="819.0" width="101.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.3" y="830.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (741 samples, 8.39%)</title><rect x="432.5" y="803.0" width="99.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.5" y="814.0">sun/nio/ch/F..</text>
</g>
<g>
<title>[unknown] (726 samples, 8.22%)</title><rect x="433.8" y="787.0" width="97.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="436.8" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (726 samples, 8.22%)</title><rect x="433.8" y="771.0" width="97.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="436.8" y="782.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (724 samples, 8.20%)</title><rect x="433.8" y="755.0" width="96.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="436.8" y="766.0">__GI___writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (680 samples, 7.70%)</title><rect x="439.7" y="739.0" width="90.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="442.7" y="750.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_writev (3 samples, 0.03%)</title><rect x="439.7" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="442.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (677 samples, 7.67%)</title><rect x="440.1" y="723.0" width="90.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.1" y="734.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_writev (662 samples, 7.50%)</title><rect x="441.5" y="707.0" width="88.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.5" y="718.0">__x64_sys_..</text>
</g>
<g>
<title>do_writev (662 samples, 7.50%)</title><rect x="441.5" y="691.0" width="88.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.5" y="702.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (19 samples, 0.22%)</title><rect x="441.7" y="675.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.7" y="686.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.22%)</title><rect x="441.7" y="659.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.7" y="670.0"></text>
</g>
<g>
<title>__fget (19 samples, 0.22%)</title><rect x="441.7" y="643.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.7" y="654.0"></text>
</g>
<g>
<title>vfs_writev (641 samples, 7.26%)</title><rect x="444.4" y="675.0" width="85.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.4" y="686.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (630 samples, 7.13%)</title><rect x="444.9" y="659.0" width="84.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.9" y="670.0">do_iter_wr..</text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.08%)</title><rect x="445.6" y="643.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.6" y="654.0"></text>
</g>
<g>
<title>do_iter_readv_writev (590 samples, 6.68%)</title><rect x="446.5" y="643.0" width="78.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="449.5" y="654.0">do_iter_r..</text>
</g>
<g>
<title>sock_write_iter (580 samples, 6.57%)</title><rect x="447.8" y="627.0" width="77.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.8" y="638.0">sock_writ..</text>
</g>
<g>
<title>sock_sendmsg (577 samples, 6.53%)</title><rect x="448.2" y="611.0" width="77.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.2" y="622.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="448.4" y="595.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.4" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (552 samples, 6.25%)</title><rect x="448.6" y="595.0" width="73.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.6" y="606.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (551 samples, 6.24%)</title><rect x="448.8" y="579.0" width="73.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.8" y="590.0">tcp_send..</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.05%)</title><rect x="449.2" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="449.2" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.2" y="558.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="449.7" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.7" y="574.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.02%)</title><rect x="450.4" y="563.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="453.4" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.05%)</title><rect x="450.6" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (530 samples, 6.00%)</title><rect x="451.2" y="563.0" width="70.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="454.2" y="574.0">tcp_send..</text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="452.9" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.9" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.09%)</title><rect x="453.3" y="547.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.3" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.03%)</title><rect x="453.3" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="456.3" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="453.7" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="456.7" y="542.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.03%)</title><rect x="454.0" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.0" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.02%)</title><rect x="454.5" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.5" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="454.5" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.34%)</title><rect x="454.8" y="547.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.8" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 0.29%)</title><rect x="454.9" y="531.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.9" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (9 samples, 0.10%)</title><rect x="455.7" y="515.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.09%)</title><rect x="455.7" y="499.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.7" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="456.5" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="459.5" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.06%)</title><rect x="457.0" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.0" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="457.4" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.4" y="510.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.06%)</title><rect x="457.7" y="515.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.7" y="526.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.06%)</title><rect x="457.7" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.7" y="510.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.02%)</title><rect x="458.5" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.5" y="542.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="458.8" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="461.8" y="558.0"></text>
</g>
<g>
<title>tcp_push (465 samples, 5.26%)</title><rect x="459.3" y="547.0" width="62.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="462.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (465 samples, 5.26%)</title><rect x="459.3" y="531.0" width="62.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.3" y="542.0">__tcp_..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="459.4" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="462.4" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (461 samples, 5.22%)</title><rect x="459.8" y="515.0" width="61.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.8" y="526.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (417 samples, 4.72%)</title><rect x="461.2" y="499.0" width="55.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.2" y="510.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (400 samples, 4.53%)</title><rect x="462.9" y="483.0" width="53.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.9" y="494.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (398 samples, 4.51%)</title><rect x="462.9" y="467.0" width="53.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="465.9" y="478.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (388 samples, 4.39%)</title><rect x="463.5" y="451.0" width="51.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="466.5" y="462.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.06%)</title><rect x="463.6" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="464.0" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.0" y="430.0"></text>
</g>
<g>
<title>ip_output (378 samples, 4.28%)</title><rect x="464.4" y="435.0" width="50.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="467.4" y="446.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (354 samples, 4.01%)</title><rect x="465.2" y="419.0" width="47.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="468.2" y="430.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="465.3" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.3" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (351 samples, 3.97%)</title><rect x="465.6" y="403.0" width="46.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.6" y="414.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (348 samples, 3.94%)</title><rect x="465.9" y="387.0" width="46.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.9" y="398.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="466.8" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.8" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (305 samples, 3.45%)</title><rect x="467.1" y="371.0" width="40.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.1" y="382.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (302 samples, 3.42%)</title><rect x="467.5" y="355.0" width="40.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="470.5" y="366.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (300 samples, 3.40%)</title><rect x="467.7" y="339.0" width="40.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.7" y="350.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (298 samples, 3.37%)</title><rect x="467.7" y="323.0" width="39.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="470.7" y="334.0">__s..</text>
</g>
<g>
<title>net_rx_action (290 samples, 3.28%)</title><rect x="468.7" y="307.0" width="38.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.7" y="318.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="468.9" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.02%)</title><rect x="469.2" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.2" y="302.0"></text>
</g>
<g>
<title>process_backlog (283 samples, 3.20%)</title><rect x="469.6" y="291.0" width="37.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.6" y="302.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (278 samples, 3.15%)</title><rect x="470.1" y="275.0" width="37.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.1" y="286.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (278 samples, 3.15%)</title><rect x="470.1" y="259.0" width="37.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.1" y="270.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.08%)</title><rect x="470.3" y="243.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="473.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv (270 samples, 3.06%)</title><rect x="471.2" y="243.0" width="36.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="474.2" y="254.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.03%)</title><rect x="471.7" y="227.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="474.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (263 samples, 2.98%)</title><rect x="472.1" y="227.0" width="35.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.1" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (261 samples, 2.96%)</title><rect x="472.3" y="211.0" width="34.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.3" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (258 samples, 2.92%)</title><rect x="472.4" y="195.0" width="34.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="475.4" y="206.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (256 samples, 2.90%)</title><rect x="472.4" y="179.0" width="34.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.4" y="190.0">ip..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="472.8" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="475.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (247 samples, 2.80%)</title><rect x="473.6" y="163.0" width="33.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.6" y="174.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (18 samples, 0.20%)</title><rect x="474.5" y="147.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="477.5" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.03%)</title><rect x="476.5" y="131.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.5" y="142.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="477.1" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.1" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="477.4" y="147.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="480.4" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (21 samples, 0.24%)</title><rect x="477.6" y="147.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.6" y="158.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.03%)</title><rect x="477.6" y="131.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="480.6" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (15 samples, 0.17%)</title><rect x="478.0" y="131.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.0" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (13 samples, 0.15%)</title><rect x="478.3" y="115.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.3" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (5 samples, 0.06%)</title><rect x="479.1" y="99.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.1" y="110.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.03%)</title><rect x="479.2" y="83.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.2" y="94.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (2 samples, 0.02%)</title><rect x="479.8" y="99.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="482.8" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.03%)</title><rect x="480.0" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="483.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (193 samples, 2.19%)</title><rect x="480.7" y="147.0" width="25.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.7" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="481.1" y="131.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="484.1" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="481.5" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (185 samples, 2.09%)</title><rect x="481.8" y="131.0" width="24.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.8" y="142.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.12%)</title><rect x="482.8" y="115.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.8" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="483.0" y="99.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="486.0" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.09%)</title><rect x="483.2" y="99.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.2" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.07%)</title><rect x="483.5" y="83.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.5" y="94.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="483.6" y="67.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.6" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="483.6" y="51.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="486.6" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (101 samples, 1.14%)</title><rect x="484.4" y="115.0" width="13.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="487.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (99 samples, 1.12%)</title><rect x="484.7" y="99.0" width="13.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="487.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (98 samples, 1.11%)</title><rect x="484.7" y="83.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="487.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="484.7" y="67.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="487.7" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (96 samples, 1.09%)</title><rect x="485.0" y="67.0" width="12.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack (47 samples, 0.53%)</title><rect x="497.9" y="115.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="500.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (20 samples, 0.23%)</title><rect x="500.1" y="99.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="503.1" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.03%)</title><rect x="500.2" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="500.3" y="67.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="503.3" y="78.0"></text>
</g>
<g>
<title>skb_release_all (16 samples, 0.18%)</title><rect x="500.6" y="83.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.16%)</title><rect x="500.7" y="67.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="503.7" y="78.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.07%)</title><rect x="501.8" y="51.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="504.8" y="62.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.07%)</title><rect x="501.8" y="35.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="504.8" y="46.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.02%)</title><rect x="503.0" y="99.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (5 samples, 0.06%)</title><rect x="503.3" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="506.3" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.02%)</title><rect x="503.9" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="506.9" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="504.2" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.2" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="504.7" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.7" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.03%)</title><rect x="505.1" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.1" y="126.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="505.3" y="99.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="508.3" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.05%)</title><rect x="505.5" y="115.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="508.5" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="506.6" y="179.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.6" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="506.9" y="195.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="509.9" y="206.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.02%)</title><rect x="507.5" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="510.5" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (34 samples, 0.38%)</title><rect x="507.8" y="371.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.8" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (33 samples, 0.37%)</title><rect x="507.8" y="355.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.8" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.14%)</title><rect x="509.3" y="339.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="512.3" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.08%)</title><rect x="509.5" y="323.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.5" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.03%)</title><rect x="509.7" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="512.7" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.03%)</title><rect x="509.7" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.7" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="509.8" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="512.8" y="286.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="510.5" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="513.5" y="334.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.02%)</title><rect x="511.0" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.0" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.08%)</title><rect x="511.3" y="339.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="514.3" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.06%)</title><rect x="511.4" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.4" y="334.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.02%)</title><rect x="511.8" y="307.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="514.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.20%)</title><rect x="512.5" y="419.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.5" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (18 samples, 0.20%)</title><rect x="512.5" y="403.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.5" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (18 samples, 0.20%)</title><rect x="512.5" y="387.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="515.5" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (14 samples, 0.16%)</title><rect x="512.6" y="371.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="515.6" y="382.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (5 samples, 0.06%)</title><rect x="513.3" y="355.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="516.3" y="366.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (4 samples, 0.05%)</title><rect x="514.0" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="517.0" y="366.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.05%)</title><rect x="514.0" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.0" y="350.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.02%)</title><rect x="514.6" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="517.6" y="382.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.03%)</title><rect x="514.9" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.9" y="446.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.05%)</title><rect x="515.3" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="518.3" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="515.8" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="518.8" y="462.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.03%)</title><rect x="516.4" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="519.4" y="494.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.03%)</title><rect x="516.4" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.4" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="516.5" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.5" y="462.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="517.3" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.3" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.18%)</title><rect x="518.0" y="499.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.0" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (12 samples, 0.14%)</title><rect x="518.5" y="483.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="521.5" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.10%)</title><rect x="518.9" y="467.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="521.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.09%)</title><rect x="519.0" y="451.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="522.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="519.4" y="435.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.4" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.06%)</title><rect x="520.2" y="499.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.2" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="520.2" y="483.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="523.2" y="494.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="520.2" y="467.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="523.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="520.4" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.4" y="462.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.34 (2 samples, 0.02%)</title><rect x="520.9" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="523.9" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.03%)</title><rect x="521.4" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="524.4" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="521.4" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.4" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="522.0" y="563.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="525.0" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (19 samples, 0.22%)</title><rect x="522.5" y="595.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="525.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.05%)</title><rect x="522.9" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.05%)</title><rect x="522.9" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="525.9" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (9 samples, 0.10%)</title><rect x="523.4" y="579.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.4" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (9 samples, 0.10%)</title><rect x="523.4" y="563.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.4" y="574.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.02%)</title><rect x="524.8" y="579.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="527.8" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (27 samples, 0.31%)</title><rect x="525.4" y="643.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.4" y="654.0"></text>
</g>
<g>
<title>security_file_permission (23 samples, 0.26%)</title><rect x="525.7" y="627.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="528.7" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.08%)</title><rect x="525.7" y="611.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="528.7" y="622.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.08%)</title><rect x="525.7" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="528.7" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="526.4" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.4" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (15 samples, 0.17%)</title><rect x="526.8" y="611.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.8" y="622.0"></text>
</g>
<g>
<title>__inode_security_revalidate (4 samples, 0.05%)</title><rect x="527.9" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="530.9" y="606.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="528.1" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="531.1" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="528.1" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.1" y="574.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.03%)</title><rect x="528.4" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.4" y="606.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.02%)</title><rect x="528.8" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.8" y="638.0"></text>
</g>
<g>
<title>import_iovec (6 samples, 0.07%)</title><rect x="529.1" y="659.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.1" y="670.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (6 samples, 0.07%)</title><rect x="529.1" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="532.1" y="654.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.02%)</title><rect x="529.5" y="627.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.5" y="638.0"></text>
</g>
<g>
<title>do_writev (3 samples, 0.03%)</title><rect x="530.0" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.0" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="530.5" y="755.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="533.5" y="766.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.03%)</title><rect x="530.8" y="787.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="533.8" y="798.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="531.2" y="787.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="534.2" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.09%)</title><rect x="531.5" y="883.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,499 samples, 16.97%)</title><rect x="532.7" y="1139.0" width="200.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.7" y="1150.0">jdk/internal/net/http/comm..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,497 samples, 16.95%)</title><rect x="532.9" y="1123.0" width="200.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.9" y="1134.0">jdk/internal/net/http/comm..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.02%)</title><rect x="532.9" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (487 samples, 5.51%)</title><rect x="533.2" y="1107.0" width="65.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.2" y="1118.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (483 samples, 5.47%)</title><rect x="533.7" y="1091.0" width="64.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.7" y="1102.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (483 samples, 5.47%)</title><rect x="533.7" y="1075.0" width="64.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.7" y="1086.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (2 samples, 0.02%)</title><rect x="533.7" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.02%)</title><rect x="533.7" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (77 samples, 0.87%)</title><rect x="534.0" y="1059.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (77 samples, 0.87%)</title><rect x="534.0" y="1043.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (77 samples, 0.87%)</title><rect x="534.0" y="1027.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (77 samples, 0.87%)</title><rect x="534.0" y="1011.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (69 samples, 0.78%)</title><rect x="534.5" y="995.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (69 samples, 0.78%)</title><rect x="534.5" y="979.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (68 samples, 0.77%)</title><rect x="534.7" y="963.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (63 samples, 0.71%)</title><rect x="535.3" y="947.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (52 samples, 0.59%)</title><rect x="536.8" y="931.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.8" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.16%)</title><rect x="536.9" y="915.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="539.9" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.16%)</title><rect x="536.9" y="899.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="539.9" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.15%)</title><rect x="537.1" y="883.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="540.1" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (7 samples, 0.08%)</title><rect x="537.3" y="867.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="540.3" y="878.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="538.3" y="867.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="541.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="538.8" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.8" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="538.8" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.8" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="538.8" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="538.8" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.02%)</title><rect x="538.8" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (35 samples, 0.40%)</title><rect x="539.1" y="915.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="539.3" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="542.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (31 samples, 0.35%)</title><rect x="539.6" y="899.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.34%)</title><rect x="539.6" y="883.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="542.6" y="894.0"></text>
</g>
<g>
<title>__libc_write (30 samples, 0.34%)</title><rect x="539.6" y="867.0" width="4.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="542.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.29%)</title><rect x="540.1" y="851.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="543.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.29%)</title><rect x="540.1" y="835.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_write (24 samples, 0.27%)</title><rect x="540.4" y="819.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="543.4" y="830.0"></text>
</g>
<g>
<title>ksys_write (23 samples, 0.26%)</title><rect x="540.5" y="803.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="543.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="540.7" y="787.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="543.7" y="798.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.23%)</title><rect x="540.9" y="787.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="543.9" y="798.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.18%)</title><rect x="541.2" y="771.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="544.2" y="782.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.18%)</title><rect x="541.2" y="755.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="544.2" y="766.0"></text>
</g>
<g>
<title>pipe_write (16 samples, 0.18%)</title><rect x="541.2" y="739.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.2" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.11%)</title><rect x="541.3" y="723.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.3" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.11%)</title><rect x="541.3" y="707.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="544.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.11%)</title><rect x="541.3" y="691.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="544.3" y="702.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.02%)</title><rect x="542.7" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="545.7" y="734.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="543.4" y="771.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.4" y="782.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="543.4" y="755.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="546.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (4 samples, 0.05%)</title><rect x="543.8" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.8" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="544.0" y="979.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="547.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.03%)</title><rect x="544.3" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.03%)</title><rect x="544.3" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.03%)</title><rect x="544.3" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.03%)</title><rect x="544.3" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (401 samples, 4.54%)</title><rect x="544.7" y="1059.0" width="53.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.7" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.02%)</title><rect x="545.6" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (392 samples, 4.44%)</title><rect x="545.9" y="1043.0" width="52.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.9" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (390 samples, 4.42%)</title><rect x="546.2" y="1027.0" width="52.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.2" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (390 samples, 4.42%)</title><rect x="546.2" y="1011.0" width="52.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.2" y="1022.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (233 samples, 2.64%)</title><rect x="546.6" y="995.0" width="31.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.6" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (233 samples, 2.64%)</title><rect x="546.6" y="979.0" width="31.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.6" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (230 samples, 2.60%)</title><rect x="547.0" y="963.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.0" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (226 samples, 2.56%)</title><rect x="547.1" y="947.0" width="30.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.1" y="958.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (225 samples, 2.55%)</title><rect x="547.2" y="931.0" width="30.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.2" y="942.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (225 samples, 2.55%)</title><rect x="547.2" y="915.0" width="30.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.2" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (223 samples, 2.52%)</title><rect x="547.5" y="899.0" width="29.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.5" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (208 samples, 2.36%)</title><rect x="547.6" y="883.0" width="27.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.6" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (208 samples, 2.36%)</title><rect x="547.6" y="867.0" width="27.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.6" y="878.0">j..</text>
</g>
<g>
<title>itable stub (6 samples, 0.07%)</title><rect x="548.7" y="851.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="551.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (148 samples, 1.68%)</title><rect x="549.5" y="851.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.16%)</title><rect x="549.6" y="835.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.6" y="846.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="550.4" y="819.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="553.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.apply (2 samples, 0.02%)</title><rect x="551.2" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.apply (102 samples, 1.15%)</title><rect x="551.5" y="835.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (102 samples, 1.15%)</title><rect x="551.5" y="819.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.02%)</title><rect x="551.6" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.02%)</title><rect x="551.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.02%)</title><rect x="551.6" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (99 samples, 1.12%)</title><rect x="551.9" y="803.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="551.9" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="551.9" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.02%)</title><rect x="551.9" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (97 samples, 1.10%)</title><rect x="552.2" y="787.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (97 samples, 1.10%)</title><rect x="552.2" y="771.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.2" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (24 samples, 0.27%)</title><rect x="552.3" y="755.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.3" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.09%)</title><rect x="552.7" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.7" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.09%)</title><rect x="552.7" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.09%)</title><rect x="552.7" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.09%)</title><rect x="552.7" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.09%)</title><rect x="552.7" y="675.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.09%)</title><rect x="552.7" y="659.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.09%)</title><rect x="552.7" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.09%)</title><rect x="552.7" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="553.5" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="553.5" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.5" y="606.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="553.5" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (13 samples, 0.15%)</title><rect x="553.8" y="739.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.12%)</title><rect x="554.0" y="723.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.10%)</title><rect x="554.0" y="707.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.10%)</title><rect x="554.0" y="691.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.06%)</title><rect x="554.0" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.06%)</title><rect x="554.0" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.02%)</title><rect x="554.4" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.05%)</title><rect x="554.7" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.02%)</title><rect x="555.0" y="659.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (2 samples, 0.02%)</title><rect x="555.0" y="643.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.02%)</title><rect x="555.0" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.02%)</title><rect x="555.2" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.02%)</title><rect x="555.2" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.02%)</title><rect x="555.2" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="555.2" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.03%)</title><rect x="555.5" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 0.77%)</title><rect x="556.0" y="755.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/939439677.run (68 samples, 0.77%)</title><rect x="556.0" y="739.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (68 samples, 0.77%)</title><rect x="556.0" y="723.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="556.2" y="707.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="556.2" y="691.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.10%)</title><rect x="556.4" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.09%)</title><rect x="556.6" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="557.4" y="675.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (39 samples, 0.44%)</title><rect x="557.8" y="707.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (39 samples, 0.44%)</title><rect x="557.8" y="691.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.8" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (27 samples, 0.31%)</title><rect x="558.4" y="675.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.4" y="686.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.02%)</title><rect x="559.5" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.5" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (17 samples, 0.19%)</title><rect x="559.8" y="659.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.8" y="670.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (17 samples, 0.19%)</title><rect x="559.8" y="643.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.8" y="654.0"></text>
</g>
<g>
<title>JVM_IHashCode (15 samples, 0.17%)</title><rect x="560.1" y="627.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="563.1" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (7 samples, 0.08%)</title><rect x="560.7" y="611.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="563.7" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="561.8" y="611.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="564.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.02%)</title><rect x="562.1" y="675.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.06%)</title><rect x="562.3" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.06%)</title><rect x="562.3" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.06%)</title><rect x="562.3" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.02%)</title><rect x="562.3" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="562.7" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (16 samples, 0.18%)</title><rect x="563.0" y="707.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (16 samples, 0.18%)</title><rect x="563.0" y="691.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (16 samples, 0.18%)</title><rect x="563.0" y="675.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (16 samples, 0.18%)</title><rect x="563.0" y="659.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (16 samples, 0.18%)</title><rect x="563.0" y="643.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (16 samples, 0.18%)</title><rect x="563.0" y="627.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.apply (31 samples, 0.35%)</title><rect x="565.1" y="835.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (31 samples, 0.35%)</title><rect x="565.1" y="819.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (27 samples, 0.31%)</title><rect x="565.1" y="803.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (15 samples, 0.17%)</title><rect x="566.6" y="787.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (14 samples, 0.16%)</title><rect x="566.7" y="771.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.7" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (8 samples, 0.09%)</title><rect x="567.5" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.5" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (7 samples, 0.08%)</title><rect x="567.7" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.08%)</title><rect x="567.7" y="723.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.7" y="734.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.05%)</title><rect x="567.9" y="707.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="570.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.05%)</title><rect x="568.7" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.05%)</title><rect x="568.7" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="568.7" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (38 samples, 0.43%)</title><rect x="569.3" y="851.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.03%)</title><rect x="569.4" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.03%)</title><rect x="569.4" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.4" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="569.4" y="803.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="572.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (34 samples, 0.38%)</title><rect x="569.8" y="835.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.apply (33 samples, 0.37%)</title><rect x="569.9" y="819.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (33 samples, 0.37%)</title><rect x="569.9" y="803.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (33 samples, 0.37%)</title><rect x="569.9" y="787.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (33 samples, 0.37%)</title><rect x="569.9" y="771.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.9" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="570.5" y="755.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="573.5" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.06%)</title><rect x="570.6" y="739.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="573.6" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.06%)</title><rect x="570.6" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="573.6" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (5 samples, 0.06%)</title><rect x="570.6" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="573.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (23 samples, 0.26%)</title><rect x="571.3" y="755.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (19 samples, 0.22%)</title><rect x="571.8" y="739.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.8" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (13 samples, 0.15%)</title><rect x="571.8" y="723.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (7 samples, 0.08%)</title><rect x="572.3" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.rightOf (2 samples, 0.02%)</title><rect x="573.0" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.02%)</title><rect x="573.3" y="707.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.07%)</title><rect x="573.5" y="723.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (6 samples, 0.07%)</title><rect x="574.3" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="574.6" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="574.6" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/71450870.apply (14 samples, 0.16%)</title><rect x="575.4" y="883.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (14 samples, 0.16%)</title><rect x="575.4" y="867.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (13 samples, 0.15%)</title><rect x="575.6" y="851.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.11%)</title><rect x="575.6" y="835.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.11%)</title><rect x="575.6" y="819.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.11%)</title><rect x="575.6" y="803.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="576.9" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (2 samples, 0.02%)</title><rect x="577.0" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.03%)</title><rect x="577.3" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.03%)</title><rect x="577.3" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.3" y="942.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="577.3" y="915.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="580.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (154 samples, 1.74%)</title><rect x="577.7" y="995.0" width="20.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="582.8" y="979.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.8" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="583.2" y="979.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="586.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (3 samples, 0.03%)</title><rect x="583.4" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (26 samples, 0.29%)</title><rect x="583.8" y="979.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (26 samples, 0.29%)</title><rect x="583.8" y="963.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.8" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (26 samples, 0.29%)</title><rect x="583.8" y="947.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.8" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (21 samples, 0.24%)</title><rect x="584.2" y="931.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.2" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="586.4" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.4" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (2 samples, 0.02%)</title><rect x="587.0" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.02%)</title><rect x="587.3" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.02%)</title><rect x="587.3" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.3" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="587.3" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (24 samples, 0.27%)</title><rect x="587.7" y="979.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.7" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (24 samples, 0.27%)</title><rect x="587.7" y="963.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (24 samples, 0.27%)</title><rect x="587.7" y="947.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (21 samples, 0.24%)</title><rect x="588.1" y="931.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (20 samples, 0.23%)</title><rect x="588.2" y="915.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.2" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (20 samples, 0.23%)</title><rect x="588.2" y="899.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.02%)</title><rect x="588.4" y="883.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (2 samples, 0.02%)</title><rect x="588.4" y="867.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.02%)</title><rect x="588.4" y="851.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (9 samples, 0.10%)</title><rect x="588.6" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.6" y="894.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="589.0" y="867.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="592.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$93/1793799654.test (2 samples, 0.02%)</title><rect x="589.6" y="867.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.03%)</title><rect x="589.8" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (3 samples, 0.03%)</title><rect x="589.8" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.03%)</title><rect x="589.8" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.06%)</title><rect x="590.2" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (55 samples, 0.62%)</title><rect x="590.9" y="979.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.03%)</title><rect x="590.9" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.05%)</title><rect x="591.3" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.02%)</title><rect x="591.4" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.08%)</title><rect x="591.9" y="963.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="592.1" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.1" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="592.4" y="947.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="595.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (41 samples, 0.46%)</title><rect x="592.8" y="963.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (19 samples, 0.22%)</title><rect x="592.9" y="947.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="594.3" y="931.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.3" y="942.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="594.7" y="931.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="597.7" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="594.9" y="931.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="597.9" y="942.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="595.2" y="931.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="598.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.06%)</title><rect x="595.5" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (16 samples, 0.18%)</title><rect x="596.1" y="947.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.09%)</title><rect x="596.1" y="931.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.07%)</title><rect x="596.4" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (6 samples, 0.07%)</title><rect x="596.4" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.06%)</title><rect x="597.2" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$463/1192001859.apply (3 samples, 0.03%)</title><rect x="597.9" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.03%)</title><rect x="597.9" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="598.0" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,008 samples, 11.41%)</title><rect x="598.3" y="1107.0" width="134.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.3" y="1118.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,006 samples, 11.39%)</title><rect x="598.5" y="1091.0" width="134.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.5" y="1102.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,006 samples, 11.39%)</title><rect x="598.5" y="1075.0" width="134.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.5" y="1086.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (1,005 samples, 11.38%)</title><rect x="598.7" y="1059.0" width="134.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.7" y="1070.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,004 samples, 11.37%)</title><rect x="598.8" y="1043.0" width="134.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.8" y="1054.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (2 samples, 0.02%)</title><rect x="598.9" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.02%)</title><rect x="598.9" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (995 samples, 11.27%)</title><rect x="599.2" y="1027.0" width="132.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.2" y="1038.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="599.2" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="599.2" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$326/669723313.get$Lambda (2 samples, 0.02%)</title><rect x="599.2" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (989 samples, 11.20%)</title><rect x="599.5" y="1011.0" width="132.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.5" y="1022.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (989 samples, 11.20%)</title><rect x="599.5" y="995.0" width="132.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.5" y="1006.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$471/282701340.run (739 samples, 8.37%)</title><rect x="599.9" y="979.0" width="98.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.9" y="990.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (739 samples, 8.37%)</title><rect x="599.9" y="963.0" width="98.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="974.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (739 samples, 8.37%)</title><rect x="599.9" y="947.0" width="98.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.9" y="958.0">jdk/internal..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (16 samples, 0.18%)</title><rect x="599.9" y="931.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.9" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.05%)</title><rect x="600.1" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.1" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.05%)</title><rect x="600.1" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.1" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.05%)</title><rect x="600.1" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="600.1" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.1" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="600.1" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="600.1" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="600.1" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.05%)</title><rect x="600.1" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="600.4" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="600.4" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.4" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="600.4" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.4" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.06%)</title><rect x="600.7" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.06%)</title><rect x="600.7" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (5 samples, 0.06%)</title><rect x="600.7" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.06%)</title><rect x="600.7" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="601.1" y="851.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.06%)</title><rect x="601.3" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.05%)</title><rect x="601.5" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.03%)</title><rect x="601.5" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.5" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.03%)</title><rect x="601.5" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.02%)</title><rect x="601.5" y="851.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.02%)</title><rect x="601.5" y="835.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.5" y="846.0"></text>
</g>
<g>
<title>java/util/Optional.map (3 samples, 0.03%)</title><rect x="602.0" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$515/1548373204.apply (3 samples, 0.03%)</title><rect x="602.0" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (3 samples, 0.03%)</title><rect x="602.0" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.03%)</title><rect x="602.0" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="602.0" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.02%)</title><rect x="602.1" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (718 samples, 8.13%)</title><rect x="602.4" y="931.0" width="95.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.4" y="942.0">jdk/interna..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.07%)</title><rect x="602.4" y="915.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.4" y="926.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.07%)</title><rect x="602.4" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.4" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="602.4" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.4" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.02%)</title><rect x="602.4" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.05%)</title><rect x="602.7" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.7" y="894.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.03%)</title><rect x="602.7" y="867.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="605.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (712 samples, 8.06%)</title><rect x="603.2" y="915.0" width="95.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.2" y="926.0">jdk/interna..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (122 samples, 1.38%)</title><rect x="610.7" y="899.0" width="16.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="613.7" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (120 samples, 1.36%)</title><rect x="611.0" y="883.0" width="16.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="614.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (119 samples, 1.35%)</title><rect x="611.1" y="867.0" width="15.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="614.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (102 samples, 1.15%)</title><rect x="611.4" y="851.0" width="13.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="614.4" y="862.0"></text>
</g>
<g>
<title>SpinPause (15 samples, 0.17%)</title><rect x="625.0" y="851.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="628.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (426 samples, 4.82%)</title><rect x="627.0" y="899.0" width="56.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.0" y="910.0">jdk/in..</text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.03%)</title><rect x="682.8" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.8" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.03%)</title><rect x="682.8" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.8" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.03%)</title><rect x="682.8" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.8" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (3 samples, 0.03%)</title><rect x="682.8" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.8" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.06%)</title><rect x="683.2" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="686.2" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.06%)</title><rect x="683.2" y="867.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="686.2" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.06%)</title><rect x="683.2" y="851.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (23 samples, 0.26%)</title><rect x="683.9" y="899.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.24%)</title><rect x="683.9" y="883.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.15%)</title><rect x="683.9" y="867.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.02%)</title><rect x="685.4" y="851.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.4" y="862.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.02%)</title><rect x="685.4" y="835.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.4" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.02%)</title><rect x="685.4" y="819.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.4" y="830.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.02%)</title><rect x="685.4" y="803.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.09%)</title><rect x="685.6" y="867.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (5 samples, 0.06%)</title><rect x="686.0" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (84 samples, 0.95%)</title><rect x="687.0" y="899.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (84 samples, 0.95%)</title><rect x="687.0" y="883.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (21 samples, 0.24%)</title><rect x="687.2" y="867.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (20 samples, 0.23%)</title><rect x="687.2" y="851.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (20 samples, 0.23%)</title><rect x="687.2" y="835.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (19 samples, 0.22%)</title><rect x="687.2" y="819.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (19 samples, 0.22%)</title><rect x="687.2" y="803.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.2" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="687.5" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="690.5" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="687.5" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="690.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.15%)</title><rect x="688.0" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.02%)</title><rect x="689.5" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="689.5" y="755.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="692.5" y="766.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.02%)</title><rect x="689.5" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="692.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="689.5" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="692.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="689.5" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.02%)</title><rect x="689.5" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="692.5" y="702.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.02%)</title><rect x="689.5" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.5" y="686.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.02%)</title><rect x="689.5" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="692.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (60 samples, 0.68%)</title><rect x="690.2" y="867.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (60 samples, 0.68%)</title><rect x="690.2" y="851.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (56 samples, 0.63%)</title><rect x="690.2" y="835.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (56 samples, 0.63%)</title><rect x="690.2" y="819.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (56 samples, 0.63%)</title><rect x="690.2" y="803.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.2" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="690.5" y="787.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="693.5" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.08%)</title><rect x="690.6" y="771.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="693.6" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.07%)</title><rect x="690.6" y="755.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="693.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (5 samples, 0.06%)</title><rect x="690.7" y="739.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="693.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (45 samples, 0.51%)</title><rect x="691.7" y="787.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (36 samples, 0.41%)</title><rect x="692.9" y="771.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.41%)</title><rect x="692.9" y="755.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="695.9" y="766.0"></text>
</g>
<g>
<title>__libc_write (36 samples, 0.41%)</title><rect x="692.9" y="739.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="695.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.33%)</title><rect x="693.8" y="723.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.32%)</title><rect x="693.9" y="707.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="696.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (28 samples, 0.32%)</title><rect x="693.9" y="691.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="696.9" y="702.0"></text>
</g>
<g>
<title>ksys_write (27 samples, 0.31%)</title><rect x="694.1" y="675.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.1" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.05%)</title><rect x="694.1" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="697.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="694.1" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="697.1" y="654.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="694.2" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.2" y="638.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.26%)</title><rect x="694.6" y="659.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.6" y="670.0"></text>
</g>
<g>
<title>__vfs_write (17 samples, 0.19%)</title><rect x="694.7" y="643.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="697.7" y="654.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.19%)</title><rect x="694.7" y="627.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.7" y="638.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.17%)</title><rect x="695.0" y="611.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.0" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.12%)</title><rect x="695.1" y="595.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="698.1" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.12%)</title><rect x="695.1" y="579.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="698.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.12%)</title><rect x="695.1" y="563.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.1" y="574.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.02%)</title><rect x="696.6" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="699.6" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="696.6" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.6" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="697.0" y="643.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.0" y="654.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="697.0" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="700.0" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="697.1" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="700.1" y="622.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.02%)</title><rect x="697.4" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="700.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (2 samples, 0.02%)</title><rect x="697.9" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.02%)</title><rect x="698.3" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.02%)</title><rect x="698.3" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1855914119.accept (30 samples, 0.34%)</title><rect x="698.6" y="979.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (30 samples, 0.34%)</title><rect x="698.6" y="963.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (30 samples, 0.34%)</title><rect x="698.6" y="947.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (29 samples, 0.33%)</title><rect x="698.6" y="931.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29 samples, 0.33%)</title><rect x="698.6" y="915.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (27 samples, 0.31%)</title><rect x="698.9" y="899.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (26 samples, 0.29%)</title><rect x="699.0" y="883.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.14%)</title><rect x="699.0" y="867.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (12 samples, 0.14%)</title><rect x="699.0" y="851.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.0" y="862.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="699.7" y="835.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="702.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$480/1259098462.accept (4 samples, 0.05%)</title><rect x="700.1" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$485/420126221.accept (13 samples, 0.15%)</title><rect x="700.7" y="867.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (13 samples, 0.15%)</title><rect x="700.7" y="851.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (11 samples, 0.12%)</title><rect x="701.0" y="835.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.0" y="846.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (10 samples, 0.11%)</title><rect x="701.1" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.1" y="830.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (9 samples, 0.10%)</title><rect x="701.3" y="803.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (213 samples, 2.41%)</title><rect x="702.6" y="979.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.6" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (213 samples, 2.41%)</title><rect x="702.6" y="963.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.6" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (213 samples, 2.41%)</title><rect x="702.6" y="947.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.6" y="958.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (213 samples, 2.41%)</title><rect x="702.6" y="931.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.6" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (213 samples, 2.41%)</title><rect x="702.6" y="915.0" width="28.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.6" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (210 samples, 2.38%)</title><rect x="702.9" y="899.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.9" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (210 samples, 2.38%)</title><rect x="702.9" y="883.0" width="28.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.9" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.06%)</title><rect x="702.9" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.06%)</title><rect x="702.9" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.9" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="703.1" y="835.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="706.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$490/1490887781.accept (205 samples, 2.32%)</title><rect x="703.5" y="867.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.5" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (202 samples, 2.29%)</title><rect x="703.9" y="851.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (202 samples, 2.29%)</title><rect x="703.9" y="835.0" width="27.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.9" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (202 samples, 2.29%)</title><rect x="703.9" y="819.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.9" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13 samples, 0.15%)</title><rect x="703.9" y="803.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="704.3" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="704.3" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$507/1071206426.apply (8 samples, 0.09%)</title><rect x="704.6" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (8 samples, 0.09%)</title><rect x="704.6" y="771.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.02%)</title><rect x="705.7" y="803.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (185 samples, 2.09%)</title><rect x="705.9" y="803.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.9" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (181 samples, 2.05%)</title><rect x="706.5" y="787.0" width="24.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (176 samples, 1.99%)</title><rect x="706.5" y="771.0" width="23.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.5" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (165 samples, 1.87%)</title><rect x="706.5" y="755.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.5" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (165 samples, 1.87%)</title><rect x="706.5" y="739.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.5" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (164 samples, 1.86%)</title><rect x="706.6" y="723.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.6" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (163 samples, 1.85%)</title><rect x="706.8" y="707.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (163 samples, 1.85%)</title><rect x="706.8" y="691.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.8" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (154 samples, 1.74%)</title><rect x="708.0" y="675.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.0" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (26 samples, 0.29%)</title><rect x="708.2" y="659.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="711.2" y="670.0"></text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.03%)</title><rect x="708.9" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="711.9" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.03%)</title><rect x="709.3" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="712.3" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="709.7" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="712.7" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.03%)</title><rect x="710.2" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="713.2" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="710.8" y="643.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="713.8" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.03%)</title><rect x="711.0" y="643.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="714.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (126 samples, 1.43%)</title><rect x="711.7" y="659.0" width="16.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="714.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (103 samples, 1.17%)</title><rect x="714.8" y="643.0" width="13.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="717.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (103 samples, 1.17%)</title><rect x="714.8" y="627.0" width="13.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="717.8" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (88 samples, 1.00%)</title><rect x="716.8" y="611.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="719.8" y="622.0"></text>
</g>
<g>
<title>do_futex (86 samples, 0.97%)</title><rect x="716.9" y="595.0" width="11.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="719.9" y="606.0"></text>
</g>
<g>
<title>futex_wake (83 samples, 0.94%)</title><rect x="717.0" y="579.0" width="11.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="717.8" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.8" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.10%)</title><rect x="718.2" y="563.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.2" y="574.0"></text>
</g>
<g>
<title>wake_up_q (65 samples, 0.74%)</title><rect x="719.4" y="563.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.4" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (64 samples, 0.72%)</title><rect x="719.6" y="547.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (63 samples, 0.71%)</title><rect x="719.7" y="531.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.7" y="542.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="728.1" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="731.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (11 samples, 0.12%)</title><rect x="728.5" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.5" y="766.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="728.9" y="739.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="731.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$500/682479467.accept (2 samples, 0.02%)</title><rect x="729.2" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$495/180684040.accept (2 samples, 0.02%)</title><rect x="729.5" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$197/1228664428.accept (2 samples, 0.02%)</title><rect x="729.7" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$500/682479467.accept (3 samples, 0.03%)</title><rect x="730.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$197/1228664428.accept (2 samples, 0.02%)</title><rect x="730.4" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (2 samples, 0.02%)</title><rect x="730.4" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.02%)</title><rect x="730.4" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.02%)</title><rect x="730.4" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.4" y="734.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="730.7" y="803.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="733.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (4 samples, 0.05%)</title><rect x="731.1" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (4 samples, 0.05%)</title><rect x="731.1" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.05%)</title><rect x="731.1" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="731.1" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="731.3" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (4 samples, 0.05%)</title><rect x="731.6" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.05%)</title><rect x="731.6" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="731.6" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6 samples, 0.07%)</title><rect x="732.1" y="1027.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.05%)</title><rect x="732.4" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.05%)</title><rect x="732.4" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.05%)</title><rect x="732.4" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.05%)</title><rect x="732.4" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="732.4" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.05%)</title><rect x="732.4" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="732.4" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.05%)</title><rect x="732.4" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.05%)</title><rect x="732.4" y="883.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.05%)</title><rect x="732.4" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="732.4" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="732.4" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.02%)</title><rect x="732.4" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.apply (2 samples, 0.02%)</title><rect x="732.4" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.02%)</title><rect x="732.4" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.02%)</title><rect x="732.4" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.02%)</title><rect x="732.4" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.02%)</title><rect x="732.4" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.4" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.02%)</title><rect x="732.4" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.02%)</title><rect x="732.4" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.02%)</title><rect x="732.4" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.02%)</title><rect x="732.4" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.02%)</title><rect x="732.4" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.02%)</title><rect x="732.7" y="819.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.02%)</title><rect x="732.7" y="803.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.apply (2 samples, 0.02%)</title><rect x="732.7" y="787.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2 samples, 0.02%)</title><rect x="732.7" y="771.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2 samples, 0.02%)</title><rect x="732.7" y="755.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2 samples, 0.02%)</title><rect x="732.7" y="739.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (577 samples, 6.53%)</title><rect x="733.1" y="1187.0" width="77.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.1" y="1198.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (577 samples, 6.53%)</title><rect x="733.1" y="1171.0" width="77.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.1" y="1182.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (250 samples, 2.83%)</title><rect x="734.5" y="1155.0" width="33.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.5" y="1166.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (9 samples, 0.10%)</title><rect x="736.3" y="1139.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.compareAndSet (9 samples, 0.10%)</title><rect x="736.3" y="1123.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.3" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="737.1" y="1107.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="740.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (4 samples, 0.05%)</title><rect x="737.5" y="1139.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.getAcquire (4 samples, 0.05%)</title><rect x="737.5" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (224 samples, 2.54%)</title><rect x="738.0" y="1139.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.0" y="1150.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (5 samples, 0.06%)</title><rect x="740.4" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (2 samples, 0.02%)</title><rect x="741.1" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (199 samples, 2.25%)</title><rect x="741.4" y="1123.0" width="26.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.4" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (198 samples, 2.24%)</title><rect x="741.4" y="1107.0" width="26.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.4" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (68 samples, 0.77%)</title><rect x="741.4" y="1091.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (65 samples, 0.74%)</title><rect x="741.8" y="1075.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (65 samples, 0.74%)</title><rect x="741.8" y="1059.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.8" y="1070.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="741.8" y="1043.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="744.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (61 samples, 0.69%)</title><rect x="742.2" y="1043.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (61 samples, 0.69%)</title><rect x="742.2" y="1027.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.07%)</title><rect x="742.2" y="1011.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.07%)</title><rect x="742.2" y="995.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.2" y="1006.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="742.3" y="979.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="745.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (2 samples, 0.02%)</title><rect x="742.7" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (55 samples, 0.62%)</title><rect x="743.0" y="1011.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (54 samples, 0.61%)</title><rect x="743.1" y="995.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (52 samples, 0.59%)</title><rect x="743.2" y="979.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (52 samples, 0.59%)</title><rect x="743.2" y="963.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (48 samples, 0.54%)</title><rect x="743.8" y="947.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (46 samples, 0.52%)</title><rect x="743.8" y="931.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.52%)</title><rect x="743.8" y="915.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (46 samples, 0.52%)</title><rect x="743.8" y="899.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.05%)</title><rect x="743.8" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.05%)</title><rect x="743.8" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.05%)</title><rect x="743.8" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.05%)</title><rect x="743.8" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (41 samples, 0.46%)</title><rect x="744.4" y="883.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (41 samples, 0.46%)</title><rect x="744.4" y="867.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (41 samples, 0.46%)</title><rect x="744.4" y="851.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 0.46%)</title><rect x="744.4" y="835.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.44%)</title><rect x="744.7" y="819.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.7" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.07%)</title><rect x="744.8" y="803.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="747.8" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="745.0" y="787.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="748.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="745.4" y="787.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="748.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.35%)</title><rect x="745.6" y="803.0" width="4.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="748.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.31%)</title><rect x="746.2" y="787.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="749.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.31%)</title><rect x="746.2" y="771.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="749.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.28%)</title><rect x="746.4" y="755.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="749.4" y="766.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.28%)</title><rect x="746.4" y="739.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="749.4" y="750.0"></text>
</g>
<g>
<title>futex_wake (24 samples, 0.27%)</title><rect x="746.6" y="723.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="749.6" y="734.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.24%)</title><rect x="747.0" y="707.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="750.0" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.24%)</title><rect x="747.0" y="691.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.24%)</title><rect x="747.0" y="675.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="750.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="749.9" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="749.9" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (130 samples, 1.47%)</title><rect x="750.4" y="1091.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (118 samples, 1.34%)</title><rect x="751.1" y="1075.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (117 samples, 1.32%)</title><rect x="751.2" y="1059.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (116 samples, 1.31%)</title><rect x="751.4" y="1043.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (112 samples, 1.27%)</title><rect x="751.4" y="1027.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (111 samples, 1.26%)</title><rect x="751.4" y="1011.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (111 samples, 1.26%)</title><rect x="751.4" y="995.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (111 samples, 1.26%)</title><rect x="751.4" y="979.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (111 samples, 1.26%)</title><rect x="751.4" y="963.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (111 samples, 1.26%)</title><rect x="751.4" y="947.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 1.22%)</title><rect x="751.8" y="931.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.8" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.16%)</title><rect x="751.9" y="915.0" width="1.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="754.9" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="752.3" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="755.3" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="752.6" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="755.6" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.03%)</title><rect x="753.4" y="899.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="756.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (91 samples, 1.03%)</title><rect x="753.8" y="915.0" width="12.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="756.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 0.89%)</title><rect x="755.4" y="899.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 0.89%)</title><rect x="755.4" y="883.0" width="10.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.4" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (76 samples, 0.86%)</title><rect x="755.8" y="867.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.8" y="878.0"></text>
</g>
<g>
<title>do_futex (75 samples, 0.85%)</title><rect x="755.9" y="851.0" width="10.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.9" y="862.0"></text>
</g>
<g>
<title>futex_wake (74 samples, 0.84%)</title><rect x="756.1" y="835.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.1" y="846.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="756.9" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.9" y="830.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.02%)</title><rect x="757.0" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="760.0" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.03%)</title><rect x="757.4" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.4" y="830.0"></text>
</g>
<g>
<title>wake_up_q (61 samples, 0.69%)</title><rect x="757.8" y="819.0" width="8.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="760.8" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (61 samples, 0.69%)</title><rect x="757.8" y="803.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="760.8" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (61 samples, 0.69%)</title><rect x="757.8" y="787.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="760.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="766.3" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="766.3" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.3" y="1022.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="766.3" y="995.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="769.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.08%)</title><rect x="766.9" y="1075.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.07%)</title><rect x="767.0" y="1059.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.07%)</title><rect x="767.0" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.0" y="1054.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="767.4" y="1027.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="770.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.45%)</title><rect x="767.9" y="1155.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (36 samples, 0.41%)</title><rect x="768.5" y="1139.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.5" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.15%)</title><rect x="768.6" y="1123.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="771.6" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.06%)</title><rect x="768.9" y="1107.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="771.9" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="769.1" y="1091.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="772.1" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.06%)</title><rect x="769.5" y="1107.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="772.5" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="769.7" y="1091.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="772.7" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="769.7" y="1075.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.7" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="769.9" y="1059.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="772.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.25%)</title><rect x="770.3" y="1123.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="773.3" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (21 samples, 0.24%)</title><rect x="770.5" y="1107.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="773.5" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="772.8" y="1091.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="772.8" y="1075.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="775.8" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.03%)</title><rect x="772.9" y="1059.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="775.9" y="1070.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="773.0" y="1043.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.0" y="1054.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="773.0" y="1027.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (276 samples, 3.12%)</title><rect x="773.3" y="1155.0" width="36.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.3" y="1166.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (271 samples, 3.07%)</title><rect x="773.7" y="1139.0" width="36.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.7" y="1150.0">jdk..</text>
</g>
<g>
<title>SafepointMechanism::block_if_requested(JavaThread*) (2 samples, 0.02%)</title><rect x="774.2" y="1123.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="777.2" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (99 samples, 1.12%)</title><rect x="774.5" y="1123.0" width="13.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="777.5" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.22%)</title><rect x="775.3" y="1107.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="778.3" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.06%)</title><rect x="775.8" y="1091.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="778.8" y="1102.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.02%)</title><rect x="776.2" y="1075.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="779.2" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="776.6" y="1091.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="779.6" y="1102.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (6 samples, 0.07%)</title><rect x="777.0" y="1091.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="780.0" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="777.4" y="1075.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="780.4" y="1086.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="777.6" y="1059.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="780.6" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (65 samples, 0.74%)</title><rect x="777.8" y="1107.0" width="8.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="780.8" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.29%)</title><rect x="783.0" y="1091.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.0" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.27%)</title><rect x="783.3" y="1075.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="786.3" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.12%)</title><rect x="785.0" y="1059.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="788.0" y="1070.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.10%)</title><rect x="785.3" y="1043.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.3" y="1054.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.06%)</title><rect x="785.6" y="1027.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="788.6" y="1038.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="786.2" y="1027.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.03%)</title><rect x="786.5" y="1107.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="789.5" y="1118.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.02%)</title><rect x="787.4" y="1107.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="790.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="787.7" y="1123.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="790.7" y="1134.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.03%)</title><rect x="787.7" y="1107.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="790.7" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (154 samples, 1.74%)</title><rect x="788.2" y="1123.0" width="20.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="791.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.75%)</title><rect x="800.0" y="1107.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.0" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (66 samples, 0.75%)</title><rect x="800.0" y="1091.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="803.0" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (61 samples, 0.69%)</title><rect x="800.7" y="1075.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="803.7" y="1086.0"></text>
</g>
<g>
<title>do_futex (51 samples, 0.58%)</title><rect x="801.1" y="1059.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="804.1" y="1070.0"></text>
</g>
<g>
<title>futex_wait (48 samples, 0.54%)</title><rect x="801.3" y="1043.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.3" y="1054.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.02%)</title><rect x="801.6" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.6" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.17%)</title><rect x="801.9" y="1027.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="804.9" y="1038.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (11 samples, 0.12%)</title><rect x="801.9" y="1011.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.9" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.11%)</title><rect x="801.9" y="995.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="804.9" y="1006.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.02%)</title><rect x="803.3" y="1011.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="806.3" y="1022.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="803.6" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="806.6" y="1022.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.17%)</title><rect x="803.9" y="1027.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="806.9" y="1038.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="805.1" y="1011.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="808.1" y="1022.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.03%)</title><rect x="805.5" y="1011.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="808.5" y="1022.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="805.9" y="1027.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="808.9" y="1038.0"></text>
</g>
<g>
<title>hrtimer_cancel (10 samples, 0.11%)</title><rect x="806.2" y="1027.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.2" y="1038.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (9 samples, 0.10%)</title><rect x="806.2" y="1011.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="809.2" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.09%)</title><rect x="806.3" y="995.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.3" y="1006.0"></text>
</g>
<g>
<title>get_timespec64 (7 samples, 0.08%)</title><rect x="807.9" y="1059.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="810.9" y="1070.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.03%)</title><rect x="807.9" y="1043.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.9" y="1054.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.02%)</title><rect x="808.3" y="1043.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="811.3" y="1054.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="808.6" y="1043.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="811.6" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="808.8" y="1123.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="811.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.03%)</title><rect x="809.4" y="1123.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="812.4" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="809.9" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="812.9" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="809.9" y="1123.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="812.9" y="1134.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="809.9" y="1107.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="812.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (782 samples, 8.85%)</title><rect x="810.2" y="1187.0" width="104.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.2" y="1198.0">jdk/internal..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="813.8" y="1171.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="816.8" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.06%)</title><rect x="813.9" y="1155.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="816.9" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="814.0" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="817.0" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="814.6" y="1171.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="817.6" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="814.6" y="1155.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="817.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.03%)</title><rect x="814.8" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.8" y="1182.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (8 samples, 0.09%)</title><rect x="815.4" y="1171.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.4" y="1182.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (6 samples, 0.07%)</title><rect x="815.6" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.6" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (3 samples, 0.03%)</title><rect x="816.4" y="1171.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.4" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.03%)</title><rect x="816.8" y="1171.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.8" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="817.2" y="1171.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.2" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="817.4" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="817.4" y="1139.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="817.4" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (3 samples, 0.03%)</title><rect x="817.4" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.4" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.02%)</title><rect x="817.8" y="1171.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.8" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (214 samples, 2.42%)</title><rect x="818.0" y="1171.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.0" y="1182.0">ja..</text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="818.0" y="1155.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="821.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$385/1818596436.accept (204 samples, 2.31%)</title><rect x="818.3" y="1155.0" width="27.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.3" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (204 samples, 2.31%)</title><rect x="818.3" y="1139.0" width="27.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.3" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (204 samples, 2.31%)</title><rect x="818.3" y="1123.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.3" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (204 samples, 2.31%)</title><rect x="818.3" y="1107.0" width="27.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.3" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (204 samples, 2.31%)</title><rect x="818.3" y="1091.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.3" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (11 samples, 0.12%)</title><rect x="818.3" y="1075.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.08%)</title><rect x="818.7" y="1059.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.07%)</title><rect x="818.8" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.07%)</title><rect x="818.8" y="1027.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.07%)</title><rect x="818.8" y="1011.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.07%)</title><rect x="818.8" y="995.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (193 samples, 2.19%)</title><rect x="819.8" y="1075.0" width="25.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.8" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (193 samples, 2.19%)</title><rect x="819.8" y="1059.0" width="25.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.8" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.02%)</title><rect x="819.8" y="1043.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (191 samples, 2.16%)</title><rect x="820.0" y="1043.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.0" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.03%)</title><rect x="820.0" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.03%)</title><rect x="820.0" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (188 samples, 2.13%)</title><rect x="820.4" y="1027.0" width="25.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.4" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (188 samples, 2.13%)</title><rect x="820.4" y="1011.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.4" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (186 samples, 2.11%)</title><rect x="820.6" y="995.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.6" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (185 samples, 2.09%)</title><rect x="820.6" y="979.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.6" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (29 samples, 0.33%)</title><rect x="820.6" y="963.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (28 samples, 0.32%)</title><rect x="820.7" y="947.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.7" y="958.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.02%)</title><rect x="820.7" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (26 samples, 0.29%)</title><rect x="821.0" y="931.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.29%)</title><rect x="821.0" y="915.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.29%)</title><rect x="821.0" y="899.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.29%)</title><rect x="821.0" y="883.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.29%)</title><rect x="821.0" y="867.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.02%)</title><rect x="821.0" y="851.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.27%)</title><rect x="821.2" y="851.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 0.18%)</title><rect x="821.5" y="835.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.03%)</title><rect x="821.5" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.03%)</title><rect x="821.5" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.03%)</title><rect x="821.5" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="821.9" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="821.9" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.12%)</title><rect x="822.2" y="819.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.12%)</title><rect x="822.2" y="803.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.12%)</title><rect x="822.2" y="787.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.12%)</title><rect x="822.2" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.12%)</title><rect x="822.2" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.03%)</title><rect x="822.2" y="739.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="825.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.09%)</title><rect x="822.6" y="739.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="825.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="822.7" y="723.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="825.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="822.7" y="707.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="825.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.08%)</title><rect x="822.7" y="691.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.7" y="702.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.08%)</title><rect x="822.7" y="675.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="825.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.07%)</title><rect x="822.7" y="659.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="825.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.07%)</title><rect x="822.7" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="825.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.07%)</title><rect x="822.7" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="825.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.07%)</title><rect x="822.7" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="825.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="823.7" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="823.7" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="824.1" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="824.1" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="824.1" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="824.1" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.07%)</title><rect x="824.6" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.07%)</title><rect x="824.6" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.07%)</title><rect x="824.6" y="931.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.05%)</title><rect x="824.9" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.03%)</title><rect x="825.0" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="825.0" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="825.0" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.0" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="825.0" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (149 samples, 1.69%)</title><rect x="825.4" y="963.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (3 samples, 0.03%)</title><rect x="826.1" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.1" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (2 samples, 0.02%)</title><rect x="826.2" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="826.2" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="826.2" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (140 samples, 1.59%)</title><rect x="826.6" y="947.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="826.9" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="826.9" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="827.3" y="931.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (133 samples, 1.51%)</title><rect x="827.5" y="931.0" width="17.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (133 samples, 1.51%)</title><rect x="827.5" y="915.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (120 samples, 1.36%)</title><rect x="828.7" y="899.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (120 samples, 1.36%)</title><rect x="828.7" y="883.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (119 samples, 1.35%)</title><rect x="828.9" y="867.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.29%)</title><rect x="829.1" y="851.0" width="15.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="832.1" y="862.0"></text>
</g>
<g>
<title>__read (113 samples, 1.28%)</title><rect x="829.3" y="835.0" width="15.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="832.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 0.94%)</title><rect x="833.3" y="819.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 0.93%)</title><rect x="833.4" y="803.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="836.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_read (70 samples, 0.79%)</title><rect x="834.9" y="787.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="837.9" y="798.0"></text>
</g>
<g>
<title>ksys_read (69 samples, 0.78%)</title><rect x="835.0" y="771.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="838.0" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.03%)</title><rect x="835.1" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="835.1" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.1" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="835.1" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.1" y="734.0"></text>
</g>
<g>
<title>vfs_read (64 samples, 0.72%)</title><rect x="835.7" y="755.0" width="8.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="838.7" y="766.0"></text>
</g>
<g>
<title>__vfs_read (49 samples, 0.55%)</title><rect x="835.8" y="739.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="838.8" y="750.0"></text>
</g>
<g>
<title>new_sync_read (46 samples, 0.52%)</title><rect x="835.9" y="723.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.9" y="734.0"></text>
</g>
<g>
<title>sock_read_iter (46 samples, 0.52%)</title><rect x="835.9" y="707.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.9" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (44 samples, 0.50%)</title><rect x="836.2" y="691.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.2" y="702.0"></text>
</g>
<g>
<title>inet6_recvmsg (37 samples, 0.42%)</title><rect x="836.3" y="675.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="839.3" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (35 samples, 0.40%)</title><rect x="836.6" y="659.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.6" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.07%)</title><rect x="837.3" y="643.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.3" y="654.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="837.5" y="627.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.5" y="638.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="837.5" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.5" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="837.8" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.8" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.03%)</title><rect x="838.2" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="841.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="838.4" y="627.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.4" y="638.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="838.6" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.6" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="838.6" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="841.6" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.17%)</title><rect x="838.9" y="643.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="841.9" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.17%)</title><rect x="838.9" y="627.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.9" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (12 samples, 0.14%)</title><rect x="839.3" y="611.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="842.3" y="622.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="839.3" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="842.3" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="839.6" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="842.6" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.08%)</title><rect x="840.0" y="595.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="843.0" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.08%)</title><rect x="840.0" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="843.0" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="841.0" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="844.0" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.07%)</title><rect x="841.3" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="844.3" y="686.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (4 samples, 0.05%)</title><rect x="841.6" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="844.6" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.05%)</title><rect x="841.6" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.6" y="654.0"></text>
</g>
<g>
<title>sock_read_iter (2 samples, 0.02%)</title><rect x="842.1" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="845.1" y="734.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.16%)</title><rect x="842.4" y="739.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.4" y="750.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.14%)</title><rect x="842.6" y="723.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="845.6" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="842.8" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="845.8" y="718.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.05%)</title><rect x="842.8" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.8" y="702.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.03%)</title><rect x="842.9" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="845.9" y="686.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.07%)</title><rect x="843.4" y="707.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="846.4" y="718.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.02%)</title><rect x="843.8" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.8" y="702.0"></text>
</g>
<g>
<title>__errno_location (2 samples, 0.02%)</title><rect x="844.4" y="851.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="847.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.05%)</title><rect x="844.8" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="844.8" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="844.8" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="844.8" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/1275593332.accept (8 samples, 0.09%)</title><rect x="845.6" y="1155.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (6 samples, 0.07%)</title><rect x="845.8" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1793677472.run (6 samples, 0.07%)</title><rect x="845.8" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (6 samples, 0.07%)</title><rect x="845.8" y="1107.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (6 samples, 0.07%)</title><rect x="845.8" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.03%)</title><rect x="846.2" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="846.2" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="846.2" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="846.2" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (17 samples, 0.19%)</title><rect x="846.9" y="1171.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.9" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.11%)</title><rect x="847.8" y="1155.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.8" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.11%)</title><rect x="847.8" y="1139.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.11%)</title><rect x="847.8" y="1123.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.11%)</title><rect x="847.8" y="1107.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.09%)</title><rect x="847.8" y="1091.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.07%)</title><rect x="847.8" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.03%)</title><rect x="848.2" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$382/206654322.test (2 samples, 0.02%)</title><rect x="848.4" y="1043.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.4" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.02%)</title><rect x="848.6" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.6" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="848.9" y="1091.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (82 samples, 0.93%)</title><rect x="849.2" y="1171.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1724186899.run (62 samples, 0.70%)</title><rect x="849.4" y="1155.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (62 samples, 0.70%)</title><rect x="849.4" y="1139.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (5 samples, 0.06%)</title><rect x="849.4" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (5 samples, 0.06%)</title><rect x="849.4" y="1107.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.65%)</title><rect x="850.1" y="1123.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.63%)</title><rect x="850.2" y="1107.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.05%)</title><rect x="850.2" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.05%)</title><rect x="850.2" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.02%)</title><rect x="850.5" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (52 samples, 0.59%)</title><rect x="850.8" y="1091.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (52 samples, 0.59%)</title><rect x="850.8" y="1075.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (48 samples, 0.54%)</title><rect x="851.2" y="1059.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (48 samples, 0.54%)</title><rect x="851.2" y="1043.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (47 samples, 0.53%)</title><rect x="851.2" y="1027.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (37 samples, 0.42%)</title><rect x="852.5" y="1011.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (9 samples, 0.10%)</title><rect x="852.6" y="995.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (9 samples, 0.10%)</title><rect x="852.6" y="979.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (9 samples, 0.10%)</title><rect x="852.6" y="963.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.10%)</title><rect x="852.6" y="947.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.10%)</title><rect x="852.6" y="931.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.08%)</title><rect x="852.9" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.08%)</title><rect x="852.9" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.06%)</title><rect x="852.9" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="853.2" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="853.2" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="853.2" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.02%)</title><rect x="853.6" y="883.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="853.6" y="867.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (27 samples, 0.31%)</title><rect x="853.8" y="995.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.31%)</title><rect x="853.8" y="979.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.12%)</title><rect x="856.0" y="963.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.12%)</title><rect x="856.0" y="947.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.12%)</title><rect x="856.0" y="931.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.12%)</title><rect x="856.0" y="915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.03%)</title><rect x="856.1" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="856.3" y="883.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="856.3" y="867.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="856.3" y="851.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="856.3" y="835.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.02%)</title><rect x="856.3" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="856.3" y="803.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="859.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="856.5" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="856.5" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.05%)</title><rect x="856.9" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.05%)</title><rect x="856.9" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.05%)</title><rect x="856.9" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="856.9" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$270/68138278.run (18 samples, 0.20%)</title><rect x="857.7" y="1155.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (18 samples, 0.20%)</title><rect x="857.7" y="1139.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="858.0" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="858.0" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.get$Lambda (2 samples, 0.02%)</title><rect x="858.0" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="858.0" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.15%)</title><rect x="858.3" y="1123.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.14%)</title><rect x="858.4" y="1107.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.14%)</title><rect x="858.4" y="1091.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.05%)</title><rect x="858.9" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="859.1" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="859.1" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="859.1" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="859.1" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="859.1" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="859.2" y="979.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="862.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="859.2" y="963.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="859.2" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="862.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="859.5" y="1075.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="859.5" y="1059.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="859.7" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="859.7" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="859.7" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="859.7" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (107 samples, 1.21%)</title><rect x="860.1" y="1171.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.1" y="1182.0"></text>
</g>
<g>
<title>java/time/Instant.now (12 samples, 0.14%)</title><rect x="860.1" y="1155.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.1" y="1166.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (12 samples, 0.14%)</title><rect x="860.1" y="1139.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.06%)</title><rect x="861.1" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.1" y="1134.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.06%)</title><rect x="861.1" y="1107.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="864.1" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.05%)</title><rect x="861.2" y="1091.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="864.2" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="861.2" y="1075.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.2" y="1086.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="861.2" y="1059.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="864.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (95 samples, 1.08%)</title><rect x="861.7" y="1155.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.7" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (69 samples, 0.78%)</title><rect x="864.7" y="1139.0" width="9.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="867.7" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (68 samples, 0.77%)</title><rect x="864.8" y="1123.0" width="9.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="867.8" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (68 samples, 0.77%)</title><rect x="864.8" y="1107.0" width="9.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="867.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (57 samples, 0.65%)</title><rect x="864.8" y="1091.0" width="7.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="867.8" y="1102.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 0.12%)</title><rect x="872.4" y="1091.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="875.4" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.05%)</title><rect x="873.9" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.08%)</title><rect x="874.4" y="1171.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.4" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.07%)</title><rect x="874.6" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.6" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.06%)</title><rect x="874.7" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.06%)</title><rect x="874.7" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (38 samples, 0.43%)</title><rect x="875.4" y="1171.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.4" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="876.0" y="1155.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="879.0" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.07%)</title><rect x="876.0" y="1139.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="879.0" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.07%)</title><rect x="876.0" y="1123.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="879.0" y="1134.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="876.3" y="1107.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="879.3" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.11%)</title><rect x="876.8" y="1155.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.8" y="1166.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.11%)</title><rect x="876.8" y="1139.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.06%)</title><rect x="877.5" y="1123.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.5" y="1134.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.06%)</title><rect x="877.5" y="1107.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="880.5" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.05%)</title><rect x="877.6" y="1091.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="880.6" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="877.9" y="1075.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="880.9" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (4 samples, 0.05%)</title><rect x="878.2" y="1155.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.2" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.05%)</title><rect x="878.2" y="1139.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.2" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.05%)</title><rect x="878.2" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.2" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (12 samples, 0.14%)</title><rect x="878.7" y="1155.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.7" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (12 samples, 0.14%)</title><rect x="878.7" y="1139.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (12 samples, 0.14%)</title><rect x="878.7" y="1123.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.7" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (12 samples, 0.14%)</title><rect x="878.7" y="1107.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (204 samples, 2.31%)</title><rect x="880.4" y="1171.0" width="27.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.4" y="1182.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (192 samples, 2.17%)</title><rect x="882.0" y="1155.0" width="25.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.0" y="1166.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (188 samples, 2.13%)</title><rect x="882.6" y="1139.0" width="25.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.6" y="1150.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (103 samples, 1.17%)</title><rect x="883.2" y="1123.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.10%)</title><rect x="883.5" y="1107.0" width="13.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="886.5" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (96 samples, 1.09%)</title><rect x="883.6" y="1091.0" width="12.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="886.6" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.84%)</title><rect x="886.6" y="1075.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.02%)</title><rect x="886.6" y="1059.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="889.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.82%)</title><rect x="886.9" y="1059.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.9" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (69 samples, 0.78%)</title><rect x="887.3" y="1043.0" width="9.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="890.3" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (69 samples, 0.78%)</title><rect x="887.3" y="1027.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="890.3" y="1038.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.09%)</title><rect x="887.4" y="1011.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.4" y="1022.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.09%)</title><rect x="887.4" y="995.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.4" y="1006.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.08%)</title><rect x="887.5" y="979.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="890.5" y="990.0"></text>
</g>
<g>
<title>ep_poll (57 samples, 0.65%)</title><rect x="888.6" y="1011.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.6" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (34 samples, 0.38%)</title><rect x="889.4" y="995.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="892.4" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (27 samples, 0.31%)</title><rect x="889.9" y="979.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="892.9" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (19 samples, 0.22%)</title><rect x="890.9" y="963.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.9" y="974.0"></text>
</g>
<g>
<title>pipe_poll (3 samples, 0.03%)</title><rect x="891.7" y="947.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.7" y="958.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.10%)</title><rect x="892.1" y="947.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="895.1" y="958.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.03%)</title><rect x="893.5" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="896.5" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.03%)</title><rect x="893.9" y="995.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="896.9" y="1006.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="894.1" y="979.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="897.1" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.08%)</title><rect x="894.3" y="995.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="897.3" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.08%)</title><rect x="894.3" y="979.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="897.3" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.08%)</title><rect x="894.3" y="963.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="897.3" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.08%)</title><rect x="894.3" y="947.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="897.3" y="958.0"></text>
</g>
<g>
<title>select_estimate_accuracy (5 samples, 0.06%)</title><rect x="895.4" y="995.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="898.4" y="1006.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.02%)</title><rect x="895.7" y="979.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="898.7" y="990.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.05%)</title><rect x="896.5" y="1107.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="899.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (68 samples, 0.77%)</title><rect x="897.0" y="1123.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.0" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.08%)</title><rect x="897.0" y="1107.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.0" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.08%)</title><rect x="897.0" y="1091.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (52 samples, 0.59%)</title><rect x="897.9" y="1107.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (51 samples, 0.58%)</title><rect x="898.1" y="1091.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.53%)</title><rect x="898.5" y="1075.0" width="6.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="901.5" y="1086.0"></text>
</g>
<g>
<title>__read (47 samples, 0.53%)</title><rect x="898.5" y="1059.0" width="6.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="901.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.36%)</title><rect x="900.5" y="1043.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="903.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.36%)</title><rect x="900.5" y="1027.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="903.5" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (30 samples, 0.34%)</title><rect x="900.6" y="1011.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="903.6" y="1022.0"></text>
</g>
<g>
<title>ksys_read (29 samples, 0.33%)</title><rect x="900.7" y="995.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="903.7" y="1006.0"></text>
</g>
<g>
<title>vfs_read (27 samples, 0.31%)</title><rect x="901.0" y="979.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.0" y="990.0"></text>
</g>
<g>
<title>__vfs_read (21 samples, 0.24%)</title><rect x="901.0" y="963.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="904.0" y="974.0"></text>
</g>
<g>
<title>new_sync_read (21 samples, 0.24%)</title><rect x="901.0" y="947.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.0" y="958.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (5 samples, 0.06%)</title><rect x="901.3" y="931.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="904.3" y="942.0"></text>
</g>
<g>
<title>pipe_read (14 samples, 0.16%)</title><rect x="901.9" y="931.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.9" y="942.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.06%)</title><rect x="902.3" y="915.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="905.3" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.06%)</title><rect x="902.3" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="905.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="902.5" y="883.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="905.5" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="903.1" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.1" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="903.3" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.3" y="910.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.07%)</title><rect x="903.8" y="963.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.8" y="974.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="904.0" y="947.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.0" y="958.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="904.2" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="907.2" y="942.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="904.2" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.10%)</title><rect x="904.9" y="1107.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.05%)</title><rect x="904.9" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="905.0" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="905.0" y="1059.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (4 samples, 0.05%)</title><rect x="905.6" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (4 samples, 0.05%)</title><rect x="905.6" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (4 samples, 0.05%)</title><rect x="905.6" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.6" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="905.8" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="908.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.07%)</title><rect x="906.2" y="1123.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.07%)</title><rect x="906.2" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.07%)</title><rect x="906.2" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.06%)</title><rect x="906.4" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.06%)</title><rect x="906.4" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.05%)</title><rect x="907.2" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="910.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.deregister (3 samples, 0.03%)</title><rect x="907.3" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.channel (3 samples, 0.03%)</title><rect x="907.3" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (34 samples, 0.38%)</title><rect x="907.7" y="1171.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.7" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (34 samples, 0.38%)</title><rect x="907.7" y="1155.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.7" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (32 samples, 0.36%)</title><rect x="908.0" y="1139.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.0" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (20 samples, 0.23%)</title><rect x="908.0" y="1123.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.23%)</title><rect x="908.0" y="1107.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="911.0" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.23%)</title><rect x="908.0" y="1091.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="911.0" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.17%)</title><rect x="908.6" y="1075.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="911.6" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.17%)</title><rect x="908.6" y="1059.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="911.6" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (13 samples, 0.15%)</title><rect x="908.9" y="1043.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.9" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (13 samples, 0.15%)</title><rect x="908.9" y="1027.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="911.9" y="1038.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="908.9" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="911.9" y="1022.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="908.9" y="995.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.9" y="1006.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.11%)</title><rect x="909.2" y="1011.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.2" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (8 samples, 0.09%)</title><rect x="909.3" y="995.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="912.3" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.08%)</title><rect x="909.4" y="979.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.4" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.03%)</title><rect x="910.0" y="963.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="913.0" y="974.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.03%)</title><rect x="910.0" y="947.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="913.0" y="958.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="910.1" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="913.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (12 samples, 0.14%)</title><rect x="910.6" y="1123.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.03%)</title><rect x="910.6" y="1107.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.03%)</title><rect x="910.6" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (9 samples, 0.10%)</title><rect x="911.0" y="1107.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.0" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (9 samples, 0.10%)</title><rect x="911.0" y="1091.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="911.0" y="1075.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="914.0" y="1086.0"></text>
</g>
<g>
<title>__read (8 samples, 0.09%)</title><rect x="911.2" y="1059.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="914.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="911.4" y="1043.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="911.4" y="1027.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (6 samples, 0.07%)</title><rect x="911.4" y="1011.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="914.4" y="1022.0"></text>
</g>
<g>
<title>ksys_read (6 samples, 0.07%)</title><rect x="911.4" y="995.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="914.4" y="1006.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="911.4" y="979.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.4" y="990.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="911.4" y="963.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.4" y="974.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="911.4" y="947.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.4" y="958.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.02%)</title><rect x="911.6" y="931.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.6" y="942.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.02%)</title><rect x="911.6" y="915.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="914.6" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="911.6" y="899.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.6" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="911.6" y="883.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.6" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="911.8" y="963.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="914.8" y="974.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="911.8" y="947.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.07%)</title><rect x="912.4" y="1171.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.4" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.07%)</title><rect x="912.4" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.4" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.07%)</title><rect x="912.4" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (11 samples, 0.12%)</title><rect x="913.2" y="1171.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (11 samples, 0.12%)</title><rect x="913.2" y="1155.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.2" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.08%)</title><rect x="913.7" y="1139.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (7 samples, 0.08%)</title><rect x="913.7" y="1123.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (7 samples, 0.08%)</title><rect x="913.7" y="1107.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,504 samples, 17.03%)</title><rect x="914.6" y="1187.0" width="201.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.6" y="1198.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="914.9" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="914.9" y="1155.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.03%)</title><rect x="914.9" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (260 samples, 2.94%)</title><rect x="915.3" y="1171.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.3" y="1182.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (251 samples, 2.84%)</title><rect x="916.5" y="1155.0" width="33.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.5" y="1166.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.02%)</title><rect x="917.6" y="1139.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="920.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (232 samples, 2.63%)</title><rect x="917.8" y="1139.0" width="31.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="920.8" y="1150.0">[u..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.09%)</title><rect x="917.8" y="1123.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="920.8" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.09%)</title><rect x="917.8" y="1107.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="920.8" y="1118.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="918.9" y="1123.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.9" y="1134.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.03%)</title><rect x="919.4" y="1123.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="922.4" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (216 samples, 2.45%)</title><rect x="919.9" y="1123.0" width="28.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="922.9" y="1134.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (172 samples, 1.95%)</title><rect x="925.7" y="1107.0" width="23.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.7" y="1118.0">e..</text>
</g>
<g>
<title>do_syscall_64 (171 samples, 1.94%)</title><rect x="925.9" y="1091.0" width="22.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="928.9" y="1102.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (154 samples, 1.74%)</title><rect x="927.9" y="1075.0" width="20.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.9" y="1086.0"></text>
</g>
<g>
<title>do_epoll_wait (153 samples, 1.73%)</title><rect x="928.0" y="1059.0" width="20.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.0" y="1070.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.08%)</title><rect x="928.0" y="1043.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.0" y="1054.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.08%)</title><rect x="928.0" y="1027.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.0" y="1038.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.08%)</title><rect x="928.0" y="1011.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.0" y="1022.0"></text>
</g>
<g>
<title>ep_poll (140 samples, 1.59%)</title><rect x="928.9" y="1043.0" width="18.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.9" y="1054.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (121 samples, 1.37%)</title><rect x="929.5" y="1027.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="932.5" y="1038.0"></text>
</g>
<g>
<title>ep_send_events_proc (97 samples, 1.10%)</title><rect x="931.7" y="1011.0" width="13.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="934.7" y="1022.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (75 samples, 0.85%)</title><rect x="933.7" y="995.0" width="10.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.7" y="1006.0"></text>
</g>
<g>
<title>sock_poll (49 samples, 0.55%)</title><rect x="937.2" y="979.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.2" y="990.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.12%)</title><rect x="941.8" y="963.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="944.8" y="974.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="943.2" y="963.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.2" y="974.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.08%)</title><rect x="943.8" y="995.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="946.8" y="1006.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.08%)</title><rect x="944.7" y="1011.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="947.7" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.14%)</title><rect x="946.0" y="1027.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.0" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.14%)</title><rect x="946.0" y="1011.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.0" y="1022.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.10%)</title><rect x="946.4" y="995.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="949.4" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.09%)</title><rect x="946.6" y="979.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.6" y="990.0"></text>
</g>
<g>
<title>fput (5 samples, 0.06%)</title><rect x="947.8" y="1043.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.8" y="1054.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.06%)</title><rect x="947.8" y="1027.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="950.8" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.02%)</title><rect x="948.4" y="1075.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.4" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="948.8" y="1139.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="951.8" y="1150.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.07%)</title><rect x="949.2" y="1139.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="952.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,238 samples, 14.02%)</title><rect x="950.0" y="1171.0" width="165.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.0" y="1182.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,220 samples, 13.81%)</title><rect x="951.9" y="1155.0" width="163.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.9" y="1166.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (829 samples, 9.39%)</title><rect x="952.0" y="1139.0" width="110.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.0" y="1150.0">one/nio/http/..</text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="956.3" y="1123.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="959.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (705 samples, 7.98%)</title><rect x="956.6" y="1123.0" width="94.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.6" y="1134.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (705 samples, 7.98%)</title><rect x="956.6" y="1107.0" width="94.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.6" y="1118.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (684 samples, 7.74%)</title><rect x="956.6" y="1091.0" width="91.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.6" y="1102.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.02%)</title><rect x="956.6" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="959.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.14%)</title><rect x="956.9" y="1075.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.14%)</title><rect x="956.9" y="1059.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="959.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="957.4" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="957.4" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="958.2" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="958.2" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="958.2" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="958.2" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (670 samples, 7.59%)</title><rect x="958.5" y="1075.0" width="89.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.5" y="1086.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="958.7" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="958.7" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$140/1562537078.get$Lambda (3 samples, 0.03%)</title><rect x="958.7" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (2 samples, 0.02%)</title><rect x="958.9" y="1011.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.02%)</title><rect x="959.1" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="962.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (663 samples, 7.51%)</title><rect x="959.4" y="1059.0" width="88.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.4" y="1070.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$140/1562537078.process (663 samples, 7.51%)</title><rect x="959.4" y="1043.0" width="88.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.4" y="1054.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (663 samples, 7.51%)</title><rect x="959.4" y="1027.0" width="88.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.4" y="1038.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (663 samples, 7.51%)</title><rect x="959.4" y="1011.0" width="88.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.4" y="1022.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy (648 samples, 7.34%)</title><rect x="959.4" y="995.0" width="86.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.4" y="1006.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="959.5" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.5" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (34 samples, 0.38%)</title><rect x="960.2" y="979.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (28 samples, 0.32%)</title><rect x="960.2" y="963.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.2" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (27 samples, 0.31%)</title><rect x="960.2" y="947.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.2" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="963.3" y="931.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="966.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.06%)</title><rect x="964.1" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.remove (3 samples, 0.03%)</title><rect x="964.7" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (3 samples, 0.03%)</title><rect x="964.7" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.7" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.14%)</title><rect x="965.3" y="979.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.09%)</title><rect x="965.7" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.09%)</title><rect x="965.7" y="947.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.7" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.07%)</title><rect x="965.8" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.07%)</title><rect x="965.8" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.8" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (6 samples, 0.07%)</title><rect x="965.8" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$146/705152323.execute (141 samples, 1.60%)</title><rect x="966.9" y="979.0" width="18.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$9 (141 samples, 1.60%)</title><rect x="966.9" y="963.0" width="18.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localUpsert (141 samples, 1.60%)</title><rect x="966.9" y="947.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (141 samples, 1.60%)</title><rect x="966.9" y="931.0" width="18.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (141 samples, 1.60%)</title><rect x="966.9" y="915.0" width="18.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (5 samples, 0.06%)</title><rect x="967.0" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (2 samples, 0.02%)</title><rect x="967.4" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (4 samples, 0.05%)</title><rect x="967.7" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (2 samples, 0.02%)</title><rect x="967.9" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 1.47%)</title><rect x="968.3" y="899.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (130 samples, 1.47%)</title><rect x="968.3" y="883.0" width="17.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (11 samples, 0.12%)</title><rect x="968.3" y="867.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (11 samples, 0.12%)</title><rect x="968.3" y="851.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (11 samples, 0.12%)</title><rect x="968.3" y="835.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (11 samples, 0.12%)</title><rect x="968.3" y="819.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.11%)</title><rect x="969.8" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.11%)</title><rect x="969.8" y="851.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.03%)</title><rect x="970.8" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.03%)</title><rect x="970.8" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.03%)</title><rect x="970.8" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.03%)</title><rect x="970.8" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (109 samples, 1.23%)</title><rect x="971.2" y="867.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (109 samples, 1.23%)</title><rect x="971.2" y="851.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (109 samples, 1.23%)</title><rect x="971.2" y="835.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (109 samples, 1.23%)</title><rect x="971.2" y="819.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (107 samples, 1.21%)</title><rect x="971.4" y="803.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.4" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.17%)</title><rect x="971.8" y="787.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="974.8" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.09%)</title><rect x="972.0" y="771.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="975.0" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.05%)</title><rect x="973.3" y="771.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="976.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (83 samples, 0.94%)</title><rect x="973.8" y="787.0" width="11.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="976.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.77%)</title><rect x="975.8" y="771.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.76%)</title><rect x="976.0" y="755.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="979.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 0.74%)</title><rect x="976.2" y="739.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="979.2" y="750.0"></text>
</g>
<g>
<title>do_futex (62 samples, 0.70%)</title><rect x="976.4" y="723.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="979.4" y="734.0"></text>
</g>
<g>
<title>futex_wake (58 samples, 0.66%)</title><rect x="976.8" y="707.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="979.8" y="718.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="977.3" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="980.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (51 samples, 0.58%)</title><rect x="977.7" y="691.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="980.7" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (51 samples, 0.58%)</title><rect x="977.7" y="675.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 0.58%)</title><rect x="977.7" y="659.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.7" y="670.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="984.6" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="984.9" y="787.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="987.9" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.02%)</title><rect x="985.3" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$153/780005617.resolve (20 samples, 0.23%)</title><rect x="985.7" y="979.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveChange (20 samples, 0.23%)</title><rect x="985.7" y="963.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="988.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.06%)</title><rect x="985.7" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.06%)</title><rect x="985.7" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="985.7" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (4 samples, 0.05%)</title><rect x="985.7" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (15 samples, 0.17%)</title><rect x="986.4" y="947.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.4" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (15 samples, 0.17%)</title><rect x="986.4" y="931.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$204/334543574.accept (14 samples, 0.16%)</title><rect x="986.5" y="915.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (14 samples, 0.16%)</title><rect x="986.5" y="899.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="986.5" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="986.5" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.12%)</title><rect x="986.9" y="883.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.11%)</title><rect x="987.1" y="867.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="990.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.11%)</title><rect x="987.1" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (4 samples, 0.05%)</title><rect x="987.9" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (4 samples, 0.05%)</title><rect x="987.9" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.02%)</title><rect x="987.9" y="803.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="990.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="987.9" y="787.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="990.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.02%)</title><rect x="988.1" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (354 samples, 4.01%)</title><rect x="988.4" y="979.0" width="47.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.4" y="990.0">ru/m..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (352 samples, 3.99%)</title><rect x="988.5" y="963.0" width="47.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.5" y="974.0">java..</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.05%)</title><rect x="988.7" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.05%)</title><rect x="988.7" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.03%)</title><rect x="989.2" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="989.2" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.2" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="989.2" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="989.2" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$164/1671372122.accept (344 samples, 3.89%)</title><rect x="989.6" y="947.0" width="46.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.6" y="958.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (344 samples, 3.89%)</title><rect x="989.6" y="931.0" width="46.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.6" y="942.0">ru/m..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (142 samples, 1.61%)</title><rect x="989.9" y="915.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (141 samples, 1.60%)</title><rect x="990.0" y="899.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (141 samples, 1.60%)</title><rect x="990.0" y="883.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (141 samples, 1.60%)</title><rect x="990.0" y="867.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (67 samples, 0.76%)</title><rect x="990.1" y="851.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="993.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.03%)</title><rect x="990.1" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.1" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.10%)</title><rect x="990.5" y="835.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="993.5" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.02%)</title><rect x="990.5" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="993.5" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.02%)</title><rect x="990.5" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.02%)</title><rect x="990.5" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="990.5" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="993.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.08%)</title><rect x="990.8" y="819.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.06%)</title><rect x="991.1" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.05%)</title><rect x="991.1" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.05%)</title><rect x="991.1" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.02%)</title><rect x="991.1" y="755.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.02%)</title><rect x="991.1" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="991.3" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.3" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (21 samples, 0.24%)</title><rect x="991.7" y="835.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.7" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (21 samples, 0.24%)</title><rect x="991.7" y="819.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.7" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (17 samples, 0.19%)</title><rect x="992.3" y="803.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (17 samples, 0.19%)</title><rect x="992.3" y="787.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (17 samples, 0.19%)</title><rect x="992.3" y="771.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="995.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.19%)</title><rect x="992.3" y="755.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (12 samples, 0.14%)</title><rect x="992.5" y="739.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (12 samples, 0.14%)</title><rect x="992.5" y="723.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="995.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (12 samples, 0.14%)</title><rect x="992.5" y="707.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$96/258931371.test (11 samples, 0.12%)</title><rect x="992.7" y="691.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (11 samples, 0.12%)</title><rect x="992.7" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="995.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (2 samples, 0.02%)</title><rect x="992.7" y="659.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="995.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.02%)</title><rect x="992.7" y="643.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.7" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.02%)</title><rect x="992.7" y="627.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.02%)</title><rect x="992.7" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.02%)</title><rect x="992.7" y="595.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="992.7" y="579.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.02%)</title><rect x="992.7" y="563.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.02%)</title><rect x="992.9" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (7 samples, 0.08%)</title><rect x="993.2" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="993.6" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.03%)</title><rect x="994.1" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="997.1" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (2 samples, 0.02%)</title><rect x="994.3" y="723.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.3" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.02%)</title><rect x="994.3" y="707.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.02%)</title><rect x="994.3" y="691.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.02%)</title><rect x="994.3" y="675.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="997.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.05%)</title><rect x="994.5" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.05%)</title><rect x="994.5" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.5" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.03%)</title><rect x="994.7" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (26 samples, 0.29%)</title><rect x="995.1" y="835.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="846.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (26 samples, 0.29%)</title><rect x="995.1" y="819.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="995.2" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="995.2" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="995.2" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.07%)</title><rect x="995.5" y="803.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.07%)</title><rect x="995.5" y="787.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="996.0" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.0" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (17 samples, 0.19%)</title><rect x="996.3" y="803.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.3" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (17 samples, 0.19%)</title><rect x="996.3" y="787.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.3" y="798.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.19%)</title><rect x="996.3" y="771.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="999.3" y="782.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.19%)</title><rect x="996.3" y="755.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.08%)</title><rect x="996.3" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.08%)</title><rect x="996.3" y="723.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.08%)</title><rect x="996.3" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.3" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="996.9" y="691.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="999.9" y="702.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (10 samples, 0.11%)</title><rect x="997.2" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.2" y="750.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.03%)</title><rect x="997.7" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.7" y="734.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.03%)</title><rect x="997.7" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.7" y="718.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.02%)</title><rect x="997.9" y="691.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.02%)</title><rect x="997.9" y="675.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.9" y="686.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.02%)</title><rect x="998.1" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.02%)</title><rect x="998.1" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.05%)</title><rect x="998.5" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (32 samples, 0.36%)</title><rect x="999.1" y="851.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (3 samples, 0.03%)</title><rect x="999.1" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.03%)</title><rect x="999.1" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.03%)</title><rect x="999.1" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (3 samples, 0.03%)</title><rect x="999.1" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (3 samples, 0.03%)</title><rect x="999.1" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.1" y="782.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (3 samples, 0.03%)</title><rect x="999.1" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (29 samples, 0.33%)</title><rect x="999.5" y="835.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (23 samples, 0.26%)</title><rect x="1000.3" y="819.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (6 samples, 0.07%)</title><rect x="1000.9" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (3 samples, 0.03%)</title><rect x="1001.1" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.arrayContentsEq (3 samples, 0.03%)</title><rect x="1001.1" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2 samples, 0.02%)</title><rect x="1001.5" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.5" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (2 samples, 0.02%)</title><rect x="1001.5" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.5" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (2 samples, 0.02%)</title><rect x="1001.5" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.5" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1001.5" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1004.5" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (11 samples, 0.12%)</title><rect x="1001.8" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.8" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (11 samples, 0.12%)</title><rect x="1001.8" y="787.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.8" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (6 samples, 0.07%)</title><rect x="1001.8" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.8" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (6 samples, 0.07%)</title><rect x="1001.8" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.8" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (6 samples, 0.07%)</title><rect x="1001.8" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (6 samples, 0.07%)</title><rect x="1001.8" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor12.newInstance (2 samples, 0.02%)</title><rect x="1001.9" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (3 samples, 0.03%)</title><rect x="1002.2" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (5 samples, 0.06%)</title><rect x="1002.6" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (41 samples, 0.46%)</title><rect x="1003.4" y="851.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (31 samples, 0.35%)</title><rect x="1003.4" y="835.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.34%)</title><rect x="1003.4" y="819.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.02%)</title><rect x="1003.5" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (27 samples, 0.31%)</title><rect x="1003.8" y="803.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.17%)</title><rect x="1004.4" y="787.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.16%)</title><rect x="1004.6" y="771.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.16%)</title><rect x="1004.6" y="755.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.16%)</title><rect x="1004.6" y="739.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.16%)</title><rect x="1004.6" y="723.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.16%)</title><rect x="1004.6" y="707.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="1004.6" y="691.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1007.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.14%)</title><rect x="1004.8" y="691.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1007.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="1005.1" y="675.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1008.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="1005.1" y="659.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1008.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.11%)</title><rect x="1005.1" y="643.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1008.1" y="654.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.11%)</title><rect x="1005.1" y="627.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.1" y="638.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.11%)</title><rect x="1005.1" y="611.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1008.1" y="622.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.09%)</title><rect x="1005.4" y="595.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.09%)</title><rect x="1005.4" y="579.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.09%)</title><rect x="1005.4" y="563.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1008.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.06%)</title><rect x="1006.4" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.06%)</title><rect x="1006.4" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="1007.1" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="1007.1" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="1007.1" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="1007.1" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.02%)</title><rect x="1007.1" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="1007.1" y="707.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1010.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (10 samples, 0.11%)</title><rect x="1007.5" y="835.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="1008.3" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="1008.3" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$161/1989281955.apply (200 samples, 2.26%)</title><rect x="1008.8" y="915.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.8" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$12 (200 samples, 2.26%)</title><rect x="1008.8" y="899.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.8" y="910.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (28 samples, 0.32%)</title><rect x="1009.4" y="883.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (28 samples, 0.32%)</title><rect x="1009.4" y="867.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (26 samples, 0.29%)</title><rect x="1009.6" y="851.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (26 samples, 0.29%)</title><rect x="1009.6" y="835.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.6" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (19 samples, 0.22%)</title><rect x="1010.4" y="819.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.4" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (17 samples, 0.19%)</title><rect x="1010.6" y="803.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.6" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.19%)</title><rect x="1010.6" y="787.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.6" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (12 samples, 0.14%)</title><rect x="1010.8" y="771.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.8" y="782.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.08%)</title><rect x="1011.2" y="755.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1014.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (2 samples, 0.02%)</title><rect x="1012.2" y="755.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1015.2" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.03%)</title><rect x="1012.4" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.4" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (3 samples, 0.03%)</title><rect x="1012.4" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.4" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.03%)</title><rect x="1012.4" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method (3 samples, 0.03%)</title><rect x="1013.1" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.03%)</title><rect x="1013.1" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.07%)</title><rect x="1013.5" y="883.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.5" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1013.8" y="867.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1016.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="1014.0" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.requestBuilderFor (158 samples, 1.79%)</title><rect x="1014.4" y="883.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.4" y="894.0">r..</text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.03%)</title><rect x="1014.4" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1014.4" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1014.4" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1014.4" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.4" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1014.4" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.4" y="814.0"></text>
</g>
<g>
<title>java/time/Duration.dividedBy (18 samples, 0.20%)</title><rect x="1014.8" y="867.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.8" y="878.0"></text>
</g>
<g>
<title>java/time/Duration.create (13 samples, 0.15%)</title><rect x="1015.0" y="851.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.0" y="862.0"></text>
</g>
<g>
<title>java/math/BigDecimal.movePointRight (2 samples, 0.02%)</title><rect x="1015.0" y="835.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.0" y="846.0"></text>
</g>
<g>
<title>java/math/BigDecimal.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1015.0" y="819.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1015.0" y="803.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.0" y="814.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainder (8 samples, 0.09%)</title><rect x="1015.4" y="835.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.4" y="846.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainderKnuth (8 samples, 0.09%)</title><rect x="1015.4" y="819.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1018.4" y="830.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (6 samples, 0.07%)</title><rect x="1015.4" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.4" y="814.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (4 samples, 0.05%)</title><rect x="1015.6" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.6" y="798.0"></text>
</g>
<g>
<title>jint_arraycopy (2 samples, 0.02%)</title><rect x="1015.8" y="771.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1018.8" y="782.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.toBigInteger (2 samples, 0.02%)</title><rect x="1016.2" y="803.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.2" y="814.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (2 samples, 0.02%)</title><rect x="1016.4" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1019.4" y="846.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (2 samples, 0.02%)</title><rect x="1016.4" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1019.4" y="830.0"></text>
</g>
<g>
<title>java/time/Duration.toBigDecimalSeconds (4 samples, 0.05%)</title><rect x="1016.7" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.7" y="862.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (3 samples, 0.03%)</title><rect x="1016.7" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.7" y="846.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (3 samples, 0.03%)</title><rect x="1016.7" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.7" y="830.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (3 samples, 0.03%)</title><rect x="1016.7" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.7" y="814.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (2 samples, 0.02%)</title><rect x="1016.7" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (33 samples, 0.37%)</title><rect x="1017.2" y="867.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (33 samples, 0.37%)</title><rect x="1017.2" y="851.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (28 samples, 0.32%)</title><rect x="1017.2" y="835.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (5 samples, 0.06%)</title><rect x="1017.2" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.06%)</title><rect x="1017.2" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.2" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.05%)</title><rect x="1017.4" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1020.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.05%)</title><rect x="1017.4" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.05%)</title><rect x="1017.4" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="1017.4" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.4" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="1017.4" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="1017.4" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="1017.4" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.05%)</title><rect x="1017.4" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (10 samples, 0.11%)</title><rect x="1017.9" y="819.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="1017.9" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.06%)</title><rect x="1018.6" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (13 samples, 0.15%)</title><rect x="1019.3" y="819.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.12%)</title><rect x="1019.3" y="803.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="1020.7" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1023.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (5 samples, 0.06%)</title><rect x="1021.0" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.0" y="846.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (5 samples, 0.06%)</title><rect x="1021.0" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.0" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.02%)</title><rect x="1021.0" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="1021.0" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.provideURI (103 samples, 1.17%)</title><rect x="1021.8" y="867.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (103 samples, 1.17%)</title><rect x="1021.8" y="851.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (103 samples, 1.17%)</title><rect x="1021.8" y="835.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1021.8" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1021.8" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.8" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (3 samples, 0.03%)</title><rect x="1022.1" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1025.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="1022.1" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1025.1" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.05%)</title><rect x="1022.5" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.5" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.02%)</title><rect x="1022.6" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.6" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (74 samples, 0.84%)</title><rect x="1023.0" y="819.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="1023.0" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.0" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (8 samples, 0.09%)</title><rect x="1023.8" y="803.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.8" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.06%)</title><rect x="1024.2" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="1024.2" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.2" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (37 samples, 0.42%)</title><rect x="1024.9" y="803.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="1025.1" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="1025.1" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.1" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (14 samples, 0.16%)</title><rect x="1025.7" y="787.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.7" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.03%)</title><rect x="1025.8" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.8" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.03%)</title><rect x="1025.8" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.8" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.06%)</title><rect x="1026.2" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.2" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="1026.3" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.3" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.02%)</title><rect x="1026.9" y="771.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.9" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.02%)</title><rect x="1026.9" y="755.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1029.9" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.02%)</title><rect x="1026.9" y="739.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.9" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.03%)</title><rect x="1027.1" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="1027.1" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.1" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (17 samples, 0.19%)</title><rect x="1027.5" y="787.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.09%)</title><rect x="1027.9" y="771.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.07%)</title><rect x="1029.0" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.07%)</title><rect x="1029.0" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.07%)</title><rect x="1029.0" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.0" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (23 samples, 0.26%)</title><rect x="1029.8" y="803.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="1030.9" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.11%)</title><rect x="1031.4" y="787.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.11%)</title><rect x="1031.4" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.11%)</title><rect x="1031.4" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.4" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (20 samples, 0.23%)</title><rect x="1032.9" y="819.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.16%)</title><rect x="1032.9" y="803.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.02%)</title><rect x="1034.1" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1037.1" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="1034.4" y="787.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1037.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.07%)</title><rect x="1034.8" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1034.8" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.02%)</title><rect x="1035.3" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.isLocal (6 samples, 0.07%)</title><rect x="1035.7" y="979.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (6 samples, 0.07%)</title><rect x="1035.7" y="963.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1038.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (6 samples, 0.07%)</title><rect x="1035.7" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.07%)</title><rect x="1035.7" y="931.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1038.7" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (3 samples, 0.03%)</title><rect x="1036.1" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.nodesForKey (71 samples, 0.80%)</title><rect x="1036.5" y="979.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.addReplicasForKey (56 samples, 0.63%)</title><rect x="1038.5" y="963.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.add (30 samples, 0.34%)</title><rect x="1038.8" y="947.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.02%)</title><rect x="1039.4" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (23 samples, 0.26%)</title><rect x="1039.7" y="931.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.03%)</title><rect x="1039.7" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (20 samples, 0.23%)</title><rect x="1040.1" y="915.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="1041.4" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.05%)</title><rect x="1042.0" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (2 samples, 0.02%)</title><rect x="1042.5" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (14 samples, 0.16%)</title><rect x="1042.8" y="947.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.8" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (14 samples, 0.16%)</title><rect x="1042.8" y="931.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (14 samples, 0.16%)</title><rect x="1042.8" y="915.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.07%)</title><rect x="1043.8" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.02%)</title><rect x="1044.4" y="883.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.4" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2 samples, 0.02%)</title><rect x="1044.6" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (7 samples, 0.08%)</title><rect x="1045.0" y="947.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.0" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (7 samples, 0.08%)</title><rect x="1045.0" y="931.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (7 samples, 0.08%)</title><rect x="1045.0" y="915.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (7 samples, 0.08%)</title><rect x="1045.0" y="899.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapString (15 samples, 0.17%)</title><rect x="1046.0" y="995.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.16%)</title><rect x="1046.0" y="979.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.16%)</title><rect x="1046.0" y="963.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.0" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.16%)</title><rect x="1046.0" y="947.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1049.0" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.16%)</title><rect x="1046.0" y="931.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.0" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.16%)</title><rect x="1046.0" y="915.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.11%)</title><rect x="1046.0" y="899.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1049.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="1047.3" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.3" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1047.3" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (21 samples, 0.24%)</title><rect x="1048.0" y="1091.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1051.0" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.24%)</title><rect x="1048.0" y="1075.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.18%)</title><rect x="1048.0" y="1059.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.03%)</title><rect x="1049.7" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.06%)</title><rect x="1050.1" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.06%)</title><rect x="1050.1" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.06%)</title><rect x="1050.1" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (31 samples, 0.35%)</title><rect x="1050.8" y="1123.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.8" y="1134.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (4 samples, 0.05%)</title><rect x="1051.1" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.1" y="1118.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="1051.6" y="1107.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1054.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.08%)</title><rect x="1052.1" y="1107.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1052.3" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1052.3" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="1052.3" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1052.3" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.09%)</title><rect x="1053.1" y="1107.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.09%)</title><rect x="1053.1" y="1091.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.07%)</title><rect x="1054.1" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.23%)</title><rect x="1054.9" y="1123.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.19%)</title><rect x="1055.3" y="1107.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (17 samples, 0.19%)</title><rect x="1055.3" y="1091.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (8 samples, 0.09%)</title><rect x="1056.0" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (8 samples, 0.09%)</title><rect x="1056.0" y="1059.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (8 samples, 0.09%)</title><rect x="1056.0" y="1043.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.0" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="1057.2" y="1075.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1060.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.44%)</title><rect x="1057.6" y="1123.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.03%)</title><rect x="1058.4" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.34%)</title><rect x="1058.8" y="1107.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.8" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1062.1" y="1091.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1065.1" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1062.1" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1065.1" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="1062.1" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1062.1" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1065.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1062.5" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1062.5" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.02%)</title><rect x="1062.5" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.5" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="1062.5" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1065.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (390 samples, 4.42%)</title><rect x="1062.8" y="1139.0" width="52.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.8" y="1150.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (389 samples, 4.40%)</title><rect x="1062.9" y="1123.0" width="52.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.9" y="1134.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (31 samples, 0.35%)</title><rect x="1063.2" y="1107.0" width="4.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1066.2" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="1063.6" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1066.6" y="1102.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="1064.0" y="1091.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1067.0" y="1102.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.18%)</title><rect x="1064.7" y="1091.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1067.7" y="1102.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (8 samples, 0.09%)</title><rect x="1065.3" y="1075.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.3" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (3 samples, 0.03%)</title><rect x="1066.4" y="1075.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1069.4" y="1086.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.05%)</title><rect x="1066.8" y="1091.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1069.8" y="1102.0"></text>
</g>
<g>
<title>__recv (349 samples, 3.95%)</title><rect x="1067.5" y="1107.0" width="46.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1070.5" y="1118.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (311 samples, 3.52%)</title><rect x="1072.6" y="1091.0" width="41.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.6" y="1102.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (310 samples, 3.51%)</title><rect x="1072.7" y="1075.0" width="41.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1075.7" y="1086.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (294 samples, 3.33%)</title><rect x="1074.8" y="1059.0" width="39.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1077.8" y="1070.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (292 samples, 3.31%)</title><rect x="1074.8" y="1043.0" width="39.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1077.8" y="1054.0">__s..</text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="1074.8" y="1027.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1077.8" y="1038.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="1074.8" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.8" y="1022.0"></text>
</g>
<g>
<title>sock_recvmsg (286 samples, 3.24%)</title><rect x="1075.4" y="1027.0" width="38.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1078.4" y="1038.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (271 samples, 3.07%)</title><rect x="1075.5" y="1011.0" width="36.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.5" y="1022.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (269 samples, 3.05%)</title><rect x="1075.8" y="995.0" width="35.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1078.8" y="1006.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.09%)</title><rect x="1076.2" y="979.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1079.2" y="990.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.08%)</title><rect x="1076.3" y="963.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1079.3" y="974.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="1076.4" y="947.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1079.4" y="958.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.05%)</title><rect x="1076.7" y="947.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1079.7" y="958.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="1076.7" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1079.7" y="942.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.02%)</title><rect x="1077.0" y="931.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1080.0" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="1077.2" y="979.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1080.2" y="990.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.09%)</title><rect x="1077.8" y="979.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1080.8" y="990.0"></text>
</g>
<g>
<title>__release_sock (5 samples, 0.06%)</title><rect x="1077.9" y="963.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1080.9" y="974.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.06%)</title><rect x="1077.9" y="947.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1080.9" y="958.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.05%)</title><rect x="1078.0" y="931.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1081.0" y="942.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (22 samples, 0.25%)</title><rect x="1078.8" y="979.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1081.8" y="990.0"></text>
</g>
<g>
<title>__skb_datagram_iter (22 samples, 0.25%)</title><rect x="1078.8" y="963.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1081.8" y="974.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.22%)</title><rect x="1079.2" y="947.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1082.2" y="958.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.07%)</title><rect x="1079.4" y="931.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1082.4" y="942.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.11%)</title><rect x="1080.2" y="931.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1083.2" y="942.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.07%)</title><rect x="1080.3" y="915.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.3" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="1081.1" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.1" y="926.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.02%)</title><rect x="1081.5" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1084.5" y="942.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (214 samples, 2.42%)</title><rect x="1081.8" y="979.0" width="28.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1084.8" y="990.0">tc..</text>
</g>
<g>
<title>tcp_send_ack (210 samples, 2.38%)</title><rect x="1082.3" y="963.0" width="28.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1085.3" y="974.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.47 (210 samples, 2.38%)</title><rect x="1082.3" y="947.0" width="28.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1085.3" y="958.0">__..</text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.17%)</title><rect x="1082.3" y="931.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1085.3" y="942.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (9 samples, 0.10%)</title><rect x="1082.6" y="915.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1085.6" y="926.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.10%)</title><rect x="1082.6" y="899.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1085.6" y="910.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="1083.5" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.5" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="1083.8" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1086.8" y="926.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="1084.1" y="915.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1087.1" y="926.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="1084.1" y="899.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1087.1" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (193 samples, 2.19%)</title><rect x="1084.3" y="931.0" width="25.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1087.3" y="942.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (188 samples, 2.13%)</title><rect x="1085.0" y="915.0" width="25.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1088.0" y="926.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (183 samples, 2.07%)</title><rect x="1085.0" y="899.0" width="24.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1088.0" y="910.0">_..</text>
</g>
<g>
<title>ip_local_out (180 samples, 2.04%)</title><rect x="1085.3" y="883.0" width="24.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1088.3" y="894.0">i..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="1085.5" y="867.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.5" y="878.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="1085.5" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1088.5" y="862.0"></text>
</g>
<g>
<title>ip_output (173 samples, 1.96%)</title><rect x="1086.1" y="867.0" width="23.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.1" y="878.0">i..</text>
</g>
<g>
<title>ip_finish_output (162 samples, 1.83%)</title><rect x="1086.2" y="851.0" width="21.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1089.2" y="862.0">i..</text>
</g>
<g>
<title>__ip_finish_output (158 samples, 1.79%)</title><rect x="1086.3" y="835.0" width="21.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1089.3" y="846.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (157 samples, 1.78%)</title><rect x="1086.5" y="819.0" width="20.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1089.5" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (130 samples, 1.47%)</title><rect x="1087.3" y="803.0" width="17.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1090.3" y="814.0"></text>
</g>
<g>
<title>do_softirq.part.20 (129 samples, 1.46%)</title><rect x="1087.4" y="787.0" width="17.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1090.4" y="798.0"></text>
</g>
<g>
<title>do_softirq_own_stack (128 samples, 1.45%)</title><rect x="1087.5" y="771.0" width="17.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1090.5" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (127 samples, 1.44%)</title><rect x="1087.5" y="755.0" width="17.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1090.5" y="766.0"></text>
</g>
<g>
<title>net_rx_action (121 samples, 1.37%)</title><rect x="1088.2" y="739.0" width="16.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.2" y="750.0"></text>
</g>
<g>
<title>process_backlog (120 samples, 1.36%)</title><rect x="1088.3" y="723.0" width="16.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1091.3" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb (118 samples, 1.34%)</title><rect x="1088.6" y="707.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.6" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.02%)</title><rect x="1088.6" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.6" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (116 samples, 1.31%)</title><rect x="1088.9" y="691.0" width="15.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1091.9" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.07%)</title><rect x="1089.0" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1092.0" y="686.0"></text>
</g>
<g>
<title>ip_rcv (108 samples, 1.22%)</title><rect x="1089.8" y="675.0" width="14.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1092.8" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.03%)</title><rect x="1089.9" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.9" y="670.0"></text>
</g>
<g>
<title>ip_rcv_finish (104 samples, 1.18%)</title><rect x="1090.3" y="659.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1093.3" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver (100 samples, 1.13%)</title><rect x="1090.5" y="643.0" width="13.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.5" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (100 samples, 1.13%)</title><rect x="1090.5" y="627.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1093.5" y="638.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (100 samples, 1.13%)</title><rect x="1090.5" y="611.0" width="13.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1093.5" y="622.0"></text>
</g>
<g>
<title>tcp_v4_rcv (97 samples, 1.10%)</title><rect x="1090.9" y="595.0" width="12.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1093.9" y="606.0"></text>
</g>
<g>
<title>__inet_lookup_established (13 samples, 0.15%)</title><rect x="1091.1" y="579.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.1" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="1092.9" y="579.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1095.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="1093.1" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1096.1" y="590.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.15%)</title><rect x="1093.4" y="579.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1096.4" y="590.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (9 samples, 0.10%)</title><rect x="1093.8" y="563.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1096.8" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (8 samples, 0.09%)</title><rect x="1093.9" y="547.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1096.9" y="558.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.03%)</title><rect x="1094.3" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1097.3" y="542.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.02%)</title><rect x="1094.3" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1097.3" y="526.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (2 samples, 0.02%)</title><rect x="1094.7" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1097.7" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (63 samples, 0.71%)</title><rect x="1095.3" y="579.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.3" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (61 samples, 0.69%)</title><rect x="1095.5" y="563.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1098.5" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.10%)</title><rect x="1095.7" y="547.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1098.7" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.08%)</title><rect x="1095.7" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1098.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.07%)</title><rect x="1095.8" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.8" y="526.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="1096.6" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.6" y="542.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.02%)</title><rect x="1096.9" y="547.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1099.9" y="558.0"></text>
</g>
<g>
<title>tcp_ack (33 samples, 0.37%)</title><rect x="1097.3" y="547.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1100.3" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.17%)</title><rect x="1098.6" y="531.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1101.6" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.06%)</title><rect x="1098.6" y="515.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1101.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="1098.7" y="499.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1101.7" y="510.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="1099.0" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.0" y="494.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.11%)</title><rect x="1099.3" y="515.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.3" y="526.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.09%)</title><rect x="1099.4" y="499.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1102.4" y="510.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.07%)</title><rect x="1099.7" y="483.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1102.7" y="494.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.07%)</title><rect x="1099.7" y="467.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1102.7" y="478.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="1100.0" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.0" y="462.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (4 samples, 0.05%)</title><rect x="1100.8" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1103.8" y="542.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.02%)</title><rect x="1101.4" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1104.4" y="542.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.03%)</title><rect x="1101.7" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.7" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.03%)</title><rect x="1102.1" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1105.1" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="1102.1" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1105.1" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1102.1" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.1" y="526.0"></text>
</g>
<g>
<title>tcp_rack_advance (3 samples, 0.03%)</title><rect x="1102.5" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.5" y="558.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.02%)</title><rect x="1103.4" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1106.4" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.02%)</title><rect x="1104.0" y="643.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1107.0" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.24%)</title><rect x="1104.6" y="803.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.6" y="814.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.23%)</title><rect x="1104.6" y="787.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1107.6" y="798.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="1105.4" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1108.4" y="782.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.08%)</title><rect x="1105.7" y="771.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.7" y="782.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.06%)</title><rect x="1106.0" y="755.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.0" y="766.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.05%)</title><rect x="1106.1" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1109.1" y="750.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="1106.1" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1109.1" y="734.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="1106.4" y="723.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.4" y="734.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="1106.4" y="707.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1109.4" y="718.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.02%)</title><rect x="1106.8" y="771.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1109.8" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="1107.6" y="835.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1110.6" y="846.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.10%)</title><rect x="1107.8" y="851.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1110.8" y="862.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (8 samples, 0.09%)</title><rect x="1108.0" y="835.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.0" y="846.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8 samples, 0.09%)</title><rect x="1108.0" y="819.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1111.0" y="830.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (5 samples, 0.06%)</title><rect x="1108.4" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.4" y="814.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.03%)</title><rect x="1108.4" y="787.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.4" y="798.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.02%)</title><rect x="1108.8" y="787.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1111.8" y="798.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.02%)</title><rect x="1108.8" y="771.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.8" y="782.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.03%)</title><rect x="1109.6" y="899.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.6" y="910.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.09%)</title><rect x="1110.4" y="979.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.4" y="990.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.05%)</title><rect x="1110.9" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.9" y="974.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1111.2" y="947.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.2" y="958.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.14%)</title><rect x="1111.7" y="1011.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.7" y="1022.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.08%)</title><rect x="1111.7" y="995.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.7" y="1006.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.08%)</title><rect x="1111.7" y="979.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1114.7" y="990.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.08%)</title><rect x="1111.7" y="963.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1114.7" y="974.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (5 samples, 0.06%)</title><rect x="1112.6" y="995.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1115.6" y="1006.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.06%)</title><rect x="1112.6" y="979.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.6" y="990.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="1113.6" y="1027.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1116.6" y="1038.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="1113.8" y="1043.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1116.8" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.07%)</title><rect x="1114.1" y="1107.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1117.1" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="1114.9" y="1155.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1117.9" y="1166.0"></text>
</g>
<g>
<title>start_thread (557 samples, 6.31%)</title><rect x="1115.6" y="1187.0" width="74.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1118.6" y="1198.0">start_th..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (557 samples, 6.31%)</title><rect x="1115.6" y="1171.0" width="74.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1118.6" y="1182.0">thread_n..</text>
</g>
<g>
<title>Thread::call_run() (557 samples, 6.31%)</title><rect x="1115.6" y="1155.0" width="74.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.6" y="1166.0">Thread::..</text>
</g>
<g>
<title>GangWorker::loop() (544 samples, 6.16%)</title><rect x="1115.6" y="1139.0" width="72.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.6" y="1150.0">GangWork..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (232 samples, 2.63%)</title><rect x="1115.6" y="1123.0" width="31.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.6" y="1134.0">G1..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (232 samples, 2.63%)</title><rect x="1115.6" y="1107.0" width="31.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.6" y="1118.0">G1..</text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (142 samples, 1.61%)</title><rect x="1116.5" y="1091.0" width="19.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1119.5" y="1102.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.406] (5 samples, 0.06%)</title><rect x="1116.9" y="1075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1119.9" y="1086.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (105 samples, 1.19%)</title><rect x="1117.6" y="1075.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.6" y="1086.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (2 samples, 0.02%)</title><rect x="1120.0" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.0" y="1070.0"></text>
</g>
<g>
<title>__GI___getrusage (2 samples, 0.02%)</title><rect x="1120.0" y="1043.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1123.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1120.0" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1123.0" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1120.0" y="1011.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1123.0" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_getrusage (2 samples, 0.02%)</title><rect x="1120.0" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1123.0" y="1006.0"></text>
</g>
<g>
<title>__do_sys_getrusage (2 samples, 0.02%)</title><rect x="1120.0" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.0" y="990.0"></text>
</g>
<g>
<title>getrusage (2 samples, 0.02%)</title><rect x="1120.0" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1123.0" y="974.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.02%)</title><rect x="1120.3" y="1059.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.3" y="1070.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (81 samples, 0.92%)</title><rect x="1120.5" y="1059.0" width="10.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.5" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (68 samples, 0.77%)</title><rect x="1122.0" y="1043.0" width="9.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.0" y="1054.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (55 samples, 0.62%)</title><rect x="1122.8" y="1027.0" width="7.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1125.8" y="1038.0"></text>
</g>
<g>
<title>oopDesc::size() (13 samples, 0.15%)</title><rect x="1128.4" y="1011.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.4" y="1022.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.03%)</title><rect x="1130.1" y="1027.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.1" y="1038.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.05%)</title><rect x="1130.5" y="1027.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.5" y="1038.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1131.3" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.3" y="1070.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.02%)</title><rect x="1131.6" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.6" y="1086.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (27 samples, 0.31%)</title><rect x="1131.9" y="1075.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.9" y="1086.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (20 samples, 0.23%)</title><rect x="1132.3" y="1059.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.3" y="1070.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (12 samples, 0.14%)</title><rect x="1133.2" y="1043.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.2" y="1054.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.03%)</title><rect x="1134.4" y="1027.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.4" y="1038.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1135.0" y="1059.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.0" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1135.2" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1138.2" y="1070.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (78 samples, 0.88%)</title><rect x="1135.8" y="1091.0" width="10.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.8" y="1102.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (70 samples, 0.79%)</title><rect x="1136.8" y="1075.0" width="9.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.8" y="1086.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (63 samples, 0.71%)</title><rect x="1137.8" y="1059.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.8" y="1070.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (52 samples, 0.59%)</title><rect x="1138.7" y="1043.0" width="6.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.7" y="1054.0"></text>
</g>
<g>
<title>oopDesc::size() (11 samples, 0.12%)</title><rect x="1143.8" y="1027.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.8" y="1038.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title><rect x="1145.2" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.2" y="1038.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.03%)</title><rect x="1145.8" y="1043.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.8" y="1054.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.02%)</title><rect x="1146.3" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.3" y="1102.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (4 samples, 0.05%)</title><rect x="1146.6" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.6" y="1134.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (3 samples, 0.03%)</title><rect x="1146.7" y="1107.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.7" y="1118.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1147.1" y="1123.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.1" y="1134.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.02%)</title><rect x="1147.1" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.1" y="1118.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1147.1" y="1091.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.1" y="1102.0"></text>
</g>
<g>
<title>MarkBitMap::do_clear(MemRegion, bool) (2 samples, 0.02%)</title><rect x="1147.1" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.1" y="1086.0"></text>
</g>
<g>
<title>__memset_avx2_erms (2 samples, 0.02%)</title><rect x="1147.1" y="1059.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1150.1" y="1070.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (147 samples, 1.66%)</title><rect x="1147.4" y="1123.0" width="19.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.4" y="1134.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.11%)</title><rect x="1147.4" y="1107.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.4" y="1118.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.07%)</title><rect x="1147.5" y="1091.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.5" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.03%)</title><rect x="1147.9" y="1075.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.9" y="1086.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.03%)</title><rect x="1148.3" y="1091.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.3" y="1102.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="1148.3" y="1075.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1151.3" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (113 samples, 1.28%)</title><rect x="1148.7" y="1107.0" width="15.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.7" y="1118.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (113 samples, 1.28%)</title><rect x="1148.7" y="1091.0" width="15.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.7" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (113 samples, 1.28%)</title><rect x="1148.7" y="1075.0" width="15.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.7" y="1086.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (113 samples, 1.28%)</title><rect x="1148.7" y="1059.0" width="15.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.7" y="1070.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (112 samples, 1.27%)</title><rect x="1148.7" y="1043.0" width="15.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.7" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.02%)</title><rect x="1148.7" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.7" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (50 samples, 0.57%)</title><rect x="1149.0" y="1027.0" width="6.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.0" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (33 samples, 0.37%)</title><rect x="1150.7" y="1011.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.7" y="1022.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.14%)</title><rect x="1153.5" y="995.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.5" y="1006.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="1155.1" y="1011.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1158.1" y="1022.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1155.4" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.4" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (60 samples, 0.68%)</title><rect x="1155.7" y="1027.0" width="8.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.7" y="1038.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (54 samples, 0.61%)</title><rect x="1155.8" y="1011.0" width="7.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.8" y="1022.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (16 samples, 0.18%)</title><rect x="1157.7" y="995.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.7" y="1006.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (10 samples, 0.11%)</title><rect x="1158.2" y="979.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.2" y="990.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (6 samples, 0.07%)</title><rect x="1158.3" y="963.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.3" y="974.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.02%)</title><rect x="1159.1" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.1" y="974.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.02%)</title><rect x="1159.5" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.5" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (5 samples, 0.06%)</title><rect x="1159.9" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.9" y="1006.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (18 samples, 0.20%)</title><rect x="1160.6" y="995.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.6" y="1006.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (12 samples, 0.14%)</title><rect x="1161.4" y="979.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.4" y="990.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.05%)</title><rect x="1163.0" y="1011.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.0" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (18 samples, 0.20%)</title><rect x="1163.8" y="1107.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.8" y="1118.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (18 samples, 0.20%)</title><rect x="1163.8" y="1091.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.8" y="1102.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (18 samples, 0.20%)</title><rect x="1163.8" y="1075.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.8" y="1086.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (18 samples, 0.20%)</title><rect x="1163.8" y="1059.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.8" y="1070.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (17 samples, 0.19%)</title><rect x="1163.8" y="1043.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.8" y="1054.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.02%)</title><rect x="1164.2" y="1027.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.2" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (12 samples, 0.14%)</title><rect x="1164.5" y="1027.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.5" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.07%)</title><rect x="1165.3" y="1011.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.3" y="1022.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.06%)</title><rect x="1165.4" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.4" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.07%)</title><rect x="1166.2" y="1107.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.2" y="1118.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.06%)</title><rect x="1166.4" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.4" y="1102.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.05%)</title><rect x="1166.5" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.5" y="1086.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1166.6" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.6" y="1070.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.02%)</title><rect x="1166.6" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.6" y="1054.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.02%)</title><rect x="1166.6" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.6" y="1038.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (150 samples, 1.70%)</title><rect x="1167.0" y="1123.0" width="20.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.0" y="1134.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (150 samples, 1.70%)</title><rect x="1167.0" y="1107.0" width="20.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.0" y="1118.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (145 samples, 1.64%)</title><rect x="1167.0" y="1091.0" width="19.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.0" y="1102.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_reference(void*, unsigned int) [clone .part.54] (2 samples, 0.02%)</title><rect x="1174.9" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.9" y="1086.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (3 samples, 0.03%)</title><rect x="1175.2" y="1075.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.2" y="1086.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (16 samples, 0.18%)</title><rect x="1175.6" y="1075.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.6" y="1086.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (5 samples, 0.06%)</title><rect x="1177.7" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.7" y="1086.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (54 samples, 0.61%)</title><rect x="1178.6" y="1075.0" width="7.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.6" y="1086.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_reference(void*, unsigned int) [clone .part.54] (2 samples, 0.02%)</title><rect x="1181.4" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.4" y="1070.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.02%)</title><rect x="1181.9" y="1059.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.9" y="1070.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (14 samples, 0.16%)</title><rect x="1182.1" y="1059.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="1070.0"></text>
</g>
<g>
<title>BitMap::par_at_put(unsigned long, bool) (4 samples, 0.05%)</title><rect x="1183.3" y="1043.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="1054.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (14 samples, 0.16%)</title><rect x="1184.0" y="1059.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.0" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1185.9" y="1075.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1086.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1186.1" y="1075.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.1" y="1086.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (2 samples, 0.02%)</title><rect x="1186.4" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="1102.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1186.7" y="1091.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.7" y="1102.0"></text>
</g>
<g>
<title>ParKnownGarbageTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1187.1" y="1123.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="1134.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.02%)</title><rect x="1187.1" y="1107.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="1118.0"></text>
</g>
<g>
<title>ParKnownGarbageHRClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1187.1" y="1091.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>ParallelCleaningTask::work(unsigned int) (6 samples, 0.07%)</title><rect x="1187.3" y="1123.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.3" y="1134.0"></text>
</g>
<g>
<title>nmethod::do_unloading(bool) (6 samples, 0.07%)</title><rect x="1187.3" y="1107.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.3" y="1118.0"></text>
</g>
<g>
<title>CompiledMethod::unload_nmethod_caches(bool) (5 samples, 0.06%)</title><rect x="1187.5" y="1091.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="1102.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (5 samples, 0.06%)</title><rect x="1187.5" y="1075.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.5" y="1086.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (8 samples, 0.09%)</title><rect x="1188.3" y="1139.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.3" y="1150.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 0.09%)</title><rect x="1188.3" y="1123.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.3" y="1134.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.09%)</title><rect x="1188.3" y="1107.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.3" y="1118.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.09%)</title><rect x="1188.3" y="1091.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.3" y="1102.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (8 samples, 0.09%)</title><rect x="1188.3" y="1075.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.3" y="1086.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (6 samples, 0.07%)</title><rect x="1188.3" y="1059.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.3" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.06%)</title><rect x="1188.4" y="1043.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="1054.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.02%)</title><rect x="1188.8" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.8" y="1038.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.02%)</title><rect x="1189.1" y="1059.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.06%)</title><rect x="1189.3" y="1139.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.3" y="1150.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.06%)</title><rect x="1189.3" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="1134.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (5 samples, 0.06%)</title><rect x="1189.3" y="1107.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.3" y="1118.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.06%)</title><rect x="1189.3" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.3" y="1102.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.05%)</title><rect x="1189.3" y="1075.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.05%)</title><rect x="1189.3" y="1059.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.3" y="1070.0"></text>
</g>
</g>
</svg>
