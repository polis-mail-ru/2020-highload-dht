<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (3,655 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (44 samples, 1.20%)</title><rect x="10.0" y="1171.0" width="14.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (42 samples, 1.15%)</title><rect x="10.6" y="1155.0" width="13.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="1166.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="10.6" y="1139.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (41 samples, 1.12%)</title><rect x="11.0" y="1139.0" width="13.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="11.6" y="1123.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.6" y="1134.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="11.6" y="1107.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.6" y="1118.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="11.9" y="1123.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.9" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (36 samples, 0.98%)</title><rect x="12.3" y="1123.0" width="11.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.3" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (22 samples, 0.60%)</title><rect x="12.6" y="1107.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.6" y="1118.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.14%)</title><rect x="19.7" y="1107.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.7" y="1118.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.22%)</title><rect x="21.3" y="1107.0" width="2.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="24.3" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="22.3" y="1091.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.3" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="22.3" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.11%)</title><rect x="22.6" y="1075.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="25.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="23.6" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="26.6" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="23.6" y="1043.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.6" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="23.9" y="1123.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="26.9" y="1134.0"></text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.03%)</title><rect x="24.2" y="1171.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="27.2" y="1182.0"></text>
</g>
<g>
<title>Deoptimization::unpack_frames(JavaThread*, int) (1 samples, 0.03%)</title><rect x="24.2" y="1155.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="27.2" y="1166.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.03%)</title><rect x="24.2" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="27.2" y="1150.0"></text>
</g>
<g>
<title>[no_Java_frame] (10 samples, 0.27%)</title><rect x="24.5" y="1171.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="27.5" y="1182.0"></text>
</g>
<g>
<title>[not_walkable_Java] (10 samples, 0.27%)</title><rect x="27.8" y="1171.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="30.8" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="27.8" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.8" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.25%)</title><rect x="28.1" y="1155.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="31.1" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (8 samples, 0.22%)</title><rect x="28.4" y="1139.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.4" y="1150.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.08%)</title><rect x="28.4" y="1123.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="31.4" y="1134.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="28.4" y="1107.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="31.4" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="28.7" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="31.7" y="1118.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="29.0" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.0" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.14%)</title><rect x="29.4" y="1123.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.4" y="1134.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="30.0" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="33.0" y="1118.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.05%)</title><rect x="30.3" y="1107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="33.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.22%)</title><rect x="31.0" y="1171.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="34.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="31.0" y="1155.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="34.0" y="1166.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.03%)</title><rect x="31.0" y="1139.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.0" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="31.0" y="1123.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="34.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="31.0" y="1107.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.0" y="1118.0"></text>
</g>
<g>
<title>_IO_vsnprintf (1 samples, 0.03%)</title><rect x="31.3" y="1155.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="34.3" y="1166.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (1 samples, 0.03%)</title><rect x="31.3" y="1139.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="34.3" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.16%)</title><rect x="31.6" y="1155.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="34.6" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="32.9" y="1139.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.9" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="32.9" y="1123.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.9" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="33.2" y="1107.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.2" y="1118.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="33.2" y="1091.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.2" y="1102.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="33.2" y="1075.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="36.2" y="1086.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="33.2" y="1059.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.2" y="1070.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="33.2" y="1043.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="36.2" y="1054.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="33.2" y="1027.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="36.2" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (25 samples, 0.68%)</title><rect x="33.6" y="1171.0" width="8.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="36.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.6" y="1155.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="36.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.6" y="1139.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="36.6" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="33.6" y="1123.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="36.6" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.63%)</title><rect x="33.9" y="1155.0" width="7.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="36.9" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.49%)</title><rect x="35.5" y="1139.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="38.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.49%)</title><rect x="35.5" y="1123.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="38.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.47%)</title><rect x="35.8" y="1107.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.8" y="1118.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.47%)</title><rect x="35.8" y="1091.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="38.8" y="1102.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.47%)</title><rect x="35.8" y="1075.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.8" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="35.8" y="1059.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.8" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.44%)</title><rect x="36.2" y="1059.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="39.2" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.44%)</title><rect x="36.2" y="1043.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="39.2" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.44%)</title><rect x="36.2" y="1027.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="39.2" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="41.3" y="1155.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="44.3" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="41.3" y="1139.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="44.3" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (22 samples, 0.60%)</title><rect x="41.6" y="1171.0" width="7.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="44.6" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.38%)</title><rect x="44.2" y="1155.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.2" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="44.2" y="1139.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.2" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.36%)</title><rect x="44.5" y="1139.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.5" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.30%)</title><rect x="44.9" y="1123.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.9" y="1134.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.30%)</title><rect x="44.9" y="1107.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.9" y="1118.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.22%)</title><rect x="45.5" y="1091.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.5" y="1102.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.16%)</title><rect x="45.5" y="1075.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.5" y="1086.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.11%)</title><rect x="45.8" y="1059.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.8" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.11%)</title><rect x="45.8" y="1043.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.8" y="1054.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="47.1" y="1059.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.1" y="1070.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="47.5" y="1075.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.5" y="1086.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="47.8" y="1075.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.8" y="1086.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="47.8" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.8" y="1070.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="48.1" y="1091.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="51.1" y="1102.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="48.4" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="51.4" y="1134.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="48.7" y="1171.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="51.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,541 samples, 69.52%)</title><rect x="49.1" y="1171.0" width="820.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.1" y="1182.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,541 samples, 69.52%)</title><rect x="49.1" y="1155.0" width="820.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.1" y="1166.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,541 samples, 69.52%)</title><rect x="49.1" y="1139.0" width="820.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.1" y="1150.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (384 samples, 10.51%)</title><rect x="49.4" y="1123.0" width="124.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.4" y="1134.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (316 samples, 8.65%)</title><rect x="49.4" y="1107.0" width="102.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.4" y="1118.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.11%)</title><rect x="50.0" y="1091.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="50.0" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="50.0" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$413/1841270497.apply (2 samples, 0.05%)</title><rect x="50.0" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$413/1841270497.apply (2 samples, 0.05%)</title><rect x="50.7" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$11 (2 samples, 0.05%)</title><rect x="50.7" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getChangeResponse (2 samples, 0.05%)</title><rect x="50.7" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getResponseStatus (2 samples, 0.05%)</title><rect x="50.7" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="50.7" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="50.7" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.7" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="50.7" y="979.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="53.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (285 samples, 7.80%)</title><rect x="51.3" y="1091.0" width="92.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.3" y="1102.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="51.3" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="51.3" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/2054707338.apply (283 samples, 7.74%)</title><rect x="52.0" y="1075.0" width="91.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.0" y="1086.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (283 samples, 7.74%)</title><rect x="52.0" y="1059.0" width="91.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.0" y="1070.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (283 samples, 7.74%)</title><rect x="52.0" y="1043.0" width="91.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.0" y="1054.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.03%)</title><rect x="53.3" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.03%)</title><rect x="53.3" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="53.3" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="53.6" y="1027.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="53.9" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="53.9" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="53.9" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (234 samples, 6.40%)</title><rect x="54.2" y="1027.0" width="75.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.2" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (234 samples, 6.40%)</title><rect x="54.2" y="1011.0" width="75.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.2" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (233 samples, 6.37%)</title><rect x="54.6" y="995.0" width="75.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.6" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="54.6" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="54.6" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/1888700414.get$Lambda (1 samples, 0.03%)</title><rect x="54.6" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.6" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="54.6" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="57.6" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1196148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1196148ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="54.6" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="57.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (147 samples, 4.02%)</title><rect x="54.9" y="979.0" width="47.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.9" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (147 samples, 4.02%)</title><rect x="54.9" y="963.0" width="47.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.9" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (146 samples, 3.99%)</title><rect x="54.9" y="947.0" width="47.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.9" y="958.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/1888700414.apply (145 samples, 3.97%)</title><rect x="55.2" y="931.0" width="46.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.2" y="942.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (145 samples, 3.97%)</title><rect x="55.2" y="915.0" width="46.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.2" y="926.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (145 samples, 3.97%)</title><rect x="55.2" y="899.0" width="46.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.2" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$222/461624569.apply (145 samples, 3.97%)</title><rect x="55.2" y="883.0" width="46.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.2" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (145 samples, 3.97%)</title><rect x="55.2" y="867.0" width="46.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.2" y="878.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.05%)</title><rect x="55.2" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.05%)</title><rect x="55.2" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="55.2" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="55.5" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.03%)</title><rect x="55.5" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="55.5" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="55.5" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (143 samples, 3.91%)</title><rect x="55.8" y="851.0" width="46.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.8" y="862.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (131 samples, 3.58%)</title><rect x="55.8" y="835.0" width="42.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.8" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (130 samples, 3.56%)</title><rect x="56.2" y="819.0" width="41.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.2" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="56.2" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="56.5" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.05%)</title><rect x="56.5" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="56.5" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.set (2 samples, 0.05%)</title><rect x="56.5" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$341/1844096335.apply (125 samples, 3.42%)</title><rect x="57.1" y="803.0" width="40.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.1" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (125 samples, 3.42%)</title><rect x="57.1" y="787.0" width="40.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.1" y="798.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="57.5" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="57.5" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="57.5" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="57.5" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="57.5" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.05%)</title><rect x="57.5" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.05%)</title><rect x="57.5" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.05%)</title><rect x="57.5" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="57.5" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="57.5" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.05%)</title><rect x="57.5" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.05%)</title><rect x="57.5" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.05%)</title><rect x="57.5" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.05%)</title><rect x="57.5" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.05%)</title><rect x="57.5" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="57.5" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="57.5" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.05%)</title><rect x="57.5" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.05%)</title><rect x="57.5" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="57.5" y="467.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="60.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="57.5" y="451.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="60.5" y="462.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.05%)</title><rect x="57.5" y="435.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="60.5" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="57.8" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.8" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="57.8" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="60.8" y="414.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.03%)</title><rect x="57.8" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.8" y="398.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.03%)</title><rect x="57.8" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="60.8" y="382.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.03%)</title><rect x="57.8" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.8" y="366.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.03%)</title><rect x="57.8" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="60.8" y="350.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="57.8" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="60.8" y="334.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.03%)</title><rect x="57.8" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="60.8" y="318.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="57.8" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.8" y="302.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="57.8" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="60.8" y="286.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="57.8" y="259.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.8" y="270.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="57.8" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.8" y="254.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="57.8" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="60.8" y="238.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="57.8" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="60.8" y="222.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="57.8" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.8" y="206.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="57.8" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="60.8" y="190.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="57.8" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.8" y="174.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="57.8" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.8" y="158.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="57.8" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (37 samples, 1.01%)</title><rect x="58.1" y="771.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (37 samples, 1.01%)</title><rect x="58.1" y="755.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (7 samples, 0.19%)</title><rect x="58.1" y="739.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.16%)</title><rect x="58.4" y="723.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.16%)</title><rect x="58.4" y="707.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.16%)</title><rect x="58.4" y="691.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.16%)</title><rect x="58.4" y="675.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.4" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="58.4" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="61.4" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="58.4" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="61.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="58.4" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="61.4" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="58.4" y="611.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="61.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="58.7" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="58.7" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="58.7" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="58.7" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="58.7" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.11%)</title><rect x="59.1" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.1" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="59.7" y="643.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.7" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="59.7" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="62.7" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (1 samples, 0.03%)</title><rect x="59.7" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="62.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="60.0" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="60.0" y="627.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="63.0" y="638.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="60.0" y="611.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="63.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.82%)</title><rect x="60.4" y="739.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="60.4" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (29 samples, 0.79%)</title><rect x="60.7" y="723.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (18 samples, 0.49%)</title><rect x="60.7" y="707.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (18 samples, 0.49%)</title><rect x="60.7" y="691.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (18 samples, 0.49%)</title><rect x="60.7" y="675.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.7" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="61.0" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="64.0" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="61.0" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="64.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="61.0" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="64.0" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="61.0" y="611.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="64.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.44%)</title><rect x="61.3" y="659.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.3" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.14%)</title><rect x="61.7" y="643.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="64.7" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.14%)</title><rect x="61.7" y="627.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="64.7" y="638.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="61.7" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="64.7" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="62.0" y="611.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="65.0" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (1 samples, 0.03%)</title><rect x="62.0" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="65.0" y="606.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="62.3" y="595.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="65.3" y="606.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.03%)</title><rect x="62.9" y="611.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="65.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.27%)</title><rect x="63.3" y="643.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.27%)</title><rect x="63.3" y="627.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="66.3" y="638.0"></text>
</g>
<g>
<title>__libc_write (10 samples, 0.27%)</title><rect x="63.3" y="611.0" width="3.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="66.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.19%)</title><rect x="64.2" y="595.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="67.2" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.19%)</title><rect x="64.2" y="579.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="67.2" y="590.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 0.16%)</title><rect x="64.6" y="563.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="67.6" y="574.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.16%)</title><rect x="64.6" y="547.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.6" y="558.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="64.6" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="67.6" y="542.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.14%)</title><rect x="64.9" y="531.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="67.9" y="542.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.08%)</title><rect x="65.2" y="515.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="68.2" y="526.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.08%)</title><rect x="65.2" y="499.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="68.2" y="510.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="65.2" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.2" y="494.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.05%)</title><rect x="65.5" y="483.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.5" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="65.5" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.5" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="65.5" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="68.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="65.5" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.5" y="446.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.03%)</title><rect x="65.9" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.9" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="66.2" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.2" y="526.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="66.2" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.2" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="66.2" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="69.2" y="494.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="66.2" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="69.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4 samples, 0.11%)</title><rect x="66.5" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (4 samples, 0.11%)</title><rect x="66.5" y="691.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.11%)</title><rect x="66.5" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.11%)</title><rect x="66.5" y="659.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (2 samples, 0.05%)</title><rect x="67.8" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.8" y="718.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.03%)</title><rect x="68.1" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="71.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (5 samples, 0.14%)</title><rect x="68.4" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (85 samples, 2.33%)</title><rect x="70.0" y="771.0" width="27.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.0" y="782.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.14%)</title><rect x="70.4" y="755.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.14%)</title><rect x="70.4" y="739.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (5 samples, 0.14%)</title><rect x="70.4" y="723.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.03%)</title><rect x="71.7" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (66 samples, 1.81%)</title><rect x="72.0" y="755.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.0" y="766.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.60%)</title><rect x="72.3" y="739.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.60%)</title><rect x="72.3" y="723.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (20 samples, 0.55%)</title><rect x="73.0" y="707.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (20 samples, 0.55%)</title><rect x="73.0" y="691.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.0" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (19 samples, 0.52%)</title><rect x="73.0" y="675.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.0" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.52%)</title><rect x="73.0" y="659.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.16%)</title><rect x="73.9" y="643.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (6 samples, 0.16%)</title><rect x="73.9" y="627.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.16%)</title><rect x="73.9" y="611.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$369/581896096.test (4 samples, 0.11%)</title><rect x="74.6" y="595.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (4 samples, 0.11%)</title><rect x="74.6" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.11%)</title><rect x="74.6" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="74.6" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="74.6" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="74.6" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="74.6" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="74.6" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="74.6" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="74.6" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="74.6" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="74.6" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="74.6" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.6" y="414.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="74.6" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.6" y="398.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="74.6" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="74.9" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.05%)</title><rect x="74.9" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="74.9" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.03%)</title><rect x="75.5" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.19%)</title><rect x="75.9" y="643.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.9" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="75.9" y="627.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="78.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (4 samples, 0.11%)</title><rect x="76.2" y="627.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.11%)</title><rect x="76.2" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.11%)</title><rect x="76.2" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.11%)</title><rect x="76.2" y="579.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$369/581896096.test (1 samples, 0.03%)</title><rect x="77.5" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$364/2029362563.test (1 samples, 0.03%)</title><rect x="77.8" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.8" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.08%)</title><rect x="78.1" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="78.8" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="78.8" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="78.8" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="79.1" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (1 samples, 0.03%)</title><rect x="79.1" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (25 samples, 0.68%)</title><rect x="79.4" y="739.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.11%)</title><rect x="82.3" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.3" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.11%)</title><rect x="82.3" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.3" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.11%)</title><rect x="82.3" y="691.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.11%)</title><rect x="82.3" y="675.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.3" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="83.0" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="86.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="83.0" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="86.0" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="83.0" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="86.0" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="83.0" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="86.0" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="83.0" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="86.0" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="83.0" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="86.0" y="590.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.03%)</title><rect x="83.0" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="86.0" y="574.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::type() const (1 samples, 0.03%)</title><rect x="83.0" y="547.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="86.0" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="83.3" y="659.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="86.3" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="83.6" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="83.6" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="83.6" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="83.6" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.03%)</title><rect x="83.6" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="83.6" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.6" y="654.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$359/1510484558.test (10 samples, 0.27%)</title><rect x="83.9" y="723.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (10 samples, 0.27%)</title><rect x="83.9" y="707.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$108/341796579.test (8 samples, 0.22%)</title><rect x="84.6" y="691.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$11 (8 samples, 0.22%)</title><rect x="84.6" y="675.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.6" y="686.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$98/953742666.test (8 samples, 0.22%)</title><rect x="84.6" y="659.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.6" y="670.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (8 samples, 0.22%)</title><rect x="84.6" y="643.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$97/860481979.test (8 samples, 0.22%)</title><rect x="84.6" y="627.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$4 (8 samples, 0.22%)</title><rect x="84.6" y="611.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.22%)</title><rect x="84.6" y="595.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.22%)</title><rect x="84.6" y="579.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.22%)</title><rect x="84.6" y="563.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="84.6" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="84.6" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.19%)</title><rect x="84.9" y="547.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.19%)</title><rect x="84.9" y="531.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.9" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="86.8" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.8" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="86.8" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.8" y="510.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="87.2" y="723.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="90.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (18 samples, 0.49%)</title><rect x="87.5" y="739.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.49%)</title><rect x="87.5" y="723.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.49%)</title><rect x="87.5" y="707.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (18 samples, 0.49%)</title><rect x="87.5" y="691.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.5" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (14 samples, 0.38%)</title><rect x="88.1" y="675.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.1" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.38%)</title><rect x="88.1" y="659.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.03%)</title><rect x="89.4" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (1 samples, 0.03%)</title><rect x="89.4" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="89.4" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.05%)</title><rect x="89.7" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.7" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="89.7" y="627.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="92.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$93/1793799654.test (1 samples, 0.03%)</title><rect x="90.1" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.08%)</title><rect x="90.4" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (1 samples, 0.03%)</title><rect x="91.0" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="91.0" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="91.4" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="91.7" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.7" y="638.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="92.0" y="643.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="95.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.05%)</title><rect x="92.6" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.6" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="93.0" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.11%)</title><rect x="93.3" y="755.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.11%)</title><rect x="93.3" y="739.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.3" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="93.9" y="723.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="96.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="94.3" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="97.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.03%)</title><rect x="94.6" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.03%)</title><rect x="94.6" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (1 samples, 0.03%)</title><rect x="94.6" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="94.6" y="707.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="97.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.22%)</title><rect x="94.9" y="755.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.11%)</title><rect x="96.2" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="96.8" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="96.8" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="96.8" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="97.2" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$343/79267593.apply (1 samples, 0.03%)</title><rect x="97.5" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="97.8" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="97.8" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (12 samples, 0.33%)</title><rect x="98.1" y="835.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (12 samples, 0.33%)</title><rect x="98.1" y="819.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.08%)</title><rect x="98.1" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.08%)</title><rect x="98.1" y="787.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.25%)</title><rect x="99.1" y="803.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.25%)</title><rect x="99.1" y="787.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.25%)</title><rect x="99.1" y="771.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.25%)</title><rect x="99.1" y="755.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.19%)</title><rect x="99.4" y="739.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (6 samples, 0.16%)</title><rect x="99.8" y="723.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.16%)</title><rect x="99.8" y="707.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.16%)</title><rect x="99.8" y="691.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="99.8" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="99.8" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.run (1 samples, 0.03%)</title><rect x="99.8" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="99.8" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.03%)</title><rect x="99.8" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="99.8" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="99.8" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.03%)</title><rect x="99.8" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="99.8" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="99.8" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (5 samples, 0.14%)</title><rect x="100.1" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (5 samples, 0.14%)</title><rect x="100.1" y="659.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.14%)</title><rect x="100.1" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.14%)</title><rect x="100.1" y="627.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="101.7" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="101.7" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="101.7" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (1 samples, 0.03%)</title><rect x="101.7" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="101.7" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="101.7" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="101.7" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="101.7" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.run (1 samples, 0.03%)</title><rect x="101.7" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="101.7" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.03%)</title><rect x="101.7" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="101.7" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="101.7" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.03%)</title><rect x="101.7" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="101.7" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="101.7" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="102.0" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.03%)</title><rect x="102.0" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="102.0" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="102.0" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/1888700414.apply (1 samples, 0.03%)</title><rect x="102.0" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.14%)</title><rect x="102.3" y="979.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.11%)</title><rect x="102.7" y="963.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.7" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="102.7" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="105.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="103.0" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.0" y="958.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$58/1579526446.apply (1 samples, 0.03%)</title><rect x="103.0" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.0" y="942.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$58/1579526446.apply (2 samples, 0.05%)</title><rect x="103.3" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (80 samples, 2.19%)</title><rect x="103.9" y="979.0" width="25.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.9" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.08%)</title><rect x="104.3" y="963.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="104.6" y="947.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="104.6" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.6" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="104.6" y="915.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="107.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$295/1306724714.apply (1 samples, 0.03%)</title><rect x="104.9" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.03%)</title><rect x="104.9" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="104.9" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="104.9" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="104.9" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (76 samples, 2.08%)</title><rect x="105.2" y="963.0" width="24.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.2" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (76 samples, 2.08%)</title><rect x="105.2" y="947.0" width="24.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.2" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (76 samples, 2.08%)</title><rect x="105.2" y="931.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.2" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.11%)</title><rect x="108.8" y="915.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (48 samples, 1.31%)</title><rect x="110.1" y="915.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.1" y="926.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.03%)</title><rect x="110.1" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.1" y="910.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.03%)</title><rect x="110.1" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="110.1" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="110.1" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="110.1" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.1" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="110.1" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="113.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (45 samples, 1.23%)</title><rect x="110.4" y="899.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.4" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="112.0" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="115.0" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.36%)</title><rect x="112.3" y="883.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="115.3" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (13 samples, 0.36%)</title><rect x="112.3" y="867.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="115.3" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.33%)</title><rect x="112.3" y="851.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="115.3" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (10 samples, 0.27%)</title><rect x="112.3" y="835.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="115.3" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="115.6" y="835.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="118.6" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (1 samples, 0.03%)</title><rect x="116.2" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="119.2" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="116.2" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="119.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (26 samples, 0.71%)</title><rect x="116.5" y="883.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.11%)</title><rect x="118.8" y="867.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.11%)</title><rect x="118.8" y="851.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.03%)</title><rect x="119.8" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.8" y="846.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.03%)</title><rect x="119.8" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.8" y="830.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.03%)</title><rect x="119.8" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.8" y="814.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.03%)</title><rect x="119.8" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (15 samples, 0.41%)</title><rect x="120.1" y="867.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (1 samples, 0.03%)</title><rect x="124.9" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="124.9" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="124.9" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="124.9" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="124.9" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="124.9" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="124.9" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="124.9" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.03%)</title><rect x="125.3" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (13 samples, 0.36%)</title><rect x="125.6" y="915.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.6" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.36%)</title><rect x="125.6" y="899.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.6" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (13 samples, 0.36%)</title><rect x="125.6" y="883.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$226/1657925285.run (13 samples, 0.36%)</title><rect x="125.6" y="867.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (13 samples, 0.36%)</title><rect x="125.6" y="851.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.6" y="862.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (13 samples, 0.36%)</title><rect x="125.6" y="835.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.6" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (13 samples, 0.36%)</title><rect x="125.6" y="819.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.6" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (13 samples, 0.36%)</title><rect x="125.6" y="803.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.6" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.14%)</title><rect x="128.2" y="787.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.2" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.14%)</title><rect x="128.2" y="771.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.14%)</title><rect x="128.2" y="755.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.2" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="128.5" y="739.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="131.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="128.8" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="128.8" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.8" y="734.0"></text>
</g>
<g>
<title>os::Posix::supports_monotonic_clock() (2 samples, 0.05%)</title><rect x="129.1" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="132.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (26 samples, 0.71%)</title><rect x="129.8" y="1027.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.8" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.14%)</title><rect x="130.1" y="1011.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="133.1" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.08%)</title><rect x="130.7" y="995.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="133.7" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="130.7" y="979.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="133.7" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (3 samples, 0.08%)</title><rect x="130.7" y="963.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="133.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (4 samples, 0.11%)</title><rect x="131.7" y="1011.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.11%)</title><rect x="131.7" y="995.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="131.7" y="979.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="134.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="132.0" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.05%)</title><rect x="132.4" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (2 samples, 0.05%)</title><rect x="132.4" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.05%)</title><rect x="132.4" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (16 samples, 0.44%)</title><rect x="133.0" y="1011.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.44%)</title><rect x="133.0" y="995.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="133.6" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="136.6" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="133.6" y="963.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="136.6" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="133.6" y="947.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="136.6" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (1 samples, 0.03%)</title><rect x="133.6" y="931.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="136.6" y="942.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="134.0" y="931.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="137.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.33%)</title><rect x="134.3" y="979.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.30%)</title><rect x="134.3" y="963.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="137.3" y="974.0"></text>
</g>
<g>
<title>__libc_write (11 samples, 0.30%)</title><rect x="134.3" y="947.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="137.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.25%)</title><rect x="134.9" y="931.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.25%)</title><rect x="134.9" y="915.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_write (9 samples, 0.25%)</title><rect x="134.9" y="899.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="137.9" y="910.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.25%)</title><rect x="134.9" y="883.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="137.9" y="894.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="134.9" y="867.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.9" y="878.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.22%)</title><rect x="135.3" y="867.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.3" y="878.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.16%)</title><rect x="135.3" y="851.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.3" y="862.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.16%)</title><rect x="135.3" y="835.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.3" y="846.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="135.3" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.3" y="830.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.14%)</title><rect x="135.6" y="819.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.6" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.14%)</title><rect x="135.6" y="803.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.6" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.14%)</title><rect x="135.6" y="787.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.6" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="135.6" y="771.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.6" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="137.2" y="851.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="140.2" y="862.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="137.5" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="140.5" y="846.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="137.5" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="140.5" y="830.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="137.5" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.5" y="814.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="137.8" y="963.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="140.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.03%)</title><rect x="138.2" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.2" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="138.2" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="141.2" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="138.2" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="141.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (8 samples, 0.22%)</title><rect x="138.5" y="1027.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (7 samples, 0.19%)</title><rect x="138.8" y="1011.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.03%)</title><rect x="138.8" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.16%)</title><rect x="139.1" y="995.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.1" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.05%)</title><rect x="140.4" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.4" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="140.4" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.4" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="140.4" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.4" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.03%)</title><rect x="140.4" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.4" y="942.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.03%)</title><rect x="140.4" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.4" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.03%)</title><rect x="140.8" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.8" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="140.8" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.8" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="140.8" y="931.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="143.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (7 samples, 0.19%)</title><rect x="141.1" y="1027.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (6 samples, 0.16%)</title><rect x="141.4" y="1011.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (5 samples, 0.14%)</title><rect x="141.7" y="995.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.7" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.08%)</title><rect x="141.7" y="979.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.7" y="990.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.08%)</title><rect x="141.7" y="963.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.08%)</title><rect x="141.7" y="947.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.7" y="958.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.08%)</title><rect x="141.7" y="931.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="144.7" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="142.7" y="979.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.7" y="990.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (2 samples, 0.05%)</title><rect x="142.7" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.7" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="142.7" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.7" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="142.7" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.05%)</title><rect x="142.7" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.7" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="142.7" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.7" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.05%)</title><rect x="142.7" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.7" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.05%)</title><rect x="142.7" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 0.60%)</title><rect x="143.3" y="1091.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="144.0" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="144.0" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.0" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="144.0" y="1043.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="147.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="144.3" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (18 samples, 0.49%)</title><rect x="144.6" y="1075.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (18 samples, 0.49%)</title><rect x="144.6" y="1059.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="144.6" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.47%)</title><rect x="144.9" y="1043.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.38%)</title><rect x="144.9" y="1027.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.08%)</title><rect x="144.9" y="1011.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.08%)</title><rect x="144.9" y="995.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.08%)</title><rect x="144.9" y="979.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.08%)</title><rect x="144.9" y="963.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.08%)</title><rect x="144.9" y="947.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.08%)</title><rect x="144.9" y="931.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.9" y="942.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="144.9" y="915.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="147.9" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="144.9" y="899.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="147.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="144.9" y="883.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="147.9" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="144.9" y="867.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="147.9" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="144.9" y="851.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.9" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="144.9" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.9" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="144.9" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="147.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="145.3" y="915.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="148.3" y="926.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.05%)</title><rect x="145.3" y="899.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="148.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.30%)</title><rect x="145.9" y="1011.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.30%)</title><rect x="145.9" y="995.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.30%)</title><rect x="145.9" y="979.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.25%)</title><rect x="146.6" y="963.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.25%)</title><rect x="146.6" y="947.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="146.6" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="149.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.22%)</title><rect x="146.9" y="931.0" width="2.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="149.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.19%)</title><rect x="147.2" y="915.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="150.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.19%)</title><rect x="147.2" y="899.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="150.2" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.19%)</title><rect x="147.2" y="883.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="150.2" y="894.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.19%)</title><rect x="147.2" y="867.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.2" y="878.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.19%)</title><rect x="147.2" y="851.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="150.2" y="862.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="147.5" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="150.5" y="846.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.14%)</title><rect x="147.9" y="835.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.9" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.14%)</title><rect x="147.9" y="819.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="150.9" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="147.9" y="803.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="150.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.08%)</title><rect x="149.5" y="1027.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.5" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$155/1908187639.get (3 samples, 0.08%)</title><rect x="150.4" y="1091.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$155/1908187639.get (68 samples, 1.86%)</title><rect x="151.4" y="1107.0" width="22.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.4" y="1118.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localUpsert$8 (68 samples, 1.86%)</title><rect x="151.4" y="1091.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.4" y="1102.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (67 samples, 1.83%)</title><rect x="151.4" y="1075.0" width="21.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.4" y="1086.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (67 samples, 1.83%)</title><rect x="151.4" y="1059.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.4" y="1070.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="151.4" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="151.4" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="151.4" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.03%)</title><rect x="151.4" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="151.7" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="151.7" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="151.7" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="151.7" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="151.7" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="151.7" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="151.7" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="958.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.03%)</title><rect x="151.7" y="931.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="154.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$220/475116154.run (65 samples, 1.78%)</title><rect x="152.1" y="1043.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (65 samples, 1.78%)</title><rect x="152.1" y="1027.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (62 samples, 1.70%)</title><rect x="153.0" y="1011.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.08%)</title><rect x="153.0" y="995.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="153.3" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="156.3" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="153.3" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="156.3" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="153.3" y="947.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="156.3" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="153.3" y="931.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="156.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="153.7" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (59 samples, 1.61%)</title><rect x="154.0" y="995.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.0" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="154.3" y="979.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="157.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (55 samples, 1.50%)</title><rect x="154.6" y="979.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="157.5" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="157.5" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.5" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="157.5" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.5" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="157.5" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.5" y="926.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="157.5" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (45 samples, 1.23%)</title><rect x="157.9" y="963.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (45 samples, 1.23%)</title><rect x="157.9" y="947.0" width="14.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.9" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (45 samples, 1.23%)</title><rect x="157.9" y="931.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.9" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.44%)</title><rect x="167.2" y="915.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.2" y="926.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.11%)</title><rect x="171.1" y="899.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="174.1" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="172.4" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="175.4" y="990.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="172.4" y="963.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="175.4" y="974.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="172.4" y="947.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="175.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapArray (1 samples, 0.03%)</title><rect x="173.0" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="173.0" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="173.0" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.0" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="173.0" y="1027.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="176.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="173.0" y="1011.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="176.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="173.0" y="995.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="176.0" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="173.0" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="176.0" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="173.0" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="176.0" y="974.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="173.0" y="947.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="176.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (259 samples, 7.09%)</title><rect x="173.4" y="1123.0" width="83.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.4" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (259 samples, 7.09%)</title><rect x="173.4" y="1107.0" width="83.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.4" y="1118.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (259 samples, 7.09%)</title><rect x="173.4" y="1091.0" width="83.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.4" y="1102.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.14%)</title><rect x="173.4" y="1075.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.4" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="173.7" y="1059.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="174.3" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$219/102607679.accept (1 samples, 0.03%)</title><rect x="174.7" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$219/102607679.accept (240 samples, 6.57%)</title><rect x="175.0" y="1075.0" width="77.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.0" y="1086.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$respond$5 (240 samples, 6.57%)</title><rect x="175.0" y="1059.0" width="77.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.0" y="1070.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (240 samples, 6.57%)</title><rect x="175.0" y="1043.0" width="77.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.0" y="1054.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.08%)</title><rect x="175.6" y="1027.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="175.6" y="1011.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="175.6" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.6" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="175.6" y="979.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="178.6" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="175.9" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="178.9" y="990.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="175.9" y="963.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="178.9" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="176.3" y="963.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="179.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (233 samples, 6.37%)</title><rect x="176.6" y="1027.0" width="75.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.6" y="1038.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.25%)</title><rect x="176.6" y="1011.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="179.2" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.2" y="1006.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="179.2" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="182.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (224 samples, 6.13%)</title><rect x="179.5" y="1011.0" width="72.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.5" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (224 samples, 6.13%)</title><rect x="179.5" y="995.0" width="72.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.5" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (223 samples, 6.10%)</title><rect x="179.8" y="979.0" width="72.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.8" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="179.8" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.8" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (222 samples, 6.07%)</title><rect x="180.1" y="963.0" width="71.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.1" y="974.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.33%)</title><rect x="180.1" y="947.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="183.1" y="958.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="180.8" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="183.8" y="942.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="181.4" y="931.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="184.4" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.14%)</title><rect x="182.1" y="931.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="185.1" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="183.0" y="915.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="186.0" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.03%)</title><rect x="183.4" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="186.4" y="926.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="183.7" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="186.7" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="184.0" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="187.0" y="958.0"></text>
</g>
<g>
<title>__send (208 samples, 5.69%)</title><rect x="184.3" y="947.0" width="67.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="187.3" y="958.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (199 samples, 5.44%)</title><rect x="187.2" y="931.0" width="64.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="190.2" y="942.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (199 samples, 5.44%)</title><rect x="187.2" y="915.0" width="64.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.2" y="926.0">do_sysc..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="188.5" y="899.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.5" y="910.0"></text>
</g>
<g>
<title>__x64_sys_sendto (194 samples, 5.31%)</title><rect x="188.9" y="899.0" width="62.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.9" y="910.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (193 samples, 5.28%)</title><rect x="188.9" y="883.0" width="62.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="191.9" y="894.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (188 samples, 5.14%)</title><rect x="189.5" y="867.0" width="60.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="192.5" y="878.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (181 samples, 4.95%)</title><rect x="189.5" y="851.0" width="58.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.5" y="862.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (181 samples, 4.95%)</title><rect x="189.5" y="835.0" width="58.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.5" y="846.0">tcp_se..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="189.5" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.5" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="189.5" y="803.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.5" y="814.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="190.1" y="819.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="193.1" y="830.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="190.5" y="819.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.5" y="830.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (175 samples, 4.79%)</title><rect x="191.1" y="819.0" width="56.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="194.1" y="830.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="192.7" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="195.7" y="814.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="193.1" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.1" y="814.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="193.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.4" y="814.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="193.7" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.7" y="814.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="193.7" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.7" y="798.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="194.0" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.0" y="814.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="194.0" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.0" y="798.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.33%)</title><rect x="194.3" y="803.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.3" y="814.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.27%)</title><rect x="195.0" y="787.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.0" y="798.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (3 samples, 0.08%)</title><rect x="195.6" y="771.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="198.6" y="782.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.08%)</title><rect x="195.6" y="755.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.6" y="766.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="196.0" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.0" y="750.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="196.3" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.3" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="196.6" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="199.6" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.08%)</title><rect x="196.9" y="771.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.9" y="782.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="197.6" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.6" y="766.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="197.9" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.9" y="782.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.08%)</title><rect x="198.2" y="803.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="201.2" y="814.0"></text>
</g>
<g>
<title>tcp_push (143 samples, 3.91%)</title><rect x="199.2" y="803.0" width="46.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.2" y="814.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (142 samples, 3.89%)</title><rect x="199.2" y="787.0" width="45.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="202.2" y="798.0">__tc..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="199.2" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.2" y="782.0"></text>
</g>
<g>
<title>tcp_write_xmit (141 samples, 3.86%)</title><rect x="199.5" y="771.0" width="45.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.5" y="782.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (125 samples, 3.42%)</title><rect x="202.1" y="755.0" width="40.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.1" y="766.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (121 samples, 3.31%)</title><rect x="202.7" y="739.0" width="39.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="205.7" y="750.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (120 samples, 3.28%)</title><rect x="202.7" y="723.0" width="38.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.7" y="734.0">__i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="202.7" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="205.7" y="718.0"></text>
</g>
<g>
<title>ip_local_out (117 samples, 3.20%)</title><rect x="203.1" y="707.0" width="37.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.1" y="718.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.08%)</title><rect x="203.1" y="691.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="206.1" y="702.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="203.4" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="206.4" y="686.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.03%)</title><rect x="203.7" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="206.7" y="686.0"></text>
</g>
<g>
<title>ip_output (114 samples, 3.12%)</title><rect x="204.0" y="691.0" width="36.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.0" y="702.0">ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="205.3" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="208.3" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (104 samples, 2.85%)</title><rect x="205.6" y="675.0" width="33.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="208.6" y="686.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.11%)</title><rect x="205.6" y="659.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.6" y="670.0"></text>
</g>
<g>
<title>__ip_finish_output (98 samples, 2.68%)</title><rect x="206.9" y="659.0" width="31.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="209.9" y="670.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (98 samples, 2.68%)</title><rect x="206.9" y="643.0" width="31.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="209.9" y="654.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (79 samples, 2.16%)</title><rect x="208.5" y="627.0" width="25.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="211.5" y="638.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (79 samples, 2.16%)</title><rect x="208.5" y="611.0" width="25.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="211.5" y="622.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 2.16%)</title><rect x="208.5" y="595.0" width="25.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="211.5" y="606.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 2.16%)</title><rect x="208.5" y="579.0" width="25.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.5" y="590.0">_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="209.5" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.5" y="574.0"></text>
</g>
<g>
<title>net_rx_action (75 samples, 2.05%)</title><rect x="209.8" y="563.0" width="24.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="212.8" y="574.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="209.8" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="212.8" y="558.0"></text>
</g>
<g>
<title>process_backlog (74 samples, 2.02%)</title><rect x="210.2" y="547.0" width="23.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.2" y="558.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (74 samples, 2.02%)</title><rect x="210.2" y="531.0" width="23.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.2" y="542.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (74 samples, 2.02%)</title><rect x="210.2" y="515.0" width="23.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="213.2" y="526.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.08%)</title><rect x="210.2" y="499.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.2" y="510.0"></text>
</g>
<g>
<title>ip_rcv (71 samples, 1.94%)</title><rect x="211.1" y="499.0" width="23.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="214.1" y="510.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="211.1" y="483.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="214.1" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (68 samples, 1.86%)</title><rect x="211.8" y="483.0" width="21.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="214.8" y="494.0">i..</text>
</g>
<g>
<title>ip_local_deliver (67 samples, 1.83%)</title><rect x="211.8" y="467.0" width="21.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.8" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (67 samples, 1.83%)</title><rect x="211.8" y="451.0" width="21.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="214.8" y="462.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (66 samples, 1.81%)</title><rect x="211.8" y="435.0" width="21.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.8" y="446.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (64 samples, 1.75%)</title><rect x="212.4" y="419.0" width="20.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.4" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.11%)</title><rect x="213.1" y="403.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="216.1" y="414.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="214.0" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.0" y="398.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="214.4" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.4" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="214.7" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="217.7" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.19%)</title><rect x="215.3" y="403.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="218.3" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="215.3" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="218.3" y="398.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="215.7" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.7" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.11%)</title><rect x="216.3" y="387.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="219.3" y="398.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.11%)</title><rect x="216.3" y="371.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="219.3" y="382.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.05%)</title><rect x="216.6" y="355.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="219.6" y="366.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.03%)</title><rect x="216.6" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="219.6" y="350.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="216.9" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="219.9" y="350.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="217.3" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="220.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (48 samples, 1.31%)</title><rect x="217.6" y="403.0" width="15.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="220.6" y="414.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="217.6" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="220.6" y="398.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="217.9" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="220.9" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 1.26%)</title><rect x="218.2" y="387.0" width="14.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.2" y="398.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.19%)</title><rect x="218.6" y="371.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.6" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.14%)</title><rect x="219.2" y="355.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.2" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="219.2" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.2" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.08%)</title><rect x="219.8" y="339.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.8" y="350.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.08%)</title><rect x="219.8" y="323.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="219.8" y="307.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.8" y="318.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="220.8" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.8" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (24 samples, 0.66%)</title><rect x="221.1" y="371.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.1" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (22 samples, 0.60%)</title><rect x="221.8" y="355.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.8" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (22 samples, 0.60%)</title><rect x="221.8" y="339.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="224.8" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.60%)</title><rect x="221.8" y="323.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="224.8" y="334.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.19%)</title><rect x="228.9" y="371.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.9" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="230.5" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.5" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="230.5" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="233.5" y="350.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="230.8" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.8" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="231.1" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.1" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.08%)</title><rect x="231.5" y="371.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.5" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="232.1" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.1" y="366.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="232.4" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.4" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="232.8" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.8" y="382.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="233.1" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.1" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="233.4" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="236.4" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.03%)</title><rect x="233.7" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.7" y="494.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.38%)</title><rect x="234.1" y="627.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.1" y="638.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.36%)</title><rect x="234.1" y="611.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.1" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="235.3" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.3" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.11%)</title><rect x="235.7" y="595.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="238.7" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.11%)</title><rect x="235.7" y="579.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="238.7" y="590.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.11%)</title><rect x="235.7" y="563.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="238.7" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.11%)</title><rect x="235.7" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="238.7" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.11%)</title><rect x="235.7" y="531.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="238.7" y="542.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="237.0" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.0" y="606.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="237.3" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="240.3" y="606.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="237.6" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.6" y="606.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="237.6" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.6" y="590.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="237.9" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="240.9" y="606.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.03%)</title><rect x="238.3" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.3" y="622.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="238.6" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="241.6" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="238.9" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="241.9" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.14%)</title><rect x="239.2" y="675.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.2" y="686.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.14%)</title><rect x="239.2" y="659.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="242.2" y="670.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.14%)</title><rect x="239.2" y="643.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="242.2" y="654.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.08%)</title><rect x="239.9" y="627.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="242.9" y="638.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.05%)</title><rect x="240.2" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="243.2" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="240.8" y="707.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="243.8" y="718.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="241.5" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.5" y="734.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="241.8" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.8" y="750.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="241.8" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.8" y="734.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="242.1" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.1" y="750.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="242.4" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.4" y="766.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.16%)</title><rect x="242.8" y="755.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="245.8" y="766.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="243.1" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="246.1" y="750.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.11%)</title><rect x="243.4" y="739.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="246.4" y="750.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.11%)</title><rect x="243.4" y="723.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.4" y="734.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.11%)</title><rect x="243.4" y="707.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="243.7" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="246.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="244.1" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.1" y="702.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="244.7" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.7" y="766.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="245.0" y="787.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="248.0" y="798.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.16%)</title><rect x="245.4" y="803.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="248.4" y="814.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.11%)</title><rect x="245.4" y="787.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.4" y="798.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="246.6" y="787.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="249.6" y="798.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="247.0" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="250.0" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="247.3" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.3" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="247.6" y="819.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.6" y="830.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.16%)</title><rect x="247.9" y="851.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="250.9" y="862.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.08%)</title><rect x="247.9" y="835.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.9" y="846.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.08%)</title><rect x="247.9" y="819.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="250.9" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="248.3" y="803.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="251.3" y="814.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (3 samples, 0.08%)</title><rect x="248.9" y="835.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="251.9" y="846.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.08%)</title><rect x="248.9" y="819.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="251.9" y="830.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="249.9" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.9" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.08%)</title><rect x="250.2" y="867.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="253.2" y="878.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="250.2" y="851.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.2" y="862.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="250.2" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.2" y="846.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="250.2" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.2" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="250.8" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="253.8" y="862.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="251.2" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.2" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="251.5" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="254.5" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="251.8" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="251.8" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="251.8" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$216/1120270908.accept (14 samples, 0.38%)</title><rect x="252.5" y="1075.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (14 samples, 0.38%)</title><rect x="252.5" y="1059.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 0.38%)</title><rect x="252.5" y="1043.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.38%)</title><rect x="252.5" y="1027.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.03%)</title><rect x="253.1" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="253.1" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="253.1" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.1" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="253.1" y="963.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="256.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.30%)</title><rect x="253.4" y="1011.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.30%)</title><rect x="253.4" y="995.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.30%)</title><rect x="253.4" y="979.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.30%)</title><rect x="253.4" y="963.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (9 samples, 0.25%)</title><rect x="253.4" y="947.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="253.4" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="253.4" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="253.4" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="253.4" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="253.4" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="253.4" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.4" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="253.4" y="835.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="256.4" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="253.4" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="256.4" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="253.4" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="256.4" y="814.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="253.4" y="787.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="256.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.22%)</title><rect x="253.7" y="931.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.22%)</title><rect x="253.7" y="915.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.22%)</title><rect x="253.7" y="899.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.22%)</title><rect x="253.7" y="883.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.22%)</title><rect x="253.7" y="867.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.7" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.08%)</title><rect x="253.7" y="851.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="256.7" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="253.7" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="256.7" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="254.1" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="257.1" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="254.4" y="835.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="257.4" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.11%)</title><rect x="254.7" y="851.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="257.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="255.0" y="835.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="258.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="255.0" y="819.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="258.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="255.4" y="803.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="258.4" y="814.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="255.4" y="787.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="258.4" y="798.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="255.4" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="258.4" y="782.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="255.4" y="755.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.4" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="255.4" y="739.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="258.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="255.4" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="258.4" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="256.0" y="851.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="259.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="256.3" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (19 samples, 0.52%)</title><rect x="257.0" y="1123.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.52%)</title><rect x="257.0" y="1107.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.52%)</title><rect x="257.0" y="1091.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.52%)</title><rect x="257.0" y="1075.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.0" y="1086.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.22%)</title><rect x="258.3" y="1059.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="261.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.05%)</title><rect x="260.9" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.03%)</title><rect x="261.5" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$365/1924560206.run (1 samples, 0.03%)</title><rect x="261.8" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="262.1" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.run (2 samples, 0.05%)</title><rect x="262.5" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (726 samples, 19.86%)</title><rect x="263.1" y="1123.0" width="234.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.1" y="1134.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (498 samples, 13.63%)</title><rect x="267.6" y="1107.0" width="160.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.6" y="1118.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (422 samples, 11.55%)</title><rect x="267.6" y="1091.0" width="136.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.6" y="1102.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.44%)</title><rect x="267.6" y="1075.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.44%)</title><rect x="267.6" y="1059.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.44%)</title><rect x="267.6" y="1043.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.08%)</title><rect x="271.8" y="1027.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.8" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="271.8" y="1011.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="274.8" y="1022.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="272.2" y="995.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="275.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="1011.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="275.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="272.5" y="995.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="275.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="272.5" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="272.5" y="963.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (125 samples, 3.42%)</title><rect x="272.8" y="1075.0" width="40.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.8" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (125 samples, 3.42%)</title><rect x="272.8" y="1059.0" width="40.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.8" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (119 samples, 3.26%)</title><rect x="274.1" y="1043.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.1" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (119 samples, 3.26%)</title><rect x="274.1" y="1027.0" width="38.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.1" y="1038.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (119 samples, 3.26%)</title><rect x="274.1" y="1011.0" width="38.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.1" y="1022.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="274.1" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="277.1" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="274.4" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="277.4" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.36%)</title><rect x="274.7" y="995.0" width="4.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="277.7" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.11%)</title><rect x="275.7" y="979.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="278.7" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="277.0" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="280.0" y="990.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="277.3" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="280.3" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="278.0" y="979.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="281.0" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="278.3" y="979.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="281.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (104 samples, 2.85%)</title><rect x="278.9" y="995.0" width="33.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="281.9" y="1006.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 2.27%)</title><rect x="285.7" y="979.0" width="26.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.7" y="990.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="285.7" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="288.7" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 2.24%)</title><rect x="286.0" y="963.0" width="26.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="289.0" y="974.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (78 samples, 2.13%)</title><rect x="287.3" y="947.0" width="25.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.3" y="958.0">_..</text>
</g>
<g>
<title>do_futex (78 samples, 2.13%)</title><rect x="287.3" y="931.0" width="25.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.3" y="942.0">d..</text>
</g>
<g>
<title>futex_wake (75 samples, 2.05%)</title><rect x="287.3" y="915.0" width="24.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="290.3" y="926.0">f..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="288.3" y="899.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="291.3" y="910.0"></text>
</g>
<g>
<title>wake_up_q (71 samples, 1.94%)</title><rect x="288.6" y="899.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="291.6" y="910.0">w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="288.9" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.9" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (69 samples, 1.89%)</title><rect x="289.3" y="883.0" width="22.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.3" y="894.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (69 samples, 1.89%)</title><rect x="289.3" y="867.0" width="22.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.3" y="878.0">_..</text>
</g>
<g>
<title>hash_futex (3 samples, 0.08%)</title><rect x="311.5" y="915.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.05%)</title><rect x="312.5" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (4 samples, 0.11%)</title><rect x="313.2" y="1075.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (4 samples, 0.11%)</title><rect x="313.2" y="1059.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (276 samples, 7.55%)</title><rect x="314.4" y="1075.0" width="89.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.4" y="1086.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (274 samples, 7.50%)</title><rect x="315.1" y="1059.0" width="88.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.1" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.08%)</title><rect x="315.1" y="1043.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="318.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (111 samples, 3.04%)</title><rect x="316.1" y="1043.0" width="35.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="319.1" y="1054.0">Uns..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.08%)</title><rect x="318.6" y="1027.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="321.6" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="319.6" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="322.6" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.30%)</title><rect x="319.9" y="1027.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="322.9" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.14%)</title><rect x="320.9" y="1011.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="323.9" y="1022.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="321.5" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="324.5" y="1006.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.05%)</title><rect x="321.9" y="995.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="324.9" y="1006.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="322.5" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="325.5" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="323.2" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="326.2" y="1022.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="323.5" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="326.5" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="323.8" y="1027.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="326.8" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (79 samples, 2.16%)</title><rect x="324.1" y="1027.0" width="25.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="327.1" y="1038.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 1.18%)</title><rect x="335.8" y="1011.0" width="13.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.8" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="335.8" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="338.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.15%)</title><rect x="336.1" y="995.0" width="13.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.47%)</title><rect x="344.1" y="979.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.1" y="990.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.36%)</title><rect x="345.1" y="963.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="348.1" y="974.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.19%)</title><rect x="346.4" y="947.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.4" y="958.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="348.0" y="931.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="351.0" y="942.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.05%)</title><rect x="348.0" y="915.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="351.0" y="926.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.05%)</title><rect x="348.7" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.7" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="349.3" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.3" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="349.6" y="1027.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="352.6" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="350.0" y="1027.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="353.0" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="350.3" y="1027.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="353.3" y="1038.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="350.6" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="353.6" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.05%)</title><rect x="350.9" y="1027.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="353.9" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="351.6" y="1027.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="354.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (159 samples, 4.35%)</title><rect x="351.9" y="1043.0" width="51.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="354.9" y="1054.0">[unkn..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.11%)</title><rect x="351.9" y="1027.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="354.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.03%)</title><rect x="353.2" y="1027.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="356.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.27%)</title><rect x="353.5" y="1027.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="356.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="356.7" y="1027.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="359.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (5 samples, 0.14%)</title><rect x="357.1" y="1027.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="360.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.08%)</title><rect x="358.7" y="1027.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="361.7" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (135 samples, 3.69%)</title><rect x="359.6" y="1027.0" width="43.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="362.6" y="1038.0">pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.20%)</title><rect x="389.0" y="1011.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.0" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.20%)</title><rect x="389.0" y="995.0" width="14.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 1.01%)</title><rect x="391.3" y="979.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.3" y="990.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.96%)</title><rect x="391.3" y="963.0" width="11.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.3" y="974.0"></text>
</g>
<g>
<title>futex_wait (34 samples, 0.93%)</title><rect x="391.6" y="947.0" width="11.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.6" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="393.2" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="396.2" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.44%)</title><rect x="393.5" y="931.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.5" y="942.0"></text>
</g>
<g>
<title>plist_add (5 samples, 0.14%)</title><rect x="394.2" y="915.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.2" y="926.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.25%)</title><rect x="395.8" y="915.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="398.8" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.16%)</title><rect x="396.8" y="899.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.8" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.25%)</title><rect x="398.7" y="931.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.7" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="399.0" y="915.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.0" y="926.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="399.7" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="402.7" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.05%)</title><rect x="399.7" y="899.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.7" y="910.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.11%)</title><rect x="400.3" y="915.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="403.3" y="926.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.08%)</title><rect x="401.6" y="931.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="404.6" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="402.6" y="963.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="405.6" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="403.2" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="406.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="403.5" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.08%)</title><rect x="403.9" y="1091.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (15 samples, 0.41%)</title><rect x="404.8" y="1091.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (15 samples, 0.41%)</title><rect x="404.8" y="1075.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (15 samples, 0.41%)</title><rect x="404.8" y="1059.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.41%)</title><rect x="404.8" y="1043.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.41%)</title><rect x="404.8" y="1027.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.27%)</title><rect x="406.5" y="1011.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.5" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.19%)</title><rect x="406.5" y="995.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="409.5" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="406.5" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="409.5" y="990.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="406.8" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="409.8" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.14%)</title><rect x="407.1" y="979.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="410.1" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="408.1" y="963.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="411.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="408.1" y="947.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="411.1" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="408.4" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.4" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="408.4" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="411.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="408.7" y="995.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="411.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="408.7" y="979.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="411.7" y="990.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.05%)</title><rect x="409.0" y="979.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="412.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="409.4" y="963.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="412.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="409.4" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="412.4" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="409.4" y="931.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="412.4" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="409.4" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="412.4" y="926.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="409.4" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="412.4" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="409.4" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (58 samples, 1.59%)</title><rect x="409.7" y="1091.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (58 samples, 1.59%)</title><rect x="409.7" y="1075.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (58 samples, 1.59%)</title><rect x="409.7" y="1059.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.03%)</title><rect x="410.7" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 1.48%)</title><rect x="411.0" y="1043.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 1.48%)</title><rect x="411.0" y="1027.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.0" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="411.3" y="1011.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="414.3" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="411.3" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="414.3" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="411.6" y="995.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="414.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (51 samples, 1.40%)</title><rect x="411.9" y="1011.0" width="16.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="414.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.26%)</title><rect x="413.6" y="995.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.26%)</title><rect x="413.6" y="979.0" width="14.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 1.15%)</title><rect x="414.8" y="963.0" width="13.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.8" y="974.0"></text>
</g>
<g>
<title>do_futex (42 samples, 1.15%)</title><rect x="414.8" y="947.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="417.8" y="958.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 1.12%)</title><rect x="414.8" y="931.0" width="13.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.8" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="415.8" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="418.8" y="926.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="415.8" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.8" y="910.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 1.01%)</title><rect x="416.1" y="915.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.1" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.98%)</title><rect x="416.5" y="899.0" width="11.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.5" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.98%)</title><rect x="416.5" y="883.0" width="11.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="419.5" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="428.1" y="931.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="431.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (214 samples, 5.85%)</title><rect x="428.4" y="1107.0" width="69.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.4" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (139 samples, 3.80%)</title><rect x="428.7" y="1091.0" width="44.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.7" y="1102.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (11 samples, 0.30%)</title><rect x="429.4" y="1075.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 0.30%)</title><rect x="429.4" y="1059.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.30%)</title><rect x="429.4" y="1043.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.22%)</title><rect x="430.3" y="1027.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.3" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.19%)</title><rect x="430.3" y="1011.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="433.3" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.14%)</title><rect x="430.7" y="995.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="433.7" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="431.6" y="979.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="434.6" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="431.6" y="963.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.6" y="974.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="432.3" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="435.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="432.6" y="1011.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="435.6" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="432.6" y="995.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="435.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (29 samples, 0.79%)</title><rect x="432.9" y="1075.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.79%)</title><rect x="432.9" y="1059.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.68%)</title><rect x="434.2" y="1043.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.68%)</title><rect x="434.2" y="1027.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 0.68%)</title><rect x="434.2" y="1011.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.2" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="434.5" y="995.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="437.5" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="434.9" y="979.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="437.9" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 0.60%)</title><rect x="435.2" y="995.0" width="7.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="438.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.55%)</title><rect x="435.8" y="979.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.8" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.55%)</title><rect x="435.8" y="963.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.8" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.52%)</title><rect x="435.8" y="947.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.8" y="958.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.52%)</title><rect x="435.8" y="931.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="438.8" y="942.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.52%)</title><rect x="435.8" y="915.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.8" y="926.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.47%)</title><rect x="436.5" y="899.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.5" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.47%)</title><rect x="436.5" y="883.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.5" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.47%)</title><rect x="436.5" y="867.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.5" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="442.0" y="947.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.05%)</title><rect x="442.3" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.05%)</title><rect x="442.3" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (93 samples, 2.54%)</title><rect x="442.9" y="1075.0" width="30.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.9" y="1086.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (93 samples, 2.54%)</title><rect x="442.9" y="1059.0" width="30.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.9" y="1070.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (42 samples, 1.15%)</title><rect x="443.3" y="1043.0" width="13.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="446.3" y="1054.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="444.5" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="447.5" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.16%)</title><rect x="444.9" y="1027.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="447.9" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="446.2" y="1011.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="449.2" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (29 samples, 0.79%)</title><rect x="446.8" y="1027.0" width="9.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="449.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.49%)</title><rect x="450.4" y="1011.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.4" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.49%)</title><rect x="450.4" y="995.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.4" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.19%)</title><rect x="453.6" y="979.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="456.6" y="990.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.16%)</title><rect x="453.9" y="963.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="456.9" y="974.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.11%)</title><rect x="454.6" y="947.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="457.6" y="958.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="455.5" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.5" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="455.8" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.8" y="990.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="456.2" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="459.2" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="456.5" y="1027.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="459.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.37%)</title><rect x="456.8" y="1043.0" width="16.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="459.8" y="1054.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="456.8" y="1027.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="459.8" y="1038.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="457.5" y="1027.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="460.5" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (46 samples, 1.26%)</title><rect x="458.1" y="1027.0" width="14.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="461.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.36%)</title><rect x="468.8" y="1011.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.8" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.36%)</title><rect x="468.8" y="995.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.8" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.25%)</title><rect x="470.1" y="979.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.1" y="990.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.25%)</title><rect x="470.1" y="963.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.1" y="974.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.25%)</title><rect x="470.1" y="947.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.1" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="470.4" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="473.4" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="470.7" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.7" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="470.7" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.7" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.11%)</title><rect x="471.0" y="931.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="474.0" y="942.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.08%)</title><rect x="471.0" y="915.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.0" y="926.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="472.0" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.0" y="926.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="472.3" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.3" y="942.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="472.6" y="931.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="473.0" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (18 samples, 0.49%)</title><rect x="473.6" y="1091.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (18 samples, 0.49%)</title><rect x="473.6" y="1075.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (18 samples, 0.49%)</title><rect x="473.6" y="1059.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="473.9" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.41%)</title><rect x="474.3" y="1043.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.41%)</title><rect x="474.3" y="1027.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.33%)</title><rect x="475.2" y="1011.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.2" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="475.2" y="995.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="478.2" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="475.5" y="979.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="478.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.27%)</title><rect x="475.9" y="995.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="478.9" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (10 samples, 0.27%)</title><rect x="475.9" y="979.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="478.9" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="478.1" y="963.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="478.1" y="947.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.1" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.08%)</title><rect x="478.1" y="931.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.1" y="942.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.08%)</title><rect x="478.1" y="915.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.1" y="926.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.08%)</title><rect x="478.1" y="899.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="481.1" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="478.1" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="481.1" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="478.1" y="867.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="481.1" y="878.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="478.4" y="883.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="481.4" y="894.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="478.4" y="867.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="481.4" y="878.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="478.8" y="867.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="479.1" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (56 samples, 1.53%)</title><rect x="479.4" y="1091.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (56 samples, 1.53%)</title><rect x="479.4" y="1075.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (56 samples, 1.53%)</title><rect x="479.4" y="1059.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 1.40%)</title><rect x="481.0" y="1043.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 1.40%)</title><rect x="481.0" y="1027.0" width="16.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.0" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="481.4" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="484.4" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.11%)</title><rect x="481.7" y="1011.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="484.7" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="481.7" y="995.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="484.7" y="1006.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="482.0" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="485.0" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="482.3" y="995.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="485.3" y="1006.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="482.6" y="995.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="485.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (45 samples, 1.23%)</title><rect x="483.0" y="1011.0" width="14.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="486.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.01%)</title><rect x="485.6" y="995.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.01%)</title><rect x="485.6" y="979.0" width="11.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="488.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.90%)</title><rect x="486.8" y="963.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.8" y="974.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.88%)</title><rect x="486.8" y="947.0" width="10.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.8" y="958.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 0.85%)</title><rect x="486.8" y="931.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="489.8" y="942.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.77%)</title><rect x="487.8" y="915.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="490.8" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.77%)</title><rect x="487.8" y="899.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="490.8" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.77%)</title><rect x="487.8" y="883.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.8" y="894.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="496.9" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="499.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="497.2" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="500.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$365/1924560206.run (415 samples, 11.35%)</title><rect x="497.5" y="1123.0" width="134.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.5" y="1134.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (415 samples, 11.35%)</title><rect x="497.5" y="1107.0" width="134.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.5" y="1118.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (413 samples, 11.30%)</title><rect x="498.1" y="1091.0" width="133.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.1" y="1102.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (410 samples, 11.22%)</title><rect x="499.1" y="1075.0" width="132.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.1" y="1086.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (410 samples, 11.22%)</title><rect x="499.1" y="1059.0" width="132.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.1" y="1070.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (410 samples, 11.22%)</title><rect x="499.1" y="1043.0" width="132.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.1" y="1054.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (405 samples, 11.08%)</title><rect x="500.7" y="1027.0" width="130.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.7" y="1038.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (405 samples, 11.08%)</title><rect x="500.7" y="1011.0" width="130.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.7" y="1022.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (405 samples, 11.08%)</title><rect x="500.7" y="995.0" width="130.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.7" y="1006.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="500.7" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="500.7" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="500.7" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="500.7" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="500.7" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="500.7" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="500.7" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="500.7" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (404 samples, 11.05%)</title><rect x="501.0" y="979.0" width="130.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.0" y="990.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (1 samples, 0.03%)</title><rect x="501.0" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (403 samples, 11.03%)</title><rect x="501.4" y="963.0" width="130.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.4" y="974.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (56 samples, 1.53%)</title><rect x="501.7" y="947.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (48 samples, 1.31%)</title><rect x="502.3" y="931.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 1.31%)</title><rect x="502.3" y="915.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (48 samples, 1.31%)</title><rect x="502.3" y="899.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 1.31%)</title><rect x="502.3" y="883.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (15 samples, 0.41%)</title><rect x="503.0" y="867.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.14%)</title><rect x="503.0" y="851.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.0" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="503.0" y="835.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="506.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.08%)</title><rect x="503.3" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.3" y="846.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$58/1579526446.apply (1 samples, 0.03%)</title><rect x="504.3" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.3" y="846.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$58/1579526446.apply (1 samples, 0.03%)</title><rect x="504.6" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$395/1667390995.apply (7 samples, 0.19%)</title><rect x="504.9" y="851.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.14%)</title><rect x="505.6" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.14%)</title><rect x="505.6" y="819.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.08%)</title><rect x="505.9" y="803.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="505.9" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="505.9" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/790771239.get$Lambda (1 samples, 0.03%)</title><rect x="505.9" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="505.9" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="506.2" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="506.2" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="506.2" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.05%)</title><rect x="506.2" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="506.2" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="506.2" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.03%)</title><rect x="506.9" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/481626032.apply (2 samples, 0.05%)</title><rect x="507.2" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.05%)</title><rect x="507.2" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.05%)</title><rect x="507.2" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.05%)</title><rect x="507.2" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.05%)</title><rect x="507.2" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="507.2" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/288075623.run (2 samples, 0.05%)</title><rect x="507.2" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.05%)</title><rect x="507.2" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="507.2" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="507.2" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="507.2" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="507.2" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.03%)</title><rect x="507.5" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="507.5" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="507.5" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="507.5" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="507.5" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="507.5" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (1 samples, 0.03%)</title><rect x="507.5" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="507.5" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="507.5" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="507.5" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="507.5" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.run (1 samples, 0.03%)</title><rect x="507.5" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="507.5" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.03%)</title><rect x="507.5" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="507.5" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="507.5" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.03%)</title><rect x="507.5" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (29 samples, 0.79%)</title><rect x="507.8" y="867.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (28 samples, 0.77%)</title><rect x="508.2" y="851.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.08%)</title><rect x="508.2" y="835.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$344/1789618947.apply (25 samples, 0.68%)</title><rect x="509.1" y="835.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.03%)</title><rect x="509.1" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (24 samples, 0.66%)</title><rect x="509.4" y="819.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (24 samples, 0.66%)</title><rect x="509.4" y="803.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/1368770104.apply (23 samples, 0.63%)</title><rect x="509.4" y="787.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (23 samples, 0.63%)</title><rect x="509.4" y="771.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="509.4" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="509.8" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForLog (1 samples, 0.03%)</title><rect x="510.1" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.requests (1 samples, 0.03%)</title><rect x="510.1" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="510.1" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (20 samples, 0.55%)</title><rect x="510.4" y="755.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (12 samples, 0.33%)</title><rect x="510.4" y="739.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (12 samples, 0.33%)</title><rect x="510.4" y="723.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (12 samples, 0.33%)</title><rect x="510.4" y="707.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$383/69721372.accept (2 samples, 0.05%)</title><rect x="510.4" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (2 samples, 0.05%)</title><rect x="510.4" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (2 samples, 0.05%)</title><rect x="510.4" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="510.4" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.screenExecutor (2 samples, 0.05%)</title><rect x="510.4" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$391/1901148960.accept (7 samples, 0.19%)</title><rect x="511.1" y="691.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (7 samples, 0.19%)</title><rect x="511.1" y="675.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.19%)</title><rect x="511.1" y="659.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.19%)</title><rect x="511.1" y="643.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (7 samples, 0.19%)</title><rect x="511.1" y="627.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.19%)</title><rect x="511.1" y="611.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.19%)</title><rect x="511.1" y="595.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.19%)</title><rect x="511.1" y="579.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.19%)</title><rect x="511.1" y="563.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (7 samples, 0.19%)</title><rect x="511.1" y="547.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.05%)</title><rect x="511.1" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="511.1" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="511.1" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="511.1" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="511.1" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.14%)</title><rect x="511.7" y="531.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.14%)</title><rect x="511.7" y="515.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.7" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.03%)</title><rect x="511.7" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.11%)</title><rect x="512.0" y="499.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.11%)</title><rect x="512.0" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.11%)</title><rect x="512.0" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.11%)</title><rect x="512.0" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.11%)</title><rect x="512.0" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (4 samples, 0.11%)</title><rect x="512.0" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (4 samples, 0.11%)</title><rect x="512.0" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.08%)</title><rect x="513.3" y="691.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.08%)</title><rect x="513.3" y="675.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.08%)</title><rect x="513.3" y="659.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (3 samples, 0.08%)</title><rect x="513.3" y="643.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (8 samples, 0.22%)</title><rect x="514.3" y="739.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (8 samples, 0.22%)</title><rect x="514.3" y="723.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.11%)</title><rect x="514.6" y="707.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="514.6" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.03%)</title><rect x="514.6" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="514.6" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="514.6" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="514.6" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="514.6" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (3 samples, 0.08%)</title><rect x="514.9" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.08%)</title><rect x="514.9" y="675.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.&lt;init&gt; (1 samples, 0.03%)</title><rect x="514.9" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.03%)</title><rect x="514.9" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="515.3" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$DeferredCompleter.&lt;init&gt; (2 samples, 0.05%)</title><rect x="515.3" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.3" y="654.0"></text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.03%)</title><rect x="515.3" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="518.3" y="638.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.03%)</title><rect x="515.3" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="518.3" y="622.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.03%)</title><rect x="515.3" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="518.3" y="606.0"></text>
</g>
<g>
<title>SignatureInfo::do_void() (1 samples, 0.03%)</title><rect x="515.3" y="579.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="518.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="515.6" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (3 samples, 0.08%)</title><rect x="515.9" y="707.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="516.5" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="516.5" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.5" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="516.5" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="516.5" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="516.5" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$222/461624569.apply (1 samples, 0.03%)</title><rect x="516.9" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.03%)</title><rect x="516.9" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.03%)</title><rect x="516.9" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="516.9" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.03%)</title><rect x="516.9" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="516.9" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="516.9" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.9" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="516.9" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="517.2" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="517.2" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="517.2" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.2" y="846.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="517.5" y="867.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="520.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.14%)</title><rect x="517.8" y="931.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.03%)</title><rect x="519.1" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.03%)</title><rect x="519.1" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="519.5" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$402/1461765245.run (1 samples, 0.03%)</title><rect x="519.5" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.03%)</title><rect x="519.5" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.03%)</title><rect x="519.5" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.03%)</title><rect x="519.5" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="519.5" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="519.5" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="519.8" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="519.8" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="519.8" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (345 samples, 9.44%)</title><rect x="520.1" y="947.0" width="111.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.1" y="958.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (344 samples, 9.41%)</title><rect x="520.4" y="931.0" width="111.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.4" y="942.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (344 samples, 9.41%)</title><rect x="520.4" y="915.0" width="111.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.4" y="926.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (344 samples, 9.41%)</title><rect x="520.4" y="899.0" width="111.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.4" y="910.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$398/1922711056.run (2 samples, 0.05%)</title><rect x="520.7" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.05%)</title><rect x="520.7" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (341 samples, 9.33%)</title><rect x="521.4" y="883.0" width="110.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.4" y="894.0">jdk/internal/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (336 samples, 9.19%)</title><rect x="521.4" y="867.0" width="108.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.4" y="878.0">java/nio/chan..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (336 samples, 9.19%)</title><rect x="521.4" y="851.0" width="108.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.4" y="862.0">sun/nio/ch/So..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="521.7" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="521.7" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (334 samples, 9.14%)</title><rect x="522.0" y="835.0" width="107.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.0" y="846.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (333 samples, 9.11%)</title><rect x="522.4" y="819.0" width="107.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.4" y="830.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (11 samples, 0.30%)</title><rect x="522.4" y="803.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.30%)</title><rect x="522.4" y="787.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (11 samples, 0.30%)</title><rect x="522.4" y="771.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (322 samples, 8.81%)</title><rect x="525.9" y="803.0" width="104.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.9" y="814.0">sun/nio/ch/S..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="526.6" y="787.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="529.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (319 samples, 8.73%)</title><rect x="526.9" y="787.0" width="103.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.9" y="798.0">sun/nio/ch/F..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.03%)</title><rect x="526.9" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="529.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (313 samples, 8.56%)</title><rect x="527.2" y="771.0" width="101.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="530.2" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (313 samples, 8.56%)</title><rect x="527.2" y="755.0" width="101.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="530.2" y="766.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (310 samples, 8.48%)</title><rect x="527.2" y="739.0" width="100.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="530.2" y="750.0">__GI___writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (289 samples, 7.91%)</title><rect x="534.0" y="723.0" width="93.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.0" y="734.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.03%)</title><rect x="534.0" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="537.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (288 samples, 7.88%)</title><rect x="534.3" y="707.0" width="93.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="537.3" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_writev (282 samples, 7.72%)</title><rect x="536.2" y="691.0" width="91.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.2" y="702.0">__x64_sys_w..</text>
</g>
<g>
<title>do_writev (282 samples, 7.72%)</title><rect x="536.2" y="675.0" width="91.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="539.2" y="686.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.16%)</title><rect x="536.6" y="659.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.16%)</title><rect x="536.6" y="643.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="539.6" y="654.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.16%)</title><rect x="536.6" y="627.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.6" y="638.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="538.5" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="541.5" y="670.0"></text>
</g>
<g>
<title>vfs_writev (274 samples, 7.50%)</title><rect x="538.8" y="659.0" width="88.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="541.8" y="670.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (267 samples, 7.31%)</title><rect x="540.4" y="643.0" width="86.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.4" y="654.0">do_iter_wr..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.05%)</title><rect x="541.4" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.4" y="638.0"></text>
</g>
<g>
<title>do_iter_readv_writev (251 samples, 6.87%)</title><rect x="542.0" y="627.0" width="81.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="545.0" y="638.0">do_iter_r..</text>
</g>
<g>
<title>sock_write_iter (249 samples, 6.81%)</title><rect x="542.7" y="611.0" width="80.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.7" y="622.0">sock_writ..</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="543.7" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.7" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (245 samples, 6.70%)</title><rect x="544.0" y="595.0" width="79.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.0" y="606.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.05%)</title><rect x="544.0" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="547.0" y="590.0"></text>
</g>
<g>
<title>inet6_sendmsg (233 samples, 6.37%)</title><rect x="544.6" y="579.0" width="75.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="547.6" y="590.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (231 samples, 6.32%)</title><rect x="545.3" y="563.0" width="74.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="548.3" y="574.0">tcp_send..</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="545.3" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.3" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="545.6" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="545.6" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.6" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="545.6" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.6" y="526.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.03%)</title><rect x="545.9" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="548.9" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="546.2" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="549.2" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="546.6" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="549.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (226 samples, 6.18%)</title><rect x="546.9" y="547.0" width="73.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.9" y="558.0">tcp_send..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="549.5" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="552.5" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.08%)</title><rect x="549.8" y="531.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.8" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="550.8" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="553.8" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="550.8" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="553.8" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.25%)</title><rect x="551.4" y="531.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.4" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.22%)</title><rect x="551.4" y="515.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (1 samples, 0.03%)</title><rect x="552.1" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="555.1" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="552.1" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="555.1" y="494.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="552.4" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="552.7" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="555.7" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="553.0" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="556.0" y="494.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="553.3" y="499.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="556.3" y="510.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="553.3" y="483.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.3" y="494.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="554.0" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.0" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="554.3" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="557.3" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.03%)</title><rect x="554.3" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.3" y="526.0"></text>
</g>
<g>
<title>tcp_push (200 samples, 5.47%)</title><rect x="554.6" y="531.0" width="64.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.6" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (199 samples, 5.44%)</title><rect x="555.0" y="515.0" width="64.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.0" y="526.0">__tcp_p..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="555.0" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="558.0" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (198 samples, 5.42%)</title><rect x="555.3" y="499.0" width="63.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.3" y="510.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (178 samples, 4.87%)</title><rect x="556.9" y="483.0" width="57.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="559.9" y="494.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="557.9" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="560.9" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (172 samples, 4.71%)</title><rect x="558.2" y="467.0" width="55.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.2" y="478.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (170 samples, 4.65%)</title><rect x="558.2" y="451.0" width="54.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="561.2" y="462.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (165 samples, 4.51%)</title><rect x="558.5" y="435.0" width="53.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.5" y="446.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.11%)</title><rect x="558.8" y="419.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.8" y="430.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.08%)</title><rect x="558.8" y="403.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="561.8" y="414.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.03%)</title><rect x="559.8" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="562.8" y="414.0"></text>
</g>
<g>
<title>ip_output (160 samples, 4.38%)</title><rect x="560.1" y="419.0" width="51.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="563.1" y="430.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (152 samples, 4.16%)</title><rect x="560.8" y="403.0" width="49.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.8" y="414.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="561.1" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.1" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (150 samples, 4.10%)</title><rect x="561.4" y="387.0" width="48.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="564.4" y="398.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (149 samples, 4.08%)</title><rect x="561.7" y="371.0" width="48.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.7" y="382.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (129 samples, 3.53%)</title><rect x="563.0" y="355.0" width="41.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.0" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (129 samples, 3.53%)</title><rect x="563.0" y="339.0" width="41.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.0" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (128 samples, 3.50%)</title><rect x="563.4" y="323.0" width="41.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="566.4" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (125 samples, 3.42%)</title><rect x="563.4" y="307.0" width="40.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="566.4" y="318.0">__s..</text>
</g>
<g>
<title>net_rx_action (124 samples, 3.39%)</title><rect x="563.7" y="291.0" width="40.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="566.7" y="302.0">net..</text>
</g>
<g>
<title>process_backlog (121 samples, 3.31%)</title><rect x="564.6" y="275.0" width="39.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="567.6" y="286.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (119 samples, 3.26%)</title><rect x="565.3" y="259.0" width="38.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.3" y="270.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (118 samples, 3.23%)</title><rect x="565.3" y="243.0" width="38.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="568.3" y="254.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.11%)</title><rect x="565.6" y="227.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv (111 samples, 3.04%)</title><rect x="566.9" y="227.0" width="35.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.9" y="238.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="567.2" y="211.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (108 samples, 2.95%)</title><rect x="567.9" y="211.0" width="34.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.9" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (108 samples, 2.95%)</title><rect x="567.9" y="195.0" width="34.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.9" y="206.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (108 samples, 2.95%)</title><rect x="567.9" y="179.0" width="34.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="570.9" y="190.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (108 samples, 2.95%)</title><rect x="567.9" y="163.0" width="34.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="570.9" y="174.0">ip..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="568.2" y="147.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="571.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (105 samples, 2.87%)</title><rect x="568.8" y="147.0" width="33.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.8" y="158.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.19%)</title><rect x="570.1" y="131.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="573.1" y="142.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="572.1" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="575.1" y="126.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="572.4" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="575.4" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="573.0" y="131.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.0" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.30%)</title><rect x="573.4" y="131.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="576.4" y="142.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.08%)</title><rect x="573.7" y="115.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="576.7" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.19%)</title><rect x="574.7" y="115.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.7" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.19%)</title><rect x="574.7" y="99.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.7" y="110.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.05%)</title><rect x="575.9" y="83.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="578.9" y="94.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.05%)</title><rect x="575.9" y="67.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.9" y="78.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="576.6" y="83.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="579.6" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (80 samples, 2.19%)</title><rect x="576.9" y="131.0" width="25.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="579.9" y="142.0">t..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="576.9" y="115.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.9" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="577.2" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (78 samples, 2.13%)</title><rect x="577.6" y="115.0" width="25.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="580.6" y="126.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.08%)</title><rect x="579.2" y="99.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="582.2" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="579.5" y="83.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.5" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="579.5" y="67.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.5" y="78.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="579.5" y="51.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="582.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="579.5" y="35.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="582.5" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 1.34%)</title><rect x="580.1" y="99.0" width="15.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (48 samples, 1.31%)</title><rect x="580.5" y="83.0" width="15.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 1.31%)</title><rect x="580.5" y="67.0" width="15.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.5" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (48 samples, 1.31%)</title><rect x="580.5" y="51.0" width="15.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.5" y="62.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.44%)</title><rect x="596.0" y="99.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="599.0" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.14%)</title><rect x="598.2" y="83.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="601.2" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.11%)</title><rect x="598.2" y="67.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="601.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="598.9" y="51.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.9" y="62.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="599.5" y="67.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="602.5" y="78.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="599.5" y="51.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="602.5" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (1 samples, 0.03%)</title><rect x="599.8" y="83.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.8" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="600.2" y="83.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="603.2" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="600.5" y="83.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.5" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (1 samples, 0.03%)</title><rect x="601.1" y="99.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="604.1" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.08%)</title><rect x="601.5" y="99.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.5" y="110.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="602.4" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="605.4" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="602.7" y="227.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="603.4" y="243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.4" y="254.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.08%)</title><rect x="603.7" y="307.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.7" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.44%)</title><rect x="604.7" y="355.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.7" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.41%)</title><rect x="604.7" y="339.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="607.7" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.16%)</title><rect x="606.6" y="323.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.08%)</title><rect x="606.6" y="307.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.6" y="318.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.08%)</title><rect x="606.6" y="291.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.6" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.08%)</title><rect x="606.6" y="275.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.6" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.08%)</title><rect x="606.6" y="259.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.6" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="607.6" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.6" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="607.9" y="307.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.9" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="608.6" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.6" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="608.9" y="323.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="611.9" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="609.5" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.5" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.16%)</title><rect x="609.8" y="403.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="612.8" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.03%)</title><rect x="609.8" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="612.8" y="398.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.14%)</title><rect x="610.2" y="387.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="613.2" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.14%)</title><rect x="610.2" y="371.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.2" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.08%)</title><rect x="610.8" y="355.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.8" y="366.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="611.5" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.5" y="350.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="611.8" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.8" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.08%)</title><rect x="612.1" y="435.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="615.1" y="446.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="613.1" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="616.1" y="462.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="613.4" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.4" y="462.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="613.7" y="467.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="616.7" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="614.4" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="617.4" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="614.4" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="617.4" y="478.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="614.7" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="617.7" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.14%)</title><rect x="615.0" y="483.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="618.0" y="494.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="615.0" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="618.0" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.11%)</title><rect x="615.3" y="467.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="618.3" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.11%)</title><rect x="615.3" y="451.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="618.3" y="462.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.11%)</title><rect x="615.3" y="435.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="618.3" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="615.7" y="419.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="618.7" y="430.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="616.3" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.3" y="430.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="616.6" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="619.6" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="616.9" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.9" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.14%)</title><rect x="617.3" y="483.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="620.3" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.05%)</title><rect x="617.3" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.3" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.08%)</title><rect x="617.9" y="467.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.08%)</title><rect x="617.9" y="451.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="620.9" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="617.9" y="435.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.9" y="446.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="618.9" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="621.9" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="619.2" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="622.2" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.25%)</title><rect x="619.9" y="579.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="622.9" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.08%)</title><rect x="620.5" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.08%)</title><rect x="620.5" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="623.5" y="558.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (4 samples, 0.11%)</title><rect x="621.5" y="563.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="624.5" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.11%)</title><rect x="621.5" y="547.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.5" y="558.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.03%)</title><rect x="622.8" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="625.8" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.30%)</title><rect x="623.1" y="627.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.1" y="638.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.30%)</title><rect x="623.1" y="611.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.1" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.14%)</title><rect x="623.4" y="595.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.4" y="606.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.14%)</title><rect x="623.4" y="579.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="626.4" y="590.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.14%)</title><rect x="623.4" y="563.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="626.4" y="574.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.14%)</title><rect x="625.0" y="595.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="628.0" y="606.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.05%)</title><rect x="626.0" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.0" y="590.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="626.0" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.0" y="574.0"></text>
</g>
<g>
<title>inode_has_perm (1 samples, 0.03%)</title><rect x="626.3" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="629.3" y="574.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="626.3" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="629.3" y="558.0"></text>
</g>
<g>
<title>import_iovec (2 samples, 0.05%)</title><rect x="626.6" y="643.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="629.6" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.05%)</title><rect x="626.6" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.6" y="638.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="626.6" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="629.6" y="622.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="627.0" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="630.0" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.08%)</title><rect x="627.3" y="739.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="630.3" y="750.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.08%)</title><rect x="628.2" y="771.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="631.2" y="782.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.05%)</title><rect x="629.2" y="771.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="632.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.14%)</title><rect x="629.9" y="867.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.9" y="878.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="631.2" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (494 samples, 13.52%)</title><rect x="631.5" y="1123.0" width="159.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.5" y="1134.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (493 samples, 13.49%)</title><rect x="631.5" y="1107.0" width="159.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.5" y="1118.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="631.8" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (187 samples, 5.12%)</title><rect x="632.1" y="1091.0" width="60.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.1" y="1102.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (187 samples, 5.12%)</title><rect x="632.1" y="1075.0" width="60.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.1" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (186 samples, 5.09%)</title><rect x="632.4" y="1059.0" width="60.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.4" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (36 samples, 0.98%)</title><rect x="632.8" y="1043.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (36 samples, 0.98%)</title><rect x="632.8" y="1027.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (36 samples, 0.98%)</title><rect x="632.8" y="1011.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (36 samples, 0.98%)</title><rect x="632.8" y="995.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.90%)</title><rect x="633.4" y="979.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (33 samples, 0.90%)</title><rect x="633.4" y="963.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (32 samples, 0.88%)</title><rect x="633.7" y="947.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (31 samples, 0.85%)</title><rect x="634.1" y="931.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.1" y="942.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="634.1" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.1" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="634.1" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.05%)</title><rect x="634.4" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.4" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="634.7" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="637.7" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="634.7" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="637.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (28 samples, 0.77%)</title><rect x="635.0" y="915.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.0" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="635.0" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="638.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="635.0" y="883.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="638.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="635.0" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="638.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (1 samples, 0.03%)</title><rect x="635.0" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="638.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (27 samples, 0.74%)</title><rect x="635.4" y="899.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.4" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="635.4" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="638.4" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="635.4" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="638.4" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="635.4" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="638.4" y="862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="635.4" y="835.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="638.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (26 samples, 0.71%)</title><rect x="635.7" y="883.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.68%)</title><rect x="635.7" y="867.0" width="8.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="638.7" y="878.0"></text>
</g>
<g>
<title>__libc_write (25 samples, 0.68%)</title><rect x="635.7" y="851.0" width="8.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="638.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.66%)</title><rect x="636.0" y="835.0" width="7.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.66%)</title><rect x="636.0" y="819.0" width="7.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_write (23 samples, 0.63%)</title><rect x="636.3" y="803.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="639.3" y="814.0"></text>
</g>
<g>
<title>ksys_write (23 samples, 0.63%)</title><rect x="636.3" y="787.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.3" y="798.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="636.3" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.3" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="636.3" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.3" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="636.3" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="636.6" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.6" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="636.6" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.6" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="636.6" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.6" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="636.6" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.6" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="636.6" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.6" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="636.6" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.6" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="636.6" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="636.6" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.6" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="637.0" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.0" y="782.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.55%)</title><rect x="637.3" y="771.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.3" y="782.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.44%)</title><rect x="637.3" y="755.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="640.3" y="766.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.44%)</title><rect x="637.3" y="739.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="640.3" y="750.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.03%)</title><rect x="637.3" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.3" y="734.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.41%)</title><rect x="637.6" y="723.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.6" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.30%)</title><rect x="637.9" y="707.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="640.9" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.30%)</title><rect x="637.9" y="691.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.30%)</title><rect x="637.9" y="675.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="640.9" y="686.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.08%)</title><rect x="641.5" y="707.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="644.5" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="641.8" y="691.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.8" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.11%)</title><rect x="642.5" y="755.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="645.5" y="766.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.11%)</title><rect x="642.5" y="739.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.5" y="750.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="642.8" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.8" y="734.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="642.8" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.8" y="718.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="643.1" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="646.1" y="734.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="643.4" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.4" y="734.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.03%)</title><rect x="643.4" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.4" y="718.0"></text>
</g>
<g>
<title>inode_has_perm (1 samples, 0.03%)</title><rect x="643.4" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.4" y="702.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="643.4" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="646.4" y="686.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="643.7" y="867.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="646.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.03%)</title><rect x="644.1" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.1" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="644.1" y="963.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="647.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="644.4" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.03%)</title><rect x="644.4" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="644.4" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="644.4" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="644.4" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (148 samples, 4.05%)</title><rect x="644.7" y="1043.0" width="47.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.7" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (147 samples, 4.02%)</title><rect x="644.7" y="1027.0" width="47.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.7" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (147 samples, 4.02%)</title><rect x="644.7" y="1011.0" width="47.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.7" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (147 samples, 4.02%)</title><rect x="644.7" y="995.0" width="47.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.7" y="1006.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (94 samples, 2.57%)</title><rect x="645.0" y="979.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.0" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (94 samples, 2.57%)</title><rect x="645.0" y="963.0" width="30.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.0" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (94 samples, 2.57%)</title><rect x="645.0" y="947.0" width="30.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.0" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (94 samples, 2.57%)</title><rect x="645.0" y="931.0" width="30.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.0" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="645.0" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="645.0" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (93 samples, 2.54%)</title><rect x="645.4" y="915.0" width="30.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.4" y="926.0">jd..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="645.7" y="899.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="648.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (91 samples, 2.49%)</title><rect x="646.0" y="899.0" width="29.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.0" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (90 samples, 2.46%)</title><rect x="646.3" y="883.0" width="29.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.3" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.16%)</title><rect x="646.3" y="867.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.16%)</title><rect x="646.3" y="851.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/790771239.apply (1 samples, 0.03%)</title><rect x="647.9" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (81 samples, 2.22%)</title><rect x="648.3" y="867.0" width="26.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.3" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (80 samples, 2.19%)</title><rect x="648.6" y="851.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.6" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (64 samples, 1.75%)</title><rect x="648.6" y="835.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="649.2" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.2" y="830.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$58/1579526446.apply (1 samples, 0.03%)</title><rect x="649.2" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$345/573480486.apply (1 samples, 0.03%)</title><rect x="649.6" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.6" y="814.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$58/1579526446.apply (1 samples, 0.03%)</title><rect x="649.9" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/481626032.apply (48 samples, 1.31%)</title><rect x="650.2" y="819.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (47 samples, 1.29%)</title><rect x="650.5" y="803.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (47 samples, 1.29%)</title><rect x="650.5" y="787.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (45 samples, 1.23%)</title><rect x="651.2" y="771.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (44 samples, 1.20%)</title><rect x="651.2" y="755.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (14 samples, 0.38%)</title><rect x="651.5" y="739.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.11%)</title><rect x="652.1" y="723.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.11%)</title><rect x="652.1" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.11%)</title><rect x="652.1" y="691.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.11%)</title><rect x="652.1" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.11%)</title><rect x="652.1" y="659.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.11%)</title><rect x="652.1" y="643.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.11%)</title><rect x="652.1" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.11%)</title><rect x="652.1" y="611.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="653.1" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="653.1" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.1" y="590.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="653.1" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.19%)</title><rect x="653.4" y="723.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.16%)</title><rect x="653.4" y="707.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.16%)</title><rect x="653.4" y="691.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.16%)</title><rect x="653.4" y="675.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.08%)</title><rect x="653.4" y="659.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.08%)</title><rect x="653.4" y="643.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.05%)</title><rect x="653.4" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.4" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="653.8" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.03%)</title><rect x="653.8" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$416/1117709234.applyAsLong (1 samples, 0.03%)</title><rect x="653.8" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.03%)</title><rect x="653.8" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.03%)</title><rect x="653.8" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="654.1" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.08%)</title><rect x="654.4" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.03%)</title><rect x="655.0" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.0" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.0" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.opIsStateful (1 samples, 0.03%)</title><rect x="655.4" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.03%)</title><rect x="655.7" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.7" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.7" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.7" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.7" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.03%)</title><rect x="655.7" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.7" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.03%)</title><rect x="656.0" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="656.3" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="656.3" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.03%)</title><rect x="656.3" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="656.3" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="656.3" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (1 samples, 0.03%)</title><rect x="656.3" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="656.7" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.7" y="718.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.nextKeyIndex (1 samples, 0.03%)</title><rect x="656.7" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.71%)</title><rect x="657.0" y="739.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/288075623.run (26 samples, 0.71%)</title><rect x="657.0" y="723.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (26 samples, 0.71%)</title><rect x="657.0" y="707.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.14%)</title><rect x="657.0" y="691.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.14%)</title><rect x="657.0" y="675.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (4 samples, 0.11%)</title><rect x="657.0" y="659.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.05%)</title><rect x="657.3" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="658.0" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="658.3" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.08%)</title><rect x="658.6" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.05%)</title><rect x="658.6" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.05%)</title><rect x="658.6" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="659.2" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="659.2" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (1 samples, 0.03%)</title><rect x="659.2" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.30%)</title><rect x="659.6" y="691.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.30%)</title><rect x="659.6" y="675.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="659.9" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="659.9" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/1369757709.get$Lambda (2 samples, 0.05%)</title><rect x="659.9" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/1369757709.&lt;init&gt; (2 samples, 0.05%)</title><rect x="659.9" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="659.9" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.9" y="606.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.03%)</title><rect x="659.9" y="579.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="662.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.03%)</title><rect x="660.2" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.2" y="606.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (8 samples, 0.22%)</title><rect x="660.5" y="659.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.5" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (6 samples, 0.16%)</title><rect x="660.9" y="643.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.9" y="654.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (6 samples, 0.16%)</title><rect x="660.9" y="627.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.9" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.14%)</title><rect x="661.2" y="611.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="664.2" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="661.2" y="595.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="664.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.191] (1 samples, 0.03%)</title><rect x="661.8" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="664.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="662.1" y="595.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="665.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="662.8" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (7 samples, 0.19%)</title><rect x="663.1" y="691.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (7 samples, 0.19%)</title><rect x="663.1" y="675.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.16%)</title><rect x="663.1" y="659.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.11%)</title><rect x="663.1" y="643.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$429/1520689575.get$Lambda (4 samples, 0.11%)</title><rect x="663.1" y="627.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$429/1520689575.&lt;init&gt; (4 samples, 0.11%)</title><rect x="663.1" y="611.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.1" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="663.4" y="595.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="666.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (2 samples, 0.05%)</title><rect x="664.4" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="664.4" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="664.4" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="664.4" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="664.4" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1480010240.invoke (1 samples, 0.03%)</title><rect x="664.7" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="664.7" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="664.7" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="664.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="664.7" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="665.1" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="665.1" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="665.1" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="665.1" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.1" y="622.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="665.1" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.1" y="606.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.03%)</title><rect x="665.1" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/ChangeBodyHandler.apply (1 samples, 0.03%)</title><rect x="665.4" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.4" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (1 samples, 0.03%)</title><rect x="665.4" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$345/573480486.apply (11 samples, 0.30%)</title><rect x="665.7" y="819.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (11 samples, 0.30%)</title><rect x="665.7" y="803.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (10 samples, 0.27%)</title><rect x="665.7" y="787.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (7 samples, 0.19%)</title><rect x="666.3" y="771.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.19%)</title><rect x="666.3" y="755.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.3" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.19%)</title><rect x="666.3" y="739.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.3" y="750.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.05%)</title><rect x="666.3" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.3" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.05%)</title><rect x="666.3" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.3" y="718.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.05%)</title><rect x="666.3" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.3" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.05%)</title><rect x="666.3" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.3" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.14%)</title><rect x="667.0" y="723.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.14%)</title><rect x="667.0" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.0" y="718.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.11%)</title><rect x="667.0" y="691.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="670.0" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="668.0" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="671.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.191] (1 samples, 0.03%)</title><rect x="668.3" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="671.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (1 samples, 0.03%)</title><rect x="668.6" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="668.9" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="668.9" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="668.9" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.30%)</title><rect x="669.3" y="835.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.30%)</title><rect x="669.3" y="819.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="669.3" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$346/325847571.apply (1 samples, 0.03%)</title><rect x="669.3" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$346/325847571.apply (10 samples, 0.27%)</title><rect x="669.6" y="803.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (10 samples, 0.27%)</title><rect x="669.6" y="787.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (10 samples, 0.27%)</title><rect x="669.6" y="771.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (10 samples, 0.27%)</title><rect x="669.6" y="755.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.6" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="670.5" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="673.5" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="670.5" y="723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="673.5" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="670.5" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="673.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (2 samples, 0.05%)</title><rect x="670.5" y="691.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="673.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.14%)</title><rect x="671.2" y="739.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.2" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (4 samples, 0.11%)</title><rect x="671.5" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (3 samples, 0.08%)</title><rect x="671.5" y="707.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.05%)</title><rect x="671.8" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.03%)</title><rect x="672.5" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.11%)</title><rect x="672.8" y="835.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.08%)</title><rect x="673.1" y="819.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.08%)</title><rect x="673.1" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.1" y="814.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="674.1" y="835.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="677.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/790771239.apply (3 samples, 0.08%)</title><rect x="674.4" y="867.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (3 samples, 0.08%)</title><rect x="674.4" y="851.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.08%)</title><rect x="674.4" y="835.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.08%)</title><rect x="674.4" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="674.4" y="803.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="674.4" y="787.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (52 samples, 1.42%)</title><rect x="675.4" y="979.0" width="16.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (3 samples, 0.08%)</title><rect x="676.4" y="963.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (1 samples, 0.03%)</title><rect x="677.3" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="677.3" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.3" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="677.3" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (8 samples, 0.22%)</title><rect x="677.6" y="963.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.16%)</title><rect x="678.3" y="947.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.3" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.16%)</title><rect x="678.3" y="931.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (7 samples, 0.19%)</title><rect x="680.2" y="963.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.14%)</title><rect x="680.9" y="947.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.9" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.14%)</title><rect x="680.9" y="931.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.9" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="682.2" y="915.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="685.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12 samples, 0.33%)</title><rect x="682.5" y="963.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.5" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.33%)</title><rect x="682.5" y="947.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.5" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.33%)</title><rect x="682.5" y="931.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8 samples, 0.22%)</title><rect x="683.8" y="915.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (8 samples, 0.22%)</title><rect x="683.8" y="899.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.22%)</title><rect x="683.8" y="883.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.05%)</title><rect x="683.8" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (2 samples, 0.05%)</title><rect x="683.8" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="683.8" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="684.1" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="684.1" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.1" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="684.4" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.4" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="684.4" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="687.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.08%)</title><rect x="684.7" y="867.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (2 samples, 0.05%)</title><rect x="685.1" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="685.1" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.1" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="685.7" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="686.0" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="686.0" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="686.0" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (17 samples, 0.47%)</title><rect x="686.4" y="963.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="686.4" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="686.4" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.4" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="686.4" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="689.4" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="686.4" y="899.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="689.4" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="686.4" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="689.4" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="686.4" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="689.4" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="686.4" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.4" y="862.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="686.4" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="689.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (16 samples, 0.44%)</title><rect x="686.7" y="947.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.11%)</title><rect x="686.7" y="931.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.11%)</title><rect x="686.7" y="915.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.11%)</title><rect x="686.7" y="899.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.08%)</title><rect x="688.0" y="931.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.08%)</title><rect x="688.0" y="915.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.14%)</title><rect x="688.9" y="931.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.14%)</title><rect x="688.9" y="915.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.9" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="690.2" y="899.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="693.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="690.6" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.6" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="690.9" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.9" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="690.9" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.9" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="690.9" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="690.9" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.9" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="690.9" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.9" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="690.9" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="693.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="690.9" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="693.9" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="690.9" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="693.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="691.2" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.2" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="691.5" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.5" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="691.8" y="963.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="694.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="692.2" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="692.2" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (304 samples, 8.32%)</title><rect x="692.5" y="1091.0" width="98.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.5" y="1102.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (304 samples, 8.32%)</title><rect x="692.5" y="1075.0" width="98.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.5" y="1086.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="692.5" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="692.5" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="692.5" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="692.5" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="692.5" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="692.5" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="692.5" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="692.5" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (302 samples, 8.26%)</title><rect x="692.8" y="1059.0" width="97.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.8" y="1070.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (302 samples, 8.26%)</title><rect x="692.8" y="1043.0" width="97.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.8" y="1054.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (301 samples, 8.24%)</title><rect x="693.1" y="1027.0" width="97.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.1" y="1038.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (298 samples, 8.15%)</title><rect x="694.1" y="1011.0" width="96.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.1" y="1022.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (295 samples, 8.07%)</title><rect x="694.1" y="995.0" width="95.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.1" y="1006.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (295 samples, 8.07%)</title><rect x="694.1" y="979.0" width="95.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.1" y="990.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.run (220 samples, 6.02%)</title><rect x="694.1" y="963.0" width="71.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.1" y="974.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (220 samples, 6.02%)</title><rect x="694.1" y="947.0" width="71.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.1" y="958.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (220 samples, 6.02%)</title><rect x="694.1" y="931.0" width="71.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.1" y="942.0">jdk/inte..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.03%)</title><rect x="694.1" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.03%)</title><rect x="694.1" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.1" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="694.1" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.03%)</title><rect x="694.1" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.03%)</title><rect x="694.1" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="694.1" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="694.1" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (219 samples, 5.99%)</title><rect x="694.4" y="915.0" width="70.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.4" y="926.0">jdk/inte..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.05%)</title><rect x="694.4" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.4" y="910.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.05%)</title><rect x="694.4" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="694.4" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="694.8" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.8" y="878.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="694.8" y="851.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="697.8" y="862.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="694.8" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="697.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="694.8" y="819.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="697.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (217 samples, 5.94%)</title><rect x="695.1" y="899.0" width="70.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.1" y="910.0">jdk/inte..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (35 samples, 0.96%)</title><rect x="699.0" y="883.0" width="11.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="702.0" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (35 samples, 0.96%)</title><rect x="699.0" y="867.0" width="11.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="702.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (34 samples, 0.93%)</title><rect x="699.0" y="851.0" width="10.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="702.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (26 samples, 0.71%)</title><rect x="699.0" y="835.0" width="8.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="702.0" y="846.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.22%)</title><rect x="707.3" y="835.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="710.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (1 samples, 0.03%)</title><rect x="709.9" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="712.9" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="709.9" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="712.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (124 samples, 3.39%)</title><rect x="710.3" y="883.0" width="40.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.3" y="894.0">jdk..</text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (10 samples, 0.27%)</title><rect x="747.1" y="867.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.1" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="750.0" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.0" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="750.0" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.0" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="750.0" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.11%)</title><rect x="750.3" y="883.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.11%)</title><rect x="750.3" y="867.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.3" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.08%)</title><rect x="750.3" y="851.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="751.3" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="751.3" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.3" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="751.3" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="754.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="751.3" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="754.3" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="751.3" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="754.3" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="751.3" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="754.3" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="751.3" y="755.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="754.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (42 samples, 1.15%)</title><rect x="751.6" y="883.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (42 samples, 1.15%)</title><rect x="751.6" y="867.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.19%)</title><rect x="751.6" y="851.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.19%)</title><rect x="751.6" y="835.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.19%)</title><rect x="751.6" y="819.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.19%)</title><rect x="751.6" y="803.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.19%)</title><rect x="751.6" y="787.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.6" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="751.6" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="754.6" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="751.6" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="754.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="751.6" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="754.6" y="750.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="751.6" y="723.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="754.6" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.11%)</title><rect x="751.9" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.9" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.11%)</title><rect x="751.9" y="755.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.9" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.11%)</title><rect x="751.9" y="739.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.11%)</title><rect x="751.9" y="723.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.05%)</title><rect x="753.2" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="753.5" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="753.5" y="739.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="756.5" y="750.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="753.5" y="723.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="756.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="753.5" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="756.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="753.5" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="753.5" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.5" y="686.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.03%)</title><rect x="753.5" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="756.5" y="670.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.03%)</title><rect x="753.5" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.5" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="753.5" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="756.5" y="638.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="753.5" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 0.96%)</title><rect x="753.8" y="851.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 0.96%)</title><rect x="753.8" y="835.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (32 samples, 0.88%)</title><rect x="754.2" y="819.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (32 samples, 0.88%)</title><rect x="754.2" y="803.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (32 samples, 0.88%)</title><rect x="754.2" y="787.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.2" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="754.5" y="771.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="757.5" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.08%)</title><rect x="754.5" y="755.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="757.5" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="754.5" y="739.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="757.5" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="754.8" y="739.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="757.8" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (1 samples, 0.03%)</title><rect x="754.8" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="757.8" y="734.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="755.1" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="758.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="755.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="755.5" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.5" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="755.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="755.5" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (27 samples, 0.74%)</title><rect x="755.8" y="771.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (27 samples, 0.74%)</title><rect x="755.8" y="755.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.71%)</title><rect x="755.8" y="739.0" width="8.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="758.8" y="750.0"></text>
</g>
<g>
<title>__libc_write (26 samples, 0.71%)</title><rect x="755.8" y="723.0" width="8.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="758.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.63%)</title><rect x="756.7" y="707.0" width="7.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="759.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.63%)</title><rect x="756.7" y="691.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="759.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (22 samples, 0.60%)</title><rect x="757.1" y="675.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.1" y="686.0"></text>
</g>
<g>
<title>ksys_write (22 samples, 0.60%)</title><rect x="757.1" y="659.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="760.1" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="757.1" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="760.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="757.1" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.1" y="638.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.57%)</title><rect x="757.4" y="643.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="760.4" y="654.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.44%)</title><rect x="757.4" y="627.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.4" y="638.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.44%)</title><rect x="757.4" y="611.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="760.4" y="622.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="757.4" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="760.4" y="606.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.41%)</title><rect x="757.7" y="595.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.7" y="606.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="758.0" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="761.0" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.27%)</title><rect x="758.4" y="579.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="761.4" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.27%)</title><rect x="758.4" y="563.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.27%)</title><rect x="758.4" y="547.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="761.4" y="558.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="761.6" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="764.6" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="761.6" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="764.6" y="574.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.05%)</title><rect x="761.9" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="764.9" y="590.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="761.9" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.9" y="574.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="761.9" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.9" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="762.2" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="765.2" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.14%)</title><rect x="762.6" y="627.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="765.6" y="638.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.14%)</title><rect x="762.6" y="611.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.6" y="622.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.08%)</title><rect x="763.2" y="595.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.2" y="606.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="763.2" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="766.2" y="590.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.05%)</title><rect x="763.5" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.5" y="590.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="763.5" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.5" y="574.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="764.2" y="739.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="767.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="764.5" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1329730548.accept (9 samples, 0.25%)</title><rect x="765.1" y="963.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (9 samples, 0.25%)</title><rect x="765.1" y="947.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (9 samples, 0.25%)</title><rect x="765.1" y="931.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.25%)</title><rect x="765.1" y="915.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.25%)</title><rect x="765.1" y="899.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.22%)</title><rect x="765.5" y="883.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.22%)</title><rect x="765.5" y="867.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.14%)</title><rect x="765.5" y="851.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.5" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="765.5" y="835.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="768.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$434/1996421976.accept (1 samples, 0.03%)</title><rect x="766.1" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/1369757709.accept (2 samples, 0.05%)</title><rect x="766.4" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/1369757709.accept (3 samples, 0.08%)</title><rect x="767.1" y="851.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.08%)</title><rect x="767.1" y="835.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.08%)</title><rect x="767.1" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.1" y="830.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.08%)</title><rect x="767.1" y="803.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.1" y="814.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.03%)</title><rect x="767.7" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (66 samples, 1.81%)</title><rect x="768.0" y="963.0" width="21.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.0" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (66 samples, 1.81%)</title><rect x="768.0" y="947.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.0" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (66 samples, 1.81%)</title><rect x="768.0" y="931.0" width="21.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.0" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (66 samples, 1.81%)</title><rect x="768.0" y="915.0" width="21.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.0" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 1.81%)</title><rect x="768.0" y="899.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.0" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (64 samples, 1.75%)</title><rect x="768.7" y="883.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (64 samples, 1.75%)</title><rect x="768.7" y="867.0" width="20.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="768.7" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.7" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="768.7" y="835.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="771.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/1265510959.accept (63 samples, 1.72%)</title><rect x="769.0" y="851.0" width="20.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (63 samples, 1.72%)</title><rect x="769.0" y="835.0" width="20.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (63 samples, 1.72%)</title><rect x="769.0" y="819.0" width="20.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (63 samples, 1.72%)</title><rect x="769.0" y="803.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.16%)</title><rect x="769.0" y="787.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="769.3" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="769.3" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="770.0" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$455/816666687.apply (2 samples, 0.05%)</title><rect x="770.3" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.05%)</title><rect x="770.3" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.05%)</title><rect x="770.9" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (55 samples, 1.50%)</title><rect x="771.6" y="787.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="771.6" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="771.6" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.6" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="771.6" y="739.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="774.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.03%)</title><rect x="771.9" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (53 samples, 1.45%)</title><rect x="772.2" y="771.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (52 samples, 1.42%)</title><rect x="772.2" y="755.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (48 samples, 1.31%)</title><rect x="772.9" y="739.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (48 samples, 1.31%)</title><rect x="772.9" y="723.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (48 samples, 1.31%)</title><rect x="772.9" y="707.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (48 samples, 1.31%)</title><rect x="772.9" y="691.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 1.31%)</title><rect x="772.9" y="675.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 1.31%)</title><rect x="772.9" y="659.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.9" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.16%)</title><rect x="772.9" y="643.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="775.9" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="772.9" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="775.9" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="773.2" y="627.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="776.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="773.9" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="776.9" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="774.2" y="627.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="777.2" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="774.5" y="627.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="777.5" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (41 samples, 1.12%)</title><rect x="774.8" y="643.0" width="13.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="777.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.88%)</title><rect x="777.7" y="627.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="780.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.88%)</title><rect x="777.7" y="611.0" width="10.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.79%)</title><rect x="778.7" y="595.0" width="9.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.7" y="606.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.79%)</title><rect x="778.7" y="579.0" width="9.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.7" y="590.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (1 samples, 0.03%)</title><rect x="778.7" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.7" y="574.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.74%)</title><rect x="779.0" y="563.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="782.0" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="780.3" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.3" y="558.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="780.3" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.3" y="542.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 0.60%)</title><rect x="780.6" y="547.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="783.6" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.60%)</title><rect x="780.6" y="531.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.57%)</title><rect x="781.0" y="515.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.0" y="526.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="787.7" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="790.7" y="574.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="788.1" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="791.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$451/350781303.accept (1 samples, 0.03%)</title><rect x="788.4" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$211/258026192.accept (1 samples, 0.03%)</title><rect x="788.7" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$451/350781303.accept (1 samples, 0.03%)</title><rect x="789.0" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.08%)</title><rect x="789.3" y="995.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.08%)</title><rect x="789.3" y="979.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.08%)</title><rect x="789.3" y="963.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.08%)</title><rect x="789.3" y="947.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="790.3" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.3" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="790.6" y="1107.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.6" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="790.6" y="1091.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="793.6" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="790.6" y="1075.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="793.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.run (243 samples, 6.65%)</title><rect x="791.0" y="1123.0" width="78.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.0" y="1134.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (243 samples, 6.65%)</title><rect x="791.0" y="1107.0" width="78.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.0" y="1118.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$142/964833577.process (240 samples, 6.57%)</title><rect x="791.0" y="1091.0" width="77.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.0" y="1102.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (240 samples, 6.57%)</title><rect x="791.0" y="1075.0" width="77.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.0" y="1086.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (239 samples, 6.54%)</title><rect x="791.3" y="1059.0" width="77.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.3" y="1070.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy (236 samples, 6.46%)</title><rect x="791.3" y="1043.0" width="76.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.3" y="1054.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="791.9" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="791.9" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$413/1841270497.get$Lambda (1 samples, 0.03%)</title><rect x="791.9" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.9" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="791.9" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="794.9" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="791.9" y="963.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="794.9" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="791.9" y="947.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="794.9" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="791.9" y="931.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="794.9" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="791.9" y="915.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.9" y="926.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.03%)</title><rect x="791.9" y="899.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="794.9" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (21 samples, 0.57%)</title><rect x="792.3" y="1027.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.25%)</title><rect x="792.3" y="1011.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (7 samples, 0.19%)</title><rect x="792.3" y="995.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.3" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="794.2" y="979.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="797.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="794.5" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="794.5" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.5" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="794.5" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.5" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="794.5" y="947.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.5" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="794.5" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="797.5" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="794.5" y="915.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="797.5" y="926.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="794.5" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="797.5" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="794.8" y="899.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="797.8" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="794.8" y="883.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="797.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="795.2" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="795.2" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.2" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="795.2" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.2" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="795.2" y="963.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="798.2" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="795.2" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="798.2" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="795.2" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="798.2" y="942.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="795.2" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="798.2" y="926.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="795.2" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="798.2" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.05%)</title><rect x="795.5" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.05%)</title><rect x="795.5" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.25%)</title><rect x="796.1" y="1011.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.16%)</title><rect x="796.8" y="995.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="796.8" y="979.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.8" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="796.8" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="799.8" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="796.8" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.8" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="796.8" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.8" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="796.8" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="799.8" y="926.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.03%)</title><rect x="796.8" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="799.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (5 samples, 0.14%)</title><rect x="797.1" y="979.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (5 samples, 0.14%)</title><rect x="797.1" y="963.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.1" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="798.7" y="995.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="801.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.remove (1 samples, 0.03%)</title><rect x="799.0" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (1 samples, 0.03%)</title><rect x="799.0" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (1 samples, 0.03%)</title><rect x="799.0" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.03%)</title><rect x="799.0" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.05%)</title><rect x="799.4" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="799.4" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="799.4" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.4" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="799.4" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="802.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="799.7" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.03%)</title><rect x="799.7" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="799.7" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="799.7" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.16%)</title><rect x="800.0" y="1027.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.16%)</title><rect x="800.0" y="1011.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.16%)</title><rect x="800.0" y="995.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.0" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="801.3" y="979.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="804.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$153/1356845972.execute (37 samples, 1.01%)</title><rect x="801.9" y="1027.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$9 (37 samples, 1.01%)</title><rect x="801.9" y="1011.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localUpsert (37 samples, 1.01%)</title><rect x="801.9" y="995.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (37 samples, 1.01%)</title><rect x="801.9" y="979.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (37 samples, 1.01%)</title><rect x="801.9" y="963.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.9" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="802.6" y="947.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.6" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (1 samples, 0.03%)</title><rect x="802.9" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.90%)</title><rect x="803.2" y="947.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (32 samples, 0.88%)</title><rect x="803.2" y="931.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="803.2" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="803.2" y="899.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (31 samples, 0.85%)</title><rect x="803.6" y="915.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.85%)</title><rect x="803.6" y="899.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.85%)</title><rect x="803.6" y="883.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.79%)</title><rect x="804.2" y="867.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.79%)</title><rect x="804.2" y="851.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.2" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="804.2" y="835.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="807.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="804.2" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="807.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.77%)</title><rect x="804.5" y="835.0" width="9.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="807.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.68%)</title><rect x="805.5" y="819.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="808.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.68%)</title><rect x="805.5" y="803.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="808.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.60%)</title><rect x="806.5" y="787.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="809.5" y="798.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.57%)</title><rect x="806.5" y="771.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.5" y="782.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.57%)</title><rect x="806.5" y="755.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="809.5" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="806.5" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.5" y="750.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.55%)</title><rect x="806.8" y="739.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.8" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.49%)</title><rect x="807.4" y="723.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.4" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.49%)</title><rect x="807.4" y="707.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="813.2" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="813.6" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$154/1918512428.resolve (5 samples, 0.14%)</title><rect x="813.9" y="1027.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveChange (5 samples, 0.14%)</title><rect x="813.9" y="1011.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.03%)</title><rect x="813.9" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="813.9" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="813.9" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.03%)</title><rect x="813.9" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="813.9" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="813.9" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (4 samples, 0.11%)</title><rect x="814.2" y="995.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.11%)</title><rect x="814.2" y="979.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$215/1222288581.accept (4 samples, 0.11%)</title><rect x="814.2" y="963.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (4 samples, 0.11%)</title><rect x="814.2" y="947.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.11%)</title><rect x="814.2" y="931.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.11%)</title><rect x="814.2" y="915.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.08%)</title><rect x="814.5" y="899.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.08%)</title><rect x="814.5" y="883.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="814.5" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="814.5" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="814.9" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="814.9" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="814.9" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="814.9" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="814.9" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="814.9" y="787.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="817.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="815.2" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="818.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="815.2" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="818.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="815.2" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.2" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="815.2" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="818.2" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="815.2" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="818.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="815.2" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="818.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (134 samples, 3.67%)</title><rect x="815.5" y="1027.0" width="43.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.5" y="1038.0">ru/m..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (133 samples, 3.64%)</title><rect x="815.8" y="1011.0" width="43.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.8" y="1022.0">java..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="816.1" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="816.1" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="816.1" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="816.1" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$160/18761757.accept (131 samples, 3.58%)</title><rect x="816.5" y="995.0" width="42.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.5" y="1006.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (131 samples, 3.58%)</title><rect x="816.5" y="979.0" width="42.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.5" y="990.0">ru/m..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="816.5" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.5" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="816.5" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.5" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="816.5" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.5" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="816.5" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.5" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.03%)</title><rect x="816.5" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (52 samples, 1.42%)</title><rect x="816.8" y="963.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (52 samples, 1.42%)</title><rect x="816.8" y="947.0" width="16.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (52 samples, 1.42%)</title><rect x="816.8" y="931.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (52 samples, 1.42%)</title><rect x="816.8" y="915.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.08%)</title><rect x="816.8" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.08%)</title><rect x="816.8" y="883.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.08%)</title><rect x="816.8" y="867.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.03%)</title><rect x="817.4" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="817.4" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="817.4" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.4" y="830.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="817.4" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (29 samples, 0.79%)</title><rect x="817.8" y="899.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.11%)</title><rect x="817.8" y="883.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="818.1" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.1" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="818.1" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="818.1" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.1" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="818.1" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.1" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="818.1" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="818.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="818.1" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="818.1" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="818.1" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="818.1" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.1" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="818.1" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="818.4" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="818.4" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="818.4" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="818.4" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.4" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="818.4" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.4" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.36%)</title><rect x="819.1" y="883.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.1" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.36%)</title><rect x="819.1" y="867.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.1" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (12 samples, 0.33%)</title><rect x="819.4" y="851.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.4" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12 samples, 0.33%)</title><rect x="819.4" y="835.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (12 samples, 0.33%)</title><rect x="819.4" y="819.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.4" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.33%)</title><rect x="819.4" y="803.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.22%)</title><rect x="819.4" y="787.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.4" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (8 samples, 0.22%)</title><rect x="819.4" y="771.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.4" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.22%)</title><rect x="819.4" y="755.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$96/258931371.test (7 samples, 0.19%)</title><rect x="819.7" y="739.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (7 samples, 0.19%)</title><rect x="819.7" y="723.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (3 samples, 0.08%)</title><rect x="819.7" y="707.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.08%)</title><rect x="819.7" y="691.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.7" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.08%)</title><rect x="819.7" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.08%)</title><rect x="819.7" y="659.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.08%)</title><rect x="819.7" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.08%)</title><rect x="819.7" y="627.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="820.0" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="820.3" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="820.3" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="820.3" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.3" y="574.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="820.3" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="820.7" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (3 samples, 0.08%)</title><rect x="821.0" y="707.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="821.6" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.08%)</title><rect x="822.0" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.0" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="822.0" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="825.0" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="822.0" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="825.0" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="822.0" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="825.0" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="822.0" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="825.0" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="822.0" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="825.0" y="718.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="822.0" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="825.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="822.0" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="825.0" y="686.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="822.3" y="771.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="825.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$96/258931371.test (1 samples, 0.03%)</title><rect x="822.6" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.6" y="782.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="822.9" y="787.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="825.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.03%)</title><rect x="823.2" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="823.2" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (10 samples, 0.27%)</title><rect x="823.6" y="883.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.6" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (10 samples, 0.27%)</title><rect x="823.6" y="867.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.6" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.27%)</title><rect x="823.6" y="851.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.6" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (10 samples, 0.27%)</title><rect x="823.6" y="835.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.6" y="846.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.27%)</title><rect x="823.6" y="819.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.6" y="830.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.22%)</title><rect x="824.2" y="803.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.2" y="814.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (7 samples, 0.19%)</title><rect x="824.5" y="787.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.5" y="798.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.05%)</title><rect x="824.5" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.5" y="782.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="824.5" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.5" y="766.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="824.5" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="824.5" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.5" y="734.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.14%)</title><rect x="825.2" y="771.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.14%)</title><rect x="825.2" y="755.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="826.2" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="826.2" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="826.5" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="829.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="826.8" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7 samples, 0.19%)</title><rect x="827.1" y="899.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.03%)</title><rect x="827.1" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="827.1" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="827.1" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="827.1" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="827.1" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.1" y="830.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="827.1" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.1" y="814.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.03%)</title><rect x="827.1" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 0.16%)</title><rect x="827.4" y="883.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (6 samples, 0.16%)</title><rect x="827.4" y="867.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.03%)</title><rect x="828.4" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.03%)</title><rect x="828.4" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.03%)</title><rect x="828.4" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.03%)</title><rect x="828.4" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (1 samples, 0.03%)</title><rect x="828.4" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.4" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.05%)</title><rect x="828.7" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.7" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (2 samples, 0.05%)</title><rect x="828.7" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.7" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.03%)</title><rect x="828.7" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.7" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.03%)</title><rect x="828.7" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.7" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.03%)</title><rect x="828.7" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.03%)</title><rect x="828.7" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (1 samples, 0.03%)</title><rect x="828.7" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.03%)</title><rect x="829.1" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (1 samples, 0.03%)</title><rect x="829.1" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.1" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="829.1" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="832.1" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="829.1" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="832.1" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="829.1" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="832.1" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="829.1" y="739.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="832.1" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="829.1" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="832.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (13 samples, 0.36%)</title><rect x="829.4" y="899.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.30%)</title><rect x="829.4" y="883.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.30%)</title><rect x="829.4" y="867.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.30%)</title><rect x="829.4" y="851.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.4" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="829.4" y="835.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.4" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="829.4" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="832.4" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="829.4" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="832.4" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="829.4" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.4" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="829.4" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.4" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="829.4" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="832.4" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="829.4" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.19%)</title><rect x="829.7" y="835.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="829.7" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="829.7" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.16%)</title><rect x="830.0" y="819.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.16%)</title><rect x="830.0" y="803.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.16%)</title><rect x="830.0" y="787.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.16%)</title><rect x="830.0" y="771.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.16%)</title><rect x="830.0" y="755.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="830.0" y="739.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="833.0" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="830.0" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="833.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.14%)</title><rect x="830.4" y="739.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="833.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.11%)</title><rect x="830.7" y="723.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="833.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.11%)</title><rect x="830.7" y="707.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="833.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.11%)</title><rect x="830.7" y="691.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.7" y="702.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.11%)</title><rect x="830.7" y="675.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.11%)</title><rect x="830.7" y="659.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="833.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.11%)</title><rect x="830.7" y="643.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.11%)</title><rect x="830.7" y="627.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="833.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.11%)</title><rect x="830.7" y="611.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="833.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="832.0" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="832.0" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="832.3" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="832.3" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="832.3" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="832.3" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="832.3" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="835.3" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="832.3" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="835.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="832.6" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="832.6" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="832.6" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.05%)</title><rect x="832.9" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="832.9" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="832.9" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="832.9" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="832.9" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="832.9" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="833.3" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="833.3" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="833.3" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="833.3" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$156/648111395.apply (78 samples, 2.13%)</title><rect x="833.6" y="963.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.6" y="974.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$12 (78 samples, 2.13%)</title><rect x="833.6" y="947.0" width="25.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.6" y="958.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (11 samples, 0.30%)</title><rect x="833.9" y="931.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (11 samples, 0.30%)</title><rect x="833.9" y="915.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.25%)</title><rect x="834.5" y="899.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.5" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.25%)</title><rect x="834.5" y="883.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.16%)</title><rect x="835.5" y="867.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (6 samples, 0.16%)</title><rect x="835.5" y="851.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.5" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.16%)</title><rect x="835.5" y="835.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.5" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="835.8" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (1 samples, 0.03%)</title><rect x="835.8" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.8" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.11%)</title><rect x="836.2" y="819.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (4 samples, 0.11%)</title><rect x="836.2" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.2" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.11%)</title><rect x="836.2" y="787.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (4 samples, 0.11%)</title><rect x="836.2" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.11%)</title><rect x="836.2" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.2" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.11%)</title><rect x="836.2" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.2" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.11%)</title><rect x="836.2" y="723.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.11%)</title><rect x="836.2" y="707.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.2" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.11%)</title><rect x="836.2" y="691.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="836.8" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="836.8" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="837.1" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="837.1" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="837.1" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="837.1" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="837.1" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method (2 samples, 0.05%)</title><rect x="837.5" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.05%)</title><rect x="837.5" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.08%)</title><rect x="838.1" y="931.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.1" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="838.7" y="915.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="841.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.requestBuilderFor (61 samples, 1.67%)</title><rect x="839.1" y="931.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.1" y="942.0"></text>
</g>
<g>
<title>java/time/Duration.dividedBy (10 samples, 0.27%)</title><rect x="839.1" y="915.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.1" y="926.0"></text>
</g>
<g>
<title>java/time/Duration.create (9 samples, 0.25%)</title><rect x="839.1" y="899.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.1" y="910.0"></text>
</g>
<g>
<title>java/math/BigDecimal.toBigIntegerExact (3 samples, 0.08%)</title><rect x="839.1" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.1" y="894.0"></text>
</g>
<g>
<title>java/math/BigDecimal.inflated (3 samples, 0.08%)</title><rect x="839.1" y="867.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.1" y="878.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (3 samples, 0.08%)</title><rect x="839.1" y="851.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.1" y="862.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (2 samples, 0.05%)</title><rect x="839.4" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.4" y="846.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainder (3 samples, 0.08%)</title><rect x="840.0" y="883.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.0" y="894.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainderKnuth (3 samples, 0.08%)</title><rect x="840.0" y="867.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.0" y="878.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (1 samples, 0.03%)</title><rect x="840.0" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.0" y="862.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (2 samples, 0.05%)</title><rect x="840.4" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.4" y="862.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (2 samples, 0.05%)</title><rect x="840.4" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.4" y="846.0"></text>
</g>
<g>
<title>jint_arraycopy (1 samples, 0.03%)</title><rect x="840.7" y="819.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="843.7" y="830.0"></text>
</g>
<g>
<title>java/math/BigInteger.intValue (2 samples, 0.05%)</title><rect x="841.0" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.0" y="894.0"></text>
</g>
<g>
<title>java/math/BigInteger.getInt (2 samples, 0.05%)</title><rect x="841.0" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.0" y="878.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (1 samples, 0.03%)</title><rect x="841.3" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.3" y="862.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (1 samples, 0.03%)</title><rect x="841.6" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.6" y="894.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.03%)</title><rect x="841.6" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.6" y="878.0"></text>
</g>
<g>
<title>java/time/Duration.&lt;init&gt; (1 samples, 0.03%)</title><rect x="841.6" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.6" y="862.0"></text>
</g>
<g>
<title>java/time/Duration.toBigDecimalSeconds (1 samples, 0.03%)</title><rect x="842.0" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.0" y="910.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (1 samples, 0.03%)</title><rect x="842.0" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.0" y="894.0"></text>
</g>
<g>
<title>java/math/BigDecimal.&lt;init&gt; (1 samples, 0.03%)</title><rect x="842.0" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.03%)</title><rect x="842.0" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (14 samples, 0.38%)</title><rect x="842.3" y="915.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (14 samples, 0.38%)</title><rect x="842.3" y="899.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (11 samples, 0.30%)</title><rect x="842.3" y="883.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1961945640.test (5 samples, 0.14%)</title><rect x="842.3" y="867.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.14%)</title><rect x="842.3" y="851.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.3" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.14%)</title><rect x="842.3" y="835.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.3" y="846.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.14%)</title><rect x="842.3" y="819.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.14%)</title><rect x="842.3" y="803.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.14%)</title><rect x="842.3" y="787.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="843.3" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="843.6" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="843.6" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="843.6" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="843.6" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (4 samples, 0.11%)</title><rect x="843.9" y="867.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.08%)</title><rect x="843.9" y="851.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="844.6" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="844.9" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.05%)</title><rect x="845.2" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="845.2" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="845.5" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.08%)</title><rect x="845.8" y="883.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="845.8" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="845.8" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="845.8" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.8" y="846.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.05%)</title><rect x="846.2" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$168/769855991.apply (2 samples, 0.05%)</title><rect x="846.2" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (1 samples, 0.03%)</title><rect x="846.5" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.5" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="846.5" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="849.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="846.5" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="849.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="846.5" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.provideURI (37 samples, 1.01%)</title><rect x="846.8" y="915.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (37 samples, 1.01%)</title><rect x="846.8" y="899.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.8" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (37 samples, 1.01%)</title><rect x="846.8" y="883.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="846.8" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="846.8" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.03%)</title><rect x="847.1" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="847.1" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="847.1" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.1" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (2 samples, 0.05%)</title><rect x="847.5" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.5" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="847.5" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.5" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="847.8" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="847.8" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.8" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="848.1" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.1" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="848.1" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="848.1" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.1" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (26 samples, 0.71%)</title><rect x="848.4" y="867.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.14%)</title><rect x="848.4" y="851.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.03%)</title><rect x="849.4" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="849.7" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.7" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="849.7" y="819.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="852.7" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="850.0" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="850.4" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="850.4" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.4" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (12 samples, 0.33%)</title><rect x="850.7" y="851.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="851.0" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="851.0" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.0" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.08%)</title><rect x="851.3" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.3" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="851.3" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.3" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="851.3" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.3" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="851.3" y="787.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="854.3" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.05%)</title><rect x="851.7" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.7" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.05%)</title><rect x="851.7" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.7" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="851.7" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.7" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.19%)</title><rect x="852.3" y="835.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="852.6" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.11%)</title><rect x="853.3" y="819.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.11%)</title><rect x="853.3" y="803.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.11%)</title><rect x="853.3" y="787.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.3" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.19%)</title><rect x="854.6" y="851.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.11%)</title><rect x="855.5" y="835.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.5" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.16%)</title><rect x="856.8" y="867.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.08%)</title><rect x="856.8" y="851.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="859.8" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="857.5" y="835.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="860.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="857.8" y="851.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="858.1" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="858.4" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.isLocal (2 samples, 0.05%)</title><rect x="858.8" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.05%)</title><rect x="858.8" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.05%)</title><rect x="858.8" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="858.8" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.nodesForKey (25 samples, 0.68%)</title><rect x="859.4" y="1027.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (3 samples, 0.08%)</title><rect x="860.4" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="860.7" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.addReplicasForKey (19 samples, 0.52%)</title><rect x="861.3" y="1011.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.03%)</title><rect x="861.7" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.27%)</title><rect x="862.0" y="995.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.27%)</title><rect x="862.0" y="979.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="862.0" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.22%)</title><rect x="862.6" y="963.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="864.6" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.6" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="864.9" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (4 samples, 0.11%)</title><rect x="865.2" y="995.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.2" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (4 samples, 0.11%)</title><rect x="865.2" y="979.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (4 samples, 0.11%)</title><rect x="865.2" y="963.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.2" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="865.9" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.03%)</title><rect x="866.2" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.08%)</title><rect x="866.5" y="995.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.5" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.08%)</title><rect x="866.5" y="979.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (3 samples, 0.08%)</title><rect x="866.5" y="963.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.5" y="974.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.03%)</title><rect x="866.5" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.5" y="958.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (1 samples, 0.03%)</title><rect x="866.5" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="869.5" y="942.0"></text>
</g>
<g>
<title>G1SATBMarkQueueSet::filter(SATBMarkQueue*) (1 samples, 0.03%)</title><rect x="866.5" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="869.5" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.05%)</title><rect x="866.8" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapString (3 samples, 0.08%)</title><rect x="867.5" y="1043.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (3 samples, 0.08%)</title><rect x="867.5" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (3 samples, 0.08%)</title><rect x="867.5" y="1011.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.5" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.08%)</title><rect x="867.5" y="995.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="870.5" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="867.8" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="870.8" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="867.8" y="963.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="870.8" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="867.8" y="947.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="870.8" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="867.8" y="931.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="870.8" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="868.1" y="931.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="871.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.parseReplicasParameter (2 samples, 0.05%)</title><rect x="868.4" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="871.4" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="868.8" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="871.8" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="868.8" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="871.8" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="868.8" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="871.8" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="868.8" y="1027.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="871.8" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="868.8" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="871.8" y="1022.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="868.8" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.respond (1 samples, 0.03%)</title><rect x="869.1" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.03%)</title><rect x="869.1" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="869.1" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.1" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="869.1" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="872.1" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="869.1" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="872.1" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="869.1" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="872.1" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="869.1" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="872.1" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (1 samples, 0.03%)</title><rect x="869.4" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.4" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.03%)</title><rect x="869.4" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="869.4" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="869.4" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (100 samples, 2.74%)</title><rect x="869.7" y="1171.0" width="32.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.7" y="1182.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (100 samples, 2.74%)</title><rect x="869.7" y="1155.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.7" y="1166.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (35 samples, 0.96%)</title><rect x="870.1" y="1139.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (35 samples, 0.96%)</title><rect x="870.1" y="1123.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="873.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (34 samples, 0.93%)</title><rect x="870.4" y="1107.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (34 samples, 0.93%)</title><rect x="870.4" y="1091.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (34 samples, 0.93%)</title><rect x="870.4" y="1075.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.74%)</title><rect x="870.4" y="1059.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.74%)</title><rect x="870.4" y="1043.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.08%)</title><rect x="870.7" y="1027.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="871.0" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="871.0" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.0" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="871.0" y="979.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="874.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$214/1326368978.apply (1 samples, 0.03%)</title><rect x="871.4" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 0.60%)</title><rect x="871.7" y="1027.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (21 samples, 0.57%)</title><rect x="872.0" y="1011.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (21 samples, 0.57%)</title><rect x="872.0" y="995.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="872.0" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.55%)</title><rect x="872.3" y="979.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (19 samples, 0.52%)</title><rect x="872.3" y="963.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="872.6" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="872.6" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="872.6" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="872.6" y="899.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="875.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.47%)</title><rect x="873.0" y="947.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.47%)</title><rect x="873.0" y="931.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.47%)</title><rect x="873.0" y="915.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.41%)</title><rect x="873.6" y="899.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.41%)</title><rect x="873.6" y="883.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.6" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.41%)</title><rect x="873.6" y="867.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="876.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.33%)</title><rect x="874.6" y="851.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="877.6" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.33%)</title><rect x="874.6" y="835.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="877.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.27%)</title><rect x="875.2" y="819.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="878.2" y="830.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.25%)</title><rect x="875.5" y="803.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="878.5" y="814.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.25%)</title><rect x="875.5" y="787.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="878.5" y="798.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.22%)</title><rect x="875.9" y="771.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.9" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.22%)</title><rect x="875.9" y="755.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.22%)</title><rect x="875.9" y="739.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="878.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="878.5" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.5" y="974.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="878.8" y="1027.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="881.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.19%)</title><rect x="879.1" y="1059.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.60%)</title><rect x="881.4" y="1139.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.4" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="881.7" y="1123.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="884.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.55%)</title><rect x="882.0" y="1123.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.0" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.16%)</title><rect x="882.0" y="1107.0" width="1.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="885.0" y="1118.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="882.0" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="885.0" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="882.0" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="885.0" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.14%)</title><rect x="882.3" y="1091.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="885.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="883.0" y="1075.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="886.0" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="883.0" y="1059.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="886.0" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="883.3" y="1043.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.3" y="1054.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="883.3" y="1027.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.3" y="1038.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="883.3" y="1011.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="886.3" y="1022.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="883.3" y="995.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="886.3" y="1006.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.03%)</title><rect x="883.6" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="886.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.38%)</title><rect x="883.9" y="1107.0" width="4.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="886.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="883.9" y="1091.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="886.9" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (13 samples, 0.36%)</title><rect x="884.3" y="1091.0" width="4.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="887.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="886.8" y="1075.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.8" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.14%)</title><rect x="886.8" y="1059.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.8" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.14%)</title><rect x="886.8" y="1043.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.8" y="1054.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.14%)</title><rect x="886.8" y="1027.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="889.8" y="1038.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.14%)</title><rect x="886.8" y="1011.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="887.5" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.5" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="887.5" y="979.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="890.5" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="887.8" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="890.8" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="887.8" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.8" y="990.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.03%)</title><rect x="887.8" y="963.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.8" y="974.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="888.1" y="995.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (42 samples, 1.15%)</title><rect x="888.5" y="1139.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 1.12%)</title><rect x="888.8" y="1123.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.36%)</title><rect x="888.8" y="1107.0" width="4.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="891.8" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.11%)</title><rect x="888.8" y="1091.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="891.8" y="1102.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.05%)</title><rect x="889.4" y="1075.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="892.4" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="889.4" y="1059.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="892.4" y="1070.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="889.4" y="1043.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="892.4" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.19%)</title><rect x="890.1" y="1091.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="893.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="891.4" y="1075.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.4" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="891.4" y="1059.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="894.4" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="891.7" y="1043.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.7" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="891.7" y="1027.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.7" y="1038.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="891.7" y="1011.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.7" y="1022.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="892.0" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="895.0" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.05%)</title><rect x="892.3" y="1091.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="895.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="893.0" y="1107.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="896.0" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="893.0" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="896.0" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (26 samples, 0.71%)</title><rect x="893.3" y="1107.0" width="8.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="896.3" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.44%)</title><rect x="896.5" y="1091.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="899.5" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.44%)</title><rect x="896.5" y="1075.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="899.5" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.41%)</title><rect x="896.9" y="1059.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="899.9" y="1070.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="896.9" y="1043.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.9" y="1054.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.36%)</title><rect x="897.2" y="1043.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.2" y="1054.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.27%)</title><rect x="897.8" y="1027.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.8" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.11%)</title><rect x="898.1" y="1011.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.1" y="1022.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="898.1" y="995.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="901.1" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="898.1" y="979.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="901.1" y="990.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="898.8" y="995.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="901.8" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="899.1" y="979.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="902.1" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.11%)</title><rect x="899.4" y="1011.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="902.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="900.4" y="995.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="903.4" y="1006.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="900.7" y="1011.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="903.7" y="1022.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="900.7" y="995.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="903.7" y="1006.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.03%)</title><rect x="901.1" y="1027.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="904.1" y="1038.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="901.4" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="904.4" y="1054.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="901.4" y="1027.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="904.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="901.7" y="1107.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="904.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (372 samples, 10.18%)</title><rect x="902.0" y="1171.0" width="120.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.0" y="1182.0">jdk/internal/ne..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="904.9" y="1155.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="907.9" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.08%)</title><rect x="904.9" y="1139.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="907.9" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="904.9" y="1123.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="907.9" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (2 samples, 0.05%)</title><rect x="904.9" y="1107.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="907.9" y="1118.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="905.6" y="1107.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="908.6" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.05%)</title><rect x="905.9" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1 samples, 0.03%)</title><rect x="906.2" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.2" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (95 samples, 2.60%)</title><rect x="906.5" y="1155.0" width="30.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.5" y="1166.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$350/367522421.accept (90 samples, 2.46%)</title><rect x="906.5" y="1139.0" width="29.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.5" y="1150.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (90 samples, 2.46%)</title><rect x="906.5" y="1123.0" width="29.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.5" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (90 samples, 2.46%)</title><rect x="906.5" y="1107.0" width="29.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.5" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (90 samples, 2.46%)</title><rect x="906.5" y="1091.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.5" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (90 samples, 2.46%)</title><rect x="906.5" y="1075.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.5" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.14%)</title><rect x="906.5" y="1059.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.05%)</title><rect x="907.5" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.05%)</title><rect x="907.5" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.5" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="907.8" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="907.8" y="995.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="907.8" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (85 samples, 2.33%)</title><rect x="908.2" y="1059.0" width="27.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.2" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 2.33%)</title><rect x="908.2" y="1043.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.2" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 2.33%)</title><rect x="908.2" y="1027.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.2" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (85 samples, 2.33%)</title><rect x="908.2" y="1011.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.2" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (79 samples, 2.16%)</title><rect x="910.1" y="995.0" width="25.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.1" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1370831110.run (78 samples, 2.13%)</title><rect x="910.1" y="979.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (78 samples, 2.13%)</title><rect x="910.1" y="963.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.1" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (11 samples, 0.30%)</title><rect x="910.4" y="947.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (10 samples, 0.27%)</title><rect x="910.7" y="931.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (10 samples, 0.27%)</title><rect x="910.7" y="915.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.27%)</title><rect x="910.7" y="899.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.27%)</title><rect x="910.7" y="883.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.25%)</title><rect x="911.1" y="867.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.22%)</title><rect x="911.1" y="851.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.22%)</title><rect x="911.1" y="835.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.16%)</title><rect x="911.1" y="819.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="911.1" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="911.1" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="911.4" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="911.4" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="911.4" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="911.4" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="911.4" y="707.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="914.4" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="911.4" y="691.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="914.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.11%)</title><rect x="911.7" y="803.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.11%)</title><rect x="911.7" y="787.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.11%)</title><rect x="911.7" y="771.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.08%)</title><rect x="912.0" y="755.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.08%)</title><rect x="912.0" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.08%)</title><rect x="912.0" y="723.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="915.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="912.4" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="915.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="912.4" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="912.4" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="915.4" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="912.4" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.4" y="670.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="912.4" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="915.4" y="654.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="912.4" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="912.4" y="611.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="915.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="912.4" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="915.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="913.0" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="913.0" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="913.3" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="913.3" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="913.3" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="913.6" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="914.0" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.19%)</title><rect x="914.3" y="947.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.16%)</title><rect x="914.6" y="931.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.11%)</title><rect x="915.3" y="915.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.08%)</title><rect x="915.6" y="899.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.08%)</title><rect x="915.6" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="916.2" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="916.2" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="916.2" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (58 samples, 1.59%)</title><rect x="916.5" y="947.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (58 samples, 1.59%)</title><rect x="916.5" y="931.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="917.2" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="917.2" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="917.5" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="917.5" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="917.5" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="917.5" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (54 samples, 1.48%)</title><rect x="917.8" y="915.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (54 samples, 1.48%)</title><rect x="917.8" y="899.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.8" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.05%)</title><rect x="917.8" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="917.8" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.8" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="917.8" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.8" y="862.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="918.2" y="835.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="921.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (51 samples, 1.40%)</title><rect x="918.5" y="883.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.5" y="894.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="918.5" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="921.5" y="878.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="918.5" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="918.5" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.5" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="918.5" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="918.5" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (50 samples, 1.37%)</title><rect x="918.8" y="867.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (48 samples, 1.31%)</title><rect x="919.5" y="851.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.29%)</title><rect x="919.5" y="835.0" width="15.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="922.5" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="919.5" y="819.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="922.5" y="830.0"></text>
</g>
<g>
<title>__read (46 samples, 1.26%)</title><rect x="919.8" y="819.0" width="14.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="922.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 1.09%)</title><rect x="921.7" y="803.0" width="12.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 1.09%)</title><rect x="921.7" y="787.0" width="12.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_read (36 samples, 0.98%)</title><rect x="923.0" y="771.0" width="11.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="926.0" y="782.0"></text>
</g>
<g>
<title>ksys_read (36 samples, 0.98%)</title><rect x="923.0" y="755.0" width="11.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="926.0" y="766.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="923.0" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.0" y="750.0"></text>
</g>
<g>
<title>vfs_read (35 samples, 0.96%)</title><rect x="923.3" y="739.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.3" y="750.0"></text>
</g>
<g>
<title>__vfs_read (25 samples, 0.68%)</title><rect x="923.3" y="723.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.3" y="734.0"></text>
</g>
<g>
<title>new_sync_read (22 samples, 0.60%)</title><rect x="923.3" y="707.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="926.3" y="718.0"></text>
</g>
<g>
<title>sock_read_iter (21 samples, 0.57%)</title><rect x="923.7" y="691.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="926.7" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (20 samples, 0.55%)</title><rect x="924.0" y="675.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="927.0" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (18 samples, 0.49%)</title><rect x="924.0" y="659.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.0" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.49%)</title><rect x="924.0" y="643.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.0" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="924.6" y="627.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.6" y="638.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="924.6" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="927.6" y="622.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="924.6" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="927.6" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="924.9" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.9" y="606.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="924.9" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="927.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="925.3" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="928.3" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="925.6" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="928.6" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="925.6" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="928.6" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.08%)</title><rect x="926.2" y="627.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.2" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="926.2" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="929.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="926.6" y="611.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.6" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.14%)</title><rect x="927.2" y="627.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="930.2" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.14%)</title><rect x="927.2" y="611.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.2" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.14%)</title><rect x="927.2" y="595.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="930.2" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="927.2" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="930.2" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.08%)</title><rect x="927.8" y="579.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.8" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="927.8" y="563.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="930.8" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="928.8" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="931.8" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="929.1" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.1" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="929.1" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.1" y="622.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="929.1" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.1" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="929.5" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.5" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="929.8" y="659.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.8" y="670.0"></text>
</g>
<g>
<title>sock_read_iter (3 samples, 0.08%)</title><rect x="930.4" y="707.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.4" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.27%)</title><rect x="931.4" y="723.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="934.4" y="734.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="931.4" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.4" y="718.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.25%)</title><rect x="931.7" y="707.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.7" y="718.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.05%)</title><rect x="931.7" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="934.7" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="932.4" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.4" y="702.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="932.4" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="935.4" y="686.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="932.7" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.7" y="670.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="933.0" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.0" y="702.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.11%)</title><rect x="933.3" y="691.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.3" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="933.3" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="936.3" y="686.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.08%)</title><rect x="933.7" y="675.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.7" y="686.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="933.7" y="659.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.7" y="670.0"></text>
</g>
<g>
<title>inode_has_perm (1 samples, 0.03%)</title><rect x="934.3" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.3" y="670.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="934.3" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.3" y="654.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="934.6" y="835.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="937.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="935.0" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.0" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="935.0" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.0" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="935.0" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="935.0" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="935.3" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$353/1876530093.accept (5 samples, 0.14%)</title><rect x="935.6" y="1139.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (5 samples, 0.14%)</title><rect x="935.6" y="1123.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="938.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$349/1518863725.run (5 samples, 0.14%)</title><rect x="935.6" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (5 samples, 0.14%)</title><rect x="935.6" y="1091.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (5 samples, 0.14%)</title><rect x="935.6" y="1075.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="936.9" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.9" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="936.9" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="937.2" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.2" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="937.2" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.2" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeSet.size (1 samples, 0.03%)</title><rect x="937.5" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.5" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="937.5" y="1139.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="940.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="937.9" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.9" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (11 samples, 0.30%)</title><rect x="938.2" y="1155.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.2" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.16%)</title><rect x="939.8" y="1139.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.08%)</title><rect x="939.8" y="1123.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.08%)</title><rect x="939.8" y="1107.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.08%)</title><rect x="939.8" y="1091.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.08%)</title><rect x="939.8" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.08%)</title><rect x="940.8" y="1123.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.08%)</title><rect x="940.8" y="1107.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.08%)</title><rect x="940.8" y="1091.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.08%)</title><rect x="940.8" y="1075.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.8" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.08%)</title><rect x="940.8" y="1059.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (30 samples, 0.82%)</title><rect x="941.7" y="1155.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$258/1773028224.run (21 samples, 0.57%)</title><rect x="941.7" y="1139.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (21 samples, 0.57%)</title><rect x="941.7" y="1123.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (3 samples, 0.08%)</title><rect x="941.7" y="1107.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (3 samples, 0.08%)</title><rect x="941.7" y="1091.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.49%)</title><rect x="942.7" y="1107.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.49%)</title><rect x="942.7" y="1091.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18 samples, 0.49%)</title><rect x="942.7" y="1075.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="945.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="942.7" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.03%)</title><rect x="942.7" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.03%)</title><rect x="942.7" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.03%)</title><rect x="942.7" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="945.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.03%)</title><rect x="942.7" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.03%)</title><rect x="942.7" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.03%)</title><rect x="942.7" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.03%)</title><rect x="942.7" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="942.7" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="942.7" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.7" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.03%)</title><rect x="942.7" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (17 samples, 0.47%)</title><rect x="943.0" y="1059.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1370831110.run (14 samples, 0.38%)</title><rect x="943.7" y="1043.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (13 samples, 0.36%)</title><rect x="943.7" y="1027.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (12 samples, 0.33%)</title><rect x="944.0" y="1011.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (9 samples, 0.25%)</title><rect x="945.0" y="995.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.08%)</title><rect x="945.3" y="979.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.08%)</title><rect x="945.3" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.08%)</title><rect x="945.3" y="947.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.08%)</title><rect x="945.3" y="931.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.08%)</title><rect x="945.3" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.05%)</title><rect x="945.6" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.05%)</title><rect x="945.6" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="948.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.05%)</title><rect x="945.6" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.6" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.03%)</title><rect x="945.6" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.6" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="945.6" y="835.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="948.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="945.9" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="945.9" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="945.9" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.14%)</title><rect x="946.3" y="979.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.14%)</title><rect x="946.3" y="963.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.14%)</title><rect x="946.3" y="947.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="947.2" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="947.2" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="947.2" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.03%)</title><rect x="947.2" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="947.2" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="947.2" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="947.2" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="947.2" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="947.2" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="947.2" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.2" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="947.2" y="771.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="950.2" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="947.2" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="950.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="947.5" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="947.5" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="947.5" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="947.9" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="948.2" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/1151414921.run (9 samples, 0.25%)</title><rect x="948.5" y="1139.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (9 samples, 0.25%)</title><rect x="948.5" y="1123.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.22%)</title><rect x="948.8" y="1107.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.19%)</title><rect x="949.2" y="1091.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.19%)</title><rect x="949.2" y="1075.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.11%)</title><rect x="949.2" y="1059.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="949.2" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="949.2" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.08%)</title><rect x="949.5" y="1043.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.08%)</title><rect x="949.5" y="1027.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.08%)</title><rect x="949.5" y="1011.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.08%)</title><rect x="949.5" y="995.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.08%)</title><rect x="949.5" y="979.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="952.5" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.08%)</title><rect x="949.5" y="963.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="952.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="949.8" y="947.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="952.8" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="949.8" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="952.8" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="949.8" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.8" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="950.1" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.1" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="950.1" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="953.1" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="950.1" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.1" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="950.1" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.1" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="950.1" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.08%)</title><rect x="950.4" y="1059.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.08%)</title><rect x="950.4" y="1043.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (37 samples, 1.01%)</title><rect x="951.4" y="1155.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.4" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.05%)</title><rect x="951.4" y="1139.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.4" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.05%)</title><rect x="951.4" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (35 samples, 0.96%)</title><rect x="952.1" y="1139.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.1" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (25 samples, 0.68%)</title><rect x="954.6" y="1123.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="957.6" y="1134.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="954.6" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="957.6" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (24 samples, 0.66%)</title><rect x="955.0" y="1107.0" width="7.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="958.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (24 samples, 0.66%)</title><rect x="955.0" y="1091.0" width="7.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="958.0" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (19 samples, 0.52%)</title><rect x="955.0" y="1075.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="958.0" y="1086.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.14%)</title><rect x="961.1" y="1075.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="964.1" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="962.7" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1 samples, 0.03%)</title><rect x="963.0" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.11%)</title><rect x="963.4" y="1155.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.4" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="964.0" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.0" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="964.0" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.0" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.05%)</title><rect x="964.0" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (18 samples, 0.49%)</title><rect x="964.7" y="1155.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.7" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.16%)</title><rect x="965.3" y="1139.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="968.3" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.16%)</title><rect x="965.3" y="1123.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="968.3" y="1134.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="965.3" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="968.3" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.14%)</title><rect x="965.6" y="1107.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="968.6" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (2 samples, 0.05%)</title><rect x="965.6" y="1091.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="968.6" y="1102.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.08%)</title><rect x="966.3" y="1091.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="969.3" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.11%)</title><rect x="967.2" y="1139.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.2" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.11%)</title><rect x="967.2" y="1123.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="968.2" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.2" y="1118.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="968.2" y="1091.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="971.2" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="968.2" y="1075.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="971.2" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="968.2" y="1059.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="971.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="968.5" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.5" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.03%)</title><rect x="968.5" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="968.5" y="1107.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.14%)</title><rect x="968.9" y="1139.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.9" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.14%)</title><rect x="968.9" y="1123.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.9" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5 samples, 0.14%)</title><rect x="968.9" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.9" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.08%)</title><rect x="969.5" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (126 samples, 3.45%)</title><rect x="970.5" y="1155.0" width="40.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.5" y="1166.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (125 samples, 3.42%)</title><rect x="970.8" y="1139.0" width="40.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.8" y="1150.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (123 samples, 3.37%)</title><rect x="971.4" y="1123.0" width="39.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.4" y="1134.0">sun..</text>
</g>
<g>
<title>os::Posix::supports_monotonic_clock() (1 samples, 0.03%)</title><rect x="972.1" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="975.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (71 samples, 1.94%)</title><rect x="972.4" y="1107.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.4" y="1118.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.05%)</title><rect x="972.7" y="1091.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="975.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 1.83%)</title><rect x="973.4" y="1091.0" width="21.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="976.4" y="1102.0">[..</text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="973.4" y="1075.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="976.4" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (66 samples, 1.81%)</title><rect x="973.7" y="1075.0" width="21.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="976.7" y="1086.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 1.31%)</title><rect x="979.5" y="1059.0" width="15.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 1.31%)</title><rect x="979.5" y="1043.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="982.5" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (44 samples, 1.20%)</title><rect x="980.5" y="1027.0" width="14.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="983.5" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (44 samples, 1.20%)</title><rect x="980.5" y="1011.0" width="14.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.5" y="1022.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="980.5" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.5" y="1006.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="980.5" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="983.5" y="990.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="980.5" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="983.5" y="974.0"></text>
</g>
<g>
<title>ep_poll (41 samples, 1.12%)</title><rect x="980.8" y="995.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.8" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (30 samples, 0.82%)</title><rect x="981.4" y="979.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="984.4" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 0.60%)</title><rect x="982.7" y="963.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="985.7" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (13 samples, 0.36%)</title><rect x="985.0" y="947.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="988.0" y="958.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="987.6" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.6" y="942.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.11%)</title><rect x="987.9" y="931.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.9" y="942.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="988.9" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="991.9" y="926.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="989.2" y="947.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.2" y="958.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="989.5" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.5" y="958.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="989.8" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="992.8" y="974.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="990.5" y="963.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="993.5" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.11%)</title><rect x="991.1" y="979.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="994.1" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.11%)</title><rect x="991.1" y="963.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.1" y="974.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="991.1" y="947.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.1" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.08%)</title><rect x="991.5" y="947.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="994.5" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="991.5" y="931.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.5" y="942.0"></text>
</g>
<g>
<title>select_estimate_accuracy (5 samples, 0.14%)</title><rect x="992.4" y="979.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="995.4" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.08%)</title><rect x="993.1" y="963.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="996.1" y="974.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.08%)</title><rect x="993.1" y="947.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.1" y="958.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="994.0" y="995.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.0" y="1006.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="994.0" y="979.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.0" y="990.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.03%)</title><rect x="994.4" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="997.4" y="1006.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.03%)</title><rect x="994.7" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="997.7" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="995.0" y="1091.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="998.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (40 samples, 1.09%)</title><rect x="995.3" y="1107.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.08%)</title><rect x="995.3" y="1091.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.08%)</title><rect x="995.3" y="1075.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (34 samples, 0.93%)</title><rect x="996.3" y="1091.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (34 samples, 0.93%)</title><rect x="996.3" y="1075.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.68%)</title><rect x="996.3" y="1059.0" width="8.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="999.3" y="1070.0"></text>
</g>
<g>
<title>Metadata::is_klass() const volatile (3 samples, 0.08%)</title><rect x="996.3" y="1043.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="999.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="996.3" y="1027.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="999.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="996.3" y="1011.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="999.3" y="1022.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.08%)</title><rect x="996.3" y="995.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="999.3" y="1006.0"></text>
</g>
<g>
<title>__read (3 samples, 0.08%)</title><rect x="996.3" y="979.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="999.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="996.9" y="963.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="999.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="996.9" y="947.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.9" y="958.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="996.9" y="931.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.9" y="942.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="996.9" y="915.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.9" y="926.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="996.9" y="899.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="999.9" y="910.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="996.9" y="883.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.9" y="894.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="996.9" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="999.9" y="878.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="996.9" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="999.9" y="862.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="996.9" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.9" y="846.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="996.9" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.30%)</title><rect x="997.3" y="1043.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1000.3" y="1054.0"></text>
</g>
<g>
<title>__read (11 samples, 0.30%)</title><rect x="997.3" y="1027.0" width="3.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1000.3" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.25%)</title><rect x="997.9" y="1011.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1000.9" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.25%)</title><rect x="997.9" y="995.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.9" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (8 samples, 0.22%)</title><rect x="998.2" y="979.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1001.2" y="990.0"></text>
</g>
<g>
<title>ksys_read (8 samples, 0.22%)</title><rect x="998.2" y="963.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1001.2" y="974.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="998.2" y="947.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1001.2" y="958.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="998.2" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.2" y="942.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.19%)</title><rect x="998.6" y="947.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1001.6" y="958.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.11%)</title><rect x="998.6" y="931.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1001.6" y="942.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.11%)</title><rect x="998.6" y="915.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1001.6" y="926.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (1 samples, 0.03%)</title><rect x="998.6" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1001.6" y="910.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.08%)</title><rect x="998.9" y="899.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.9" y="910.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="999.2" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.2" y="894.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="999.2" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1002.2" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="999.2" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.2" y="862.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="999.5" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1002.5" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="999.5" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.5" y="878.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.08%)</title><rect x="999.8" y="931.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1002.8" y="942.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.08%)</title><rect x="999.8" y="915.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1002.8" y="926.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="999.8" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.8" y="910.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="999.8" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1002.8" y="894.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="1000.2" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.2" y="910.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="1000.5" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.5" y="910.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.03%)</title><rect x="1000.5" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1003.5" y="894.0"></text>
</g>
<g>
<title>__read (2 samples, 0.05%)</title><rect x="1000.8" y="1043.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1003.8" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1001.1" y="1027.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1004.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1001.1" y="1011.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1004.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="1001.1" y="995.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1004.1" y="1006.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="1001.1" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.1" y="990.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="1001.1" y="963.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.1" y="974.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="1001.1" y="947.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.1" y="958.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="1001.1" y="931.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1004.1" y="942.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="1001.1" y="915.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.1" y="926.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="1001.1" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1004.1" y="910.0"></text>
</g>
<g>
<title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="1001.5" y="1043.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1004.5" y="1054.0"></text>
</g>
<g>
<title>__read (1 samples, 0.03%)</title><rect x="1001.5" y="1027.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1004.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1001.5" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1004.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1001.5" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1004.5" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="1001.5" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.5" y="990.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="1001.5" y="963.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.5" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1001.5" y="947.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1004.5" y="958.0"></text>
</g>
<g>
<title>update_get_addr (8 samples, 0.22%)</title><rect x="1001.8" y="1043.0" width="2.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1004.8" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1001.8" y="1027.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1004.8" y="1038.0"></text>
</g>
<g>
<title>__read (7 samples, 0.19%)</title><rect x="1002.1" y="1027.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1005.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="1002.7" y="1011.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.7" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.14%)</title><rect x="1002.7" y="995.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.7" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (3 samples, 0.08%)</title><rect x="1003.4" y="979.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.4" y="990.0"></text>
</g>
<g>
<title>ksys_read (3 samples, 0.08%)</title><rect x="1003.4" y="963.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.4" y="974.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.08%)</title><rect x="1003.4" y="947.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1006.4" y="958.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.05%)</title><rect x="1003.4" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.4" y="942.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.05%)</title><rect x="1003.4" y="915.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1006.4" y="926.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (1 samples, 0.03%)</title><rect x="1003.4" y="899.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.4" y="910.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="1003.7" y="899.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1006.7" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="1003.7" y="883.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.7" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1003.7" y="867.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.7" y="878.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="1004.0" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1007.0" y="942.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="1004.0" y="915.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1007.0" y="926.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="1004.0" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1007.0" y="910.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.03%)</title><rect x="1004.0" y="883.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1007.0" y="894.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="1004.0" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1007.0" y="878.0"></text>
</g>
<g>
<title>__read (9 samples, 0.25%)</title><rect x="1004.4" y="1059.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1007.4" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.22%)</title><rect x="1004.7" y="1043.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.22%)</title><rect x="1004.7" y="1027.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1007.7" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (8 samples, 0.22%)</title><rect x="1004.7" y="1011.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.7" y="1022.0"></text>
</g>
<g>
<title>ksys_read (8 samples, 0.22%)</title><rect x="1004.7" y="995.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1007.7" y="1006.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.22%)</title><rect x="1004.7" y="979.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1007.7" y="990.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.14%)</title><rect x="1005.0" y="963.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1008.0" y="974.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.14%)</title><rect x="1005.0" y="947.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.0" y="958.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1005.0" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.0" y="942.0"></text>
</g>
<g>
<title>pipe_read (4 samples, 0.11%)</title><rect x="1005.3" y="931.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.3" y="942.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.08%)</title><rect x="1005.3" y="915.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1008.3" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1006.0" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1009.0" y="910.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="1006.3" y="915.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1009.3" y="926.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="1006.3" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1009.3" y="910.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="1006.6" y="963.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.6" y="974.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="1006.9" y="947.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1009.9" y="958.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="1006.9" y="931.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1009.9" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.08%)</title><rect x="1007.3" y="1091.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (3 samples, 0.08%)</title><rect x="1007.3" y="1075.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (3 samples, 0.08%)</title><rect x="1007.3" y="1059.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (3 samples, 0.08%)</title><rect x="1007.3" y="1043.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.11%)</title><rect x="1008.2" y="1107.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.05%)</title><rect x="1009.5" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.05%)</title><rect x="1009.5" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1009.9" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1012.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.05%)</title><rect x="1010.2" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.05%)</title><rect x="1010.2" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.05%)</title><rect x="1010.2" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.05%)</title><rect x="1010.2" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1013.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.05%)</title><rect x="1010.2" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="1010.8" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="1010.8" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="1010.8" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (20 samples, 0.55%)</title><rect x="1011.1" y="1155.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.1" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (20 samples, 0.55%)</title><rect x="1011.1" y="1139.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.1" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (19 samples, 0.52%)</title><rect x="1011.5" y="1123.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (15 samples, 0.41%)</title><rect x="1011.5" y="1107.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1014.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.36%)</title><rect x="1011.8" y="1091.0" width="4.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1014.8" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (13 samples, 0.36%)</title><rect x="1011.8" y="1075.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1014.8" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.22%)</title><rect x="1013.4" y="1059.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1016.4" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.22%)</title><rect x="1013.4" y="1043.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.4" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.16%)</title><rect x="1014.0" y="1027.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1017.0" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.16%)</title><rect x="1014.0" y="1011.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.0" y="1022.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.16%)</title><rect x="1014.0" y="995.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1017.0" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (6 samples, 0.16%)</title><rect x="1014.0" y="979.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1017.0" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.14%)</title><rect x="1014.0" y="963.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1017.0" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.14%)</title><rect x="1014.0" y="947.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1017.0" y="958.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.14%)</title><rect x="1014.0" y="931.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.0" y="942.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="1015.3" y="915.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1018.3" y="926.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1015.7" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.7" y="974.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="1016.0" y="1091.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1019.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.08%)</title><rect x="1016.3" y="1107.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (3 samples, 0.08%)</title><rect x="1016.3" y="1091.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1019.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (3 samples, 0.08%)</title><rect x="1016.3" y="1075.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1019.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1016.3" y="1059.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1019.3" y="1070.0"></text>
</g>
<g>
<title>Metadata::is_klass() const volatile (1 samples, 0.03%)</title><rect x="1016.3" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1019.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.3" y="1027.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1019.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.3" y="1011.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1019.3" y="1022.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="1016.3" y="995.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1019.3" y="1006.0"></text>
</g>
<g>
<title>__read (1 samples, 0.03%)</title><rect x="1016.3" y="979.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1019.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.6" y="1043.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1019.6" y="1054.0"></text>
</g>
<g>
<title>__read (1 samples, 0.03%)</title><rect x="1016.6" y="1027.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1019.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1016.6" y="1011.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1019.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1016.6" y="995.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="1016.6" y="979.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1019.6" y="990.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="1016.6" y="963.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.6" y="974.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="1016.6" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1019.6" y="958.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="1016.6" y="931.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1019.6" y="942.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="1016.6" y="915.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.6" y="926.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (1 samples, 0.03%)</title><rect x="1016.6" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.6" y="910.0"></text>
</g>
<g>
<title>__read (1 samples, 0.03%)</title><rect x="1017.0" y="1059.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1020.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1017.0" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1020.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1017.0" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.0" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="1017.0" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1020.0" y="1022.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="1017.0" y="995.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.0" y="1006.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="1017.0" y="979.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.0" y="990.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="1017.0" y="963.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1020.0" y="974.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="1017.0" y="947.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1020.0" y="958.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="1017.0" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="1017.3" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (3 samples, 0.08%)</title><rect x="1017.6" y="1155.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.6" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.08%)</title><rect x="1017.6" y="1139.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.6" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (3 samples, 0.08%)</title><rect x="1017.6" y="1123.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.6" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (11 samples, 0.30%)</title><rect x="1018.6" y="1155.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.6" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (11 samples, 0.30%)</title><rect x="1018.6" y="1139.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (409 samples, 11.19%)</title><rect x="1022.1" y="1171.0" width="132.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.1" y="1182.0">one/nio/server/S..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1022.8" y="1155.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1025.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1022.8" y="1139.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1025.8" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1022.8" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.8" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1023.1" y="1155.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1026.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.05%)</title><rect x="1023.4" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.16%)</title><rect x="1024.1" y="1155.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.16%)</title><rect x="1024.1" y="1139.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.16%)</title><rect x="1024.1" y="1123.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (106 samples, 2.90%)</title><rect x="1026.0" y="1155.0" width="34.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.0" y="1166.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (104 samples, 2.85%)</title><rect x="1026.6" y="1139.0" width="33.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.6" y="1150.0">on..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.03%)</title><rect x="1027.3" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 2.71%)</title><rect x="1027.6" y="1123.0" width="32.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1030.6" y="1134.0">[u..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.11%)</title><rect x="1027.6" y="1107.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1030.6" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.11%)</title><rect x="1027.6" y="1091.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1030.6" y="1102.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1028.3" y="1075.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1031.3" y="1086.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1028.3" y="1059.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1031.3" y="1070.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="1028.9" y="1107.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1031.9" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (93 samples, 2.54%)</title><rect x="1029.2" y="1107.0" width="30.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1032.2" y="1118.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 2.11%)</title><rect x="1034.4" y="1091.0" width="24.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1037.4" y="1102.0">e..</text>
</g>
<g>
<title>do_syscall_64 (77 samples, 2.11%)</title><rect x="1034.4" y="1075.0" width="24.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.4" y="1086.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (75 samples, 2.05%)</title><rect x="1034.7" y="1059.0" width="24.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.7" y="1070.0">_..</text>
</g>
<g>
<title>do_epoll_wait (75 samples, 2.05%)</title><rect x="1034.7" y="1043.0" width="24.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1037.7" y="1054.0">d..</text>
</g>
<g>
<title>__fdget (3 samples, 0.08%)</title><rect x="1034.7" y="1027.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1037.7" y="1038.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.08%)</title><rect x="1034.7" y="1011.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1037.7" y="1022.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="1034.7" y="995.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.7" y="1006.0"></text>
</g>
<g>
<title>ep_poll (69 samples, 1.89%)</title><rect x="1035.7" y="1027.0" width="22.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.7" y="1038.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (63 samples, 1.72%)</title><rect x="1036.6" y="1011.0" width="20.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.6" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (48 samples, 1.31%)</title><rect x="1040.5" y="995.0" width="15.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.5" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (38 samples, 1.04%)</title><rect x="1042.8" y="979.0" width="12.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1045.8" y="990.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.71%)</title><rect x="1046.7" y="963.0" width="8.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1049.7" y="974.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.08%)</title><rect x="1052.8" y="947.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1055.8" y="958.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="1053.4" y="931.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1056.4" y="942.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.11%)</title><rect x="1053.8" y="947.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1056.8" y="958.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.08%)</title><rect x="1055.1" y="979.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.1" y="990.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1056.0" y="995.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1059.0" y="1006.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="1056.7" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1059.7" y="1006.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1057.0" y="1011.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1060.0" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="1057.6" y="1011.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1060.6" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1057.6" y="995.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.6" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.03%)</title><rect x="1058.0" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1061.0" y="1038.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="1058.3" y="1027.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1061.3" y="1038.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="1058.3" y="1011.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1061.3" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.03%)</title><rect x="1058.9" y="1059.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.9" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="1059.2" y="1107.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1062.2" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1059.6" y="1123.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1062.6" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="1059.9" y="1123.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1062.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (289 samples, 7.91%)</title><rect x="1060.2" y="1155.0" width="93.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.2" y="1166.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (287 samples, 7.85%)</title><rect x="1060.9" y="1139.0" width="92.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.9" y="1150.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (110 samples, 3.01%)</title><rect x="1060.9" y="1123.0" width="35.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.9" y="1134.0">one..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (1 samples, 0.03%)</title><rect x="1061.8" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.8" y="1118.0"></text>
</g>
<g>
<title>_new_array_nozero_Java (1 samples, 0.03%)</title><rect x="1062.2" y="1107.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1065.2" y="1118.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="1062.5" y="1107.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1065.5" y="1118.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1063.1" y="1107.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1066.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (68 samples, 1.86%)</title><rect x="1063.4" y="1107.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.4" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (68 samples, 1.86%)</title><rect x="1063.4" y="1091.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.4" y="1102.0">o..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (60 samples, 1.64%)</title><rect x="1063.4" y="1075.0" width="19.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="1063.4" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1063.8" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1063.8" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.22%)</title><rect x="1064.1" y="1059.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.22%)</title><rect x="1064.1" y="1043.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1066.0" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1066.0" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1066.4" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1066.4" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1066.4" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1066.4" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (50 samples, 1.37%)</title><rect x="1066.7" y="1059.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (50 samples, 1.37%)</title><rect x="1066.7" y="1043.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1056538042.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1068.0" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1068.0" y="1011.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.get$Lambda (2 samples, 0.05%)</title><rect x="1068.0" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1068.0" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1071.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1068.3" y="979.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1071.3" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1068.3" y="963.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1071.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (44 samples, 1.20%)</title><rect x="1068.6" y="1027.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (42 samples, 1.15%)</title><rect x="1068.6" y="1011.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.08%)</title><rect x="1068.9" y="995.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.08%)</title><rect x="1068.9" y="979.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 1.04%)</title><rect x="1069.9" y="995.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (38 samples, 1.04%)</title><rect x="1069.9" y="979.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 1.04%)</title><rect x="1069.9" y="963.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.88%)</title><rect x="1070.9" y="947.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.88%)</title><rect x="1070.9" y="931.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.9" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.11%)</title><rect x="1071.2" y="915.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1074.2" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="1071.5" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.5" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="1071.8" y="899.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1074.8" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.74%)</title><rect x="1072.5" y="915.0" width="8.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1075.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.66%)</title><rect x="1073.5" y="899.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1076.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.66%)</title><rect x="1073.5" y="883.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1076.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.60%)</title><rect x="1074.1" y="867.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1077.1" y="878.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.60%)</title><rect x="1074.1" y="851.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1077.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.60%)</title><rect x="1074.1" y="835.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1077.1" y="846.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1075.1" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.1" y="830.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="1075.4" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1078.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.47%)</title><rect x="1075.7" y="819.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1078.7" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.47%)</title><rect x="1075.7" y="803.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1078.7" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.47%)</title><rect x="1075.7" y="787.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1078.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.08%)</title><rect x="1081.2" y="947.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="1082.2" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.22%)</title><rect x="1082.8" y="1075.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.8" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.22%)</title><rect x="1082.8" y="1059.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.22%)</title><rect x="1082.8" y="1043.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.30%)</title><rect x="1085.4" y="1107.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.16%)</title><rect x="1085.4" y="1091.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.4" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1085.4" y="1075.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.4" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="1085.4" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1088.4" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1085.4" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1088.4" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1085.4" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.4" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="1085.7" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.11%)</title><rect x="1086.0" y="1075.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.11%)</title><rect x="1086.0" y="1059.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.11%)</title><rect x="1086.0" y="1043.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="1087.3" y="1091.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="1087.3" y="1075.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.3" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1087.3" y="1059.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1090.3" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1087.7" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.7" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1087.7" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.7" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1087.7" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.7" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1087.7" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.7" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1087.7" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1090.7" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::tlab_alloc_reserve() const (1 samples, 0.03%)</title><rect x="1087.7" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1090.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1088.0" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1091.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1088.0" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="1088.0" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.0" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1088.0" y="1011.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1091.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1088.0" y="995.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.0" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1088.0" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1091.0" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1088.3" y="963.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.3" y="974.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.03%)</title><rect x="1088.3" y="947.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1091.3" y="958.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="1088.3" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1091.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="1088.6" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.47%)</title><rect x="1088.9" y="1107.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.22%)</title><rect x="1091.2" y="1091.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.22%)</title><rect x="1091.2" y="1075.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.2" y="1086.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (1 samples, 0.03%)</title><rect x="1093.5" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1093.8" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1093.8" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.8" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="1093.8" y="1059.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.8" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="1093.8" y="1043.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1096.8" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="1093.8" y="1027.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1096.8" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1093.8" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1096.8" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1094.1" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1097.1" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::thread() (1 samples, 0.03%)</title><rect x="1094.1" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.16%)</title><rect x="1094.4" y="1107.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.16%)</title><rect x="1094.4" y="1091.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1097.4" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1094.4" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.4" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1094.4" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.4" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1094.4" y="1043.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1097.4" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1094.8" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1097.8" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="1095.1" y="1075.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1098.1" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="1095.1" y="1059.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.1" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="1095.1" y="1043.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.1" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1095.1" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1098.1" y="1038.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="1095.1" y="1011.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1098.1" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1095.4" y="1027.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1098.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1095.7" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1095.7" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="1095.7" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.7" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1095.7" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.7" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1095.7" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1098.7" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1095.7" y="995.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.7" y="1006.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="1095.7" y="979.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1098.7" y="990.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="1096.1" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1099.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="1096.4" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (176 samples, 4.82%)</title><rect x="1096.7" y="1123.0" width="56.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.7" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (172 samples, 4.71%)</title><rect x="1098.0" y="1107.0" width="55.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.0" y="1118.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.30%)</title><rect x="1098.0" y="1091.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1101.0" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1098.6" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1101.6" y="1086.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.08%)</title><rect x="1099.0" y="1075.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1102.0" y="1086.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.11%)</title><rect x="1099.9" y="1075.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1102.9" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.08%)</title><rect x="1100.2" y="1059.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1103.2" y="1070.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="1101.2" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1104.2" y="1086.0"></text>
</g>
<g>
<title>__recv (157 samples, 4.30%)</title><rect x="1101.5" y="1091.0" width="50.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1104.5" y="1102.0">__recv</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1104.1" y="1075.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1107.1" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1104.1" y="1059.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1107.1" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1104.1" y="1043.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1107.1" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1104.1" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1107.1" y="1038.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.03%)</title><rect x="1104.1" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.1" y="1022.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.03%)</title><rect x="1104.1" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1107.1" y="1006.0"></text>
</g>
<g>
<title>note_gp_changes (1 samples, 0.03%)</title><rect x="1104.1" y="979.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.1" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1104.1" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (148 samples, 4.05%)</title><rect x="1104.4" y="1075.0" width="47.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1107.4" y="1086.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (148 samples, 4.05%)</title><rect x="1104.4" y="1059.0" width="47.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.4" y="1070.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (143 samples, 3.91%)</title><rect x="1106.1" y="1043.0" width="46.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1109.1" y="1054.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (143 samples, 3.91%)</title><rect x="1106.1" y="1027.0" width="46.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1109.1" y="1038.0">__sy..</text>
</g>
<g>
<title>sock_recvmsg (137 samples, 3.75%)</title><rect x="1106.1" y="1011.0" width="44.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.1" y="1022.0">sock..</text>
</g>
<g>
<title>inet6_recvmsg (131 samples, 3.58%)</title><rect x="1106.1" y="995.0" width="42.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1109.1" y="1006.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (130 samples, 3.56%)</title><rect x="1106.4" y="979.0" width="42.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1109.4" y="990.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.14%)</title><rect x="1108.3" y="963.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.3" y="974.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.11%)</title><rect x="1108.3" y="947.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1111.3" y="958.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="1108.3" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.3" y="942.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.08%)</title><rect x="1108.6" y="931.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.6" y="942.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="1108.6" y="915.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1111.6" y="926.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.05%)</title><rect x="1109.0" y="915.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.0" y="926.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1109.6" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.6" y="958.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1109.9" y="963.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1112.9" y="974.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1110.3" y="963.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1113.3" y="974.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1110.3" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1113.3" y="958.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="1110.6" y="963.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1113.6" y="974.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.30%)</title><rect x="1111.2" y="963.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1114.2" y="974.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.30%)</title><rect x="1111.2" y="947.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1114.2" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.19%)</title><rect x="1112.5" y="931.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.5" y="942.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1112.5" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.5" y="926.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.11%)</title><rect x="1112.8" y="915.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1115.8" y="926.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="1112.8" y="899.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1115.8" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1113.8" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.8" y="910.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="1114.1" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1117.1" y="926.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (100 samples, 2.74%)</title><rect x="1114.8" y="963.0" width="32.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1117.8" y="974.0">tc..</text>
</g>
<g>
<title>tcp_send_ack (97 samples, 2.65%)</title><rect x="1115.7" y="947.0" width="31.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.7" y="958.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.47 (97 samples, 2.65%)</title><rect x="1115.7" y="931.0" width="31.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.7" y="942.0">__..</text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.16%)</title><rect x="1115.7" y="915.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1118.7" y="926.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (4 samples, 0.11%)</title><rect x="1116.1" y="899.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.1" y="910.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.11%)</title><rect x="1116.1" y="883.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1119.1" y="894.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="1117.0" y="867.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1120.0" y="878.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1117.4" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1120.4" y="910.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1117.7" y="915.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1120.7" y="926.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (88 samples, 2.41%)</title><rect x="1118.0" y="915.0" width="28.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.0" y="926.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="1119.6" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1122.6" y="910.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="1119.9" y="899.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1122.9" y="910.0"></text>
</g>
<g>
<title>ip_queue_xmit (80 samples, 2.19%)</title><rect x="1120.3" y="899.0" width="25.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.3" y="910.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (80 samples, 2.19%)</title><rect x="1120.3" y="883.0" width="25.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.3" y="894.0">_..</text>
</g>
<g>
<title>ip_local_out (76 samples, 2.08%)</title><rect x="1120.6" y="867.0" width="24.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1123.6" y="878.0">i..</text>
</g>
<g>
<title>ip_output (76 samples, 2.08%)</title><rect x="1120.6" y="851.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.6" y="862.0">i..</text>
</g>
<g>
<title>ip_finish_output (70 samples, 1.92%)</title><rect x="1120.6" y="835.0" width="22.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.6" y="846.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1120.9" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1123.9" y="830.0"></text>
</g>
<g>
<title>__ip_finish_output (67 samples, 1.83%)</title><rect x="1121.2" y="819.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1124.2" y="830.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (66 samples, 1.81%)</title><rect x="1121.6" y="803.0" width="21.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.6" y="814.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 1.42%)</title><rect x="1122.8" y="787.0" width="16.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1125.8" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.20 (52 samples, 1.42%)</title><rect x="1122.8" y="771.0" width="16.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.8" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (52 samples, 1.42%)</title><rect x="1122.8" y="755.0" width="16.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.8" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 1.40%)</title><rect x="1122.8" y="739.0" width="16.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.8" y="750.0"></text>
</g>
<g>
<title>net_rx_action (46 samples, 1.26%)</title><rect x="1124.1" y="723.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.1" y="734.0"></text>
</g>
<g>
<title>process_backlog (45 samples, 1.23%)</title><rect x="1124.5" y="707.0" width="14.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1127.5" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (45 samples, 1.23%)</title><rect x="1124.5" y="691.0" width="14.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1127.5" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (44 samples, 1.20%)</title><rect x="1124.5" y="675.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.5" y="686.0"></text>
</g>
<g>
<title>ip_rcv (44 samples, 1.20%)</title><rect x="1124.5" y="659.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.5" y="670.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.08%)</title><rect x="1124.5" y="643.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.5" y="654.0"></text>
</g>
<g>
<title>ip_rcv_finish (41 samples, 1.12%)</title><rect x="1125.4" y="643.0" width="13.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1128.4" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 1.12%)</title><rect x="1125.4" y="627.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.4" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 1.07%)</title><rect x="1125.4" y="611.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1128.4" y="622.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (39 samples, 1.07%)</title><rect x="1125.4" y="595.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1128.4" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (38 samples, 1.04%)</title><rect x="1125.8" y="579.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1128.8" y="590.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.19%)</title><rect x="1126.1" y="563.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.1" y="574.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="1128.0" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1131.0" y="558.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="1128.3" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.3" y="574.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="1128.3" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1131.3" y="558.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="1128.3" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1131.3" y="542.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (1 samples, 0.03%)</title><rect x="1128.3" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1131.3" y="526.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="1128.3" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1131.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.79%)</title><rect x="1128.7" y="563.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.7" y="574.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="1128.7" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.7" y="558.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="1129.0" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.0" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.74%)</title><rect x="1129.3" y="547.0" width="8.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.3" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="1130.0" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1133.0" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1130.0" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1130.0" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.0" y="510.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="1130.3" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1133.3" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1130.3" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1133.3" y="510.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="1130.3" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.3" y="494.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="1130.6" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.6" y="542.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="1130.9" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1133.9" y="542.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.52%)</title><rect x="1131.2" y="531.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.2" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.25%)</title><rect x="1132.2" y="515.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1135.2" y="526.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.22%)</title><rect x="1132.5" y="499.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1135.5" y="510.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.22%)</title><rect x="1132.5" y="483.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1135.5" y="494.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.11%)</title><rect x="1133.8" y="467.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1136.8" y="478.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.11%)</title><rect x="1133.8" y="451.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1136.8" y="462.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="1134.5" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.5" y="446.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="1135.1" y="515.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1138.1" y="526.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="1135.8" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1138.8" y="526.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (3 samples, 0.08%)</title><rect x="1136.1" y="515.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1139.1" y="526.0"></text>
</g>
<g>
<title>minmax_subwin_update (2 samples, 0.05%)</title><rect x="1136.4" y="499.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1139.4" y="510.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="1137.1" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1140.1" y="526.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="1137.4" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1140.4" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="1137.7" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1140.7" y="542.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="1138.0" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.0" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1138.7" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.7" y="686.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="1139.0" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1142.0" y="734.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1139.3" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1142.3" y="750.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.27%)</title><rect x="1139.6" y="787.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1142.6" y="798.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.27%)</title><rect x="1139.6" y="771.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.6" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1140.3" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1143.3" y="766.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="1140.6" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1143.6" y="766.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="1140.6" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1143.6" y="750.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.03%)</title><rect x="1140.9" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1143.9" y="766.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.14%)</title><rect x="1141.3" y="755.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1144.3" y="766.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="1142.2" y="739.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.2" y="750.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="1142.9" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.9" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.11%)</title><rect x="1143.2" y="835.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.2" y="846.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.11%)</title><rect x="1143.2" y="819.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1146.2" y="830.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.11%)</title><rect x="1143.2" y="803.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.2" y="814.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.08%)</title><rect x="1143.5" y="787.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1146.5" y="798.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="1143.5" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.5" y="782.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (1 samples, 0.03%)</title><rect x="1144.2" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1147.2" y="782.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="1144.2" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.2" y="766.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.05%)</title><rect x="1144.5" y="835.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1147.5" y="846.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="1145.1" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.1" y="878.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="1145.4" y="867.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.4" y="878.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="1146.1" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.1" y="910.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="1146.1" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1149.1" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="1146.4" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.4" y="926.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="1146.7" y="915.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1149.7" y="926.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.08%)</title><rect x="1147.1" y="963.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.1" y="974.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1147.4" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.4" y="958.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1147.7" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1150.7" y="958.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1147.7" y="931.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.7" y="942.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1148.0" y="963.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.0" y="974.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.16%)</title><rect x="1148.4" y="995.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.4" y="1006.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.14%)</title><rect x="1148.4" y="979.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.4" y="990.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.14%)</title><rect x="1148.4" y="963.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1151.4" y="974.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.14%)</title><rect x="1148.4" y="947.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.4" y="958.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="1150.0" y="979.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.0" y="990.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="1150.0" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1153.0" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.16%)</title><rect x="1150.3" y="1011.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.3" y="1022.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.11%)</title><rect x="1150.3" y="995.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.3" y="1006.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.11%)</title><rect x="1150.3" y="979.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.3" y="990.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="1150.6" y="963.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1153.6" y="974.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1151.6" y="995.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.6" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.11%)</title><rect x="1152.2" y="1091.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1155.2" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1153.5" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.5" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1153.5" y="1139.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1156.5" y="1150.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1153.8" y="1123.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1156.8" y="1134.0"></text>
</g>
<g>
<title>start_thread (111 samples, 3.04%)</title><rect x="1154.2" y="1171.0" width="35.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1157.2" y="1182.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (111 samples, 3.04%)</title><rect x="1154.2" y="1155.0" width="35.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1157.2" y="1166.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (111 samples, 3.04%)</title><rect x="1154.2" y="1139.0" width="35.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.2" y="1150.0">Thr..</text>
</g>
<g>
<title>GangWorker::loop() (86 samples, 2.35%)</title><rect x="1154.2" y="1123.0" width="27.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.2" y="1134.0">G..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (7 samples, 0.19%)</title><rect x="1154.2" y="1107.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.2" y="1118.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (7 samples, 0.19%)</title><rect x="1154.2" y="1091.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.2" y="1102.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (6 samples, 0.16%)</title><rect x="1154.2" y="1075.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.2" y="1086.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.406] (1 samples, 0.03%)</title><rect x="1154.2" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.2" y="1070.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (4 samples, 0.11%)</title><rect x="1154.5" y="1059.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.5" y="1070.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.08%)</title><rect x="1154.8" y="1043.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.8" y="1054.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.08%)</title><rect x="1154.8" y="1027.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.8" y="1038.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.05%)</title><rect x="1155.1" y="1011.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.1" y="1022.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.03%)</title><rect x="1155.8" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.8" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1155.8" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.8" y="1054.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.03%)</title><rect x="1155.8" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.8" y="1038.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.406] (1 samples, 0.03%)</title><rect x="1156.1" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.1" y="1086.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (71 samples, 1.94%)</title><rect x="1156.4" y="1107.0" width="22.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.4" y="1118.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.27%)</title><rect x="1156.4" y="1091.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.4" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.22%)</title><rect x="1156.4" y="1075.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.4" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="1157.7" y="1059.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.7" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.08%)</title><rect x="1157.7" y="1043.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.7" y="1054.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1158.7" y="1059.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.7" y="1070.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.05%)</title><rect x="1159.0" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.0" y="1086.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="1159.0" y="1059.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1162.0" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (52 samples, 1.42%)</title><rect x="1159.7" y="1091.0" width="16.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.7" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (52 samples, 1.42%)</title><rect x="1159.7" y="1075.0" width="16.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.7" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (52 samples, 1.42%)</title><rect x="1159.7" y="1059.0" width="16.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.7" y="1070.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (52 samples, 1.42%)</title><rect x="1159.7" y="1043.0" width="16.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.7" y="1054.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (51 samples, 1.40%)</title><rect x="1159.7" y="1027.0" width="16.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.7" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (32 samples, 0.88%)</title><rect x="1159.7" y="1011.0" width="10.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.7" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (20 samples, 0.55%)</title><rect x="1162.6" y="995.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.6" y="1006.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.22%)</title><rect x="1166.4" y="979.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.4" y="990.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.08%)</title><rect x="1169.0" y="995.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1172.0" y="1006.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (19 samples, 0.52%)</title><rect x="1170.0" y="1011.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.0" y="1022.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (16 samples, 0.44%)</title><rect x="1170.0" y="995.0" width="5.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.0" y="1006.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (4 samples, 0.11%)</title><rect x="1172.2" y="979.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.2" y="990.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.05%)</title><rect x="1172.2" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.2" y="974.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (1 samples, 0.03%)</title><rect x="1172.6" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.6" y="958.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.05%)</title><rect x="1172.9" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.9" y="974.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (1 samples, 0.03%)</title><rect x="1173.5" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.5" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.05%)</title><rect x="1173.9" y="979.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.9" y="990.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1174.5" y="979.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.5" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1174.5" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.5" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1174.8" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.8" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1174.8" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.8" y="974.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.03%)</title><rect x="1175.1" y="995.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.1" y="1006.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.05%)</title><rect x="1175.5" y="995.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.5" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1176.1" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.1" y="1038.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1176.1" y="1011.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1179.1" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.11%)</title><rect x="1176.4" y="1091.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.4" y="1102.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.11%)</title><rect x="1176.4" y="1075.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.4" y="1086.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.11%)</title><rect x="1176.4" y="1059.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.4" y="1070.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.11%)</title><rect x="1176.4" y="1043.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.4" y="1054.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (4 samples, 0.11%)</title><rect x="1176.4" y="1027.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.4" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.11%)</title><rect x="1176.4" y="1011.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="1176.8" y="995.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.8" y="1006.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1177.4" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.4" y="990.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.11%)</title><rect x="1177.7" y="1091.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.7" y="1102.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.08%)</title><rect x="1177.7" y="1075.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.7" y="1086.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.03%)</title><rect x="1177.7" y="1059.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.7" y="1070.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.05%)</title><rect x="1178.1" y="1059.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.1" y="1070.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.05%)</title><rect x="1178.1" y="1043.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.1" y="1054.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1178.1" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.1" y="1038.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="1178.1" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.1" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="1178.1" y="995.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.1" y="1006.0"></text>
</g>
<g>
<title>metadata_Relocation::unpack_data() (1 samples, 0.03%)</title><rect x="1178.4" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.4" y="1038.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.03%)</title><rect x="1178.7" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.7" y="1086.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="1179.0" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.0" y="1102.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.03%)</title><rect x="1179.0" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.0" y="1086.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (4 samples, 0.11%)</title><rect x="1179.3" y="1107.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.3" y="1118.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (4 samples, 0.11%)</title><rect x="1179.3" y="1091.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.3" y="1102.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.08%)</title><rect x="1179.3" y="1075.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.3" y="1086.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (1 samples, 0.03%)</title><rect x="1179.7" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.7" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1180.0" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.0" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1180.3" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="1086.0"></text>
</g>
<g>
<title>ParallelCleaningTask::work(unsigned int) (3 samples, 0.08%)</title><rect x="1180.6" y="1107.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.6" y="1118.0"></text>
</g>
<g>
<title>nmethod::do_unloading(bool) (3 samples, 0.08%)</title><rect x="1180.6" y="1091.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.6" y="1102.0"></text>
</g>
<g>
<title>CompiledMethod::unload_nmethod_caches(bool) (3 samples, 0.08%)</title><rect x="1180.6" y="1075.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.6" y="1086.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (3 samples, 0.08%)</title><rect x="1180.6" y="1059.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.6" y="1070.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(RelocIterator*) (1 samples, 0.03%)</title><rect x="1181.0" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="1054.0"></text>
</g>
<g>
<title>nmethod::call_wrapper_at(unsigned char*) const (1 samples, 0.03%)</title><rect x="1181.0" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.0" y="1038.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1181.0" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.0" y="1022.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1181.3" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.3" y="1054.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="1181.3" y="1027.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1184.3" y="1038.0"></text>
</g>
<g>
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (1 samples, 0.03%)</title><rect x="1181.6" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.6" y="1118.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (24 samples, 0.66%)</title><rect x="1181.9" y="1123.0" width="7.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.9" y="1134.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (24 samples, 0.66%)</title><rect x="1181.9" y="1107.0" width="7.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (24 samples, 0.66%)</title><rect x="1181.9" y="1091.0" width="7.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.9" y="1102.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (22 samples, 0.60%)</title><rect x="1181.9" y="1075.0" width="7.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.9" y="1086.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (22 samples, 0.60%)</title><rect x="1181.9" y="1059.0" width="7.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="1070.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 0.36%)</title><rect x="1181.9" y="1043.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.9" y="1054.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="1181.9" y="1027.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.9" y="1038.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.03%)</title><rect x="1181.9" y="1011.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.9" y="1022.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.03%)</title><rect x="1181.9" y="995.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.9" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.05%)</title><rect x="1182.3" y="1027.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.3" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.05%)</title><rect x="1182.3" y="1011.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.3" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (1 samples, 0.03%)</title><rect x="1182.3" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.3" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.03%)</title><rect x="1182.6" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.6" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 0.27%)</title><rect x="1182.9" y="1027.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.9" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.08%)</title><rect x="1182.9" y="1011.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.9" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.05%)</title><rect x="1182.9" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.9" y="1006.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (2 samples, 0.05%)</title><rect x="1182.9" y="979.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.9" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.03%)</title><rect x="1183.5" y="995.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.5" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1183.5" y="979.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.5" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.05%)</title><rect x="1183.9" y="1011.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.9" y="1022.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.03%)</title><rect x="1184.2" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.2" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.03%)</title><rect x="1184.5" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.5" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.03%)</title><rect x="1184.5" y="995.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.5" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.03%)</title><rect x="1184.8" y="1011.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.8" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="1185.2" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.2" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.03%)</title><rect x="1185.2" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="1006.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.03%)</title><rect x="1185.5" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="1022.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.03%)</title><rect x="1185.5" y="995.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="1006.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.03%)</title><rect x="1185.5" y="979.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.5" y="990.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.03%)</title><rect x="1185.8" y="1011.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1188.8" y="1022.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.11%)</title><rect x="1186.1" y="1043.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="1054.0"></text>
</g>
<g>
<title>Compile::optimize_loops(PhaseIterGVN&amp;, LoopOptsMode) [clone .part.338] (3 samples, 0.08%)</title><rect x="1186.1" y="1027.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.1" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.08%)</title><rect x="1186.1" y="1011.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.1" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.03%)</title><rect x="1186.1" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1186.4" y="995.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.4" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1186.4" y="979.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1186.8" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (1 samples, 0.03%)</title><rect x="1186.8" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.03%)</title><rect x="1187.1" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.03%)</title><rect x="1187.1" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="1022.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.03%)</title><rect x="1187.4" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="1054.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.03%)</title><rect x="1187.4" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="1038.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1187.4" y="1011.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.11%)</title><rect x="1187.7" y="1043.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.11%)</title><rect x="1187.7" y="1027.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.11%)</title><rect x="1187.7" y="1011.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.11%)</title><rect x="1187.7" y="995.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.11%)</title><rect x="1187.7" y="979.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.11%)</title><rect x="1187.7" y="963.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.08%)</title><rect x="1187.7" y="947.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.08%)</title><rect x="1187.7" y="931.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.08%)</title><rect x="1187.7" y="915.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.08%)</title><rect x="1187.7" y="899.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.08%)</title><rect x="1187.7" y="883.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.08%)</title><rect x="1187.7" y="867.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.08%)</title><rect x="1187.7" y="851.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.08%)</title><rect x="1187.7" y="835.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.08%)</title><rect x="1187.7" y="819.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.08%)</title><rect x="1187.7" y="803.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.08%)</title><rect x="1187.7" y="787.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1187.7" y="771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1187.7" y="755.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1187.7" y="739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1187.7" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1187.7" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1187.7" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1187.7" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1187.7" y="659.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1187.7" y="643.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1187.7" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1187.7" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1187.7" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1187.7" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1187.7" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.7" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1187.7" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1187.7" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1187.7" y="515.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1187.7" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1187.7" y="483.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1187.7" y="467.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1187.7" y="451.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1187.7" y="435.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1187.7" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1187.7" y="403.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1187.7" y="387.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1187.7" y="371.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1187.7" y="355.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1187.7" y="339.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1187.7" y="323.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1187.7" y="307.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1187.7" y="291.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="302.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1187.7" y="275.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="286.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1187.7" y="259.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="270.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1187.7" y="243.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1187.7" y="227.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="238.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1187.7" y="211.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="222.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1187.7" y="195.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1187.7" y="179.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="190.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1187.7" y="163.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="174.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_new(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1187.7" y="147.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="158.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.03%)</title><rect x="1187.7" y="131.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="142.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1187.7" y="115.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="126.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1187.7" y="99.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="110.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1187.7" y="83.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="94.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.03%)</title><rect x="1187.7" y="67.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="78.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1187.7" y="51.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="62.0"></text>
</g>
<g>
<title>ciMethod::method_data() (1 samples, 0.03%)</title><rect x="1188.1" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>MethodData::mileage_of(Method*) (1 samples, 0.03%)</title><rect x="1188.1" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1188.4" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="782.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.03%)</title><rect x="1188.4" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.4" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.7" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.7" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.7" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.7" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.7" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.7" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.7" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.7" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.7" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.7" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.7" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.7" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.7" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.7" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.7" y="723.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.7" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.7" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.7" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.7" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1188.7" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1188.7" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1188.7" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1188.7" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1188.7" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1188.7" y="563.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.03%)</title><rect x="1188.7" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.03%)</title><rect x="1188.7" y="531.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.03%)</title><rect x="1188.7" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.05%)</title><rect x="1189.0" y="1075.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.0" y="1086.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.05%)</title><rect x="1189.0" y="1059.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.0" y="1070.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.05%)</title><rect x="1189.0" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.0" y="1054.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.05%)</title><rect x="1189.0" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="1038.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.03%)</title><rect x="1189.0" y="1011.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.0" y="1022.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.03%)</title><rect x="1189.0" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.0" y="1006.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.03%)</title><rect x="1189.0" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.0" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.03%)</title><rect x="1189.0" y="963.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.0" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1189.0" y="947.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1189.0" y="931.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.0" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1189.0" y="915.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.0" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1189.0" y="899.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.0" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1189.0" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1189.0" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1189.0" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1189.0" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1189.0" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1189.0" y="803.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1189.0" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.03%)</title><rect x="1189.0" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.0" y="782.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method_or_null(LinkInfo const&amp;) (1 samples, 0.03%)</title><rect x="1189.0" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.0" y="766.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.03%)</title><rect x="1189.0" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="750.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.03%)</title><rect x="1189.0" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="1189.0" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.0" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.303] (1 samples, 0.03%)</title><rect x="1189.0" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.0" y="702.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.03%)</title><rect x="1189.4" y="1011.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.03%)</title><rect x="1189.4" y="995.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>LIR_OpLock::emit_code(LIR_Assembler*) (1 samples, 0.03%)</title><rect x="1189.4" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lock(LIR_OpLock*) (1 samples, 0.03%)</title><rect x="1189.4" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>MacroAssembler::verify_oop(RegisterImpl*, char const*) (1 samples, 0.03%)</title><rect x="1189.4" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="1189.7" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="1134.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="1189.7" y="1107.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.7" y="1118.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (1 samples, 0.03%)</title><rect x="1189.7" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.7" y="1102.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1189.7" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.7" y="1086.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="1189.7" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1189.7" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.7" y="1054.0"></text>
</g>
<g>
<title>G1ConcurrentRefine::adjust(double, unsigned long, double) (1 samples, 0.03%)</title><rect x="1189.7" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="1038.0"></text>
</g>
</g>
</svg>
