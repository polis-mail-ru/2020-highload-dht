<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (86,323 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (59,224 samples, 68.61%)</title><rect x="10.0" y="899.0" width="809.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (59,224 samples, 68.61%)</title><rect x="10.0" y="883.0" width="809.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (59,224 samples, 68.61%)</title><rect x="10.0" y="867.0" width="809.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (34,025 samples, 39.42%)</title><rect x="10.0" y="851.0" width="465.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,029 samples, 22.04%)</title><rect x="10.0" y="835.0" width="260.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (18,779 samples, 21.75%)</title><rect x="10.0" y="819.0" width="256.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/229988659.apply (18,779 samples, 21.75%)</title><rect x="10.0" y="803.0" width="256.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="814.0">jdk/internal/net/http/MultiExchang..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (18,779 samples, 21.75%)</title><rect x="10.0" y="787.0" width="256.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="798.0">jdk/internal/net/http/MultiExchang..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (18,779 samples, 21.75%)</title><rect x="10.0" y="771.0" width="256.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="782.0">jdk/internal/net/http/MultiExchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (13,024 samples, 15.09%)</title><rect x="10.0" y="755.0" width="178.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (13,024 samples, 15.09%)</title><rect x="10.0" y="739.0" width="178.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (13,024 samples, 15.09%)</title><rect x="10.0" y="723.0" width="178.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11,763 samples, 13.63%)</title><rect x="10.0" y="707.0" width="160.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11,763 samples, 13.63%)</title><rect x="10.0" y="691.0" width="160.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11,763 samples, 13.63%)</title><rect x="10.0" y="675.0" width="160.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$363/830633842.apply (11,763 samples, 13.63%)</title><rect x="10.0" y="659.0" width="160.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="670.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (11,763 samples, 13.63%)</title><rect x="10.0" y="643.0" width="160.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="654.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (11,763 samples, 13.63%)</title><rect x="10.0" y="627.0" width="160.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$272/413543393.apply (11,763 samples, 13.63%)</title><rect x="10.0" y="611.0" width="160.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (11,763 samples, 13.63%)</title><rect x="10.0" y="595.0" width="160.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (11,763 samples, 13.63%)</title><rect x="10.0" y="579.0" width="160.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11,763 samples, 13.63%)</title><rect x="10.0" y="563.0" width="160.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11,763 samples, 13.63%)</title><rect x="10.0" y="547.0" width="160.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$406/1484817975.apply (11,763 samples, 13.63%)</title><rect x="10.0" y="531.0" width="160.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (11,763 samples, 13.63%)</title><rect x="10.0" y="515.0" width="160.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="526.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (11,763 samples, 13.63%)</title><rect x="10.0" y="499.0" width="160.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11,763 samples, 13.63%)</title><rect x="10.0" y="483.0" width="160.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2,102 samples, 2.44%)</title><rect x="10.0" y="467.0" width="28.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,102 samples, 2.44%)</title><rect x="10.0" y="451.0" width="28.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,102 samples, 2.44%)</title><rect x="10.0" y="435.0" width="28.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,102 samples, 2.44%)</title><rect x="10.0" y="419.0" width="28.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,102 samples, 2.44%)</title><rect x="10.0" y="403.0" width="28.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="414.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,115 samples, 1.29%)</title><rect x="10.0" y="387.0" width="15.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (987 samples, 1.14%)</title><rect x="25.2" y="387.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (987 samples, 1.14%)</title><rect x="25.2" y="371.0" width="13.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="28.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9,661 samples, 11.19%)</title><rect x="38.7" y="467.0" width="132.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.7" y="478.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9,661 samples, 11.19%)</title><rect x="38.7" y="451.0" width="132.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.7" y="462.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (9,661 samples, 11.19%)</title><rect x="38.7" y="435.0" width="132.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.7" y="446.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9,661 samples, 11.19%)</title><rect x="38.7" y="419.0" width="132.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.7" y="430.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9,661 samples, 11.19%)</title><rect x="38.7" y="403.0" width="132.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.7" y="414.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (7,347 samples, 8.51%)</title><rect x="38.7" y="387.0" width="100.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="41.7" y="398.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,314 samples, 2.68%)</title><rect x="139.2" y="387.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.2" y="398.0">su..</text>
</g>
<g>
<title>java.lang.Object (2,314 samples, 2.68%)</title><rect x="139.2" y="371.0" width="31.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="142.2" y="382.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,261 samples, 1.46%)</title><rect x="170.8" y="707.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,261 samples, 1.46%)</title><rect x="170.8" y="691.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,261 samples, 1.46%)</title><rect x="170.8" y="675.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,261 samples, 1.46%)</title><rect x="170.8" y="659.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,261 samples, 1.46%)</title><rect x="170.8" y="643.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,261 samples, 1.46%)</title><rect x="170.8" y="627.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,261 samples, 1.46%)</title><rect x="170.8" y="611.0" width="17.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="173.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (5,742 samples, 6.65%)</title><rect x="188.0" y="755.0" width="78.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.0" y="766.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,397 samples, 3.94%)</title><rect x="188.0" y="739.0" width="46.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="191.0" y="750.0">jdk...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2,345 samples, 2.72%)</title><rect x="234.5" y="739.0" width="32.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.5" y="750.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,345 samples, 2.72%)</title><rect x="234.5" y="723.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.5" y="734.0">su..</text>
</g>
<g>
<title>java.lang.Object (2,345 samples, 2.72%)</title><rect x="234.5" y="707.0" width="32.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="237.5" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (250 samples, 0.29%)</title><rect x="266.7" y="819.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (250 samples, 0.29%)</title><rect x="266.7" y="803.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (250 samples, 0.29%)</title><rect x="266.7" y="787.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (250 samples, 0.29%)</title><rect x="266.7" y="771.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (250 samples, 0.29%)</title><rect x="266.7" y="755.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (250 samples, 0.29%)</title><rect x="266.7" y="739.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (250 samples, 0.29%)</title><rect x="266.7" y="723.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (250 samples, 0.29%)</title><rect x="266.7" y="707.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (250 samples, 0.29%)</title><rect x="266.7" y="691.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (250 samples, 0.29%)</title><rect x="266.7" y="675.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (250 samples, 0.29%)</title><rect x="266.7" y="659.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.7" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (250 samples, 0.29%)</title><rect x="266.7" y="643.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="269.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$589/1998514835.get (14,996 samples, 17.37%)</title><rect x="270.1" y="835.0" width="205.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.1" y="846.0">ru/mail/polis/service/zvlad..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localGet$1 (14,996 samples, 17.37%)</title><rect x="270.1" y="819.0" width="205.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.1" y="830.0">ru/mail/polis/service/zvlad..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (14,996 samples, 17.37%)</title><rect x="270.1" y="803.0" width="205.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.1" y="814.0">ru/mail/polis/dao/DAO.getVa..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (728 samples, 0.84%)</title><rect x="270.1" y="787.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (728 samples, 0.84%)</title><rect x="270.1" y="771.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.1" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (728 samples, 0.84%)</title><rect x="270.1" y="755.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.1" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (728 samples, 0.84%)</title><rect x="270.1" y="739.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.1" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (728 samples, 0.84%)</title><rect x="270.1" y="723.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (728 samples, 0.84%)</title><rect x="270.1" y="707.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (728 samples, 0.84%)</title><rect x="270.1" y="691.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (728 samples, 0.84%)</title><rect x="270.1" y="675.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (728 samples, 0.84%)</title><rect x="270.1" y="659.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (728 samples, 0.84%)</title><rect x="270.1" y="643.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (728 samples, 0.84%)</title><rect x="270.1" y="627.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (728 samples, 0.84%)</title><rect x="270.1" y="611.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (291 samples, 0.34%)</title><rect x="270.1" y="595.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (89 samples, 0.10%)</title><rect x="270.1" y="579.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (89 samples, 0.10%)</title><rect x="270.1" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (89 samples, 0.10%)</title><rect x="270.1" y="547.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (79 samples, 0.09%)</title><rect x="270.3" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.3" y="542.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (79 samples, 0.09%)</title><rect x="270.3" y="515.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="273.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (202 samples, 0.23%)</title><rect x="271.3" y="579.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (202 samples, 0.23%)</title><rect x="271.3" y="563.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (186 samples, 0.22%)</title><rect x="271.6" y="547.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.6" y="558.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (186 samples, 0.22%)</title><rect x="271.6" y="531.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="274.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (149 samples, 0.17%)</title><rect x="274.1" y="595.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (149 samples, 0.17%)</title><rect x="274.1" y="579.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (149 samples, 0.17%)</title><rect x="274.1" y="563.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (44 samples, 0.05%)</title><rect x="274.1" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.1" y="558.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (44 samples, 0.05%)</title><rect x="274.1" y="531.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="277.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (105 samples, 0.12%)</title><rect x="274.7" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.7" y="558.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (105 samples, 0.12%)</title><rect x="274.7" y="531.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="277.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (288 samples, 0.33%)</title><rect x="276.1" y="595.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (288 samples, 0.33%)</title><rect x="276.1" y="579.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (26 samples, 0.03%)</title><rect x="276.1" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.1" y="574.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (26 samples, 0.03%)</title><rect x="276.1" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="279.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (262 samples, 0.30%)</title><rect x="276.5" y="563.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.5" y="574.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (262 samples, 0.30%)</title><rect x="276.5" y="547.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="279.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.cellIterator (14,268 samples, 16.53%)</title><rect x="280.1" y="787.0" width="195.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.1" y="798.0">ru/mail/polis/dao/zvladn7..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,268 samples, 16.53%)</title><rect x="280.1" y="771.0" width="195.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.1" y="782.0">ru/mail/polis/dao/zvladn7..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,680 samples, 1.95%)</title><rect x="280.1" y="755.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.1" y="766.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,680 samples, 1.95%)</title><rect x="280.1" y="739.0" width="22.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.1" y="750.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,680 samples, 1.95%)</title><rect x="280.1" y="723.0" width="22.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.1" y="734.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,680 samples, 1.95%)</title><rect x="280.1" y="707.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.1" y="718.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,680 samples, 1.95%)</title><rect x="280.1" y="691.0" width="22.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.1" y="702.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,680 samples, 1.95%)</title><rect x="280.1" y="675.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.1" y="686.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,680 samples, 1.95%)</title><rect x="280.1" y="659.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.1" y="670.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,680 samples, 1.95%)</title><rect x="280.1" y="643.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.1" y="654.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,680 samples, 1.95%)</title><rect x="280.1" y="627.0" width="22.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.1" y="638.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,680 samples, 1.95%)</title><rect x="280.1" y="611.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.1" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,680 samples, 1.95%)</title><rect x="280.1" y="595.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.1" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,680 samples, 1.95%)</title><rect x="280.1" y="579.0" width="22.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.1" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (654 samples, 0.76%)</title><rect x="280.1" y="563.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (243 samples, 0.28%)</title><rect x="280.1" y="547.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (243 samples, 0.28%)</title><rect x="280.1" y="531.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (243 samples, 0.28%)</title><rect x="280.1" y="515.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (43 samples, 0.05%)</title><rect x="280.1" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.1" y="510.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (43 samples, 0.05%)</title><rect x="280.1" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="283.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (200 samples, 0.23%)</title><rect x="280.7" y="499.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.7" y="510.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (200 samples, 0.23%)</title><rect x="280.7" y="483.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="283.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (411 samples, 0.48%)</title><rect x="283.4" y="547.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (411 samples, 0.48%)</title><rect x="283.4" y="531.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (53 samples, 0.06%)</title><rect x="283.4" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.4" y="526.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (53 samples, 0.06%)</title><rect x="283.4" y="499.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="286.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (358 samples, 0.41%)</title><rect x="284.1" y="515.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.1" y="526.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (358 samples, 0.41%)</title><rect x="284.1" y="499.0" width="4.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="287.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (434 samples, 0.50%)</title><rect x="289.0" y="563.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (434 samples, 0.50%)</title><rect x="289.0" y="547.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (434 samples, 0.50%)</title><rect x="289.0" y="531.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (340 samples, 0.39%)</title><rect x="289.0" y="515.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="292.0" y="526.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (340 samples, 0.39%)</title><rect x="289.0" y="499.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="292.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (94 samples, 0.11%)</title><rect x="293.7" y="515.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.7" y="526.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (94 samples, 0.11%)</title><rect x="293.7" y="499.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="296.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (592 samples, 0.69%)</title><rect x="294.9" y="563.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (592 samples, 0.69%)</title><rect x="294.9" y="547.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (62 samples, 0.07%)</title><rect x="294.9" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.9" y="542.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (62 samples, 0.07%)</title><rect x="294.9" y="515.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="297.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (530 samples, 0.61%)</title><rect x="295.8" y="531.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.8" y="542.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (530 samples, 0.61%)</title><rect x="295.8" y="515.0" width="7.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="298.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (851 samples, 0.99%)</title><rect x="303.0" y="755.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (851 samples, 0.99%)</title><rect x="303.0" y="739.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (851 samples, 0.99%)</title><rect x="303.0" y="723.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.0" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (851 samples, 0.99%)</title><rect x="303.0" y="707.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (851 samples, 0.99%)</title><rect x="303.0" y="691.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (851 samples, 0.99%)</title><rect x="303.0" y="675.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (851 samples, 0.99%)</title><rect x="303.0" y="659.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (851 samples, 0.99%)</title><rect x="303.0" y="643.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (851 samples, 0.99%)</title><rect x="303.0" y="627.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (851 samples, 0.99%)</title><rect x="303.0" y="611.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (851 samples, 0.99%)</title><rect x="303.0" y="595.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (851 samples, 0.99%)</title><rect x="303.0" y="579.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (851 samples, 0.99%)</title><rect x="303.0" y="563.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (335 samples, 0.39%)</title><rect x="303.0" y="547.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (103 samples, 0.12%)</title><rect x="303.0" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (103 samples, 0.12%)</title><rect x="303.0" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (103 samples, 0.12%)</title><rect x="303.0" y="499.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (87 samples, 0.10%)</title><rect x="303.3" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.3" y="494.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (87 samples, 0.10%)</title><rect x="303.3" y="467.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="306.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (232 samples, 0.27%)</title><rect x="304.4" y="531.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (232 samples, 0.27%)</title><rect x="304.4" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (28 samples, 0.03%)</title><rect x="304.4" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.4" y="510.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (28 samples, 0.03%)</title><rect x="304.4" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="307.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (204 samples, 0.24%)</title><rect x="304.8" y="499.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.8" y="510.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (204 samples, 0.24%)</title><rect x="304.8" y="483.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="307.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (189 samples, 0.22%)</title><rect x="307.6" y="547.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (189 samples, 0.22%)</title><rect x="307.6" y="531.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (189 samples, 0.22%)</title><rect x="307.6" y="515.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (71 samples, 0.08%)</title><rect x="307.6" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.6" y="510.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (71 samples, 0.08%)</title><rect x="307.6" y="483.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="310.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (118 samples, 0.14%)</title><rect x="308.6" y="499.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.6" y="510.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (118 samples, 0.14%)</title><rect x="308.6" y="483.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="311.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (327 samples, 0.38%)</title><rect x="310.2" y="547.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (327 samples, 0.38%)</title><rect x="310.2" y="531.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.04%)</title><rect x="310.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.2" y="526.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (31 samples, 0.04%)</title><rect x="310.2" y="499.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="313.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (296 samples, 0.34%)</title><rect x="310.6" y="515.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.6" y="526.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (296 samples, 0.34%)</title><rect x="310.6" y="499.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="313.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,737 samples, 13.60%)</title><rect x="314.7" y="755.0" width="160.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.7" y="766.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,737 samples, 13.60%)</title><rect x="314.7" y="739.0" width="160.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.7" y="750.0">java/lang/Iterable.f..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$598/122839888.accept (11,737 samples, 13.60%)</title><rect x="314.7" y="723.0" width="160.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.7" y="734.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,737 samples, 13.60%)</title><rect x="314.7" y="707.0" width="160.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.7" y="718.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,737 samples, 13.60%)</title><rect x="314.7" y="691.0" width="160.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.7" y="702.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,737 samples, 13.60%)</title><rect x="314.7" y="675.0" width="160.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.7" y="686.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,737 samples, 13.60%)</title><rect x="314.7" y="659.0" width="160.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.7" y="670.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,737 samples, 13.60%)</title><rect x="314.7" y="643.0" width="160.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.7" y="654.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (4,281 samples, 4.96%)</title><rect x="314.7" y="627.0" width="58.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.7" y="638.0">ru/mai..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4,281 samples, 4.96%)</title><rect x="314.7" y="611.0" width="58.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.7" y="622.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4,281 samples, 4.96%)</title><rect x="314.7" y="595.0" width="58.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.7" y="606.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1,099 samples, 1.27%)</title><rect x="314.7" y="579.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.7" y="590.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,099 samples, 1.27%)</title><rect x="314.7" y="563.0" width="15.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="317.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3,182 samples, 3.69%)</title><rect x="329.7" y="579.0" width="43.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.7" y="590.0">sun/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (3,182 samples, 3.69%)</title><rect x="329.7" y="563.0" width="43.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="332.7" y="574.0">sun...</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7,456 samples, 8.64%)</title><rect x="373.2" y="627.0" width="101.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.2" y="638.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7,456 samples, 8.64%)</title><rect x="373.2" y="611.0" width="101.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.2" y="622.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (920 samples, 1.07%)</title><rect x="373.2" y="595.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.2" y="606.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (920 samples, 1.07%)</title><rect x="373.2" y="579.0" width="12.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="376.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (6,536 samples, 7.57%)</title><rect x="385.8" y="595.0" width="89.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.8" y="606.0">sun/nio/ch..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (6,536 samples, 7.57%)</title><rect x="385.8" y="579.0" width="89.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="388.8" y="590.0">sun.nio.ch..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (121 samples, 0.14%)</title><rect x="475.1" y="851.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (121 samples, 0.14%)</title><rect x="475.1" y="835.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (121 samples, 0.14%)</title><rect x="475.1" y="819.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$252/969607766.accept (120 samples, 0.14%)</title><rect x="475.1" y="803.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (120 samples, 0.14%)</title><rect x="475.1" y="787.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (119 samples, 0.14%)</title><rect x="475.1" y="771.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (119 samples, 0.14%)</title><rect x="475.1" y="755.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (119 samples, 0.14%)</title><rect x="475.1" y="739.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (119 samples, 0.14%)</title><rect x="475.1" y="723.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (119 samples, 0.14%)</title><rect x="475.1" y="707.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (119 samples, 0.14%)</title><rect x="475.1" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (119 samples, 0.14%)</title><rect x="475.1" y="675.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (119 samples, 0.14%)</title><rect x="475.1" y="659.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (119 samples, 0.14%)</title><rect x="475.1" y="643.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (119 samples, 0.14%)</title><rect x="475.1" y="627.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (119 samples, 0.14%)</title><rect x="475.1" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (119 samples, 0.14%)</title><rect x="475.1" y="595.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (119 samples, 0.14%)</title><rect x="475.1" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (119 samples, 0.14%)</title><rect x="475.1" y="563.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="478.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6,812 samples, 7.89%)</title><rect x="476.8" y="851.0" width="93.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.8" y="862.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,104 samples, 2.44%)</title><rect x="476.8" y="835.0" width="28.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.8" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (726 samples, 0.84%)</title><rect x="476.8" y="819.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (726 samples, 0.84%)</title><rect x="476.8" y="803.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (726 samples, 0.84%)</title><rect x="476.8" y="787.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (726 samples, 0.84%)</title><rect x="476.8" y="771.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (726 samples, 0.84%)</title><rect x="476.8" y="755.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.8" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (726 samples, 0.84%)</title><rect x="476.8" y="739.0" width="9.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="479.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,378 samples, 1.60%)</title><rect x="486.7" y="819.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,378 samples, 1.60%)</title><rect x="486.7" y="803.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,378 samples, 1.60%)</title><rect x="486.7" y="787.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,378 samples, 1.60%)</title><rect x="486.7" y="771.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,378 samples, 1.60%)</title><rect x="486.7" y="755.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,378 samples, 1.60%)</title><rect x="486.7" y="739.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.7" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,378 samples, 1.60%)</title><rect x="486.7" y="723.0" width="18.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="489.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4,708 samples, 5.45%)</title><rect x="505.5" y="835.0" width="64.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.5" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (801 samples, 0.93%)</title><rect x="505.5" y="819.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (801 samples, 0.93%)</title><rect x="505.5" y="803.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (801 samples, 0.93%)</title><rect x="505.5" y="787.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (801 samples, 0.93%)</title><rect x="505.5" y="771.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (801 samples, 0.93%)</title><rect x="505.5" y="755.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.5" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (801 samples, 0.93%)</title><rect x="505.5" y="739.0" width="11.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="508.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3,907 samples, 4.53%)</title><rect x="516.5" y="819.0" width="53.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.5" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3,907 samples, 4.53%)</title><rect x="516.5" y="803.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.5" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3,907 samples, 4.53%)</title><rect x="516.5" y="787.0" width="53.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.5" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3,907 samples, 4.53%)</title><rect x="516.5" y="771.0" width="53.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.5" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3,907 samples, 4.53%)</title><rect x="516.5" y="755.0" width="53.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.5" y="766.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3,907 samples, 4.53%)</title><rect x="516.5" y="739.0" width="53.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="750.0">jdk/i..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (3,907 samples, 4.53%)</title><rect x="516.5" y="723.0" width="53.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="519.5" y="734.0">java...</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/728377575.run (34 samples, 0.04%)</title><rect x="569.9" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (34 samples, 0.04%)</title><rect x="569.9" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (34 samples, 0.04%)</title><rect x="569.9" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (34 samples, 0.04%)</title><rect x="569.9" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.04%)</title><rect x="569.9" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.04%)</title><rect x="569.9" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 0.04%)</title><rect x="569.9" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (34 samples, 0.04%)</title><rect x="569.9" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (34 samples, 0.04%)</title><rect x="569.9" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (34 samples, 0.04%)</title><rect x="569.9" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (34 samples, 0.04%)</title><rect x="569.9" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (34 samples, 0.04%)</title><rect x="569.9" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (34 samples, 0.04%)</title><rect x="569.9" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 0.04%)</title><rect x="569.9" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (34 samples, 0.04%)</title><rect x="569.9" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.04%)</title><rect x="569.9" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (32 samples, 0.04%)</title><rect x="569.9" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$233/1134134668.apply (32 samples, 0.04%)</title><rect x="569.9" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (32 samples, 0.04%)</title><rect x="569.9" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (32 samples, 0.04%)</title><rect x="569.9" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (32 samples, 0.04%)</title><rect x="569.9" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (32 samples, 0.04%)</title><rect x="569.9" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32 samples, 0.04%)</title><rect x="569.9" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$512/1399809376.run (32 samples, 0.04%)</title><rect x="569.9" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (32 samples, 0.04%)</title><rect x="569.9" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (32 samples, 0.04%)</title><rect x="569.9" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.04%)</title><rect x="569.9" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.04%)</title><rect x="569.9" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (32 samples, 0.04%)</title><rect x="569.9" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (32 samples, 0.04%)</title><rect x="569.9" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (32 samples, 0.04%)</title><rect x="569.9" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/1972380626.run (32 samples, 0.04%)</title><rect x="569.9" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (32 samples, 0.04%)</title><rect x="569.9" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (32 samples, 0.04%)</title><rect x="569.9" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (32 samples, 0.04%)</title><rect x="569.9" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (32 samples, 0.04%)</title><rect x="569.9" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (32 samples, 0.04%)</title><rect x="569.9" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (32 samples, 0.04%)</title><rect x="569.9" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (32 samples, 0.04%)</title><rect x="569.9" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$518/152025560.run (32 samples, 0.04%)</title><rect x="569.9" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (32 samples, 0.04%)</title><rect x="569.9" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (32 samples, 0.04%)</title><rect x="569.9" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (32 samples, 0.04%)</title><rect x="569.9" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (32 samples, 0.04%)</title><rect x="569.9" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (26 samples, 0.03%)</title><rect x="570.0" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (26 samples, 0.03%)</title><rect x="570.0" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (22 samples, 0.03%)</title><rect x="570.0" y="115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (22 samples, 0.03%)</title><rect x="570.0" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (22 samples, 0.03%)</title><rect x="570.0" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (22 samples, 0.03%)</title><rect x="570.0" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (22 samples, 0.03%)</title><rect x="570.0" y="51.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.0" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (21 samples, 0.02%)</title><rect x="570.0" y="35.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="573.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17,741 samples, 20.55%)</title><rect x="570.3" y="851.0" width="242.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.3" y="862.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (17,741 samples, 20.55%)</title><rect x="570.3" y="835.0" width="242.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.3" y="846.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9,753 samples, 11.30%)</title><rect x="570.3" y="819.0" width="133.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.3" y="830.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/1972380626.run (9,753 samples, 11.30%)</title><rect x="570.3" y="803.0" width="133.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.3" y="814.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9,753 samples, 11.30%)</title><rect x="570.3" y="787.0" width="133.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.3" y="798.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (8,466 samples, 9.81%)</title><rect x="570.3" y="771.0" width="115.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.3" y="782.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (8,466 samples, 9.81%)</title><rect x="570.3" y="755.0" width="115.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.3" y="766.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8,466 samples, 9.81%)</title><rect x="570.3" y="739.0" width="115.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.3" y="750.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8,466 samples, 9.81%)</title><rect x="570.3" y="723.0" width="115.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.3" y="734.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8,466 samples, 9.81%)</title><rect x="570.3" y="707.0" width="115.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.3" y="718.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8,466 samples, 9.81%)</title><rect x="570.3" y="691.0" width="115.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.3" y="702.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8,466 samples, 9.81%)</title><rect x="570.3" y="675.0" width="115.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.3" y="686.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (8,466 samples, 9.81%)</title><rect x="570.3" y="659.0" width="115.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.3" y="670.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8,466 samples, 9.81%)</title><rect x="570.3" y="643.0" width="115.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.3" y="654.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (7,577 samples, 8.78%)</title><rect x="570.3" y="627.0" width="103.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="573.3" y="638.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (889 samples, 1.03%)</title><rect x="673.9" y="627.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.9" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (889 samples, 1.03%)</title><rect x="673.9" y="611.0" width="12.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="676.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,287 samples, 1.49%)</title><rect x="686.1" y="771.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,287 samples, 1.49%)</title><rect x="686.1" y="755.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,287 samples, 1.49%)</title><rect x="686.1" y="739.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,287 samples, 1.49%)</title><rect x="686.1" y="723.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,287 samples, 1.49%)</title><rect x="686.1" y="707.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,287 samples, 1.49%)</title><rect x="686.1" y="691.0" width="17.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,287 samples, 1.49%)</title><rect x="686.1" y="675.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,287 samples, 1.49%)</title><rect x="686.1" y="659.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,287 samples, 1.49%)</title><rect x="686.1" y="643.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,287 samples, 1.49%)</title><rect x="686.1" y="627.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,287 samples, 1.49%)</title><rect x="686.1" y="611.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,287 samples, 1.49%)</title><rect x="686.1" y="595.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,287 samples, 1.49%)</title><rect x="686.1" y="579.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,274 samples, 1.48%)</title><rect x="686.2" y="563.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,274 samples, 1.48%)</title><rect x="686.2" y="547.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$419/2116255026.apply (1,274 samples, 1.48%)</title><rect x="686.2" y="531.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,274 samples, 1.48%)</title><rect x="686.2" y="515.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1,274 samples, 1.48%)</title><rect x="686.2" y="499.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1,274 samples, 1.48%)</title><rect x="686.2" y="483.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,274 samples, 1.48%)</title><rect x="686.2" y="467.0" width="17.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="689.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,988 samples, 9.25%)</title><rect x="703.7" y="819.0" width="109.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.7" y="830.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,988 samples, 9.25%)</title><rect x="703.7" y="803.0" width="109.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.7" y="814.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,988 samples, 9.25%)</title><rect x="703.7" y="787.0" width="109.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.7" y="798.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/1972380626.run (7,988 samples, 9.25%)</title><rect x="703.7" y="771.0" width="109.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.7" y="782.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,988 samples, 9.25%)</title><rect x="703.7" y="755.0" width="109.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.7" y="766.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (7,981 samples, 9.25%)</title><rect x="703.7" y="739.0" width="109.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.7" y="750.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7,981 samples, 9.25%)</title><rect x="703.7" y="723.0" width="109.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.7" y="734.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7,981 samples, 9.25%)</title><rect x="703.7" y="707.0" width="109.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.7" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7,981 samples, 9.25%)</title><rect x="703.7" y="691.0" width="109.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.7" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7,981 samples, 9.25%)</title><rect x="703.7" y="675.0" width="109.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.7" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7,981 samples, 9.25%)</title><rect x="703.7" y="659.0" width="109.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.7" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$518/152025560.run (7,981 samples, 9.25%)</title><rect x="703.7" y="643.0" width="109.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.7" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7,981 samples, 9.25%)</title><rect x="703.7" y="627.0" width="109.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.7" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7,981 samples, 9.25%)</title><rect x="703.7" y="611.0" width="109.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.7" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,981 samples, 9.25%)</title><rect x="703.7" y="595.0" width="109.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.7" y="606.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,981 samples, 9.25%)</title><rect x="703.7" y="579.0" width="109.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.7" y="590.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,675 samples, 1.94%)</title><rect x="703.7" y="563.0" width="22.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="706.7" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (6,306 samples, 7.31%)</title><rect x="726.6" y="563.0" width="86.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.6" y="574.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6,306 samples, 7.31%)</title><rect x="726.6" y="547.0" width="86.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.6" y="558.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,324 samples, 1.53%)</title><rect x="726.6" y="531.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,324 samples, 1.53%)</title><rect x="726.6" y="515.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,324 samples, 1.53%)</title><rect x="726.6" y="499.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,324 samples, 1.53%)</title><rect x="726.6" y="483.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,324 samples, 1.53%)</title><rect x="726.6" y="467.0" width="18.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (797 samples, 0.92%)</title><rect x="726.6" y="451.0" width="10.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="729.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (527 samples, 0.61%)</title><rect x="737.5" y="451.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (527 samples, 0.61%)</title><rect x="737.5" y="435.0" width="7.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="740.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4,982 samples, 5.77%)</title><rect x="744.7" y="531.0" width="68.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.7" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4,982 samples, 5.77%)</title><rect x="744.7" y="515.0" width="68.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.7" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4,982 samples, 5.77%)</title><rect x="744.7" y="499.0" width="68.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.7" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,982 samples, 5.77%)</title><rect x="744.7" y="483.0" width="68.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.7" y="494.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,982 samples, 5.77%)</title><rect x="744.7" y="467.0" width="68.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.7" y="478.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,370 samples, 5.06%)</title><rect x="744.7" y="451.0" width="59.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="747.7" y="462.0">jdk.in..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (612 samples, 0.71%)</title><rect x="804.4" y="451.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (612 samples, 0.71%)</title><rect x="804.4" y="435.0" width="8.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="807.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/1313064354.run (491 samples, 0.57%)</title><rect x="812.9" y="851.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (491 samples, 0.57%)</title><rect x="812.9" y="835.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$575/1802415425.process (490 samples, 0.57%)</title><rect x="812.9" y="819.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$1 (490 samples, 0.57%)</title><rect x="812.9" y="803.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleGet (490 samples, 0.57%)</title><rect x="812.9" y="787.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleGetOrProxy (490 samples, 0.57%)</title><rect x="812.9" y="771.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$579/1917370639.execute (407 samples, 0.47%)</title><rect x="812.9" y="755.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleGet$2 (407 samples, 0.47%)</title><rect x="812.9" y="739.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localGet (407 samples, 0.47%)</title><rect x="812.9" y="723.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (407 samples, 0.47%)</title><rect x="812.9" y="707.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (407 samples, 0.47%)</title><rect x="812.9" y="691.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (407 samples, 0.47%)</title><rect x="812.9" y="675.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (407 samples, 0.47%)</title><rect x="812.9" y="659.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (407 samples, 0.47%)</title><rect x="812.9" y="643.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (407 samples, 0.47%)</title><rect x="812.9" y="627.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (407 samples, 0.47%)</title><rect x="812.9" y="611.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (407 samples, 0.47%)</title><rect x="812.9" y="595.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (407 samples, 0.47%)</title><rect x="812.9" y="579.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (407 samples, 0.47%)</title><rect x="812.9" y="563.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (407 samples, 0.47%)</title><rect x="812.9" y="547.0" width="5.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="815.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (83 samples, 0.10%)</title><rect x="818.4" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (83 samples, 0.10%)</title><rect x="818.4" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$185/1336536757.accept (83 samples, 0.10%)</title><rect x="818.4" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (83 samples, 0.10%)</title><rect x="818.4" y="707.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (83 samples, 0.10%)</title><rect x="818.4" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (83 samples, 0.10%)</title><rect x="818.4" y="675.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (83 samples, 0.10%)</title><rect x="818.4" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (83 samples, 0.10%)</title><rect x="818.4" y="643.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (83 samples, 0.10%)</title><rect x="818.4" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (83 samples, 0.10%)</title><rect x="818.4" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (83 samples, 0.10%)</title><rect x="818.4" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (83 samples, 0.10%)</title><rect x="818.4" y="579.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (62 samples, 0.07%)</title><rect x="818.4" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.07%)</title><rect x="818.4" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (62 samples, 0.07%)</title><rect x="818.4" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.07%)</title><rect x="818.4" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.07%)</title><rect x="818.4" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.07%)</title><rect x="818.4" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.07%)</title><rect x="818.4" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.07%)</title><rect x="818.4" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="821.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (21 samples, 0.02%)</title><rect x="819.3" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (21 samples, 0.02%)</title><rect x="819.3" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.02%)</title><rect x="819.3" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (21 samples, 0.02%)</title><rect x="819.3" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.02%)</title><rect x="819.3" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.02%)</title><rect x="819.3" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (21 samples, 0.02%)</title><rect x="819.3" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="822.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (247 samples, 0.29%)</title><rect x="819.6" y="899.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (247 samples, 0.29%)</title><rect x="819.6" y="883.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (247 samples, 0.29%)</title><rect x="819.6" y="867.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (247 samples, 0.29%)</title><rect x="819.6" y="851.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (247 samples, 0.29%)</title><rect x="819.6" y="835.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="822.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (247 samples, 0.29%)</title><rect x="819.6" y="819.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (247 samples, 0.29%)</title><rect x="819.6" y="803.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (247 samples, 0.29%)</title><rect x="819.6" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (247 samples, 0.29%)</title><rect x="819.6" y="771.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (247 samples, 0.29%)</title><rect x="819.6" y="755.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="822.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (247 samples, 0.29%)</title><rect x="819.6" y="739.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (247 samples, 0.29%)</title><rect x="819.6" y="723.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (247 samples, 0.29%)</title><rect x="819.6" y="707.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (247 samples, 0.29%)</title><rect x="819.6" y="691.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (247 samples, 0.29%)</title><rect x="819.6" y="675.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (247 samples, 0.29%)</title><rect x="819.6" y="659.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (247 samples, 0.29%)</title><rect x="819.6" y="643.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (247 samples, 0.29%)</title><rect x="819.6" y="627.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (247 samples, 0.29%)</title><rect x="819.6" y="611.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (247 samples, 0.29%)</title><rect x="819.6" y="595.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (247 samples, 0.29%)</title><rect x="819.6" y="579.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="822.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (26,517 samples, 30.72%)</title><rect x="822.9" y="899.0" width="362.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.9" y="910.0">jdk/internal/net/http/HttpClientImpl$SelectorMana..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (130 samples, 0.15%)</title><rect x="822.9" y="883.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$425/505333586.accept (130 samples, 0.15%)</title><rect x="822.9" y="867.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (130 samples, 0.15%)</title><rect x="822.9" y="851.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (130 samples, 0.15%)</title><rect x="822.9" y="835.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (130 samples, 0.15%)</title><rect x="822.9" y="819.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (130 samples, 0.15%)</title><rect x="822.9" y="803.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (130 samples, 0.15%)</title><rect x="822.9" y="787.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.15%)</title><rect x="822.9" y="771.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.15%)</title><rect x="822.9" y="755.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (130 samples, 0.15%)</title><rect x="822.9" y="739.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (130 samples, 0.15%)</title><rect x="822.9" y="723.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/762738301.run (130 samples, 0.15%)</title><rect x="822.9" y="707.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (130 samples, 0.15%)</title><rect x="822.9" y="691.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (130 samples, 0.15%)</title><rect x="822.9" y="675.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (130 samples, 0.15%)</title><rect x="822.9" y="659.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (130 samples, 0.15%)</title><rect x="822.9" y="643.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.15%)</title><rect x="822.9" y="627.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.15%)</title><rect x="822.9" y="611.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (130 samples, 0.15%)</title><rect x="822.9" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 0.15%)</title><rect x="822.9" y="579.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (130 samples, 0.15%)</title><rect x="822.9" y="563.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (128 samples, 0.15%)</title><rect x="822.9" y="547.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (128 samples, 0.15%)</title><rect x="822.9" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (128 samples, 0.15%)</title><rect x="822.9" y="515.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (128 samples, 0.15%)</title><rect x="822.9" y="499.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (128 samples, 0.15%)</title><rect x="822.9" y="483.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (128 samples, 0.15%)</title><rect x="822.9" y="467.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (128 samples, 0.15%)</title><rect x="822.9" y="451.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (128 samples, 0.15%)</title><rect x="822.9" y="435.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="825.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (16,968 samples, 19.66%)</title><rect x="824.7" y="883.0" width="232.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="827.7" y="894.0">jdk.internal.net.http.HttpClien..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (343 samples, 0.40%)</title><rect x="1056.7" y="883.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316/1936953865.run (145 samples, 0.17%)</title><rect x="1056.7" y="867.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (145 samples, 0.17%)</title><rect x="1056.7" y="851.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (145 samples, 0.17%)</title><rect x="1056.7" y="835.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (145 samples, 0.17%)</title><rect x="1056.7" y="819.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (145 samples, 0.17%)</title><rect x="1056.7" y="803.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (145 samples, 0.17%)</title><rect x="1056.7" y="787.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/762738301.run (145 samples, 0.17%)</title><rect x="1056.7" y="771.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (145 samples, 0.17%)</title><rect x="1056.7" y="755.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (145 samples, 0.17%)</title><rect x="1056.7" y="739.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (145 samples, 0.17%)</title><rect x="1056.7" y="723.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (145 samples, 0.17%)</title><rect x="1056.7" y="707.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (145 samples, 0.17%)</title><rect x="1056.7" y="691.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (145 samples, 0.17%)</title><rect x="1056.7" y="675.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (145 samples, 0.17%)</title><rect x="1056.7" y="659.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (145 samples, 0.17%)</title><rect x="1056.7" y="643.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (145 samples, 0.17%)</title><rect x="1056.7" y="627.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (140 samples, 0.16%)</title><rect x="1056.7" y="611.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (140 samples, 0.16%)</title><rect x="1056.7" y="595.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (140 samples, 0.16%)</title><rect x="1056.7" y="579.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (140 samples, 0.16%)</title><rect x="1056.7" y="563.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (140 samples, 0.16%)</title><rect x="1056.7" y="547.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 0.16%)</title><rect x="1056.7" y="531.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (140 samples, 0.16%)</title><rect x="1056.7" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (140 samples, 0.16%)</title><rect x="1056.7" y="499.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1059.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$328/1843264935.run (198 samples, 0.23%)</title><rect x="1058.6" y="867.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (198 samples, 0.23%)</title><rect x="1058.6" y="851.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (198 samples, 0.23%)</title><rect x="1058.6" y="835.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (198 samples, 0.23%)</title><rect x="1058.6" y="819.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (198 samples, 0.23%)</title><rect x="1058.6" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (188 samples, 0.22%)</title><rect x="1058.6" y="787.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (188 samples, 0.22%)</title><rect x="1058.6" y="771.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (188 samples, 0.22%)</title><rect x="1058.6" y="755.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (188 samples, 0.22%)</title><rect x="1058.6" y="739.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (188 samples, 0.22%)</title><rect x="1058.6" y="723.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (188 samples, 0.22%)</title><rect x="1058.6" y="707.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (188 samples, 0.22%)</title><rect x="1058.6" y="691.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.6" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (188 samples, 0.22%)</title><rect x="1058.6" y="675.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1061.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,036 samples, 2.36%)</title><rect x="1061.4" y="883.0" width="27.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.4" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,036 samples, 2.36%)</title><rect x="1061.4" y="867.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.4" y="878.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,036 samples, 2.36%)</title><rect x="1061.4" y="851.0" width="27.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1064.4" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (6,024 samples, 6.98%)</title><rect x="1089.2" y="883.0" width="82.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.2" y="894.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (6,024 samples, 6.98%)</title><rect x="1089.2" y="867.0" width="82.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1092.2" y="878.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (979 samples, 1.13%)</title><rect x="1171.5" y="883.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (979 samples, 1.13%)</title><rect x="1171.5" y="867.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (979 samples, 1.13%)</title><rect x="1171.5" y="851.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (979 samples, 1.13%)</title><rect x="1171.5" y="835.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (979 samples, 1.13%)</title><rect x="1171.5" y="819.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.5" y="830.0"></text>
</g>
<g>
<title>java.lang.Object (979 samples, 1.13%)</title><rect x="1171.5" y="803.0" width="13.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1174.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (37 samples, 0.04%)</title><rect x="1184.9" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 0.04%)</title><rect x="1184.9" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (37 samples, 0.04%)</title><rect x="1184.9" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (37 samples, 0.04%)</title><rect x="1184.9" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (37 samples, 0.04%)</title><rect x="1184.9" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>java.lang.Object (37 samples, 0.04%)</title><rect x="1184.9" y="803.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (335 samples, 0.39%)</title><rect x="1185.4" y="899.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (335 samples, 0.39%)</title><rect x="1185.4" y="883.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.4" y="894.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (26 samples, 0.03%)</title><rect x="1185.4" y="867.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1188.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (309 samples, 0.36%)</title><rect x="1185.8" y="867.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (309 samples, 0.36%)</title><rect x="1185.8" y="851.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (309 samples, 0.36%)</title><rect x="1185.8" y="835.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (309 samples, 0.36%)</title><rect x="1185.8" y="819.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.8" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (309 samples, 0.36%)</title><rect x="1185.8" y="803.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (309 samples, 0.36%)</title><rect x="1185.8" y="787.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (309 samples, 0.36%)</title><rect x="1185.8" y="771.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (309 samples, 0.36%)</title><rect x="1185.8" y="755.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (309 samples, 0.36%)</title><rect x="1185.8" y="739.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (309 samples, 0.36%)</title><rect x="1185.8" y="723.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (309 samples, 0.36%)</title><rect x="1185.8" y="707.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (309 samples, 0.36%)</title><rect x="1185.8" y="691.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (309 samples, 0.36%)</title><rect x="1185.8" y="675.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (309 samples, 0.36%)</title><rect x="1185.8" y="659.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (309 samples, 0.36%)</title><rect x="1185.8" y="643.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (309 samples, 0.36%)</title><rect x="1185.8" y="627.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1188.8" y="638.0"></text>
</g>
</g>
</svg>
