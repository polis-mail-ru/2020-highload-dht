<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (32,503 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,500 samples, 53.84%)</title><rect x="10.0" y="723.0" width="635.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,500 samples, 53.84%)</title><rect x="10.0" y="707.0" width="635.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,500 samples, 53.84%)</title><rect x="10.0" y="691.0" width="635.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,557 samples, 38.63%)</title><rect x="10.0" y="675.0" width="455.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,621 samples, 8.06%)</title><rect x="10.0" y="659.0" width="95.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (110 samples, 0.34%)</title><rect x="10.0" y="643.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$602/360822142.apply (110 samples, 0.34%)</title><rect x="10.0" y="627.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toProxyResponse (110 samples, 0.34%)</title><rect x="10.0" y="611.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toResponse (110 samples, 0.34%)</title><rect x="10.0" y="595.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue$$Lambda$614/1110069960.apply (110 samples, 0.34%)</title><rect x="10.0" y="579.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.proxyResponse (110 samples, 0.34%)</title><rect x="10.0" y="563.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="10.0" y="547.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/primitives/Longs.toByteArray (22 samples, 0.07%)</title><rect x="11.1" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.1" y="558.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="11.1" y="531.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="14.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (59 samples, 0.18%)</title><rect x="11.9" y="547.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.9" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.05%)</title><rect x="11.9" y="531.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="14.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (44 samples, 0.14%)</title><rect x="12.4" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.4" y="542.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="12.4" y="515.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="15.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.05%)</title><rect x="13.0" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="16.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="13.5" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="16.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,511 samples, 7.73%)</title><rect x="14.0" y="643.0" width="91.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.0" y="654.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (11 samples, 0.03%)</title><rect x="14.0" y="627.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="17.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/229988659.apply (2,500 samples, 7.69%)</title><rect x="14.4" y="627.0" width="90.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.4" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,500 samples, 7.69%)</title><rect x="14.4" y="611.0" width="90.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.4" y="622.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,500 samples, 7.69%)</title><rect x="14.4" y="595.0" width="90.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.4" y="606.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="14.4" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="14.4" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$417/718591365.get$Lambda (11 samples, 0.03%)</title><rect x="14.4" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$417 (11 samples, 0.03%)</title><rect x="14.4" y="531.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (27 samples, 0.08%)</title><rect x="14.9" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (27 samples, 0.08%)</title><rect x="14.9" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (12 samples, 0.04%)</title><rect x="14.9" y="547.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="17.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="15.3" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="15.3" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="15.3" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 0.16%)</title><rect x="15.8" y="579.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 0.16%)</title><rect x="15.8" y="563.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.07%)</title><rect x="15.8" y="547.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="18.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.09%)</title><rect x="16.6" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.09%)</title><rect x="16.6" y="531.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.09%)</title><rect x="16.6" y="515.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,344 samples, 7.21%)</title><rect x="17.7" y="579.0" width="85.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.7" y="590.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,344 samples, 7.21%)</title><rect x="17.7" y="563.0" width="85.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.7" y="574.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,344 samples, 7.21%)</title><rect x="17.7" y="547.0" width="85.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="558.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.07%)</title><rect x="17.7" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.07%)</title><rect x="17.7" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$272/413543393.get$Lambda (8 samples, 0.02%)</title><rect x="17.9" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$272 (8 samples, 0.02%)</title><rect x="17.9" y="483.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="20.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$363/830633842.get$Lambda (9 samples, 0.03%)</title><rect x="18.2" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$363 (9 samples, 0.03%)</title><rect x="18.2" y="483.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="21.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,810 samples, 5.57%)</title><rect x="18.5" y="531.0" width="65.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.5" y="542.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,810 samples, 5.57%)</title><rect x="18.5" y="515.0" width="65.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.5" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,796 samples, 5.53%)</title><rect x="18.5" y="499.0" width="65.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.5" y="510.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$363/830633842.apply (1,796 samples, 5.53%)</title><rect x="18.5" y="483.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.5" y="494.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,796 samples, 5.53%)</title><rect x="18.5" y="467.0" width="65.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.5" y="478.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,796 samples, 5.53%)</title><rect x="18.5" y="451.0" width="65.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.5" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$272/413543393.apply (1,796 samples, 5.53%)</title><rect x="18.5" y="435.0" width="65.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.5" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,796 samples, 5.53%)</title><rect x="18.5" y="419.0" width="65.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.5" y="430.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="18.5" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="18.5" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/1822227371.get$Lambda (10 samples, 0.03%)</title><rect x="18.5" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$413 (10 samples, 0.03%)</title><rect x="18.5" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="21.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (26 samples, 0.08%)</title><rect x="18.9" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (26 samples, 0.08%)</title><rect x="18.9" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="19.3" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="19.3" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="19.3" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39 samples, 0.12%)</title><rect x="19.8" y="403.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39 samples, 0.12%)</title><rect x="19.8" y="387.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.07%)</title><rect x="19.8" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="22.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="20.6" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="20.6" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="20.6" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="23.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,721 samples, 5.29%)</title><rect x="21.2" y="403.0" width="62.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.2" y="414.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="21.2" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="21.2" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$406/1484817975.get$Lambda (7 samples, 0.02%)</title><rect x="21.2" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$406 (7 samples, 0.02%)</title><rect x="21.2" y="339.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,507 samples, 4.64%)</title><rect x="21.7" y="387.0" width="54.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.7" y="398.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,507 samples, 4.64%)</title><rect x="21.7" y="371.0" width="54.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.7" y="382.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (13 samples, 0.04%)</title><rect x="21.7" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$406/1484817975.apply (1,469 samples, 4.52%)</title><rect x="22.1" y="355.0" width="53.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.1" y="366.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,469 samples, 4.52%)</title><rect x="22.1" y="339.0" width="53.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.1" y="350.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="22.1" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="22.1" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$430/256210513.get$Lambda (7 samples, 0.02%)</title><rect x="22.1" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$430 (7 samples, 0.02%)</title><rect x="22.1" y="275.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="25.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.05%)</title><rect x="22.4" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.05%)</title><rect x="22.4" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.04%)</title><rect x="22.4" y="291.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="25.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="23.0" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="26.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.05%)</title><rect x="23.4" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (8 samples, 0.02%)</title><rect x="23.4" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.03%)</title><rect x="23.7" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (7 samples, 0.02%)</title><rect x="23.7" y="291.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (7 samples, 0.02%)</title><rect x="23.7" y="275.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (7 samples, 0.02%)</title><rect x="23.7" y="259.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (7 samples, 0.02%)</title><rect x="23.7" y="243.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (7 samples, 0.02%)</title><rect x="23.7" y="227.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="26.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (25 samples, 0.08%)</title><rect x="24.0" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (25 samples, 0.08%)</title><rect x="24.0" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (8 samples, 0.02%)</title><rect x="24.0" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.02%)</title><rect x="24.0" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.02%)</title><rect x="24.0" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (8 samples, 0.02%)</title><rect x="24.0" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.05%)</title><rect x="24.3" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.05%)</title><rect x="24.3" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (13 samples, 0.04%)</title><rect x="24.3" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="27.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,393 samples, 4.29%)</title><rect x="24.9" y="323.0" width="50.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.9" y="334.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.03%)</title><rect x="24.9" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (75 samples, 0.23%)</title><rect x="25.3" y="307.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (75 samples, 0.23%)</title><rect x="25.3" y="291.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (75 samples, 0.23%)</title><rect x="25.3" y="275.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.3" y="286.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.23%)</title><rect x="25.3" y="259.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="28.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (41 samples, 0.13%)</title><rect x="28.0" y="307.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.0" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (41 samples, 0.13%)</title><rect x="28.0" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.0" y="302.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.13%)</title><rect x="28.0" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="31.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (78 samples, 0.24%)</title><rect x="29.5" y="307.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (78 samples, 0.24%)</title><rect x="29.5" y="291.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (78 samples, 0.24%)</title><rect x="29.5" y="275.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.5" y="286.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.24%)</title><rect x="29.5" y="259.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="32.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.05%)</title><rect x="32.3" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.05%)</title><rect x="32.3" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.05%)</title><rect x="32.3" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="35.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,029 samples, 3.17%)</title><rect x="33.0" y="307.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.0" y="318.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="33.0" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="33.0" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$447/1748949753.get$Lambda (7 samples, 0.02%)</title><rect x="33.0" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$447 (7 samples, 0.02%)</title><rect x="33.0" y="243.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="36.0" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (530 samples, 1.63%)</title><rect x="33.3" y="291.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (530 samples, 1.63%)</title><rect x="33.3" y="275.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.3" y="286.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (16 samples, 0.05%)</title><rect x="33.3" y="259.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="36.3" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.04%)</title><rect x="33.9" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="36.9" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (34 samples, 0.10%)</title><rect x="34.3" y="259.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="37.3" y="270.0"></text>
</g>
<g>
<title>java.util.TreeSet (8 samples, 0.02%)</title><rect x="35.6" y="259.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="38.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.06%)</title><rect x="35.8" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title><rect x="35.8" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.get$Lambda (19 samples, 0.06%)</title><rect x="35.8" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.8" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$199 (19 samples, 0.06%)</title><rect x="35.8" y="211.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="38.8" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (373 samples, 1.15%)</title><rect x="36.5" y="259.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (373 samples, 1.15%)</title><rect x="36.5" y="243.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.accept (373 samples, 1.15%)</title><rect x="36.5" y="227.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.5" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (373 samples, 1.15%)</title><rect x="36.5" y="211.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.5" y="222.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (232 samples, 0.71%)</title><rect x="36.5" y="195.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$211/974200958.accept (176 samples, 0.54%)</title><rect x="36.5" y="179.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (176 samples, 0.54%)</title><rect x="36.5" y="163.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (54 samples, 0.17%)</title><rect x="36.5" y="147.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (54 samples, 0.17%)</title><rect x="36.5" y="131.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.5" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (54 samples, 0.17%)</title><rect x="36.5" y="115.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (54 samples, 0.17%)</title><rect x="36.5" y="99.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.17%)</title><rect x="36.5" y="83.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.5" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.17%)</title><rect x="36.5" y="67.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="39.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$447/1748949753.test (122 samples, 0.38%)</title><rect x="38.5" y="147.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (122 samples, 0.38%)</title><rect x="38.5" y="131.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.5" y="142.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (122 samples, 0.38%)</title><rect x="38.5" y="115.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.5" y="126.0"></text>
</g>
<g>
<title>java/util/Collection.stream (100 samples, 0.31%)</title><rect x="38.5" y="99.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.spliterator (35 samples, 0.11%)</title><rect x="38.5" y="83.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (35 samples, 0.11%)</title><rect x="38.5" y="67.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="41.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (65 samples, 0.20%)</title><rect x="39.8" y="83.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.8" y="94.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (65 samples, 0.20%)</title><rect x="39.8" y="67.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="42.8" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (22 samples, 0.07%)</title><rect x="42.1" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.1" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.07%)</title><rect x="42.1" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.1" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (22 samples, 0.07%)</title><rect x="42.1" y="67.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.1" y="78.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (22 samples, 0.07%)</title><rect x="42.1" y="51.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.1" y="62.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (22 samples, 0.07%)</title><rect x="42.1" y="35.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="45.1" y="46.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (56 samples, 0.17%)</title><rect x="42.9" y="179.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.9" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (56 samples, 0.17%)</title><rect x="42.9" y="163.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="45.9" y="174.0"></text>
</g>
<g>
<title>java/util/List.copyOf (78 samples, 0.24%)</title><rect x="45.0" y="195.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.0" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (78 samples, 0.24%)</title><rect x="45.0" y="179.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.0" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (32 samples, 0.10%)</title><rect x="45.0" y="163.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.10%)</title><rect x="45.0" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.10%)</title><rect x="45.0" y="131.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="48.0" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (46 samples, 0.14%)</title><rect x="46.1" y="163.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.1" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (46 samples, 0.14%)</title><rect x="46.1" y="147.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (63 samples, 0.19%)</title><rect x="47.8" y="195.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.8" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (63 samples, 0.19%)</title><rect x="47.8" y="179.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="50.8" y="190.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (27 samples, 0.08%)</title><rect x="50.1" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.1" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (27 samples, 0.08%)</title><rect x="50.1" y="243.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="53.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (40 samples, 0.12%)</title><rect x="51.1" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.12%)</title><rect x="51.1" y="243.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="54.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (7 samples, 0.02%)</title><rect x="52.5" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="52.5" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="52.5" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.5" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$438/115223371.get$Lambda (7 samples, 0.02%)</title><rect x="52.5" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.5" y="254.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$438 (7 samples, 0.02%)</title><rect x="52.5" y="227.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="55.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (284 samples, 0.87%)</title><rect x="52.8" y="291.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (176 samples, 0.54%)</title><rect x="52.8" y="275.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (176 samples, 0.54%)</title><rect x="52.8" y="259.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (176 samples, 0.54%)</title><rect x="52.8" y="243.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (176 samples, 0.54%)</title><rect x="52.8" y="227.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.8" y="238.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.54%)</title><rect x="52.8" y="211.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="55.8" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (28 samples, 0.09%)</title><rect x="59.2" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (28 samples, 0.09%)</title><rect x="59.2" y="259.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (28 samples, 0.09%)</title><rect x="59.2" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (28 samples, 0.09%)</title><rect x="59.2" y="227.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="62.2" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (24 samples, 0.07%)</title><rect x="60.2" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.2" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (9 samples, 0.03%)</title><rect x="60.2" y="259.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (15 samples, 0.05%)</title><rect x="60.5" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (15 samples, 0.05%)</title><rect x="60.5" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="63.5" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$438/115223371.test (56 samples, 0.17%)</title><rect x="61.0" y="275.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.0" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (56 samples, 0.17%)</title><rect x="61.0" y="259.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$108/341796579.test (56 samples, 0.17%)</title><rect x="61.0" y="243.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$11 (56 samples, 0.17%)</title><rect x="61.0" y="227.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$98/953742666.test (56 samples, 0.17%)</title><rect x="61.0" y="211.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.0" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (56 samples, 0.17%)</title><rect x="61.0" y="195.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$97/860481979.test (56 samples, 0.17%)</title><rect x="61.0" y="179.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$4 (56 samples, 0.17%)</title><rect x="61.0" y="163.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 0.17%)</title><rect x="61.0" y="147.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.17%)</title><rect x="61.0" y="131.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.08%)</title><rect x="61.0" y="115.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="64.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.10%)</title><rect x="62.0" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.0" y="126.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.10%)</title><rect x="62.0" y="99.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (193 samples, 0.59%)</title><rect x="63.1" y="291.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.1" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (193 samples, 0.59%)</title><rect x="63.1" y="275.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (193 samples, 0.59%)</title><rect x="63.1" y="259.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.1" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.02%)</title><rect x="63.1" y="243.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="66.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (20 samples, 0.06%)</title><rect x="63.4" y="243.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="66.4" y="254.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.02%)</title><rect x="64.1" y="243.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.1" y="254.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.04%)</title><rect x="64.3" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.04%)</title><rect x="64.3" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="67.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (119 samples, 0.37%)</title><rect x="64.8" y="243.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.accept (119 samples, 0.37%)</title><rect x="64.8" y="227.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.8" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (119 samples, 0.37%)</title><rect x="64.8" y="211.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (18 samples, 0.06%)</title><rect x="64.8" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$211/974200958.accept (18 samples, 0.06%)</title><rect x="64.8" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.8" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (18 samples, 0.06%)</title><rect x="64.8" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.06%)</title><rect x="64.8" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.06%)</title><rect x="64.8" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.06%)</title><rect x="64.8" y="115.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.06%)</title><rect x="64.8" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.06%)</title><rect x="64.8" y="83.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.8" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.06%)</title><rect x="64.8" y="67.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="67.8" y="78.0"></text>
</g>
<g>
<title>java/util/List.copyOf (58 samples, 0.18%)</title><rect x="65.4" y="195.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.4" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (58 samples, 0.18%)</title><rect x="65.4" y="179.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (29 samples, 0.09%)</title><rect x="65.4" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.09%)</title><rect x="65.4" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.09%)</title><rect x="65.4" y="131.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="68.4" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (29 samples, 0.09%)</title><rect x="66.5" y="163.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.5" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (29 samples, 0.09%)</title><rect x="66.5" y="147.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="69.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (43 samples, 0.13%)</title><rect x="67.5" y="195.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.5" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (43 samples, 0.13%)</title><rect x="67.5" y="179.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="70.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.08%)</title><rect x="69.1" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.08%)</title><rect x="69.1" y="227.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="72.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.CONTEXT_RESTRICTED (8 samples, 0.02%)</title><rect x="70.1" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="70.1" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="70.1" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$442/1512928978.get$Lambda (8 samples, 0.02%)</title><rect x="70.1" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$442 (8 samples, 0.02%)</title><rect x="70.1" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="73.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (35 samples, 0.11%)</title><rect x="70.4" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (10 samples, 0.03%)</title><rect x="70.4" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.4" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="70.4" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.08%)</title><rect x="70.7" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (25 samples, 0.08%)</title><rect x="70.7" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.08%)</title><rect x="70.7" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.04%)</title><rect x="70.7" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.04%)</title><rect x="70.7" y="227.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="73.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.04%)</title><rect x="71.2" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.04%)</title><rect x="71.2" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.2" y="238.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="71.2" y="211.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="74.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (31 samples, 0.10%)</title><rect x="71.6" y="307.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (31 samples, 0.10%)</title><rect x="71.6" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.10%)</title><rect x="71.6" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (31 samples, 0.10%)</title><rect x="71.6" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.10%)</title><rect x="71.6" y="243.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.04%)</title><rect x="71.6" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.6" y="238.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="71.6" y="211.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="74.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.06%)</title><rect x="72.1" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.06%)</title><rect x="72.1" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.1" y="222.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="72.1" y="195.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="75.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (74 samples, 0.23%)</title><rect x="72.8" y="307.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.8" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.07%)</title><rect x="72.8" y="291.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="75.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (20 samples, 0.06%)</title><rect x="73.6" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.06%)</title><rect x="73.6" y="275.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="76.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (30 samples, 0.09%)</title><rect x="74.4" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.4" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (30 samples, 0.09%)</title><rect x="74.4" y="275.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="77.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="75.5" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="75.5" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.08%)</title><rect x="75.5" y="323.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="78.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (36 samples, 0.11%)</title><rect x="76.4" y="387.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="77.7" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="80.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (154 samples, 0.47%)</title><rect x="78.1" y="387.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="78.1" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="78.1" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$377/191574061.get$Lambda (9 samples, 0.03%)</title><rect x="78.3" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$377 (9 samples, 0.03%)</title><rect x="78.3" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="81.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (22 samples, 0.07%)</title><rect x="78.6" y="371.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="81.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (10 samples, 0.03%)</title><rect x="79.4" y="371.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="82.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (15 samples, 0.05%)</title><rect x="79.7" y="371.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="82.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (42 samples, 0.13%)</title><rect x="80.3" y="371.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.13%)</title><rect x="80.3" y="355.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.13%)</title><rect x="80.3" y="339.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42 samples, 0.13%)</title><rect x="80.3" y="323.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (42 samples, 0.13%)</title><rect x="80.3" y="307.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42 samples, 0.13%)</title><rect x="80.3" y="291.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/1972380626.run (42 samples, 0.13%)</title><rect x="80.3" y="275.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (42 samples, 0.13%)</title><rect x="80.3" y="259.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (42 samples, 0.13%)</title><rect x="80.3" y="243.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="80.3" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="80.3" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$386/665730287.get$Lambda (7 samples, 0.02%)</title><rect x="80.4" y="195.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.4" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$386 (7 samples, 0.02%)</title><rect x="80.4" y="179.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="83.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (15 samples, 0.05%)</title><rect x="80.6" y="227.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="83.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (17 samples, 0.05%)</title><rect x="81.2" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (17 samples, 0.05%)</title><rect x="81.2" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.02%)</title><rect x="81.2" y="195.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="84.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.03%)</title><rect x="81.5" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.5" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.03%)</title><rect x="81.5" y="179.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="84.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (37 samples, 0.11%)</title><rect x="81.8" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.8" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (14 samples, 0.04%)</title><rect x="82.0" y="355.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="85.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (17 samples, 0.05%)</title><rect x="82.5" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.5" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (17 samples, 0.05%)</title><rect x="82.5" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.5" y="350.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="82.5" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="85.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (15 samples, 0.05%)</title><rect x="83.2" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="83.2" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="86.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="83.7" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="83.7" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="83.7" y="467.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="86.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (24 samples, 0.07%)</title><rect x="84.2" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (24 samples, 0.07%)</title><rect x="84.2" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (17 samples, 0.05%)</title><rect x="84.2" y="499.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="87.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="84.8" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="84.8" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="84.8" y="467.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="87.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (488 samples, 1.50%)</title><rect x="85.1" y="531.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="85.1" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="85.1" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$355/618775394.get$Lambda (7 samples, 0.02%)</title><rect x="85.1" y="483.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$355 (7 samples, 0.02%)</title><rect x="85.1" y="467.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="88.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.07%)</title><rect x="85.5" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.07%)</title><rect x="85.5" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/1981042910.apply (10 samples, 0.03%)</title><rect x="85.5" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (10 samples, 0.03%)</title><rect x="85.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.03%)</title><rect x="85.5" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="85.5" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="88.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="85.9" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="85.9" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="85.9" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="88.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.03%)</title><rect x="86.3" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.03%)</title><rect x="86.3" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="86.3" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="86.3" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.03%)</title><rect x="86.3" y="451.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="89.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (442 samples, 1.36%)</title><rect x="86.7" y="515.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (442 samples, 1.36%)</title><rect x="86.7" y="499.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (29 samples, 0.09%)</title><rect x="86.7" y="483.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="89.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (401 samples, 1.23%)</title><rect x="87.8" y="483.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (12 samples, 0.04%)</title><rect x="87.9" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="90.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (8 samples, 0.02%)</title><rect x="88.3" y="467.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.3" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.06%)</title><rect x="88.6" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.6" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.06%)</title><rect x="88.6" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.06%)</title><rect x="88.6" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="91.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (8 samples, 0.02%)</title><rect x="89.4" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.02%)</title><rect x="89.4" y="451.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (22 samples, 0.07%)</title><rect x="89.7" y="467.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (13 samples, 0.04%)</title><rect x="90.5" y="467.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="93.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (21 samples, 0.06%)</title><rect x="90.9" y="467.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="93.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.08%)</title><rect x="91.7" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="94.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (122 samples, 0.38%)</title><rect x="92.7" y="467.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (8 samples, 0.02%)</title><rect x="92.7" y="451.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="95.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (13 samples, 0.04%)</title><rect x="93.1" y="451.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="96.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (8 samples, 0.02%)</title><rect x="93.6" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="96.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (14 samples, 0.04%)</title><rect x="94.1" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (14 samples, 0.04%)</title><rect x="94.1" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="97.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (9 samples, 0.03%)</title><rect x="94.6" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="97.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="95.0" y="451.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="98.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (49 samples, 0.15%)</title><rect x="95.3" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (11 samples, 0.03%)</title><rect x="95.3" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="98.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (14 samples, 0.04%)</title><rect x="95.7" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="98.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (18 samples, 0.06%)</title><rect x="96.4" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.02%)</title><rect x="96.4" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="99.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (7 samples, 0.02%)</title><rect x="96.8" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="99.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (85 samples, 0.26%)</title><rect x="97.1" y="467.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (8 samples, 0.02%)</title><rect x="97.4" y="451.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="100.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (10 samples, 0.03%)</title><rect x="97.9" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (10 samples, 0.03%)</title><rect x="97.9" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="100.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (54 samples, 0.17%)</title><rect x="98.2" y="451.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (13 samples, 0.04%)</title><rect x="98.2" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="101.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (15 samples, 0.05%)</title><rect x="98.7" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="101.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (23 samples, 0.07%)</title><rect x="99.3" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (8 samples, 0.02%)</title><rect x="99.6" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="102.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (9 samples, 0.03%)</title><rect x="99.9" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="102.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (8 samples, 0.02%)</title><rect x="100.2" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="100.2" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="100.2" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$336/2110119902.get$Lambda (8 samples, 0.02%)</title><rect x="100.2" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$336 (8 samples, 0.02%)</title><rect x="100.2" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (14 samples, 0.04%)</title><rect x="100.5" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (14 samples, 0.04%)</title><rect x="100.5" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (9 samples, 0.03%)</title><rect x="100.7" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.03%)</title><rect x="100.7" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (9 samples, 0.03%)</title><rect x="100.7" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (9 samples, 0.03%)</title><rect x="100.7" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="100.7" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (38 samples, 0.12%)</title><rect x="101.0" y="467.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1684015092.linkToTargetMethod (7 samples, 0.02%)</title><rect x="101.0" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="101.0" y="435.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$278/741513638.get$Lambda (7 samples, 0.02%)</title><rect x="101.0" y="419.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$278 (7 samples, 0.02%)</title><rect x="101.0" y="403.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="104.0" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (31 samples, 0.10%)</title><rect x="101.2" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.2" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (31 samples, 0.10%)</title><rect x="101.2" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$278/741513638.run (31 samples, 0.10%)</title><rect x="101.2" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (31 samples, 0.10%)</title><rect x="101.2" y="403.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.2" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (26 samples, 0.08%)</title><rect x="101.4" y="387.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.4" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (9 samples, 0.03%)</title><rect x="101.4" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="104.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (17 samples, 0.05%)</title><rect x="101.7" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 0.05%)</title><rect x="101.7" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 0.05%)</title><rect x="101.7" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.7" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (17 samples, 0.05%)</title><rect x="101.7" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.7" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (17 samples, 0.05%)</title><rect x="101.7" y="307.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="104.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.04%)</title><rect x="102.4" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="102.4" y="467.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="105.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (10 samples, 0.03%)</title><rect x="102.8" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (10 samples, 0.03%)</title><rect x="102.8" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.03%)</title><rect x="102.8" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.03%)</title><rect x="102.8" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="105.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (55 samples, 0.17%)</title><rect x="103.2" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (35 samples, 0.11%)</title><rect x="103.2" y="563.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="106.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (20 samples, 0.06%)</title><rect x="104.4" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (20 samples, 0.06%)</title><rect x="104.4" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.03%)</title><rect x="104.4" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.03%)</title><rect x="104.4" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="104.4" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="104.4" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.4" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="104.4" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="107.4" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="104.8" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.8" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (10 samples, 0.03%)</title><rect x="104.8" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="104.8" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="104.8" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (10 samples, 0.03%)</title><rect x="104.8" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="104.8" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="104.8" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="104.8" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.8" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="104.8" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$589/1998514835.get (9,936 samples, 30.57%)</title><rect x="105.2" y="659.0" width="360.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.2" y="670.0">ru/mail/polis/service/zvladn7/ServiceHelper$$Lamb..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localGet$1 (9,936 samples, 30.57%)</title><rect x="105.2" y="643.0" width="360.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.2" y="654.0">ru/mail/polis/service/zvladn7/ServiceHelper.lambd..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (9,796 samples, 30.14%)</title><rect x="105.2" y="627.0" width="355.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.2" y="638.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (782 samples, 2.41%)</title><rect x="105.2" y="611.0" width="28.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.2" y="622.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (689 samples, 2.12%)</title><rect x="105.2" y="595.0" width="25.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.2" y="606.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (88 samples, 0.27%)</title><rect x="105.2" y="579.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.2" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (88 samples, 0.27%)</title><rect x="105.2" y="563.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.2" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (88 samples, 0.27%)</title><rect x="105.2" y="547.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.27%)</title><rect x="105.2" y="531.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.27%)</title><rect x="105.2" y="515.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.2" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$573/1700793107.compare (88 samples, 0.27%)</title><rect x="105.2" y="499.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.2" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (88 samples, 0.27%)</title><rect x="105.2" y="483.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.2" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (88 samples, 0.27%)</title><rect x="105.2" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.2" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (88 samples, 0.27%)</title><rect x="105.2" y="451.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$571/339660416.apply (88 samples, 0.27%)</title><rect x="105.2" y="435.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (88 samples, 0.27%)</title><rect x="105.2" y="419.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (88 samples, 0.27%)</title><rect x="105.2" y="403.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.2" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (88 samples, 0.27%)</title><rect x="105.2" y="387.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="108.2" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (601 samples, 1.85%)</title><rect x="108.3" y="579.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="590.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (601 samples, 1.85%)</title><rect x="108.3" y="563.0" width="21.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.3" y="574.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (601 samples, 1.85%)</title><rect x="108.3" y="547.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (601 samples, 1.85%)</title><rect x="108.3" y="531.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="542.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (601 samples, 1.85%)</title><rect x="108.3" y="515.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="526.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (601 samples, 1.85%)</title><rect x="108.3" y="499.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.3" y="510.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (506 samples, 1.56%)</title><rect x="108.3" y="483.0" width="18.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (506 samples, 1.56%)</title><rect x="108.3" y="467.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (506 samples, 1.56%)</title><rect x="108.3" y="451.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (506 samples, 1.56%)</title><rect x="108.3" y="435.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (212 samples, 0.65%)</title><rect x="108.3" y="419.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (141 samples, 0.43%)</title><rect x="108.3" y="403.0" width="5.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="111.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (71 samples, 0.22%)</title><rect x="113.5" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="414.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.22%)</title><rect x="113.5" y="387.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="116.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (20 samples, 0.06%)</title><rect x="116.0" y="419.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="119.0" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (25 samples, 0.08%)</title><rect x="116.8" y="419.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="119.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (192 samples, 0.59%)</title><rect x="117.7" y="419.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (130 samples, 0.40%)</title><rect x="117.7" y="403.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (73 samples, 0.22%)</title><rect x="117.7" y="387.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="120.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (57 samples, 0.18%)</title><rect x="120.3" y="387.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.3" y="398.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.18%)</title><rect x="120.3" y="371.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="123.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (62 samples, 0.19%)</title><rect x="122.4" y="403.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (62 samples, 0.19%)</title><rect x="122.4" y="387.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.14%)</title><rect x="122.4" y="371.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="125.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.05%)</title><rect x="124.1" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.1" y="382.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="124.1" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="127.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (57 samples, 0.18%)</title><rect x="124.6" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (57 samples, 0.18%)</title><rect x="124.6" y="403.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.12%)</title><rect x="124.6" y="387.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="127.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.06%)</title><rect x="126.0" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="398.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="126.0" y="371.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="129.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$573/1700793107.compare (95 samples, 0.29%)</title><rect x="126.7" y="483.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.7" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (95 samples, 0.29%)</title><rect x="126.7" y="467.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (95 samples, 0.29%)</title><rect x="126.7" y="451.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (95 samples, 0.29%)</title><rect x="126.7" y="435.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$571/339660416.apply (95 samples, 0.29%)</title><rect x="126.7" y="419.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (95 samples, 0.29%)</title><rect x="126.7" y="403.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (95 samples, 0.29%)</title><rect x="126.7" y="387.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (95 samples, 0.29%)</title><rect x="126.7" y="371.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="129.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$608/931470984.apply (93 samples, 0.29%)</title><rect x="130.2" y="595.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (93 samples, 0.29%)</title><rect x="130.2" y="579.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (93 samples, 0.29%)</title><rect x="130.2" y="563.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (93 samples, 0.29%)</title><rect x="130.2" y="547.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="133.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.cellIterator (9,014 samples, 27.73%)</title><rect x="133.5" y="611.0" width="327.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.5" y="622.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.cellIte..</text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.15%)</title><rect x="133.5" y="595.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="136.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (35 samples, 0.11%)</title><rect x="135.4" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (35 samples, 0.11%)</title><rect x="135.4" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (35 samples, 0.11%)</title><rect x="135.4" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.4" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (35 samples, 0.11%)</title><rect x="135.4" y="547.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="138.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="136.6" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="136.6" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$590/1482848632.get$Lambda (14 samples, 0.04%)</title><rect x="136.6" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.LsmDAOImpl$$Lambda$590 (14 samples, 0.04%)</title><rect x="136.6" y="547.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="139.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (26 samples, 0.08%)</title><rect x="137.1" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.1" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="137.1" y="579.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="140.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (8,638 samples, 26.58%)</title><rect x="138.1" y="595.0" width="313.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.1" y="606.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.fresh..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,522 samples, 4.68%)</title><rect x="138.1" y="579.0" width="55.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.1" y="590.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (8 samples, 0.02%)</title><rect x="138.1" y="563.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="141.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,514 samples, 4.66%)</title><rect x="138.4" y="563.0" width="54.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.4" y="574.0">com/g..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (24 samples, 0.07%)</title><rect x="138.4" y="547.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="141.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (66 samples, 0.20%)</title><rect x="139.2" y="547.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.2" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (66 samples, 0.20%)</title><rect x="139.2" y="531.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="142.2" y="542.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (33 samples, 0.10%)</title><rect x="141.6" y="547.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="144.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (20 samples, 0.06%)</title><rect x="142.8" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.06%)</title><rect x="142.8" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="145.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,199 samples, 3.69%)</title><rect x="143.6" y="547.0" width="43.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.6" y="558.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,199 samples, 3.69%)</title><rect x="143.6" y="531.0" width="43.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.6" y="542.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (35 samples, 0.11%)</title><rect x="143.6" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.11%)</title><rect x="143.6" y="499.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.11%)</title><rect x="143.6" y="483.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="146.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,164 samples, 3.58%)</title><rect x="144.8" y="515.0" width="42.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.8" y="526.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,164 samples, 3.58%)</title><rect x="144.8" y="499.0" width="42.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.8" y="510.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,164 samples, 3.58%)</title><rect x="144.8" y="483.0" width="42.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.8" y="494.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,164 samples, 3.58%)</title><rect x="144.8" y="467.0" width="42.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.8" y="478.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (967 samples, 2.98%)</title><rect x="144.8" y="451.0" width="35.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.8" y="462.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (967 samples, 2.98%)</title><rect x="144.8" y="435.0" width="35.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.8" y="446.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (967 samples, 2.98%)</title><rect x="144.8" y="419.0" width="35.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.8" y="430.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (967 samples, 2.98%)</title><rect x="144.8" y="403.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.8" y="414.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (373 samples, 1.15%)</title><rect x="144.8" y="387.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (238 samples, 0.73%)</title><rect x="144.8" y="371.0" width="8.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="147.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (135 samples, 0.42%)</title><rect x="153.5" y="371.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.5" y="382.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.42%)</title><rect x="153.5" y="355.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="156.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (38 samples, 0.12%)</title><rect x="158.4" y="387.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="161.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (46 samples, 0.14%)</title><rect x="159.8" y="387.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (403 samples, 1.24%)</title><rect x="161.4" y="387.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (270 samples, 0.83%)</title><rect x="161.4" y="371.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (170 samples, 0.52%)</title><rect x="161.4" y="355.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (100 samples, 0.31%)</title><rect x="167.6" y="355.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.6" y="366.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.31%)</title><rect x="167.6" y="339.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="170.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (133 samples, 0.41%)</title><rect x="171.2" y="371.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (133 samples, 0.41%)</title><rect x="171.2" y="355.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (93 samples, 0.29%)</title><rect x="171.2" y="339.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="174.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.12%)</title><rect x="174.6" y="339.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.6" y="350.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.12%)</title><rect x="174.6" y="323.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="177.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (107 samples, 0.33%)</title><rect x="176.1" y="387.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.33%)</title><rect x="176.1" y="371.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.22%)</title><rect x="176.1" y="355.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="179.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.11%)</title><rect x="178.6" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.6" y="366.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.11%)</title><rect x="178.6" y="339.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="181.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$573/1700793107.compare (197 samples, 0.61%)</title><rect x="179.9" y="451.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (197 samples, 0.61%)</title><rect x="179.9" y="435.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (197 samples, 0.61%)</title><rect x="179.9" y="419.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (197 samples, 0.61%)</title><rect x="179.9" y="403.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$571/339660416.apply (197 samples, 0.61%)</title><rect x="179.9" y="387.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (197 samples, 0.61%)</title><rect x="179.9" y="371.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (197 samples, 0.61%)</title><rect x="179.9" y="355.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (197 samples, 0.61%)</title><rect x="179.9" y="339.0" width="7.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="182.9" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (172 samples, 0.53%)</title><rect x="187.1" y="547.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (172 samples, 0.53%)</title><rect x="187.1" y="531.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (172 samples, 0.53%)</title><rect x="187.1" y="515.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (32 samples, 0.10%)</title><rect x="187.1" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$569/1563177538.getAsBoolean (32 samples, 0.10%)</title><rect x="187.1" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (32 samples, 0.10%)</title><rect x="187.1" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (32 samples, 0.10%)</title><rect x="187.1" y="451.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (15 samples, 0.05%)</title><rect x="187.1" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (15 samples, 0.05%)</title><rect x="187.1" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.1" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (15 samples, 0.05%)</title><rect x="187.1" y="403.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="190.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.05%)</title><rect x="187.6" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable$$Lambda$565/917995528.apply (17 samples, 0.05%)</title><rect x="187.6" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.lambda$iterator$0 (17 samples, 0.05%)</title><rect x="187.6" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.6" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (17 samples, 0.05%)</title><rect x="187.6" y="387.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="190.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (140 samples, 0.43%)</title><rect x="188.3" y="499.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (34 samples, 0.10%)</title><rect x="188.3" y="483.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="191.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.08%)</title><rect x="189.5" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.08%)</title><rect x="189.5" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$567/1576762794.get$Lambda (15 samples, 0.05%)</title><rect x="189.5" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$567 (15 samples, 0.05%)</title><rect x="189.5" y="435.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="192.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$569/1563177538.get$Lambda (11 samples, 0.03%)</title><rect x="190.0" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.0" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$569 (11 samples, 0.03%)</title><rect x="190.0" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="193.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (21 samples, 0.06%)</title><rect x="190.4" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (21 samples, 0.06%)</title><rect x="190.4" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.4" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (21 samples, 0.06%)</title><rect x="190.4" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="193.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (59 samples, 0.18%)</title><rect x="191.2" y="483.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.18%)</title><rect x="191.2" y="467.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="194.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (660 samples, 2.03%)</title><rect x="193.3" y="579.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.3" y="590.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (27 samples, 0.08%)</title><rect x="193.3" y="563.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="196.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (633 samples, 1.95%)</title><rect x="194.3" y="563.0" width="23.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.3" y="574.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (633 samples, 1.95%)</title><rect x="194.3" y="547.0" width="23.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.3" y="558.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (86 samples, 0.26%)</title><rect x="194.3" y="531.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (86 samples, 0.26%)</title><rect x="194.3" y="515.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (86 samples, 0.26%)</title><rect x="194.3" y="499.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (86 samples, 0.26%)</title><rect x="194.3" y="483.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (86 samples, 0.26%)</title><rect x="194.3" y="467.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$573/1700793107.compare (86 samples, 0.26%)</title><rect x="194.3" y="451.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (86 samples, 0.26%)</title><rect x="194.3" y="435.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (86 samples, 0.26%)</title><rect x="194.3" y="419.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (86 samples, 0.26%)</title><rect x="194.3" y="403.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$571/339660416.apply (86 samples, 0.26%)</title><rect x="194.3" y="387.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (86 samples, 0.26%)</title><rect x="194.3" y="371.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (86 samples, 0.26%)</title><rect x="194.3" y="355.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (86 samples, 0.26%)</title><rect x="194.3" y="339.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="197.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (547 samples, 1.68%)</title><rect x="197.4" y="531.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (547 samples, 1.68%)</title><rect x="197.4" y="515.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (547 samples, 1.68%)</title><rect x="197.4" y="499.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (547 samples, 1.68%)</title><rect x="197.4" y="483.0" width="19.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (547 samples, 1.68%)</title><rect x="197.4" y="467.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (547 samples, 1.68%)</title><rect x="197.4" y="451.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (448 samples, 1.38%)</title><rect x="197.4" y="435.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (448 samples, 1.38%)</title><rect x="197.4" y="419.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (448 samples, 1.38%)</title><rect x="197.4" y="403.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (448 samples, 1.38%)</title><rect x="197.4" y="387.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (154 samples, 0.47%)</title><rect x="197.4" y="371.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (97 samples, 0.30%)</title><rect x="197.4" y="355.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="200.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (57 samples, 0.18%)</title><rect x="201.0" y="355.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.0" y="366.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.18%)</title><rect x="201.0" y="339.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="204.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (25 samples, 0.08%)</title><rect x="203.0" y="371.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="206.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (14 samples, 0.04%)</title><rect x="203.9" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="206.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (200 samples, 0.62%)</title><rect x="204.4" y="371.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.4" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (133 samples, 0.41%)</title><rect x="204.4" y="355.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (89 samples, 0.27%)</title><rect x="204.4" y="339.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="207.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (44 samples, 0.14%)</title><rect x="207.7" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.7" y="350.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.14%)</title><rect x="207.7" y="323.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="210.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (67 samples, 0.21%)</title><rect x="209.3" y="355.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (67 samples, 0.21%)</title><rect x="209.3" y="339.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.14%)</title><rect x="209.3" y="323.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="212.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.06%)</title><rect x="210.9" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.9" y="334.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.06%)</title><rect x="210.9" y="307.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="213.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (55 samples, 0.17%)</title><rect x="211.7" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.17%)</title><rect x="211.7" y="355.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.12%)</title><rect x="211.7" y="339.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="214.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.05%)</title><rect x="213.1" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.1" y="350.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="213.1" y="323.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="216.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$573/1700793107.compare (99 samples, 0.30%)</title><rect x="213.7" y="435.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (99 samples, 0.30%)</title><rect x="213.7" y="419.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (99 samples, 0.30%)</title><rect x="213.7" y="403.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (99 samples, 0.30%)</title><rect x="213.7" y="387.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$571/339660416.apply (99 samples, 0.30%)</title><rect x="213.7" y="371.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (99 samples, 0.30%)</title><rect x="213.7" y="355.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (99 samples, 0.30%)</title><rect x="213.7" y="339.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (99 samples, 0.30%)</title><rect x="213.7" y="323.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="216.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (6,456 samples, 19.86%)</title><rect x="217.3" y="579.0" width="234.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.3" y="590.0">ru/mail/polis/dao/zvladn7/LsmDA..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (6,456 samples, 19.86%)</title><rect x="217.3" y="563.0" width="234.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.3" y="574.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (48 samples, 0.15%)</title><rect x="217.3" y="547.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.3" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (18 samples, 0.06%)</title><rect x="217.3" y="531.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="220.3" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (30 samples, 0.09%)</title><rect x="218.0" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (30 samples, 0.09%)</title><rect x="218.0" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (30 samples, 0.09%)</title><rect x="218.0" y="499.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="221.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$598/122839888.accept (6,408 samples, 19.72%)</title><rect x="219.0" y="547.0" width="232.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.0" y="558.0">ru/mail/polis/dao/zvladn7/LsmDA..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (6,408 samples, 19.72%)</title><rect x="219.0" y="531.0" width="232.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.0" y="542.0">ru/mail/polis/dao/zvladn7/LsmDA..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (6,408 samples, 19.72%)</title><rect x="219.0" y="515.0" width="232.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.0" y="526.0">ru/mail/polis/dao/zvladn7/SSTab..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (39 samples, 0.12%)</title><rect x="219.0" y="499.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="222.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (6,369 samples, 19.60%)</title><rect x="220.5" y="499.0" width="231.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.5" y="510.0">ru/mail/polis/dao/zvladn7/SSTab..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (6,369 samples, 19.60%)</title><rect x="220.5" y="483.0" width="231.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.5" y="494.0">ru/mail/polis/dao/zvladn7/SSTab..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (6,369 samples, 19.60%)</title><rect x="220.5" y="467.0" width="231.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.5" y="478.0">ru/mail/polis/dao/zvladn7/SSTab..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,252 samples, 13.08%)</title><rect x="220.5" y="451.0" width="154.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.5" y="462.0">java/nio/ByteBuffer...</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,633 samples, 8.10%)</title><rect x="220.5" y="435.0" width="95.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="223.5" y="446.0">java.nio.He..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,619 samples, 4.98%)</title><rect x="316.0" y="435.0" width="58.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.0" y="446.0">java/n..</text>
</g>
<g>
<title>byte[] (1,619 samples, 4.98%)</title><rect x="316.0" y="419.0" width="58.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="319.0" y="430.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (2,117 samples, 6.51%)</title><rect x="374.8" y="451.0" width="76.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.8" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,117 samples, 6.51%)</title><rect x="374.8" y="435.0" width="76.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.8" y="446.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,441 samples, 4.43%)</title><rect x="374.8" y="419.0" width="52.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="377.8" y="430.0">java...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (676 samples, 2.08%)</title><rect x="427.1" y="419.0" width="24.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.1" y="430.0">j..</text>
</g>
<g>
<title>byte[] (676 samples, 2.08%)</title><rect x="427.1" y="403.0" width="24.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="430.1" y="414.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (251 samples, 0.77%)</title><rect x="451.7" y="595.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (77 samples, 0.24%)</title><rect x="451.7" y="579.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (27 samples, 0.08%)</title><rect x="451.7" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (27 samples, 0.08%)</title><rect x="451.7" y="547.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="454.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (50 samples, 0.15%)</title><rect x="452.7" y="563.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (50 samples, 0.15%)</title><rect x="452.7" y="547.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="455.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (13 samples, 0.04%)</title><rect x="454.5" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (13 samples, 0.04%)</title><rect x="454.5" y="563.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="457.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (50 samples, 0.15%)</title><rect x="454.9" y="579.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (50 samples, 0.15%)</title><rect x="454.9" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (50 samples, 0.15%)</title><rect x="454.9" y="547.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (50 samples, 0.15%)</title><rect x="454.9" y="531.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="457.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (57 samples, 0.18%)</title><rect x="456.8" y="579.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.8" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (15 samples, 0.05%)</title><rect x="456.8" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.8" y="574.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (15 samples, 0.05%)</title><rect x="456.8" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="459.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (42 samples, 0.13%)</title><rect x="457.3" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="457.3" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="457.3" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$566/812341384.get$Lambda (10 samples, 0.03%)</title><rect x="457.3" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.3" y="526.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$566 (10 samples, 0.03%)</title><rect x="457.3" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="460.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (32 samples, 0.10%)</title><rect x="457.7" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.7" y="558.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (32 samples, 0.10%)</title><rect x="457.7" y="531.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="460.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (54 samples, 0.17%)</title><rect x="458.8" y="579.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (54 samples, 0.17%)</title><rect x="458.8" y="563.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="461.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.getLocalValue (140 samples, 0.43%)</title><rect x="460.8" y="627.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (48 samples, 0.15%)</title><rect x="460.8" y="611.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (48 samples, 0.15%)</title><rect x="460.8" y="595.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.15%)</title><rect x="460.8" y="579.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="463.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.active (58 samples, 0.18%)</title><rect x="462.5" y="611.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ResponseValue (30 samples, 0.09%)</title><rect x="462.5" y="595.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="465.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.&lt;init&gt; (28 samples, 0.09%)</title><rect x="463.6" y="595.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.6" y="606.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="463.6" y="579.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="466.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (34 samples, 0.10%)</title><rect x="464.6" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.6" y="622.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.10%)</title><rect x="464.6" y="595.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="467.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (187 samples, 0.58%)</title><rect x="465.9" y="675.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (187 samples, 0.58%)</title><rect x="465.9" y="659.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (187 samples, 0.58%)</title><rect x="465.9" y="643.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$267/757738457.accept (123 samples, 0.38%)</title><rect x="465.9" y="627.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$respond$5 (123 samples, 0.38%)</title><rect x="465.9" y="611.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (123 samples, 0.38%)</title><rect x="465.9" y="595.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (123 samples, 0.38%)</title><rect x="465.9" y="579.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (96 samples, 0.30%)</title><rect x="465.9" y="563.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 0.30%)</title><rect x="465.9" y="547.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.9" y="558.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.30%)</title><rect x="465.9" y="531.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="468.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.08%)</title><rect x="469.4" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.4" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (27 samples, 0.08%)</title><rect x="469.4" y="547.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="472.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$252/969607766.accept (64 samples, 0.20%)</title><rect x="470.3" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (64 samples, 0.20%)</title><rect x="470.3" y="611.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (38 samples, 0.12%)</title><rect x="470.3" y="595.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38 samples, 0.12%)</title><rect x="470.3" y="579.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (38 samples, 0.12%)</title><rect x="470.3" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$596/207995864.apply (38 samples, 0.12%)</title><rect x="470.3" y="547.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$resolveGet$5 (38 samples, 0.12%)</title><rect x="470.3" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.resolveGet (13 samples, 0.04%)</title><rect x="470.3" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.3" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.max (9 samples, 0.03%)</title><rect x="470.3" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.3" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (9 samples, 0.03%)</title><rect x="470.3" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.3" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.03%)</title><rect x="470.3" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$622/2108555941.apply (9 samples, 0.03%)</title><rect x="470.3" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (9 samples, 0.03%)</title><rect x="470.3" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Long (9 samples, 0.03%)</title><rect x="470.3" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="473.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toResponse (25 samples, 0.08%)</title><rect x="470.8" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toResponse (25 samples, 0.08%)</title><rect x="470.8" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue$$Lambda$623/1033816638.apply (25 samples, 0.08%)</title><rect x="470.8" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.lambda$toResponse$0 (25 samples, 0.08%)</title><rect x="470.8" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (25 samples, 0.08%)</title><rect x="470.8" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.06%)</title><rect x="471.0" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.03%)</title><rect x="471.2" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="474.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (26 samples, 0.08%)</title><rect x="471.7" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.08%)</title><rect x="471.7" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.7" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="471.7" y="563.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="474.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (274 samples, 0.84%)</title><rect x="472.7" y="675.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (189 samples, 0.58%)</title><rect x="472.7" y="659.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (186 samples, 0.57%)</title><rect x="472.7" y="643.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (186 samples, 0.57%)</title><rect x="472.7" y="627.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (186 samples, 0.57%)</title><rect x="472.7" y="611.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="475.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (85 samples, 0.26%)</title><rect x="479.5" y="659.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.25%)</title><rect x="479.5" y="643.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (81 samples, 0.25%)</title><rect x="479.5" y="627.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (81 samples, 0.25%)</title><rect x="479.5" y="611.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="482.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/728377575.run (210 samples, 0.65%)</title><rect x="482.6" y="675.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (210 samples, 0.65%)</title><rect x="482.6" y="659.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (210 samples, 0.65%)</title><rect x="482.6" y="643.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (210 samples, 0.65%)</title><rect x="482.6" y="627.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (210 samples, 0.65%)</title><rect x="482.6" y="611.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (210 samples, 0.65%)</title><rect x="482.6" y="595.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (210 samples, 0.65%)</title><rect x="482.6" y="579.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (210 samples, 0.65%)</title><rect x="482.6" y="563.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (210 samples, 0.65%)</title><rect x="482.6" y="547.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (210 samples, 0.65%)</title><rect x="482.6" y="531.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (210 samples, 0.65%)</title><rect x="482.6" y="515.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (185 samples, 0.57%)</title><rect x="482.6" y="499.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="482.6" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="482.6" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$451/1510887303.get$Lambda (10 samples, 0.03%)</title><rect x="482.6" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$451 (10 samples, 0.03%)</title><rect x="482.6" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="485.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (171 samples, 0.53%)</title><rect x="483.1" y="483.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (26 samples, 0.08%)</title><rect x="483.1" y="467.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="486.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (145 samples, 0.45%)</title><rect x="484.1" y="467.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (145 samples, 0.45%)</title><rect x="484.1" y="451.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (145 samples, 0.45%)</title><rect x="484.1" y="435.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (63 samples, 0.19%)</title><rect x="484.1" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.07%)</title><rect x="484.1" y="403.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="487.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$469/966032884.apply (35 samples, 0.11%)</title><rect x="484.9" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (35 samples, 0.11%)</title><rect x="484.9" y="387.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (35 samples, 0.11%)</title><rect x="484.9" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.9" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.02%)</title><rect x="484.9" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.9" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (8 samples, 0.02%)</title><rect x="484.9" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.9" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (8 samples, 0.02%)</title><rect x="484.9" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="487.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (27 samples, 0.08%)</title><rect x="485.2" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (23 samples, 0.07%)</title><rect x="485.3" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (23 samples, 0.07%)</title><rect x="485.3" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (9 samples, 0.03%)</title><rect x="485.3" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="488.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="485.7" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="485.7" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="485.7" y="275.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="488.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (82 samples, 0.25%)</title><rect x="486.3" y="419.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (82 samples, 0.25%)</title><rect x="486.3" y="403.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$413/1822227371.apply (82 samples, 0.25%)</title><rect x="486.3" y="387.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (82 samples, 0.25%)</title><rect x="486.3" y="371.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (82 samples, 0.25%)</title><rect x="486.3" y="355.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$271/986482513.apply (82 samples, 0.25%)</title><rect x="486.3" y="339.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (82 samples, 0.25%)</title><rect x="486.3" y="323.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="486.3" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="486.3" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$469/966032884.get$Lambda (11 samples, 0.03%)</title><rect x="486.3" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$469 (11 samples, 0.03%)</title><rect x="486.3" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="489.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.07%)</title><rect x="486.7" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.07%)</title><rect x="486.7" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (10 samples, 0.03%)</title><rect x="486.7" y="275.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="489.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="487.1" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="487.1" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="487.1" y="243.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="490.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (48 samples, 0.15%)</title><rect x="487.6" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (35 samples, 0.11%)</title><rect x="487.6" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (19 samples, 0.06%)</title><rect x="487.6" y="275.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="490.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (16 samples, 0.05%)</title><rect x="488.3" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (16 samples, 0.05%)</title><rect x="488.3" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="488.3" y="243.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="491.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.04%)</title><rect x="488.9" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.03%)</title><rect x="489.0" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (10 samples, 0.03%)</title><rect x="489.0" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (10 samples, 0.03%)</title><rect x="489.0" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (10 samples, 0.03%)</title><rect x="489.0" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (10 samples, 0.03%)</title><rect x="489.0" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.03%)</title><rect x="489.0" y="195.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="492.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (25 samples, 0.08%)</title><rect x="489.3" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (25 samples, 0.08%)</title><rect x="489.3" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (25 samples, 0.08%)</title><rect x="489.3" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (25 samples, 0.08%)</title><rect x="489.3" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (25 samples, 0.08%)</title><rect x="489.3" y="435.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.3" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (25 samples, 0.08%)</title><rect x="489.3" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.3" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (10 samples, 0.03%)</title><rect x="489.3" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.3" y="414.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (10 samples, 0.03%)</title><rect x="489.3" y="387.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="492.3" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (15 samples, 0.05%)</title><rect x="489.7" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (15 samples, 0.05%)</title><rect x="489.7" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="492.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,634 samples, 5.03%)</title><rect x="490.2" y="675.0" width="59.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.2" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,634 samples, 5.03%)</title><rect x="490.2" y="659.0" width="59.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.2" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,293 samples, 3.98%)</title><rect x="490.2" y="643.0" width="47.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.2" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/1972380626.run (1,293 samples, 3.98%)</title><rect x="490.2" y="627.0" width="47.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.2" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,293 samples, 3.98%)</title><rect x="490.2" y="611.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.2" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (27 samples, 0.08%)</title><rect x="490.2" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (27 samples, 0.08%)</title><rect x="490.2" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (27 samples, 0.08%)</title><rect x="490.2" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (27 samples, 0.08%)</title><rect x="490.2" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="490.2" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (14 samples, 0.04%)</title><rect x="490.2" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="490.2" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.04%)</title><rect x="490.2" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.04%)</title><rect x="490.2" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.2" y="478.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="490.2" y="451.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="493.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.04%)</title><rect x="490.7" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="490.7" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="490.7" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$450/261420098.get$Lambda (13 samples, 0.04%)</title><rect x="490.7" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$450 (13 samples, 0.04%)</title><rect x="490.7" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="493.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,266 samples, 3.90%)</title><rect x="491.2" y="595.0" width="46.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.2" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,266 samples, 3.90%)</title><rect x="491.2" y="579.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.2" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,266 samples, 3.90%)</title><rect x="491.2" y="563.0" width="46.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.2" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,266 samples, 3.90%)</title><rect x="491.2" y="547.0" width="46.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.2" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (613 samples, 1.89%)</title><rect x="491.2" y="531.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (613 samples, 1.89%)</title><rect x="491.2" y="515.0" width="22.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (613 samples, 1.89%)</title><rect x="491.2" y="499.0" width="22.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.2" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (613 samples, 1.89%)</title><rect x="491.2" y="483.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.2" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (613 samples, 1.89%)</title><rect x="491.2" y="467.0" width="22.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.2" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (613 samples, 1.89%)</title><rect x="491.2" y="451.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.2" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (613 samples, 1.89%)</title><rect x="491.2" y="435.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.2" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (598 samples, 1.84%)</title><rect x="491.2" y="419.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (598 samples, 1.84%)</title><rect x="491.2" y="403.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (589 samples, 1.81%)</title><rect x="491.2" y="387.0" width="21.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.2" y="398.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (10 samples, 0.03%)</title><rect x="491.2" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="494.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$233/1134134668.apply (553 samples, 1.70%)</title><rect x="491.6" y="371.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (553 samples, 1.70%)</title><rect x="491.6" y="355.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="491.6" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="491.6" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$552/802509715.get$Lambda (8 samples, 0.02%)</title><rect x="491.6" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$552 (8 samples, 0.02%)</title><rect x="491.6" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="494.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (28 samples, 0.09%)</title><rect x="491.9" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (28 samples, 0.09%)</title><rect x="491.9" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (20 samples, 0.06%)</title><rect x="491.9" y="307.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="494.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.02%)</title><rect x="492.6" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.02%)</title><rect x="492.6" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.02%)</title><rect x="492.6" y="275.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="495.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (517 samples, 1.59%)</title><rect x="492.9" y="339.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.14%)</title><rect x="493.1" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.14%)</title><rect x="493.1" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.08%)</title><rect x="493.1" y="291.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="496.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="494.0" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="494.0" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="494.0" y="259.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="497.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (467 samples, 1.44%)</title><rect x="494.7" y="323.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (422 samples, 1.30%)</title><rect x="494.7" y="307.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="494.7" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="494.7" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$543/1035311986.get$Lambda (8 samples, 0.02%)</title><rect x="494.7" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$543 (8 samples, 0.02%)</title><rect x="494.7" y="243.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="497.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/478127438.linkToTargetMethod (19 samples, 0.06%)</title><rect x="495.1" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/211790252.invokeStatic (19 samples, 0.06%)</title><rect x="495.1" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$512/1399809376.get$Lambda (19 samples, 0.06%)</title><rect x="495.1" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$512 (19 samples, 0.06%)</title><rect x="495.1" y="243.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="498.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (77 samples, 0.24%)</title><rect x="495.8" y="291.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.09%)</title><rect x="495.8" y="275.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.8" y="286.0"></text>
</g>
<g>
<title>java/util/List.spliterator (10 samples, 0.03%)</title><rect x="495.8" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.8" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (10 samples, 0.03%)</title><rect x="495.8" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.06%)</title><rect x="496.2" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.2" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.06%)</title><rect x="496.2" y="243.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="499.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (19 samples, 0.06%)</title><rect x="496.8" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.06%)</title><rect x="496.8" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (19 samples, 0.06%)</title><rect x="496.8" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$507/50487937.get (7 samples, 0.02%)</title><rect x="497.0" y="227.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (7 samples, 0.02%)</title><rect x="497.0" y="211.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="500.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (8 samples, 0.02%)</title><rect x="497.2" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (8 samples, 0.02%)</title><rect x="497.2" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.2" y="222.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (8 samples, 0.02%)</title><rect x="497.2" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.2" y="206.0"></text>
</g>
<g>
<title>java.util.OptionalLong (8 samples, 0.02%)</title><rect x="497.2" y="179.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="500.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (30 samples, 0.09%)</title><rect x="497.5" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (30 samples, 0.09%)</title><rect x="497.5" y="259.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="500.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.16%)</title><rect x="498.6" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.06%)</title><rect x="498.6" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.04%)</title><rect x="498.6" y="259.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="501.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="499.1" y="259.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="499.1" y="243.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="499.1" y="227.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="502.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (32 samples, 0.10%)</title><rect x="499.3" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (32 samples, 0.10%)</title><rect x="499.3" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.06%)</title><rect x="499.3" y="243.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="502.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="500.0" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="500.0" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="500.0" y="211.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="503.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (10 samples, 0.03%)</title><rect x="500.5" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="503.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (8 samples, 0.02%)</title><rect x="500.8" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="503.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="501.1" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="504.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (201 samples, 0.62%)</title><rect x="501.7" y="291.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$512/1399809376.run (201 samples, 0.62%)</title><rect x="501.7" y="275.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (201 samples, 0.62%)</title><rect x="501.7" y="259.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="501.7" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="501.7" y="227.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (24 samples, 0.07%)</title><rect x="502.3" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.07%)</title><rect x="502.3" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.04%)</title><rect x="502.3" y="211.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="505.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="502.8" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="502.8" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.8" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="502.8" y="179.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="505.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (10 samples, 0.03%)</title><rect x="503.2" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="506.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (7 samples, 0.02%)</title><rect x="503.6" y="243.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="503.6" y="227.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="506.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (39 samples, 0.12%)</title><rect x="503.8" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (39 samples, 0.12%)</title><rect x="503.8" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="503.8" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="503.8" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$541/2014356283.get$Lambda (9 samples, 0.03%)</title><rect x="503.8" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$541 (9 samples, 0.03%)</title><rect x="503.8" y="163.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="506.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.09%)</title><rect x="504.1" y="211.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.09%)</title><rect x="504.1" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.09%)</title><rect x="504.1" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.06%)</title><rect x="504.1" y="163.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="507.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="504.9" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="504.9" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="504.9" y="131.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="507.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (33 samples, 0.10%)</title><rect x="505.2" y="243.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.10%)</title><rect x="505.2" y="227.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (33 samples, 0.10%)</title><rect x="505.2" y="211.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.10%)</title><rect x="505.2" y="195.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.02%)</title><rect x="505.2" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="505.2" y="163.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="508.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (26 samples, 0.08%)</title><rect x="505.5" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (26 samples, 0.08%)</title><rect x="505.5" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.5" y="174.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.08%)</title><rect x="505.5" y="147.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="508.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (70 samples, 0.22%)</title><rect x="506.4" y="243.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (33 samples, 0.10%)</title><rect x="506.4" y="227.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="509.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (37 samples, 0.11%)</title><rect x="507.6" y="227.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.11%)</title><rect x="507.6" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (37 samples, 0.11%)</title><rect x="507.6" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.11%)</title><rect x="507.6" y="179.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.02%)</title><rect x="507.6" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.02%)</title><rect x="507.6" y="147.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="510.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.09%)</title><rect x="507.9" y="163.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.09%)</title><rect x="507.9" y="147.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.9" y="158.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="507.9" y="131.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="510.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (29 samples, 0.09%)</title><rect x="509.0" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (29 samples, 0.09%)</title><rect x="509.0" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (29 samples, 0.09%)</title><rect x="509.0" y="259.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (29 samples, 0.09%)</title><rect x="509.0" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (15 samples, 0.05%)</title><rect x="509.0" y="227.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="512.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="509.5" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="509.5" y="211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="509.5" y="195.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="512.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler.apply (45 samples, 0.14%)</title><rect x="510.0" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (39 samples, 0.12%)</title><rect x="510.2" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (14 samples, 0.04%)</title><rect x="510.2" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="513.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (25 samples, 0.08%)</title><rect x="510.7" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.03%)</title><rect x="510.7" y="259.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="513.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="511.1" y="259.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="514.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$417/718591365.apply (26 samples, 0.08%)</title><rect x="511.7" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (26 samples, 0.08%)</title><rect x="511.7" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (14 samples, 0.04%)</title><rect x="511.7" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (14 samples, 0.04%)</title><rect x="511.7" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.7" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (14 samples, 0.04%)</title><rect x="511.7" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.7" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (14 samples, 0.04%)</title><rect x="511.7" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="514.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.04%)</title><rect x="512.2" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="512.2" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="515.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.03%)</title><rect x="512.6" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.03%)</title><rect x="512.6" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$419/2116255026.apply (9 samples, 0.03%)</title><rect x="512.6" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (9 samples, 0.03%)</title><rect x="512.6" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (9 samples, 0.03%)</title><rect x="512.6" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="512.6" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="515.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$495/586974792.apply (15 samples, 0.05%)</title><rect x="512.9" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (15 samples, 0.05%)</title><rect x="512.9" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (15 samples, 0.05%)</title><rect x="512.9" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="515.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (653 samples, 2.01%)</title><rect x="513.5" y="531.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.5" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (42 samples, 0.13%)</title><rect x="513.5" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (42 samples, 0.13%)</title><rect x="513.5" y="499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.5" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (42 samples, 0.13%)</title><rect x="513.5" y="483.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.5" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (42 samples, 0.13%)</title><rect x="513.5" y="467.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.13%)</title><rect x="513.5" y="451.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.5" y="462.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.13%)</title><rect x="513.5" y="435.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="516.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (63 samples, 0.19%)</title><rect x="515.0" y="515.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.0" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.02%)</title><rect x="515.0" y="499.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="518.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="515.2" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="515.2" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="515.2" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.2" y="478.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="515.2" y="451.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="518.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.03%)</title><rect x="515.7" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.03%)</title><rect x="515.7" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.7" y="494.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="515.7" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="518.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (34 samples, 0.10%)</title><rect x="516.0" y="499.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.10%)</title><rect x="516.0" y="483.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.05%)</title><rect x="516.0" y="467.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.05%)</title><rect x="516.7" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.7" y="478.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="516.7" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="519.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (164 samples, 0.50%)</title><rect x="517.3" y="515.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (164 samples, 0.50%)</title><rect x="517.3" y="499.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (164 samples, 0.50%)</title><rect x="517.3" y="483.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.02%)</title><rect x="517.5" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="520.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.05%)</title><rect x="517.8" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="520.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="518.6" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="518.6" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.get$Lambda (13 samples, 0.04%)</title><rect x="518.6" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.6" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$199 (13 samples, 0.04%)</title><rect x="518.6" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="521.6" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.04%)</title><rect x="519.0" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.0" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.04%)</title><rect x="519.0" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="522.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (90 samples, 0.28%)</title><rect x="519.5" y="467.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.accept (90 samples, 0.28%)</title><rect x="519.5" y="451.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (90 samples, 0.28%)</title><rect x="519.5" y="435.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (26 samples, 0.08%)</title><rect x="519.5" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$211/974200958.accept (26 samples, 0.08%)</title><rect x="519.5" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (26 samples, 0.08%)</title><rect x="519.5" y="387.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="519.5" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="519.5" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="519.5" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="519.5" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.08%)</title><rect x="519.5" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="519.5" y="291.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="522.5" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (32 samples, 0.10%)</title><rect x="520.4" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.4" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (32 samples, 0.10%)</title><rect x="520.4" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (22 samples, 0.07%)</title><rect x="520.4" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.07%)</title><rect x="520.4" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.07%)</title><rect x="520.4" y="355.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="523.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (10 samples, 0.03%)</title><rect x="521.2" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.2" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (10 samples, 0.03%)</title><rect x="521.2" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="524.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.10%)</title><rect x="521.6" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (32 samples, 0.10%)</title><rect x="521.6" y="403.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="524.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (14 samples, 0.04%)</title><rect x="522.7" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.04%)</title><rect x="522.7" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="525.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (384 samples, 1.18%)</title><rect x="523.2" y="515.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.2" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (22 samples, 0.07%)</title><rect x="523.2" y="499.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="526.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.06%)</title><rect x="524.0" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.0" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.06%)</title><rect x="524.0" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.0" y="494.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.06%)</title><rect x="524.0" y="467.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="527.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (35 samples, 0.11%)</title><rect x="524.8" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.11%)</title><rect x="524.8" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.04%)</title><rect x="524.8" y="467.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="527.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.07%)</title><rect x="525.2" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.2" y="478.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.07%)</title><rect x="525.2" y="451.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="528.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (306 samples, 0.94%)</title><rect x="526.1" y="499.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (95 samples, 0.29%)</title><rect x="526.1" y="483.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.29%)</title><rect x="526.1" y="467.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.14%)</title><rect x="526.1" y="451.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="529.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.15%)</title><rect x="527.7" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.7" y="462.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.15%)</title><rect x="527.7" y="435.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="530.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (51 samples, 0.16%)</title><rect x="529.5" y="483.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (51 samples, 0.16%)</title><rect x="529.5" y="467.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.5" y="478.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.10%)</title><rect x="529.5" y="451.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="532.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.06%)</title><rect x="530.6" y="451.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="533.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (36 samples, 0.11%)</title><rect x="531.4" y="483.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (36 samples, 0.11%)</title><rect x="531.4" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.11%)</title><rect x="531.4" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.06%)</title><rect x="531.4" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="534.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="532.1" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.1" y="446.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="532.1" y="419.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="535.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.15%)</title><rect x="532.7" y="483.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.15%)</title><rect x="532.7" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.15%)</title><rect x="532.7" y="451.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.15%)</title><rect x="532.7" y="435.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.15%)</title><rect x="532.7" y="419.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.7" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.15%)</title><rect x="532.7" y="403.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="535.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (74 samples, 0.23%)</title><rect x="534.5" y="483.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 0.09%)</title><rect x="534.5" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.5" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 0.09%)</title><rect x="534.5" y="451.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="537.5" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (27 samples, 0.08%)</title><rect x="535.5" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.5" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (27 samples, 0.08%)</title><rect x="535.5" y="451.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="538.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$500/762825086.apply (18 samples, 0.06%)</title><rect x="536.5" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (18 samples, 0.06%)</title><rect x="536.5" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.5" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.06%)</title><rect x="536.5" y="435.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="539.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (341 samples, 1.05%)</title><rect x="537.2" y="643.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (341 samples, 1.05%)</title><rect x="537.2" y="627.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (341 samples, 1.05%)</title><rect x="537.2" y="611.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/1972380626.run (341 samples, 1.05%)</title><rect x="537.2" y="595.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (341 samples, 1.05%)</title><rect x="537.2" y="579.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (34 samples, 0.10%)</title><rect x="537.2" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="537.2" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="537.2" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$386/665730287.get$Lambda (8 samples, 0.02%)</title><rect x="537.4" y="515.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$386 (8 samples, 0.02%)</title><rect x="537.4" y="499.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="540.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (11 samples, 0.03%)</title><rect x="537.6" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="540.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (10 samples, 0.03%)</title><rect x="538.0" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (10 samples, 0.03%)</title><rect x="538.0" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (304 samples, 0.94%)</title><rect x="538.4" y="563.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (304 samples, 0.94%)</title><rect x="538.4" y="547.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (304 samples, 0.94%)</title><rect x="538.4" y="531.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (304 samples, 0.94%)</title><rect x="538.4" y="515.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (304 samples, 0.94%)</title><rect x="538.4" y="499.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (304 samples, 0.94%)</title><rect x="538.4" y="483.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.08%)</title><rect x="538.4" y="467.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.08%)</title><rect x="538.4" y="451.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.4" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.08%)</title><rect x="538.4" y="435.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="541.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.04%)</title><rect x="539.4" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.04%)</title><rect x="539.4" y="451.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="542.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$518/152025560.run (152 samples, 0.47%)</title><rect x="539.9" y="467.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (152 samples, 0.47%)</title><rect x="539.9" y="451.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (152 samples, 0.47%)</title><rect x="539.9" y="435.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (38 samples, 0.12%)</title><rect x="539.9" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.9" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (27 samples, 0.08%)</title><rect x="539.9" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.9" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (9 samples, 0.03%)</title><rect x="539.9" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.9" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (9 samples, 0.03%)</title><rect x="539.9" y="371.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="542.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.06%)</title><rect x="540.2" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.2" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.06%)</title><rect x="540.2" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="543.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (11 samples, 0.03%)</title><rect x="540.8" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.03%)</title><rect x="540.8" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.03%)</title><rect x="540.8" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (114 samples, 0.35%)</title><rect x="541.2" y="419.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.03%)</title><rect x="541.2" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.2" y="414.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.03%)</title><rect x="541.2" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.2" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="541.2" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="544.2" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="541.2" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.2" y="366.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="541.2" y="339.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="544.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (104 samples, 0.32%)</title><rect x="541.6" y="403.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (39 samples, 0.12%)</title><rect x="541.6" y="387.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.03%)</title><rect x="541.6" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.6" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (11 samples, 0.03%)</title><rect x="541.6" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.03%)</title><rect x="541.6" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.03%)</title><rect x="541.6" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.create (11 samples, 0.03%)</title><rect x="541.6" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.6" y="318.0"></text>
</g>
<g>
<title>java.time.Instant (11 samples, 0.03%)</title><rect x="541.6" y="291.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="544.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (10 samples, 0.03%)</title><rect x="542.0" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.0" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (10 samples, 0.03%)</title><rect x="542.0" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="542.0" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="542.0" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.0" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="542.0" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.0" y="318.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="542.0" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="545.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (11 samples, 0.03%)</title><rect x="542.5" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.5" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (11 samples, 0.03%)</title><rect x="542.5" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.5" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (11 samples, 0.03%)</title><rect x="542.5" y="339.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="545.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (20 samples, 0.06%)</title><rect x="543.0" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.03%)</title><rect x="543.0" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.0" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.03%)</title><rect x="543.0" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (11 samples, 0.03%)</title><rect x="543.0" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.03%)</title><rect x="543.0" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="546.0" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (9 samples, 0.03%)</title><rect x="543.4" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.4" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (9 samples, 0.03%)</title><rect x="543.4" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.4" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (9 samples, 0.03%)</title><rect x="543.4" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="546.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (45 samples, 0.14%)</title><rect x="543.7" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (10 samples, 0.03%)</title><rect x="543.7" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="546.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (35 samples, 0.11%)</title><rect x="544.1" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (9 samples, 0.03%)</title><rect x="544.1" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.03%)</title><rect x="544.1" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.03%)</title><rect x="544.1" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (9 samples, 0.03%)</title><rect x="544.1" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="547.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.08%)</title><rect x="544.4" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.08%)</title><rect x="544.4" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (23 samples, 0.07%)</title><rect x="544.4" y="323.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="547.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (75 samples, 0.23%)</title><rect x="545.4" y="467.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (75 samples, 0.23%)</title><rect x="545.4" y="451.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (75 samples, 0.23%)</title><rect x="545.4" y="435.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (75 samples, 0.23%)</title><rect x="545.4" y="419.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (66 samples, 0.20%)</title><rect x="545.4" y="403.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 0.20%)</title><rect x="545.4" y="387.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 0.13%)</title><rect x="545.4" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler$$Lambda$617/230292646.apply (42 samples, 0.13%)</title><rect x="545.4" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler.lambda$apply$0 (42 samples, 0.13%)</title><rect x="545.4" y="339.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.active (21 samples, 0.06%)</title><rect x="545.4" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.4" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ResponseValue (13 samples, 0.04%)</title><rect x="545.4" y="307.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="548.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.&lt;init&gt; (8 samples, 0.02%)</title><rect x="545.9" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.9" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.02%)</title><rect x="545.9" y="291.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="548.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler.getValue (21 samples, 0.06%)</title><rect x="546.1" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.1" y="334.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.06%)</title><rect x="546.1" y="307.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="549.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (24 samples, 0.07%)</title><rect x="546.9" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (24 samples, 0.07%)</title><rect x="546.9" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$543/1035311986.accept (24 samples, 0.07%)</title><rect x="546.9" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (24 samples, 0.07%)</title><rect x="546.9" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.07%)</title><rect x="546.9" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.07%)</title><rect x="546.9" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24 samples, 0.07%)</title><rect x="546.9" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$552/802509715.apply (24 samples, 0.07%)</title><rect x="546.9" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (24 samples, 0.07%)</title><rect x="546.9" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (24 samples, 0.07%)</title><rect x="546.9" y="227.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="549.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (9 samples, 0.03%)</title><rect x="547.8" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.8" y="414.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="547.8" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="550.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (37 samples, 0.11%)</title><rect x="548.1" y="467.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (37 samples, 0.11%)</title><rect x="548.1" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (37 samples, 0.11%)</title><rect x="548.1" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (37 samples, 0.11%)</title><rect x="548.1" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (37 samples, 0.11%)</title><rect x="548.1" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (37 samples, 0.11%)</title><rect x="548.1" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (37 samples, 0.11%)</title><rect x="548.1" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.02%)</title><rect x="548.1" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="548.1" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="551.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.09%)</title><rect x="548.4" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.09%)</title><rect x="548.4" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.09%)</title><rect x="548.4" y="323.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="551.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/1313064354.run (2,638 samples, 8.12%)</title><rect x="549.6" y="675.0" width="95.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.6" y="686.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (2,638 samples, 8.12%)</title><rect x="549.6" y="659.0" width="95.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.6" y="670.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$575/1802415425.process (2,480 samples, 7.63%)</title><rect x="549.6" y="643.0" width="90.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.6" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$1 (2,480 samples, 7.63%)</title><rect x="549.6" y="627.0" width="90.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.6" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleGet (2,480 samples, 7.63%)</title><rect x="549.6" y="611.0" width="90.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.6" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.11%)</title><rect x="549.6" y="595.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.11%)</title><rect x="549.6" y="579.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$579/1917370639.get$Lambda (19 samples, 0.06%)</title><rect x="549.6" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$579 (19 samples, 0.06%)</title><rect x="549.6" y="547.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="552.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$582/946987052.get$Lambda (18 samples, 0.06%)</title><rect x="550.2" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$582 (18 samples, 0.06%)</title><rect x="550.2" y="547.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="553.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleGetOrProxy (2,371 samples, 7.29%)</title><rect x="550.9" y="595.0" width="86.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.9" y="606.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/AbstractCollection.toString (337 samples, 1.04%)</title><rect x="551.1" y="579.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.1" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.07%)</title><rect x="551.1" y="563.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="554.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (32 samples, 0.10%)</title><rect x="552.0" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (32 samples, 0.10%)</title><rect x="552.0" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.0" y="558.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.10%)</title><rect x="552.0" y="531.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="555.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (126 samples, 0.39%)</title><rect x="553.1" y="563.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (126 samples, 0.39%)</title><rect x="553.1" y="547.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (126 samples, 0.39%)</title><rect x="553.1" y="531.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (126 samples, 0.39%)</title><rect x="553.1" y="515.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (126 samples, 0.39%)</title><rect x="553.1" y="499.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.1" y="510.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.39%)</title><rect x="553.1" y="483.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="556.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (105 samples, 0.32%)</title><rect x="557.7" y="563.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.32%)</title><rect x="557.7" y="547.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.06%)</title><rect x="557.7" y="531.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="560.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (85 samples, 0.26%)</title><rect x="558.4" y="531.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.4" y="542.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.26%)</title><rect x="558.4" y="515.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="561.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (50 samples, 0.15%)</title><rect x="561.5" y="563.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (40 samples, 0.12%)</title><rect x="561.5" y="547.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (40 samples, 0.12%)</title><rect x="561.5" y="531.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="564.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (10 samples, 0.03%)</title><rect x="563.0" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (10 samples, 0.03%)</title><rect x="563.0" y="531.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="566.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (29 samples, 0.09%)</title><rect x="563.3" y="579.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (29 samples, 0.09%)</title><rect x="563.3" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (13 samples, 0.04%)</title><rect x="563.3" y="547.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="566.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="563.8" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (15 samples, 0.05%)</title><rect x="563.8" y="531.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="566.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (46 samples, 0.14%)</title><rect x="564.4" y="579.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.14%)</title><rect x="564.4" y="563.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.14%)</title><rect x="564.4" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="564.4" y="531.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="567.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.10%)</title><rect x="564.9" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.9" y="542.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.10%)</title><rect x="564.9" y="515.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="567.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$579/1917370639.execute (60 samples, 0.18%)</title><rect x="566.0" y="579.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleGet$2 (60 samples, 0.18%)</title><rect x="566.0" y="563.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localGet (60 samples, 0.18%)</title><rect x="566.0" y="547.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="566.0" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="566.0" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$589/1998514835.get$Lambda (18 samples, 0.06%)</title><rect x="566.0" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$589 (18 samples, 0.06%)</title><rect x="566.0" y="483.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="569.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (42 samples, 0.13%)</title><rect x="566.7" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (42 samples, 0.13%)</title><rect x="566.7" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (22 samples, 0.07%)</title><rect x="566.7" y="499.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="569.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (20 samples, 0.06%)</title><rect x="567.5" y="499.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="570.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$582/946987052.resolve (92 samples, 0.28%)</title><rect x="568.2" y="579.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveGet (92 samples, 0.28%)</title><rect x="568.2" y="563.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (12 samples, 0.04%)</title><rect x="568.2" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12 samples, 0.04%)</title><rect x="568.2" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (8 samples, 0.02%)</title><rect x="568.2" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="571.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (80 samples, 0.25%)</title><rect x="568.7" y="547.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.02%)</title><rect x="568.9" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="571.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (61 samples, 0.19%)</title><rect x="569.2" y="531.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$246/1810483428.accept (61 samples, 0.19%)</title><rect x="569.2" y="515.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (61 samples, 0.19%)</title><rect x="569.2" y="499.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.07%)</title><rect x="569.2" y="483.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.07%)</title><rect x="569.2" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$252/969607766.get$Lambda (22 samples, 0.07%)</title><rect x="569.2" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.2" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ConflictResolver$$Lambda$252 (22 samples, 0.07%)</title><rect x="569.2" y="435.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="572.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (39 samples, 0.12%)</title><rect x="570.0" y="483.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (39 samples, 0.12%)</title><rect x="570.0" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.08%)</title><rect x="570.0" y="451.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="573.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="571.0" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="571.0" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.03%)</title><rect x="571.0" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="574.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (1,489 samples, 4.58%)</title><rect x="571.6" y="579.0" width="54.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.6" y="590.0">ru/ma..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.02%)</title><rect x="571.6" y="563.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="574.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,482 samples, 4.56%)</title><rect x="571.8" y="563.0" width="53.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.8" y="574.0">java/..</text>
</g>
<g>
<title>java/util/HashSet.iterator (10 samples, 0.03%)</title><rect x="571.8" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (10 samples, 0.03%)</title><rect x="571.8" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.8" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (10 samples, 0.03%)</title><rect x="571.8" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="574.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$185/1336536757.accept (1,472 samples, 4.53%)</title><rect x="572.2" y="547.0" width="53.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.2" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (1,472 samples, 4.53%)</title><rect x="572.2" y="531.0" width="53.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.2" y="542.0">ru/ma..</text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.04%)</title><rect x="572.2" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.04%)</title><rect x="572.2" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.04%)</title><rect x="572.2" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.04%)</title><rect x="572.2" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.04%)</title><rect x="572.2" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="572.2" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="575.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (26 samples, 0.08%)</title><rect x="572.6" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (26 samples, 0.08%)</title><rect x="572.6" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (8 samples, 0.02%)</title><rect x="572.6" y="483.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="575.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.06%)</title><rect x="572.9" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.06%)</title><rect x="572.9" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="572.9" y="451.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="575.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (859 samples, 2.64%)</title><rect x="573.6" y="515.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.6" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (859 samples, 2.64%)</title><rect x="573.6" y="499.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.6" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (859 samples, 2.64%)</title><rect x="573.6" y="483.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.6" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (859 samples, 2.64%)</title><rect x="573.6" y="467.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.6" y="478.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="573.6" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="573.6" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$243/299604129.get$Lambda (9 samples, 0.03%)</title><rect x="573.6" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$243 (9 samples, 0.03%)</title><rect x="573.6" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="576.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.08%)</title><rect x="573.9" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.08%)</title><rect x="573.9" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (16 samples, 0.05%)</title><rect x="573.9" y="419.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="576.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="574.5" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="574.5" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="574.5" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (20 samples, 0.06%)</title><rect x="574.9" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.06%)</title><rect x="574.9" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (9 samples, 0.03%)</title><rect x="574.9" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="577.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="575.2" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="575.2" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.03%)</title><rect x="575.2" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="578.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (26 samples, 0.08%)</title><rect x="575.6" y="451.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="578.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (40 samples, 0.12%)</title><rect x="576.5" y="451.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="579.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (421 samples, 1.30%)</title><rect x="578.0" y="451.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (45 samples, 0.14%)</title><rect x="578.0" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.0" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (33 samples, 0.10%)</title><rect x="578.0" y="419.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.0" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (12 samples, 0.04%)</title><rect x="578.0" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.0" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (12 samples, 0.04%)</title><rect x="578.0" y="387.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="581.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (21 samples, 0.06%)</title><rect x="578.4" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.4" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (21 samples, 0.06%)</title><rect x="578.4" y="387.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="581.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (12 samples, 0.04%)</title><rect x="579.2" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.04%)</title><rect x="579.2" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (12 samples, 0.04%)</title><rect x="579.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (12 samples, 0.04%)</title><rect x="579.2" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.2" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (12 samples, 0.04%)</title><rect x="579.2" y="355.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="582.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (152 samples, 0.47%)</title><rect x="579.6" y="435.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (152 samples, 0.47%)</title><rect x="579.6" y="419.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.6" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.04%)</title><rect x="579.6" y="403.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="582.6" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="580.1" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="583.1" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (16 samples, 0.05%)</title><rect x="580.4" y="403.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="583.4" y="414.0"></text>
</g>
<g>
<title>java.util.TreeSet (11 samples, 0.03%)</title><rect x="581.0" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="584.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="581.4" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="581.4" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.get$Lambda (13 samples, 0.04%)</title><rect x="581.4" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.4" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$199 (13 samples, 0.04%)</title><rect x="581.4" y="355.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="584.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (69 samples, 0.21%)</title><rect x="581.9" y="403.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (69 samples, 0.21%)</title><rect x="581.9" y="387.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.accept (69 samples, 0.21%)</title><rect x="581.9" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (69 samples, 0.21%)</title><rect x="581.9" y="355.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (38 samples, 0.12%)</title><rect x="581.9" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.9" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$211/974200958.accept (24 samples, 0.07%)</title><rect x="581.9" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (24 samples, 0.07%)</title><rect x="581.9" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (24 samples, 0.07%)</title><rect x="581.9" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (24 samples, 0.07%)</title><rect x="581.9" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.9" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.07%)</title><rect x="581.9" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.07%)</title><rect x="581.9" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.07%)</title><rect x="581.9" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.9" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.07%)</title><rect x="581.9" y="211.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="584.9" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (14 samples, 0.04%)</title><rect x="582.7" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.7" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (14 samples, 0.04%)</title><rect x="582.7" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="585.7" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (20 samples, 0.06%)</title><rect x="583.2" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.2" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (20 samples, 0.06%)</title><rect x="583.2" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (12 samples, 0.04%)</title><rect x="583.2" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.04%)</title><rect x="583.2" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.2" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="583.2" y="275.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="586.2" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.02%)</title><rect x="583.7" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.7" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.02%)</title><rect x="583.7" y="291.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="586.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.03%)</title><rect x="584.0" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.0" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.03%)</title><rect x="584.0" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="587.0" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (16 samples, 0.05%)</title><rect x="584.6" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.6" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (16 samples, 0.05%)</title><rect x="584.6" y="387.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="587.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (7 samples, 0.02%)</title><rect x="585.1" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="588.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (149 samples, 0.46%)</title><rect x="585.4" y="435.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.4" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (149 samples, 0.46%)</title><rect x="585.4" y="419.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.4" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (135 samples, 0.42%)</title><rect x="585.4" y="403.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.4" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (135 samples, 0.42%)</title><rect x="585.4" y="387.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.4" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (135 samples, 0.42%)</title><rect x="585.4" y="371.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.4" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (135 samples, 0.42%)</title><rect x="585.4" y="355.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.4" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (31 samples, 0.10%)</title><rect x="585.4" y="339.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="588.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (34 samples, 0.10%)</title><rect x="586.5" y="339.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (34 samples, 0.10%)</title><rect x="586.5" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.5" y="334.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.10%)</title><rect x="586.5" y="307.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="589.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (70 samples, 0.22%)</title><rect x="587.7" y="339.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.22%)</title><rect x="587.7" y="323.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="587.7" y="307.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="590.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.12%)</title><rect x="588.9" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.9" y="318.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.12%)</title><rect x="588.9" y="291.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="591.9" y="302.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (14 samples, 0.04%)</title><rect x="590.3" y="403.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="593.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (30 samples, 0.09%)</title><rect x="590.8" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (30 samples, 0.09%)</title><rect x="590.8" y="419.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="593.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (38 samples, 0.12%)</title><rect x="591.9" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.9" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="591.9" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="594.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 0.04%)</title><rect x="592.2" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="592.2" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="595.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.05%)</title><rect x="592.7" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.05%)</title><rect x="592.7" y="403.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="595.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (208 samples, 0.64%)</title><rect x="593.3" y="451.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.02%)</title><rect x="593.3" y="435.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="596.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (30 samples, 0.09%)</title><rect x="593.5" y="435.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="596.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (7 samples, 0.02%)</title><rect x="594.6" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (7 samples, 0.02%)</title><rect x="594.6" y="419.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="597.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (164 samples, 0.50%)</title><rect x="594.9" y="435.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (164 samples, 0.50%)</title><rect x="594.9" y="419.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Class[] (16 samples, 0.05%)</title><rect x="594.9" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="597.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="595.4" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="598.4" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList (10 samples, 0.03%)</title><rect x="595.8" y="403.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="598.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (59 samples, 0.18%)</title><rect x="596.2" y="403.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (59 samples, 0.18%)</title><rect x="596.2" y="387.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (59 samples, 0.18%)</title><rect x="596.2" y="371.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.2" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (59 samples, 0.18%)</title><rect x="596.2" y="355.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.2" y="366.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (59 samples, 0.18%)</title><rect x="596.2" y="339.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="599.2" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (50 samples, 0.15%)</title><rect x="598.3" y="403.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.3" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (50 samples, 0.15%)</title><rect x="598.3" y="387.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (29 samples, 0.09%)</title><rect x="598.3" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.3" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (29 samples, 0.09%)</title><rect x="598.3" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.3" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (29 samples, 0.09%)</title><rect x="598.3" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.3" y="350.0"></text>
</g>
<g>
<title>java.lang.ref.WeakReference (29 samples, 0.09%)</title><rect x="598.3" y="323.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="601.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (21 samples, 0.06%)</title><rect x="599.4" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (8 samples, 0.02%)</title><rect x="599.4" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (8 samples, 0.02%)</title><rect x="599.4" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="602.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor17.newInstance (13 samples, 0.04%)</title><rect x="599.7" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (13 samples, 0.04%)</title><rect x="599.7" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="602.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (19 samples, 0.06%)</title><rect x="600.1" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.1" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (19 samples, 0.06%)</title><rect x="600.1" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.1" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.06%)</title><rect x="600.1" y="371.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="603.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (109 samples, 0.34%)</title><rect x="600.8" y="451.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (23 samples, 0.07%)</title><rect x="600.8" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (13 samples, 0.04%)</title><rect x="600.8" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="603.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.03%)</title><rect x="601.3" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.03%)</title><rect x="601.3" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.03%)</title><rect x="601.3" y="387.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="604.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="601.7" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="604.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (70 samples, 0.22%)</title><rect x="602.2" y="435.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="602.2" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="602.2" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/229988659.get$Lambda (7 samples, 0.02%)</title><rect x="602.2" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$222 (7 samples, 0.02%)</title><rect x="602.2" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="605.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58 samples, 0.18%)</title><rect x="602.7" y="419.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58 samples, 0.18%)</title><rect x="602.7" y="403.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (27 samples, 0.08%)</title><rect x="602.7" y="387.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="605.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.10%)</title><rect x="603.6" y="387.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.10%)</title><rect x="603.6" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.10%)</title><rect x="603.6" y="355.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="606.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$594/1501237897.apply (574 samples, 1.77%)</title><rect x="604.8" y="515.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleGetOrProxy$4 (574 samples, 1.77%)</title><rect x="604.8" y="499.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (178 samples, 0.55%)</title><rect x="604.8" y="483.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (18 samples, 0.06%)</title><rect x="604.8" y="467.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="607.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (160 samples, 0.49%)</title><rect x="605.4" y="467.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (153 samples, 0.47%)</title><rect x="605.4" y="451.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (153 samples, 0.47%)</title><rect x="605.4" y="435.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.4" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="605.6" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="608.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (22 samples, 0.07%)</title><rect x="606.0" y="419.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="609.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.02%)</title><rect x="606.8" y="419.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="609.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="607.0" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="607.0" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.get$Lambda (14 samples, 0.04%)</title><rect x="607.0" y="387.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.0" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$199 (14 samples, 0.04%)</title><rect x="607.0" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="610.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.02%)</title><rect x="607.5" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.5" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.02%)</title><rect x="607.5" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="610.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (71 samples, 0.22%)</title><rect x="607.8" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$199/299353897.accept (71 samples, 0.22%)</title><rect x="607.8" y="403.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (71 samples, 0.22%)</title><rect x="607.8" y="387.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (29 samples, 0.09%)</title><rect x="607.8" y="371.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$211/974200958.accept (29 samples, 0.09%)</title><rect x="607.8" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.8" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (29 samples, 0.09%)</title><rect x="607.8" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (29 samples, 0.09%)</title><rect x="607.8" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (29 samples, 0.09%)</title><rect x="607.8" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.09%)</title><rect x="607.8" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.09%)</title><rect x="607.8" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.09%)</title><rect x="607.8" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.09%)</title><rect x="607.8" y="243.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="610.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (20 samples, 0.06%)</title><rect x="608.9" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (20 samples, 0.06%)</title><rect x="608.9" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (11 samples, 0.03%)</title><rect x="608.9" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.03%)</title><rect x="608.9" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.03%)</title><rect x="608.9" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="611.9" y="318.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.03%)</title><rect x="609.3" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.3" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.03%)</title><rect x="609.3" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="612.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.07%)</title><rect x="609.6" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.07%)</title><rect x="609.6" y="355.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (16 samples, 0.05%)</title><rect x="610.4" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (16 samples, 0.05%)</title><rect x="610.4" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="613.4" y="414.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (7 samples, 0.02%)</title><rect x="611.0" y="451.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.0" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.02%)</title><rect x="611.0" y="435.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.0" y="446.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.02%)</title><rect x="611.0" y="419.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="614.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.08%)</title><rect x="611.2" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.08%)</title><rect x="611.2" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.08%)</title><rect x="611.2" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="611.2" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="614.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.05%)</title><rect x="611.6" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.6" y="446.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="611.6" y="419.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="614.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.requestBuilderFor (370 samples, 1.14%)</title><rect x="612.2" y="483.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (39 samples, 0.12%)</title><rect x="612.2" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (13 samples, 0.04%)</title><rect x="612.2" y="451.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="615.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (26 samples, 0.08%)</title><rect x="612.7" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (22 samples, 0.07%)</title><rect x="612.8" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (22 samples, 0.07%)</title><rect x="612.8" y="419.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="615.8" y="430.0"></text>
</g>
<g>
<title>java/time/Duration.dividedBy (79 samples, 0.24%)</title><rect x="613.6" y="467.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.6" y="478.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (14 samples, 0.04%)</title><rect x="613.6" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.6" y="462.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (14 samples, 0.04%)</title><rect x="613.6" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.6" y="446.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (14 samples, 0.04%)</title><rect x="613.6" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.6" y="430.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divideAndRound (14 samples, 0.04%)</title><rect x="613.6" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.6" y="414.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (14 samples, 0.04%)</title><rect x="613.6" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.6" y="398.0"></text>
</g>
<g>
<title>java.math.BigDecimal (14 samples, 0.04%)</title><rect x="613.6" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="616.6" y="382.0"></text>
</g>
<g>
<title>java/time/Duration.create (65 samples, 0.20%)</title><rect x="614.1" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.1" y="462.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainder (44 samples, 0.14%)</title><rect x="614.3" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.3" y="446.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainderKnuth (44 samples, 0.14%)</title><rect x="614.3" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.3" y="430.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (15 samples, 0.05%)</title><rect x="614.3" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.3" y="414.0"></text>
</g>
<g>
<title>int[] (15 samples, 0.05%)</title><rect x="614.3" y="387.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="617.3" y="398.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (13 samples, 0.04%)</title><rect x="614.9" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.9" y="414.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (13 samples, 0.04%)</title><rect x="614.9" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.9" y="398.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (13 samples, 0.04%)</title><rect x="614.9" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="614.9" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.9" y="366.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.04%)</title><rect x="614.9" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="617.9" y="350.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.toBigInteger (16 samples, 0.05%)</title><rect x="615.3" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.3" y="414.0"></text>
</g>
<g>
<title>java.math.BigInteger (16 samples, 0.05%)</title><rect x="615.3" y="387.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="618.3" y="398.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (15 samples, 0.05%)</title><rect x="615.9" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.9" y="446.0"></text>
</g>
<g>
<title>java/time/Duration.create (15 samples, 0.05%)</title><rect x="615.9" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.9" y="430.0"></text>
</g>
<g>
<title>java.time.Duration (15 samples, 0.05%)</title><rect x="615.9" y="403.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="618.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (54 samples, 0.17%)</title><rect x="616.5" y="467.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (54 samples, 0.17%)</title><rect x="616.5" y="451.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (54 samples, 0.17%)</title><rect x="616.5" y="435.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.5" y="446.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (54 samples, 0.17%)</title><rect x="616.5" y="419.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (31 samples, 0.10%)</title><rect x="616.5" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.5" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (31 samples, 0.10%)</title><rect x="616.5" y="387.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="619.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$196/1957927701.apply (23 samples, 0.07%)</title><rect x="617.6" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (23 samples, 0.07%)</title><rect x="617.6" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.6" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="617.6" y="371.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="620.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (13 samples, 0.04%)</title><rect x="618.0" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="618.0" y="355.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="621.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.provideURI (198 samples, 0.61%)</title><rect x="618.4" y="467.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.4" y="478.0"></text>
</g>
<g>
<title>java.net.URI (46 samples, 0.14%)</title><rect x="618.4" y="451.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="621.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.11%)</title><rect x="620.1" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (35 samples, 0.11%)</title><rect x="620.1" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.11%)</title><rect x="620.1" y="419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (10 samples, 0.03%)</title><rect x="620.1" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="620.1" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="623.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.08%)</title><rect x="620.5" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.08%)</title><rect x="620.5" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.5" y="398.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="620.5" y="371.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="623.5" y="382.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (117 samples, 0.36%)</title><rect x="621.4" y="451.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.4" y="462.0"></text>
</g>
<g>
<title>java.net.URI$Parser (12 samples, 0.04%)</title><rect x="621.4" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="624.4" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (105 samples, 0.32%)</title><rect x="621.8" y="435.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.06%)</title><rect x="621.8" y="419.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.06%)</title><rect x="621.8" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="621.8" y="387.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="624.8" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (86 samples, 0.26%)</title><rect x="622.5" y="419.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.15%)</title><rect x="622.5" y="403.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.15%)</title><rect x="622.5" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.5" y="398.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="622.5" y="371.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="625.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.10%)</title><rect x="623.0" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.0" y="382.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.10%)</title><rect x="623.0" y="355.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="626.0" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (38 samples, 0.12%)</title><rect x="624.2" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.06%)</title><rect x="624.2" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.06%)</title><rect x="624.2" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.02%)</title><rect x="624.2" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="627.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="624.5" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.5" y="366.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="624.5" y="339.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="627.5" y="350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (18 samples, 0.06%)</title><rect x="625.0" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.0" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (18 samples, 0.06%)</title><rect x="625.0" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.06%)</title><rect x="625.0" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.06%)</title><rect x="625.0" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="625.0" y="323.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="628.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.03%)</title><rect x="625.2" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.2" y="334.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="625.2" y="307.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="628.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.nodesForKey (313 samples, 0.96%)</title><rect x="625.6" y="579.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.6" y="590.0"></text>
</g>
<g>
<title>java.util.HashSet (15 samples, 0.05%)</title><rect x="625.6" y="563.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="628.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.04%)</title><rect x="626.2" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.2" y="574.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.04%)</title><rect x="626.2" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="629.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (44 samples, 0.14%)</title><rect x="626.7" y="563.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap (44 samples, 0.14%)</title><rect x="626.7" y="547.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="629.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (34 samples, 0.10%)</title><rect x="628.3" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (34 samples, 0.10%)</title><rect x="628.3" y="547.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (34 samples, 0.10%)</title><rect x="628.3" y="531.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="631.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.addReplicasForKey (206 samples, 0.63%)</title><rect x="629.5" y="563.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (141 samples, 0.43%)</title><rect x="629.5" y="547.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (141 samples, 0.43%)</title><rect x="629.5" y="531.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (141 samples, 0.43%)</title><rect x="629.5" y="515.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (65 samples, 0.20%)</title><rect x="629.5" y="499.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.5" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (65 samples, 0.20%)</title><rect x="629.5" y="483.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="632.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (76 samples, 0.23%)</title><rect x="631.9" y="499.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.9" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (76 samples, 0.23%)</title><rect x="631.9" y="483.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="634.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (42 samples, 0.13%)</title><rect x="634.6" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (42 samples, 0.13%)</title><rect x="634.6" y="531.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="637.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (21 samples, 0.06%)</title><rect x="636.1" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (21 samples, 0.06%)</title><rect x="636.1" y="531.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="639.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapString (72 samples, 0.22%)</title><rect x="637.0" y="595.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (47 samples, 0.14%)</title><rect x="637.0" y="579.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (47 samples, 0.14%)</title><rect x="637.0" y="563.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.0" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 0.14%)</title><rect x="637.0" y="547.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="640.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (25 samples, 0.08%)</title><rect x="638.7" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (25 samples, 0.08%)</title><rect x="638.7" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.7" y="574.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="638.7" y="547.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="641.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.parseReplicasParameter (97 samples, 0.30%)</title><rect x="639.6" y="643.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.6" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ReplicasHolder (97 samples, 0.30%)</title><rect x="639.6" y="627.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="642.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.respond (61 samples, 0.19%)</title><rect x="643.1" y="643.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="643.1" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="643.1" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$267/757738457.get$Lambda (9 samples, 0.03%)</title><rect x="643.1" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.1" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$267 (9 samples, 0.03%)</title><rect x="643.1" y="579.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="646.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (52 samples, 0.16%)</title><rect x="643.4" y="627.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (52 samples, 0.16%)</title><rect x="643.4" y="611.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.11%)</title><rect x="643.4" y="595.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="646.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="644.8" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (15 samples, 0.05%)</title><rect x="644.8" y="579.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="647.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (41 samples, 0.13%)</title><rect x="645.3" y="723.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (41 samples, 0.13%)</title><rect x="645.3" y="707.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (41 samples, 0.13%)</title><rect x="645.3" y="691.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (41 samples, 0.13%)</title><rect x="645.3" y="675.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (41 samples, 0.13%)</title><rect x="645.3" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (41 samples, 0.13%)</title><rect x="645.3" y="643.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (41 samples, 0.13%)</title><rect x="645.3" y="627.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (41 samples, 0.13%)</title><rect x="645.3" y="611.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 0.13%)</title><rect x="645.3" y="595.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (41 samples, 0.13%)</title><rect x="645.3" y="579.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (41 samples, 0.13%)</title><rect x="645.3" y="563.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (41 samples, 0.13%)</title><rect x="645.3" y="547.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (41 samples, 0.13%)</title><rect x="645.3" y="531.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (41 samples, 0.13%)</title><rect x="645.3" y="515.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (41 samples, 0.13%)</title><rect x="645.3" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (41 samples, 0.13%)</title><rect x="645.3" y="483.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (41 samples, 0.13%)</title><rect x="645.3" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (41 samples, 0.13%)</title><rect x="645.3" y="451.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="648.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (581 samples, 1.79%)</title><rect x="646.8" y="723.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.8" y="734.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="646.8" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="646.8" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$423/284104192.get$Lambda (7 samples, 0.02%)</title><rect x="646.8" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.8" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$423 (7 samples, 0.02%)</title><rect x="646.8" y="659.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="649.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1684015092.linkToTargetMethod (7 samples, 0.02%)</title><rect x="647.1" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="647.1" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$424/835757138.get$Lambda (7 samples, 0.02%)</title><rect x="647.1" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.1" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$424 (7 samples, 0.02%)</title><rect x="647.1" y="659.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="650.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (112 samples, 0.34%)</title><rect x="647.4" y="707.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$425/505333586.accept (100 samples, 0.31%)</title><rect x="647.4" y="691.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (100 samples, 0.31%)</title><rect x="647.4" y="675.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (100 samples, 0.31%)</title><rect x="647.4" y="659.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (100 samples, 0.31%)</title><rect x="647.4" y="643.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (100 samples, 0.31%)</title><rect x="647.4" y="627.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (100 samples, 0.31%)</title><rect x="647.4" y="611.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (100 samples, 0.31%)</title><rect x="647.4" y="595.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (100 samples, 0.31%)</title><rect x="647.4" y="579.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (100 samples, 0.31%)</title><rect x="647.4" y="563.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (100 samples, 0.31%)</title><rect x="647.4" y="547.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/762738301.run (100 samples, 0.31%)</title><rect x="647.4" y="531.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (100 samples, 0.31%)</title><rect x="647.4" y="515.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (26 samples, 0.08%)</title><rect x="647.4" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (26 samples, 0.08%)</title><rect x="647.4" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (26 samples, 0.08%)</title><rect x="647.4" y="467.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (16 samples, 0.05%)</title><rect x="647.4" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.05%)</title><rect x="647.4" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.05%)</title><rect x="647.4" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.05%)</title><rect x="647.4" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.05%)</title><rect x="647.4" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="650.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.03%)</title><rect x="647.9" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.03%)</title><rect x="647.9" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.03%)</title><rect x="647.9" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.03%)</title><rect x="647.9" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.03%)</title><rect x="647.9" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (10 samples, 0.03%)</title><rect x="647.9" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="650.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (16 samples, 0.05%)</title><rect x="648.3" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="648.3" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="648.3" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$450/261420098.get$Lambda (16 samples, 0.05%)</title><rect x="648.3" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$450 (16 samples, 0.05%)</title><rect x="648.3" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="651.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (58 samples, 0.18%)</title><rect x="648.9" y="499.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (27 samples, 0.08%)</title><rect x="648.9" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.06%)</title><rect x="648.9" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.9" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.06%)</title><rect x="648.9" y="451.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="651.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (9 samples, 0.03%)</title><rect x="649.5" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.5" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.03%)</title><rect x="649.5" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.5" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.03%)</title><rect x="649.5" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="652.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (31 samples, 0.10%)</title><rect x="649.9" y="483.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$295/1213423173.get (31 samples, 0.10%)</title><rect x="649.9" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (31 samples, 0.10%)</title><rect x="649.9" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (31 samples, 0.10%)</title><rect x="649.9" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (31 samples, 0.10%)</title><rect x="649.9" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.9" y="430.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="650.0" y="403.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$428/957217804.accept (12 samples, 0.04%)</title><rect x="651.0" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.04%)</title><rect x="651.0" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$424/835757138.run (12 samples, 0.04%)</title><rect x="651.0" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.04%)</title><rect x="651.0" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.04%)</title><rect x="651.0" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.04%)</title><rect x="651.0" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.04%)</title><rect x="651.0" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12 samples, 0.04%)</title><rect x="651.0" y="579.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="654.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (83 samples, 0.26%)</title><rect x="651.4" y="707.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.4" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (83 samples, 0.26%)</title><rect x="651.4" y="691.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="654.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (17 samples, 0.05%)</title><rect x="654.4" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (11 samples, 0.03%)</title><rect x="654.7" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.7" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (11 samples, 0.03%)</title><rect x="654.7" y="675.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="657.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (59 samples, 0.18%)</title><rect x="655.1" y="707.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$316/1936953865.run (23 samples, 0.07%)</title><rect x="655.1" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="658.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (23 samples, 0.07%)</title><rect x="655.1" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.07%)</title><rect x="655.1" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.07%)</title><rect x="655.1" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23 samples, 0.07%)</title><rect x="655.1" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (23 samples, 0.07%)</title><rect x="655.1" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/762738301.run (23 samples, 0.07%)</title><rect x="655.1" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (23 samples, 0.07%)</title><rect x="655.1" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (23 samples, 0.07%)</title><rect x="655.1" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (23 samples, 0.07%)</title><rect x="655.1" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (16 samples, 0.05%)</title><rect x="655.1" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="658.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (16 samples, 0.05%)</title><rect x="655.1" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (16 samples, 0.05%)</title><rect x="655.1" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="655.1" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (10 samples, 0.03%)</title><rect x="655.1" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="655.1" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.03%)</title><rect x="655.1" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.03%)</title><rect x="655.1" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="655.1" y="403.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (7 samples, 0.02%)</title><rect x="655.6" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="655.6" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="655.6" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.02%)</title><rect x="655.6" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.02%)</title><rect x="655.6" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.02%)</title><rect x="655.6" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7 samples, 0.02%)</title><rect x="655.6" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="658.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$328/1843264935.run (36 samples, 0.11%)</title><rect x="655.9" y="691.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (36 samples, 0.11%)</title><rect x="655.9" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="655.9" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="655.9" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/728377575.get$Lambda (14 samples, 0.04%)</title><rect x="655.9" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$437 (14 samples, 0.04%)</title><rect x="655.9" y="611.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="658.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.07%)</title><rect x="656.4" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.07%)</title><rect x="656.4" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.07%)</title><rect x="656.4" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (22 samples, 0.07%)</title><rect x="656.4" y="611.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="659.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (177 samples, 0.54%)</title><rect x="657.2" y="707.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.2" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (28 samples, 0.09%)</title><rect x="657.2" y="691.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.2" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (28 samples, 0.09%)</title><rect x="657.2" y="675.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.2" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.09%)</title><rect x="657.2" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.2" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.09%)</title><rect x="657.2" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.2" y="654.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.09%)</title><rect x="657.2" y="627.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="660.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (149 samples, 0.46%)</title><rect x="658.2" y="691.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="658.2" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="658.2" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$561/819343111.get$Lambda (18 samples, 0.06%)</title><rect x="658.2" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$561 (18 samples, 0.06%)</title><rect x="658.2" y="627.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="661.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (45 samples, 0.14%)</title><rect x="658.9" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.9" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (45 samples, 0.14%)</title><rect x="658.9" y="659.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="661.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (16 samples, 0.05%)</title><rect x="660.5" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.5" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.of (16 samples, 0.05%)</title><rect x="660.5" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.5" y="670.0"></text>
</g>
<g>
<title>java.util.Optional (16 samples, 0.05%)</title><rect x="660.5" y="643.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="663.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (70 samples, 0.22%)</title><rect x="661.1" y="675.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.1" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.10%)</title><rect x="661.1" y="659.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="664.1" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (38 samples, 0.12%)</title><rect x="662.2" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.2" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (38 samples, 0.12%)</title><rect x="662.2" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.2" y="654.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (38 samples, 0.12%)</title><rect x="662.2" y="627.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="665.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (72 samples, 0.22%)</title><rect x="663.6" y="707.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="663.6" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="663.6" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$422/147121326.get$Lambda (10 samples, 0.03%)</title><rect x="663.6" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$422 (10 samples, 0.03%)</title><rect x="663.6" y="643.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="666.6" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (35 samples, 0.11%)</title><rect x="664.0" y="691.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="667.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (15 samples, 0.05%)</title><rect x="664.0" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.0" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (15 samples, 0.05%)</title><rect x="664.0" y="659.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="667.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 0.06%)</title><rect x="664.5" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.5" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (20 samples, 0.06%)</title><rect x="664.5" y="659.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="667.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (27 samples, 0.08%)</title><rect x="665.3" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.3" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (27 samples, 0.08%)</title><rect x="665.3" y="675.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="668.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (25 samples, 0.08%)</title><rect x="666.2" y="707.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (25 samples, 0.08%)</title><rect x="666.2" y="691.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (25 samples, 0.08%)</title><rect x="666.2" y="675.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (25 samples, 0.08%)</title><rect x="666.2" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (10 samples, 0.03%)</title><rect x="666.2" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.2" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (10 samples, 0.03%)</title><rect x="666.2" y="627.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="669.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (15 samples, 0.05%)</title><rect x="666.6" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (15 samples, 0.05%)</title><rect x="666.6" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (15 samples, 0.05%)</title><rect x="666.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (15 samples, 0.05%)</title><rect x="666.6" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (15 samples, 0.05%)</title><rect x="666.6" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.6" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (15 samples, 0.05%)</title><rect x="666.6" y="563.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="669.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (15 samples, 0.05%)</title><rect x="667.4" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (15 samples, 0.05%)</title><rect x="667.4" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (15 samples, 0.05%)</title><rect x="667.4" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.4" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (15 samples, 0.05%)</title><rect x="667.4" y="659.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="670.4" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,381 samples, 44.25%)</title><rect x="667.9" y="723.0" width="522.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.9" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (668 samples, 2.06%)</title><rect x="667.9" y="707.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.9" y="718.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (668 samples, 2.06%)</title><rect x="667.9" y="691.0" width="24.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="670.9" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (13,713 samples, 42.19%)</title><rect x="692.2" y="707.0" width="497.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.2" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,713 samples, 42.19%)</title><rect x="692.2" y="691.0" width="497.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.2" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,713 samples, 42.19%)</title><rect x="692.2" y="675.0" width="497.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.2" y="686.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,856 samples, 8.79%)</title><rect x="692.2" y="659.0" width="103.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="670.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,856 samples, 8.79%)</title><rect x="692.2" y="643.0" width="103.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.2" y="654.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (1,935 samples, 5.95%)</title><rect x="692.2" y="627.0" width="70.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.2" y="638.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (937 samples, 2.88%)</title><rect x="692.2" y="611.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (937 samples, 2.88%)</title><rect x="692.2" y="595.0" width="34.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.2" y="606.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (937 samples, 2.88%)</title><rect x="692.2" y="579.0" width="34.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.2" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (937 samples, 2.88%)</title><rect x="692.2" y="563.0" width="34.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.2" y="574.0">ja..</text>
</g>
<g>
<title>java.lang.String (438 samples, 1.35%)</title><rect x="692.2" y="547.0" width="15.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="695.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (499 samples, 1.54%)</title><rect x="708.1" y="547.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.1" y="558.0"></text>
</g>
<g>
<title>byte[] (499 samples, 1.54%)</title><rect x="708.1" y="531.0" width="18.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (998 samples, 3.07%)</title><rect x="726.2" y="611.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.2" y="622.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (421 samples, 1.30%)</title><rect x="726.2" y="595.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (421 samples, 1.30%)</title><rect x="726.2" y="579.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$575/1802415425.get$Lambda (421 samples, 1.30%)</title><rect x="726.2" y="563.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$575 (421 samples, 1.30%)</title><rect x="726.2" y="547.0" width="15.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="729.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (577 samples, 1.78%)</title><rect x="741.5" y="595.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/188830222.linkToTargetMethod (568 samples, 1.75%)</title><rect x="741.5" y="579.0" width="20.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (568 samples, 1.75%)</title><rect x="741.5" y="563.0" width="20.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/1313064354.get$Lambda (568 samples, 1.75%)</title><rect x="741.5" y="547.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.5" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$147 (568 samples, 1.75%)</title><rect x="741.5" y="531.0" width="20.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="744.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.03%)</title><rect x="762.1" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (9 samples, 0.03%)</title><rect x="762.1" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.03%)</title><rect x="762.1" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.03%)</title><rect x="762.1" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (9 samples, 0.03%)</title><rect x="762.1" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.03%)</title><rect x="762.1" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="765.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (921 samples, 2.83%)</title><rect x="762.4" y="627.0" width="33.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.4" y="638.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (921 samples, 2.83%)</title><rect x="762.4" y="611.0" width="33.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.4" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (921 samples, 2.83%)</title><rect x="762.4" y="595.0" width="33.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.4" y="606.0">ja..</text>
</g>
<g>
<title>java.lang.String (484 samples, 1.49%)</title><rect x="762.4" y="579.0" width="17.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="765.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (437 samples, 1.34%)</title><rect x="780.0" y="579.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.0" y="590.0"></text>
</g>
<g>
<title>byte[] (437 samples, 1.34%)</title><rect x="780.0" y="563.0" width="15.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="783.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,344 samples, 13.36%)</title><rect x="795.8" y="659.0" width="157.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.8" y="670.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one.nio.http.Request (791 samples, 2.43%)</title><rect x="795.8" y="643.0" width="28.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="798.8" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,241 samples, 3.82%)</title><rect x="824.6" y="643.0" width="45.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.6" y="654.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (1,098 samples, 3.38%)</title><rect x="824.6" y="627.0" width="39.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="827.6" y="638.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (143 samples, 0.44%)</title><rect x="864.4" y="627.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="867.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,312 samples, 7.11%)</title><rect x="869.6" y="643.0" width="83.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.6" y="654.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,312 samples, 7.11%)</title><rect x="869.6" y="627.0" width="83.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.6" y="638.0">one/nio/u..</text>
</g>
<g>
<title>char[] (980 samples, 3.02%)</title><rect x="869.6" y="611.0" width="35.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="872.6" y="622.0">cha..</text>
</g>
<g>
<title>char[] (53 samples, 0.16%)</title><rect x="905.2" y="611.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="908.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (527 samples, 1.62%)</title><rect x="907.1" y="611.0" width="19.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="910.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (752 samples, 2.31%)</title><rect x="926.2" y="611.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.2" y="622.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (752 samples, 2.31%)</title><rect x="926.2" y="595.0" width="27.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="929.2" y="606.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (752 samples, 2.31%)</title><rect x="926.2" y="579.0" width="27.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.2" y="590.0">j..</text>
</g>
<g>
<title>byte[] (752 samples, 2.31%)</title><rect x="926.2" y="563.0" width="27.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="929.2" y="574.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (119 samples, 0.37%)</title><rect x="953.5" y="659.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="956.5" y="670.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.37%)</title><rect x="953.5" y="643.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="956.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (349 samples, 1.07%)</title><rect x="957.9" y="659.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (349 samples, 1.07%)</title><rect x="957.9" y="643.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (349 samples, 1.07%)</title><rect x="957.9" y="627.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (173 samples, 0.53%)</title><rect x="957.9" y="611.0" width="6.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="960.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (176 samples, 0.54%)</title><rect x="964.2" y="611.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.2" y="622.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.54%)</title><rect x="964.2" y="595.0" width="6.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="967.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,045 samples, 18.60%)</title><rect x="970.5" y="659.0" width="219.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="670.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,045 samples, 18.60%)</title><rect x="970.5" y="643.0" width="219.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.5" y="654.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (2,936 samples, 9.03%)</title><rect x="970.5" y="627.0" width="106.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="973.5" y="638.0">char[]</text>
</g>
<g>
<title>char[] (136 samples, 0.42%)</title><rect x="1077.1" y="627.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1080.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (961 samples, 2.96%)</title><rect x="1082.1" y="627.0" width="34.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1085.1" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,012 samples, 6.19%)</title><rect x="1117.0" y="627.0" width="73.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.0" y="638.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,012 samples, 6.19%)</title><rect x="1117.0" y="611.0" width="73.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.0" y="622.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,012 samples, 6.19%)</title><rect x="1117.0" y="595.0" width="73.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.0" y="606.0">java/lan..</text>
</g>
<g>
<title>byte[] (2,012 samples, 6.19%)</title><rect x="1117.0" y="579.0" width="73.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1120.0" y="590.0">byte[]</text>
</g>
</g>
</svg>
