<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (85,491 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (47,183 samples, 55.19%)</title><rect x="10.0" y="723.0" width="651.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (47,183 samples, 55.19%)</title><rect x="10.0" y="707.0" width="651.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (47,183 samples, 55.19%)</title><rect x="10.0" y="691.0" width="651.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (41,241 samples, 48.24%)</title><rect x="10.0" y="675.0" width="569.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,484 samples, 7.58%)</title><rect x="10.0" y="659.0" width="89.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6,474 samples, 7.57%)</title><rect x="10.0" y="643.0" width="89.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (28 samples, 0.03%)</title><rect x="10.0" y="627.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.apply (6,446 samples, 7.54%)</title><rect x="10.4" y="627.0" width="89.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.4" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6,446 samples, 7.54%)</title><rect x="10.4" y="611.0" width="89.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.4" y="622.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (6,446 samples, 7.54%)</title><rect x="10.4" y="595.0" width="89.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.4" y="606.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.06%)</title><rect x="10.4" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.06%)</title><rect x="10.4" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.get$Lambda (25 samples, 0.03%)</title><rect x="10.4" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$372 (25 samples, 0.03%)</title><rect x="10.4" y="531.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.get$Lambda (23 samples, 0.03%)</title><rect x="10.7" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$377 (23 samples, 0.03%)</title><rect x="10.7" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (75 samples, 0.09%)</title><rect x="11.0" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (75 samples, 0.09%)</title><rect x="11.0" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (38 samples, 0.04%)</title><rect x="11.0" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="11.6" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="11.6" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="11.6" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="14.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (152 samples, 0.18%)</title><rect x="12.1" y="579.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (152 samples, 0.18%)</title><rect x="12.1" y="563.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (83 samples, 0.10%)</title><rect x="12.1" y="547.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (69 samples, 0.08%)</title><rect x="13.2" y="547.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (69 samples, 0.08%)</title><rect x="13.2" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (69 samples, 0.08%)</title><rect x="13.2" y="515.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="16.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (5,999 samples, 7.02%)</title><rect x="14.2" y="579.0" width="82.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.2" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (5,999 samples, 7.02%)</title><rect x="14.2" y="563.0" width="82.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.2" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (5,999 samples, 7.02%)</title><rect x="14.2" y="547.0" width="82.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.2" y="558.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.07%)</title><rect x="14.2" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.07%)</title><rect x="14.2" y="515.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1781629338.get$Lambda (23 samples, 0.03%)</title><rect x="14.2" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (23 samples, 0.03%)</title><rect x="14.2" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="17.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/378141810.get$Lambda (21 samples, 0.02%)</title><rect x="14.7" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (21 samples, 0.02%)</title><rect x="14.7" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="17.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4,632 samples, 5.42%)</title><rect x="15.0" y="531.0" width="63.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.0" y="542.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4,632 samples, 5.42%)</title><rect x="15.0" y="515.0" width="63.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.0" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4,591 samples, 5.37%)</title><rect x="15.0" y="499.0" width="63.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.0" y="510.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/378141810.apply (4,591 samples, 5.37%)</title><rect x="15.0" y="483.0" width="63.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.0" y="494.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (4,591 samples, 5.37%)</title><rect x="15.0" y="467.0" width="63.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="478.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4,591 samples, 5.37%)</title><rect x="15.0" y="451.0" width="63.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.0" y="462.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/565635497.apply (4,591 samples, 5.37%)</title><rect x="15.0" y="435.0" width="63.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.0" y="446.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4,591 samples, 5.37%)</title><rect x="15.0" y="419.0" width="63.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.0" y="430.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.03%)</title><rect x="15.0" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.03%)</title><rect x="15.0" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1660747199.get$Lambda (23 samples, 0.03%)</title><rect x="15.0" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$367 (23 samples, 0.03%)</title><rect x="15.0" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="18.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (72 samples, 0.08%)</title><rect x="15.3" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (72 samples, 0.08%)</title><rect x="15.3" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (40 samples, 0.05%)</title><rect x="15.3" y="371.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="18.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="16.0" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="16.0" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="16.0" y="339.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (92 samples, 0.11%)</title><rect x="16.3" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (92 samples, 0.11%)</title><rect x="16.3" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (58 samples, 0.07%)</title><rect x="16.3" y="371.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.04%)</title><rect x="17.1" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.04%)</title><rect x="17.1" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.04%)</title><rect x="17.1" y="339.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,404 samples, 5.15%)</title><rect x="17.6" y="403.0" width="60.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.6" y="414.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.04%)</title><rect x="17.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.04%)</title><rect x="17.6" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$361/499105744.get$Lambda (21 samples, 0.02%)</title><rect x="17.7" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$361 (21 samples, 0.02%)</title><rect x="17.7" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="20.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,862 samples, 4.52%)</title><rect x="18.0" y="387.0" width="53.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.0" y="398.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,862 samples, 4.52%)</title><rect x="18.0" y="371.0" width="53.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.0" y="382.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (31 samples, 0.04%)</title><rect x="18.0" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="21.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/364181208.apply (3,769 samples, 4.41%)</title><rect x="18.4" y="355.0" width="52.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.4" y="366.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,769 samples, 4.41%)</title><rect x="18.4" y="339.0" width="52.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.4" y="350.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (65 samples, 0.08%)</title><rect x="18.7" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (65 samples, 0.08%)</title><rect x="18.7" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (33 samples, 0.04%)</title><rect x="18.7" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="21.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.04%)</title><rect x="19.1" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.04%)</title><rect x="19.1" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.04%)</title><rect x="19.1" y="259.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="22.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="19.6" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="22.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (53 samples, 0.06%)</title><rect x="19.9" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (24 samples, 0.03%)</title><rect x="19.9" y="307.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (29 samples, 0.03%)</title><rect x="20.2" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (27 samples, 0.03%)</title><rect x="20.2" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (27 samples, 0.03%)</title><rect x="20.2" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (27 samples, 0.03%)</title><rect x="20.2" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (27 samples, 0.03%)</title><rect x="20.2" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (27 samples, 0.03%)</title><rect x="20.2" y="227.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="23.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (85 samples, 0.10%)</title><rect x="20.6" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (85 samples, 0.10%)</title><rect x="20.6" y="307.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (29 samples, 0.03%)</title><rect x="20.6" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (29 samples, 0.03%)</title><rect x="20.6" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (29 samples, 0.03%)</title><rect x="20.6" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (29 samples, 0.03%)</title><rect x="20.6" y="243.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="23.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (56 samples, 0.07%)</title><rect x="21.0" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (56 samples, 0.07%)</title><rect x="21.0" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (45 samples, 0.05%)</title><rect x="21.0" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="24.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,528 samples, 4.13%)</title><rect x="21.8" y="323.0" width="48.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.8" y="334.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (31 samples, 0.04%)</title><rect x="21.8" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="24.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (170 samples, 0.20%)</title><rect x="22.2" y="307.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (170 samples, 0.20%)</title><rect x="22.2" y="291.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (170 samples, 0.20%)</title><rect x="22.2" y="275.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="286.0"></text>
</g>
<g>
<title>byte[] (170 samples, 0.20%)</title><rect x="22.2" y="259.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (77 samples, 0.09%)</title><rect x="24.5" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.5" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (77 samples, 0.09%)</title><rect x="24.5" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.5" y="302.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.09%)</title><rect x="24.5" y="275.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (163 samples, 0.19%)</title><rect x="25.6" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (163 samples, 0.19%)</title><rect x="25.6" y="291.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (163 samples, 0.19%)</title><rect x="25.6" y="275.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.6" y="286.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.19%)</title><rect x="25.6" y="259.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="28.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.05%)</title><rect x="27.9" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.05%)</title><rect x="27.9" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.05%)</title><rect x="27.9" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.9" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (27 samples, 0.03%)</title><rect x="28.4" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.4" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (27 samples, 0.03%)</title><rect x="28.4" y="291.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="31.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,688 samples, 3.14%)</title><rect x="28.8" y="307.0" width="37.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.8" y="318.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,417 samples, 1.66%)</title><rect x="29.0" y="291.0" width="19.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,417 samples, 1.66%)</title><rect x="29.0" y="275.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.0" y="286.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (32 samples, 0.04%)</title><rect x="29.0" y="259.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="32.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.06%)</title><rect x="29.4" y="259.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="32.4" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (90 samples, 0.11%)</title><rect x="30.1" y="259.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeSet (37 samples, 0.04%)</title><rect x="31.3" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.08%)</title><rect x="31.8" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.08%)</title><rect x="31.8" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (65 samples, 0.08%)</title><rect x="31.8" y="227.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.8" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (65 samples, 0.08%)</title><rect x="31.8" y="211.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="34.8" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (965 samples, 1.13%)</title><rect x="32.7" y="259.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (965 samples, 1.13%)</title><rect x="32.7" y="243.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.7" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (965 samples, 1.13%)</title><rect x="32.7" y="227.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (965 samples, 1.13%)</title><rect x="32.7" y="211.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.7" y="222.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (623 samples, 0.73%)</title><rect x="32.7" y="195.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (493 samples, 0.58%)</title><rect x="32.7" y="179.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.7" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (493 samples, 0.58%)</title><rect x="32.7" y="163.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (123 samples, 0.14%)</title><rect x="32.7" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (123 samples, 0.14%)</title><rect x="32.7" y="131.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (123 samples, 0.14%)</title><rect x="32.7" y="115.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (123 samples, 0.14%)</title><rect x="32.7" y="99.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (123 samples, 0.14%)</title><rect x="32.7" y="83.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.7" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (123 samples, 0.14%)</title><rect x="32.7" y="67.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="35.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$407/623734236.test (370 samples, 0.43%)</title><rect x="34.4" y="147.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (370 samples, 0.43%)</title><rect x="34.4" y="131.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.4" y="142.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (370 samples, 0.43%)</title><rect x="34.4" y="115.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="126.0"></text>
</g>
<g>
<title>java/util/Collection.stream (288 samples, 0.34%)</title><rect x="34.4" y="99.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.4" y="110.0"></text>
</g>
<g>
<title>java/util/List.spliterator (103 samples, 0.12%)</title><rect x="34.4" y="83.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.4" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (103 samples, 0.12%)</title><rect x="34.4" y="67.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="37.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (185 samples, 0.22%)</title><rect x="35.9" y="83.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.9" y="94.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (185 samples, 0.22%)</title><rect x="35.9" y="67.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="38.9" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (82 samples, 0.10%)</title><rect x="38.4" y="99.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.4" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (82 samples, 0.10%)</title><rect x="38.4" y="83.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (82 samples, 0.10%)</title><rect x="38.4" y="67.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (82 samples, 0.10%)</title><rect x="38.4" y="51.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.4" y="62.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (82 samples, 0.10%)</title><rect x="38.4" y="35.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="41.4" y="46.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (130 samples, 0.15%)</title><rect x="39.6" y="179.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.6" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (130 samples, 0.15%)</title><rect x="39.6" y="163.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="42.6" y="174.0"></text>
</g>
<g>
<title>java/util/List.copyOf (190 samples, 0.22%)</title><rect x="41.3" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.3" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (190 samples, 0.22%)</title><rect x="41.3" y="179.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (91 samples, 0.11%)</title><rect x="41.3" y="163.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.11%)</title><rect x="41.3" y="147.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (91 samples, 0.11%)</title><rect x="41.3" y="131.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="44.3" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (99 samples, 0.12%)</title><rect x="42.6" y="163.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.6" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (99 samples, 0.12%)</title><rect x="42.6" y="147.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="45.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (152 samples, 0.18%)</title><rect x="44.0" y="195.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (152 samples, 0.18%)</title><rect x="44.0" y="179.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="47.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (72 samples, 0.08%)</title><rect x="46.1" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.1" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (72 samples, 0.08%)</title><rect x="46.1" y="243.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="49.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (106 samples, 0.12%)</title><rect x="47.1" y="259.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (106 samples, 0.12%)</title><rect x="47.1" y="243.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="50.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (20 samples, 0.02%)</title><rect x="48.5" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="48.5" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="48.5" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.5" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1229942176.get$Lambda (20 samples, 0.02%)</title><rect x="48.5" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.5" y="254.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$396 (20 samples, 0.02%)</title><rect x="48.5" y="227.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="51.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (711 samples, 0.83%)</title><rect x="48.8" y="291.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (453 samples, 0.53%)</title><rect x="48.8" y="275.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (453 samples, 0.53%)</title><rect x="48.8" y="259.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (453 samples, 0.53%)</title><rect x="48.8" y="243.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (453 samples, 0.53%)</title><rect x="48.8" y="227.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.8" y="238.0"></text>
</g>
<g>
<title>byte[] (453 samples, 0.53%)</title><rect x="48.8" y="211.0" width="6.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="51.8" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (67 samples, 0.08%)</title><rect x="55.1" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (67 samples, 0.08%)</title><rect x="55.1" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (67 samples, 0.08%)</title><rect x="55.1" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (67 samples, 0.08%)</title><rect x="55.1" y="227.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="58.1" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (43 samples, 0.05%)</title><rect x="56.0" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.0" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (26 samples, 0.03%)</title><rect x="56.0" y="259.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="59.0" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1229942176.test (148 samples, 0.17%)</title><rect x="56.6" y="275.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.6" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (148 samples, 0.17%)</title><rect x="56.6" y="259.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$108/341796579.test (148 samples, 0.17%)</title><rect x="56.6" y="243.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$11 (148 samples, 0.17%)</title><rect x="56.6" y="227.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.6" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$98/953742666.test (148 samples, 0.17%)</title><rect x="56.6" y="211.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.6" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (148 samples, 0.17%)</title><rect x="56.6" y="195.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$97/860481979.test (148 samples, 0.17%)</title><rect x="56.6" y="179.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$4 (148 samples, 0.17%)</title><rect x="56.6" y="163.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (148 samples, 0.17%)</title><rect x="56.6" y="147.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (148 samples, 0.17%)</title><rect x="56.6" y="131.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.09%)</title><rect x="56.6" y="115.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="59.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.08%)</title><rect x="57.7" y="115.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.7" y="126.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.08%)</title><rect x="57.7" y="99.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="60.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (517 samples, 0.60%)</title><rect x="58.6" y="291.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.6" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (517 samples, 0.60%)</title><rect x="58.6" y="275.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (517 samples, 0.60%)</title><rect x="58.6" y="259.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.6" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (25 samples, 0.03%)</title><rect x="58.6" y="243.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="61.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (42 samples, 0.05%)</title><rect x="59.0" y="243.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.03%)</title><rect x="59.7" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.03%)</title><rect x="59.7" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (26 samples, 0.03%)</title><rect x="59.7" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.7" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (26 samples, 0.03%)</title><rect x="59.7" y="195.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="62.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (29 samples, 0.03%)</title><rect x="60.1" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (29 samples, 0.03%)</title><rect x="60.1" y="227.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="63.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (342 samples, 0.40%)</title><rect x="60.5" y="243.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (342 samples, 0.40%)</title><rect x="60.5" y="227.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.5" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (342 samples, 0.40%)</title><rect x="60.5" y="211.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (62 samples, 0.07%)</title><rect x="60.5" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (62 samples, 0.07%)</title><rect x="60.5" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (62 samples, 0.07%)</title><rect x="60.5" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.07%)</title><rect x="60.5" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.07%)</title><rect x="60.5" y="131.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.5" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.07%)</title><rect x="60.5" y="115.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.07%)</title><rect x="60.5" y="99.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.07%)</title><rect x="60.5" y="83.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.07%)</title><rect x="60.5" y="67.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="63.5" y="78.0"></text>
</g>
<g>
<title>java/util/List.copyOf (168 samples, 0.20%)</title><rect x="61.3" y="195.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.3" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (168 samples, 0.20%)</title><rect x="61.3" y="179.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (89 samples, 0.10%)</title><rect x="61.3" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.10%)</title><rect x="61.3" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.10%)</title><rect x="61.3" y="131.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="64.3" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (79 samples, 0.09%)</title><rect x="62.5" y="163.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.5" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (79 samples, 0.09%)</title><rect x="62.5" y="147.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="65.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (112 samples, 0.13%)</title><rect x="63.6" y="195.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.6" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (112 samples, 0.13%)</title><rect x="63.6" y="179.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="66.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.05%)</title><rect x="65.2" y="243.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.05%)</title><rect x="65.2" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="68.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (91 samples, 0.11%)</title><rect x="65.9" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (22 samples, 0.03%)</title><rect x="65.9" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.9" y="302.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.03%)</title><rect x="65.9" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="68.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.08%)</title><rect x="66.2" y="291.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (69 samples, 0.08%)</title><rect x="66.2" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.08%)</title><rect x="66.2" y="259.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (30 samples, 0.04%)</title><rect x="66.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.04%)</title><rect x="66.2" y="227.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="69.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (39 samples, 0.05%)</title><rect x="66.6" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (39 samples, 0.05%)</title><rect x="66.6" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.6" y="238.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.05%)</title><rect x="66.6" y="211.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="69.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (64 samples, 0.07%)</title><rect x="67.2" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (64 samples, 0.07%)</title><rect x="67.2" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.07%)</title><rect x="67.2" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (64 samples, 0.07%)</title><rect x="67.2" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.07%)</title><rect x="67.2" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (22 samples, 0.03%)</title><rect x="67.2" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.03%)</title><rect x="67.2" y="211.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="70.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (42 samples, 0.05%)</title><rect x="67.5" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (42 samples, 0.05%)</title><rect x="67.5" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.5" y="222.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.05%)</title><rect x="67.5" y="195.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="70.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (176 samples, 0.21%)</title><rect x="68.0" y="307.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.0" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.06%)</title><rect x="68.0" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="71.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (50 samples, 0.06%)</title><rect x="68.7" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.06%)</title><rect x="68.7" y="275.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (77 samples, 0.09%)</title><rect x="69.4" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.4" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (77 samples, 0.09%)</title><rect x="69.4" y="275.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="72.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.07%)</title><rect x="70.5" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.07%)</title><rect x="70.5" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.07%)</title><rect x="70.5" y="323.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="73.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (83 samples, 0.10%)</title><rect x="71.3" y="387.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="74.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.05%)</title><rect x="72.5" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="75.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (387 samples, 0.45%)</title><rect x="73.0" y="387.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.04%)</title><rect x="73.0" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.04%)</title><rect x="73.0" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/160190916.get$Lambda (21 samples, 0.02%)</title><rect x="73.2" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$323 (21 samples, 0.02%)</title><rect x="73.2" y="323.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (39 samples, 0.05%)</title><rect x="73.5" y="371.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (29 samples, 0.03%)</title><rect x="74.0" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="77.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (37 samples, 0.04%)</title><rect x="74.4" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="77.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (119 samples, 0.14%)</title><rect x="74.9" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (119 samples, 0.14%)</title><rect x="74.9" y="355.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (119 samples, 0.14%)</title><rect x="74.9" y="339.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (119 samples, 0.14%)</title><rect x="74.9" y="323.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (119 samples, 0.14%)</title><rect x="74.9" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (119 samples, 0.14%)</title><rect x="74.9" y="291.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (119 samples, 0.14%)</title><rect x="74.9" y="275.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (119 samples, 0.14%)</title><rect x="74.9" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (119 samples, 0.14%)</title><rect x="74.9" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.04%)</title><rect x="74.9" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.04%)</title><rect x="74.9" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/258901730.get$Lambda (24 samples, 0.03%)</title><rect x="75.1" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$330 (24 samples, 0.03%)</title><rect x="75.1" y="179.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="78.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (45 samples, 0.05%)</title><rect x="75.4" y="227.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="78.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (37 samples, 0.04%)</title><rect x="76.0" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (37 samples, 0.04%)</title><rect x="76.0" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (26 samples, 0.03%)</title><rect x="76.2" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (26 samples, 0.03%)</title><rect x="76.2" y="179.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="79.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (101 samples, 0.12%)</title><rect x="76.6" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.6" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (26 samples, 0.03%)</title><rect x="76.6" y="355.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="79.6" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap (40 samples, 0.05%)</title><rect x="76.9" y="355.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="79.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (35 samples, 0.04%)</title><rect x="77.5" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.5" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (35 samples, 0.04%)</title><rect x="77.5" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.5" y="350.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="77.5" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="80.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (30 samples, 0.04%)</title><rect x="78.0" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.04%)</title><rect x="78.0" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="81.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.05%)</title><rect x="78.4" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.05%)</title><rect x="78.4" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.05%)</title><rect x="78.4" y="467.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="81.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62 samples, 0.07%)</title><rect x="78.9" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (62 samples, 0.07%)</title><rect x="78.9" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.04%)</title><rect x="78.9" y="499.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="81.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="79.4" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="79.4" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.03%)</title><rect x="79.4" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="82.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,246 samples, 1.46%)</title><rect x="79.8" y="531.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.06%)</title><rect x="79.8" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.06%)</title><rect x="79.8" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$296/77423501.get$Lambda (30 samples, 0.04%)</title><rect x="79.8" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$296 (30 samples, 0.04%)</title><rect x="79.8" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (52 samples, 0.06%)</title><rect x="80.4" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (52 samples, 0.06%)</title><rect x="80.4" y="499.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/898997379.apply (26 samples, 0.03%)</title><rect x="80.4" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (26 samples, 0.03%)</title><rect x="80.4" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.03%)</title><rect x="80.4" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.03%)</title><rect x="80.4" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.03%)</title><rect x="80.8" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.03%)</title><rect x="80.8" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.03%)</title><rect x="80.8" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="83.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (41 samples, 0.05%)</title><rect x="81.2" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (41 samples, 0.05%)</title><rect x="81.2" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.05%)</title><rect x="81.2" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.05%)</title><rect x="81.2" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.05%)</title><rect x="81.2" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="84.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,105 samples, 1.29%)</title><rect x="81.7" y="515.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,105 samples, 1.29%)</title><rect x="81.7" y="499.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (95 samples, 0.11%)</title><rect x="81.7" y="483.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="84.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (975 samples, 1.14%)</title><rect x="83.0" y="483.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.0" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (23 samples, 0.03%)</title><rect x="83.1" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="86.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (37 samples, 0.04%)</title><rect x="83.5" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.5" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (41 samples, 0.05%)</title><rect x="84.0" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.0" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (41 samples, 0.05%)</title><rect x="84.0" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.0" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (41 samples, 0.05%)</title><rect x="84.0" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="87.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (23 samples, 0.03%)</title><rect x="84.5" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (23 samples, 0.03%)</title><rect x="84.5" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="87.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (59 samples, 0.07%)</title><rect x="84.9" y="467.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (43 samples, 0.05%)</title><rect x="85.7" y="467.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="88.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (66 samples, 0.08%)</title><rect x="86.3" y="467.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="89.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.08%)</title><rect x="87.2" y="467.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="90.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (277 samples, 0.32%)</title><rect x="88.1" y="467.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (24 samples, 0.03%)</title><rect x="88.1" y="451.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="91.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (23 samples, 0.03%)</title><rect x="88.6" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (26 samples, 0.03%)</title><rect x="89.4" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (26 samples, 0.03%)</title><rect x="89.4" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="92.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (23 samples, 0.03%)</title><rect x="89.7" y="451.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="92.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.04%)</title><rect x="90.0" y="451.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="93.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (104 samples, 0.12%)</title><rect x="90.5" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (23 samples, 0.03%)</title><rect x="90.5" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="93.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (26 samples, 0.03%)</title><rect x="90.8" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="93.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (42 samples, 0.05%)</title><rect x="91.3" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (209 samples, 0.24%)</title><rect x="91.9" y="467.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (19 samples, 0.02%)</title><rect x="92.3" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="95.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (20 samples, 0.02%)</title><rect x="92.6" y="451.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (20 samples, 0.02%)</title><rect x="92.6" y="435.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="95.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (141 samples, 0.16%)</title><rect x="92.8" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (29 samples, 0.03%)</title><rect x="92.8" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="95.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (39 samples, 0.05%)</title><rect x="93.2" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="96.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (56 samples, 0.07%)</title><rect x="94.0" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (20 samples, 0.02%)</title><rect x="94.0" y="419.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="97.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (21 samples, 0.02%)</title><rect x="94.3" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="97.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (54 samples, 0.06%)</title><rect x="94.8" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (54 samples, 0.06%)</title><rect x="94.8" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (33 samples, 0.04%)</title><rect x="94.8" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="97.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (21 samples, 0.02%)</title><rect x="95.2" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.02%)</title><rect x="95.2" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (21 samples, 0.02%)</title><rect x="95.2" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (21 samples, 0.02%)</title><rect x="95.2" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.02%)</title><rect x="95.2" y="371.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="98.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (70 samples, 0.08%)</title><rect x="95.5" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.5" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (70 samples, 0.08%)</title><rect x="95.5" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.5" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (70 samples, 0.08%)</title><rect x="95.5" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$230/1241923049.run (70 samples, 0.08%)</title><rect x="95.5" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (70 samples, 0.08%)</title><rect x="95.5" y="403.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.5" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (19 samples, 0.02%)</title><rect x="95.5" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (51 samples, 0.06%)</title><rect x="95.8" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.8" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (29 samples, 0.03%)</title><rect x="95.8" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="98.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (22 samples, 0.03%)</title><rect x="96.2" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.03%)</title><rect x="96.2" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.03%)</title><rect x="96.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (22 samples, 0.03%)</title><rect x="96.2" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (22 samples, 0.03%)</title><rect x="96.2" y="307.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="99.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (35 samples, 0.04%)</title><rect x="96.5" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="96.5" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="99.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (44 samples, 0.05%)</title><rect x="97.0" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (44 samples, 0.05%)</title><rect x="97.0" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (44 samples, 0.05%)</title><rect x="97.0" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (44 samples, 0.05%)</title><rect x="97.0" y="531.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="100.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (128 samples, 0.15%)</title><rect x="97.6" y="579.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (100 samples, 0.12%)</title><rect x="97.6" y="563.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="100.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (28 samples, 0.03%)</title><rect x="99.0" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (28 samples, 0.03%)</title><rect x="99.0" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.03%)</title><rect x="99.0" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.0" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (28 samples, 0.03%)</title><rect x="99.0" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.03%)</title><rect x="99.0" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.03%)</title><rect x="99.0" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (28 samples, 0.03%)</title><rect x="99.0" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.03%)</title><rect x="99.0" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.0" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.03%)</title><rect x="99.0" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.0" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.03%)</title><rect x="99.0" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.0" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.03%)</title><rect x="99.0" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="102.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$545/339895274.get (34,757 samples, 40.66%)</title><rect x="99.5" y="659.0" width="479.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.5" y="670.0">ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$545/339895274...</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localGet$1 (34,757 samples, 40.66%)</title><rect x="99.5" y="643.0" width="479.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.5" y="654.0">ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localGet$1</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (34,578 samples, 40.45%)</title><rect x="99.5" y="627.0" width="477.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.5" y="638.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,986 samples, 5.83%)</title><rect x="99.5" y="611.0" width="68.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.5" y="622.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,477 samples, 5.24%)</title><rect x="99.5" y="595.0" width="61.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.5" y="606.0">com/go..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,372 samples, 1.60%)</title><rect x="99.7" y="579.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.7" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,372 samples, 1.60%)</title><rect x="99.7" y="563.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.7" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,372 samples, 1.60%)</title><rect x="99.7" y="547.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,372 samples, 1.60%)</title><rect x="99.7" y="531.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,372 samples, 1.60%)</title><rect x="99.7" y="515.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.7" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$533/1829482424.compare (1,372 samples, 1.60%)</title><rect x="99.7" y="499.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.7" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,372 samples, 1.60%)</title><rect x="99.7" y="483.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.7" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (1,372 samples, 1.60%)</title><rect x="99.7" y="467.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,372 samples, 1.60%)</title><rect x="99.7" y="451.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$531/1339359255.apply (1,372 samples, 1.60%)</title><rect x="99.7" y="435.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (1,372 samples, 1.60%)</title><rect x="99.7" y="419.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,372 samples, 1.60%)</title><rect x="99.7" y="403.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,372 samples, 1.60%)</title><rect x="99.7" y="387.0" width="19.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="102.7" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,089 samples, 3.61%)</title><rect x="118.7" y="579.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.7" y="590.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,089 samples, 3.61%)</title><rect x="118.7" y="563.0" width="42.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.7" y="574.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,089 samples, 3.61%)</title><rect x="118.7" y="547.0" width="42.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.7" y="558.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,089 samples, 3.61%)</title><rect x="118.7" y="531.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.7" y="542.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,089 samples, 3.61%)</title><rect x="118.7" y="515.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.7" y="526.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,089 samples, 3.61%)</title><rect x="118.7" y="499.0" width="42.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.7" y="510.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,629 samples, 3.08%)</title><rect x="118.7" y="483.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.7" y="494.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (2,629 samples, 3.08%)</title><rect x="118.7" y="467.0" width="36.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.7" y="478.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (2,629 samples, 3.08%)</title><rect x="118.7" y="451.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.7" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (2,629 samples, 3.08%)</title><rect x="118.7" y="435.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.7" y="446.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,011 samples, 1.18%)</title><rect x="118.7" y="419.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (661 samples, 0.77%)</title><rect x="118.7" y="403.0" width="9.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="121.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (350 samples, 0.41%)</title><rect x="127.8" y="403.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.8" y="414.0"></text>
</g>
<g>
<title>byte[] (350 samples, 0.41%)</title><rect x="127.8" y="387.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (115 samples, 0.13%)</title><rect x="132.6" y="419.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="135.6" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (104 samples, 0.12%)</title><rect x="134.2" y="419.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="137.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (1,077 samples, 1.26%)</title><rect x="135.6" y="419.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (746 samples, 0.87%)</title><rect x="135.6" y="403.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (446 samples, 0.52%)</title><rect x="135.6" y="387.0" width="6.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="138.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (300 samples, 0.35%)</title><rect x="141.8" y="387.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.8" y="398.0"></text>
</g>
<g>
<title>byte[] (300 samples, 0.35%)</title><rect x="141.8" y="371.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="144.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (331 samples, 0.39%)</title><rect x="145.9" y="403.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (331 samples, 0.39%)</title><rect x="145.9" y="387.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (208 samples, 0.24%)</title><rect x="145.9" y="371.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="148.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (123 samples, 0.14%)</title><rect x="148.8" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.8" y="382.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.14%)</title><rect x="148.8" y="355.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="151.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (322 samples, 0.38%)</title><rect x="150.5" y="419.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (322 samples, 0.38%)</title><rect x="150.5" y="403.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.5" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (212 samples, 0.25%)</title><rect x="150.5" y="387.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="153.5" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (110 samples, 0.13%)</title><rect x="153.4" y="387.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="398.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.13%)</title><rect x="153.4" y="371.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="156.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$533/1829482424.compare (460 samples, 0.54%)</title><rect x="154.9" y="483.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (460 samples, 0.54%)</title><rect x="154.9" y="467.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (460 samples, 0.54%)</title><rect x="154.9" y="451.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (460 samples, 0.54%)</title><rect x="154.9" y="435.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$531/1339359255.apply (460 samples, 0.54%)</title><rect x="154.9" y="419.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (460 samples, 0.54%)</title><rect x="154.9" y="403.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (460 samples, 0.54%)</title><rect x="154.9" y="387.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (460 samples, 0.54%)</title><rect x="154.9" y="371.0" width="6.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="157.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$572/921367052.apply (509 samples, 0.60%)</title><rect x="161.3" y="595.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (509 samples, 0.60%)</title><rect x="161.3" y="579.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (509 samples, 0.60%)</title><rect x="161.3" y="563.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.3" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (509 samples, 0.60%)</title><rect x="161.3" y="547.0" width="7.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="164.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.cellIterator (29,592 samples, 34.61%)</title><rect x="168.3" y="611.0" width="408.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.3" y="622.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.cellIterator</text>
</g>
<g>
<title>java.util.ArrayList (274 samples, 0.32%)</title><rect x="168.3" y="595.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="171.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (48 samples, 0.06%)</title><rect x="172.1" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (48 samples, 0.06%)</title><rect x="172.1" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (48 samples, 0.06%)</title><rect x="172.1" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.1" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (48 samples, 0.06%)</title><rect x="172.1" y="547.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="175.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="172.8" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="172.8" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$550/2074174378.get$Lambda (33 samples, 0.04%)</title><rect x="172.8" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.LsmDAOImpl$$Lambda$550 (33 samples, 0.04%)</title><rect x="172.8" y="547.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="175.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (56 samples, 0.07%)</title><rect x="173.2" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.2" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (56 samples, 0.07%)</title><rect x="173.2" y="579.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="176.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (28,821 samples, 33.71%)</title><rect x="174.0" y="595.0" width="397.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.0" y="606.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4,924 samples, 5.76%)</title><rect x="174.0" y="579.0" width="68.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.0" y="590.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,913 samples, 5.75%)</title><rect x="174.1" y="563.0" width="67.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.1" y="574.0">com/goo..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (29 samples, 0.03%)</title><rect x="174.1" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="177.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (170 samples, 0.20%)</title><rect x="174.5" y="547.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.5" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (170 samples, 0.20%)</title><rect x="174.5" y="531.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="177.5" y="542.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (53 samples, 0.06%)</title><rect x="176.9" y="547.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="179.9" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (20 samples, 0.02%)</title><rect x="177.6" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.02%)</title><rect x="177.6" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="180.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4,374 samples, 5.12%)</title><rect x="177.9" y="547.0" width="60.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.9" y="558.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4,374 samples, 5.12%)</title><rect x="177.9" y="531.0" width="60.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.9" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (50 samples, 0.06%)</title><rect x="177.9" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.06%)</title><rect x="177.9" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.06%)</title><rect x="177.9" y="483.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="180.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4,324 samples, 5.06%)</title><rect x="178.6" y="515.0" width="59.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4,324 samples, 5.06%)</title><rect x="178.6" y="499.0" width="59.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.6" y="510.0">java/u..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,324 samples, 5.06%)</title><rect x="178.6" y="483.0" width="59.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.6" y="494.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,324 samples, 5.06%)</title><rect x="178.6" y="467.0" width="59.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.6" y="478.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,590 samples, 4.20%)</title><rect x="178.6" y="451.0" width="49.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.6" y="462.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (3,590 samples, 4.20%)</title><rect x="178.6" y="435.0" width="49.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.6" y="446.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (3,590 samples, 4.20%)</title><rect x="178.6" y="419.0" width="49.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.6" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (3,590 samples, 4.20%)</title><rect x="178.6" y="403.0" width="49.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="414.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,422 samples, 1.66%)</title><rect x="178.6" y="387.0" width="19.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (905 samples, 1.06%)</title><rect x="178.6" y="371.0" width="12.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="181.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (517 samples, 0.60%)</title><rect x="191.1" y="371.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.1" y="382.0"></text>
</g>
<g>
<title>byte[] (517 samples, 0.60%)</title><rect x="191.1" y="355.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="194.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (155 samples, 0.18%)</title><rect x="198.2" y="387.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="201.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (145 samples, 0.17%)</title><rect x="200.4" y="387.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="203.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (1,433 samples, 1.68%)</title><rect x="202.4" y="387.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (973 samples, 1.14%)</title><rect x="202.4" y="371.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (598 samples, 0.70%)</title><rect x="202.4" y="355.0" width="8.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="205.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (375 samples, 0.44%)</title><rect x="210.6" y="355.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.6" y="366.0"></text>
</g>
<g>
<title>byte[] (375 samples, 0.44%)</title><rect x="210.6" y="339.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="213.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (460 samples, 0.54%)</title><rect x="215.8" y="371.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (460 samples, 0.54%)</title><rect x="215.8" y="355.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (322 samples, 0.38%)</title><rect x="215.8" y="339.0" width="4.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="218.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (138 samples, 0.16%)</title><rect x="220.2" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.2" y="350.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.16%)</title><rect x="220.2" y="323.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="223.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (435 samples, 0.51%)</title><rect x="222.1" y="387.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (435 samples, 0.51%)</title><rect x="222.1" y="371.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (274 samples, 0.32%)</title><rect x="222.1" y="355.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="225.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (161 samples, 0.19%)</title><rect x="225.9" y="355.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.9" y="366.0"></text>
</g>
<g>
<title>byte[] (161 samples, 0.19%)</title><rect x="225.9" y="339.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="228.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$533/1829482424.compare (734 samples, 0.86%)</title><rect x="228.1" y="451.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.1" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (734 samples, 0.86%)</title><rect x="228.1" y="435.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (734 samples, 0.86%)</title><rect x="228.1" y="419.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.1" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (734 samples, 0.86%)</title><rect x="228.1" y="403.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$531/1339359255.apply (734 samples, 0.86%)</title><rect x="228.1" y="387.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (734 samples, 0.86%)</title><rect x="228.1" y="371.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (734 samples, 0.86%)</title><rect x="228.1" y="355.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (734 samples, 0.86%)</title><rect x="228.1" y="339.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="231.1" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (267 samples, 0.31%)</title><rect x="238.3" y="547.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (267 samples, 0.31%)</title><rect x="238.3" y="531.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (267 samples, 0.31%)</title><rect x="238.3" y="515.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (67 samples, 0.08%)</title><rect x="238.3" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$528/1954585442.getAsBoolean (67 samples, 0.08%)</title><rect x="238.3" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (67 samples, 0.08%)</title><rect x="238.3" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (67 samples, 0.08%)</title><rect x="238.3" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (37 samples, 0.04%)</title><rect x="238.3" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (37 samples, 0.04%)</title><rect x="238.3" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.3" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (37 samples, 0.04%)</title><rect x="238.3" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="241.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (30 samples, 0.04%)</title><rect x="238.8" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable$$Lambda$520/1508899841.apply (30 samples, 0.04%)</title><rect x="238.8" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.lambda$iterator$0 (30 samples, 0.04%)</title><rect x="238.8" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (30 samples, 0.04%)</title><rect x="238.8" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="241.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (200 samples, 0.23%)</title><rect x="239.2" y="499.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.2" y="510.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (44 samples, 0.05%)</title><rect x="239.2" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="242.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.04%)</title><rect x="239.8" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.04%)</title><rect x="239.8" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$528/1954585442.get$Lambda (25 samples, 0.03%)</title><rect x="240.0" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.0" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$528 (25 samples, 0.03%)</title><rect x="240.0" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="243.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (27 samples, 0.03%)</title><rect x="240.3" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (27 samples, 0.03%)</title><rect x="240.3" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.3" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (27 samples, 0.03%)</title><rect x="240.3" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="243.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (93 samples, 0.11%)</title><rect x="240.7" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.7" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.11%)</title><rect x="240.7" y="467.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="243.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,095 samples, 1.28%)</title><rect x="242.0" y="579.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.0" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (25 samples, 0.03%)</title><rect x="242.0" y="563.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="245.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,070 samples, 1.25%)</title><rect x="242.3" y="563.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,070 samples, 1.25%)</title><rect x="242.3" y="547.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.3" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (245 samples, 0.29%)</title><rect x="242.3" y="531.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (245 samples, 0.29%)</title><rect x="242.3" y="515.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (245 samples, 0.29%)</title><rect x="242.3" y="499.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (245 samples, 0.29%)</title><rect x="242.3" y="483.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (245 samples, 0.29%)</title><rect x="242.3" y="467.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$533/1829482424.compare (245 samples, 0.29%)</title><rect x="242.3" y="451.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (245 samples, 0.29%)</title><rect x="242.3" y="435.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (245 samples, 0.29%)</title><rect x="242.3" y="419.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (245 samples, 0.29%)</title><rect x="242.3" y="403.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$531/1339359255.apply (245 samples, 0.29%)</title><rect x="242.3" y="387.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (245 samples, 0.29%)</title><rect x="242.3" y="371.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (245 samples, 0.29%)</title><rect x="242.3" y="355.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (245 samples, 0.29%)</title><rect x="242.3" y="339.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="245.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (825 samples, 0.97%)</title><rect x="245.7" y="531.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (825 samples, 0.97%)</title><rect x="245.7" y="515.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (825 samples, 0.97%)</title><rect x="245.7" y="499.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (825 samples, 0.97%)</title><rect x="245.7" y="483.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (825 samples, 0.97%)</title><rect x="245.7" y="467.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (825 samples, 0.97%)</title><rect x="245.7" y="451.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (704 samples, 0.82%)</title><rect x="245.7" y="435.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (704 samples, 0.82%)</title><rect x="245.7" y="419.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (704 samples, 0.82%)</title><rect x="245.7" y="403.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (704 samples, 0.82%)</title><rect x="245.7" y="387.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (271 samples, 0.32%)</title><rect x="245.7" y="371.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (167 samples, 0.20%)</title><rect x="245.7" y="355.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="248.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (104 samples, 0.12%)</title><rect x="248.0" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.0" y="366.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.12%)</title><rect x="248.0" y="339.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="251.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (29 samples, 0.03%)</title><rect x="249.4" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="252.4" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (23 samples, 0.03%)</title><rect x="249.8" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="252.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (293 samples, 0.34%)</title><rect x="250.1" y="371.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.1" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (185 samples, 0.22%)</title><rect x="250.1" y="355.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (132 samples, 0.15%)</title><rect x="250.1" y="339.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="253.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (53 samples, 0.06%)</title><rect x="252.0" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.0" y="350.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.06%)</title><rect x="252.0" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="255.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (108 samples, 0.13%)</title><rect x="252.7" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.13%)</title><rect x="252.7" y="339.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (79 samples, 0.09%)</title><rect x="252.7" y="323.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="255.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (29 samples, 0.03%)</title><rect x="253.8" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.8" y="334.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="253.8" y="307.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="256.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (88 samples, 0.10%)</title><rect x="254.2" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (88 samples, 0.10%)</title><rect x="254.2" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.08%)</title><rect x="254.2" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="257.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.02%)</title><rect x="255.1" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.1" y="350.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.02%)</title><rect x="255.1" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="258.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$533/1829482424.compare (121 samples, 0.14%)</title><rect x="255.4" y="435.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (121 samples, 0.14%)</title><rect x="255.4" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/377478451.compare (121 samples, 0.14%)</title><rect x="255.4" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (121 samples, 0.14%)</title><rect x="255.4" y="387.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$531/1339359255.apply (121 samples, 0.14%)</title><rect x="255.4" y="371.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (121 samples, 0.14%)</title><rect x="255.4" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (121 samples, 0.14%)</title><rect x="255.4" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (121 samples, 0.14%)</title><rect x="255.4" y="323.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="258.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (22,802 samples, 26.67%)</title><rect x="257.1" y="579.0" width="314.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.1" y="590.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAl..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (22,802 samples, 26.67%)</title><rect x="257.1" y="563.0" width="314.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.1" y="574.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (89 samples, 0.10%)</title><rect x="257.1" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.1" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (30 samples, 0.04%)</title><rect x="257.1" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="260.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (59 samples, 0.07%)</title><rect x="257.5" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (59 samples, 0.07%)</title><rect x="257.5" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (59 samples, 0.07%)</title><rect x="257.5" y="499.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="260.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$563/1048955218.accept (22,713 samples, 26.57%)</title><rect x="258.3" y="547.0" width="313.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.3" y="558.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lamb..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (22,713 samples, 26.57%)</title><rect x="258.3" y="531.0" width="313.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.3" y="542.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambd..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (22,713 samples, 26.57%)</title><rect x="258.3" y="515.0" width="313.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.3" y="526.0">ru/mail/polis/dao/zvladn7/SSTable.iterator</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (155 samples, 0.18%)</title><rect x="258.3" y="499.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="261.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (22,558 samples, 26.39%)</title><rect x="260.4" y="499.0" width="311.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.4" y="510.0">ru/mail/polis/dao/zvladn7/SSTable$SSTableI..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (22,558 samples, 26.39%)</title><rect x="260.4" y="483.0" width="311.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.4" y="494.0">ru/mail/polis/dao/zvladn7/SSTable.getEleme..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (22,558 samples, 26.39%)</title><rect x="260.4" y="467.0" width="311.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.4" y="478.0">ru/mail/polis/dao/zvladn7/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15,365 samples, 17.97%)</title><rect x="260.4" y="451.0" width="212.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.4" y="462.0">java/nio/ByteBuffer.allocate</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9,864 samples, 11.54%)</title><rect x="260.4" y="435.0" width="136.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="263.4" y="446.0">java.nio.HeapByte..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5,501 samples, 6.43%)</title><rect x="396.6" y="435.0" width="75.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.6" y="446.0">java/nio..</text>
</g>
<g>
<title>byte[] (5,501 samples, 6.43%)</title><rect x="396.6" y="419.0" width="75.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="399.6" y="430.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (7,193 samples, 8.41%)</title><rect x="472.5" y="451.0" width="99.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.5" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7,193 samples, 8.41%)</title><rect x="472.5" y="435.0" width="99.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.5" y="446.0">java/nio/Byt..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,726 samples, 5.53%)</title><rect x="472.5" y="419.0" width="65.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="475.5" y="430.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,467 samples, 2.89%)</title><rect x="537.7" y="419.0" width="34.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.7" y="430.0">ja..</text>
</g>
<g>
<title>byte[] (2,467 samples, 2.89%)</title><rect x="537.7" y="403.0" width="34.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="540.7" y="414.0">by..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (360 samples, 0.42%)</title><rect x="571.8" y="595.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.8" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (102 samples, 0.12%)</title><rect x="571.8" y="579.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (43 samples, 0.05%)</title><rect x="571.8" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (43 samples, 0.05%)</title><rect x="571.8" y="547.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="574.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (59 samples, 0.07%)</title><rect x="572.4" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.4" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (59 samples, 0.07%)</title><rect x="572.4" y="547.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="575.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (19 samples, 0.02%)</title><rect x="573.2" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (19 samples, 0.02%)</title><rect x="573.2" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (56 samples, 0.07%)</title><rect x="573.5" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (56 samples, 0.07%)</title><rect x="573.5" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (56 samples, 0.07%)</title><rect x="573.5" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (56 samples, 0.07%)</title><rect x="573.5" y="531.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="576.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (108 samples, 0.13%)</title><rect x="574.2" y="579.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.2" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (29 samples, 0.03%)</title><rect x="574.2" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.2" y="574.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (29 samples, 0.03%)</title><rect x="574.2" y="547.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="577.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (79 samples, 0.09%)</title><rect x="574.6" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="574.6" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="574.6" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$524/1095779865.get$Lambda (24 samples, 0.03%)</title><rect x="574.6" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$524 (24 samples, 0.03%)</title><rect x="574.6" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="577.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (55 samples, 0.06%)</title><rect x="575.0" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.0" y="558.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (55 samples, 0.06%)</title><rect x="575.0" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="578.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (75 samples, 0.09%)</title><rect x="575.7" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.7" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (75 samples, 0.09%)</title><rect x="575.7" y="563.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="578.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.getLocalValue (179 samples, 0.21%)</title><rect x="576.8" y="627.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (62 samples, 0.07%)</title><rect x="576.8" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (62 samples, 0.07%)</title><rect x="576.8" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.07%)</title><rect x="576.8" y="579.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="579.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.active (81 samples, 0.09%)</title><rect x="577.6" y="611.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ResponseValue (50 samples, 0.06%)</title><rect x="577.6" y="595.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="580.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.&lt;init&gt; (31 samples, 0.04%)</title><rect x="578.3" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.3" y="606.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.04%)</title><rect x="578.3" y="579.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="581.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (36 samples, 0.04%)</title><rect x="578.7" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.7" y="622.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="578.7" y="595.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="581.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (447 samples, 0.52%)</title><rect x="579.2" y="675.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (447 samples, 0.52%)</title><rect x="579.2" y="659.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (185 samples, 0.22%)</title><rect x="579.2" y="643.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (185 samples, 0.22%)</title><rect x="579.2" y="627.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (185 samples, 0.22%)</title><rect x="579.2" y="611.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (185 samples, 0.22%)</title><rect x="579.2" y="595.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$221/1687115027.accept (185 samples, 0.22%)</title><rect x="579.2" y="579.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$respond$4 (185 samples, 0.22%)</title><rect x="579.2" y="563.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (185 samples, 0.22%)</title><rect x="579.2" y="547.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (185 samples, 0.22%)</title><rect x="579.2" y="531.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (140 samples, 0.16%)</title><rect x="579.2" y="515.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (140 samples, 0.16%)</title><rect x="579.2" y="499.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.2" y="510.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.16%)</title><rect x="579.2" y="483.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="582.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 0.05%)</title><rect x="581.2" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.2" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.05%)</title><rect x="581.2" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="584.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$561/920298706.apply (74 samples, 0.09%)</title><rect x="581.8" y="643.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$resolveGet$5 (74 samples, 0.09%)</title><rect x="581.8" y="627.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toResponse (74 samples, 0.09%)</title><rect x="581.8" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toResponse (74 samples, 0.09%)</title><rect x="581.8" y="595.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue$$Lambda$581/1471733406.apply (74 samples, 0.09%)</title><rect x="581.8" y="579.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.lambda$toResponse$0 (74 samples, 0.09%)</title><rect x="581.8" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (74 samples, 0.09%)</title><rect x="581.8" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.8" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (47 samples, 0.05%)</title><rect x="581.8" y="531.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="584.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 0.03%)</title><rect x="582.4" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$568/123008876.apply (188 samples, 0.22%)</title><rect x="582.8" y="643.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toProxyResponse (188 samples, 0.22%)</title><rect x="582.8" y="627.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.toResponse (188 samples, 0.22%)</title><rect x="582.8" y="611.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue$$Lambda$576/1794403182.apply (188 samples, 0.22%)</title><rect x="582.8" y="595.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.proxyResponse (188 samples, 0.22%)</title><rect x="582.8" y="579.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.8" y="590.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.08%)</title><rect x="582.8" y="563.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="585.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/primitives/Longs.toByteArray (28 samples, 0.03%)</title><rect x="583.8" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.8" y="574.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="583.8" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="586.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (89 samples, 0.10%)</title><rect x="584.2" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.2" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.03%)</title><rect x="584.2" y="547.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="587.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (65 samples, 0.08%)</title><rect x="584.5" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.5" y="558.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="584.5" y="531.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="587.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.03%)</title><rect x="584.9" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="587.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (428 samples, 0.50%)</title><rect x="585.4" y="675.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (230 samples, 0.27%)</title><rect x="585.4" y="659.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (230 samples, 0.27%)</title><rect x="585.4" y="643.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (230 samples, 0.27%)</title><rect x="585.4" y="627.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (230 samples, 0.27%)</title><rect x="585.4" y="611.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="588.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (198 samples, 0.23%)</title><rect x="588.6" y="659.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (194 samples, 0.23%)</title><rect x="588.6" y="643.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (194 samples, 0.23%)</title><rect x="588.6" y="627.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (194 samples, 0.23%)</title><rect x="588.6" y="611.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="591.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.run (525 samples, 0.61%)</title><rect x="591.3" y="675.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (525 samples, 0.61%)</title><rect x="591.3" y="659.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (525 samples, 0.61%)</title><rect x="591.3" y="643.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (525 samples, 0.61%)</title><rect x="591.3" y="627.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (525 samples, 0.61%)</title><rect x="591.3" y="611.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (525 samples, 0.61%)</title><rect x="591.3" y="595.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (525 samples, 0.61%)</title><rect x="591.3" y="579.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (525 samples, 0.61%)</title><rect x="591.3" y="563.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (525 samples, 0.61%)</title><rect x="591.3" y="547.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (525 samples, 0.61%)</title><rect x="591.3" y="531.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (525 samples, 0.61%)</title><rect x="591.3" y="515.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (463 samples, 0.54%)</title><rect x="591.3" y="499.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.05%)</title><rect x="591.3" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.05%)</title><rect x="591.3" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/1417557822.get$Lambda (24 samples, 0.03%)</title><rect x="591.3" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$417 (24 samples, 0.03%)</title><rect x="591.3" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="594.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (422 samples, 0.49%)</title><rect x="591.9" y="483.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (54 samples, 0.06%)</title><rect x="591.9" y="467.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="594.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (368 samples, 0.43%)</title><rect x="592.6" y="467.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (368 samples, 0.43%)</title><rect x="592.6" y="451.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (368 samples, 0.43%)</title><rect x="592.6" y="435.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (165 samples, 0.19%)</title><rect x="592.6" y="419.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (62 samples, 0.07%)</title><rect x="592.6" y="403.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="595.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/1589996959.apply (103 samples, 0.12%)</title><rect x="593.5" y="403.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (103 samples, 0.12%)</title><rect x="593.5" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (103 samples, 0.12%)</title><rect x="593.5" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.5" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (24 samples, 0.03%)</title><rect x="593.5" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.5" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (24 samples, 0.03%)</title><rect x="593.5" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.5" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (24 samples, 0.03%)</title><rect x="593.5" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="596.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (79 samples, 0.09%)</title><rect x="593.8" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (66 samples, 0.08%)</title><rect x="594.0" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (66 samples, 0.08%)</title><rect x="594.0" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (33 samples, 0.04%)</title><rect x="594.0" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="597.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="594.4" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="594.4" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.04%)</title><rect x="594.4" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="597.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (203 samples, 0.24%)</title><rect x="594.9" y="419.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (203 samples, 0.24%)</title><rect x="594.9" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1660747199.apply (203 samples, 0.24%)</title><rect x="594.9" y="387.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (203 samples, 0.24%)</title><rect x="594.9" y="371.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (203 samples, 0.24%)</title><rect x="594.9" y="355.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1781629338.apply (203 samples, 0.24%)</title><rect x="594.9" y="339.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (203 samples, 0.24%)</title><rect x="594.9" y="323.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (76 samples, 0.09%)</title><rect x="595.1" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (76 samples, 0.09%)</title><rect x="595.1" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (44 samples, 0.05%)</title><rect x="595.1" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="598.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.04%)</title><rect x="595.7" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.04%)</title><rect x="595.7" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.04%)</title><rect x="595.7" y="243.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="598.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (110 samples, 0.13%)</title><rect x="596.2" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (61 samples, 0.07%)</title><rect x="596.2" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (33 samples, 0.04%)</title><rect x="596.2" y="275.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="599.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (28 samples, 0.03%)</title><rect x="596.6" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (28 samples, 0.03%)</title><rect x="596.6" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.03%)</title><rect x="596.6" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="599.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (49 samples, 0.06%)</title><rect x="597.0" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (25 samples, 0.03%)</title><rect x="597.0" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (24 samples, 0.03%)</title><rect x="597.4" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (24 samples, 0.03%)</title><rect x="597.4" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (24 samples, 0.03%)</title><rect x="597.4" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (24 samples, 0.03%)</title><rect x="597.4" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (24 samples, 0.03%)</title><rect x="597.4" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (24 samples, 0.03%)</title><rect x="597.4" y="195.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="600.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (62 samples, 0.07%)</title><rect x="597.7" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (62 samples, 0.07%)</title><rect x="597.7" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (62 samples, 0.07%)</title><rect x="597.7" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (62 samples, 0.07%)</title><rect x="597.7" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (62 samples, 0.07%)</title><rect x="597.7" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.7" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (62 samples, 0.07%)</title><rect x="597.7" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.7" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (26 samples, 0.03%)</title><rect x="597.7" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.7" y="414.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (26 samples, 0.03%)</title><rect x="597.7" y="387.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="600.7" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (36 samples, 0.04%)</title><rect x="598.1" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.1" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (36 samples, 0.04%)</title><rect x="598.1" y="387.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="601.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,542 samples, 5.31%)</title><rect x="598.6" y="675.0" width="62.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,542 samples, 5.31%)</title><rect x="598.6" y="659.0" width="62.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.6" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,651 samples, 4.27%)</title><rect x="598.6" y="643.0" width="50.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.6" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (3,651 samples, 4.27%)</title><rect x="598.6" y="627.0" width="50.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.6" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,651 samples, 4.27%)</title><rect x="598.6" y="611.0" width="50.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.6" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (83 samples, 0.10%)</title><rect x="598.6" y="595.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (83 samples, 0.10%)</title><rect x="598.6" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (83 samples, 0.10%)</title><rect x="598.6" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (83 samples, 0.10%)</title><rect x="598.6" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="598.6" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (43 samples, 0.05%)</title><rect x="598.6" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="598.6" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (43 samples, 0.05%)</title><rect x="598.6" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (43 samples, 0.05%)</title><rect x="598.6" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.6" y="478.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.05%)</title><rect x="598.6" y="451.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="601.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (40 samples, 0.05%)</title><rect x="599.2" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.05%)</title><rect x="599.2" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.05%)</title><rect x="599.2" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412/1147867721.get$Lambda (40 samples, 0.05%)</title><rect x="599.2" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412 (40 samples, 0.05%)</title><rect x="599.2" y="467.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="602.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3,568 samples, 4.17%)</title><rect x="599.7" y="595.0" width="49.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.7" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3,568 samples, 4.17%)</title><rect x="599.7" y="579.0" width="49.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.7" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3,568 samples, 4.17%)</title><rect x="599.7" y="563.0" width="49.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.7" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3,568 samples, 4.17%)</title><rect x="599.7" y="547.0" width="49.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.7" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,738 samples, 2.03%)</title><rect x="599.7" y="531.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,738 samples, 2.03%)</title><rect x="599.7" y="515.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,738 samples, 2.03%)</title><rect x="599.7" y="499.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.7" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,738 samples, 2.03%)</title><rect x="599.7" y="483.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.7" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,738 samples, 2.03%)</title><rect x="599.7" y="467.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.7" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,738 samples, 2.03%)</title><rect x="599.7" y="451.0" width="24.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.7" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,738 samples, 2.03%)</title><rect x="599.7" y="435.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.7" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,678 samples, 1.96%)</title><rect x="599.7" y="419.0" width="23.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.7" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,678 samples, 1.96%)</title><rect x="599.7" y="403.0" width="23.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.7" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,631 samples, 1.91%)</title><rect x="599.7" y="387.0" width="22.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.7" y="398.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (41 samples, 0.05%)</title><rect x="599.7" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="602.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.apply (1,530 samples, 1.79%)</title><rect x="600.3" y="371.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.3" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,530 samples, 1.79%)</title><rect x="600.3" y="355.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.3" y="366.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.03%)</title><rect x="600.3" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.03%)</title><rect x="600.3" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$507/1071206426.get$Lambda (28 samples, 0.03%)</title><rect x="600.3" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$507 (28 samples, 0.03%)</title><rect x="600.3" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="603.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (84 samples, 0.10%)</title><rect x="600.7" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (84 samples, 0.10%)</title><rect x="600.7" y="323.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (39 samples, 0.05%)</title><rect x="600.7" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="603.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="601.2" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="601.2" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="601.2" y="275.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="604.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,418 samples, 1.66%)</title><rect x="601.8" y="339.0" width="19.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.03%)</title><rect x="601.8" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="601.8" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$500/682479467.get$Lambda (22 samples, 0.03%)</title><rect x="601.8" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$500 (22 samples, 0.03%)</title><rect x="601.8" y="275.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="604.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (68 samples, 0.08%)</title><rect x="602.1" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (68 samples, 0.08%)</title><rect x="602.1" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (41 samples, 0.05%)</title><rect x="602.1" y="291.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="605.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.03%)</title><rect x="602.7" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.03%)</title><rect x="602.7" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.03%)</title><rect x="602.7" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="605.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,328 samples, 1.55%)</title><rect x="603.1" y="323.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,228 samples, 1.44%)</title><rect x="603.1" y="307.0" width="16.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="603.1" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="603.1" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$495/180684040.get$Lambda (21 samples, 0.02%)</title><rect x="603.2" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$495 (21 samples, 0.02%)</title><rect x="603.2" y="243.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="606.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1669050119.linkToTargetMethod (45 samples, 0.05%)</title><rect x="603.5" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1785429695.invokeStatic (45 samples, 0.05%)</title><rect x="603.5" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/939439677.get$Lambda (45 samples, 0.05%)</title><rect x="603.5" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$470 (45 samples, 0.05%)</title><rect x="603.5" y="243.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="606.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (229 samples, 0.27%)</title><rect x="604.1" y="291.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (83 samples, 0.10%)</title><rect x="604.1" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.1" y="286.0"></text>
</g>
<g>
<title>java/util/List.spliterator (26 samples, 0.03%)</title><rect x="604.1" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.1" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (26 samples, 0.03%)</title><rect x="604.1" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="607.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (57 samples, 0.07%)</title><rect x="604.5" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (57 samples, 0.07%)</title><rect x="604.5" y="243.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="607.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (66 samples, 0.08%)</title><rect x="605.3" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (66 samples, 0.08%)</title><rect x="605.3" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (66 samples, 0.08%)</title><rect x="605.3" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (25 samples, 0.03%)</title><rect x="605.3" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (25 samples, 0.03%)</title><rect x="605.3" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (25 samples, 0.03%)</title><rect x="605.3" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.3" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (25 samples, 0.03%)</title><rect x="605.3" y="179.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="608.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$467/808665053.get (19 samples, 0.02%)</title><rect x="605.6" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.6" y="238.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (19 samples, 0.02%)</title><rect x="605.6" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="608.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.03%)</title><rect x="605.9" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.03%)</title><rect x="605.9" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.9" y="222.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (22 samples, 0.03%)</title><rect x="605.9" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.9" y="206.0"></text>
</g>
<g>
<title>java.util.OptionalLong (22 samples, 0.03%)</title><rect x="605.9" y="179.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="608.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (80 samples, 0.09%)</title><rect x="606.2" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (80 samples, 0.09%)</title><rect x="606.2" y="259.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="609.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (154 samples, 0.18%)</title><rect x="607.3" y="291.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (70 samples, 0.08%)</title><rect x="607.3" y="275.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (43 samples, 0.05%)</title><rect x="607.3" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="610.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.03%)</title><rect x="607.9" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.03%)</title><rect x="607.9" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.03%)</title><rect x="607.9" y="227.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="610.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (84 samples, 0.10%)</title><rect x="608.3" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (84 samples, 0.10%)</title><rect x="608.3" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (42 samples, 0.05%)</title><rect x="608.3" y="243.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="611.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.05%)</title><rect x="608.8" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.05%)</title><rect x="608.8" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.05%)</title><rect x="608.8" y="211.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="611.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (30 samples, 0.04%)</title><rect x="609.7" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="612.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.05%)</title><rect x="610.1" y="291.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="613.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (581 samples, 0.68%)</title><rect x="610.8" y="291.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/939439677.run (581 samples, 0.68%)</title><rect x="610.8" y="275.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (581 samples, 0.68%)</title><rect x="610.8" y="259.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.07%)</title><rect x="610.8" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.07%)</title><rect x="610.8" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1855914119.get$Lambda (23 samples, 0.03%)</title><rect x="611.0" y="211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$472 (23 samples, 0.03%)</title><rect x="611.0" y="195.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="614.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$480/1259098462.get$Lambda (25 samples, 0.03%)</title><rect x="611.3" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$480 (25 samples, 0.03%)</title><rect x="611.3" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="614.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (84 samples, 0.10%)</title><rect x="611.7" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (84 samples, 0.10%)</title><rect x="611.7" y="227.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.05%)</title><rect x="611.7" y="211.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="614.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="612.3" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="612.3" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.04%)</title><rect x="612.3" y="179.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="615.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (40 samples, 0.05%)</title><rect x="612.8" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="615.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (33 samples, 0.04%)</title><rect x="613.4" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.04%)</title><rect x="613.4" y="227.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="616.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (107 samples, 0.13%)</title><rect x="613.8" y="243.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (107 samples, 0.13%)</title><rect x="613.8" y="227.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (89 samples, 0.10%)</title><rect x="614.1" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (89 samples, 0.10%)</title><rect x="614.1" y="195.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (89 samples, 0.10%)</title><rect x="614.1" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (59 samples, 0.07%)</title><rect x="614.1" y="163.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="617.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.04%)</title><rect x="614.9" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.04%)</title><rect x="614.9" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.04%)</title><rect x="614.9" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="617.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (87 samples, 0.10%)</title><rect x="615.3" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (87 samples, 0.10%)</title><rect x="615.3" y="227.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (87 samples, 0.10%)</title><rect x="615.3" y="211.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (87 samples, 0.10%)</title><rect x="615.3" y="195.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.03%)</title><rect x="615.3" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.03%)</title><rect x="615.3" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="618.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (64 samples, 0.07%)</title><rect x="615.6" y="179.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (64 samples, 0.07%)</title><rect x="615.6" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.6" y="174.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.07%)</title><rect x="615.6" y="147.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="618.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (168 samples, 0.20%)</title><rect x="616.5" y="243.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (44 samples, 0.05%)</title><rect x="616.5" y="227.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="619.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (124 samples, 0.15%)</title><rect x="617.1" y="227.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (124 samples, 0.15%)</title><rect x="617.1" y="211.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (124 samples, 0.15%)</title><rect x="617.1" y="195.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.15%)</title><rect x="617.1" y="179.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (32 samples, 0.04%)</title><rect x="617.1" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.04%)</title><rect x="617.1" y="147.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="620.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (92 samples, 0.11%)</title><rect x="617.6" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (92 samples, 0.11%)</title><rect x="617.6" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.6" y="158.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.11%)</title><rect x="617.6" y="131.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="620.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (85 samples, 0.10%)</title><rect x="618.8" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (85 samples, 0.10%)</title><rect x="618.8" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (85 samples, 0.10%)</title><rect x="618.8" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (85 samples, 0.10%)</title><rect x="618.8" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (50 samples, 0.06%)</title><rect x="618.8" y="227.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="621.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="619.5" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="619.5" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="619.5" y="195.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="622.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler.apply (100 samples, 0.12%)</title><rect x="620.0" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (23 samples, 0.03%)</title><rect x="620.0" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (23 samples, 0.03%)</title><rect x="620.0" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="623.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (77 samples, 0.09%)</title><rect x="620.3" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (25 samples, 0.03%)</title><rect x="620.3" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="623.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (52 samples, 0.06%)</title><rect x="620.7" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.02%)</title><rect x="620.7" y="259.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="623.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.04%)</title><rect x="620.9" y="259.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="623.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.apply (60 samples, 0.07%)</title><rect x="621.4" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (60 samples, 0.07%)</title><rect x="621.4" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (26 samples, 0.03%)</title><rect x="621.4" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (26 samples, 0.03%)</title><rect x="621.4" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.4" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (26 samples, 0.03%)</title><rect x="621.4" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.4" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (26 samples, 0.03%)</title><rect x="621.4" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="624.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (34 samples, 0.04%)</title><rect x="621.7" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.04%)</title><rect x="621.7" y="323.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="624.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (47 samples, 0.05%)</title><rect x="622.2" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (47 samples, 0.05%)</title><rect x="622.2" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.apply (47 samples, 0.05%)</title><rect x="622.2" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (47 samples, 0.05%)</title><rect x="622.2" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (47 samples, 0.05%)</title><rect x="622.2" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="622.2" y="307.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/71450870.apply (60 samples, 0.07%)</title><rect x="622.9" y="419.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (60 samples, 0.07%)</title><rect x="622.9" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (60 samples, 0.07%)</title><rect x="622.9" y="387.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,830 samples, 2.14%)</title><rect x="623.7" y="531.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.7" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (133 samples, 0.16%)</title><rect x="623.7" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (133 samples, 0.16%)</title><rect x="623.7" y="499.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (133 samples, 0.16%)</title><rect x="623.7" y="483.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (133 samples, 0.16%)</title><rect x="623.7" y="467.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (133 samples, 0.16%)</title><rect x="623.7" y="451.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.7" y="462.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.16%)</title><rect x="623.7" y="435.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (146 samples, 0.17%)</title><rect x="625.5" y="515.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.03%)</title><rect x="625.7" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.03%)</title><rect x="625.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.03%)</title><rect x="625.7" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.7" y="478.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.03%)</title><rect x="625.7" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="628.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (37 samples, 0.04%)</title><rect x="626.0" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.0" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (37 samples, 0.04%)</title><rect x="626.0" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.0" y="494.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="626.0" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="629.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (72 samples, 0.08%)</title><rect x="626.5" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 0.08%)</title><rect x="626.5" y="483.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.06%)</title><rect x="626.5" y="467.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="629.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.03%)</title><rect x="627.2" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.2" y="478.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="627.2" y="451.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="630.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (471 samples, 0.55%)</title><rect x="627.5" y="515.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (471 samples, 0.55%)</title><rect x="627.5" y="499.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (471 samples, 0.55%)</title><rect x="627.5" y="483.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.5" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (20 samples, 0.02%)</title><rect x="627.5" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="630.5" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.03%)</title><rect x="627.8" y="467.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="630.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (51 samples, 0.06%)</title><rect x="628.1" y="467.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="631.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="629.0" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="629.0" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (27 samples, 0.03%)</title><rect x="629.0" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (27 samples, 0.03%)</title><rect x="629.0" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="632.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (34 samples, 0.04%)</title><rect x="629.4" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.4" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (34 samples, 0.04%)</title><rect x="629.4" y="451.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="632.4" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (258 samples, 0.30%)</title><rect x="629.8" y="467.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (258 samples, 0.30%)</title><rect x="629.8" y="451.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (258 samples, 0.30%)</title><rect x="629.8" y="435.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (68 samples, 0.08%)</title><rect x="629.8" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (68 samples, 0.08%)</title><rect x="629.8" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (68 samples, 0.08%)</title><rect x="629.8" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (68 samples, 0.08%)</title><rect x="629.8" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (68 samples, 0.08%)</title><rect x="629.8" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (68 samples, 0.08%)</title><rect x="629.8" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (68 samples, 0.08%)</title><rect x="629.8" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (68 samples, 0.08%)</title><rect x="629.8" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (68 samples, 0.08%)</title><rect x="629.8" y="291.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="632.8" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (94 samples, 0.11%)</title><rect x="630.8" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.8" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (94 samples, 0.11%)</title><rect x="630.8" y="403.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (43 samples, 0.05%)</title><rect x="630.8" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.05%)</title><rect x="630.8" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.05%)</title><rect x="630.8" y="355.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="633.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (51 samples, 0.06%)</title><rect x="631.4" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.4" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (51 samples, 0.06%)</title><rect x="631.4" y="371.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="634.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (96 samples, 0.11%)</title><rect x="632.1" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (96 samples, 0.11%)</title><rect x="632.1" y="403.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="635.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (48 samples, 0.06%)</title><rect x="633.4" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (48 samples, 0.06%)</title><rect x="633.4" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="636.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,080 samples, 1.26%)</title><rect x="634.0" y="515.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.0" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (54 samples, 0.06%)</title><rect x="634.0" y="499.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="637.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (61 samples, 0.07%)</title><rect x="634.8" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.8" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (61 samples, 0.07%)</title><rect x="634.8" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.8" y="494.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.07%)</title><rect x="634.8" y="467.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="637.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (141 samples, 0.16%)</title><rect x="635.6" y="499.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (141 samples, 0.16%)</title><rect x="635.6" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.06%)</title><rect x="635.6" y="467.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="638.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.10%)</title><rect x="636.4" y="467.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.4" y="478.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.10%)</title><rect x="636.4" y="451.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="639.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (824 samples, 0.96%)</title><rect x="637.6" y="499.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (249 samples, 0.29%)</title><rect x="637.6" y="483.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (249 samples, 0.29%)</title><rect x="637.6" y="467.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (112 samples, 0.13%)</title><rect x="637.6" y="451.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="640.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (137 samples, 0.16%)</title><rect x="639.1" y="451.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="462.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.16%)</title><rect x="639.1" y="435.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="642.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (120 samples, 0.14%)</title><rect x="641.0" y="483.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (120 samples, 0.14%)</title><rect x="641.0" y="467.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.0" y="478.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.07%)</title><rect x="641.0" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="644.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.07%)</title><rect x="641.9" y="451.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="644.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (114 samples, 0.13%)</title><rect x="642.7" y="483.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (114 samples, 0.13%)</title><rect x="642.7" y="467.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.13%)</title><rect x="642.7" y="451.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.06%)</title><rect x="642.7" y="435.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="645.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.07%)</title><rect x="643.4" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.4" y="446.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.07%)</title><rect x="643.4" y="419.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="646.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (136 samples, 0.16%)</title><rect x="644.2" y="483.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (136 samples, 0.16%)</title><rect x="644.2" y="467.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (136 samples, 0.16%)</title><rect x="644.2" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (136 samples, 0.16%)</title><rect x="644.2" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (136 samples, 0.16%)</title><rect x="644.2" y="419.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (136 samples, 0.16%)</title><rect x="644.2" y="403.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="647.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (205 samples, 0.24%)</title><rect x="646.1" y="483.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (59 samples, 0.07%)</title><rect x="646.1" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.1" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (59 samples, 0.07%)</title><rect x="646.1" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="649.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (94 samples, 0.11%)</title><rect x="646.9" y="467.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.9" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (94 samples, 0.11%)</title><rect x="646.9" y="451.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="649.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$463/1192001859.apply (52 samples, 0.06%)</title><rect x="648.2" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (52 samples, 0.06%)</title><rect x="648.2" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.06%)</title><rect x="648.2" y="435.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="651.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (891 samples, 1.04%)</title><rect x="649.0" y="643.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (891 samples, 1.04%)</title><rect x="649.0" y="627.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (891 samples, 1.04%)</title><rect x="649.0" y="611.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (891 samples, 1.04%)</title><rect x="649.0" y="595.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (891 samples, 1.04%)</title><rect x="649.0" y="579.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (118 samples, 0.14%)</title><rect x="649.0" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.04%)</title><rect x="649.0" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.04%)</title><rect x="649.0" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/258901730.get$Lambda (23 samples, 0.03%)</title><rect x="649.1" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$330 (23 samples, 0.03%)</title><rect x="649.1" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="652.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (39 samples, 0.05%)</title><rect x="649.4" y="547.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="652.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (45 samples, 0.05%)</title><rect x="650.0" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (45 samples, 0.05%)</title><rect x="650.0" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (19 samples, 0.02%)</title><rect x="650.0" y="515.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="653.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (26 samples, 0.03%)</title><rect x="650.2" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (26 samples, 0.03%)</title><rect x="650.2" y="499.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="653.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (770 samples, 0.90%)</title><rect x="650.6" y="563.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (770 samples, 0.90%)</title><rect x="650.6" y="547.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (770 samples, 0.90%)</title><rect x="650.6" y="531.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (770 samples, 0.90%)</title><rect x="650.6" y="515.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (770 samples, 0.90%)</title><rect x="650.6" y="499.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (770 samples, 0.90%)</title><rect x="650.6" y="483.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (44 samples, 0.05%)</title><rect x="650.6" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (44 samples, 0.05%)</title><rect x="650.6" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.6" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.05%)</title><rect x="650.6" y="435.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="653.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (19 samples, 0.02%)</title><rect x="651.2" y="467.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (19 samples, 0.02%)</title><rect x="651.2" y="451.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="654.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$471/282701340.run (436 samples, 0.51%)</title><rect x="651.4" y="467.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (436 samples, 0.51%)</title><rect x="651.4" y="451.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (436 samples, 0.51%)</title><rect x="651.4" y="435.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (113 samples, 0.13%)</title><rect x="651.4" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.4" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (85 samples, 0.10%)</title><rect x="651.4" y="403.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (27 samples, 0.03%)</title><rect x="651.4" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.4" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (27 samples, 0.03%)</title><rect x="651.4" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="654.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (58 samples, 0.07%)</title><rect x="651.8" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.8" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (58 samples, 0.07%)</title><rect x="651.8" y="371.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="654.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (28 samples, 0.03%)</title><rect x="652.6" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (28 samples, 0.03%)</title><rect x="652.6" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (28 samples, 0.03%)</title><rect x="652.6" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (323 samples, 0.38%)</title><rect x="653.0" y="419.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.0" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.now (30 samples, 0.04%)</title><rect x="653.0" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.0" y="414.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (30 samples, 0.04%)</title><rect x="653.0" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (30 samples, 0.04%)</title><rect x="653.0" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.0" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.create (30 samples, 0.04%)</title><rect x="653.0" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.0" y="366.0"></text>
</g>
<g>
<title>java.time.Instant (30 samples, 0.04%)</title><rect x="653.0" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="656.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (293 samples, 0.34%)</title><rect x="653.4" y="403.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (119 samples, 0.14%)</title><rect x="653.4" y="387.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.4" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (42 samples, 0.05%)</title><rect x="653.7" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.7" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (42 samples, 0.05%)</title><rect x="653.7" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.7" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (42 samples, 0.05%)</title><rect x="653.7" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (42 samples, 0.05%)</title><rect x="653.7" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.create (42 samples, 0.05%)</title><rect x="653.7" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.7" y="318.0"></text>
</g>
<g>
<title>java.time.Instant (42 samples, 0.05%)</title><rect x="653.7" y="291.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="656.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (37 samples, 0.04%)</title><rect x="654.6" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="657.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (68 samples, 0.08%)</title><rect x="655.1" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.02%)</title><rect x="655.1" y="371.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.1" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.02%)</title><rect x="655.1" y="355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (20 samples, 0.02%)</title><rect x="655.1" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.02%)</title><rect x="655.1" y="323.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="658.1" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.03%)</title><rect x="655.3" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.3" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (23 samples, 0.03%)</title><rect x="655.3" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.3" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (23 samples, 0.03%)</title><rect x="655.3" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="658.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (25 samples, 0.03%)</title><rect x="655.7" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (25 samples, 0.03%)</title><rect x="655.7" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="658.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (106 samples, 0.12%)</title><rect x="656.0" y="387.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (22 samples, 0.03%)</title><rect x="656.0" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="659.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (84 samples, 0.10%)</title><rect x="656.3" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (19 samples, 0.02%)</title><rect x="656.3" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (19 samples, 0.02%)</title><rect x="656.3" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (19 samples, 0.02%)</title><rect x="656.3" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (19 samples, 0.02%)</title><rect x="656.3" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="659.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (65 samples, 0.08%)</title><rect x="656.6" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (65 samples, 0.08%)</title><rect x="656.6" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (43 samples, 0.05%)</title><rect x="656.6" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="659.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (22 samples, 0.03%)</title><rect x="657.2" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (22 samples, 0.03%)</title><rect x="657.2" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="660.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (191 samples, 0.22%)</title><rect x="657.5" y="467.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (191 samples, 0.22%)</title><rect x="657.5" y="451.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (191 samples, 0.22%)</title><rect x="657.5" y="435.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (191 samples, 0.22%)</title><rect x="657.5" y="419.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (145 samples, 0.17%)</title><rect x="657.5" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (145 samples, 0.17%)</title><rect x="657.5" y="387.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (97 samples, 0.11%)</title><rect x="657.5" y="371.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler$$Lambda$578/978731872.apply (97 samples, 0.11%)</title><rect x="657.5" y="355.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler.lambda$apply$0 (97 samples, 0.11%)</title><rect x="657.5" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.active (68 samples, 0.08%)</title><rect x="657.5" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.5" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ResponseValue (35 samples, 0.04%)</title><rect x="657.5" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="660.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ResponseValue.&lt;init&gt; (33 samples, 0.04%)</title><rect x="658.0" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.0" y="318.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.04%)</title><rect x="658.0" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="661.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/GetBodyHandler.getValue (29 samples, 0.03%)</title><rect x="658.4" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.4" y="334.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="658.4" y="307.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="661.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 0.06%)</title><rect x="658.8" y="371.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.06%)</title><rect x="658.8" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$490/1490887781.accept (48 samples, 0.06%)</title><rect x="658.8" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (48 samples, 0.06%)</title><rect x="658.8" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (48 samples, 0.06%)</title><rect x="658.8" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.06%)</title><rect x="658.8" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (48 samples, 0.06%)</title><rect x="658.8" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$507/1071206426.apply (48 samples, 0.06%)</title><rect x="658.8" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (48 samples, 0.06%)</title><rect x="658.8" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (48 samples, 0.06%)</title><rect x="658.8" y="227.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="661.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (46 samples, 0.05%)</title><rect x="659.5" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.5" y="414.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="659.5" y="387.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="662.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (80 samples, 0.09%)</title><rect x="660.1" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (80 samples, 0.09%)</title><rect x="660.1" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (80 samples, 0.09%)</title><rect x="660.1" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (80 samples, 0.09%)</title><rect x="660.1" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (80 samples, 0.09%)</title><rect x="660.1" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (80 samples, 0.09%)</title><rect x="660.1" y="387.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (80 samples, 0.09%)</title><rect x="660.1" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (27 samples, 0.03%)</title><rect x="660.1" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.03%)</title><rect x="660.1" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="663.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (53 samples, 0.06%)</title><rect x="660.5" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (53 samples, 0.06%)</title><rect x="660.5" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.06%)</title><rect x="660.5" y="323.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="663.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (917 samples, 1.07%)</title><rect x="661.2" y="723.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (917 samples, 1.07%)</title><rect x="661.2" y="707.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (917 samples, 1.07%)</title><rect x="661.2" y="691.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (917 samples, 1.07%)</title><rect x="661.2" y="675.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (917 samples, 1.07%)</title><rect x="661.2" y="659.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (917 samples, 1.07%)</title><rect x="661.2" y="643.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (917 samples, 1.07%)</title><rect x="661.2" y="627.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (917 samples, 1.07%)</title><rect x="661.2" y="611.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (917 samples, 1.07%)</title><rect x="661.2" y="595.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (917 samples, 1.07%)</title><rect x="661.2" y="579.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (917 samples, 1.07%)</title><rect x="661.2" y="563.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (917 samples, 1.07%)</title><rect x="661.2" y="547.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (917 samples, 1.07%)</title><rect x="661.2" y="531.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (915 samples, 1.07%)</title><rect x="661.3" y="515.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (915 samples, 1.07%)</title><rect x="661.3" y="499.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (915 samples, 1.07%)</title><rect x="661.3" y="483.0" width="12.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="664.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,502 samples, 1.76%)</title><rect x="673.9" y="723.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.04%)</title><rect x="673.9" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.04%)</title><rect x="673.9" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1684015092.linkToTargetMethod (20 samples, 0.02%)</title><rect x="674.3" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="674.3" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1793677472.get$Lambda (20 samples, 0.02%)</title><rect x="674.3" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.3" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$384 (20 samples, 0.02%)</title><rect x="674.3" y="659.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="677.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (312 samples, 0.36%)</title><rect x="674.6" y="707.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$385/1818596436.accept (252 samples, 0.29%)</title><rect x="674.6" y="691.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (252 samples, 0.29%)</title><rect x="674.6" y="675.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (252 samples, 0.29%)</title><rect x="674.6" y="659.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (252 samples, 0.29%)</title><rect x="674.6" y="643.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (252 samples, 0.29%)</title><rect x="674.6" y="627.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (252 samples, 0.29%)</title><rect x="674.6" y="611.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (252 samples, 0.29%)</title><rect x="674.6" y="595.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (252 samples, 0.29%)</title><rect x="674.6" y="579.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (252 samples, 0.29%)</title><rect x="674.6" y="563.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (252 samples, 0.29%)</title><rect x="674.6" y="547.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (252 samples, 0.29%)</title><rect x="674.6" y="531.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (252 samples, 0.29%)</title><rect x="674.6" y="515.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (52 samples, 0.06%)</title><rect x="674.6" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (52 samples, 0.06%)</title><rect x="674.6" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (52 samples, 0.06%)</title><rect x="674.6" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (26 samples, 0.03%)</title><rect x="674.6" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (26 samples, 0.03%)</title><rect x="674.6" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (26 samples, 0.03%)</title><rect x="674.6" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (26 samples, 0.03%)</title><rect x="674.6" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (26 samples, 0.03%)</title><rect x="674.6" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="677.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.03%)</title><rect x="675.0" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.03%)</title><rect x="675.0" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.03%)</title><rect x="675.0" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.03%)</title><rect x="675.0" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.03%)</title><rect x="675.0" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (25 samples, 0.03%)</title><rect x="675.0" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="678.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (180 samples, 0.21%)</title><rect x="675.6" y="499.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (84 samples, 0.10%)</title><rect x="675.6" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (54 samples, 0.06%)</title><rect x="675.6" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.6" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.06%)</title><rect x="675.6" y="451.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="678.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (30 samples, 0.04%)</title><rect x="676.3" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.3" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (30 samples, 0.04%)</title><rect x="676.3" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.3" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (30 samples, 0.04%)</title><rect x="676.3" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="679.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (96 samples, 0.11%)</title><rect x="676.7" y="483.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$246/1337971803.get (96 samples, 0.11%)</title><rect x="676.7" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (96 samples, 0.11%)</title><rect x="676.7" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (96 samples, 0.11%)</title><rect x="676.7" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (96 samples, 0.11%)</title><rect x="676.7" y="419.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.7" y="430.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.11%)</title><rect x="676.8" y="403.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/1275593332.accept (60 samples, 0.07%)</title><rect x="678.1" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (60 samples, 0.07%)</title><rect x="678.1" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1793677472.run (60 samples, 0.07%)</title><rect x="678.1" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (60 samples, 0.07%)</title><rect x="678.1" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (60 samples, 0.07%)</title><rect x="678.1" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (60 samples, 0.07%)</title><rect x="678.1" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (60 samples, 0.07%)</title><rect x="678.1" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.1" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (60 samples, 0.07%)</title><rect x="678.1" y="579.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="681.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (219 samples, 0.26%)</title><rect x="678.9" y="707.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.9" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (219 samples, 0.26%)</title><rect x="678.9" y="691.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="681.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (66 samples, 0.08%)</title><rect x="681.9" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (35 samples, 0.04%)</title><rect x="681.9" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (35 samples, 0.04%)</title><rect x="681.9" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (35 samples, 0.04%)</title><rect x="681.9" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (35 samples, 0.04%)</title><rect x="681.9" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (35 samples, 0.04%)</title><rect x="681.9" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (35 samples, 0.04%)</title><rect x="681.9" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.9" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (35 samples, 0.04%)</title><rect x="681.9" y="595.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="684.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (31 samples, 0.04%)</title><rect x="682.4" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (31 samples, 0.04%)</title><rect x="682.4" y="675.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="685.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (183 samples, 0.21%)</title><rect x="682.8" y="707.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1724186899.run (102 samples, 0.12%)</title><rect x="682.8" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (102 samples, 0.12%)</title><rect x="682.8" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (102 samples, 0.12%)</title><rect x="682.8" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (102 samples, 0.12%)</title><rect x="682.8" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (102 samples, 0.12%)</title><rect x="682.8" y="627.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (102 samples, 0.12%)</title><rect x="682.8" y="611.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (102 samples, 0.12%)</title><rect x="682.8" y="595.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (102 samples, 0.12%)</title><rect x="682.8" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (102 samples, 0.12%)</title><rect x="682.8" y="563.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (102 samples, 0.12%)</title><rect x="682.8" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (71 samples, 0.08%)</title><rect x="682.8" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (71 samples, 0.08%)</title><rect x="682.8" y="515.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (71 samples, 0.08%)</title><rect x="682.8" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.06%)</title><rect x="682.8" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (52 samples, 0.06%)</title><rect x="682.8" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.06%)</title><rect x="682.8" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.06%)</title><rect x="682.8" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.06%)</title><rect x="682.8" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.8" y="430.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.06%)</title><rect x="682.8" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="685.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (19 samples, 0.02%)</title><rect x="683.6" y="483.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.02%)</title><rect x="683.6" y="467.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.02%)</title><rect x="683.6" y="451.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412/1147867721.get$Lambda (19 samples, 0.02%)</title><rect x="683.6" y="435.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412 (19 samples, 0.02%)</title><rect x="683.6" y="419.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="686.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (31 samples, 0.04%)</title><rect x="683.8" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.04%)</title><rect x="683.8" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.04%)</title><rect x="683.8" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 0.04%)</title><rect x="683.8" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 0.04%)</title><rect x="683.8" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (31 samples, 0.04%)</title><rect x="683.8" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (31 samples, 0.04%)</title><rect x="683.8" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="686.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$270/68138278.run (81 samples, 0.09%)</title><rect x="684.2" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (81 samples, 0.09%)</title><rect x="684.2" y="675.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="684.2" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="684.2" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.get$Lambda (33 samples, 0.04%)</title><rect x="684.2" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$401 (33 samples, 0.04%)</title><rect x="684.2" y="611.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="687.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.06%)</title><rect x="684.7" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.06%)</title><rect x="684.7" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (48 samples, 0.06%)</title><rect x="684.7" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (48 samples, 0.06%)</title><rect x="684.7" y="611.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="687.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (325 samples, 0.38%)</title><rect x="685.4" y="707.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.4" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (65 samples, 0.08%)</title><rect x="685.4" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.4" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (65 samples, 0.08%)</title><rect x="685.4" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.4" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (65 samples, 0.08%)</title><rect x="685.4" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.4" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.create (65 samples, 0.08%)</title><rect x="685.4" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.4" y="654.0"></text>
</g>
<g>
<title>java.time.Instant (65 samples, 0.08%)</title><rect x="685.4" y="627.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="688.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (260 samples, 0.30%)</title><rect x="686.3" y="691.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (89 samples, 0.10%)</title><rect x="686.3" y="675.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.3" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (89 samples, 0.10%)</title><rect x="686.3" y="659.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="689.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (171 samples, 0.20%)</title><rect x="687.5" y="675.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (76 samples, 0.09%)</title><rect x="687.5" y="659.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="690.5" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (95 samples, 0.11%)</title><rect x="688.5" y="659.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.5" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (95 samples, 0.11%)</title><rect x="688.5" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.5" y="654.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (95 samples, 0.11%)</title><rect x="688.5" y="627.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="691.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (237 samples, 0.28%)</title><rect x="689.8" y="707.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="689.8" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="689.8" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$382/206654322.get$Lambda (20 samples, 0.02%)</title><rect x="689.8" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.8" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$382 (20 samples, 0.02%)</title><rect x="689.8" y="643.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="692.8" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (129 samples, 0.15%)</title><rect x="690.1" y="691.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (50 samples, 0.06%)</title><rect x="690.1" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.1" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (50 samples, 0.06%)</title><rect x="690.1" y="659.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="693.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (79 samples, 0.09%)</title><rect x="690.8" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.8" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (79 samples, 0.09%)</title><rect x="690.8" y="659.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="693.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (88 samples, 0.10%)</title><rect x="691.9" y="691.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.9" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (88 samples, 0.10%)</title><rect x="691.9" y="675.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="694.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (71 samples, 0.08%)</title><rect x="693.1" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (71 samples, 0.08%)</title><rect x="693.1" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (71 samples, 0.08%)</title><rect x="693.1" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (71 samples, 0.08%)</title><rect x="693.1" y="659.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (23 samples, 0.03%)</title><rect x="693.1" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (23 samples, 0.03%)</title><rect x="693.1" y="627.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="696.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (48 samples, 0.06%)</title><rect x="693.4" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (48 samples, 0.06%)</title><rect x="693.4" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (48 samples, 0.06%)</title><rect x="693.4" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (48 samples, 0.06%)</title><rect x="693.4" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (48 samples, 0.06%)</title><rect x="693.4" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.4" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (48 samples, 0.06%)</title><rect x="693.4" y="563.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="696.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (22 samples, 0.03%)</title><rect x="694.3" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (22 samples, 0.03%)</title><rect x="694.3" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (22 samples, 0.03%)</title><rect x="694.3" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (22 samples, 0.03%)</title><rect x="694.3" y="659.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="697.3" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35,889 samples, 41.98%)</title><rect x="694.6" y="723.0" width="495.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.6" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (722 samples, 0.84%)</title><rect x="694.6" y="707.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.6" y="718.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (722 samples, 0.84%)</title><rect x="694.6" y="691.0" width="10.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="697.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35,167 samples, 41.14%)</title><rect x="704.6" y="707.0" width="485.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.6" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35,167 samples, 41.14%)</title><rect x="704.6" y="691.0" width="485.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.6" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35,167 samples, 41.14%)</title><rect x="704.6" y="675.0" width="485.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.6" y="686.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24,811 samples, 29.02%)</title><rect x="704.6" y="659.0" width="342.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.6" y="670.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24,811 samples, 29.02%)</title><rect x="704.6" y="643.0" width="342.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.6" y="654.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (24,087 samples, 28.17%)</title><rect x="704.6" y="627.0" width="332.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.6" y="638.0">RequestHandler1_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (588 samples, 0.69%)</title><rect x="704.6" y="611.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (588 samples, 0.69%)</title><rect x="704.6" y="595.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (588 samples, 0.69%)</title><rect x="704.6" y="579.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (588 samples, 0.69%)</title><rect x="704.6" y="563.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (265 samples, 0.31%)</title><rect x="704.6" y="547.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="707.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (323 samples, 0.38%)</title><rect x="708.3" y="547.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="558.0"></text>
</g>
<g>
<title>byte[] (323 samples, 0.38%)</title><rect x="708.3" y="531.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (23,499 samples, 27.49%)</title><rect x="712.7" y="611.0" width="324.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.7" y="622.0">ru/mail/polis/service/zvladn7/AsyncService.get</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (297 samples, 0.35%)</title><rect x="712.7" y="595.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (297 samples, 0.35%)</title><rect x="712.7" y="579.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$536/1670924841.get$Lambda (297 samples, 0.35%)</title><rect x="712.7" y="563.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$536 (297 samples, 0.35%)</title><rect x="712.7" y="547.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="715.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (23,202 samples, 27.14%)</title><rect x="716.8" y="595.0" width="320.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.8" y="606.0">ru/mail/polis/service/zvladn7/AsyncService...</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$536/1670924841.process (21,889 samples, 25.60%)</title><rect x="716.8" y="579.0" width="302.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.8" y="590.0">ru/mail/polis/service/zvladn7/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$1 (21,889 samples, 25.60%)</title><rect x="716.8" y="563.0" width="302.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.8" y="574.0">ru/mail/polis/service/zvladn7/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleGet (21,889 samples, 25.60%)</title><rect x="716.8" y="547.0" width="302.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.8" y="558.0">ru/mail/polis/service/zvladn7/ServiceHelp..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleGetOrProxy (20,836 samples, 24.37%)</title><rect x="716.8" y="531.0" width="287.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.8" y="542.0">ru/mail/polis/service/zvladn7/ServiceHe..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="716.8" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="716.8" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$554/1262452551.get$Lambda (35 samples, 0.04%)</title><rect x="716.8" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.8" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$554 (35 samples, 0.04%)</title><rect x="716.8" y="467.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="719.8" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (4,459 samples, 5.22%)</title><rect x="717.3" y="515.0" width="61.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.3" y="526.0">java/u..</text>
</g>
<g>
<title>java.lang.StringBuilder (368 samples, 0.43%)</title><rect x="717.3" y="499.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="720.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (404 samples, 0.47%)</title><rect x="722.4" y="499.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (404 samples, 0.47%)</title><rect x="722.4" y="483.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.4" y="494.0"></text>
</g>
<g>
<title>byte[] (404 samples, 0.47%)</title><rect x="722.4" y="467.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="725.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,692 samples, 1.98%)</title><rect x="728.0" y="499.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.0" y="510.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,692 samples, 1.98%)</title><rect x="728.0" y="483.0" width="23.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.0" y="494.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,692 samples, 1.98%)</title><rect x="728.0" y="467.0" width="23.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.0" y="478.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,692 samples, 1.98%)</title><rect x="728.0" y="451.0" width="23.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.0" y="462.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,692 samples, 1.98%)</title><rect x="728.0" y="435.0" width="23.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.0" y="446.0">j..</text>
</g>
<g>
<title>byte[] (1,692 samples, 1.98%)</title><rect x="728.0" y="419.0" width="23.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="731.0" y="430.0">b..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,420 samples, 1.66%)</title><rect x="751.3" y="499.0" width="19.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,420 samples, 1.66%)</title><rect x="751.3" y="483.0" width="19.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (259 samples, 0.30%)</title><rect x="751.3" y="467.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="754.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,161 samples, 1.36%)</title><rect x="754.9" y="467.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.9" y="478.0"></text>
</g>
<g>
<title>byte[] (1,161 samples, 1.36%)</title><rect x="754.9" y="451.0" width="16.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="757.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (575 samples, 0.67%)</title><rect x="770.9" y="499.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (399 samples, 0.47%)</title><rect x="770.9" y="483.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (399 samples, 0.47%)</title><rect x="770.9" y="467.0" width="5.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="773.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (176 samples, 0.21%)</title><rect x="776.4" y="483.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.4" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (176 samples, 0.21%)</title><rect x="776.4" y="467.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="779.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (710 samples, 0.83%)</title><rect x="778.8" y="515.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (710 samples, 0.83%)</title><rect x="778.8" y="499.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (420 samples, 0.49%)</title><rect x="778.8" y="483.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="781.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (290 samples, 0.34%)</title><rect x="784.6" y="483.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (290 samples, 0.34%)</title><rect x="784.6" y="467.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="787.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (658 samples, 0.77%)</title><rect x="788.6" y="515.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (658 samples, 0.77%)</title><rect x="788.6" y="499.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (658 samples, 0.77%)</title><rect x="788.6" y="483.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (246 samples, 0.29%)</title><rect x="788.6" y="467.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="791.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (412 samples, 0.48%)</title><rect x="792.0" y="467.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.0" y="478.0"></text>
</g>
<g>
<title>byte[] (412 samples, 0.48%)</title><rect x="792.0" y="451.0" width="5.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="795.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$538/1301868629.execute (881 samples, 1.03%)</title><rect x="797.7" y="515.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleGet$2 (881 samples, 1.03%)</title><rect x="797.7" y="499.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localGet (881 samples, 1.03%)</title><rect x="797.7" y="483.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (274 samples, 0.32%)</title><rect x="797.7" y="467.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (274 samples, 0.32%)</title><rect x="797.7" y="451.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$545/339895274.get$Lambda (274 samples, 0.32%)</title><rect x="797.7" y="435.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.7" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$545 (274 samples, 0.32%)</title><rect x="797.7" y="419.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="800.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (607 samples, 0.71%)</title><rect x="801.5" y="467.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (607 samples, 0.71%)</title><rect x="801.5" y="451.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (310 samples, 0.36%)</title><rect x="801.5" y="435.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="804.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (294 samples, 0.34%)</title><rect x="805.8" y="435.0" width="4.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="808.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$541/513465323.resolve (551 samples, 0.64%)</title><rect x="809.9" y="515.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveGet (551 samples, 0.64%)</title><rect x="809.9" y="499.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (71 samples, 0.08%)</title><rect x="809.9" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (71 samples, 0.08%)</title><rect x="809.9" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (44 samples, 0.05%)</title><rect x="809.9" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="812.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (27 samples, 0.03%)</title><rect x="810.5" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (27 samples, 0.03%)</title><rect x="810.5" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="813.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (480 samples, 0.56%)</title><rect x="810.9" y="483.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (30 samples, 0.04%)</title><rect x="810.9" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="813.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (28 samples, 0.03%)</title><rect x="811.3" y="467.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="814.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (39 samples, 0.05%)</title><rect x="811.7" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="814.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (340 samples, 0.40%)</title><rect x="812.2" y="467.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$204/334543574.accept (340 samples, 0.40%)</title><rect x="812.2" y="451.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (340 samples, 0.40%)</title><rect x="812.2" y="435.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.12%)</title><rect x="812.2" y="419.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.12%)</title><rect x="812.2" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.get$Lambda (105 samples, 0.12%)</title><rect x="812.2" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ConflictResolver$$Lambda$206 (105 samples, 0.12%)</title><rect x="812.2" y="371.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="815.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (235 samples, 0.27%)</title><rect x="813.7" y="419.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (235 samples, 0.27%)</title><rect x="813.7" y="403.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (117 samples, 0.14%)</title><rect x="813.7" y="387.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="816.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (42 samples, 0.05%)</title><rect x="815.3" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (42 samples, 0.05%)</title><rect x="815.3" y="371.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="818.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.09%)</title><rect x="815.9" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.09%)</title><rect x="815.9" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.09%)</title><rect x="815.9" y="355.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="818.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (43 samples, 0.05%)</title><rect x="816.9" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.03%)</title><rect x="816.9" y="451.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="819.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (19 samples, 0.02%)</title><rect x="817.2" y="451.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="820.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (8,944 samples, 10.46%)</title><rect x="817.5" y="515.0" width="123.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.5" y="526.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java.util.ArrayList (34 samples, 0.04%)</title><rect x="817.5" y="499.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="820.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8,910 samples, 10.42%)</title><rect x="818.0" y="499.0" width="122.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.0" y="510.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/HashSet.iterator (46 samples, 0.05%)</title><rect x="818.0" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (46 samples, 0.05%)</title><rect x="818.0" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.0" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (46 samples, 0.05%)</title><rect x="818.0" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="821.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$164/1671372122.accept (8,864 samples, 10.37%)</title><rect x="818.6" y="483.0" width="122.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.6" y="494.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (8,864 samples, 10.37%)</title><rect x="818.6" y="467.0" width="122.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.6" y="478.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.08%)</title><rect x="818.6" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.08%)</title><rect x="818.6" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.08%)</title><rect x="818.6" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.08%)</title><rect x="818.6" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.08%)</title><rect x="818.6" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.08%)</title><rect x="818.6" y="371.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="821.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (165 samples, 0.19%)</title><rect x="819.6" y="451.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (165 samples, 0.19%)</title><rect x="819.6" y="435.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (97 samples, 0.11%)</title><rect x="819.6" y="419.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="822.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.08%)</title><rect x="820.9" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.08%)</title><rect x="820.9" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.08%)</title><rect x="820.9" y="387.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="823.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (5,312 samples, 6.21%)</title><rect x="821.9" y="451.0" width="73.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.9" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,312 samples, 6.21%)</title><rect x="821.9" y="435.0" width="73.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.9" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,312 samples, 6.21%)</title><rect x="821.9" y="419.0" width="73.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.9" y="430.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5,312 samples, 6.21%)</title><rect x="821.9" y="403.0" width="73.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.9" y="414.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.03%)</title><rect x="821.9" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="821.9" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$197/1228664428.get$Lambda (22 samples, 0.03%)</title><rect x="821.9" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$197 (22 samples, 0.03%)</title><rect x="821.9" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="824.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (188 samples, 0.22%)</title><rect x="822.2" y="387.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (188 samples, 0.22%)</title><rect x="822.2" y="371.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (108 samples, 0.13%)</title><rect x="822.2" y="355.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="825.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.09%)</title><rect x="823.7" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.09%)</title><rect x="823.7" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.09%)</title><rect x="823.7" y="323.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="826.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (178 samples, 0.21%)</title><rect x="824.8" y="387.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (178 samples, 0.21%)</title><rect x="824.8" y="371.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (96 samples, 0.11%)</title><rect x="824.8" y="355.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="827.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (82 samples, 0.10%)</title><rect x="826.1" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (82 samples, 0.10%)</title><rect x="826.1" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (82 samples, 0.10%)</title><rect x="826.1" y="323.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="829.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (115 samples, 0.13%)</title><rect x="827.2" y="387.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="830.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (255 samples, 0.30%)</title><rect x="828.8" y="387.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="831.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,600 samples, 3.04%)</title><rect x="832.3" y="387.0" width="35.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.3" y="398.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (301 samples, 0.35%)</title><rect x="832.3" y="371.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (230 samples, 0.27%)</title><rect x="832.3" y="355.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (79 samples, 0.09%)</title><rect x="832.3" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.3" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (79 samples, 0.09%)</title><rect x="832.3" y="323.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="835.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (151 samples, 0.18%)</title><rect x="833.4" y="339.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.4" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (151 samples, 0.18%)</title><rect x="833.4" y="323.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="836.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (71 samples, 0.08%)</title><rect x="835.5" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (71 samples, 0.08%)</title><rect x="835.5" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (71 samples, 0.08%)</title><rect x="835.5" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (71 samples, 0.08%)</title><rect x="835.5" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.5" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (71 samples, 0.08%)</title><rect x="835.5" y="291.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="838.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (920 samples, 1.08%)</title><rect x="836.5" y="371.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (920 samples, 1.08%)</title><rect x="836.5" y="355.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.5" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (29 samples, 0.03%)</title><rect x="836.5" y="339.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="839.5" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.06%)</title><rect x="836.9" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="839.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (125 samples, 0.15%)</title><rect x="837.6" y="339.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="840.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeSet (38 samples, 0.04%)</title><rect x="839.3" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="842.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.10%)</title><rect x="839.9" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.10%)</title><rect x="839.9" y="323.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (83 samples, 0.10%)</title><rect x="839.9" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.9" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (83 samples, 0.10%)</title><rect x="839.9" y="291.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="842.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (413 samples, 0.48%)</title><rect x="841.0" y="339.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (413 samples, 0.48%)</title><rect x="841.0" y="323.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (413 samples, 0.48%)</title><rect x="841.0" y="307.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (413 samples, 0.48%)</title><rect x="841.0" y="291.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (195 samples, 0.23%)</title><rect x="841.0" y="275.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (125 samples, 0.15%)</title><rect x="841.0" y="259.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (125 samples, 0.15%)</title><rect x="841.0" y="243.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (125 samples, 0.15%)</title><rect x="841.0" y="227.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (125 samples, 0.15%)</title><rect x="841.0" y="211.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (125 samples, 0.15%)</title><rect x="841.0" y="195.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (125 samples, 0.15%)</title><rect x="841.0" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (125 samples, 0.15%)</title><rect x="841.0" y="163.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (125 samples, 0.15%)</title><rect x="841.0" y="147.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="844.0" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (70 samples, 0.08%)</title><rect x="842.7" y="259.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.7" y="270.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (70 samples, 0.08%)</title><rect x="842.7" y="243.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="845.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (125 samples, 0.15%)</title><rect x="843.7" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (125 samples, 0.15%)</title><rect x="843.7" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (66 samples, 0.08%)</title><rect x="843.7" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.08%)</title><rect x="843.7" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.08%)</title><rect x="843.7" y="211.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="846.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (59 samples, 0.07%)</title><rect x="844.6" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.6" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (59 samples, 0.07%)</title><rect x="844.6" y="227.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="847.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (93 samples, 0.11%)</title><rect x="845.4" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.4" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (93 samples, 0.11%)</title><rect x="845.4" y="259.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="848.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (68 samples, 0.08%)</title><rect x="846.7" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.7" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (68 samples, 0.08%)</title><rect x="846.7" y="323.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="849.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (112 samples, 0.13%)</title><rect x="847.6" y="339.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (112 samples, 0.13%)</title><rect x="847.6" y="323.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="850.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (48 samples, 0.06%)</title><rect x="849.2" y="371.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="852.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (980 samples, 1.15%)</title><rect x="849.8" y="371.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.8" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (980 samples, 1.15%)</title><rect x="849.8" y="355.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.8" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (891 samples, 1.04%)</title><rect x="849.8" y="339.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.8" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (891 samples, 1.04%)</title><rect x="849.8" y="323.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.8" y="334.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (891 samples, 1.04%)</title><rect x="849.8" y="307.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.8" y="318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (891 samples, 1.04%)</title><rect x="849.8" y="291.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.8" y="302.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (205 samples, 0.24%)</title><rect x="849.8" y="275.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="852.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (247 samples, 0.29%)</title><rect x="852.7" y="275.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (247 samples, 0.29%)</title><rect x="852.7" y="259.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.7" y="270.0"></text>
</g>
<g>
<title>byte[] (247 samples, 0.29%)</title><rect x="852.7" y="243.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="855.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (439 samples, 0.51%)</title><rect x="856.1" y="275.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (439 samples, 0.51%)</title><rect x="856.1" y="259.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (197 samples, 0.23%)</title><rect x="856.1" y="243.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="859.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (242 samples, 0.28%)</title><rect x="858.8" y="243.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.8" y="254.0"></text>
</g>
<g>
<title>byte[] (242 samples, 0.28%)</title><rect x="858.8" y="227.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="861.8" y="238.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (89 samples, 0.10%)</title><rect x="862.1" y="339.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="865.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (114 samples, 0.13%)</title><rect x="863.4" y="371.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.4" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (114 samples, 0.13%)</title><rect x="863.4" y="355.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="866.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (237 samples, 0.28%)</title><rect x="864.9" y="371.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.9" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (77 samples, 0.09%)</title><rect x="864.9" y="355.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="867.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (68 samples, 0.08%)</title><rect x="866.0" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (68 samples, 0.08%)</title><rect x="866.0" y="339.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="869.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (92 samples, 0.11%)</title><rect x="866.9" y="355.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.9" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (92 samples, 0.11%)</title><rect x="866.9" y="339.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="869.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,305 samples, 1.53%)</title><rect x="868.2" y="387.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (38 samples, 0.04%)</title><rect x="868.2" y="371.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="871.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (162 samples, 0.19%)</title><rect x="868.7" y="371.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="871.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (46 samples, 0.05%)</title><rect x="871.0" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (46 samples, 0.05%)</title><rect x="871.0" y="355.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="874.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,059 samples, 1.24%)</title><rect x="871.6" y="371.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,059 samples, 1.24%)</title><rect x="871.6" y="355.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Class[] (91 samples, 0.11%)</title><rect x="871.6" y="339.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="874.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.10%)</title><rect x="872.9" y="339.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="875.9" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (99 samples, 0.12%)</title><rect x="874.0" y="339.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="877.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (406 samples, 0.47%)</title><rect x="875.4" y="339.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (406 samples, 0.47%)</title><rect x="875.4" y="323.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.4" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (406 samples, 0.47%)</title><rect x="875.4" y="307.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (406 samples, 0.47%)</title><rect x="875.4" y="291.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.4" y="302.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (406 samples, 0.47%)</title><rect x="875.4" y="275.0" width="5.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="878.4" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (263 samples, 0.31%)</title><rect x="881.0" y="339.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (263 samples, 0.31%)</title><rect x="881.0" y="323.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.0" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (129 samples, 0.15%)</title><rect x="881.0" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.0" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (129 samples, 0.15%)</title><rect x="881.0" y="291.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.0" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (129 samples, 0.15%)</title><rect x="881.0" y="275.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="884.0" y="286.0"></text>
</g>
<g>
<title>java.lang.ref.WeakReference (129 samples, 0.15%)</title><rect x="881.0" y="259.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="884.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (134 samples, 0.16%)</title><rect x="882.8" y="307.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (86 samples, 0.10%)</title><rect x="882.8" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (86 samples, 0.10%)</title><rect x="882.8" y="275.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="885.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor12.newInstance (48 samples, 0.06%)</title><rect x="884.0" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (48 samples, 0.06%)</title><rect x="884.0" y="275.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="887.0" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (116 samples, 0.14%)</title><rect x="884.6" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (116 samples, 0.14%)</title><rect x="884.6" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (116 samples, 0.14%)</title><rect x="884.6" y="307.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="887.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (649 samples, 0.76%)</title><rect x="886.2" y="387.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (103 samples, 0.12%)</title><rect x="886.2" y="371.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (54 samples, 0.06%)</title><rect x="886.2" y="355.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="889.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (49 samples, 0.06%)</title><rect x="887.0" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (49 samples, 0.06%)</title><rect x="887.0" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (49 samples, 0.06%)</title><rect x="887.0" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="890.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.11%)</title><rect x="887.7" y="371.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="890.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (454 samples, 0.53%)</title><rect x="888.9" y="371.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.09%)</title><rect x="888.9" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="891.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.09%)</title><rect x="888.9" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.get$Lambda (44 samples, 0.05%)</title><rect x="888.9" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$187 (44 samples, 0.05%)</title><rect x="888.9" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="891.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.get$Lambda (35 samples, 0.04%)</title><rect x="889.5" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$191 (35 samples, 0.04%)</title><rect x="889.5" y="307.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="892.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (375 samples, 0.44%)</title><rect x="890.0" y="355.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (375 samples, 0.44%)</title><rect x="890.0" y="339.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (190 samples, 0.22%)</title><rect x="890.0" y="323.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="893.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (185 samples, 0.22%)</title><rect x="892.6" y="323.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (185 samples, 0.22%)</title><rect x="892.6" y="307.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (185 samples, 0.22%)</title><rect x="892.6" y="291.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="895.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$554/1262452551.apply (3,315 samples, 3.88%)</title><rect x="895.2" y="451.0" width="45.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.2" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleGetOrProxy$4 (3,315 samples, 3.88%)</title><rect x="895.2" y="435.0" width="45.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.2" y="446.0">ru/m..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,054 samples, 1.23%)</title><rect x="895.2" y="419.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (80 samples, 0.09%)</title><rect x="895.2" y="403.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="898.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (974 samples, 1.14%)</title><rect x="896.3" y="403.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (936 samples, 1.09%)</title><rect x="896.3" y="387.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (936 samples, 1.09%)</title><rect x="896.3" y="371.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.3" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (42 samples, 0.05%)</title><rect x="896.3" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="899.3" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.06%)</title><rect x="896.9" y="355.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="899.9" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (134 samples, 0.16%)</title><rect x="897.6" y="355.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="900.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeSet (40 samples, 0.05%)</title><rect x="899.4" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="902.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.09%)</title><rect x="900.0" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.09%)</title><rect x="900.0" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.0" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (75 samples, 0.09%)</title><rect x="900.0" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.0" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (75 samples, 0.09%)</title><rect x="900.0" y="307.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="903.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (89 samples, 0.10%)</title><rect x="901.0" y="355.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.0" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (89 samples, 0.10%)</title><rect x="901.0" y="339.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (386 samples, 0.45%)</title><rect x="902.3" y="355.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (386 samples, 0.45%)</title><rect x="902.3" y="339.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (386 samples, 0.45%)</title><rect x="902.3" y="323.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (136 samples, 0.16%)</title><rect x="902.3" y="307.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (136 samples, 0.16%)</title><rect x="902.3" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (136 samples, 0.16%)</title><rect x="902.3" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (136 samples, 0.16%)</title><rect x="902.3" y="259.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (136 samples, 0.16%)</title><rect x="902.3" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (136 samples, 0.16%)</title><rect x="902.3" y="227.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (136 samples, 0.16%)</title><rect x="902.3" y="211.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (136 samples, 0.16%)</title><rect x="902.3" y="195.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.3" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (136 samples, 0.16%)</title><rect x="902.3" y="179.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="905.3" y="190.0"></text>
</g>
<g>
<title>java/util/List.copyOf (134 samples, 0.16%)</title><rect x="904.1" y="307.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.1" y="318.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (134 samples, 0.16%)</title><rect x="904.1" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (55 samples, 0.06%)</title><rect x="904.1" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.06%)</title><rect x="904.1" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.06%)</title><rect x="904.1" y="243.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="907.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (79 samples, 0.09%)</title><rect x="904.9" y="275.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.9" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (79 samples, 0.09%)</title><rect x="904.9" y="259.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="907.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (116 samples, 0.14%)</title><rect x="906.0" y="307.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.0" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (116 samples, 0.14%)</title><rect x="906.0" y="291.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="909.0" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (118 samples, 0.14%)</title><rect x="907.6" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (118 samples, 0.14%)</title><rect x="907.6" y="339.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="910.6" y="350.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (38 samples, 0.04%)</title><rect x="909.2" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.2" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.of (38 samples, 0.04%)</title><rect x="909.2" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.2" y="382.0"></text>
</g>
<g>
<title>java.util.Optional (38 samples, 0.04%)</title><rect x="909.2" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="912.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (143 samples, 0.17%)</title><rect x="909.7" y="419.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (143 samples, 0.17%)</title><rect x="909.7" y="403.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.17%)</title><rect x="909.7" y="387.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.08%)</title><rect x="909.7" y="371.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="912.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.09%)</title><rect x="910.7" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.7" y="382.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.09%)</title><rect x="910.7" y="355.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="913.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.requestBuilderFor (2,118 samples, 2.48%)</title><rect x="911.7" y="419.0" width="29.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.7" y="430.0">ru..</text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (152 samples, 0.18%)</title><rect x="911.7" y="403.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (152 samples, 0.18%)</title><rect x="911.7" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (44 samples, 0.05%)</title><rect x="911.7" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="914.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (108 samples, 0.13%)</title><rect x="912.3" y="371.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (108 samples, 0.13%)</title><rect x="912.3" y="355.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="915.3" y="366.0"></text>
</g>
<g>
<title>java/time/Duration.dividedBy (613 samples, 0.72%)</title><rect x="913.8" y="403.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.8" y="414.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (97 samples, 0.11%)</title><rect x="913.8" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.8" y="398.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (97 samples, 0.11%)</title><rect x="913.8" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.8" y="382.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (97 samples, 0.11%)</title><rect x="913.8" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.8" y="366.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divideAndRound (97 samples, 0.11%)</title><rect x="913.8" y="339.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.8" y="350.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (97 samples, 0.11%)</title><rect x="913.8" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.8" y="334.0"></text>
</g>
<g>
<title>java.math.BigDecimal (97 samples, 0.11%)</title><rect x="913.8" y="307.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="916.8" y="318.0"></text>
</g>
<g>
<title>java/time/Duration.create (331 samples, 0.39%)</title><rect x="915.1" y="387.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.1" y="398.0"></text>
</g>
<g>
<title>java/math/BigDecimal.toBigIntegerExact (49 samples, 0.06%)</title><rect x="915.1" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.1" y="382.0"></text>
</g>
<g>
<title>java/math/BigDecimal.inflated (49 samples, 0.06%)</title><rect x="915.1" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.1" y="366.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (49 samples, 0.06%)</title><rect x="915.1" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.1" y="350.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (49 samples, 0.06%)</title><rect x="915.1" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.1" y="334.0"></text>
</g>
<g>
<title>int[] (49 samples, 0.06%)</title><rect x="915.1" y="307.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="918.1" y="318.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainder (225 samples, 0.26%)</title><rect x="915.8" y="371.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.8" y="382.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainderKnuth (225 samples, 0.26%)</title><rect x="915.8" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.8" y="366.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (80 samples, 0.09%)</title><rect x="915.8" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.8" y="350.0"></text>
</g>
<g>
<title>int[] (80 samples, 0.09%)</title><rect x="915.8" y="323.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="918.8" y="334.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (55 samples, 0.06%)</title><rect x="916.9" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.9" y="350.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (55 samples, 0.06%)</title><rect x="916.9" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="334.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (55 samples, 0.06%)</title><rect x="916.9" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.06%)</title><rect x="916.9" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.9" y="302.0"></text>
</g>
<g>
<title>int[] (55 samples, 0.06%)</title><rect x="916.9" y="275.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="919.9" y="286.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.toBigInteger (90 samples, 0.11%)</title><rect x="917.7" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.7" y="350.0"></text>
</g>
<g>
<title>java.math.BigInteger (90 samples, 0.11%)</title><rect x="917.7" y="323.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="920.7" y="334.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (57 samples, 0.07%)</title><rect x="918.9" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.9" y="382.0"></text>
</g>
<g>
<title>java/time/Duration.create (57 samples, 0.07%)</title><rect x="918.9" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.9" y="366.0"></text>
</g>
<g>
<title>java.time.Duration (57 samples, 0.07%)</title><rect x="918.9" y="339.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="921.9" y="350.0"></text>
</g>
<g>
<title>java/time/Duration.toBigDecimalSeconds (185 samples, 0.22%)</title><rect x="919.7" y="387.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.7" y="398.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (88 samples, 0.10%)</title><rect x="919.7" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.7" y="382.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (88 samples, 0.10%)</title><rect x="919.7" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.7" y="366.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (88 samples, 0.10%)</title><rect x="919.7" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.7" y="350.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (88 samples, 0.10%)</title><rect x="919.7" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.7" y="334.0"></text>
</g>
<g>
<title>java.math.BigDecimal (88 samples, 0.10%)</title><rect x="919.7" y="307.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="922.7" y="318.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (97 samples, 0.11%)</title><rect x="920.9" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.9" y="382.0"></text>
</g>
<g>
<title>java.math.BigDecimal (97 samples, 0.11%)</title><rect x="920.9" y="355.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="923.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (213 samples, 0.25%)</title><rect x="922.3" y="403.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (213 samples, 0.25%)</title><rect x="922.3" y="387.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (213 samples, 0.25%)</title><rect x="922.3" y="371.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.3" y="382.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (213 samples, 0.25%)</title><rect x="922.3" y="355.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (113 samples, 0.13%)</title><rect x="922.3" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.3" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (113 samples, 0.13%)</title><rect x="922.3" y="323.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="925.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$170/1349688640.apply (100 samples, 0.12%)</title><rect x="923.8" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (100 samples, 0.12%)</title><rect x="923.8" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (46 samples, 0.05%)</title><rect x="923.8" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="926.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (54 samples, 0.06%)</title><rect x="924.5" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.06%)</title><rect x="924.5" y="291.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="927.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.provideURI (1,140 samples, 1.33%)</title><rect x="925.2" y="403.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.2" y="414.0"></text>
</g>
<g>
<title>java.net.URI (205 samples, 0.24%)</title><rect x="925.2" y="387.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="928.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.21%)</title><rect x="928.0" y="387.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (179 samples, 0.21%)</title><rect x="928.0" y="371.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.21%)</title><rect x="928.0" y="355.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="931.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (41 samples, 0.05%)</title><rect x="928.0" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.05%)</title><rect x="928.0" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="931.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (138 samples, 0.16%)</title><rect x="928.6" y="339.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (138 samples, 0.16%)</title><rect x="928.6" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.6" y="334.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.16%)</title><rect x="928.6" y="307.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="931.6" y="318.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (756 samples, 0.88%)</title><rect x="930.5" y="387.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.5" y="398.0"></text>
</g>
<g>
<title>java.net.URI$Parser (78 samples, 0.09%)</title><rect x="930.5" y="371.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="933.5" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (678 samples, 0.79%)</title><rect x="931.6" y="371.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (116 samples, 0.14%)</title><rect x="931.6" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="934.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (116 samples, 0.14%)</title><rect x="931.6" y="339.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.06%)</title><rect x="931.6" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="934.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.08%)</title><rect x="932.3" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.3" y="334.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.08%)</title><rect x="932.3" y="307.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="935.3" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (562 samples, 0.66%)</title><rect x="933.2" y="355.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (271 samples, 0.32%)</title><rect x="933.2" y="339.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (271 samples, 0.32%)</title><rect x="933.2" y="323.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.13%)</title><rect x="933.2" y="307.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="936.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (156 samples, 0.18%)</title><rect x="934.8" y="307.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.8" y="318.0"></text>
</g>
<g>
<title>byte[] (156 samples, 0.18%)</title><rect x="934.8" y="291.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="937.8" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (291 samples, 0.34%)</title><rect x="936.9" y="339.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (138 samples, 0.16%)</title><rect x="936.9" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (138 samples, 0.16%)</title><rect x="936.9" y="307.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.06%)</title><rect x="936.9" y="291.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="939.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.10%)</title><rect x="937.7" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.7" y="302.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.10%)</title><rect x="937.7" y="275.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="940.7" y="286.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (153 samples, 0.18%)</title><rect x="938.8" y="323.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.8" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (153 samples, 0.18%)</title><rect x="938.8" y="307.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (153 samples, 0.18%)</title><rect x="938.8" y="291.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (153 samples, 0.18%)</title><rect x="938.8" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.8" y="286.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.08%)</title><rect x="938.8" y="259.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="941.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 0.10%)</title><rect x="939.8" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.8" y="270.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.10%)</title><rect x="939.8" y="243.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="942.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.nodesForKey (4,598 samples, 5.38%)</title><rect x="940.9" y="515.0" width="63.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.9" y="526.0">ru/mail..</text>
</g>
<g>
<title>java.util.HashSet (212 samples, 0.25%)</title><rect x="940.9" y="499.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="943.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (173 samples, 0.20%)</title><rect x="943.9" y="499.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Integer (173 samples, 0.20%)</title><rect x="943.9" y="483.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="946.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (556 samples, 0.65%)</title><rect x="946.3" y="499.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.3" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap (556 samples, 0.65%)</title><rect x="946.3" y="483.0" width="7.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="949.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (516 samples, 0.60%)</title><rect x="953.9" y="499.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (516 samples, 0.60%)</title><rect x="953.9" y="483.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="956.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (516 samples, 0.60%)</title><rect x="953.9" y="467.0" width="7.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="956.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.addReplicasForKey (3,141 samples, 3.67%)</title><rect x="961.1" y="499.0" width="43.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.1" y="510.0">ru/m..</text>
</g>
<g>
<title>java/util/HashSet.add (2,352 samples, 2.75%)</title><rect x="961.1" y="483.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.1" y="494.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.put (2,352 samples, 2.75%)</title><rect x="961.1" y="467.0" width="32.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="964.1" y="478.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.putVal (2,352 samples, 2.75%)</title><rect x="961.1" y="451.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.1" y="462.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.newNode (1,272 samples, 1.49%)</title><rect x="961.1" y="435.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,272 samples, 1.49%)</title><rect x="961.1" y="419.0" width="17.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="964.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,080 samples, 1.26%)</title><rect x="978.6" y="435.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.6" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,080 samples, 1.26%)</title><rect x="978.6" y="419.0" width="14.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="981.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (412 samples, 0.48%)</title><rect x="993.5" y="483.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (412 samples, 0.48%)</title><rect x="993.5" y="467.0" width="5.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="996.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (372 samples, 0.44%)</title><rect x="999.2" y="483.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (372 samples, 0.44%)</title><rect x="999.2" y="467.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1002.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapString (1,053 samples, 1.23%)</title><rect x="1004.4" y="531.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (714 samples, 0.84%)</title><rect x="1004.4" y="515.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (714 samples, 0.84%)</title><rect x="1004.4" y="499.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1007.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (714 samples, 0.84%)</title><rect x="1004.4" y="483.0" width="9.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1007.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (339 samples, 0.40%)</title><rect x="1014.3" y="515.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.3" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (339 samples, 0.40%)</title><rect x="1014.3" y="499.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.3" y="510.0"></text>
</g>
<g>
<title>byte[] (339 samples, 0.40%)</title><rect x="1014.3" y="483.0" width="4.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1017.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.parseReplicasParameter (361 samples, 0.42%)</title><rect x="1018.9" y="579.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.9" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ReplicasHolder (361 samples, 0.42%)</title><rect x="1018.9" y="563.0" width="5.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1021.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.respond (952 samples, 1.11%)</title><rect x="1023.9" y="579.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (197 samples, 0.23%)</title><rect x="1023.9" y="563.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1026.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (197 samples, 0.23%)</title><rect x="1023.9" y="547.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$221/1687115027.get$Lambda (197 samples, 0.23%)</title><rect x="1023.9" y="531.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.9" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$221 (197 samples, 0.23%)</title><rect x="1023.9" y="515.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1026.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (755 samples, 0.88%)</title><rect x="1026.6" y="563.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (755 samples, 0.88%)</title><rect x="1026.6" y="547.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (507 samples, 0.59%)</title><rect x="1026.6" y="531.0" width="7.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1029.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (248 samples, 0.29%)</title><rect x="1033.6" y="531.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (248 samples, 0.29%)</title><rect x="1033.6" y="515.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1036.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (724 samples, 0.85%)</title><rect x="1037.1" y="627.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (724 samples, 0.85%)</title><rect x="1037.1" y="611.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (724 samples, 0.85%)</title><rect x="1037.1" y="595.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (316 samples, 0.37%)</title><rect x="1037.1" y="579.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1040.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (408 samples, 0.48%)</title><rect x="1041.4" y="579.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.4" y="590.0"></text>
</g>
<g>
<title>byte[] (408 samples, 0.48%)</title><rect x="1041.4" y="563.0" width="5.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1044.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,146 samples, 3.68%)</title><rect x="1047.1" y="659.0" width="43.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.1" y="670.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (499 samples, 0.58%)</title><rect x="1047.1" y="643.0" width="6.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1050.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (824 samples, 0.96%)</title><rect x="1053.9" y="643.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (824 samples, 0.96%)</title><rect x="1053.9" y="627.0" width="11.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1056.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,823 samples, 2.13%)</title><rect x="1065.3" y="643.0" width="25.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.3" y="654.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,823 samples, 2.13%)</title><rect x="1065.3" y="627.0" width="25.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1068.3" y="638.0">o..</text>
</g>
<g>
<title>char[] (1,098 samples, 1.28%)</title><rect x="1065.3" y="611.0" width="15.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1068.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (264 samples, 0.31%)</title><rect x="1080.5" y="611.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1083.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (461 samples, 0.54%)</title><rect x="1084.1" y="611.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (461 samples, 0.54%)</title><rect x="1084.1" y="595.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (461 samples, 0.54%)</title><rect x="1084.1" y="579.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.1" y="590.0"></text>
</g>
<g>
<title>byte[] (461 samples, 0.54%)</title><rect x="1084.1" y="563.0" width="6.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1087.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (184 samples, 0.22%)</title><rect x="1090.5" y="659.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.5" y="670.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.22%)</title><rect x="1090.5" y="643.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1093.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (542 samples, 0.63%)</title><rect x="1093.0" y="659.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (542 samples, 0.63%)</title><rect x="1093.0" y="643.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (542 samples, 0.63%)</title><rect x="1093.0" y="627.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (274 samples, 0.32%)</title><rect x="1093.0" y="611.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1096.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (268 samples, 0.31%)</title><rect x="1096.8" y="611.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.8" y="622.0"></text>
</g>
<g>
<title>byte[] (268 samples, 0.31%)</title><rect x="1096.8" y="595.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1099.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,484 samples, 7.58%)</title><rect x="1100.5" y="659.0" width="89.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.5" y="670.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,484 samples, 7.58%)</title><rect x="1100.5" y="643.0" width="89.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.5" y="654.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (3,438 samples, 4.02%)</title><rect x="1100.5" y="627.0" width="47.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1103.5" y="638.0">char[]</text>
</g>
<g>
<title>java.lang.String (960 samples, 1.12%)</title><rect x="1148.0" y="627.0" width="13.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1151.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,084 samples, 2.44%)</title><rect x="1161.2" y="627.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.2" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,084 samples, 2.44%)</title><rect x="1161.2" y="611.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.2" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,084 samples, 2.44%)</title><rect x="1161.2" y="595.0" width="28.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.2" y="606.0">ja..</text>
</g>
<g>
<title>byte[] (2,084 samples, 2.44%)</title><rect x="1161.2" y="579.0" width="28.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1164.2" y="590.0">by..</text>
</g>
</g>
</svg>
