<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (265,936 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (152,268 samples, 57.26%)</title><rect x="10.0" y="803.0" width="675.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (152,268 samples, 57.26%)</title><rect x="10.0" y="787.0" width="675.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (152,268 samples, 57.26%)</title><rect x="10.0" y="771.0" width="675.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (69,854 samples, 26.27%)</title><rect x="10.0" y="755.0" width="310.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$Asy..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21,562 samples, 8.11%)</title><rect x="10.0" y="739.0" width="95.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (62 samples, 0.02%)</title><rect x="10.0" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (62 samples, 0.02%)</title><rect x="10.0" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (62 samples, 0.02%)</title><rect x="10.0" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (62 samples, 0.02%)</title><rect x="10.0" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.02%)</title><rect x="10.0" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (62 samples, 0.02%)</title><rect x="10.0" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (62 samples, 0.02%)</title><rect x="10.0" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (62 samples, 0.02%)</title><rect x="10.0" y="611.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (20,870 samples, 7.85%)</title><rect x="10.3" y="723.0" width="92.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.3" y="734.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (111 samples, 0.04%)</title><rect x="10.3" y="707.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.apply (20,759 samples, 7.81%)</title><rect x="10.8" y="707.0" width="92.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.8" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (20,759 samples, 7.81%)</title><rect x="10.8" y="691.0" width="92.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.8" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (20,759 samples, 7.81%)</title><rect x="10.8" y="675.0" width="92.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.8" y="686.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.05%)</title><rect x="10.8" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.05%)</title><rect x="10.8" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.get$Lambda (68 samples, 0.03%)</title><rect x="10.8" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$372 (68 samples, 0.03%)</title><rect x="10.8" y="611.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (204 samples, 0.08%)</title><rect x="11.3" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (204 samples, 0.08%)</title><rect x="11.3" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (103 samples, 0.04%)</title><rect x="11.3" y="627.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.04%)</title><rect x="11.8" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.04%)</title><rect x="11.8" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.04%)</title><rect x="11.8" y="595.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="14.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (427 samples, 0.16%)</title><rect x="12.2" y="659.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (427 samples, 0.16%)</title><rect x="12.2" y="643.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (245 samples, 0.09%)</title><rect x="12.2" y="627.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="15.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.07%)</title><rect x="13.3" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.07%)</title><rect x="13.3" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (182 samples, 0.07%)</title><rect x="13.3" y="595.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="16.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (19,505 samples, 7.33%)</title><rect x="14.1" y="659.0" width="86.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.1" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (19,505 samples, 7.33%)</title><rect x="14.1" y="643.0" width="86.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.1" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (19,505 samples, 7.33%)</title><rect x="14.1" y="627.0" width="86.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.1" y="638.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (189 samples, 0.07%)</title><rect x="14.1" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (189 samples, 0.07%)</title><rect x="14.1" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1781629338.get$Lambda (57 samples, 0.02%)</title><rect x="14.1" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (57 samples, 0.02%)</title><rect x="14.1" y="563.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="17.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/565635497.get$Lambda (66 samples, 0.02%)</title><rect x="14.4" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$220 (66 samples, 0.02%)</title><rect x="14.4" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/378141810.get$Lambda (66 samples, 0.02%)</title><rect x="14.7" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (66 samples, 0.02%)</title><rect x="14.7" y="563.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="17.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (15,087 samples, 5.67%)</title><rect x="15.0" y="611.0" width="66.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.0" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (15,087 samples, 5.67%)</title><rect x="15.0" y="595.0" width="66.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.0" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14,962 samples, 5.63%)</title><rect x="15.0" y="579.0" width="66.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.0" y="590.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/378141810.apply (14,962 samples, 5.63%)</title><rect x="15.0" y="563.0" width="66.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.0" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (14,962 samples, 5.63%)</title><rect x="15.0" y="547.0" width="66.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.0" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (14,962 samples, 5.63%)</title><rect x="15.0" y="531.0" width="66.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.0" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$220/565635497.apply (14,962 samples, 5.63%)</title><rect x="15.0" y="515.0" width="66.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.0" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (14,962 samples, 5.63%)</title><rect x="15.0" y="499.0" width="66.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.0" y="510.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.03%)</title><rect x="15.0" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.03%)</title><rect x="15.0" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1660747199.get$Lambda (77 samples, 0.03%)</title><rect x="15.0" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$367 (77 samples, 0.03%)</title><rect x="15.0" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (254 samples, 0.10%)</title><rect x="15.3" y="483.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (254 samples, 0.10%)</title><rect x="15.3" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (114 samples, 0.04%)</title><rect x="15.3" y="451.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.04%)</title><rect x="15.9" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.04%)</title><rect x="15.9" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.04%)</title><rect x="15.9" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="18.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (234 samples, 0.09%)</title><rect x="16.4" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (234 samples, 0.09%)</title><rect x="16.4" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (129 samples, 0.05%)</title><rect x="16.4" y="451.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="19.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.04%)</title><rect x="17.0" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.04%)</title><rect x="17.0" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.04%)</title><rect x="17.0" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="20.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (14,397 samples, 5.41%)</title><rect x="17.5" y="483.0" width="63.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.5" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.04%)</title><rect x="17.5" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.04%)</title><rect x="17.5" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12,629 samples, 4.75%)</title><rect x="17.9" y="467.0" width="56.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.9" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12,629 samples, 4.75%)</title><rect x="17.9" y="451.0" width="56.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.9" y="462.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (99 samples, 0.04%)</title><rect x="17.9" y="435.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/364181208.apply (12,312 samples, 4.63%)</title><rect x="18.4" y="435.0" width="54.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.4" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (12,312 samples, 4.63%)</title><rect x="18.4" y="419.0" width="54.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.4" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.02%)</title><rect x="18.4" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.02%)</title><rect x="18.4" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$391/1542681250.get$Lambda (65 samples, 0.02%)</title><rect x="18.4" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$391 (65 samples, 0.02%)</title><rect x="18.4" y="355.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (211 samples, 0.08%)</title><rect x="18.7" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (211 samples, 0.08%)</title><rect x="18.7" y="387.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (103 samples, 0.04%)</title><rect x="18.7" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="21.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.04%)</title><rect x="19.1" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.04%)</title><rect x="19.1" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.04%)</title><rect x="19.1" y="339.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.04%)</title><rect x="19.6" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (152 samples, 0.06%)</title><rect x="20.0" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (68 samples, 0.03%)</title><rect x="20.0" y="387.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="23.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (84 samples, 0.03%)</title><rect x="20.3" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (83 samples, 0.03%)</title><rect x="20.3" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (83 samples, 0.03%)</title><rect x="20.3" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (83 samples, 0.03%)</title><rect x="20.3" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (83 samples, 0.03%)</title><rect x="20.3" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (83 samples, 0.03%)</title><rect x="20.3" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (240 samples, 0.09%)</title><rect x="20.7" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (240 samples, 0.09%)</title><rect x="20.7" y="387.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (81 samples, 0.03%)</title><rect x="20.7" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (81 samples, 0.03%)</title><rect x="20.7" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (81 samples, 0.03%)</title><rect x="20.7" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (81 samples, 0.03%)</title><rect x="20.7" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="23.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (159 samples, 0.06%)</title><rect x="21.1" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (159 samples, 0.06%)</title><rect x="21.1" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (114 samples, 0.04%)</title><rect x="21.1" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (11,543 samples, 4.34%)</title><rect x="21.8" y="403.0" width="51.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.8" y="414.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (76 samples, 0.03%)</title><rect x="21.8" y="387.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="24.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (155 samples, 0.06%)</title><rect x="22.1" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.1" y="398.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.03%)</title><rect x="22.1" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.03%)</title><rect x="22.5" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (633 samples, 0.24%)</title><rect x="22.8" y="387.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (633 samples, 0.24%)</title><rect x="22.8" y="371.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (633 samples, 0.24%)</title><rect x="22.8" y="355.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>byte[] (628 samples, 0.24%)</title><rect x="22.8" y="339.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (244 samples, 0.09%)</title><rect x="25.6" y="387.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.6" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (244 samples, 0.09%)</title><rect x="25.6" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.6" y="382.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.09%)</title><rect x="25.6" y="355.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (630 samples, 0.24%)</title><rect x="26.7" y="387.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (630 samples, 0.24%)</title><rect x="26.7" y="371.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (630 samples, 0.24%)</title><rect x="26.7" y="355.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.7" y="366.0"></text>
</g>
<g>
<title>byte[] (622 samples, 0.23%)</title><rect x="26.7" y="339.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (144 samples, 0.05%)</title><rect x="29.5" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (144 samples, 0.05%)</title><rect x="29.5" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (144 samples, 0.05%)</title><rect x="29.5" y="355.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="32.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (82 samples, 0.03%)</title><rect x="30.1" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (82 samples, 0.03%)</title><rect x="30.1" y="371.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="33.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (8,504 samples, 3.20%)</title><rect x="30.5" y="387.0" width="37.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.5" y="398.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,429 samples, 1.67%)</title><rect x="30.7" y="371.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,429 samples, 1.67%)</title><rect x="30.7" y="355.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (119 samples, 0.04%)</title><rect x="30.7" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="33.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (166 samples, 0.06%)</title><rect x="31.2" y="339.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="34.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (336 samples, 0.13%)</title><rect x="31.9" y="339.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="34.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeSet (111 samples, 0.04%)</title><rect x="33.4" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (205 samples, 0.08%)</title><rect x="33.9" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (205 samples, 0.08%)</title><rect x="33.9" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (205 samples, 0.08%)</title><rect x="33.9" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.9" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (205 samples, 0.08%)</title><rect x="33.9" y="291.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="36.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2,964 samples, 1.11%)</title><rect x="34.8" y="339.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,964 samples, 1.11%)</title><rect x="34.8" y="323.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (2,964 samples, 1.11%)</title><rect x="34.8" y="307.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,964 samples, 1.11%)</title><rect x="34.8" y="291.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.8" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,852 samples, 0.70%)</title><rect x="34.8" y="275.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (1,447 samples, 0.54%)</title><rect x="34.8" y="259.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,447 samples, 0.54%)</title><rect x="34.8" y="243.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (358 samples, 0.13%)</title><rect x="34.8" y="227.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (358 samples, 0.13%)</title><rect x="34.8" y="211.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (358 samples, 0.13%)</title><rect x="34.8" y="195.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (358 samples, 0.13%)</title><rect x="34.8" y="179.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (358 samples, 0.13%)</title><rect x="34.8" y="163.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (358 samples, 0.13%)</title><rect x="34.8" y="147.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="37.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$407/623734236.test (1,089 samples, 0.41%)</title><rect x="36.4" y="227.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (1,089 samples, 0.41%)</title><rect x="36.4" y="211.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,089 samples, 0.41%)</title><rect x="36.4" y="195.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.4" y="206.0"></text>
</g>
<g>
<title>java/util/Collection.stream (852 samples, 0.32%)</title><rect x="36.4" y="179.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.4" y="190.0"></text>
</g>
<g>
<title>java/util/List.spliterator (293 samples, 0.11%)</title><rect x="36.4" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.4" y="174.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (293 samples, 0.11%)</title><rect x="36.4" y="147.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="39.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (559 samples, 0.21%)</title><rect x="37.7" y="163.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.7" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (559 samples, 0.21%)</title><rect x="37.7" y="147.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="40.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (237 samples, 0.09%)</title><rect x="40.2" y="179.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (237 samples, 0.09%)</title><rect x="40.2" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (237 samples, 0.09%)</title><rect x="40.2" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (237 samples, 0.09%)</title><rect x="40.2" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.2" y="142.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (237 samples, 0.09%)</title><rect x="40.2" y="115.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="43.2" y="126.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (405 samples, 0.15%)</title><rect x="41.2" y="259.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.2" y="270.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (405 samples, 0.15%)</title><rect x="41.2" y="243.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="44.2" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (626 samples, 0.24%)</title><rect x="43.0" y="275.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.0" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (626 samples, 0.24%)</title><rect x="43.0" y="259.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (300 samples, 0.11%)</title><rect x="43.0" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (300 samples, 0.11%)</title><rect x="43.0" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.0" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (300 samples, 0.11%)</title><rect x="43.0" y="211.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="46.0" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (326 samples, 0.12%)</title><rect x="44.4" y="243.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (326 samples, 0.12%)</title><rect x="44.4" y="227.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (486 samples, 0.18%)</title><rect x="45.8" y="275.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (486 samples, 0.18%)</title><rect x="45.8" y="259.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="48.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (206 samples, 0.08%)</title><rect x="48.0" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.0" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (206 samples, 0.08%)</title><rect x="48.0" y="323.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="51.0" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (322 samples, 0.12%)</title><rect x="48.9" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (322 samples, 0.12%)</title><rect x="48.9" y="323.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="51.9" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (74 samples, 0.03%)</title><rect x="50.3" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.03%)</title><rect x="50.3" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.03%)</title><rect x="50.3" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.3" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1229942176.get$Lambda (74 samples, 0.03%)</title><rect x="50.3" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.3" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$396 (74 samples, 0.03%)</title><rect x="50.3" y="307.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2,259 samples, 0.85%)</title><rect x="50.6" y="371.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,329 samples, 0.50%)</title><rect x="50.6" y="355.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,329 samples, 0.50%)</title><rect x="50.6" y="339.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,329 samples, 0.50%)</title><rect x="50.6" y="323.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,329 samples, 0.50%)</title><rect x="50.6" y="307.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.6" y="318.0"></text>
</g>
<g>
<title>byte[] (1,274 samples, 0.48%)</title><rect x="50.6" y="291.0" width="5.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="53.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (235 samples, 0.09%)</title><rect x="56.5" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (235 samples, 0.09%)</title><rect x="56.5" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (235 samples, 0.09%)</title><rect x="56.5" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (235 samples, 0.09%)</title><rect x="56.5" y="307.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="59.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (200 samples, 0.08%)</title><rect x="57.6" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (103 samples, 0.04%)</title><rect x="57.6" y="339.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="60.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (97 samples, 0.04%)</title><rect x="58.0" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.0" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (97 samples, 0.04%)</title><rect x="58.0" y="323.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="61.0" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1229942176.test (495 samples, 0.19%)</title><rect x="58.5" y="355.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.5" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (495 samples, 0.19%)</title><rect x="58.5" y="339.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$108/341796579.test (495 samples, 0.19%)</title><rect x="58.5" y="323.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$11 (495 samples, 0.19%)</title><rect x="58.5" y="307.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.5" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$98/953742666.test (495 samples, 0.19%)</title><rect x="58.5" y="291.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.5" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (495 samples, 0.19%)</title><rect x="58.5" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$97/860481979.test (495 samples, 0.19%)</title><rect x="58.5" y="259.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$4 (495 samples, 0.19%)</title><rect x="58.5" y="243.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (495 samples, 0.19%)</title><rect x="58.5" y="227.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (495 samples, 0.19%)</title><rect x="58.5" y="211.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (234 samples, 0.09%)</title><rect x="58.5" y="195.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (261 samples, 0.10%)</title><rect x="59.5" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.5" y="206.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.10%)</title><rect x="59.5" y="179.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="62.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,662 samples, 0.62%)</title><rect x="60.7" y="371.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,662 samples, 0.62%)</title><rect x="60.7" y="355.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,662 samples, 0.62%)</title><rect x="60.7" y="339.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (77 samples, 0.03%)</title><rect x="60.7" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="63.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (149 samples, 0.06%)</title><rect x="61.0" y="323.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (63 samples, 0.02%)</title><rect x="61.7" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="64.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.04%)</title><rect x="62.0" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.04%)</title><rect x="62.0" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (96 samples, 0.04%)</title><rect x="62.0" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.0" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (96 samples, 0.04%)</title><rect x="62.0" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="65.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (105 samples, 0.04%)</title><rect x="62.4" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.4" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (105 samples, 0.04%)</title><rect x="62.4" y="307.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="65.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,026 samples, 0.39%)</title><rect x="62.8" y="323.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (1,026 samples, 0.39%)</title><rect x="62.8" y="307.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,026 samples, 0.39%)</title><rect x="62.8" y="291.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (168 samples, 0.06%)</title><rect x="62.8" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (168 samples, 0.06%)</title><rect x="62.8" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (168 samples, 0.06%)</title><rect x="62.8" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (168 samples, 0.06%)</title><rect x="62.8" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (168 samples, 0.06%)</title><rect x="62.8" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (168 samples, 0.06%)</title><rect x="62.8" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (168 samples, 0.06%)</title><rect x="62.8" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (168 samples, 0.06%)</title><rect x="62.8" y="163.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.06%)</title><rect x="62.8" y="147.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="65.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (481 samples, 0.18%)</title><rect x="63.6" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.6" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (481 samples, 0.18%)</title><rect x="63.6" y="259.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (248 samples, 0.09%)</title><rect x="63.6" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (248 samples, 0.09%)</title><rect x="63.6" y="227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (248 samples, 0.09%)</title><rect x="63.6" y="211.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="66.6" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (233 samples, 0.09%)</title><rect x="64.7" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (233 samples, 0.09%)</title><rect x="64.7" y="227.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="67.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (377 samples, 0.14%)</title><rect x="65.7" y="275.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (377 samples, 0.14%)</title><rect x="65.7" y="259.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="68.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (146 samples, 0.05%)</title><rect x="67.4" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (146 samples, 0.05%)</title><rect x="67.4" y="307.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="70.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (304 samples, 0.11%)</title><rect x="68.2" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (144 samples, 0.05%)</title><rect x="68.2" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.2" y="382.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.02%)</title><rect x="68.2" y="355.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="71.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.03%)</title><rect x="68.5" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="71.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.06%)</title><rect x="68.9" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (160 samples, 0.06%)</title><rect x="68.9" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.06%)</title><rect x="68.9" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (67 samples, 0.03%)</title><rect x="68.9" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.03%)</title><rect x="68.9" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="71.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (93 samples, 0.03%)</title><rect x="69.2" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (93 samples, 0.03%)</title><rect x="69.2" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.2" y="318.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.03%)</title><rect x="69.2" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="72.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (229 samples, 0.09%)</title><rect x="69.6" y="387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (229 samples, 0.09%)</title><rect x="69.6" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (229 samples, 0.09%)</title><rect x="69.6" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (229 samples, 0.09%)</title><rect x="69.6" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (229 samples, 0.09%)</title><rect x="69.6" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (85 samples, 0.03%)</title><rect x="69.6" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.03%)</title><rect x="69.6" y="291.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="72.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (144 samples, 0.05%)</title><rect x="70.0" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (144 samples, 0.05%)</title><rect x="70.0" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.0" y="302.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.05%)</title><rect x="70.0" y="275.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="73.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (542 samples, 0.20%)</title><rect x="70.6" y="387.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.6" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (173 samples, 0.07%)</title><rect x="70.6" y="371.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="73.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (140 samples, 0.05%)</title><rect x="71.4" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (140 samples, 0.05%)</title><rect x="71.4" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="74.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (229 samples, 0.09%)</title><rect x="72.0" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (229 samples, 0.09%)</title><rect x="72.0" y="355.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="75.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (218 samples, 0.08%)</title><rect x="73.0" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (218 samples, 0.08%)</title><rect x="73.0" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (218 samples, 0.08%)</title><rect x="73.0" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (271 samples, 0.10%)</title><rect x="74.0" y="467.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="77.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.04%)</title><rect x="75.2" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="78.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,295 samples, 0.49%)</title><rect x="75.6" y="467.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (112 samples, 0.04%)</title><rect x="75.6" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (112 samples, 0.04%)</title><rect x="75.6" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$317/207545952.get$Lambda (60 samples, 0.02%)</title><rect x="75.6" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$317 (60 samples, 0.02%)</title><rect x="75.6" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="78.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (141 samples, 0.05%)</title><rect x="76.1" y="451.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="79.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (94 samples, 0.04%)</title><rect x="76.7" y="451.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="79.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (133 samples, 0.05%)</title><rect x="77.1" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="80.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (366 samples, 0.14%)</title><rect x="77.7" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (366 samples, 0.14%)</title><rect x="77.7" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (366 samples, 0.14%)</title><rect x="77.7" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (366 samples, 0.14%)</title><rect x="77.7" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (366 samples, 0.14%)</title><rect x="77.7" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (366 samples, 0.14%)</title><rect x="77.7" y="371.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (366 samples, 0.14%)</title><rect x="77.7" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (366 samples, 0.14%)</title><rect x="77.7" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (366 samples, 0.14%)</title><rect x="77.7" y="323.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (135 samples, 0.05%)</title><rect x="77.7" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (135 samples, 0.05%)</title><rect x="77.7" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/258901730.get$Lambda (91 samples, 0.03%)</title><rect x="77.9" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$330 (91 samples, 0.03%)</title><rect x="77.9" y="259.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (118 samples, 0.04%)</title><rect x="78.3" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (113 samples, 0.04%)</title><rect x="78.8" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (113 samples, 0.04%)</title><rect x="78.8" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (66 samples, 0.02%)</title><rect x="79.1" y="275.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (66 samples, 0.02%)</title><rect x="79.1" y="259.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="82.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (340 samples, 0.13%)</title><rect x="79.3" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.3" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (71 samples, 0.03%)</title><rect x="79.3" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="82.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (153 samples, 0.06%)</title><rect x="79.7" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="82.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (116 samples, 0.04%)</title><rect x="80.3" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (116 samples, 0.04%)</title><rect x="80.3" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="430.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.04%)</title><rect x="80.3" y="403.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="83.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (109 samples, 0.04%)</title><rect x="80.9" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="80.9" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="83.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.05%)</title><rect x="81.3" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.05%)</title><rect x="81.3" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (125 samples, 0.05%)</title><rect x="81.3" y="547.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="84.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (198 samples, 0.07%)</title><rect x="81.9" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (198 samples, 0.07%)</title><rect x="81.9" y="595.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (95 samples, 0.04%)</title><rect x="81.9" y="579.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="82.3" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="82.3" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="82.3" y="547.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="85.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,031 samples, 1.52%)</title><rect x="82.8" y="611.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (138 samples, 0.05%)</title><rect x="82.8" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (138 samples, 0.05%)</title><rect x="82.8" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$296/77423501.get$Lambda (79 samples, 0.03%)</title><rect x="82.8" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$296 (79 samples, 0.03%)</title><rect x="82.8" y="547.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="85.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/898997379.get$Lambda (59 samples, 0.02%)</title><rect x="83.1" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$299 (59 samples, 0.02%)</title><rect x="83.1" y="547.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="86.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (215 samples, 0.08%)</title><rect x="83.4" y="595.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (215 samples, 0.08%)</title><rect x="83.4" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/898997379.apply (116 samples, 0.04%)</title><rect x="83.4" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (116 samples, 0.04%)</title><rect x="83.4" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (116 samples, 0.04%)</title><rect x="83.4" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.04%)</title><rect x="83.4" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="86.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (99 samples, 0.04%)</title><rect x="83.9" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (99 samples, 0.04%)</title><rect x="83.9" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (99 samples, 0.04%)</title><rect x="83.9" y="531.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="86.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (102 samples, 0.04%)</title><rect x="84.3" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (102 samples, 0.04%)</title><rect x="84.3" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.04%)</title><rect x="84.3" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.04%)</title><rect x="84.3" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.04%)</title><rect x="84.3" y="531.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="87.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,576 samples, 1.34%)</title><rect x="84.8" y="595.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,576 samples, 1.34%)</title><rect x="84.8" y="579.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (275 samples, 0.10%)</title><rect x="84.8" y="563.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="87.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,207 samples, 1.21%)</title><rect x="86.0" y="563.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.0" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (99 samples, 0.04%)</title><rect x="86.3" y="547.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (75 samples, 0.03%)</title><rect x="86.7" y="547.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="89.7" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (152 samples, 0.06%)</title><rect x="87.0" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (152 samples, 0.06%)</title><rect x="87.0" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (152 samples, 0.06%)</title><rect x="87.0" y="515.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="90.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (79 samples, 0.03%)</title><rect x="87.7" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (79 samples, 0.03%)</title><rect x="87.7" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="90.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (263 samples, 0.10%)</title><rect x="88.0" y="547.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="91.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (136 samples, 0.05%)</title><rect x="89.2" y="547.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="92.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (172 samples, 0.06%)</title><rect x="89.8" y="547.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (238 samples, 0.09%)</title><rect x="90.6" y="547.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (945 samples, 0.36%)</title><rect x="91.6" y="547.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (93 samples, 0.03%)</title><rect x="91.6" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="94.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (72 samples, 0.03%)</title><rect x="92.2" y="531.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="95.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (87 samples, 0.03%)</title><rect x="93.0" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (87 samples, 0.03%)</title><rect x="93.0" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="96.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (82 samples, 0.03%)</title><rect x="93.4" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="96.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.04%)</title><rect x="93.8" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="96.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (367 samples, 0.14%)</title><rect x="94.2" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (89 samples, 0.03%)</title><rect x="94.2" y="515.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="97.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (86 samples, 0.03%)</title><rect x="94.6" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="97.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (59 samples, 0.02%)</title><rect x="95.0" y="515.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (59 samples, 0.02%)</title><rect x="95.0" y="499.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="98.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (133 samples, 0.05%)</title><rect x="95.2" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (638 samples, 0.24%)</title><rect x="95.8" y="547.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (67 samples, 0.03%)</title><rect x="96.2" y="531.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="99.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (93 samples, 0.03%)</title><rect x="96.5" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (93 samples, 0.03%)</title><rect x="96.5" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="99.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (386 samples, 0.15%)</title><rect x="97.0" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (60 samples, 0.02%)</title><rect x="97.0" y="515.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="100.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (119 samples, 0.04%)</title><rect x="97.2" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="100.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (61 samples, 0.02%)</title><rect x="97.7" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (61 samples, 0.02%)</title><rect x="97.7" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="100.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (146 samples, 0.05%)</title><rect x="98.0" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (140 samples, 0.05%)</title><rect x="98.7" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (140 samples, 0.05%)</title><rect x="98.7" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (84 samples, 0.03%)</title><rect x="98.7" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="101.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (216 samples, 0.08%)</title><rect x="99.3" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.3" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (216 samples, 0.08%)</title><rect x="99.3" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.3" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (216 samples, 0.08%)</title><rect x="99.3" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$230/1241923049.run (216 samples, 0.08%)</title><rect x="99.3" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (216 samples, 0.08%)</title><rect x="99.3" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.3" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (59 samples, 0.02%)</title><rect x="99.3" y="467.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="102.3" y="478.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (157 samples, 0.06%)</title><rect x="99.5" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.5" y="478.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (74 samples, 0.03%)</title><rect x="99.5" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="102.5" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (83 samples, 0.03%)</title><rect x="99.9" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.9" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (83 samples, 0.03%)</title><rect x="99.9" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.9" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (83 samples, 0.03%)</title><rect x="99.9" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.9" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (83 samples, 0.03%)</title><rect x="99.9" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="414.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (83 samples, 0.03%)</title><rect x="99.9" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="102.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (94 samples, 0.04%)</title><rect x="100.2" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.04%)</title><rect x="100.2" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="103.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (124 samples, 0.05%)</title><rect x="100.7" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (124 samples, 0.05%)</title><rect x="100.7" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (124 samples, 0.05%)</title><rect x="100.7" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.7" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (124 samples, 0.05%)</title><rect x="100.7" y="611.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="103.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (376 samples, 0.14%)</title><rect x="101.2" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (299 samples, 0.11%)</title><rect x="101.2" y="643.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="104.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (77 samples, 0.03%)</title><rect x="102.5" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (77 samples, 0.03%)</title><rect x="102.5" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (77 samples, 0.03%)</title><rect x="102.5" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.5" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (77 samples, 0.03%)</title><rect x="102.5" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (77 samples, 0.03%)</title><rect x="102.5" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (77 samples, 0.03%)</title><rect x="102.5" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.5" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (77 samples, 0.03%)</title><rect x="102.5" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (77 samples, 0.03%)</title><rect x="102.5" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.5" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (77 samples, 0.03%)</title><rect x="102.5" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (77 samples, 0.03%)</title><rect x="102.5" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.5" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (77 samples, 0.03%)</title><rect x="102.5" y="483.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="105.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (630 samples, 0.24%)</title><rect x="102.9" y="723.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (630 samples, 0.24%)</title><rect x="102.9" y="707.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (630 samples, 0.24%)</title><rect x="102.9" y="691.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (630 samples, 0.24%)</title><rect x="102.9" y="675.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (630 samples, 0.24%)</title><rect x="102.9" y="659.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (630 samples, 0.24%)</title><rect x="102.9" y="643.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.9" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (630 samples, 0.24%)</title><rect x="102.9" y="627.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="105.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$154/526299918.get (48,292 samples, 18.16%)</title><rect x="105.7" y="739.0" width="214.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.7" y="750.0">ru/mail/polis/service/zvladn..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localUpsert$8 (48,292 samples, 18.16%)</title><rect x="105.7" y="723.0" width="214.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="734.0">ru/mail/polis/service/zvladn..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (36,362 samples, 13.67%)</title><rect x="105.7" y="707.0" width="161.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.7" y="718.0">ru/mail/polis/dao/zvl..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,576 samples, 1.72%)</title><rect x="105.7" y="691.0" width="20.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,576 samples, 1.72%)</title><rect x="105.7" y="675.0" width="20.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$160/1352926262.get$Lambda (4,576 samples, 1.72%)</title><rect x="105.7" y="659.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.7" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.LsmDAOImpl$$Lambda$160 (4,576 samples, 1.72%)</title><rect x="105.7" y="643.0" width="20.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="108.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (31,786 samples, 11.95%)</title><rect x="126.0" y="691.0" width="141.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.0" y="702.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (646 samples, 0.24%)</title><rect x="126.0" y="675.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (646 samples, 0.24%)</title><rect x="126.0" y="659.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (646 samples, 0.24%)</title><rect x="126.0" y="643.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (518 samples, 0.19%)</title><rect x="126.0" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (518 samples, 0.19%)</title><rect x="126.0" y="611.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (294 samples, 0.11%)</title><rect x="126.0" y="595.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.0" y="606.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (294 samples, 0.11%)</title><rect x="126.0" y="579.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="129.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (224 samples, 0.08%)</title><rect x="127.3" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (224 samples, 0.08%)</title><rect x="127.3" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (224 samples, 0.08%)</title><rect x="127.3" y="563.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="130.3" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (125 samples, 0.05%)</title><rect x="128.3" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (125 samples, 0.05%)</title><rect x="128.3" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.3" y="622.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (125 samples, 0.05%)</title><rect x="128.3" y="595.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="131.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$160/1352926262.run (31,140 samples, 11.71%)</title><rect x="128.8" y="675.0" width="138.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.8" y="686.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (31,140 samples, 11.71%)</title><rect x="128.8" y="659.0" width="138.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.8" y="670.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (31,140 samples, 11.71%)</title><rect x="128.8" y="643.0" width="138.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.8" y="654.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (17,938 samples, 6.75%)</title><rect x="128.8" y="627.0" width="79.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.8" y="638.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17,938 samples, 6.75%)</title><rect x="128.8" y="611.0" width="79.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="131.8" y="622.0">java.nio...</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1,693 samples, 0.64%)</title><rect x="208.4" y="627.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1,693 samples, 0.64%)</title><rect x="208.4" y="611.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (596 samples, 0.22%)</title><rect x="208.4" y="595.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="211.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1,097 samples, 0.41%)</title><rect x="211.1" y="595.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="214.1" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (4,611 samples, 1.73%)</title><rect x="216.0" y="627.0" width="20.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="219.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (6,898 samples, 2.59%)</title><rect x="236.4" y="627.0" width="30.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.4" y="638.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6,898 samples, 2.59%)</title><rect x="236.4" y="611.0" width="30.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.4" y="622.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6,898 samples, 2.59%)</title><rect x="236.4" y="595.0" width="30.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="239.4" y="606.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapArray (11,930 samples, 4.49%)</title><rect x="267.0" y="707.0" width="53.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.0" y="718.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11,930 samples, 4.49%)</title><rect x="267.0" y="691.0" width="53.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.0" y="702.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11,930 samples, 4.49%)</title><rect x="267.0" y="675.0" width="53.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.0" y="686.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11,930 samples, 4.49%)</title><rect x="267.0" y="659.0" width="53.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="270.0" y="670.0">java...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (49,859 samples, 18.75%)</title><rect x="320.0" y="755.0" width="221.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.0" y="766.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (49,859 samples, 18.75%)</title><rect x="320.0" y="739.0" width="221.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.0" y="750.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (24,817 samples, 9.33%)</title><rect x="320.0" y="723.0" width="110.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.0" y="734.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24,817 samples, 9.33%)</title><rect x="320.0" y="707.0" width="110.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.0" y="718.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (24,817 samples, 9.33%)</title><rect x="320.0" y="691.0" width="110.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.0" y="702.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (24,817 samples, 9.33%)</title><rect x="320.0" y="675.0" width="110.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.0" y="686.0">java/util/con..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$221/1687115027.accept (24,817 samples, 9.33%)</title><rect x="320.0" y="659.0" width="110.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.0" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$respond$4 (24,817 samples, 9.33%)</title><rect x="320.0" y="643.0" width="110.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.0" y="654.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24,817 samples, 9.33%)</title><rect x="320.0" y="627.0" width="110.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.0" y="638.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24,817 samples, 9.33%)</title><rect x="320.0" y="611.0" width="110.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.0" y="622.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17,171 samples, 6.46%)</title><rect x="320.0" y="595.0" width="76.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.0" y="606.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17,171 samples, 6.46%)</title><rect x="320.0" y="579.0" width="76.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.0" y="590.0">one/nio/..</text>
</g>
<g>
<title>byte[] (10,149 samples, 3.82%)</title><rect x="320.0" y="563.0" width="45.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="323.0" y="574.0">byte[]</text>
</g>
<g>
<title>byte[] (7,022 samples, 2.64%)</title><rect x="365.0" y="563.0" width="31.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="368.0" y="574.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (7,646 samples, 2.88%)</title><rect x="396.1" y="595.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.1" y="606.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7,646 samples, 2.88%)</title><rect x="396.1" y="579.0" width="34.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="399.1" y="590.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$210/541436010.apply (8,573 samples, 3.22%)</title><rect x="430.1" y="723.0" width="38.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.1" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$resolveChange$10 (8,573 samples, 3.22%)</title><rect x="430.1" y="707.0" width="38.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.1" y="718.0">ru/..</text>
</g>
<g>
<title>one.nio.http.Response (2,021 samples, 0.76%)</title><rect x="430.1" y="691.0" width="8.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="433.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6,552 samples, 2.46%)</title><rect x="439.0" y="691.0" width="29.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.0" y="702.0">on..</text>
</g>
<g>
<title>byte[] (2,509 samples, 0.94%)</title><rect x="439.0" y="675.0" width="11.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="442.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (2,446 samples, 0.92%)</title><rect x="450.2" y="675.0" width="10.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="453.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1,597 samples, 0.60%)</title><rect x="461.0" y="675.0" width="7.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="464.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$457/821899123.apply (16,469 samples, 6.19%)</title><rect x="468.1" y="723.0" width="73.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.1" y="734.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$11 (16,469 samples, 6.19%)</title><rect x="468.1" y="707.0" width="73.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.1" y="718.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getChangeResponse (16,469 samples, 6.19%)</title><rect x="468.1" y="691.0" width="73.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.1" y="702.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (3,527 samples, 1.33%)</title><rect x="468.1" y="675.0" width="15.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="471.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12,942 samples, 4.87%)</title><rect x="483.8" y="675.0" width="57.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.8" y="686.0">one/ni..</text>
</g>
<g>
<title>byte[] (5,134 samples, 1.93%)</title><rect x="483.8" y="659.0" width="22.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="486.8" y="670.0">b..</text>
</g>
<g>
<title>java.lang.String[] (4,713 samples, 1.77%)</title><rect x="506.5" y="659.0" width="21.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="509.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (3,095 samples, 1.16%)</title><rect x="527.5" y="659.0" width="13.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="530.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15,961 samples, 6.00%)</title><rect x="541.2" y="755.0" width="70.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.2" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15,830 samples, 5.95%)</title><rect x="541.2" y="739.0" width="70.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.2" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15,525 samples, 5.84%)</title><rect x="541.2" y="723.0" width="68.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.2" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15,525 samples, 5.84%)</title><rect x="541.2" y="707.0" width="68.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.2" y="718.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15,525 samples, 5.84%)</title><rect x="541.2" y="691.0" width="68.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="544.2" y="702.0">java.ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (305 samples, 0.11%)</title><rect x="610.1" y="723.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (305 samples, 0.11%)</title><rect x="610.1" y="707.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (305 samples, 0.11%)</title><rect x="610.1" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (305 samples, 0.11%)</title><rect x="610.1" y="675.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (305 samples, 0.11%)</title><rect x="610.1" y="659.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="613.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (131 samples, 0.05%)</title><rect x="611.4" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (114 samples, 0.04%)</title><rect x="611.4" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (114 samples, 0.04%)</title><rect x="611.4" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (114 samples, 0.04%)</title><rect x="611.4" y="691.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="614.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.run (4,003 samples, 1.51%)</title><rect x="612.0" y="755.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4,003 samples, 1.51%)</title><rect x="612.0" y="739.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4,003 samples, 1.51%)</title><rect x="612.0" y="723.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (4,003 samples, 1.51%)</title><rect x="612.0" y="707.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,003 samples, 1.51%)</title><rect x="612.0" y="691.0" width="17.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,003 samples, 1.51%)</title><rect x="612.0" y="675.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,003 samples, 1.51%)</title><rect x="612.0" y="659.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,003 samples, 1.51%)</title><rect x="612.0" y="643.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,003 samples, 1.51%)</title><rect x="612.0" y="627.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,003 samples, 1.51%)</title><rect x="612.0" y="611.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4,003 samples, 1.51%)</title><rect x="612.0" y="595.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3,661 samples, 1.38%)</title><rect x="612.0" y="579.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.10%)</title><rect x="612.0" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.10%)</title><rect x="612.0" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/1417557822.get$Lambda (69 samples, 0.03%)</title><rect x="612.0" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$417 (69 samples, 0.03%)</title><rect x="612.0" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="615.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$446/1188918267.get$Lambda (105 samples, 0.04%)</title><rect x="612.3" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$446 (105 samples, 0.04%)</title><rect x="612.3" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="615.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$448/1250691267.get$Lambda (85 samples, 0.03%)</title><rect x="612.8" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$448 (85 samples, 0.03%)</title><rect x="612.8" y="515.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="615.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3,402 samples, 1.28%)</title><rect x="613.2" y="563.0" width="15.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (136 samples, 0.05%)</title><rect x="613.2" y="547.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="616.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,266 samples, 1.23%)</title><rect x="613.8" y="547.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,266 samples, 1.23%)</title><rect x="613.8" y="531.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,266 samples, 1.23%)</title><rect x="613.8" y="515.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (512 samples, 0.19%)</title><rect x="613.8" y="499.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (185 samples, 0.07%)</title><rect x="613.8" y="483.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="616.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/1589996959.apply (305 samples, 0.11%)</title><rect x="614.6" y="483.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (305 samples, 0.11%)</title><rect x="614.6" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (305 samples, 0.11%)</title><rect x="614.6" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (71 samples, 0.03%)</title><rect x="614.6" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (71 samples, 0.03%)</title><rect x="614.6" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (71 samples, 0.03%)</title><rect x="614.6" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="617.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (234 samples, 0.09%)</title><rect x="614.9" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (196 samples, 0.07%)</title><rect x="615.1" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (196 samples, 0.07%)</title><rect x="615.1" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (111 samples, 0.04%)</title><rect x="615.1" y="387.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="618.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="615.6" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="615.6" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.03%)</title><rect x="615.6" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="618.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,754 samples, 1.04%)</title><rect x="616.0" y="499.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,754 samples, 1.04%)</title><rect x="616.0" y="483.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$367/1660747199.apply (2,754 samples, 1.04%)</title><rect x="616.0" y="467.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2,754 samples, 1.04%)</title><rect x="616.0" y="451.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,754 samples, 1.04%)</title><rect x="616.0" y="435.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1781629338.apply (2,754 samples, 1.04%)</title><rect x="616.0" y="419.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2,754 samples, 1.04%)</title><rect x="616.0" y="403.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.02%)</title><rect x="616.0" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.02%)</title><rect x="616.0" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/1589996959.get$Lambda (65 samples, 0.02%)</title><rect x="616.0" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$433 (65 samples, 0.02%)</title><rect x="616.0" y="339.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="619.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (234 samples, 0.09%)</title><rect x="616.3" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (234 samples, 0.09%)</title><rect x="616.3" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (140 samples, 0.05%)</title><rect x="616.3" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="619.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.04%)</title><rect x="616.9" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.04%)</title><rect x="616.9" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.04%)</title><rect x="616.9" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="619.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2,455 samples, 0.92%)</title><rect x="617.4" y="387.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.03%)</title><rect x="617.4" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.03%)</title><rect x="617.4" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (875 samples, 0.33%)</title><rect x="617.7" y="371.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (875 samples, 0.33%)</title><rect x="617.7" y="355.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (875 samples, 0.33%)</title><rect x="617.7" y="339.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$422/315871170.accept (286 samples, 0.11%)</title><rect x="617.7" y="323.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (286 samples, 0.11%)</title><rect x="617.7" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (286 samples, 0.11%)</title><rect x="617.7" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.03%)</title><rect x="617.7" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.03%)</title><rect x="617.7" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/138943918.get$Lambda (71 samples, 0.03%)</title><rect x="617.7" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$427 (71 samples, 0.03%)</title><rect x="617.7" y="227.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="620.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (215 samples, 0.08%)</title><rect x="618.0" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (215 samples, 0.08%)</title><rect x="618.0" y="259.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (128 samples, 0.05%)</title><rect x="618.0" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="621.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (87 samples, 0.03%)</title><rect x="618.6" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (87 samples, 0.03%)</title><rect x="618.6" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (87 samples, 0.03%)</title><rect x="618.6" y="211.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="621.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$429/669699404.accept (390 samples, 0.15%)</title><rect x="619.0" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (390 samples, 0.15%)</title><rect x="619.0" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (390 samples, 0.15%)</title><rect x="619.0" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (390 samples, 0.15%)</title><rect x="619.0" y="275.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (390 samples, 0.15%)</title><rect x="619.0" y="259.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (390 samples, 0.15%)</title><rect x="619.0" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (390 samples, 0.15%)</title><rect x="619.0" y="227.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (390 samples, 0.15%)</title><rect x="619.0" y="211.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (390 samples, 0.15%)</title><rect x="619.0" y="195.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (390 samples, 0.15%)</title><rect x="619.0" y="179.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (148 samples, 0.06%)</title><rect x="619.0" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (148 samples, 0.06%)</title><rect x="619.0" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (78 samples, 0.03%)</title><rect x="619.0" y="131.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="622.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (70 samples, 0.03%)</title><rect x="619.3" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (70 samples, 0.03%)</title><rect x="619.3" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (70 samples, 0.03%)</title><rect x="619.3" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (70 samples, 0.03%)</title><rect x="619.3" y="83.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (70 samples, 0.03%)</title><rect x="619.3" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (70 samples, 0.03%)</title><rect x="619.3" y="51.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="622.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (242 samples, 0.09%)</title><rect x="619.7" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (242 samples, 0.09%)</title><rect x="619.7" y="147.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.7" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (74 samples, 0.03%)</title><rect x="619.7" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (74 samples, 0.03%)</title><rect x="619.7" y="115.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="622.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (168 samples, 0.06%)</title><rect x="620.0" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.0" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (88 samples, 0.03%)</title><rect x="620.0" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="623.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (80 samples, 0.03%)</title><rect x="620.4" y="115.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (80 samples, 0.03%)</title><rect x="620.4" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (80 samples, 0.03%)</title><rect x="620.4" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (80 samples, 0.03%)</title><rect x="620.4" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (80 samples, 0.03%)</title><rect x="620.4" y="51.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (80 samples, 0.03%)</title><rect x="620.4" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="623.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (199 samples, 0.07%)</title><rect x="620.7" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (199 samples, 0.07%)</title><rect x="620.7" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (199 samples, 0.07%)</title><rect x="620.7" y="291.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1,496 samples, 0.56%)</title><rect x="621.6" y="371.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (145 samples, 0.05%)</title><rect x="621.6" y="355.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="624.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (127 samples, 0.05%)</title><rect x="622.3" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (127 samples, 0.05%)</title><rect x="622.3" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (127 samples, 0.05%)</title><rect x="622.3" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="625.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1,224 samples, 0.46%)</title><rect x="622.8" y="355.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (70 samples, 0.03%)</title><rect x="622.8" y="339.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="625.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (645 samples, 0.24%)</title><rect x="623.1" y="339.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (96 samples, 0.04%)</title><rect x="623.1" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (96 samples, 0.04%)</title><rect x="623.1" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="626.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (144 samples, 0.05%)</title><rect x="623.6" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="626.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (405 samples, 0.15%)</title><rect x="624.2" y="323.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (110 samples, 0.04%)</title><rect x="624.5" y="307.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="627.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (62 samples, 0.02%)</title><rect x="625.0" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (62 samples, 0.02%)</title><rect x="625.0" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="628.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (157 samples, 0.06%)</title><rect x="625.3" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (509 samples, 0.19%)</title><rect x="626.0" y="339.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.0" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (84 samples, 0.03%)</title><rect x="626.0" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (248 samples, 0.09%)</title><rect x="626.4" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (141 samples, 0.05%)</title><rect x="626.4" y="307.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="629.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (107 samples, 0.04%)</title><rect x="627.0" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.0" y="318.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.04%)</title><rect x="627.0" y="291.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="630.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (177 samples, 0.07%)</title><rect x="627.5" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (177 samples, 0.07%)</title><rect x="627.5" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (177 samples, 0.07%)</title><rect x="627.5" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.5" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (177 samples, 0.07%)</title><rect x="627.5" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (177 samples, 0.07%)</title><rect x="627.5" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (177 samples, 0.07%)</title><rect x="627.5" y="243.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="630.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (342 samples, 0.13%)</title><rect x="628.3" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (342 samples, 0.13%)</title><rect x="628.3" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (342 samples, 0.13%)</title><rect x="628.3" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (342 samples, 0.13%)</title><rect x="628.3" y="531.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (342 samples, 0.13%)</title><rect x="628.3" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (342 samples, 0.13%)</title><rect x="628.3" y="499.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (164 samples, 0.06%)</title><rect x="628.3" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.3" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (164 samples, 0.06%)</title><rect x="628.3" y="467.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="631.3" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (178 samples, 0.07%)</title><rect x="629.0" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.0" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (178 samples, 0.07%)</title><rect x="629.0" y="467.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="632.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12,591 samples, 4.73%)</title><rect x="629.8" y="755.0" width="55.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.8" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12,591 samples, 4.73%)</title><rect x="629.8" y="739.0" width="55.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.8" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10,673 samples, 4.01%)</title><rect x="629.8" y="723.0" width="47.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.8" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (10,673 samples, 4.01%)</title><rect x="629.8" y="707.0" width="47.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.8" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10,673 samples, 4.01%)</title><rect x="629.8" y="691.0" width="47.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.8" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (258 samples, 0.10%)</title><rect x="629.8" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (258 samples, 0.10%)</title><rect x="629.8" y="659.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (258 samples, 0.10%)</title><rect x="629.8" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (258 samples, 0.10%)</title><rect x="629.8" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (149 samples, 0.06%)</title><rect x="629.8" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (149 samples, 0.06%)</title><rect x="629.8" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (149 samples, 0.06%)</title><rect x="629.8" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (149 samples, 0.06%)</title><rect x="629.8" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (149 samples, 0.06%)</title><rect x="629.8" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.8" y="558.0"></text>
</g>
<g>
<title>byte[] (149 samples, 0.06%)</title><rect x="629.8" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="632.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (109 samples, 0.04%)</title><rect x="630.4" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.04%)</title><rect x="630.4" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.04%)</title><rect x="630.4" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412/1147867721.get$Lambda (109 samples, 0.04%)</title><rect x="630.4" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412 (109 samples, 0.04%)</title><rect x="630.4" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="633.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (10,415 samples, 3.92%)</title><rect x="630.9" y="675.0" width="46.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.9" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (10,415 samples, 3.92%)</title><rect x="630.9" y="659.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.9" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10,415 samples, 3.92%)</title><rect x="630.9" y="643.0" width="46.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.9" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10,415 samples, 3.92%)</title><rect x="630.9" y="627.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.9" y="638.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4,987 samples, 1.88%)</title><rect x="630.9" y="611.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,987 samples, 1.88%)</title><rect x="630.9" y="595.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,987 samples, 1.88%)</title><rect x="630.9" y="579.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,987 samples, 1.88%)</title><rect x="630.9" y="563.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,987 samples, 1.88%)</title><rect x="630.9" y="547.0" width="22.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4,987 samples, 1.88%)</title><rect x="630.9" y="531.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,987 samples, 1.88%)</title><rect x="630.9" y="515.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4,835 samples, 1.82%)</title><rect x="630.9" y="499.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.9" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,835 samples, 1.82%)</title><rect x="630.9" y="483.0" width="21.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,722 samples, 1.78%)</title><rect x="630.9" y="467.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (91 samples, 0.03%)</title><rect x="630.9" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="633.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.apply (4,428 samples, 1.67%)</title><rect x="631.3" y="451.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4,428 samples, 1.67%)</title><rect x="631.3" y="435.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.03%)</title><rect x="631.3" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.03%)</title><rect x="631.3" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$507/1071206426.get$Lambda (74 samples, 0.03%)</title><rect x="631.3" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$507 (74 samples, 0.03%)</title><rect x="631.3" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="634.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (207 samples, 0.08%)</title><rect x="631.6" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (207 samples, 0.08%)</title><rect x="631.6" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (107 samples, 0.04%)</title><rect x="631.6" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="634.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.04%)</title><rect x="632.1" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.04%)</title><rect x="632.1" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.04%)</title><rect x="632.1" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="635.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4,147 samples, 1.56%)</title><rect x="632.6" y="419.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (224 samples, 0.08%)</title><rect x="632.8" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (224 samples, 0.08%)</title><rect x="632.8" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (121 samples, 0.05%)</title><rect x="632.8" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="635.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="633.3" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="633.3" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="633.3" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="636.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3,875 samples, 1.46%)</title><rect x="633.8" y="403.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3,587 samples, 1.35%)</title><rect x="633.8" y="387.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.04%)</title><rect x="633.8" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.04%)</title><rect x="633.8" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1669050119.linkToTargetMethod (133 samples, 0.05%)</title><rect x="634.2" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1785429695.invokeStatic (133 samples, 0.05%)</title><rect x="634.2" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/939439677.get$Lambda (133 samples, 0.05%)</title><rect x="634.2" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$470 (133 samples, 0.05%)</title><rect x="634.2" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="637.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (726 samples, 0.27%)</title><rect x="634.8" y="371.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (298 samples, 0.11%)</title><rect x="634.8" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (114 samples, 0.04%)</title><rect x="634.8" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (114 samples, 0.04%)</title><rect x="634.8" y="323.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (184 samples, 0.07%)</title><rect x="635.3" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (184 samples, 0.07%)</title><rect x="635.3" y="323.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="638.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (220 samples, 0.08%)</title><rect x="636.1" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (220 samples, 0.08%)</title><rect x="636.1" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (220 samples, 0.08%)</title><rect x="636.1" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (72 samples, 0.03%)</title><rect x="636.1" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (72 samples, 0.03%)</title><rect x="636.1" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (72 samples, 0.03%)</title><rect x="636.1" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (72 samples, 0.03%)</title><rect x="636.1" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="639.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$467/808665053.get (68 samples, 0.03%)</title><rect x="636.5" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.5" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (68 samples, 0.03%)</title><rect x="636.5" y="291.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="639.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (80 samples, 0.03%)</title><rect x="636.8" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (80 samples, 0.03%)</title><rect x="636.8" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.8" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (80 samples, 0.03%)</title><rect x="636.8" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.8" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (80 samples, 0.03%)</title><rect x="636.8" y="259.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="639.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (208 samples, 0.08%)</title><rect x="637.1" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (208 samples, 0.08%)</title><rect x="637.1" y="339.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="640.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (463 samples, 0.17%)</title><rect x="638.0" y="371.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (226 samples, 0.08%)</title><rect x="638.0" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (122 samples, 0.05%)</title><rect x="638.0" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="641.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.04%)</title><rect x="638.6" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.04%)</title><rect x="638.6" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.04%)</title><rect x="638.6" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="641.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (237 samples, 0.09%)</title><rect x="639.1" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (237 samples, 0.09%)</title><rect x="639.1" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (146 samples, 0.05%)</title><rect x="639.1" y="323.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="642.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (91 samples, 0.03%)</title><rect x="639.7" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (91 samples, 0.03%)</title><rect x="639.7" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (91 samples, 0.03%)</title><rect x="639.7" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="642.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (67 samples, 0.03%)</title><rect x="640.1" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (94 samples, 0.04%)</title><rect x="640.4" y="371.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="643.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.04%)</title><rect x="640.8" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="643.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,852 samples, 0.70%)</title><rect x="641.5" y="371.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/939439677.run (1,852 samples, 0.70%)</title><rect x="641.5" y="355.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,852 samples, 0.70%)</title><rect x="641.5" y="339.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (228 samples, 0.09%)</title><rect x="641.5" y="323.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (228 samples, 0.09%)</title><rect x="641.5" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$472/1855914119.get$Lambda (72 samples, 0.03%)</title><rect x="641.7" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$472 (72 samples, 0.03%)</title><rect x="641.7" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="644.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$480/1259098462.get$Lambda (108 samples, 0.04%)</title><rect x="642.0" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$480 (108 samples, 0.04%)</title><rect x="642.0" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="645.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (209 samples, 0.08%)</title><rect x="642.5" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (209 samples, 0.08%)</title><rect x="642.5" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (124 samples, 0.05%)</title><rect x="642.5" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="645.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="643.0" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="643.0" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.03%)</title><rect x="643.0" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="646.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (132 samples, 0.05%)</title><rect x="643.4" y="323.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="646.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (107 samples, 0.04%)</title><rect x="644.0" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.04%)</title><rect x="644.0" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="647.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (308 samples, 0.12%)</title><rect x="644.5" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (308 samples, 0.12%)</title><rect x="644.5" y="307.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.03%)</title><rect x="644.5" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.03%)</title><rect x="644.5" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$485/420126221.get$Lambda (78 samples, 0.03%)</title><rect x="644.5" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$485 (78 samples, 0.03%)</title><rect x="644.5" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="647.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (230 samples, 0.09%)</title><rect x="644.8" y="291.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (230 samples, 0.09%)</title><rect x="644.8" y="275.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (230 samples, 0.09%)</title><rect x="644.8" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (130 samples, 0.05%)</title><rect x="644.8" y="243.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="647.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.04%)</title><rect x="645.4" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.04%)</title><rect x="645.4" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.04%)</title><rect x="645.4" y="211.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="648.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (327 samples, 0.12%)</title><rect x="645.8" y="323.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (327 samples, 0.12%)</title><rect x="645.8" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (327 samples, 0.12%)</title><rect x="645.8" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (327 samples, 0.12%)</title><rect x="645.8" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (84 samples, 0.03%)</title><rect x="645.8" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.03%)</title><rect x="645.8" y="243.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="648.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (243 samples, 0.09%)</title><rect x="646.2" y="259.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (243 samples, 0.09%)</title><rect x="646.2" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.2" y="254.0"></text>
</g>
<g>
<title>byte[] (243 samples, 0.09%)</title><rect x="646.2" y="227.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="649.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (541 samples, 0.20%)</title><rect x="647.3" y="323.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (179 samples, 0.07%)</title><rect x="647.3" y="307.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="650.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (362 samples, 0.14%)</title><rect x="648.1" y="307.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (362 samples, 0.14%)</title><rect x="648.1" y="291.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (362 samples, 0.14%)</title><rect x="648.1" y="275.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (362 samples, 0.14%)</title><rect x="648.1" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (84 samples, 0.03%)</title><rect x="648.1" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.03%)</title><rect x="648.1" y="227.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="651.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (278 samples, 0.10%)</title><rect x="648.5" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (278 samples, 0.10%)</title><rect x="648.5" y="227.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.5" y="238.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.10%)</title><rect x="648.5" y="211.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="651.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/ChangeBodyHandler.apply (288 samples, 0.11%)</title><rect x="649.7" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (288 samples, 0.11%)</title><rect x="649.7" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.7" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (62 samples, 0.02%)</title><rect x="649.7" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.7" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.of (62 samples, 0.02%)</title><rect x="649.7" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.7" y="350.0"></text>
</g>
<g>
<title>java.util.Optional (62 samples, 0.02%)</title><rect x="649.7" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="652.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (61 samples, 0.02%)</title><rect x="650.0" y="355.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="653.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (165 samples, 0.06%)</title><rect x="650.2" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (117 samples, 0.04%)</title><rect x="650.4" y="339.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="653.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$372/967459834.apply (203 samples, 0.08%)</title><rect x="651.0" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (203 samples, 0.08%)</title><rect x="651.0" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (107 samples, 0.04%)</title><rect x="651.0" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (107 samples, 0.04%)</title><rect x="651.0" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (107 samples, 0.04%)</title><rect x="651.0" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.0" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (107 samples, 0.04%)</title><rect x="651.0" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (96 samples, 0.04%)</title><rect x="651.4" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.04%)</title><rect x="651.4" y="403.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="654.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (113 samples, 0.04%)</title><rect x="651.9" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (113 samples, 0.04%)</title><rect x="651.9" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$377/2069577171.apply (113 samples, 0.04%)</title><rect x="651.9" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (113 samples, 0.04%)</title><rect x="651.9" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (113 samples, 0.04%)</title><rect x="651.9" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.04%)</title><rect x="651.9" y="387.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="654.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/71450870.apply (152 samples, 0.06%)</title><rect x="652.4" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (152 samples, 0.06%)</title><rect x="652.4" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (152 samples, 0.06%)</title><rect x="652.4" y="467.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="655.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (5,428 samples, 2.04%)</title><rect x="653.0" y="611.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (346 samples, 0.13%)</title><rect x="653.0" y="595.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (346 samples, 0.13%)</title><rect x="653.0" y="579.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (346 samples, 0.13%)</title><rect x="653.0" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (346 samples, 0.13%)</title><rect x="653.0" y="547.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (346 samples, 0.13%)</title><rect x="653.0" y="531.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.0" y="542.0"></text>
</g>
<g>
<title>byte[] (346 samples, 0.13%)</title><rect x="653.0" y="515.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="656.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (227 samples, 0.09%)</title><rect x="654.6" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (227 samples, 0.09%)</title><rect x="654.6" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (227 samples, 0.09%)</title><rect x="654.6" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (227 samples, 0.09%)</title><rect x="654.6" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (227 samples, 0.09%)</title><rect x="654.6" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.6" y="542.0"></text>
</g>
<g>
<title>byte[] (227 samples, 0.09%)</title><rect x="654.6" y="515.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="657.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (401 samples, 0.15%)</title><rect x="655.6" y="595.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.6" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (77 samples, 0.03%)</title><rect x="655.6" y="579.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="658.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.02%)</title><rect x="655.9" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.02%)</title><rect x="655.9" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.02%)</title><rect x="655.9" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.9" y="558.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.02%)</title><rect x="655.9" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="658.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (86 samples, 0.03%)</title><rect x="656.2" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (86 samples, 0.03%)</title><rect x="656.2" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="574.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.03%)</title><rect x="656.2" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="659.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (174 samples, 0.07%)</title><rect x="656.6" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (174 samples, 0.07%)</title><rect x="656.6" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.02%)</title><rect x="656.6" y="547.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="659.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (115 samples, 0.04%)</title><rect x="656.9" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.9" y="558.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.04%)</title><rect x="656.9" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="659.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,411 samples, 0.53%)</title><rect x="657.4" y="595.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,411 samples, 0.53%)</title><rect x="657.4" y="579.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,411 samples, 0.53%)</title><rect x="657.4" y="563.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.4" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (81 samples, 0.03%)</title><rect x="657.6" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (139 samples, 0.05%)</title><rect x="658.0" y="547.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="661.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (57 samples, 0.02%)</title><rect x="658.6" y="547.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="661.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.03%)</title><rect x="658.8" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.03%)</title><rect x="658.8" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (76 samples, 0.03%)</title><rect x="658.8" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (76 samples, 0.03%)</title><rect x="658.8" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="661.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (116 samples, 0.04%)</title><rect x="659.2" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (116 samples, 0.04%)</title><rect x="659.2" y="531.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="662.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (740 samples, 0.28%)</title><rect x="659.7" y="547.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (740 samples, 0.28%)</title><rect x="659.7" y="531.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (740 samples, 0.28%)</title><rect x="659.7" y="515.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (174 samples, 0.07%)</title><rect x="659.7" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (174 samples, 0.07%)</title><rect x="659.7" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (174 samples, 0.07%)</title><rect x="659.7" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (174 samples, 0.07%)</title><rect x="659.7" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (174 samples, 0.07%)</title><rect x="659.7" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (174 samples, 0.07%)</title><rect x="659.7" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (174 samples, 0.07%)</title><rect x="659.7" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (174 samples, 0.07%)</title><rect x="659.7" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (174 samples, 0.07%)</title><rect x="659.7" y="371.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="662.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (301 samples, 0.11%)</title><rect x="660.4" y="499.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.4" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (301 samples, 0.11%)</title><rect x="660.4" y="483.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (157 samples, 0.06%)</title><rect x="660.4" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (157 samples, 0.06%)</title><rect x="660.4" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (157 samples, 0.06%)</title><rect x="660.4" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="663.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (144 samples, 0.05%)</title><rect x="661.1" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (144 samples, 0.05%)</title><rect x="661.1" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="664.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (265 samples, 0.10%)</title><rect x="661.8" y="499.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (265 samples, 0.10%)</title><rect x="661.8" y="483.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="664.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (150 samples, 0.06%)</title><rect x="663.0" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (150 samples, 0.06%)</title><rect x="663.0" y="531.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="666.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3,043 samples, 1.14%)</title><rect x="663.6" y="595.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.6" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (161 samples, 0.06%)</title><rect x="663.6" y="579.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="666.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (197 samples, 0.07%)</title><rect x="664.3" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (197 samples, 0.07%)</title><rect x="664.3" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.3" y="574.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.07%)</title><rect x="664.3" y="547.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="667.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (427 samples, 0.16%)</title><rect x="665.2" y="579.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (427 samples, 0.16%)</title><rect x="665.2" y="563.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (164 samples, 0.06%)</title><rect x="665.2" y="547.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="668.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (263 samples, 0.10%)</title><rect x="665.9" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.9" y="558.0"></text>
</g>
<g>
<title>byte[] (263 samples, 0.10%)</title><rect x="665.9" y="531.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="668.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2,258 samples, 0.85%)</title><rect x="667.1" y="579.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (662 samples, 0.25%)</title><rect x="667.1" y="563.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (662 samples, 0.25%)</title><rect x="667.1" y="547.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (283 samples, 0.11%)</title><rect x="667.1" y="531.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="670.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (379 samples, 0.14%)</title><rect x="668.4" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.4" y="542.0"></text>
</g>
<g>
<title>byte[] (379 samples, 0.14%)</title><rect x="668.4" y="515.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="671.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (353 samples, 0.13%)</title><rect x="670.0" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (353 samples, 0.13%)</title><rect x="670.0" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.0" y="558.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.07%)</title><rect x="670.0" y="531.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="673.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (156 samples, 0.06%)</title><rect x="670.9" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (312 samples, 0.12%)</title><rect x="671.6" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (312 samples, 0.12%)</title><rect x="671.6" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (312 samples, 0.12%)</title><rect x="671.6" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.05%)</title><rect x="671.6" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="674.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (168 samples, 0.06%)</title><rect x="672.3" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.3" y="526.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.06%)</title><rect x="672.3" y="499.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="675.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (327 samples, 0.12%)</title><rect x="673.0" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (327 samples, 0.12%)</title><rect x="673.0" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (327 samples, 0.12%)</title><rect x="673.0" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (327 samples, 0.12%)</title><rect x="673.0" y="515.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (327 samples, 0.12%)</title><rect x="673.0" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (327 samples, 0.12%)</title><rect x="673.0" y="483.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="676.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (604 samples, 0.23%)</title><rect x="674.4" y="563.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (180 samples, 0.07%)</title><rect x="674.4" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (180 samples, 0.07%)</title><rect x="674.4" y="531.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="677.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (266 samples, 0.10%)</title><rect x="675.2" y="547.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (266 samples, 0.10%)</title><rect x="675.2" y="531.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="678.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$463/1192001859.apply (158 samples, 0.06%)</title><rect x="676.4" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (158 samples, 0.06%)</title><rect x="676.4" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.4" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (158 samples, 0.06%)</title><rect x="676.4" y="515.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="679.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,918 samples, 0.72%)</title><rect x="677.1" y="723.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,918 samples, 0.72%)</title><rect x="677.1" y="707.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,918 samples, 0.72%)</title><rect x="677.1" y="691.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/206285280.run (1,918 samples, 0.72%)</title><rect x="677.1" y="675.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,918 samples, 0.72%)</title><rect x="677.1" y="659.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,859 samples, 0.70%)</title><rect x="677.1" y="643.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (117 samples, 0.04%)</title><rect x="677.1" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (117 samples, 0.04%)</title><rect x="677.1" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$330/258901730.get$Lambda (63 samples, 0.02%)</title><rect x="677.4" y="595.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$330 (63 samples, 0.02%)</title><rect x="677.4" y="579.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="680.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (99 samples, 0.04%)</title><rect x="677.6" y="627.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="680.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (114 samples, 0.04%)</title><rect x="678.1" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (114 samples, 0.04%)</title><rect x="678.1" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (66 samples, 0.02%)</title><rect x="678.3" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (66 samples, 0.02%)</title><rect x="678.3" y="579.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="681.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,529 samples, 0.57%)</title><rect x="678.6" y="627.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,529 samples, 0.57%)</title><rect x="678.6" y="611.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$471/282701340.run (1,348 samples, 0.51%)</title><rect x="678.6" y="595.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,348 samples, 0.51%)</title><rect x="678.6" y="579.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,348 samples, 0.51%)</title><rect x="678.6" y="563.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (392 samples, 0.15%)</title><rect x="678.6" y="547.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (267 samples, 0.10%)</title><rect x="678.6" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (97 samples, 0.04%)</title><rect x="678.6" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (97 samples, 0.04%)</title><rect x="678.6" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="681.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (170 samples, 0.06%)</title><rect x="679.0" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.0" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (170 samples, 0.06%)</title><rect x="679.0" y="499.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="682.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (125 samples, 0.05%)</title><rect x="679.8" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (125 samples, 0.05%)</title><rect x="679.8" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (125 samples, 0.05%)</title><rect x="679.8" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (67 samples, 0.03%)</title><rect x="679.8" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (67 samples, 0.03%)</title><rect x="679.8" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="682.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (58 samples, 0.02%)</title><rect x="680.1" y="483.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (58 samples, 0.02%)</title><rect x="680.1" y="467.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.1" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (58 samples, 0.02%)</title><rect x="680.1" y="451.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.1" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (58 samples, 0.02%)</title><rect x="680.1" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="683.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (956 samples, 0.36%)</title><rect x="680.3" y="547.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (67 samples, 0.03%)</title><rect x="680.3" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.3" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (67 samples, 0.03%)</title><rect x="680.3" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (67 samples, 0.03%)</title><rect x="680.3" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (67 samples, 0.03%)</title><rect x="680.3" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.3" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (67 samples, 0.03%)</title><rect x="680.3" y="467.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="683.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (889 samples, 0.33%)</title><rect x="680.6" y="531.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (305 samples, 0.11%)</title><rect x="680.6" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (68 samples, 0.03%)</title><rect x="680.6" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (68 samples, 0.03%)</title><rect x="680.6" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.6" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (68 samples, 0.03%)</title><rect x="680.6" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.6" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (68 samples, 0.03%)</title><rect x="680.6" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.6" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (68 samples, 0.03%)</title><rect x="680.6" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.6" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (68 samples, 0.03%)</title><rect x="680.6" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="683.6" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (64 samples, 0.02%)</title><rect x="680.9" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (64 samples, 0.02%)</title><rect x="680.9" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (64 samples, 0.02%)</title><rect x="680.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (64 samples, 0.02%)</title><rect x="680.9" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (64 samples, 0.02%)</title><rect x="680.9" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.9" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (64 samples, 0.02%)</title><rect x="680.9" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="683.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (74 samples, 0.03%)</title><rect x="681.2" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (74 samples, 0.03%)</title><rect x="681.2" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (74 samples, 0.03%)</title><rect x="681.2" y="467.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="684.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (97 samples, 0.04%)</title><rect x="681.6" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="684.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (245 samples, 0.09%)</title><rect x="682.0" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (78 samples, 0.03%)</title><rect x="682.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (78 samples, 0.03%)</title><rect x="682.0" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (78 samples, 0.03%)</title><rect x="682.0" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.03%)</title><rect x="682.0" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="685.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (72 samples, 0.03%)</title><rect x="682.3" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (72 samples, 0.03%)</title><rect x="682.3" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (72 samples, 0.03%)</title><rect x="682.3" y="467.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="685.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (95 samples, 0.04%)</title><rect x="682.6" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (95 samples, 0.04%)</title><rect x="682.6" y="483.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="685.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (339 samples, 0.13%)</title><rect x="683.1" y="515.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (67 samples, 0.03%)</title><rect x="683.1" y="499.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="686.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (272 samples, 0.10%)</title><rect x="683.4" y="499.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (87 samples, 0.03%)</title><rect x="683.4" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (87 samples, 0.03%)</title><rect x="683.4" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (87 samples, 0.03%)</title><rect x="683.4" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (87 samples, 0.03%)</title><rect x="683.4" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="686.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (185 samples, 0.07%)</title><rect x="683.8" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (185 samples, 0.07%)</title><rect x="683.8" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (129 samples, 0.05%)</title><rect x="683.8" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="686.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (181 samples, 0.07%)</title><rect x="684.6" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (181 samples, 0.07%)</title><rect x="684.6" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (181 samples, 0.07%)</title><rect x="684.6" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (181 samples, 0.07%)</title><rect x="684.6" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (181 samples, 0.07%)</title><rect x="684.6" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (181 samples, 0.07%)</title><rect x="684.6" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (181 samples, 0.07%)</title><rect x="684.6" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$490/1490887781.accept (181 samples, 0.07%)</title><rect x="684.6" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (181 samples, 0.07%)</title><rect x="684.6" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (181 samples, 0.07%)</title><rect x="684.6" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (181 samples, 0.07%)</title><rect x="684.6" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (181 samples, 0.07%)</title><rect x="684.6" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$507/1071206426.apply (181 samples, 0.07%)</title><rect x="684.6" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (181 samples, 0.07%)</title><rect x="684.6" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (181 samples, 0.07%)</title><rect x="684.6" y="371.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="687.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (59 samples, 0.02%)</title><rect x="685.4" y="643.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (59 samples, 0.02%)</title><rect x="685.4" y="627.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (59 samples, 0.02%)</title><rect x="685.4" y="611.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (59 samples, 0.02%)</title><rect x="685.4" y="595.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (4,693 samples, 1.76%)</title><rect x="685.6" y="803.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (4,693 samples, 1.76%)</title><rect x="685.6" y="787.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (4,693 samples, 1.76%)</title><rect x="685.6" y="771.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (4,693 samples, 1.76%)</title><rect x="685.6" y="755.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (4,693 samples, 1.76%)</title><rect x="685.6" y="739.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (4,693 samples, 1.76%)</title><rect x="685.6" y="723.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,693 samples, 1.76%)</title><rect x="685.6" y="707.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4,693 samples, 1.76%)</title><rect x="685.6" y="691.0" width="20.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,693 samples, 1.76%)</title><rect x="685.6" y="675.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4,693 samples, 1.76%)</title><rect x="685.6" y="659.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4,693 samples, 1.76%)</title><rect x="685.6" y="643.0" width="20.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.accept (4,693 samples, 1.76%)</title><rect x="685.6" y="627.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (4,693 samples, 1.76%)</title><rect x="685.6" y="611.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4,656 samples, 1.75%)</title><rect x="685.8" y="595.0" width="20.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,656 samples, 1.75%)</title><rect x="685.8" y="579.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (4,656 samples, 1.75%)</title><rect x="685.8" y="563.0" width="20.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="688.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,713 samples, 1.77%)</title><rect x="706.5" y="803.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (94 samples, 0.04%)</title><rect x="706.5" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (94 samples, 0.04%)</title><rect x="706.5" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$383/1282762603.get$Lambda (71 samples, 0.03%)</title><rect x="706.5" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.5" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$383 (71 samples, 0.03%)</title><rect x="706.5" y="739.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="709.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1684015092.linkToTargetMethod (109 samples, 0.04%)</title><rect x="706.9" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.04%)</title><rect x="706.9" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1793677472.get$Lambda (109 samples, 0.04%)</title><rect x="706.9" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$384 (109 samples, 0.04%)</title><rect x="706.9" y="739.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="709.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,101 samples, 0.41%)</title><rect x="707.4" y="787.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$385/1818596436.accept (920 samples, 0.35%)</title><rect x="707.4" y="771.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (920 samples, 0.35%)</title><rect x="707.4" y="755.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (920 samples, 0.35%)</title><rect x="707.4" y="739.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (920 samples, 0.35%)</title><rect x="707.4" y="723.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (920 samples, 0.35%)</title><rect x="707.4" y="707.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (920 samples, 0.35%)</title><rect x="707.4" y="691.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (920 samples, 0.35%)</title><rect x="707.4" y="675.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (920 samples, 0.35%)</title><rect x="707.4" y="659.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (920 samples, 0.35%)</title><rect x="707.4" y="643.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (920 samples, 0.35%)</title><rect x="707.4" y="627.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (920 samples, 0.35%)</title><rect x="707.4" y="611.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (920 samples, 0.35%)</title><rect x="707.4" y="595.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (229 samples, 0.09%)</title><rect x="707.4" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (229 samples, 0.09%)</title><rect x="707.4" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (229 samples, 0.09%)</title><rect x="707.4" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (126 samples, 0.05%)</title><rect x="707.4" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (126 samples, 0.05%)</title><rect x="707.4" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (126 samples, 0.05%)</title><rect x="707.4" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (126 samples, 0.05%)</title><rect x="707.4" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (126 samples, 0.05%)</title><rect x="707.4" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="710.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.04%)</title><rect x="707.9" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.04%)</title><rect x="707.9" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (103 samples, 0.04%)</title><rect x="707.9" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (103 samples, 0.04%)</title><rect x="707.9" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (103 samples, 0.04%)</title><rect x="707.9" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (102 samples, 0.04%)</title><rect x="707.9" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="710.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (78 samples, 0.03%)</title><rect x="708.4" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.03%)</title><rect x="708.4" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.03%)</title><rect x="708.4" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412/1147867721.get$Lambda (78 samples, 0.03%)</title><rect x="708.4" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412 (78 samples, 0.03%)</title><rect x="708.4" y="515.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="711.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (613 samples, 0.23%)</title><rect x="708.7" y="579.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (362 samples, 0.14%)</title><rect x="708.7" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (228 samples, 0.09%)</title><rect x="708.7" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.7" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (228 samples, 0.09%)</title><rect x="708.7" y="531.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="711.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (134 samples, 0.05%)</title><rect x="709.7" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (134 samples, 0.05%)</title><rect x="709.7" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.7" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (134 samples, 0.05%)</title><rect x="709.7" y="515.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="712.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (251 samples, 0.09%)</title><rect x="710.3" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$246/1337971803.get (251 samples, 0.09%)</title><rect x="710.3" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (251 samples, 0.09%)</title><rect x="710.3" y="531.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (251 samples, 0.09%)</title><rect x="710.3" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="713.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (250 samples, 0.09%)</title><rect x="710.3" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.3" y="510.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.09%)</title><rect x="710.4" y="483.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="713.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/1275593332.accept (181 samples, 0.07%)</title><rect x="711.4" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (181 samples, 0.07%)</title><rect x="711.4" y="755.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1793677472.run (181 samples, 0.07%)</title><rect x="711.4" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (181 samples, 0.07%)</title><rect x="711.4" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (181 samples, 0.07%)</title><rect x="711.4" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (181 samples, 0.07%)</title><rect x="711.4" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (181 samples, 0.07%)</title><rect x="711.4" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.4" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (181 samples, 0.07%)</title><rect x="711.4" y="659.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="714.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (590 samples, 0.22%)</title><rect x="712.2" y="787.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.2" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (590 samples, 0.22%)</title><rect x="712.2" y="771.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="715.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (241 samples, 0.09%)</title><rect x="714.9" y="787.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (128 samples, 0.05%)</title><rect x="714.9" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (128 samples, 0.05%)</title><rect x="714.9" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (128 samples, 0.05%)</title><rect x="714.9" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (128 samples, 0.05%)</title><rect x="714.9" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (128 samples, 0.05%)</title><rect x="714.9" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (128 samples, 0.05%)</title><rect x="714.9" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.9" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (128 samples, 0.05%)</title><rect x="714.9" y="675.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="717.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (113 samples, 0.04%)</title><rect x="715.4" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (113 samples, 0.04%)</title><rect x="715.4" y="755.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="718.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (766 samples, 0.29%)</title><rect x="715.9" y="787.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1724186899.run (372 samples, 0.14%)</title><rect x="715.9" y="771.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (372 samples, 0.14%)</title><rect x="715.9" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (372 samples, 0.14%)</title><rect x="715.9" y="739.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (372 samples, 0.14%)</title><rect x="715.9" y="723.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (372 samples, 0.14%)</title><rect x="715.9" y="707.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (372 samples, 0.14%)</title><rect x="715.9" y="691.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$248/1048299497.run (372 samples, 0.14%)</title><rect x="715.9" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (372 samples, 0.14%)</title><rect x="715.9" y="659.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (372 samples, 0.14%)</title><rect x="715.9" y="643.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (372 samples, 0.14%)</title><rect x="715.9" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (281 samples, 0.11%)</title><rect x="715.9" y="611.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (281 samples, 0.11%)</title><rect x="715.9" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (281 samples, 0.11%)</title><rect x="715.9" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (203 samples, 0.08%)</title><rect x="715.9" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (203 samples, 0.08%)</title><rect x="715.9" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (203 samples, 0.08%)</title><rect x="715.9" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (203 samples, 0.08%)</title><rect x="715.9" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (203 samples, 0.08%)</title><rect x="715.9" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.9" y="510.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.08%)</title><rect x="715.9" y="483.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="718.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (78 samples, 0.03%)</title><rect x="716.8" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.03%)</title><rect x="716.8" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.03%)</title><rect x="716.8" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412/1147867721.get$Lambda (78 samples, 0.03%)</title><rect x="716.8" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$412 (78 samples, 0.03%)</title><rect x="716.8" y="499.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="719.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (91 samples, 0.03%)</title><rect x="717.2" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.03%)</title><rect x="717.2" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.03%)</title><rect x="717.2" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (91 samples, 0.03%)</title><rect x="717.2" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (91 samples, 0.03%)</title><rect x="717.2" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (91 samples, 0.03%)</title><rect x="717.2" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (90 samples, 0.03%)</title><rect x="717.2" y="515.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="720.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$270/68138278.run (394 samples, 0.15%)</title><rect x="717.6" y="771.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (394 samples, 0.15%)</title><rect x="717.6" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (163 samples, 0.06%)</title><rect x="717.6" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.06%)</title><rect x="717.6" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1264075969.get$Lambda (163 samples, 0.06%)</title><rect x="717.6" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.6" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$401 (163 samples, 0.06%)</title><rect x="717.6" y="691.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="720.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (231 samples, 0.09%)</title><rect x="718.3" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (231 samples, 0.09%)</title><rect x="718.3" y="723.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (231 samples, 0.09%)</title><rect x="718.3" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (231 samples, 0.09%)</title><rect x="718.3" y="691.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="721.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (540 samples, 0.20%)</title><rect x="719.3" y="787.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (127 samples, 0.05%)</title><rect x="719.3" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.3" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (127 samples, 0.05%)</title><rect x="719.3" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (127 samples, 0.05%)</title><rect x="719.3" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (127 samples, 0.05%)</title><rect x="719.3" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.3" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (127 samples, 0.05%)</title><rect x="719.3" y="707.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="722.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (413 samples, 0.16%)</title><rect x="719.9" y="771.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.04%)</title><rect x="719.9" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.04%)</title><rect x="719.9" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$518/2020318188.get$Lambda (96 samples, 0.04%)</title><rect x="719.9" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.9" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$518 (96 samples, 0.04%)</title><rect x="719.9" y="707.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="722.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (317 samples, 0.12%)</title><rect x="720.3" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.3" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (142 samples, 0.05%)</title><rect x="720.3" y="739.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="723.3" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (175 samples, 0.07%)</title><rect x="721.0" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (175 samples, 0.07%)</title><rect x="721.0" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.0" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (175 samples, 0.07%)</title><rect x="721.0" y="707.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (820 samples, 0.31%)</title><rect x="721.7" y="787.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.03%)</title><rect x="721.7" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.03%)</title><rect x="721.7" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$382/206654322.get$Lambda (71 samples, 0.03%)</title><rect x="721.7" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.7" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$382 (71 samples, 0.03%)</title><rect x="721.7" y="723.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="724.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (456 samples, 0.17%)</title><rect x="722.0" y="771.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (198 samples, 0.07%)</title><rect x="722.0" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (198 samples, 0.07%)</title><rect x="722.0" y="739.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="725.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (258 samples, 0.10%)</title><rect x="722.9" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.9" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (258 samples, 0.10%)</title><rect x="722.9" y="739.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="725.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (293 samples, 0.11%)</title><rect x="724.1" y="771.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (293 samples, 0.11%)</title><rect x="724.1" y="755.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="727.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (256 samples, 0.10%)</title><rect x="725.4" y="787.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (256 samples, 0.10%)</title><rect x="725.4" y="771.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (256 samples, 0.10%)</title><rect x="725.4" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (256 samples, 0.10%)</title><rect x="725.4" y="739.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (95 samples, 0.04%)</title><rect x="725.4" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (95 samples, 0.04%)</title><rect x="725.4" y="707.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="728.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (161 samples, 0.06%)</title><rect x="725.8" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (161 samples, 0.06%)</title><rect x="725.8" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (161 samples, 0.06%)</title><rect x="725.8" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (161 samples, 0.06%)</title><rect x="725.8" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (161 samples, 0.06%)</title><rect x="725.8" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.8" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (161 samples, 0.06%)</title><rect x="725.8" y="643.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="728.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (117 samples, 0.04%)</title><rect x="726.5" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (117 samples, 0.04%)</title><rect x="726.5" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (117 samples, 0.04%)</title><rect x="726.5" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (117 samples, 0.04%)</title><rect x="726.5" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (93 samples, 0.03%)</title><rect x="726.5" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (93 samples, 0.03%)</title><rect x="726.5" y="707.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="729.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (79 samples, 0.03%)</title><rect x="727.0" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (79 samples, 0.03%)</title><rect x="727.0" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (79 samples, 0.03%)</title><rect x="727.0" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (79 samples, 0.03%)</title><rect x="727.0" y="739.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="730.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (104,262 samples, 39.21%)</title><rect x="727.4" y="803.0" width="462.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.4" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,328 samples, 0.88%)</title><rect x="727.4" y="787.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.4" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,328 samples, 0.88%)</title><rect x="727.4" y="771.0" width="10.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="730.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (101,934 samples, 38.33%)</title><rect x="737.7" y="787.0" width="452.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.7" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (101,934 samples, 38.33%)</title><rect x="737.7" y="771.0" width="452.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.7" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (101,934 samples, 38.33%)</title><rect x="737.7" y="755.0" width="452.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.7" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (72,063 samples, 27.10%)</title><rect x="737.7" y="739.0" width="319.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.7" y="750.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (72,063 samples, 27.10%)</title><rect x="737.7" y="723.0" width="319.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.7" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (70,308 samples, 26.44%)</title><rect x="737.7" y="707.0" width="312.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.7" y="718.0">RequestHandler3_upsert.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,734 samples, 0.65%)</title><rect x="737.7" y="691.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,734 samples, 0.65%)</title><rect x="737.7" y="675.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,734 samples, 0.65%)</title><rect x="737.7" y="659.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,734 samples, 0.65%)</title><rect x="737.7" y="643.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (778 samples, 0.29%)</title><rect x="737.7" y="627.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="740.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (956 samples, 0.36%)</title><rect x="741.2" y="627.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="638.0"></text>
</g>
<g>
<title>byte[] (956 samples, 0.36%)</title><rect x="741.2" y="611.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="744.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (68,574 samples, 25.79%)</title><rect x="745.4" y="691.0" width="304.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.4" y="702.0">ru/mail/polis/service/zvladn7/AsyncServic..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (791 samples, 0.30%)</title><rect x="745.4" y="675.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (791 samples, 0.30%)</title><rect x="745.4" y="659.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$140/1562537078.get$Lambda (791 samples, 0.30%)</title><rect x="745.4" y="643.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$140 (791 samples, 0.30%)</title><rect x="745.4" y="627.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="748.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (67,783 samples, 25.49%)</title><rect x="748.9" y="675.0" width="300.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.9" y="686.0">ru/mail/polis/service/zvladn7/AsyncServi..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$140/1562537078.process (65,094 samples, 24.48%)</title><rect x="748.9" y="659.0" width="288.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.9" y="670.0">ru/mail/polis/service/zvladn7/AsyncServ..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (65,094 samples, 24.48%)</title><rect x="748.9" y="643.0" width="288.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.9" y="654.0">ru/mail/polis/service/zvladn7/AsyncServ..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (65,094 samples, 24.48%)</title><rect x="748.9" y="627.0" width="288.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.9" y="638.0">ru/mail/polis/service/zvladn7/ServiceHe..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy (62,451 samples, 23.48%)</title><rect x="748.9" y="611.0" width="277.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.9" y="622.0">ru/mail/polis/service/zvladn7/Service..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (506 samples, 0.19%)</title><rect x="748.9" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (506 samples, 0.19%)</title><rect x="748.9" y="579.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$161/1989281955.get$Lambda (64 samples, 0.02%)</title><rect x="748.9" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.9" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$161 (64 samples, 0.02%)</title><rect x="748.9" y="547.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="751.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$457/821899123.get$Lambda (442 samples, 0.17%)</title><rect x="749.2" y="563.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$457 (442 samples, 0.17%)</title><rect x="749.2" y="547.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="752.2" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (13,410 samples, 5.04%)</title><rect x="751.2" y="595.0" width="59.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.2" y="606.0">java/u..</text>
</g>
<g>
<title>java.lang.StringBuilder (870 samples, 0.33%)</title><rect x="751.2" y="579.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="754.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,092 samples, 0.41%)</title><rect x="755.0" y="579.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,092 samples, 0.41%)</title><rect x="755.0" y="563.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.0" y="574.0"></text>
</g>
<g>
<title>byte[] (1,092 samples, 0.41%)</title><rect x="755.0" y="547.0" width="4.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="758.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5,226 samples, 1.97%)</title><rect x="759.9" y="579.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.9" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (5,226 samples, 1.97%)</title><rect x="759.9" y="563.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.9" y="574.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5,226 samples, 1.97%)</title><rect x="759.9" y="547.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.9" y="558.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5,226 samples, 1.97%)</title><rect x="759.9" y="531.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (5,226 samples, 1.97%)</title><rect x="759.9" y="515.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.9" y="526.0">j..</text>
</g>
<g>
<title>byte[] (4,558 samples, 1.71%)</title><rect x="759.9" y="499.0" width="20.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="762.9" y="510.0"></text>
</g>
<g>
<title>byte[] (668 samples, 0.25%)</title><rect x="780.1" y="499.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,496 samples, 1.69%)</title><rect x="783.0" y="579.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,496 samples, 1.69%)</title><rect x="783.0" y="563.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (869 samples, 0.33%)</title><rect x="783.0" y="547.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="786.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,627 samples, 1.36%)</title><rect x="786.9" y="547.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.9" y="558.0"></text>
</g>
<g>
<title>byte[] (3,567 samples, 1.34%)</title><rect x="786.9" y="531.0" width="15.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="789.9" y="542.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.02%)</title><rect x="802.7" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,726 samples, 0.65%)</title><rect x="803.0" y="579.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,282 samples, 0.48%)</title><rect x="803.0" y="563.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,282 samples, 0.48%)</title><rect x="803.0" y="547.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="806.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (444 samples, 0.17%)</title><rect x="808.7" y="563.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (444 samples, 0.17%)</title><rect x="808.7" y="547.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="811.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1,962 samples, 0.74%)</title><rect x="810.7" y="595.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,962 samples, 0.74%)</title><rect x="810.7" y="579.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1,113 samples, 0.42%)</title><rect x="810.7" y="563.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="813.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (838 samples, 0.32%)</title><rect x="815.6" y="563.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (838 samples, 0.32%)</title><rect x="815.6" y="547.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="818.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,802 samples, 0.68%)</title><rect x="819.4" y="595.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,802 samples, 0.68%)</title><rect x="819.4" y="579.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,802 samples, 0.68%)</title><rect x="819.4" y="563.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (677 samples, 0.25%)</title><rect x="819.4" y="547.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="822.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,125 samples, 0.42%)</title><rect x="822.4" y="547.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.4" y="558.0"></text>
</g>
<g>
<title>byte[] (1,125 samples, 0.42%)</title><rect x="822.4" y="531.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="825.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$146/705152323.execute (2,615 samples, 0.98%)</title><rect x="827.4" y="595.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$9 (2,615 samples, 0.98%)</title><rect x="827.4" y="579.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localUpsert (2,615 samples, 0.98%)</title><rect x="827.4" y="563.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,009 samples, 0.38%)</title><rect x="827.4" y="547.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,009 samples, 0.38%)</title><rect x="827.4" y="531.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$154/526299918.get$Lambda (1,009 samples, 0.38%)</title><rect x="827.4" y="515.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.4" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$154 (1,009 samples, 0.38%)</title><rect x="827.4" y="499.0" width="4.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="830.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,606 samples, 0.60%)</title><rect x="831.8" y="547.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,606 samples, 0.60%)</title><rect x="831.8" y="531.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (787 samples, 0.30%)</title><rect x="831.8" y="515.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="834.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (790 samples, 0.30%)</title><rect x="835.3" y="515.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="838.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$153/780005617.resolve (1,766 samples, 0.66%)</title><rect x="839.0" y="595.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveChange (1,766 samples, 0.66%)</title><rect x="839.0" y="579.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (239 samples, 0.09%)</title><rect x="839.0" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (239 samples, 0.09%)</title><rect x="839.0" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (170 samples, 0.06%)</title><rect x="839.0" y="531.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="842.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (69 samples, 0.03%)</title><rect x="839.7" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (69 samples, 0.03%)</title><rect x="839.7" y="515.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="842.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (1,527 samples, 0.57%)</title><rect x="840.0" y="563.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (87 samples, 0.03%)</title><rect x="840.0" y="547.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="843.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (76 samples, 0.03%)</title><rect x="840.4" y="547.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="843.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (122 samples, 0.05%)</title><rect x="840.7" y="547.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="843.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,115 samples, 0.42%)</title><rect x="841.3" y="547.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$204/334543574.accept (1,115 samples, 0.42%)</title><rect x="841.3" y="531.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (1,115 samples, 0.42%)</title><rect x="841.3" y="515.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (362 samples, 0.14%)</title><rect x="841.3" y="499.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (362 samples, 0.14%)</title><rect x="841.3" y="483.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$206/1683001005.get$Lambda (362 samples, 0.14%)</title><rect x="841.3" y="467.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.3" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ConflictResolver$$Lambda$206 (362 samples, 0.14%)</title><rect x="841.3" y="451.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="844.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (753 samples, 0.28%)</title><rect x="842.9" y="499.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (753 samples, 0.28%)</title><rect x="842.9" y="483.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (395 samples, 0.15%)</title><rect x="842.9" y="467.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="845.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (92 samples, 0.03%)</title><rect x="844.6" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (92 samples, 0.03%)</title><rect x="844.6" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="847.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (232 samples, 0.09%)</title><rect x="845.2" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (232 samples, 0.09%)</title><rect x="845.2" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (232 samples, 0.09%)</title><rect x="845.2" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="848.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (127 samples, 0.05%)</title><rect x="846.2" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (69 samples, 0.03%)</title><rect x="846.2" y="531.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="849.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object (58 samples, 0.02%)</title><rect x="846.5" y="531.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="849.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (27,938 samples, 10.51%)</title><rect x="846.8" y="595.0" width="124.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.8" y="606.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java.util.ArrayList (78 samples, 0.03%)</title><rect x="846.8" y="579.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="849.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (27,754 samples, 10.44%)</title><rect x="847.1" y="579.0" width="123.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.1" y="590.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/HashSet.iterator (129 samples, 0.05%)</title><rect x="847.1" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (129 samples, 0.05%)</title><rect x="847.1" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (129 samples, 0.05%)</title><rect x="847.1" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="850.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$164/1671372122.accept (27,625 samples, 10.39%)</title><rect x="847.7" y="563.0" width="122.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.7" y="574.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (27,625 samples, 10.39%)</title><rect x="847.7" y="547.0" width="122.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.7" y="558.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/util/ArrayList.add (200 samples, 0.08%)</title><rect x="847.7" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (200 samples, 0.08%)</title><rect x="847.7" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (200 samples, 0.08%)</title><rect x="847.7" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (200 samples, 0.08%)</title><rect x="847.7" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (200 samples, 0.08%)</title><rect x="847.7" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (200 samples, 0.08%)</title><rect x="847.7" y="451.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="850.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (529 samples, 0.20%)</title><rect x="848.6" y="531.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (529 samples, 0.20%)</title><rect x="848.6" y="515.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (279 samples, 0.10%)</title><rect x="848.6" y="499.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="851.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (250 samples, 0.09%)</title><rect x="849.8" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (250 samples, 0.09%)</title><rect x="849.8" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (250 samples, 0.09%)</title><rect x="849.8" y="467.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="852.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (15,771 samples, 5.93%)</title><rect x="850.9" y="531.0" width="70.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.9" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (15,771 samples, 5.93%)</title><rect x="850.9" y="515.0" width="70.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.9" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (15,771 samples, 5.93%)</title><rect x="850.9" y="499.0" width="70.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.9" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (15,771 samples, 5.93%)</title><rect x="850.9" y="483.0" width="70.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.9" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.06%)</title><rect x="850.9" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.06%)</title><rect x="850.9" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$197/1228664428.get$Lambda (159 samples, 0.06%)</title><rect x="850.9" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$197 (159 samples, 0.06%)</title><rect x="850.9" y="419.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="853.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (554 samples, 0.21%)</title><rect x="851.7" y="467.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (554 samples, 0.21%)</title><rect x="851.7" y="451.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (305 samples, 0.11%)</title><rect x="851.7" y="435.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="854.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (249 samples, 0.09%)</title><rect x="853.0" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (249 samples, 0.09%)</title><rect x="853.0" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (249 samples, 0.09%)</title><rect x="853.0" y="403.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="856.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (542 samples, 0.20%)</title><rect x="854.1" y="467.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (542 samples, 0.20%)</title><rect x="854.1" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (292 samples, 0.11%)</title><rect x="854.1" y="435.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="857.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (250 samples, 0.09%)</title><rect x="855.4" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (250 samples, 0.09%)</title><rect x="855.4" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="858.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (250 samples, 0.09%)</title><rect x="855.4" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="858.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (396 samples, 0.15%)</title><rect x="856.5" y="467.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="859.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (632 samples, 0.24%)</title><rect x="858.3" y="467.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="861.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7,566 samples, 2.85%)</title><rect x="861.2" y="467.0" width="33.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.2" y="478.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (860 samples, 0.32%)</title><rect x="861.2" y="451.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (672 samples, 0.25%)</title><rect x="861.2" y="435.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (229 samples, 0.09%)</title><rect x="861.2" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.2" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (229 samples, 0.09%)</title><rect x="861.2" y="403.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="864.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (443 samples, 0.17%)</title><rect x="862.2" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (443 samples, 0.17%)</title><rect x="862.2" y="403.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="865.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (188 samples, 0.07%)</title><rect x="864.2" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (188 samples, 0.07%)</title><rect x="864.2" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (188 samples, 0.07%)</title><rect x="864.2" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (188 samples, 0.07%)</title><rect x="864.2" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.2" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (188 samples, 0.07%)</title><rect x="864.2" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="867.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,911 samples, 1.09%)</title><rect x="865.0" y="451.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,911 samples, 1.09%)</title><rect x="865.0" y="435.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (120 samples, 0.05%)</title><rect x="865.0" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="868.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (171 samples, 0.06%)</title><rect x="865.5" y="419.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="868.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (316 samples, 0.12%)</title><rect x="866.3" y="419.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="869.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (90 samples, 0.03%)</title><rect x="867.7" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="870.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (239 samples, 0.09%)</title><rect x="868.1" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (239 samples, 0.09%)</title><rect x="868.1" y="403.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (239 samples, 0.09%)</title><rect x="868.1" y="387.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (239 samples, 0.09%)</title><rect x="868.1" y="371.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="871.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,367 samples, 0.51%)</title><rect x="869.2" y="419.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,367 samples, 0.51%)</title><rect x="869.2" y="403.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (1,367 samples, 0.51%)</title><rect x="869.2" y="387.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,367 samples, 0.51%)</title><rect x="869.2" y="371.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (698 samples, 0.26%)</title><rect x="869.2" y="355.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (443 samples, 0.17%)</title><rect x="869.2" y="339.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.2" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (443 samples, 0.17%)</title><rect x="869.2" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (443 samples, 0.17%)</title><rect x="869.2" y="307.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (443 samples, 0.17%)</title><rect x="869.2" y="291.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (443 samples, 0.17%)</title><rect x="869.2" y="275.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (443 samples, 0.17%)</title><rect x="869.2" y="259.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (443 samples, 0.17%)</title><rect x="869.2" y="243.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (443 samples, 0.17%)</title><rect x="869.2" y="227.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="872.2" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (255 samples, 0.10%)</title><rect x="871.1" y="339.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.1" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (255 samples, 0.10%)</title><rect x="871.1" y="323.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="874.1" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (349 samples, 0.13%)</title><rect x="872.3" y="355.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (349 samples, 0.13%)</title><rect x="872.3" y="339.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (194 samples, 0.07%)</title><rect x="872.3" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (194 samples, 0.07%)</title><rect x="872.3" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (194 samples, 0.07%)</title><rect x="872.3" y="291.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="875.3" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (155 samples, 0.06%)</title><rect x="873.1" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.1" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (155 samples, 0.06%)</title><rect x="873.1" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="876.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (320 samples, 0.12%)</title><rect x="873.8" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (320 samples, 0.12%)</title><rect x="873.8" y="339.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="876.8" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (258 samples, 0.10%)</title><rect x="875.2" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.2" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (258 samples, 0.10%)</title><rect x="875.2" y="403.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="878.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (350 samples, 0.13%)</title><rect x="876.4" y="419.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (350 samples, 0.13%)</title><rect x="876.4" y="403.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="879.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (113 samples, 0.04%)</title><rect x="877.9" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="880.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,668 samples, 1.00%)</title><rect x="878.4" y="451.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.4" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,668 samples, 1.00%)</title><rect x="878.4" y="435.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.4" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,468 samples, 0.93%)</title><rect x="878.4" y="419.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.4" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2,468 samples, 0.93%)</title><rect x="878.4" y="403.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.4" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,468 samples, 0.93%)</title><rect x="878.4" y="387.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.4" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,468 samples, 0.93%)</title><rect x="878.4" y="371.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.4" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (538 samples, 0.20%)</title><rect x="878.4" y="355.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="881.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (670 samples, 0.25%)</title><rect x="880.8" y="355.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (670 samples, 0.25%)</title><rect x="880.8" y="339.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.8" y="350.0"></text>
</g>
<g>
<title>byte[] (670 samples, 0.25%)</title><rect x="880.8" y="323.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="883.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,260 samples, 0.47%)</title><rect x="883.8" y="355.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,260 samples, 0.47%)</title><rect x="883.8" y="339.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (535 samples, 0.20%)</title><rect x="883.8" y="323.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="886.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (725 samples, 0.27%)</title><rect x="886.2" y="323.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.2" y="334.0"></text>
</g>
<g>
<title>byte[] (725 samples, 0.27%)</title><rect x="886.2" y="307.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="889.2" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (200 samples, 0.08%)</title><rect x="889.4" y="419.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="892.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (348 samples, 0.13%)</title><rect x="890.3" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (348 samples, 0.13%)</title><rect x="890.3" y="435.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="893.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (666 samples, 0.25%)</title><rect x="891.8" y="451.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (186 samples, 0.07%)</title><rect x="891.8" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="894.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (188 samples, 0.07%)</title><rect x="892.6" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (188 samples, 0.07%)</title><rect x="892.6" y="419.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="895.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (292 samples, 0.11%)</title><rect x="893.5" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (292 samples, 0.11%)</title><rect x="893.5" y="419.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="896.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (4,015 samples, 1.51%)</title><rect x="894.8" y="467.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (110 samples, 0.04%)</title><rect x="894.8" y="451.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="897.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (587 samples, 0.22%)</title><rect x="895.3" y="451.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="898.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (138 samples, 0.05%)</title><rect x="897.9" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (138 samples, 0.05%)</title><rect x="897.9" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="900.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3,179 samples, 1.20%)</title><rect x="898.5" y="451.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3,179 samples, 1.20%)</title><rect x="898.5" y="435.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (239 samples, 0.09%)</title><rect x="898.5" y="419.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="901.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (266 samples, 0.10%)</title><rect x="899.5" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="902.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (212 samples, 0.08%)</title><rect x="900.7" y="419.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="903.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,171 samples, 0.44%)</title><rect x="901.7" y="419.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,171 samples, 0.44%)</title><rect x="901.7" y="403.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,171 samples, 0.44%)</title><rect x="901.7" y="387.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,171 samples, 0.44%)</title><rect x="901.7" y="371.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.7" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,155 samples, 0.43%)</title><rect x="901.7" y="355.0" width="5.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="904.7" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (931 samples, 0.35%)</title><rect x="906.9" y="419.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (931 samples, 0.35%)</title><rect x="906.9" y="403.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (511 samples, 0.19%)</title><rect x="906.9" y="387.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (511 samples, 0.19%)</title><rect x="906.9" y="371.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (511 samples, 0.19%)</title><rect x="906.9" y="355.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.9" y="366.0"></text>
</g>
<g>
<title>java.lang.ref.WeakReference (511 samples, 0.19%)</title><rect x="906.9" y="339.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="909.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (420 samples, 0.16%)</title><rect x="909.1" y="387.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (299 samples, 0.11%)</title><rect x="909.1" y="371.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (299 samples, 0.11%)</title><rect x="909.1" y="355.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="912.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor12.newInstance (121 samples, 0.05%)</title><rect x="910.5" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (121 samples, 0.05%)</title><rect x="910.5" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="913.5" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (360 samples, 0.14%)</title><rect x="911.0" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (360 samples, 0.14%)</title><rect x="911.0" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.0" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (360 samples, 0.14%)</title><rect x="911.0" y="387.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="914.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,880 samples, 0.71%)</title><rect x="912.6" y="467.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (361 samples, 0.14%)</title><rect x="912.6" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (179 samples, 0.07%)</title><rect x="912.6" y="435.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="915.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (182 samples, 0.07%)</title><rect x="913.4" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (182 samples, 0.07%)</title><rect x="913.4" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (175 samples, 0.07%)</title><rect x="913.4" y="403.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="916.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (254 samples, 0.10%)</title><rect x="914.2" y="451.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="917.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,265 samples, 0.48%)</title><rect x="915.3" y="451.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (256 samples, 0.10%)</title><rect x="915.3" y="435.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.10%)</title><rect x="915.3" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$187/600703998.get$Lambda (113 samples, 0.04%)</title><rect x="915.3" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$187 (113 samples, 0.04%)</title><rect x="915.3" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1566642975.get$Lambda (143 samples, 0.05%)</title><rect x="915.8" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$191 (143 samples, 0.05%)</title><rect x="915.8" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,009 samples, 0.38%)</title><rect x="916.4" y="435.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,009 samples, 0.38%)</title><rect x="916.4" y="419.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (609 samples, 0.23%)</title><rect x="916.4" y="403.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="919.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (400 samples, 0.15%)</title><rect x="919.2" y="403.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (400 samples, 0.15%)</title><rect x="919.2" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (400 samples, 0.15%)</title><rect x="919.2" y="371.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="922.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$161/1989281955.apply (11,125 samples, 4.18%)</title><rect x="920.9" y="531.0" width="49.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.9" y="542.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$12 (11,125 samples, 4.18%)</title><rect x="920.9" y="515.0" width="49.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.9" y="526.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3,041 samples, 1.14%)</title><rect x="920.9" y="499.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (280 samples, 0.11%)</title><rect x="920.9" y="483.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="923.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,761 samples, 1.04%)</title><rect x="922.2" y="483.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,514 samples, 0.95%)</title><rect x="922.2" y="467.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,514 samples, 0.95%)</title><rect x="922.2" y="451.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="925.2" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (101 samples, 0.04%)</title><rect x="922.2" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="925.2" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (188 samples, 0.07%)</title><rect x="922.6" y="435.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="925.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (367 samples, 0.14%)</title><rect x="923.5" y="435.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="926.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (105 samples, 0.04%)</title><rect x="925.1" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="928.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (219 samples, 0.08%)</title><rect x="925.5" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (219 samples, 0.08%)</title><rect x="925.5" y="419.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.get$Lambda (219 samples, 0.08%)</title><rect x="925.5" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$173 (219 samples, 0.08%)</title><rect x="925.5" y="387.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="928.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (203 samples, 0.08%)</title><rect x="926.5" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.5" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (203 samples, 0.08%)</title><rect x="926.5" y="419.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="929.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,000 samples, 0.38%)</title><rect x="927.4" y="435.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$173/1299557659.accept (1,000 samples, 0.38%)</title><rect x="927.4" y="419.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,000 samples, 0.38%)</title><rect x="927.4" y="403.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (354 samples, 0.13%)</title><rect x="927.4" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$174/1078073844.accept (354 samples, 0.13%)</title><rect x="927.4" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (354 samples, 0.13%)</title><rect x="927.4" y="355.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (354 samples, 0.13%)</title><rect x="927.4" y="339.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (354 samples, 0.13%)</title><rect x="927.4" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (354 samples, 0.13%)</title><rect x="927.4" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (354 samples, 0.13%)</title><rect x="927.4" y="291.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (354 samples, 0.13%)</title><rect x="927.4" y="275.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (354 samples, 0.13%)</title><rect x="927.4" y="259.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="930.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (341 samples, 0.13%)</title><rect x="929.0" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (341 samples, 0.13%)</title><rect x="929.0" y="371.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (166 samples, 0.06%)</title><rect x="929.0" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (166 samples, 0.06%)</title><rect x="929.0" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (166 samples, 0.06%)</title><rect x="929.0" y="323.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="932.0" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (175 samples, 0.07%)</title><rect x="929.7" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.7" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (175 samples, 0.07%)</title><rect x="929.7" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="932.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (305 samples, 0.11%)</title><rect x="930.5" y="387.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (305 samples, 0.11%)</title><rect x="930.5" y="371.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="933.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (331 samples, 0.12%)</title><rect x="931.9" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (331 samples, 0.12%)</title><rect x="931.9" y="419.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="934.9" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (247 samples, 0.09%)</title><rect x="933.3" y="467.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.3" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (247 samples, 0.09%)</title><rect x="933.3" y="451.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.3" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (247 samples, 0.09%)</title><rect x="933.3" y="435.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="936.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (364 samples, 0.14%)</title><rect x="934.4" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (364 samples, 0.14%)</title><rect x="934.4" y="483.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (364 samples, 0.14%)</title><rect x="934.4" y="467.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (161 samples, 0.06%)</title><rect x="934.4" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="937.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (203 samples, 0.08%)</title><rect x="935.1" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.1" y="462.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.08%)</title><rect x="935.1" y="435.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="938.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getBodyPublisher (202 samples, 0.08%)</title><rect x="936.0" y="499.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (202 samples, 0.08%)</title><rect x="936.0" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (202 samples, 0.08%)</title><rect x="936.0" y="467.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="939.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.requestBuilderFor (7,518 samples, 2.83%)</title><rect x="936.9" y="499.0" width="33.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.9" y="510.0">ru..</text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (490 samples, 0.18%)</title><rect x="936.9" y="483.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (490 samples, 0.18%)</title><rect x="936.9" y="467.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (107 samples, 0.04%)</title><rect x="936.9" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="939.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (383 samples, 0.14%)</title><rect x="937.4" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (383 samples, 0.14%)</title><rect x="937.4" y="435.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="940.4" y="446.0"></text>
</g>
<g>
<title>java/time/Duration.dividedBy (3,107 samples, 1.17%)</title><rect x="939.1" y="483.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.1" y="494.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (306 samples, 0.12%)</title><rect x="939.1" y="467.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.1" y="478.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (306 samples, 0.12%)</title><rect x="939.1" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.1" y="462.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (306 samples, 0.12%)</title><rect x="939.1" y="435.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.1" y="446.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divideAndRound (306 samples, 0.12%)</title><rect x="939.1" y="419.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.1" y="430.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (306 samples, 0.12%)</title><rect x="939.1" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.1" y="414.0"></text>
</g>
<g>
<title>java.math.BigDecimal (306 samples, 0.12%)</title><rect x="939.1" y="387.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="942.1" y="398.0"></text>
</g>
<g>
<title>java/time/Duration.create (2,217 samples, 0.83%)</title><rect x="940.5" y="467.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.5" y="478.0"></text>
</g>
<g>
<title>java/math/BigDecimal.movePointRight (289 samples, 0.11%)</title><rect x="940.5" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.5" y="462.0"></text>
</g>
<g>
<title>java.math.BigDecimal (289 samples, 0.11%)</title><rect x="940.5" y="435.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="943.5" y="446.0"></text>
</g>
<g>
<title>java/math/BigDecimal.toBigIntegerExact (478 samples, 0.18%)</title><rect x="941.7" y="451.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.7" y="462.0"></text>
</g>
<g>
<title>java/math/BigDecimal.inflated (478 samples, 0.18%)</title><rect x="941.7" y="435.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.7" y="446.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (478 samples, 0.18%)</title><rect x="941.7" y="419.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.7" y="430.0"></text>
</g>
<g>
<title>java.math.BigInteger (301 samples, 0.11%)</title><rect x="941.7" y="403.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="944.7" y="414.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (177 samples, 0.07%)</title><rect x="943.1" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.1" y="414.0"></text>
</g>
<g>
<title>int[] (177 samples, 0.07%)</title><rect x="943.1" y="387.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="946.1" y="398.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainder (1,276 samples, 0.48%)</title><rect x="943.9" y="451.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.9" y="462.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainderKnuth (1,276 samples, 0.48%)</title><rect x="943.9" y="435.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.9" y="446.0"></text>
</g>
<g>
<title>java.math.MutableBigInteger (492 samples, 0.19%)</title><rect x="943.9" y="419.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="946.9" y="430.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (174 samples, 0.07%)</title><rect x="946.0" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.0" y="430.0"></text>
</g>
<g>
<title>int[] (174 samples, 0.07%)</title><rect x="946.0" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="949.0" y="414.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (349 samples, 0.13%)</title><rect x="946.8" y="419.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.8" y="430.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (349 samples, 0.13%)</title><rect x="946.8" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.8" y="414.0"></text>
</g>
<g>
<title>java.math.MutableBigInteger (185 samples, 0.07%)</title><rect x="946.8" y="387.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="949.8" y="398.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (164 samples, 0.06%)</title><rect x="947.6" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (164 samples, 0.06%)</title><rect x="947.6" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.6" y="382.0"></text>
</g>
<g>
<title>int[] (164 samples, 0.06%)</title><rect x="947.6" y="355.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="950.6" y="366.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.toBigInteger (261 samples, 0.10%)</title><rect x="948.4" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.4" y="430.0"></text>
</g>
<g>
<title>java.math.BigInteger (261 samples, 0.10%)</title><rect x="948.4" y="403.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="951.4" y="414.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (174 samples, 0.07%)</title><rect x="949.5" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.5" y="462.0"></text>
</g>
<g>
<title>java/time/Duration.create (174 samples, 0.07%)</title><rect x="949.5" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.5" y="446.0"></text>
</g>
<g>
<title>java.time.Duration (174 samples, 0.07%)</title><rect x="949.5" y="419.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="952.5" y="430.0"></text>
</g>
<g>
<title>java/time/Duration.toBigDecimalSeconds (584 samples, 0.22%)</title><rect x="950.3" y="467.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.3" y="478.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (304 samples, 0.11%)</title><rect x="950.3" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.3" y="462.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (304 samples, 0.11%)</title><rect x="950.3" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.3" y="446.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (304 samples, 0.11%)</title><rect x="950.3" y="419.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.3" y="430.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (304 samples, 0.11%)</title><rect x="950.3" y="403.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.3" y="414.0"></text>
</g>
<g>
<title>java.math.BigDecimal (304 samples, 0.11%)</title><rect x="950.3" y="387.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="953.3" y="398.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (280 samples, 0.11%)</title><rect x="951.6" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.6" y="462.0"></text>
</g>
<g>
<title>java.math.BigDecimal (280 samples, 0.11%)</title><rect x="951.6" y="435.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="954.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (634 samples, 0.24%)</title><rect x="952.9" y="483.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (634 samples, 0.24%)</title><rect x="952.9" y="467.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (634 samples, 0.24%)</title><rect x="952.9" y="451.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.9" y="462.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (634 samples, 0.24%)</title><rect x="952.9" y="435.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (287 samples, 0.11%)</title><rect x="952.9" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (287 samples, 0.11%)</title><rect x="952.9" y="403.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="955.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$170/1349688640.apply (347 samples, 0.13%)</title><rect x="954.2" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (347 samples, 0.13%)</title><rect x="954.2" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.2" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (172 samples, 0.06%)</title><rect x="954.2" y="387.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="957.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (175 samples, 0.07%)</title><rect x="954.9" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (175 samples, 0.07%)</title><rect x="954.9" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="957.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.provideURI (3,287 samples, 1.24%)</title><rect x="955.7" y="483.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.7" y="494.0"></text>
</g>
<g>
<title>java.net.URI (566 samples, 0.21%)</title><rect x="955.7" y="467.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="958.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (629 samples, 0.24%)</title><rect x="958.3" y="467.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (629 samples, 0.24%)</title><rect x="958.3" y="451.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (629 samples, 0.24%)</title><rect x="958.3" y="435.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (184 samples, 0.07%)</title><rect x="958.3" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (184 samples, 0.07%)</title><rect x="958.3" y="403.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="961.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (445 samples, 0.17%)</title><rect x="959.1" y="419.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (445 samples, 0.17%)</title><rect x="959.1" y="403.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.1" y="414.0"></text>
</g>
<g>
<title>byte[] (444 samples, 0.17%)</title><rect x="959.1" y="387.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="962.1" y="398.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2,083 samples, 0.78%)</title><rect x="961.0" y="467.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.0" y="478.0"></text>
</g>
<g>
<title>java.net.URI$Parser (222 samples, 0.08%)</title><rect x="961.0" y="451.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="964.0" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,861 samples, 0.70%)</title><rect x="962.0" y="451.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (285 samples, 0.11%)</title><rect x="962.0" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (285 samples, 0.11%)</title><rect x="962.0" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.05%)</title><rect x="962.0" y="403.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="965.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (145 samples, 0.05%)</title><rect x="962.7" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.7" y="414.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.05%)</title><rect x="962.7" y="387.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="965.7" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,576 samples, 0.59%)</title><rect x="963.3" y="435.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (759 samples, 0.29%)</title><rect x="963.3" y="419.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (759 samples, 0.29%)</title><rect x="963.3" y="403.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (335 samples, 0.13%)</title><rect x="963.3" y="387.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="966.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (424 samples, 0.16%)</title><rect x="964.8" y="387.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.8" y="398.0"></text>
</g>
<g>
<title>byte[] (424 samples, 0.16%)</title><rect x="964.8" y="371.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="967.8" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (817 samples, 0.31%)</title><rect x="966.7" y="419.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (405 samples, 0.15%)</title><rect x="966.7" y="403.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (405 samples, 0.15%)</title><rect x="966.7" y="387.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (177 samples, 0.07%)</title><rect x="966.7" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="969.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (228 samples, 0.09%)</title><rect x="967.4" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.4" y="382.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.09%)</title><rect x="967.4" y="355.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="970.4" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (412 samples, 0.15%)</title><rect x="968.5" y="403.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (412 samples, 0.15%)</title><rect x="968.5" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (412 samples, 0.15%)</title><rect x="968.5" y="371.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (412 samples, 0.15%)</title><rect x="968.5" y="355.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (174 samples, 0.07%)</title><rect x="968.5" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="971.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (238 samples, 0.09%)</title><rect x="969.2" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.2" y="350.0"></text>
</g>
<g>
<title>byte[] (238 samples, 0.09%)</title><rect x="969.2" y="323.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="972.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.04%)</title><rect x="970.3" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.04%)</title><rect x="970.3" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$164/1671372122.get$Lambda (106 samples, 0.04%)</title><rect x="970.3" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$164 (106 samples, 0.04%)</title><rect x="970.3" y="531.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="973.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.nodesForKey (12,452 samples, 4.68%)</title><rect x="970.8" y="595.0" width="55.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.8" y="606.0">ru/ma..</text>
</g>
<g>
<title>java.util.HashSet (461 samples, 0.17%)</title><rect x="970.8" y="579.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="973.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (524 samples, 0.20%)</title><rect x="972.8" y="579.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Integer (524 samples, 0.20%)</title><rect x="972.8" y="563.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="975.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,539 samples, 0.58%)</title><rect x="975.1" y="579.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.1" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap (1,539 samples, 0.58%)</title><rect x="975.1" y="563.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="978.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,642 samples, 0.62%)</title><rect x="982.0" y="579.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,642 samples, 0.62%)</title><rect x="982.0" y="563.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (1,642 samples, 0.62%)</title><rect x="982.0" y="547.0" width="7.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="985.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.addReplicasForKey (8,286 samples, 3.12%)</title><rect x="989.2" y="579.0" width="36.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.2" y="590.0">ru/..</text>
</g>
<g>
<title>java/util/HashSet.add (5,887 samples, 2.21%)</title><rect x="989.2" y="563.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.2" y="574.0">j..</text>
</g>
<g>
<title>java/util/HashMap.put (5,887 samples, 2.21%)</title><rect x="989.2" y="547.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/HashMap.putVal (5,887 samples, 2.21%)</title><rect x="989.2" y="531.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/HashMap.newNode (3,090 samples, 1.16%)</title><rect x="989.2" y="515.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.2" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,090 samples, 1.16%)</title><rect x="989.2" y="499.0" width="13.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="992.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,797 samples, 1.05%)</title><rect x="1003.0" y="515.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,698 samples, 1.01%)</title><rect x="1003.0" y="499.0" width="11.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1006.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (99 samples, 0.04%)</title><rect x="1014.9" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1017.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1,349 samples, 0.51%)</title><rect x="1015.4" y="563.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (1,349 samples, 0.51%)</title><rect x="1015.4" y="547.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1018.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,029 samples, 0.39%)</title><rect x="1021.4" y="563.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,029 samples, 0.39%)</title><rect x="1021.4" y="547.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1024.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapString (2,643 samples, 0.99%)</title><rect x="1026.0" y="611.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,599 samples, 0.60%)</title><rect x="1026.0" y="595.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,599 samples, 0.60%)</title><rect x="1026.0" y="579.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.0" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,599 samples, 0.60%)</title><rect x="1026.0" y="563.0" width="7.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1029.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (1,044 samples, 0.39%)</title><rect x="1033.1" y="595.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (1,044 samples, 0.39%)</title><rect x="1033.1" y="579.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.1" y="590.0"></text>
</g>
<g>
<title>byte[] (1,044 samples, 0.39%)</title><rect x="1033.1" y="563.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1036.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.respond (2,689 samples, 1.01%)</title><rect x="1037.7" y="659.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (595 samples, 0.22%)</title><rect x="1037.7" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (595 samples, 0.22%)</title><rect x="1037.7" y="627.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$221/1687115027.get$Lambda (595 samples, 0.22%)</title><rect x="1037.7" y="611.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$221 (595 samples, 0.22%)</title><rect x="1037.7" y="595.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1040.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,094 samples, 0.79%)</title><rect x="1040.4" y="643.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,094 samples, 0.79%)</title><rect x="1040.4" y="627.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,337 samples, 0.50%)</title><rect x="1040.4" y="611.0" width="5.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1043.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (755 samples, 0.28%)</title><rect x="1046.3" y="611.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (755 samples, 0.28%)</title><rect x="1046.3" y="595.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1049.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,755 samples, 0.66%)</title><rect x="1049.7" y="707.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,755 samples, 0.66%)</title><rect x="1049.7" y="691.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,755 samples, 0.66%)</title><rect x="1049.7" y="675.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (766 samples, 0.29%)</title><rect x="1049.7" y="659.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1052.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (989 samples, 0.37%)</title><rect x="1053.1" y="659.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.1" y="670.0"></text>
</g>
<g>
<title>byte[] (989 samples, 0.37%)</title><rect x="1053.1" y="643.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1056.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9,205 samples, 3.46%)</title><rect x="1057.5" y="739.0" width="40.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.5" y="750.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (1,254 samples, 0.47%)</title><rect x="1057.5" y="723.0" width="5.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1060.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,432 samples, 0.91%)</title><rect x="1063.0" y="723.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (2,376 samples, 0.89%)</title><rect x="1063.0" y="707.0" width="10.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1066.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,519 samples, 2.08%)</title><rect x="1073.8" y="723.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.8" y="734.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,519 samples, 2.08%)</title><rect x="1073.8" y="707.0" width="24.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1076.8" y="718.0">o..</text>
</g>
<g>
<title>char[] (3,199 samples, 1.20%)</title><rect x="1073.8" y="691.0" width="14.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1076.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (755 samples, 0.28%)</title><rect x="1088.0" y="691.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1091.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,558 samples, 0.59%)</title><rect x="1091.4" y="691.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,558 samples, 0.59%)</title><rect x="1091.4" y="675.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,558 samples, 0.59%)</title><rect x="1091.4" y="659.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.4" y="670.0"></text>
</g>
<g>
<title>byte[] (1,558 samples, 0.59%)</title><rect x="1091.4" y="643.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1094.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,112 samples, 0.42%)</title><rect x="1098.3" y="739.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.3" y="750.0"></text>
</g>
<g>
<title>byte[] (1,112 samples, 0.42%)</title><rect x="1098.3" y="723.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1101.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,532 samples, 0.58%)</title><rect x="1103.2" y="739.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,532 samples, 0.58%)</title><rect x="1103.2" y="723.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,532 samples, 0.58%)</title><rect x="1103.2" y="707.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (752 samples, 0.28%)</title><rect x="1103.2" y="691.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1106.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (780 samples, 0.29%)</title><rect x="1106.6" y="691.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.6" y="702.0"></text>
</g>
<g>
<title>byte[] (780 samples, 0.29%)</title><rect x="1106.6" y="675.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1109.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18,022 samples, 6.78%)</title><rect x="1110.0" y="739.0" width="80.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.0" y="750.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (18,022 samples, 6.78%)</title><rect x="1110.0" y="723.0" width="80.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.0" y="734.0">one/nio/u..</text>
</g>
<g>
<title>char[] (8,753 samples, 3.29%)</title><rect x="1110.0" y="707.0" width="38.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1113.0" y="718.0">cha..</text>
</g>
<g>
<title>char[] (275 samples, 0.10%)</title><rect x="1148.9" y="707.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (3,035 samples, 1.14%)</title><rect x="1150.1" y="707.0" width="13.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1153.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,959 samples, 2.24%)</title><rect x="1163.6" y="707.0" width="26.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.6" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,959 samples, 2.24%)</title><rect x="1163.6" y="691.0" width="26.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,959 samples, 2.24%)</title><rect x="1163.6" y="675.0" width="26.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.6" y="686.0">j..</text>
</g>
<g>
<title>byte[] (5,882 samples, 2.21%)</title><rect x="1163.6" y="659.0" width="26.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1166.6" y="670.0">b..</text>
</g>
<g>
<title>byte[] (77 samples, 0.03%)</title><rect x="1189.7" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.7" y="670.0"></text>
</g>
</g>
</svg>
