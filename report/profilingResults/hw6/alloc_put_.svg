<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (678,823 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (527,878 samples, 77.76%)</title><rect x="10.0" y="803.0" width="917.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (527,878 samples, 77.76%)</title><rect x="10.0" y="787.0" width="917.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (527,878 samples, 77.76%)</title><rect x="10.0" y="771.0" width="917.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (129,680 samples, 19.10%)</title><rect x="10.0" y="755.0" width="225.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (112,444 samples, 16.56%)</title><rect x="10.0" y="739.0" width="195.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9,448 samples, 1.39%)</title><rect x="10.0" y="723.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$413/1841270497.apply (9,448 samples, 1.39%)</title><rect x="10.0" y="707.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$11 (9,448 samples, 1.39%)</title><rect x="10.0" y="691.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getChangeResponse (9,448 samples, 1.39%)</title><rect x="10.0" y="675.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,800 samples, 0.27%)</title><rect x="10.0" y="659.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7,648 samples, 1.13%)</title><rect x="13.1" y="659.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.1" y="670.0"></text>
</g>
<g>
<title>byte[] (3,584 samples, 0.53%)</title><rect x="13.1" y="643.0" width="6.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="16.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (2,547 samples, 0.38%)</title><rect x="19.4" y="643.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="22.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1,517 samples, 0.22%)</title><rect x="23.8" y="643.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="26.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (102,939 samples, 15.16%)</title><rect x="26.4" y="723.0" width="179.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.4" y="734.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (494 samples, 0.07%)</title><rect x="26.4" y="707.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="29.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/2054707338.apply (102,444 samples, 15.09%)</title><rect x="27.3" y="707.0" width="178.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.3" y="718.0">jdk/internal/net/http/M..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (102,444 samples, 15.09%)</title><rect x="27.3" y="691.0" width="178.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.3" y="702.0">jdk/internal/net/http/M..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (102,444 samples, 15.09%)</title><rect x="27.3" y="675.0" width="178.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.3" y="686.0">jdk/internal/net/http/M..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (637 samples, 0.09%)</title><rect x="27.3" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (637 samples, 0.09%)</title><rect x="27.3" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$345/573480486.get$Lambda (366 samples, 0.05%)</title><rect x="27.3" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$345 (366 samples, 0.05%)</title><rect x="27.3" y="611.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="30.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$346/325847571.get$Lambda (271 samples, 0.04%)</title><rect x="27.9" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$346 (271 samples, 0.04%)</title><rect x="27.9" y="611.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="30.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,104 samples, 0.16%)</title><rect x="28.4" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,104 samples, 0.16%)</title><rect x="28.4" y="643.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (601 samples, 0.09%)</title><rect x="28.4" y="627.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="31.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (503 samples, 0.07%)</title><rect x="29.4" y="627.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (503 samples, 0.07%)</title><rect x="29.4" y="611.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (503 samples, 0.07%)</title><rect x="29.4" y="595.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="32.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,343 samples, 0.35%)</title><rect x="30.3" y="659.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,343 samples, 0.35%)</title><rect x="30.3" y="643.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,291 samples, 0.19%)</title><rect x="30.3" y="627.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="33.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,052 samples, 0.15%)</title><rect x="32.6" y="627.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,052 samples, 0.15%)</title><rect x="32.6" y="611.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,052 samples, 0.15%)</title><rect x="32.6" y="595.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="35.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (96,126 samples, 14.16%)</title><rect x="34.4" y="659.0" width="167.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.4" y="670.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (96,126 samples, 14.16%)</title><rect x="34.4" y="643.0" width="167.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.4" y="654.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (96,126 samples, 14.16%)</title><rect x="34.4" y="627.0" width="167.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="638.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,089 samples, 0.16%)</title><rect x="34.4" y="611.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,089 samples, 0.16%)</title><rect x="34.4" y="595.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/1368770104.get$Lambda (295 samples, 0.04%)</title><rect x="34.4" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$221 (295 samples, 0.04%)</title><rect x="34.4" y="563.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="37.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$222/461624569.get$Lambda (379 samples, 0.06%)</title><rect x="34.9" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$222 (379 samples, 0.06%)</title><rect x="34.9" y="563.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="37.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/1888700414.get$Lambda (415 samples, 0.06%)</title><rect x="35.6" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$299 (415 samples, 0.06%)</title><rect x="35.6" y="563.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="38.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (74,586 samples, 10.99%)</title><rect x="36.3" y="611.0" width="129.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.3" y="622.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (74,586 samples, 10.99%)</title><rect x="36.3" y="595.0" width="129.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.3" y="606.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (74,078 samples, 10.91%)</title><rect x="36.3" y="579.0" width="128.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.3" y="590.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/1888700414.apply (74,078 samples, 10.91%)</title><rect x="36.3" y="563.0" width="128.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.3" y="574.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (74,078 samples, 10.91%)</title><rect x="36.3" y="547.0" width="128.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.3" y="558.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (74,078 samples, 10.91%)</title><rect x="36.3" y="531.0" width="128.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.3" y="542.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$222/461624569.apply (74,078 samples, 10.91%)</title><rect x="36.3" y="515.0" width="128.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.3" y="526.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (74,078 samples, 10.91%)</title><rect x="36.3" y="499.0" width="128.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.3" y="510.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (385 samples, 0.06%)</title><rect x="36.3" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (385 samples, 0.06%)</title><rect x="36.3" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$344/1789618947.get$Lambda (385 samples, 0.06%)</title><rect x="36.3" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$344 (385 samples, 0.06%)</title><rect x="36.3" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,190 samples, 0.18%)</title><rect x="36.9" y="483.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,190 samples, 0.18%)</title><rect x="36.9" y="467.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (640 samples, 0.09%)</title><rect x="36.9" y="451.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="39.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.07%)</title><rect x="38.2" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.07%)</title><rect x="38.2" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (487 samples, 0.07%)</title><rect x="38.2" y="419.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="41.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,133 samples, 0.17%)</title><rect x="39.0" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,133 samples, 0.17%)</title><rect x="39.0" y="467.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (639 samples, 0.09%)</title><rect x="39.0" y="451.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="42.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (494 samples, 0.07%)</title><rect x="40.1" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (494 samples, 0.07%)</title><rect x="40.1" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (494 samples, 0.07%)</title><rect x="40.1" y="419.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="43.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (71,370 samples, 10.51%)</title><rect x="41.0" y="483.0" width="124.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.0" y="494.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (596 samples, 0.09%)</title><rect x="41.0" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (596 samples, 0.09%)</title><rect x="41.0" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$341/1844096335.get$Lambda (254 samples, 0.04%)</title><rect x="41.0" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$341 (254 samples, 0.04%)</title><rect x="41.0" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="44.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$343/79267593.get$Lambda (342 samples, 0.05%)</title><rect x="41.4" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$343 (342 samples, 0.05%)</title><rect x="41.4" y="419.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="44.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62,884 samples, 9.26%)</title><rect x="42.0" y="467.0" width="109.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.0" y="478.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (62,884 samples, 9.26%)</title><rect x="42.0" y="451.0" width="109.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.0" y="462.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (596 samples, 0.09%)</title><rect x="42.0" y="435.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="45.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$341/1844096335.apply (60,973 samples, 8.98%)</title><rect x="43.1" y="435.0" width="105.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.1" y="446.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (60,973 samples, 8.98%)</title><rect x="43.1" y="419.0" width="105.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.1" y="430.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (265 samples, 0.04%)</title><rect x="43.1" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (265 samples, 0.04%)</title><rect x="43.1" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/298472255.get$Lambda (265 samples, 0.04%)</title><rect x="43.1" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$354 (265 samples, 0.04%)</title><rect x="43.1" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="46.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,131 samples, 0.17%)</title><rect x="43.5" y="403.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,131 samples, 0.17%)</title><rect x="43.5" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (631 samples, 0.09%)</title><rect x="43.5" y="371.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="46.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (500 samples, 0.07%)</title><rect x="44.6" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (500 samples, 0.07%)</title><rect x="44.6" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (500 samples, 0.07%)</title><rect x="44.6" y="339.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="47.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (490 samples, 0.07%)</title><rect x="45.5" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="48.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (801 samples, 0.12%)</title><rect x="46.3" y="403.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (377 samples, 0.06%)</title><rect x="46.3" y="387.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="49.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (424 samples, 0.06%)</title><rect x="47.0" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (415 samples, 0.06%)</title><rect x="47.0" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (415 samples, 0.06%)</title><rect x="47.0" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (415 samples, 0.06%)</title><rect x="47.0" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (415 samples, 0.06%)</title><rect x="47.0" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (415 samples, 0.06%)</title><rect x="47.0" y="307.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="50.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,244 samples, 0.18%)</title><rect x="47.7" y="403.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,244 samples, 0.18%)</title><rect x="47.7" y="387.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (468 samples, 0.07%)</title><rect x="47.7" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (468 samples, 0.07%)</title><rect x="47.7" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (468 samples, 0.07%)</title><rect x="47.7" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (468 samples, 0.07%)</title><rect x="47.7" y="323.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="50.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (776 samples, 0.11%)</title><rect x="48.5" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (776 samples, 0.11%)</title><rect x="48.5" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (568 samples, 0.08%)</title><rect x="48.5" y="339.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="51.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (208 samples, 0.03%)</title><rect x="49.5" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (208 samples, 0.03%)</title><rect x="49.5" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="52.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (57,042 samples, 8.40%)</title><rect x="49.9" y="403.0" width="99.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.9" y="414.0">jdk/internal..</text>
</g>
<g>
<title>java.lang.StringBuilder (370 samples, 0.05%)</title><rect x="49.9" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="52.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (793 samples, 0.12%)</title><rect x="50.5" y="387.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.5" y="398.0"></text>
</g>
<g>
<title>byte[] (422 samples, 0.06%)</title><rect x="50.5" y="371.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="53.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (371 samples, 0.05%)</title><rect x="51.3" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4,590 samples, 0.68%)</title><rect x="51.9" y="387.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4,590 samples, 0.68%)</title><rect x="51.9" y="371.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4,590 samples, 0.68%)</title><rect x="51.9" y="355.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>byte[] (4,035 samples, 0.59%)</title><rect x="51.9" y="339.0" width="7.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="54.9" y="350.0"></text>
</g>
<g>
<title>byte[] (555 samples, 0.08%)</title><rect x="58.9" y="339.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,213 samples, 0.18%)</title><rect x="59.9" y="387.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.9" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,213 samples, 0.18%)</title><rect x="59.9" y="371.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.9" y="382.0"></text>
</g>
<g>
<title>byte[] (1,213 samples, 0.18%)</title><rect x="59.9" y="355.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="62.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,104 samples, 0.46%)</title><rect x="62.0" y="387.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,104 samples, 0.46%)</title><rect x="62.0" y="371.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,104 samples, 0.46%)</title><rect x="62.0" y="355.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>byte[] (2,586 samples, 0.38%)</title><rect x="62.0" y="339.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>byte[] (518 samples, 0.08%)</title><rect x="66.5" y="339.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (731 samples, 0.11%)</title><rect x="67.4" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (731 samples, 0.11%)</title><rect x="67.4" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (731 samples, 0.11%)</title><rect x="67.4" y="355.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="70.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (364 samples, 0.05%)</title><rect x="68.7" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (364 samples, 0.05%)</title><rect x="68.7" y="371.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="71.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (41,153 samples, 6.06%)</title><rect x="69.3" y="387.0" width="71.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.3" y="398.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (265 samples, 0.04%)</title><rect x="69.3" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (265 samples, 0.04%)</title><rect x="69.3" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$369/581896096.get$Lambda (265 samples, 0.04%)</title><rect x="69.3" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$369 (265 samples, 0.04%)</title><rect x="69.3" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="72.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (21,009 samples, 3.09%)</title><rect x="69.8" y="371.0" width="36.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.8" y="382.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (21,009 samples, 3.09%)</title><rect x="69.8" y="355.0" width="36.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.8" y="366.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (455 samples, 0.07%)</title><rect x="69.8" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="72.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (770 samples, 0.11%)</title><rect x="70.5" y="339.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="73.5" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,469 samples, 0.22%)</title><rect x="71.9" y="339.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="74.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeSet (487 samples, 0.07%)</title><rect x="74.4" y="339.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="77.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (963 samples, 0.14%)</title><rect x="75.3" y="339.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (963 samples, 0.14%)</title><rect x="75.3" y="323.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.get$Lambda (963 samples, 0.14%)</title><rect x="75.3" y="307.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$172 (963 samples, 0.14%)</title><rect x="75.3" y="291.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="78.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (14,371 samples, 2.12%)</title><rect x="77.0" y="339.0" width="24.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.0" y="350.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (14,371 samples, 2.12%)</title><rect x="77.0" y="323.0" width="24.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.0" y="334.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (14,371 samples, 2.12%)</title><rect x="77.0" y="307.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.0" y="318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14,371 samples, 2.12%)</title><rect x="77.0" y="291.0" width="24.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.0" y="302.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (8,826 samples, 1.30%)</title><rect x="77.0" y="275.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (6,871 samples, 1.01%)</title><rect x="77.0" y="259.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6,871 samples, 1.01%)</title><rect x="77.0" y="243.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,695 samples, 0.25%)</title><rect x="77.0" y="227.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,695 samples, 0.25%)</title><rect x="77.0" y="211.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,695 samples, 0.25%)</title><rect x="77.0" y="195.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,695 samples, 0.25%)</title><rect x="77.0" y="179.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,695 samples, 0.25%)</title><rect x="77.0" y="163.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,695 samples, 0.25%)</title><rect x="77.0" y="147.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="80.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$369/581896096.test (5,176 samples, 0.76%)</title><rect x="79.9" y="227.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$collectHeaders0$1 (5,176 samples, 0.76%)</title><rect x="79.9" y="211.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5,176 samples, 0.76%)</title><rect x="79.9" y="195.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4,067 samples, 0.60%)</title><rect x="79.9" y="179.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.9" y="190.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,530 samples, 0.23%)</title><rect x="79.9" y="163.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.9" y="174.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,530 samples, 0.23%)</title><rect x="79.9" y="147.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="82.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,537 samples, 0.37%)</title><rect x="82.6" y="163.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,537 samples, 0.37%)</title><rect x="82.6" y="147.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1,109 samples, 0.16%)</title><rect x="87.0" y="179.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,109 samples, 0.16%)</title><rect x="87.0" y="163.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,109 samples, 0.16%)</title><rect x="87.0" y="147.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (1,109 samples, 0.16%)</title><rect x="87.0" y="131.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.0" y="142.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1,109 samples, 0.16%)</title><rect x="87.0" y="115.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="90.0" y="126.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1,955 samples, 0.29%)</title><rect x="88.9" y="259.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.9" y="270.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1,955 samples, 0.29%)</title><rect x="88.9" y="243.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="91.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,012 samples, 0.44%)</title><rect x="92.3" y="275.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.3" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,012 samples, 0.44%)</title><rect x="92.3" y="259.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,513 samples, 0.22%)</title><rect x="92.3" y="243.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,513 samples, 0.22%)</title><rect x="92.3" y="227.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,513 samples, 0.22%)</title><rect x="92.3" y="211.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.3" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,499 samples, 0.22%)</title><rect x="94.9" y="243.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.9" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,499 samples, 0.22%)</title><rect x="94.9" y="227.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="97.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,533 samples, 0.37%)</title><rect x="97.5" y="275.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,533 samples, 0.37%)</title><rect x="97.5" y="259.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="100.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (980 samples, 0.14%)</title><rect x="101.9" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.9" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (980 samples, 0.14%)</title><rect x="101.9" y="323.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="104.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,514 samples, 0.22%)</title><rect x="103.6" y="339.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,514 samples, 0.22%)</title><rect x="103.6" y="323.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="106.6" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (375 samples, 0.06%)</title><rect x="106.3" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (375 samples, 0.06%)</title><rect x="106.3" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (375 samples, 0.06%)</title><rect x="106.3" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.3" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$359/1510484558.get$Lambda (375 samples, 0.06%)</title><rect x="106.3" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.3" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$359 (375 samples, 0.06%)</title><rect x="106.3" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="109.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (11,270 samples, 1.66%)</title><rect x="106.9" y="371.0" width="19.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6,921 samples, 1.02%)</title><rect x="106.9" y="355.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.9" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6,921 samples, 1.02%)</title><rect x="106.9" y="339.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6,921 samples, 1.02%)</title><rect x="106.9" y="323.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6,921 samples, 1.02%)</title><rect x="106.9" y="307.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.9" y="318.0"></text>
</g>
<g>
<title>byte[] (4,962 samples, 0.73%)</title><rect x="106.9" y="291.0" width="8.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="109.9" y="302.0"></text>
</g>
<g>
<title>byte[] (1,959 samples, 0.29%)</title><rect x="115.6" y="291.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,032 samples, 0.15%)</title><rect x="119.0" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.0" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,032 samples, 0.15%)</title><rect x="119.0" y="339.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,032 samples, 0.15%)</title><rect x="119.0" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,032 samples, 0.15%)</title><rect x="119.0" y="307.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="122.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (898 samples, 0.13%)</title><rect x="120.8" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.8" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (458 samples, 0.07%)</title><rect x="120.8" y="339.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="123.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (440 samples, 0.06%)</title><rect x="121.5" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.5" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (440 samples, 0.06%)</title><rect x="121.5" y="323.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="124.5" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$359/1510484558.test (2,419 samples, 0.36%)</title><rect x="122.3" y="355.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.3" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2,419 samples, 0.36%)</title><rect x="122.3" y="339.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$108/341796579.test (2,419 samples, 0.36%)</title><rect x="122.3" y="323.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$11 (2,419 samples, 0.36%)</title><rect x="122.3" y="307.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.3" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$98/953742666.test (2,419 samples, 0.36%)</title><rect x="122.3" y="291.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.3" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2,419 samples, 0.36%)</title><rect x="122.3" y="275.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$97/860481979.test (2,419 samples, 0.36%)</title><rect x="122.3" y="259.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$4 (2,419 samples, 0.36%)</title><rect x="122.3" y="243.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,419 samples, 0.36%)</title><rect x="122.3" y="227.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,419 samples, 0.36%)</title><rect x="122.3" y="211.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,235 samples, 0.18%)</title><rect x="122.3" y="195.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="125.3" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,184 samples, 0.17%)</title><rect x="124.5" y="195.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.5" y="206.0"></text>
</g>
<g>
<title>byte[] (1,184 samples, 0.17%)</title><rect x="124.5" y="179.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="127.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (7,964 samples, 1.17%)</title><rect x="126.5" y="371.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7,964 samples, 1.17%)</title><rect x="126.5" y="355.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7,964 samples, 1.17%)</title><rect x="126.5" y="339.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.5" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (353 samples, 0.05%)</title><rect x="126.5" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="129.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (732 samples, 0.11%)</title><rect x="127.1" y="323.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="130.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (274 samples, 0.04%)</title><rect x="128.4" y="323.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="131.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (489 samples, 0.07%)</title><rect x="128.9" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (489 samples, 0.07%)</title><rect x="128.9" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.get$Lambda (489 samples, 0.07%)</title><rect x="128.9" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.9" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$172 (489 samples, 0.07%)</title><rect x="128.9" y="275.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="131.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (519 samples, 0.08%)</title><rect x="129.7" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.7" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (519 samples, 0.08%)</title><rect x="129.7" y="307.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="132.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4,860 samples, 0.72%)</title><rect x="130.6" y="323.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (4,860 samples, 0.72%)</title><rect x="130.6" y="307.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.6" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4,860 samples, 0.72%)</title><rect x="130.6" y="291.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (839 samples, 0.12%)</title><rect x="130.6" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (839 samples, 0.12%)</title><rect x="130.6" y="259.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (839 samples, 0.12%)</title><rect x="130.6" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (839 samples, 0.12%)</title><rect x="130.6" y="227.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (839 samples, 0.12%)</title><rect x="130.6" y="211.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (839 samples, 0.12%)</title><rect x="130.6" y="195.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (839 samples, 0.12%)</title><rect x="130.6" y="179.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (839 samples, 0.12%)</title><rect x="130.6" y="163.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (839 samples, 0.12%)</title><rect x="130.6" y="147.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="133.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,173 samples, 0.32%)</title><rect x="132.1" y="275.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.1" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,173 samples, 0.32%)</title><rect x="132.1" y="259.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,124 samples, 0.17%)</title><rect x="132.1" y="243.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,124 samples, 0.17%)</title><rect x="132.1" y="227.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,124 samples, 0.17%)</title><rect x="132.1" y="211.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="135.1" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,049 samples, 0.15%)</title><rect x="134.0" y="243.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.0" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,049 samples, 0.15%)</title><rect x="134.0" y="227.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="137.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,848 samples, 0.27%)</title><rect x="135.9" y="275.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.9" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,848 samples, 0.27%)</title><rect x="135.9" y="259.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="138.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (737 samples, 0.11%)</title><rect x="139.1" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (737 samples, 0.11%)</title><rect x="139.1" y="307.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="142.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.CONTEXT_RESTRICTED (270 samples, 0.04%)</title><rect x="140.4" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (270 samples, 0.04%)</title><rect x="140.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (270 samples, 0.04%)</title><rect x="140.4" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$364/2029362563.get$Lambda (270 samples, 0.04%)</title><rect x="140.4" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$364 (270 samples, 0.04%)</title><rect x="140.4" y="307.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="143.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,190 samples, 0.18%)</title><rect x="140.8" y="387.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (368 samples, 0.05%)</title><rect x="140.8" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.8" y="382.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.05%)</title><rect x="140.8" y="355.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="143.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (822 samples, 0.12%)</title><rect x="141.5" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (822 samples, 0.12%)</title><rect x="141.5" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (822 samples, 0.12%)</title><rect x="141.5" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (328 samples, 0.05%)</title><rect x="141.5" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (328 samples, 0.05%)</title><rect x="141.5" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="144.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (494 samples, 0.07%)</title><rect x="142.0" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (494 samples, 0.07%)</title><rect x="142.0" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.0" y="318.0"></text>
</g>
<g>
<title>byte[] (494 samples, 0.07%)</title><rect x="142.0" y="291.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="145.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (810 samples, 0.12%)</title><rect x="142.9" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (810 samples, 0.12%)</title><rect x="142.9" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (810 samples, 0.12%)</title><rect x="142.9" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (810 samples, 0.12%)</title><rect x="142.9" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (810 samples, 0.12%)</title><rect x="142.9" y="323.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (810 samples, 0.12%)</title><rect x="142.9" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (810 samples, 0.12%)</title><rect x="142.9" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.9" y="302.0"></text>
</g>
<g>
<title>byte[] (810 samples, 0.12%)</title><rect x="142.9" y="275.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="145.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,724 samples, 0.40%)</title><rect x="144.3" y="387.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (743 samples, 0.11%)</title><rect x="144.3" y="371.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="147.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (763 samples, 0.11%)</title><rect x="145.6" y="371.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (763 samples, 0.11%)</title><rect x="145.6" y="355.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="148.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,218 samples, 0.18%)</title><rect x="146.9" y="371.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,218 samples, 0.18%)</title><rect x="146.9" y="355.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="149.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,315 samples, 0.19%)</title><rect x="149.0" y="435.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,315 samples, 0.19%)</title><rect x="149.0" y="419.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,315 samples, 0.19%)</title><rect x="149.0" y="403.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="152.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,337 samples, 0.20%)</title><rect x="151.3" y="467.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="154.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (531 samples, 0.08%)</title><rect x="153.7" y="467.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="156.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6,021 samples, 0.89%)</title><rect x="154.6" y="467.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (494 samples, 0.07%)</title><rect x="154.6" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (494 samples, 0.07%)</title><rect x="154.6" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$315/1378946090.get$Lambda (252 samples, 0.04%)</title><rect x="154.6" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$315 (252 samples, 0.04%)</title><rect x="154.6" y="403.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="157.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$320/1929517637.get$Lambda (242 samples, 0.04%)</title><rect x="155.0" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$320 (242 samples, 0.04%)</title><rect x="155.0" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="158.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (652 samples, 0.10%)</title><rect x="155.4" y="451.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="158.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (468 samples, 0.07%)</title><rect x="156.6" y="451.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="159.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (613 samples, 0.09%)</title><rect x="157.4" y="451.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="160.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,654 samples, 0.24%)</title><rect x="158.4" y="451.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,654 samples, 0.24%)</title><rect x="158.4" y="435.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,654 samples, 0.24%)</title><rect x="158.4" y="419.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,654 samples, 0.24%)</title><rect x="158.4" y="403.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,654 samples, 0.24%)</title><rect x="158.4" y="387.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,654 samples, 0.24%)</title><rect x="158.4" y="371.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (1,654 samples, 0.24%)</title><rect x="158.4" y="355.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,654 samples, 0.24%)</title><rect x="158.4" y="339.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,654 samples, 0.24%)</title><rect x="158.4" y="323.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (609 samples, 0.09%)</title><rect x="158.4" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (609 samples, 0.09%)</title><rect x="158.4" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$323/1646773514.get$Lambda (257 samples, 0.04%)</title><rect x="158.4" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$323 (257 samples, 0.04%)</title><rect x="158.4" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="161.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$329/2105044826.get$Lambda (352 samples, 0.05%)</title><rect x="158.9" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$329 (352 samples, 0.05%)</title><rect x="158.9" y="259.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="161.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (437 samples, 0.06%)</title><rect x="159.5" y="307.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="162.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (608 samples, 0.09%)</title><rect x="160.3" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (608 samples, 0.09%)</title><rect x="160.3" y="291.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (238 samples, 0.04%)</title><rect x="160.3" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="163.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (370 samples, 0.05%)</title><rect x="160.7" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (370 samples, 0.05%)</title><rect x="160.7" y="259.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="163.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,626 samples, 0.24%)</title><rect x="161.3" y="451.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.3" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (385 samples, 0.06%)</title><rect x="161.3" y="435.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="164.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (761 samples, 0.11%)</title><rect x="162.0" y="435.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="165.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (480 samples, 0.07%)</title><rect x="163.3" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (480 samples, 0.07%)</title><rect x="163.3" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.3" y="430.0"></text>
</g>
<g>
<title>byte[] (480 samples, 0.07%)</title><rect x="163.3" y="403.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="166.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (514 samples, 0.08%)</title><rect x="164.2" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (514 samples, 0.08%)</title><rect x="164.2" y="435.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="167.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (508 samples, 0.07%)</title><rect x="165.0" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (508 samples, 0.07%)</title><rect x="165.0" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (508 samples, 0.07%)</title><rect x="165.0" y="547.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="168.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,035 samples, 0.15%)</title><rect x="165.9" y="611.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,035 samples, 0.15%)</title><rect x="165.9" y="595.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (496 samples, 0.07%)</title><rect x="165.9" y="579.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="168.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (539 samples, 0.08%)</title><rect x="166.8" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (539 samples, 0.08%)</title><rect x="166.8" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (539 samples, 0.08%)</title><rect x="166.8" y="547.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="169.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (19,416 samples, 2.86%)</title><rect x="167.7" y="611.0" width="33.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.7" y="622.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (613 samples, 0.09%)</title><rect x="167.7" y="595.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (613 samples, 0.09%)</title><rect x="167.7" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$292/583211545.get$Lambda (380 samples, 0.06%)</title><rect x="167.7" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$292 (380 samples, 0.06%)</title><rect x="167.7" y="547.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="170.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$295/1306724714.get$Lambda (233 samples, 0.03%)</title><rect x="168.4" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$295 (233 samples, 0.03%)</title><rect x="168.4" y="547.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,005 samples, 0.15%)</title><rect x="168.8" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,005 samples, 0.15%)</title><rect x="168.8" y="579.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$295/1306724714.apply (507 samples, 0.07%)</title><rect x="168.8" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (507 samples, 0.07%)</title><rect x="168.8" y="547.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (507 samples, 0.07%)</title><rect x="168.8" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (507 samples, 0.07%)</title><rect x="168.8" y="515.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="171.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (498 samples, 0.07%)</title><rect x="169.7" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (498 samples, 0.07%)</title><rect x="169.7" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (498 samples, 0.07%)</title><rect x="169.7" y="531.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (518 samples, 0.08%)</title><rect x="170.5" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (518 samples, 0.08%)</title><rect x="170.5" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (518 samples, 0.08%)</title><rect x="170.5" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (518 samples, 0.08%)</title><rect x="170.5" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (518 samples, 0.08%)</title><rect x="170.5" y="531.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (17,280 samples, 2.55%)</title><rect x="171.4" y="595.0" width="30.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.4" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (17,280 samples, 2.55%)</title><rect x="171.4" y="579.0" width="30.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.4" y="590.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,381 samples, 0.20%)</title><rect x="171.4" y="563.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="174.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (15,352 samples, 2.26%)</title><rect x="173.8" y="563.0" width="26.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.8" y="574.0">j..</text>
</g>
<g>
<title>java.lang.Object (255 samples, 0.04%)</title><rect x="173.8" y="547.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="176.8" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (503 samples, 0.07%)</title><rect x="174.3" y="547.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="177.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (395 samples, 0.06%)</title><rect x="175.2" y="547.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="178.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (795 samples, 0.12%)</title><rect x="175.8" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.8" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (795 samples, 0.12%)</title><rect x="175.8" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.8" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (795 samples, 0.12%)</title><rect x="175.8" y="515.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="178.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (389 samples, 0.06%)</title><rect x="177.2" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (389 samples, 0.06%)</title><rect x="177.2" y="531.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="180.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1,139 samples, 0.17%)</title><rect x="177.9" y="547.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="180.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (814 samples, 0.12%)</title><rect x="179.9" y="547.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="182.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (956 samples, 0.14%)</title><rect x="181.3" y="547.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="184.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,036 samples, 0.15%)</title><rect x="183.0" y="547.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="186.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4,630 samples, 0.68%)</title><rect x="184.8" y="547.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (370 samples, 0.05%)</title><rect x="184.8" y="531.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="187.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (242 samples, 0.04%)</title><rect x="185.4" y="531.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="188.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (393 samples, 0.06%)</title><rect x="185.8" y="531.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (240 samples, 0.04%)</title><rect x="186.5" y="531.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="189.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (256 samples, 0.04%)</title><rect x="186.9" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.04%)</title><rect x="186.9" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.get$Lambda (256 samples, 0.04%)</title><rect x="186.9" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$284 (256 samples, 0.04%)</title><rect x="186.9" y="483.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (386 samples, 0.06%)</title><rect x="187.4" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (386 samples, 0.06%)</title><rect x="187.4" y="515.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="190.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (379 samples, 0.06%)</title><rect x="188.0" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="191.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (492 samples, 0.07%)</title><rect x="188.7" y="531.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="191.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,872 samples, 0.28%)</title><rect x="189.6" y="531.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (399 samples, 0.06%)</title><rect x="189.6" y="515.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="192.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (479 samples, 0.07%)</title><rect x="190.2" y="515.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="193.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (273 samples, 0.04%)</title><rect x="191.1" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (273 samples, 0.04%)</title><rect x="191.1" y="499.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="194.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (721 samples, 0.11%)</title><rect x="191.6" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (237 samples, 0.03%)</title><rect x="191.6" y="499.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="194.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (245 samples, 0.04%)</title><rect x="192.0" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="195.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (239 samples, 0.04%)</title><rect x="192.4" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="195.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3,023 samples, 0.45%)</title><rect x="192.8" y="547.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (261 samples, 0.04%)</title><rect x="192.8" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="195.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (267 samples, 0.04%)</title><rect x="193.3" y="531.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="196.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (229 samples, 0.03%)</title><rect x="193.7" y="531.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="196.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (392 samples, 0.06%)</title><rect x="194.1" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (392 samples, 0.06%)</title><rect x="194.1" y="515.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="197.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,874 samples, 0.28%)</title><rect x="194.8" y="531.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (372 samples, 0.05%)</title><rect x="194.8" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="197.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (478 samples, 0.07%)</title><rect x="195.5" y="515.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="198.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (244 samples, 0.04%)</title><rect x="196.3" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (244 samples, 0.04%)</title><rect x="196.3" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="199.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (780 samples, 0.11%)</title><rect x="196.7" y="515.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (248 samples, 0.04%)</title><rect x="196.7" y="499.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="199.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (274 samples, 0.04%)</title><rect x="197.1" y="499.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="200.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (258 samples, 0.04%)</title><rect x="197.6" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="200.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (460 samples, 0.07%)</title><rect x="198.1" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (460 samples, 0.07%)</title><rect x="198.1" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (460 samples, 0.07%)</title><rect x="198.1" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (460 samples, 0.07%)</title><rect x="198.1" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (460 samples, 0.07%)</title><rect x="198.1" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (460 samples, 0.07%)</title><rect x="198.1" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (460 samples, 0.07%)</title><rect x="198.1" y="451.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="201.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (957 samples, 0.14%)</title><rect x="198.9" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.9" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (957 samples, 0.14%)</title><rect x="198.9" y="531.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.9" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (957 samples, 0.14%)</title><rect x="198.9" y="515.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$226/1657925285.run (957 samples, 0.14%)</title><rect x="198.9" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (957 samples, 0.14%)</title><rect x="198.9" y="483.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.9" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (221 samples, 0.03%)</title><rect x="198.9" y="467.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="201.9" y="478.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (736 samples, 0.11%)</title><rect x="199.2" y="467.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.2" y="478.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (392 samples, 0.06%)</title><rect x="199.2" y="451.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="202.2" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (344 samples, 0.05%)</title><rect x="199.9" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.9" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (344 samples, 0.05%)</title><rect x="199.9" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.9" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (344 samples, 0.05%)</title><rect x="199.9" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.9" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (344 samples, 0.05%)</title><rect x="199.9" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.9" y="414.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (344 samples, 0.05%)</title><rect x="199.9" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="202.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (547 samples, 0.08%)</title><rect x="200.5" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (547 samples, 0.08%)</title><rect x="200.5" y="547.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="203.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (629 samples, 0.09%)</title><rect x="201.5" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (629 samples, 0.09%)</title><rect x="201.5" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (629 samples, 0.09%)</title><rect x="201.5" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.5" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (629 samples, 0.09%)</title><rect x="201.5" y="611.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="204.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1,605 samples, 0.24%)</title><rect x="202.6" y="659.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,214 samples, 0.18%)</title><rect x="202.6" y="643.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="205.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (391 samples, 0.06%)</title><rect x="204.7" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (391 samples, 0.06%)</title><rect x="204.7" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.7" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (391 samples, 0.06%)</title><rect x="204.7" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.7" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (391 samples, 0.06%)</title><rect x="204.7" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.7" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (391 samples, 0.06%)</title><rect x="204.7" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.7" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (391 samples, 0.06%)</title><rect x="204.7" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.7" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (391 samples, 0.06%)</title><rect x="204.7" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (391 samples, 0.06%)</title><rect x="204.7" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.7" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (391 samples, 0.06%)</title><rect x="204.7" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (391 samples, 0.06%)</title><rect x="204.7" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.7" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (391 samples, 0.06%)</title><rect x="204.7" y="483.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="207.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$155/1908187639.get (17,236 samples, 2.54%)</title><rect x="205.5" y="739.0" width="29.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.5" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$localUpsert$8 (17,236 samples, 2.54%)</title><rect x="205.5" y="723.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.5" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (11,833 samples, 1.74%)</title><rect x="205.5" y="707.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (11,833 samples, 1.74%)</title><rect x="205.5" y="691.0" width="20.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (226 samples, 0.03%)</title><rect x="205.5" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (226 samples, 0.03%)</title><rect x="205.5" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (226 samples, 0.03%)</title><rect x="205.5" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (188 samples, 0.03%)</title><rect x="205.5" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (188 samples, 0.03%)</title><rect x="205.5" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$220/475116154.run (11,607 samples, 1.71%)</title><rect x="205.9" y="675.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (11,607 samples, 1.71%)</title><rect x="205.9" y="659.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (11,607 samples, 1.71%)</title><rect x="205.9" y="643.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8,119 samples, 1.20%)</title><rect x="205.9" y="627.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.9" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,119 samples, 1.20%)</title><rect x="205.9" y="611.0" width="14.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="208.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (836 samples, 0.12%)</title><rect x="220.0" y="627.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (836 samples, 0.12%)</title><rect x="220.0" y="611.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (336 samples, 0.05%)</title><rect x="220.0" y="595.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="223.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (500 samples, 0.07%)</title><rect x="220.6" y="595.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.6" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (2,652 samples, 0.39%)</title><rect x="221.4" y="627.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="224.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapArray (5,403 samples, 0.80%)</title><rect x="226.0" y="707.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,403 samples, 0.80%)</title><rect x="226.0" y="691.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,403 samples, 0.80%)</title><rect x="226.0" y="675.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.0" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,403 samples, 0.80%)</title><rect x="226.0" y="659.0" width="9.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="229.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (17,736 samples, 2.61%)</title><rect x="235.4" y="755.0" width="30.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17,736 samples, 2.61%)</title><rect x="235.4" y="739.0" width="30.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.4" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17,736 samples, 2.61%)</title><rect x="235.4" y="723.0" width="30.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.4" y="734.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$219/102607679.accept (13,067 samples, 1.92%)</title><rect x="235.4" y="707.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.4" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$respond$5 (13,067 samples, 1.92%)</title><rect x="235.4" y="691.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.4" y="702.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13,067 samples, 1.92%)</title><rect x="235.4" y="675.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.4" y="686.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13,067 samples, 1.92%)</title><rect x="235.4" y="659.0" width="22.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.4" y="670.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9,340 samples, 1.38%)</title><rect x="235.4" y="643.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9,340 samples, 1.38%)</title><rect x="235.4" y="627.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.4" y="638.0"></text>
</g>
<g>
<title>byte[] (5,946 samples, 0.88%)</title><rect x="235.4" y="611.0" width="10.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="238.4" y="622.0"></text>
</g>
<g>
<title>byte[] (3,394 samples, 0.50%)</title><rect x="245.8" y="611.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="248.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,727 samples, 0.55%)</title><rect x="251.7" y="643.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.7" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3,727 samples, 0.55%)</title><rect x="251.7" y="627.0" width="6.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="254.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$216/1120270908.accept (4,669 samples, 0.69%)</title><rect x="258.1" y="707.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$0 (4,669 samples, 0.69%)</title><rect x="258.1" y="691.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,489 samples, 0.37%)</title><rect x="258.1" y="675.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,489 samples, 0.37%)</title><rect x="258.1" y="659.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,482 samples, 0.37%)</title><rect x="258.1" y="643.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$217/1200192717.apply (2,482 samples, 0.37%)</title><rect x="258.1" y="627.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$resolveChange$10 (2,482 samples, 0.37%)</title><rect x="258.1" y="611.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.1" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (510 samples, 0.08%)</title><rect x="258.1" y="595.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="261.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,972 samples, 0.29%)</title><rect x="259.0" y="595.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.0" y="606.0"></text>
</g>
<g>
<title>byte[] (804 samples, 0.12%)</title><rect x="259.0" y="579.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="262.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (673 samples, 0.10%)</title><rect x="260.4" y="579.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="263.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (495 samples, 0.07%)</title><rect x="261.6" y="579.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="264.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2,180 samples, 0.32%)</title><rect x="262.5" y="675.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,180 samples, 0.32%)</title><rect x="262.5" y="659.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,180 samples, 0.32%)</title><rect x="262.5" y="643.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="265.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12,473 samples, 1.84%)</title><rect x="266.3" y="755.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.3" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12,030 samples, 1.77%)</title><rect x="266.3" y="739.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11,848 samples, 1.75%)</title><rect x="266.3" y="723.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11,848 samples, 1.75%)</title><rect x="266.3" y="707.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11,848 samples, 1.75%)</title><rect x="266.3" y="691.0" width="20.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="269.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (182 samples, 0.03%)</title><rect x="286.8" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (182 samples, 0.03%)</title><rect x="286.8" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (182 samples, 0.03%)</title><rect x="286.8" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (182 samples, 0.03%)</title><rect x="286.8" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (182 samples, 0.03%)</title><rect x="286.8" y="659.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="289.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (443 samples, 0.07%)</title><rect x="287.2" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (404 samples, 0.06%)</title><rect x="287.2" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (404 samples, 0.06%)</title><rect x="287.2" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (404 samples, 0.06%)</title><rect x="287.2" y="691.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="290.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$365/1924560206.run (18,811 samples, 2.77%)</title><rect x="287.9" y="755.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.9" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (18,811 samples, 2.77%)</title><rect x="287.9" y="739.0" width="32.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.9" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (18,811 samples, 2.77%)</title><rect x="287.9" y="723.0" width="32.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.9" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (18,811 samples, 2.77%)</title><rect x="287.9" y="707.0" width="32.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.9" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18,811 samples, 2.77%)</title><rect x="287.9" y="691.0" width="32.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.9" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18,811 samples, 2.77%)</title><rect x="287.9" y="675.0" width="32.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.9" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18,811 samples, 2.77%)</title><rect x="287.9" y="659.0" width="32.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.9" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18,811 samples, 2.77%)</title><rect x="287.9" y="643.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.9" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (18,811 samples, 2.77%)</title><rect x="287.9" y="627.0" width="32.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.9" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (18,811 samples, 2.77%)</title><rect x="287.9" y="611.0" width="32.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.9" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (18,811 samples, 2.77%)</title><rect x="287.9" y="595.0" width="32.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.9" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (17,109 samples, 2.52%)</title><rect x="287.9" y="579.0" width="29.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.9" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,077 samples, 0.16%)</title><rect x="287.9" y="563.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,077 samples, 0.16%)</title><rect x="287.9" y="547.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$379/1276562177.get$Lambda (385 samples, 0.06%)</title><rect x="287.9" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$379 (385 samples, 0.06%)</title><rect x="287.9" y="515.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="290.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$402/1461765245.get$Lambda (388 samples, 0.06%)</title><rect x="288.6" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$402 (388 samples, 0.06%)</title><rect x="288.6" y="515.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="291.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/1589733674.get$Lambda (304 samples, 0.04%)</title><rect x="289.3" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$409 (304 samples, 0.04%)</title><rect x="289.3" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="292.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (16,032 samples, 2.36%)</title><rect x="289.8" y="563.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.8" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (700 samples, 0.10%)</title><rect x="289.8" y="547.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="292.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15,332 samples, 2.26%)</title><rect x="291.0" y="547.0" width="26.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (15,332 samples, 2.26%)</title><rect x="291.0" y="531.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15,332 samples, 2.26%)</title><rect x="291.0" y="515.0" width="26.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,668 samples, 0.39%)</title><rect x="291.0" y="499.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (968 samples, 0.14%)</title><rect x="291.0" y="483.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="294.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$395/1667390995.apply (1,588 samples, 0.23%)</title><rect x="292.7" y="483.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,588 samples, 0.23%)</title><rect x="292.7" y="467.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,588 samples, 0.23%)</title><rect x="292.7" y="451.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (352 samples, 0.05%)</title><rect x="292.7" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (352 samples, 0.05%)</title><rect x="292.7" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.7" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (352 samples, 0.05%)</title><rect x="292.7" y="403.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="295.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1,236 samples, 0.18%)</title><rect x="293.3" y="435.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (223 samples, 0.03%)</title><rect x="293.3" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (223 samples, 0.03%)</title><rect x="293.3" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/790771239.get$Lambda (223 samples, 0.03%)</title><rect x="293.3" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$411 (223 samples, 0.03%)</title><rect x="293.3" y="371.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="296.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1,013 samples, 0.15%)</title><rect x="293.7" y="419.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,013 samples, 0.15%)</title><rect x="293.7" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (529 samples, 0.08%)</title><rect x="293.7" y="387.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="296.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (478 samples, 0.07%)</title><rect x="294.6" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (478 samples, 0.07%)</title><rect x="294.6" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (478 samples, 0.07%)</title><rect x="294.6" y="355.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="297.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (12,664 samples, 1.87%)</title><rect x="295.7" y="499.0" width="22.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.7" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12,664 samples, 1.87%)</title><rect x="295.7" y="483.0" width="22.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.7" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$344/1789618947.apply (12,663 samples, 1.87%)</title><rect x="295.7" y="467.0" width="22.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.7" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (12,663 samples, 1.87%)</title><rect x="295.7" y="451.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.7" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (12,663 samples, 1.87%)</title><rect x="295.7" y="435.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/1368770104.apply (12,663 samples, 1.87%)</title><rect x="295.7" y="419.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (12,663 samples, 1.87%)</title><rect x="295.7" y="403.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.7" y="414.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (222 samples, 0.03%)</title><rect x="295.7" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (222 samples, 0.03%)</title><rect x="295.7" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$395/1667390995.get$Lambda (222 samples, 0.03%)</title><rect x="295.7" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$395 (222 samples, 0.03%)</title><rect x="295.7" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="298.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,149 samples, 0.17%)</title><rect x="296.0" y="387.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,149 samples, 0.17%)</title><rect x="296.0" y="371.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (612 samples, 0.09%)</title><rect x="296.0" y="355.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="299.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (537 samples, 0.08%)</title><rect x="297.1" y="355.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (537 samples, 0.08%)</title><rect x="297.1" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (537 samples, 0.08%)</title><rect x="297.1" y="323.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="300.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (11,292 samples, 1.66%)</title><rect x="298.0" y="387.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (4,313 samples, 0.64%)</title><rect x="298.0" y="371.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (4,313 samples, 0.64%)</title><rect x="298.0" y="355.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (4,313 samples, 0.64%)</title><rect x="298.0" y="339.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$383/69721372.accept (1,495 samples, 0.22%)</title><rect x="298.0" y="323.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1,495 samples, 0.22%)</title><rect x="298.0" y="307.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1,495 samples, 0.22%)</title><rect x="298.0" y="291.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (368 samples, 0.05%)</title><rect x="298.0" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (368 samples, 0.05%)</title><rect x="298.0" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$387/603084733.get$Lambda (368 samples, 0.05%)</title><rect x="298.0" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$387 (368 samples, 0.05%)</title><rect x="298.0" y="227.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="301.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,127 samples, 0.17%)</title><rect x="298.7" y="275.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,127 samples, 0.17%)</title><rect x="298.7" y="259.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (629 samples, 0.09%)</title><rect x="298.7" y="243.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="301.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (498 samples, 0.07%)</title><rect x="299.8" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (498 samples, 0.07%)</title><rect x="299.8" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (498 samples, 0.07%)</title><rect x="299.8" y="211.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="302.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$391/1901148960.accept (1,828 samples, 0.27%)</title><rect x="300.6" y="323.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,828 samples, 0.27%)</title><rect x="300.6" y="307.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,828 samples, 0.27%)</title><rect x="300.6" y="291.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,828 samples, 0.27%)</title><rect x="300.6" y="275.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,828 samples, 0.27%)</title><rect x="300.6" y="259.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,828 samples, 0.27%)</title><rect x="300.6" y="243.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,828 samples, 0.27%)</title><rect x="300.6" y="227.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,828 samples, 0.27%)</title><rect x="300.6" y="211.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,828 samples, 0.27%)</title><rect x="300.6" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,828 samples, 0.27%)</title><rect x="300.6" y="179.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (713 samples, 0.11%)</title><rect x="300.6" y="163.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (713 samples, 0.11%)</title><rect x="300.6" y="147.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (347 samples, 0.05%)</title><rect x="300.6" y="131.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="303.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (366 samples, 0.05%)</title><rect x="301.2" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (366 samples, 0.05%)</title><rect x="301.2" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (366 samples, 0.05%)</title><rect x="301.2" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (366 samples, 0.05%)</title><rect x="301.2" y="83.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (366 samples, 0.05%)</title><rect x="301.2" y="67.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (366 samples, 0.05%)</title><rect x="301.2" y="51.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="304.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1,115 samples, 0.16%)</title><rect x="301.9" y="163.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1,115 samples, 0.16%)</title><rect x="301.9" y="147.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.9" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (358 samples, 0.05%)</title><rect x="301.9" y="131.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.9" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (358 samples, 0.05%)</title><rect x="301.9" y="115.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="304.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (757 samples, 0.11%)</title><rect x="302.5" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.5" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (384 samples, 0.06%)</title><rect x="302.5" y="115.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="305.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (373 samples, 0.05%)</title><rect x="303.2" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (373 samples, 0.05%)</title><rect x="303.2" y="99.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (373 samples, 0.05%)</title><rect x="303.2" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (373 samples, 0.05%)</title><rect x="303.2" y="67.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (373 samples, 0.05%)</title><rect x="303.2" y="51.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (373 samples, 0.05%)</title><rect x="303.2" y="35.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="306.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (990 samples, 0.15%)</title><rect x="303.8" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (990 samples, 0.15%)</title><rect x="303.8" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (990 samples, 0.15%)</title><rect x="303.8" y="291.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="306.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (6,979 samples, 1.03%)</title><rect x="305.5" y="371.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (634 samples, 0.09%)</title><rect x="305.5" y="355.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="308.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (469 samples, 0.07%)</title><rect x="306.6" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (469 samples, 0.07%)</title><rect x="306.6" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (469 samples, 0.07%)</title><rect x="306.6" y="323.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="309.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5,876 samples, 0.87%)</title><rect x="307.5" y="355.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (353 samples, 0.05%)</title><rect x="307.5" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="310.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (3,151 samples, 0.46%)</title><rect x="308.1" y="339.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (474 samples, 0.07%)</title><rect x="308.1" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (474 samples, 0.07%)</title><rect x="308.1" y="307.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="311.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (649 samples, 0.10%)</title><rect x="308.9" y="323.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="311.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (2,028 samples, 0.30%)</title><rect x="310.0" y="323.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (244 samples, 0.04%)</title><rect x="310.0" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="313.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (252 samples, 0.04%)</title><rect x="310.5" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="313.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (458 samples, 0.07%)</title><rect x="310.9" y="307.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="313.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (352 samples, 0.05%)</title><rect x="311.7" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (352 samples, 0.05%)</title><rect x="311.7" y="291.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="314.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (722 samples, 0.11%)</title><rect x="312.3" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (233 samples, 0.03%)</title><rect x="312.3" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="315.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (225 samples, 0.03%)</title><rect x="312.7" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="315.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (264 samples, 0.04%)</title><rect x="313.1" y="291.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="316.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2,372 samples, 0.35%)</title><rect x="313.6" y="339.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (376 samples, 0.06%)</title><rect x="313.6" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="316.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,179 samples, 0.17%)</title><rect x="314.2" y="323.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (679 samples, 0.10%)</title><rect x="314.2" y="307.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="317.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (500 samples, 0.07%)</title><rect x="315.4" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.4" y="318.0"></text>
</g>
<g>
<title>byte[] (500 samples, 0.07%)</title><rect x="315.4" y="291.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="318.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (817 samples, 0.12%)</title><rect x="316.3" y="323.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (817 samples, 0.12%)</title><rect x="316.3" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (817 samples, 0.12%)</title><rect x="316.3" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (817 samples, 0.12%)</title><rect x="316.3" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (817 samples, 0.12%)</title><rect x="316.3" y="259.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (817 samples, 0.12%)</title><rect x="316.3" y="243.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="319.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,702 samples, 0.25%)</title><rect x="317.7" y="579.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,702 samples, 0.25%)</title><rect x="317.7" y="563.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,702 samples, 0.25%)</title><rect x="317.7" y="547.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,702 samples, 0.25%)</title><rect x="317.7" y="531.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,702 samples, 0.25%)</title><rect x="317.7" y="515.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,702 samples, 0.25%)</title><rect x="317.7" y="499.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (722 samples, 0.11%)</title><rect x="317.7" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.7" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (722 samples, 0.11%)</title><rect x="317.7" y="467.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="320.7" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (980 samples, 0.14%)</title><rect x="318.9" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.9" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (980 samples, 0.14%)</title><rect x="318.9" y="467.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="321.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (63,520 samples, 9.36%)</title><rect x="320.6" y="755.0" width="110.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.6" y="766.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (63,520 samples, 9.36%)</title><rect x="320.6" y="739.0" width="110.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.6" y="750.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (53,558 samples, 7.89%)</title><rect x="320.6" y="723.0" width="93.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.6" y="734.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (53,558 samples, 7.89%)</title><rect x="320.6" y="707.0" width="93.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.6" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (53,558 samples, 7.89%)</title><rect x="320.6" y="691.0" width="93.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.6" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,155 samples, 0.17%)</title><rect x="320.6" y="675.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,155 samples, 0.17%)</title><rect x="320.6" y="659.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,155 samples, 0.17%)</title><rect x="320.6" y="643.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,155 samples, 0.17%)</title><rect x="320.6" y="627.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (641 samples, 0.09%)</title><rect x="320.6" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (641 samples, 0.09%)</title><rect x="320.6" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (641 samples, 0.09%)</title><rect x="320.6" y="579.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (641 samples, 0.09%)</title><rect x="320.6" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (641 samples, 0.09%)</title><rect x="320.6" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.6" y="558.0"></text>
</g>
<g>
<title>byte[] (641 samples, 0.09%)</title><rect x="320.6" y="531.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="323.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (514 samples, 0.08%)</title><rect x="321.7" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (514 samples, 0.08%)</title><rect x="321.7" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (514 samples, 0.08%)</title><rect x="321.7" y="579.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$373/945708893.get$Lambda (514 samples, 0.08%)</title><rect x="321.7" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$373 (514 samples, 0.08%)</title><rect x="321.7" y="547.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="324.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (52,403 samples, 7.72%)</title><rect x="322.6" y="675.0" width="91.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.6" y="686.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (52,403 samples, 7.72%)</title><rect x="322.6" y="659.0" width="91.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.6" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52,403 samples, 7.72%)</title><rect x="322.6" y="643.0" width="91.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.6" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52,403 samples, 7.72%)</title><rect x="322.6" y="627.0" width="91.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.6" y="638.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (25,076 samples, 3.69%)</title><rect x="322.6" y="611.0" width="43.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.6" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25,076 samples, 3.69%)</title><rect x="322.6" y="595.0" width="43.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.6" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (25,076 samples, 3.69%)</title><rect x="322.6" y="579.0" width="43.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.6" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (25,076 samples, 3.69%)</title><rect x="322.6" y="563.0" width="43.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.6" y="574.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25,076 samples, 3.69%)</title><rect x="322.6" y="547.0" width="43.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.6" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (25,076 samples, 3.69%)</title><rect x="322.6" y="531.0" width="43.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.6" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (25,076 samples, 3.69%)</title><rect x="322.6" y="515.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.6" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (24,358 samples, 3.59%)</title><rect x="322.6" y="499.0" width="42.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.6" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24,358 samples, 3.59%)</title><rect x="322.6" y="483.0" width="42.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.6" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (23,831 samples, 3.51%)</title><rect x="322.6" y="467.0" width="41.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.6" y="478.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (466 samples, 0.07%)</title><rect x="322.6" y="451.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="325.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/481626032.apply (22,357 samples, 3.29%)</title><rect x="323.5" y="451.0" width="38.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.5" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (22,357 samples, 3.29%)</title><rect x="323.5" y="435.0" width="38.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.5" y="446.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (338 samples, 0.05%)</title><rect x="323.5" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (338 samples, 0.05%)</title><rect x="323.5" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$455/816666687.get$Lambda (338 samples, 0.05%)</title><rect x="323.5" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$455 (338 samples, 0.05%)</title><rect x="323.5" y="371.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="326.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,083 samples, 0.16%)</title><rect x="324.0" y="419.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,083 samples, 0.16%)</title><rect x="324.0" y="403.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (642 samples, 0.09%)</title><rect x="324.0" y="387.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="327.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (441 samples, 0.06%)</title><rect x="325.2" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (441 samples, 0.06%)</title><rect x="325.2" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (441 samples, 0.06%)</title><rect x="325.2" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="328.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (20,936 samples, 3.08%)</title><rect x="325.9" y="419.0" width="36.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.9" y="430.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (241 samples, 0.04%)</title><rect x="325.9" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (241 samples, 0.04%)</title><rect x="325.9" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$451/350781303.get$Lambda (241 samples, 0.04%)</title><rect x="325.9" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$451 (241 samples, 0.04%)</title><rect x="325.9" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="328.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,138 samples, 0.17%)</title><rect x="326.3" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,138 samples, 0.17%)</title><rect x="326.3" y="387.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (602 samples, 0.09%)</title><rect x="326.3" y="371.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="329.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (536 samples, 0.08%)</title><rect x="327.4" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (536 samples, 0.08%)</title><rect x="327.4" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (536 samples, 0.08%)</title><rect x="327.4" y="339.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="330.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (19,557 samples, 2.88%)</title><rect x="328.3" y="403.0" width="34.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.3" y="414.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (365 samples, 0.05%)</title><rect x="328.3" y="387.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="331.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17,806 samples, 2.62%)</title><rect x="329.0" y="387.0" width="30.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.0" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (476 samples, 0.07%)</title><rect x="329.0" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (476 samples, 0.07%)</title><rect x="329.0" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/1265510959.get$Lambda (242 samples, 0.04%)</title><rect x="329.0" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$443 (242 samples, 0.04%)</title><rect x="329.0" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="332.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$447/1669048229.get$Lambda (234 samples, 0.03%)</title><rect x="329.4" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$447 (234 samples, 0.03%)</title><rect x="329.4" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="332.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1025200760.linkToTargetMethod (667 samples, 0.10%)</title><rect x="329.8" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1586915787.invokeStatic (667 samples, 0.10%)</title><rect x="329.8" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/288075623.get$Lambda (667 samples, 0.10%)</title><rect x="329.8" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$421 (667 samples, 0.10%)</title><rect x="329.8" y="323.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="332.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3,511 samples, 0.52%)</title><rect x="330.9" y="371.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,379 samples, 0.20%)</title><rect x="330.9" y="355.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.9" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (499 samples, 0.07%)</title><rect x="330.9" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.9" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (499 samples, 0.07%)</title><rect x="330.9" y="323.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="333.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (880 samples, 0.13%)</title><rect x="331.8" y="339.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (880 samples, 0.13%)</title><rect x="331.8" y="323.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="334.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1,110 samples, 0.16%)</title><rect x="333.3" y="355.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,110 samples, 0.16%)</title><rect x="333.3" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,110 samples, 0.16%)</title><rect x="333.3" y="323.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (347 samples, 0.05%)</title><rect x="333.3" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (347 samples, 0.05%)</title><rect x="333.3" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (347 samples, 0.05%)</title><rect x="333.3" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (347 samples, 0.05%)</title><rect x="333.3" y="259.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="336.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$418/748691001.get (409 samples, 0.06%)</title><rect x="333.9" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.9" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (409 samples, 0.06%)</title><rect x="333.9" y="291.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="336.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (354 samples, 0.05%)</title><rect x="334.7" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (354 samples, 0.05%)</title><rect x="334.7" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.7" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (354 samples, 0.05%)</title><rect x="334.7" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.7" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (354 samples, 0.05%)</title><rect x="334.7" y="259.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="337.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1,022 samples, 0.15%)</title><rect x="335.3" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (1,022 samples, 0.15%)</title><rect x="335.3" y="339.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="338.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,179 samples, 0.32%)</title><rect x="337.0" y="371.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,116 samples, 0.16%)</title><rect x="337.0" y="355.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (630 samples, 0.09%)</title><rect x="337.0" y="339.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="340.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (486 samples, 0.07%)</title><rect x="338.1" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (486 samples, 0.07%)</title><rect x="338.1" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (486 samples, 0.07%)</title><rect x="338.1" y="307.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="341.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,063 samples, 0.16%)</title><rect x="339.0" y="355.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,063 samples, 0.16%)</title><rect x="339.0" y="339.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (576 samples, 0.08%)</title><rect x="339.0" y="323.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="342.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.07%)</title><rect x="340.0" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.07%)</title><rect x="340.0" y="307.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (487 samples, 0.07%)</title><rect x="340.0" y="291.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="343.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (362 samples, 0.05%)</title><rect x="340.8" y="371.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="343.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (499 samples, 0.07%)</title><rect x="341.5" y="371.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="344.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (518 samples, 0.08%)</title><rect x="342.3" y="371.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="345.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (256 samples, 0.04%)</title><rect x="343.2" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (256 samples, 0.04%)</title><rect x="343.2" y="355.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="346.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,338 samples, 1.38%)</title><rect x="343.7" y="371.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/288075623.run (9,338 samples, 1.38%)</title><rect x="343.7" y="355.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (9,338 samples, 1.38%)</title><rect x="343.7" y="339.0" width="16.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,085 samples, 0.16%)</title><rect x="343.7" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,085 samples, 0.16%)</title><rect x="343.7" y="307.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.get$Lambda (243 samples, 0.04%)</title><rect x="343.7" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$422 (243 samples, 0.04%)</title><rect x="343.7" y="275.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="346.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$424/1329730548.get$Lambda (371 samples, 0.05%)</title><rect x="344.1" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$424 (371 samples, 0.05%)</title><rect x="344.1" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="347.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$434/1996421976.get$Lambda (471 samples, 0.07%)</title><rect x="344.7" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$434 (471 samples, 0.07%)</title><rect x="344.7" y="275.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="347.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,135 samples, 0.17%)</title><rect x="345.6" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,135 samples, 0.17%)</title><rect x="345.6" y="307.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (647 samples, 0.10%)</title><rect x="345.6" y="291.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="348.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (488 samples, 0.07%)</title><rect x="346.7" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (488 samples, 0.07%)</title><rect x="346.7" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (488 samples, 0.07%)</title><rect x="346.7" y="259.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="349.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (620 samples, 0.09%)</title><rect x="347.5" y="323.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="350.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (484 samples, 0.07%)</title><rect x="348.6" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (484 samples, 0.07%)</title><rect x="348.6" y="307.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="351.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,553 samples, 0.23%)</title><rect x="349.5" y="323.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,553 samples, 0.23%)</title><rect x="349.5" y="307.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (381 samples, 0.06%)</title><rect x="349.5" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (381 samples, 0.06%)</title><rect x="349.5" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$440/1369757709.get$Lambda (381 samples, 0.06%)</title><rect x="349.5" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$440 (381 samples, 0.06%)</title><rect x="349.5" y="243.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="352.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,172 samples, 0.17%)</title><rect x="350.1" y="291.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,172 samples, 0.17%)</title><rect x="350.1" y="275.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,172 samples, 0.17%)</title><rect x="350.1" y="259.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (651 samples, 0.10%)</title><rect x="350.1" y="243.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="353.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (521 samples, 0.08%)</title><rect x="351.2" y="243.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (521 samples, 0.08%)</title><rect x="351.2" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (521 samples, 0.08%)</title><rect x="351.2" y="211.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="354.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,448 samples, 0.21%)</title><rect x="352.2" y="323.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,448 samples, 0.21%)</title><rect x="352.2" y="307.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (1,448 samples, 0.21%)</title><rect x="352.2" y="291.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,448 samples, 0.21%)</title><rect x="352.2" y="275.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (342 samples, 0.05%)</title><rect x="352.2" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (342 samples, 0.05%)</title><rect x="352.2" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="355.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,106 samples, 0.16%)</title><rect x="352.7" y="259.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,106 samples, 0.16%)</title><rect x="352.7" y="243.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.7" y="254.0"></text>
</g>
<g>
<title>byte[] (1,106 samples, 0.16%)</title><rect x="352.7" y="227.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="355.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3,013 samples, 0.44%)</title><rect x="354.7" y="323.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (881 samples, 0.13%)</title><rect x="354.7" y="307.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="357.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2,132 samples, 0.31%)</title><rect x="356.2" y="307.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,132 samples, 0.31%)</title><rect x="356.2" y="291.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (260 samples, 0.04%)</title><rect x="356.2" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$429/1520689575.get$Lambda (260 samples, 0.04%)</title><rect x="356.2" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser$$Lambda$429 (260 samples, 0.04%)</title><rect x="356.2" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="359.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1627857534.invoke (1,872 samples, 0.28%)</title><rect x="356.7" y="275.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,872 samples, 0.28%)</title><rect x="356.7" y="259.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (381 samples, 0.06%)</title><rect x="356.7" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (381 samples, 0.06%)</title><rect x="356.7" y="227.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="359.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,491 samples, 0.22%)</title><rect x="357.3" y="243.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,491 samples, 0.22%)</title><rect x="357.3" y="227.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.3" y="238.0"></text>
</g>
<g>
<title>byte[] (1,487 samples, 0.22%)</title><rect x="357.3" y="211.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="360.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/bodyhandlers/ChangeBodyHandler.apply (1,386 samples, 0.20%)</title><rect x="359.9" y="387.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (1,386 samples, 0.20%)</title><rect x="359.9" y="371.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.9" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (270 samples, 0.04%)</title><rect x="359.9" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.9" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.of (270 samples, 0.04%)</title><rect x="359.9" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.9" y="350.0"></text>
</g>
<g>
<title>java.util.Optional (270 samples, 0.04%)</title><rect x="359.9" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="362.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (372 samples, 0.05%)</title><rect x="360.4" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="363.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (744 samples, 0.11%)</title><rect x="361.0" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (270 samples, 0.04%)</title><rect x="361.0" y="339.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="364.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (474 samples, 0.07%)</title><rect x="361.5" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="364.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$345/573480486.apply (1,008 samples, 0.15%)</title><rect x="362.3" y="451.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,008 samples, 0.15%)</title><rect x="362.3" y="435.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (504 samples, 0.07%)</title><rect x="362.3" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (504 samples, 0.07%)</title><rect x="362.3" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (504 samples, 0.07%)</title><rect x="362.3" y="387.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.3" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (504 samples, 0.07%)</title><rect x="362.3" y="371.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="365.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (504 samples, 0.07%)</title><rect x="363.2" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (504 samples, 0.07%)</title><rect x="363.2" y="403.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="366.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (527 samples, 0.08%)</title><rect x="364.1" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (527 samples, 0.08%)</title><rect x="364.1" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$346/325847571.apply (527 samples, 0.08%)</title><rect x="364.1" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (527 samples, 0.08%)</title><rect x="364.1" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (527 samples, 0.08%)</title><rect x="364.1" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (527 samples, 0.08%)</title><rect x="364.1" y="387.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="367.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$411/790771239.apply (718 samples, 0.11%)</title><rect x="365.0" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (718 samples, 0.11%)</title><rect x="365.0" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (718 samples, 0.11%)</title><rect x="365.0" y="467.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="368.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (27,327 samples, 4.03%)</title><rect x="366.2" y="611.0" width="47.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.2" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,689 samples, 0.25%)</title><rect x="366.2" y="595.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,689 samples, 0.25%)</title><rect x="366.2" y="579.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,689 samples, 0.25%)</title><rect x="366.2" y="563.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,689 samples, 0.25%)</title><rect x="366.2" y="547.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,689 samples, 0.25%)</title><rect x="366.2" y="531.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,689 samples, 0.25%)</title><rect x="366.2" y="515.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="369.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1,237 samples, 0.18%)</title><rect x="369.2" y="595.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,237 samples, 0.18%)</title><rect x="369.2" y="579.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,237 samples, 0.18%)</title><rect x="369.2" y="563.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="372.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,237 samples, 0.18%)</title><rect x="369.2" y="547.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,237 samples, 0.18%)</title><rect x="369.2" y="531.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,237 samples, 0.18%)</title><rect x="369.2" y="515.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="372.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2,290 samples, 0.34%)</title><rect x="371.3" y="595.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.3" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (394 samples, 0.06%)</title><rect x="371.3" y="579.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="374.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (399 samples, 0.06%)</title><rect x="372.0" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (399 samples, 0.06%)</title><rect x="372.0" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (399 samples, 0.06%)</title><rect x="372.0" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.0" y="558.0"></text>
</g>
<g>
<title>byte[] (399 samples, 0.06%)</title><rect x="372.0" y="531.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="375.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (472 samples, 0.07%)</title><rect x="372.7" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (472 samples, 0.07%)</title><rect x="372.7" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.7" y="574.0"></text>
</g>
<g>
<title>byte[] (472 samples, 0.07%)</title><rect x="372.7" y="547.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="375.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,025 samples, 0.15%)</title><rect x="373.5" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,025 samples, 0.15%)</title><rect x="373.5" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (386 samples, 0.06%)</title><rect x="373.5" y="547.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="376.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (639 samples, 0.09%)</title><rect x="374.2" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.2" y="558.0"></text>
</g>
<g>
<title>byte[] (639 samples, 0.09%)</title><rect x="374.2" y="531.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="377.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6,994 samples, 1.03%)</title><rect x="375.3" y="595.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,994 samples, 1.03%)</title><rect x="375.3" y="579.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,994 samples, 1.03%)</title><rect x="375.3" y="563.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.3" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (241 samples, 0.04%)</title><rect x="375.3" y="547.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="378.3" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (403 samples, 0.06%)</title><rect x="375.7" y="547.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="378.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (749 samples, 0.11%)</title><rect x="376.4" y="547.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="379.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (221 samples, 0.03%)</title><rect x="377.7" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="380.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (522 samples, 0.08%)</title><rect x="378.1" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (522 samples, 0.08%)</title><rect x="378.1" y="531.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.get$Lambda (522 samples, 0.08%)</title><rect x="378.1" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.1" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$172 (522 samples, 0.08%)</title><rect x="378.1" y="499.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="381.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (506 samples, 0.07%)</title><rect x="379.0" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (506 samples, 0.07%)</title><rect x="379.0" y="531.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="382.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,598 samples, 0.53%)</title><rect x="379.9" y="547.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.9" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (3,598 samples, 0.53%)</title><rect x="379.9" y="531.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,598 samples, 0.53%)</title><rect x="379.9" y="515.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (883 samples, 0.13%)</title><rect x="379.9" y="499.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (883 samples, 0.13%)</title><rect x="379.9" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (883 samples, 0.13%)</title><rect x="379.9" y="467.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (883 samples, 0.13%)</title><rect x="379.9" y="451.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (883 samples, 0.13%)</title><rect x="379.9" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (883 samples, 0.13%)</title><rect x="379.9" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (883 samples, 0.13%)</title><rect x="379.9" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (883 samples, 0.13%)</title><rect x="379.9" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (883 samples, 0.13%)</title><rect x="379.9" y="371.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="382.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,548 samples, 0.23%)</title><rect x="381.4" y="499.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.4" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,548 samples, 0.23%)</title><rect x="381.4" y="483.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (760 samples, 0.11%)</title><rect x="381.4" y="467.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (760 samples, 0.11%)</title><rect x="381.4" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (760 samples, 0.11%)</title><rect x="381.4" y="435.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="384.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (788 samples, 0.12%)</title><rect x="382.7" y="467.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.7" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (788 samples, 0.12%)</title><rect x="382.7" y="451.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="385.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,167 samples, 0.17%)</title><rect x="384.1" y="499.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,167 samples, 0.17%)</title><rect x="384.1" y="483.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="387.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (754 samples, 0.11%)</title><rect x="386.1" y="547.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (754 samples, 0.11%)</title><rect x="386.1" y="531.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="389.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (15,117 samples, 2.23%)</title><rect x="387.5" y="595.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.5" y="606.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (734 samples, 0.11%)</title><rect x="387.5" y="579.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="390.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (978 samples, 0.14%)</title><rect x="388.7" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (978 samples, 0.14%)</title><rect x="388.7" y="563.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.7" y="574.0"></text>
</g>
<g>
<title>byte[] (978 samples, 0.14%)</title><rect x="388.7" y="547.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="391.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,994 samples, 0.29%)</title><rect x="390.4" y="579.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,994 samples, 0.29%)</title><rect x="390.4" y="563.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (747 samples, 0.11%)</title><rect x="390.4" y="547.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="393.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,247 samples, 0.18%)</title><rect x="391.7" y="547.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.7" y="558.0"></text>
</g>
<g>
<title>byte[] (1,247 samples, 0.18%)</title><rect x="391.7" y="531.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="394.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (11,411 samples, 1.68%)</title><rect x="393.9" y="579.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,348 samples, 0.49%)</title><rect x="393.9" y="563.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,348 samples, 0.49%)</title><rect x="393.9" y="547.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,428 samples, 0.21%)</title><rect x="393.9" y="531.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="396.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,920 samples, 0.28%)</title><rect x="396.4" y="531.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.4" y="542.0"></text>
</g>
<g>
<title>byte[] (1,920 samples, 0.28%)</title><rect x="396.4" y="515.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="399.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,703 samples, 0.25%)</title><rect x="399.7" y="563.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,703 samples, 0.25%)</title><rect x="399.7" y="547.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.7" y="558.0"></text>
</g>
<g>
<title>byte[] (902 samples, 0.13%)</title><rect x="399.7" y="531.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="402.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (801 samples, 0.12%)</title><rect x="401.3" y="531.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="404.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,597 samples, 0.24%)</title><rect x="402.7" y="563.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,597 samples, 0.24%)</title><rect x="402.7" y="547.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,597 samples, 0.24%)</title><rect x="402.7" y="531.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (748 samples, 0.11%)</title><rect x="402.7" y="515.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="405.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (849 samples, 0.13%)</title><rect x="404.0" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.0" y="526.0"></text>
</g>
<g>
<title>byte[] (849 samples, 0.13%)</title><rect x="404.0" y="499.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="407.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,769 samples, 0.26%)</title><rect x="405.5" y="563.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,769 samples, 0.26%)</title><rect x="405.5" y="547.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,769 samples, 0.26%)</title><rect x="405.5" y="531.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,769 samples, 0.26%)</title><rect x="405.5" y="515.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,769 samples, 0.26%)</title><rect x="405.5" y="499.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,769 samples, 0.26%)</title><rect x="405.5" y="483.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="408.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,994 samples, 0.44%)</title><rect x="408.5" y="563.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,026 samples, 0.15%)</title><rect x="408.5" y="547.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,026 samples, 0.15%)</title><rect x="408.5" y="531.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="411.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,213 samples, 0.18%)</title><rect x="410.3" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,213 samples, 0.18%)</title><rect x="410.3" y="531.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="413.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$414/1520858212.apply (755 samples, 0.11%)</title><rect x="412.4" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (755 samples, 0.11%)</title><rect x="412.4" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.4" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (755 samples, 0.11%)</title><rect x="412.4" y="515.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="415.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (9,962 samples, 1.47%)</title><rect x="413.7" y="723.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9,962 samples, 1.47%)</title><rect x="413.7" y="707.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9,962 samples, 1.47%)</title><rect x="413.7" y="691.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/991543014.run (9,962 samples, 1.47%)</title><rect x="413.7" y="675.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9,962 samples, 1.47%)</title><rect x="413.7" y="659.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (9,734 samples, 1.43%)</title><rect x="413.7" y="643.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (670 samples, 0.10%)</title><rect x="413.7" y="627.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (670 samples, 0.10%)</title><rect x="413.7" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$323/1646773514.get$Lambda (251 samples, 0.04%)</title><rect x="413.7" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$323 (251 samples, 0.04%)</title><rect x="413.7" y="579.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="416.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$329/2105044826.get$Lambda (419 samples, 0.06%)</title><rect x="414.2" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$329 (419 samples, 0.06%)</title><rect x="414.2" y="579.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="417.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (481 samples, 0.07%)</title><rect x="414.9" y="627.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="417.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (632 samples, 0.09%)</title><rect x="415.7" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (632 samples, 0.09%)</title><rect x="415.7" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (269 samples, 0.04%)</title><rect x="415.7" y="595.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="418.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (363 samples, 0.05%)</title><rect x="416.2" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (363 samples, 0.05%)</title><rect x="416.2" y="579.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="419.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7,951 samples, 1.17%)</title><rect x="416.8" y="627.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (7,951 samples, 1.17%)</title><rect x="416.8" y="611.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/473069041.run (6,924 samples, 1.02%)</title><rect x="416.8" y="595.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (6,924 samples, 1.02%)</title><rect x="416.8" y="579.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (6,924 samples, 1.02%)</title><rect x="416.8" y="563.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,985 samples, 0.29%)</title><rect x="416.8" y="547.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.8" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,360 samples, 0.20%)</title><rect x="416.8" y="531.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.8" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (490 samples, 0.07%)</title><rect x="416.8" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.8" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (490 samples, 0.07%)</title><rect x="416.8" y="499.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="419.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (870 samples, 0.13%)</title><rect x="417.7" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (870 samples, 0.13%)</title><rect x="417.7" y="499.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="420.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (625 samples, 0.09%)</title><rect x="419.2" y="531.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (625 samples, 0.09%)</title><rect x="419.2" y="515.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (625 samples, 0.09%)</title><rect x="419.2" y="499.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (396 samples, 0.06%)</title><rect x="419.2" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (396 samples, 0.06%)</title><rect x="419.2" y="467.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="422.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (229 samples, 0.03%)</title><rect x="419.9" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (229 samples, 0.03%)</title><rect x="419.9" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.9" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (229 samples, 0.03%)</title><rect x="419.9" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.9" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (229 samples, 0.03%)</title><rect x="419.9" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="422.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4,939 samples, 0.73%)</title><rect x="420.3" y="547.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (350 samples, 0.05%)</title><rect x="420.3" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.3" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (350 samples, 0.05%)</title><rect x="420.3" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (350 samples, 0.05%)</title><rect x="420.3" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (350 samples, 0.05%)</title><rect x="420.3" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.3" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (350 samples, 0.05%)</title><rect x="420.3" y="467.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="423.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4,589 samples, 0.68%)</title><rect x="420.9" y="531.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,634 samples, 0.24%)</title><rect x="420.9" y="515.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (346 samples, 0.05%)</title><rect x="420.9" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (346 samples, 0.05%)</title><rect x="420.9" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (346 samples, 0.05%)</title><rect x="420.9" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (346 samples, 0.05%)</title><rect x="420.9" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (346 samples, 0.05%)</title><rect x="420.9" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.9" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (346 samples, 0.05%)</title><rect x="420.9" y="419.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="423.9" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (446 samples, 0.07%)</title><rect x="421.5" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (446 samples, 0.07%)</title><rect x="421.5" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (446 samples, 0.07%)</title><rect x="421.5" y="467.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="424.5" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (397 samples, 0.06%)</title><rect x="422.3" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (397 samples, 0.06%)</title><rect x="422.3" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (397 samples, 0.06%)</title><rect x="422.3" y="467.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="425.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (441 samples, 0.06%)</title><rect x="423.0" y="499.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="426.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1,248 samples, 0.18%)</title><rect x="423.7" y="515.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (355 samples, 0.05%)</title><rect x="423.7" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (355 samples, 0.05%)</title><rect x="423.7" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (355 samples, 0.05%)</title><rect x="423.7" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (355 samples, 0.05%)</title><rect x="423.7" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="426.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (371 samples, 0.05%)</title><rect x="424.4" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (371 samples, 0.05%)</title><rect x="424.4" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (371 samples, 0.05%)</title><rect x="424.4" y="467.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="427.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (522 samples, 0.08%)</title><rect x="425.0" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (522 samples, 0.08%)</title><rect x="425.0" y="483.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="428.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,707 samples, 0.25%)</title><rect x="425.9" y="515.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (396 samples, 0.06%)</title><rect x="425.9" y="499.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="428.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,311 samples, 0.19%)</title><rect x="426.6" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (439 samples, 0.06%)</title><rect x="426.6" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (439 samples, 0.06%)</title><rect x="426.6" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (439 samples, 0.06%)</title><rect x="426.6" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (439 samples, 0.06%)</title><rect x="426.6" y="435.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="429.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (872 samples, 0.13%)</title><rect x="427.4" y="483.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (872 samples, 0.13%)</title><rect x="427.4" y="467.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (620 samples, 0.09%)</title><rect x="427.4" y="451.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="430.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (252 samples, 0.04%)</title><rect x="428.4" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (252 samples, 0.04%)</title><rect x="428.4" y="435.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="431.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,027 samples, 0.15%)</title><rect x="428.9" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,027 samples, 0.15%)</title><rect x="428.9" y="579.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (1,027 samples, 0.15%)</title><rect x="428.9" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,027 samples, 0.15%)</title><rect x="428.9" y="547.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,027 samples, 0.15%)</title><rect x="428.9" y="531.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,027 samples, 0.15%)</title><rect x="428.9" y="515.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,027 samples, 0.15%)</title><rect x="428.9" y="499.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/1265510959.accept (1,027 samples, 0.15%)</title><rect x="428.9" y="483.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,027 samples, 0.15%)</title><rect x="428.9" y="467.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,027 samples, 0.15%)</title><rect x="428.9" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,027 samples, 0.15%)</title><rect x="428.9" y="435.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,027 samples, 0.15%)</title><rect x="428.9" y="419.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$455/816666687.apply (1,027 samples, 0.15%)</title><rect x="428.9" y="403.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1,027 samples, 0.15%)</title><rect x="428.9" y="387.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1,027 samples, 0.15%)</title><rect x="428.9" y="371.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="431.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (228 samples, 0.03%)</title><rect x="430.7" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (228 samples, 0.03%)</title><rect x="430.7" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (228 samples, 0.03%)</title><rect x="430.7" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (228 samples, 0.03%)</title><rect x="430.7" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.run (285,658 samples, 42.08%)</title><rect x="431.1" y="755.0" width="496.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.1" y="766.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (285,658 samples, 42.08%)</title><rect x="431.1" y="739.0" width="496.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.1" y="750.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$142/964833577.process (273,494 samples, 40.29%)</title><rect x="431.1" y="723.0" width="475.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.1" y="734.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$142/964833577...</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (273,494 samples, 40.29%)</title><rect x="431.1" y="707.0" width="475.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.1" y="718.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (273,494 samples, 40.29%)</title><rect x="431.1" y="691.0" width="475.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.1" y="702.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy (265,991 samples, 39.18%)</title><rect x="431.1" y="675.0" width="462.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.1" y="686.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleChangeOrProxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,613 samples, 0.38%)</title><rect x="431.1" y="659.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,613 samples, 0.38%)</title><rect x="431.1" y="643.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="434.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$156/648111395.get$Lambda (464 samples, 0.07%)</title><rect x="431.1" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$156 (464 samples, 0.07%)</title><rect x="431.1" y="611.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="434.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$413/1841270497.get$Lambda (2,149 samples, 0.32%)</title><rect x="431.9" y="627.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$413 (2,149 samples, 0.32%)</title><rect x="431.9" y="611.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="434.9" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (38,387 samples, 5.65%)</title><rect x="435.6" y="659.0" width="66.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.6" y="670.0">java/ut..</text>
</g>
<g>
<title>java.lang.StringBuilder (2,319 samples, 0.34%)</title><rect x="435.6" y="643.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="438.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2,615 samples, 0.39%)</title><rect x="439.6" y="643.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.6" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2,615 samples, 0.39%)</title><rect x="439.6" y="627.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.6" y="638.0"></text>
</g>
<g>
<title>byte[] (2,615 samples, 0.39%)</title><rect x="439.6" y="611.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="442.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13,883 samples, 2.05%)</title><rect x="444.2" y="643.0" width="24.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.2" y="654.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (13,883 samples, 2.05%)</title><rect x="444.2" y="627.0" width="24.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.2" y="638.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13,883 samples, 2.05%)</title><rect x="444.2" y="611.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.2" y="622.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (13,883 samples, 2.05%)</title><rect x="444.2" y="595.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.2" y="606.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (13,883 samples, 2.05%)</title><rect x="444.2" y="579.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.2" y="590.0">j..</text>
</g>
<g>
<title>byte[] (10,477 samples, 1.54%)</title><rect x="444.2" y="563.0" width="18.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="447.2" y="574.0"></text>
</g>
<g>
<title>byte[] (3,406 samples, 0.50%)</title><rect x="462.4" y="563.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (14,059 samples, 2.07%)</title><rect x="468.3" y="643.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.3" y="654.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14,059 samples, 2.07%)</title><rect x="468.3" y="627.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.3" y="638.0">j..</text>
</g>
<g>
<title>java.lang.String (2,174 samples, 0.32%)</title><rect x="468.3" y="611.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="471.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11,885 samples, 1.75%)</title><rect x="472.1" y="611.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.1" y="622.0"></text>
</g>
<g>
<title>byte[] (8,015 samples, 1.18%)</title><rect x="472.1" y="595.0" width="13.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="475.1" y="606.0"></text>
</g>
<g>
<title>byte[] (3,870 samples, 0.57%)</title><rect x="486.0" y="595.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5,511 samples, 0.81%)</title><rect x="492.7" y="643.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3,328 samples, 0.49%)</title><rect x="492.7" y="627.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3,328 samples, 0.49%)</title><rect x="492.7" y="611.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="495.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2,183 samples, 0.32%)</title><rect x="498.5" y="627.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.5" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (2,183 samples, 0.32%)</title><rect x="498.5" y="611.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="501.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3,996 samples, 0.59%)</title><rect x="502.3" y="659.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3,996 samples, 0.59%)</title><rect x="502.3" y="643.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2,415 samples, 0.36%)</title><rect x="502.3" y="627.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="505.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,573 samples, 0.23%)</title><rect x="506.5" y="627.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,573 samples, 0.23%)</title><rect x="506.5" y="611.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="509.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4,288 samples, 0.63%)</title><rect x="509.3" y="659.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,288 samples, 0.63%)</title><rect x="509.3" y="643.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,288 samples, 0.63%)</title><rect x="509.3" y="627.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.3" y="638.0"></text>
</g>
<g>
<title>java.lang.String (1,494 samples, 0.22%)</title><rect x="509.3" y="611.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="512.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,794 samples, 0.41%)</title><rect x="511.9" y="611.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.9" y="622.0"></text>
</g>
<g>
<title>byte[] (2,794 samples, 0.41%)</title><rect x="511.9" y="595.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="514.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$153/1356845972.execute (11,130 samples, 1.64%)</title><rect x="516.7" y="659.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$9 (11,130 samples, 1.64%)</title><rect x="516.7" y="643.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.localUpsert (11,130 samples, 1.64%)</title><rect x="516.7" y="627.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,638 samples, 0.54%)</title><rect x="516.7" y="611.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,638 samples, 0.54%)</title><rect x="516.7" y="595.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$155/1908187639.get$Lambda (3,638 samples, 0.54%)</title><rect x="516.7" y="579.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.7" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$155 (3,638 samples, 0.54%)</title><rect x="516.7" y="563.0" width="6.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="519.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (7,492 samples, 1.10%)</title><rect x="523.0" y="611.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (7,492 samples, 1.10%)</title><rect x="523.0" y="595.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (4,410 samples, 0.65%)</title><rect x="523.0" y="579.0" width="7.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="526.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3,028 samples, 0.45%)</title><rect x="530.7" y="579.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="533.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$154/1918512428.resolve (9,632 samples, 1.42%)</title><rect x="536.1" y="659.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.resolveChange (9,632 samples, 1.42%)</title><rect x="536.1" y="643.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,282 samples, 0.19%)</title><rect x="536.1" y="627.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,282 samples, 0.19%)</title><rect x="536.1" y="611.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (861 samples, 0.13%)</title><rect x="536.1" y="595.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="539.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (418 samples, 0.06%)</title><rect x="537.6" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (418 samples, 0.06%)</title><rect x="537.6" y="579.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="540.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.atLeastAsync (8,350 samples, 1.23%)</title><rect x="538.3" y="627.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (459 samples, 0.07%)</title><rect x="538.3" y="611.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="541.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (416 samples, 0.06%)</title><rect x="539.1" y="611.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="542.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (590 samples, 0.09%)</title><rect x="539.8" y="611.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="542.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6,031 samples, 0.89%)</title><rect x="540.8" y="611.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$215/1222288581.accept (6,031 samples, 0.89%)</title><rect x="540.8" y="595.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.lambda$atLeastAsync$1 (6,031 samples, 0.89%)</title><rect x="540.8" y="579.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,094 samples, 0.31%)</title><rect x="540.8" y="563.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,094 samples, 0.31%)</title><rect x="540.8" y="547.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver$$Lambda$216/1120270908.get$Lambda (2,094 samples, 0.31%)</title><rect x="540.8" y="531.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.8" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ConflictResolver$$Lambda$216 (2,094 samples, 0.31%)</title><rect x="540.8" y="515.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="543.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3,937 samples, 0.58%)</title><rect x="544.5" y="563.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,937 samples, 0.58%)</title><rect x="544.5" y="547.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,430 samples, 0.36%)</title><rect x="544.5" y="531.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="547.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (418 samples, 0.06%)</title><rect x="548.7" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (418 samples, 0.06%)</title><rect x="548.7" y="515.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="551.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,085 samples, 0.16%)</title><rect x="549.4" y="531.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,085 samples, 0.16%)</title><rect x="549.4" y="515.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,085 samples, 0.16%)</title><rect x="549.4" y="499.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (854 samples, 0.13%)</title><rect x="551.3" y="611.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (377 samples, 0.06%)</title><rect x="551.3" y="595.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="554.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Object (477 samples, 0.07%)</title><rect x="552.0" y="595.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="555.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (157,055 samples, 23.14%)</title><rect x="552.8" y="659.0" width="273.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.8" y="670.0">ru/mail/polis/service/zvladn7/Service..</text>
</g>
<g>
<title>java.util.ArrayList (506 samples, 0.07%)</title><rect x="552.8" y="643.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="555.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (155,956 samples, 22.97%)</title><rect x="553.7" y="643.0" width="271.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.7" y="654.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/HashSet.iterator (817 samples, 0.12%)</title><rect x="553.7" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (817 samples, 0.12%)</title><rect x="553.7" y="611.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.7" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (817 samples, 0.12%)</title><rect x="553.7" y="595.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="556.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$160/18761757.accept (155,139 samples, 22.85%)</title><rect x="555.1" y="627.0" width="269.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.1" y="638.0">ru/mail/polis/service/zvladn7/Servic..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$3 (155,139 samples, 22.85%)</title><rect x="555.1" y="611.0" width="269.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.1" y="622.0">ru/mail/polis/service/zvladn7/Servic..</text>
</g>
<g>
<title>java/util/ArrayList.add (1,150 samples, 0.17%)</title><rect x="555.1" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,150 samples, 0.17%)</title><rect x="555.1" y="579.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,150 samples, 0.17%)</title><rect x="555.1" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,150 samples, 0.17%)</title><rect x="555.1" y="547.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,150 samples, 0.17%)</title><rect x="555.1" y="531.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,124 samples, 0.17%)</title><rect x="555.1" y="515.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="558.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2,761 samples, 0.41%)</title><rect x="557.1" y="595.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,761 samples, 0.41%)</title><rect x="557.1" y="579.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1,508 samples, 0.22%)</title><rect x="557.1" y="563.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="560.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,253 samples, 0.18%)</title><rect x="559.7" y="563.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,253 samples, 0.18%)</title><rect x="559.7" y="547.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,253 samples, 0.18%)</title><rect x="559.7" y="531.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="562.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (86,381 samples, 12.73%)</title><rect x="561.9" y="595.0" width="150.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.9" y="606.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (86,381 samples, 12.73%)</title><rect x="561.9" y="579.0" width="150.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.9" y="590.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (86,381 samples, 12.73%)</title><rect x="561.9" y="563.0" width="150.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (86,381 samples, 12.73%)</title><rect x="561.9" y="547.0" width="150.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.9" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (601 samples, 0.09%)</title><rect x="561.9" y="531.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (601 samples, 0.09%)</title><rect x="561.9" y="515.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$211/258026192.get$Lambda (601 samples, 0.09%)</title><rect x="561.9" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$211 (601 samples, 0.09%)</title><rect x="561.9" y="483.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="564.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3,050 samples, 0.45%)</title><rect x="563.0" y="531.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,050 samples, 0.45%)</title><rect x="563.0" y="515.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,699 samples, 0.25%)</title><rect x="563.0" y="499.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="566.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,351 samples, 0.20%)</title><rect x="565.9" y="499.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,351 samples, 0.20%)</title><rect x="565.9" y="483.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,351 samples, 0.20%)</title><rect x="565.9" y="467.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="568.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3,184 samples, 0.47%)</title><rect x="568.3" y="531.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,184 samples, 0.47%)</title><rect x="568.3" y="515.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,778 samples, 0.26%)</title><rect x="568.3" y="499.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="571.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,406 samples, 0.21%)</title><rect x="571.3" y="499.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,406 samples, 0.21%)</title><rect x="571.3" y="483.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,406 samples, 0.21%)</title><rect x="571.3" y="467.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="574.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2,151 samples, 0.32%)</title><rect x="573.8" y="531.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="576.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (2,783 samples, 0.41%)</title><rect x="577.8" y="531.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="580.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (926 samples, 0.14%)</title><rect x="582.6" y="531.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (39,048 samples, 5.75%)</title><rect x="584.2" y="531.0" width="67.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.2" y="542.0">jdk/int..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4,477 samples, 0.66%)</title><rect x="584.2" y="515.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.2" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3,632 samples, 0.54%)</title><rect x="584.2" y="499.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.2" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,272 samples, 0.19%)</title><rect x="584.2" y="483.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.2" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,272 samples, 0.19%)</title><rect x="584.2" y="467.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="587.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,360 samples, 0.35%)</title><rect x="586.4" y="483.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,212 samples, 0.33%)</title><rect x="586.4" y="467.0" width="3.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="589.4" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (148 samples, 0.02%)</title><rect x="590.3" y="467.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (845 samples, 0.12%)</title><rect x="590.5" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (845 samples, 0.12%)</title><rect x="590.5" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (845 samples, 0.12%)</title><rect x="590.5" y="467.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$11/2018699554.get (845 samples, 0.12%)</title><rect x="590.5" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (845 samples, 0.12%)</title><rect x="590.5" y="435.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="593.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15,969 samples, 2.35%)</title><rect x="592.0" y="515.0" width="27.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.0" y="526.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15,969 samples, 2.35%)</title><rect x="592.0" y="499.0" width="27.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.0" y="510.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (605 samples, 0.09%)</title><rect x="592.0" y="483.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="595.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,038 samples, 0.15%)</title><rect x="593.0" y="483.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="596.0" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,054 samples, 0.30%)</title><rect x="594.8" y="483.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="597.8" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (705 samples, 0.10%)</title><rect x="598.4" y="483.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="601.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,171 samples, 0.17%)</title><rect x="599.6" y="483.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,171 samples, 0.17%)</title><rect x="599.6" y="467.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.get$Lambda (1,171 samples, 0.17%)</title><rect x="599.6" y="451.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.6" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$172 (1,171 samples, 0.17%)</title><rect x="599.6" y="435.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="602.6" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (7,459 samples, 1.10%)</title><rect x="601.7" y="483.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7,459 samples, 1.10%)</title><rect x="601.7" y="467.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (7,459 samples, 1.10%)</title><rect x="601.7" y="451.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7,459 samples, 1.10%)</title><rect x="601.7" y="435.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,740 samples, 0.55%)</title><rect x="601.7" y="419.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (2,506 samples, 0.37%)</title><rect x="601.7" y="403.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,506 samples, 0.37%)</title><rect x="601.7" y="387.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,506 samples, 0.37%)</title><rect x="601.7" y="371.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,506 samples, 0.37%)</title><rect x="601.7" y="355.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,506 samples, 0.37%)</title><rect x="601.7" y="339.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,506 samples, 0.37%)</title><rect x="601.7" y="323.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,506 samples, 0.37%)</title><rect x="601.7" y="307.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,380 samples, 0.35%)</title><rect x="601.7" y="291.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="604.7" y="302.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1,234 samples, 0.18%)</title><rect x="606.0" y="403.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.0" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1,234 samples, 0.18%)</title><rect x="606.0" y="387.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="609.0" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,963 samples, 0.29%)</title><rect x="608.2" y="419.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.2" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,963 samples, 0.29%)</title><rect x="608.2" y="403.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (945 samples, 0.14%)</title><rect x="608.2" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (945 samples, 0.14%)</title><rect x="608.2" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (945 samples, 0.14%)</title><rect x="608.2" y="355.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="611.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (1,018 samples, 0.15%)</title><rect x="609.8" y="387.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.8" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,018 samples, 0.15%)</title><rect x="609.8" y="371.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="612.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,756 samples, 0.26%)</title><rect x="611.6" y="419.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,756 samples, 0.26%)</title><rect x="611.6" y="403.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="614.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,255 samples, 0.18%)</title><rect x="614.6" y="483.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.6" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,255 samples, 0.18%)</title><rect x="614.6" y="467.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="617.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,682 samples, 0.25%)</title><rect x="616.8" y="483.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.8" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,682 samples, 0.25%)</title><rect x="616.8" y="467.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="619.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (598 samples, 0.09%)</title><rect x="619.7" y="515.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="622.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (12,580 samples, 1.85%)</title><rect x="620.8" y="515.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.8" y="526.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (12,580 samples, 1.85%)</title><rect x="620.8" y="499.0" width="21.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.8" y="510.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10,994 samples, 1.62%)</title><rect x="620.8" y="483.0" width="19.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (10,994 samples, 1.62%)</title><rect x="620.8" y="467.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.8" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10,994 samples, 1.62%)</title><rect x="620.8" y="451.0" width="19.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.8" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10,994 samples, 1.62%)</title><rect x="620.8" y="435.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.8" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3,147 samples, 0.46%)</title><rect x="620.8" y="419.0" width="5.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="623.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3,915 samples, 0.58%)</title><rect x="626.3" y="419.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.3" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3,915 samples, 0.58%)</title><rect x="626.3" y="403.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.3" y="414.0"></text>
</g>
<g>
<title>byte[] (3,915 samples, 0.58%)</title><rect x="626.3" y="387.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="629.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,932 samples, 0.58%)</title><rect x="633.1" y="419.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,932 samples, 0.58%)</title><rect x="633.1" y="403.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,932 samples, 0.58%)</title><rect x="633.1" y="387.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.1" y="398.0"></text>
</g>
<g>
<title>byte[] (3,932 samples, 0.58%)</title><rect x="633.1" y="371.0" width="6.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="636.1" y="382.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (1,586 samples, 0.23%)</title><rect x="639.9" y="483.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="642.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2,073 samples, 0.31%)</title><rect x="642.7" y="515.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,073 samples, 0.31%)</title><rect x="642.7" y="499.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="645.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,351 samples, 0.49%)</title><rect x="646.3" y="515.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.3" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (858 samples, 0.13%)</title><rect x="646.3" y="499.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="649.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,001 samples, 0.15%)</title><rect x="647.8" y="499.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,001 samples, 0.15%)</title><rect x="647.8" y="483.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="650.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,492 samples, 0.22%)</title><rect x="649.5" y="499.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,492 samples, 0.22%)</title><rect x="649.5" y="483.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="652.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (23,628 samples, 3.48%)</title><rect x="652.1" y="531.0" width="41.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.1" y="542.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (810 samples, 0.12%)</title><rect x="652.1" y="515.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (2,571 samples, 0.38%)</title><rect x="653.5" y="515.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="656.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (222 samples, 0.03%)</title><rect x="658.0" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="661.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (813 samples, 0.12%)</title><rect x="658.3" y="515.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (813 samples, 0.12%)</title><rect x="658.3" y="499.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="661.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (19,212 samples, 2.83%)</title><rect x="659.8" y="515.0" width="33.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (19,212 samples, 2.83%)</title><rect x="659.8" y="499.0" width="33.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.8" y="510.0">jd..</text>
</g>
<g>
<title>java.lang.Class[] (1,558 samples, 0.23%)</title><rect x="659.8" y="483.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="662.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,151 samples, 0.17%)</title><rect x="662.5" y="483.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="665.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (1,287 samples, 0.19%)</title><rect x="664.5" y="483.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="667.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (7,111 samples, 1.05%)</title><rect x="666.7" y="483.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (7,111 samples, 1.05%)</title><rect x="666.7" y="467.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.7" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (7,111 samples, 1.05%)</title><rect x="666.7" y="451.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.7" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (7,111 samples, 1.05%)</title><rect x="666.7" y="435.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.7" y="446.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (6,210 samples, 0.91%)</title><rect x="666.7" y="419.0" width="10.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="669.7" y="430.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (901 samples, 0.13%)</title><rect x="677.5" y="419.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5,701 samples, 0.84%)</title><rect x="679.1" y="483.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.1" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (5,701 samples, 0.84%)</title><rect x="679.1" y="467.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.1" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2,878 samples, 0.42%)</title><rect x="679.1" y="451.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.1" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2,878 samples, 0.42%)</title><rect x="679.1" y="435.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2,878 samples, 0.42%)</title><rect x="679.1" y="419.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.1" y="430.0"></text>
</g>
<g>
<title>java.lang.ref.WeakReference (2,878 samples, 0.42%)</title><rect x="679.1" y="403.0" width="5.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="682.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2,823 samples, 0.42%)</title><rect x="684.1" y="451.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (2,037 samples, 0.30%)</title><rect x="684.1" y="435.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (2,037 samples, 0.30%)</title><rect x="684.1" y="419.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="687.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (786 samples, 0.12%)</title><rect x="687.6" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (786 samples, 0.12%)</title><rect x="687.6" y="419.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="690.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2,404 samples, 0.35%)</title><rect x="689.0" y="483.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.0" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2,404 samples, 0.35%)</title><rect x="689.0" y="467.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.0" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2,404 samples, 0.35%)</title><rect x="689.0" y="451.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="692.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (10,878 samples, 1.60%)</title><rect x="693.2" y="531.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2,102 samples, 0.31%)</title><rect x="693.2" y="515.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (869 samples, 0.13%)</title><rect x="693.2" y="499.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="696.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,233 samples, 0.18%)</title><rect x="694.7" y="499.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,233 samples, 0.18%)</title><rect x="694.7" y="483.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,201 samples, 0.18%)</title><rect x="694.7" y="467.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="697.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,510 samples, 0.22%)</title><rect x="696.8" y="515.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="699.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7,266 samples, 1.07%)</title><rect x="699.4" y="515.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,296 samples, 0.19%)</title><rect x="699.4" y="499.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,296 samples, 0.19%)</title><rect x="699.4" y="483.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/2054707338.get$Lambda (705 samples, 0.10%)</title><rect x="699.4" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$191 (705 samples, 0.10%)</title><rect x="699.4" y="451.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="702.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/481626032.get$Lambda (591 samples, 0.09%)</title><rect x="700.7" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$200 (591 samples, 0.09%)</title><rect x="700.7" y="451.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="703.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5,970 samples, 0.88%)</title><rect x="701.7" y="499.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5,970 samples, 0.88%)</title><rect x="701.7" y="483.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,947 samples, 0.43%)</title><rect x="701.7" y="467.0" width="5.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="704.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3,023 samples, 0.45%)</title><rect x="706.8" y="467.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3,023 samples, 0.45%)</title><rect x="706.8" y="451.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3,023 samples, 0.45%)</title><rect x="706.8" y="435.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="709.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$156/648111395.apply (64,847 samples, 9.55%)</title><rect x="712.1" y="595.0" width="112.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.1" y="606.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleChangeOrProxy$12 (64,847 samples, 9.55%)</title><rect x="712.1" y="579.0" width="112.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.1" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (18,040 samples, 2.66%)</title><rect x="712.1" y="563.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.1" y="574.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1,802 samples, 0.27%)</title><rect x="712.1" y="547.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="715.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (16,238 samples, 2.39%)</title><rect x="715.2" y="547.0" width="28.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.2" y="558.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14,976 samples, 2.21%)</title><rect x="715.2" y="531.0" width="26.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.2" y="542.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14,976 samples, 2.21%)</title><rect x="715.2" y="515.0" width="26.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.2" y="526.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (792 samples, 0.12%)</title><rect x="715.2" y="499.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="718.2" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,077 samples, 0.16%)</title><rect x="716.6" y="499.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="719.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,031 samples, 0.30%)</title><rect x="718.4" y="499.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="721.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (665 samples, 0.10%)</title><rect x="722.0" y="499.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="725.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,238 samples, 0.18%)</title><rect x="723.1" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,238 samples, 0.18%)</title><rect x="723.1" y="483.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.get$Lambda (1,238 samples, 0.18%)</title><rect x="723.1" y="467.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.1" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$172 (1,238 samples, 0.18%)</title><rect x="723.1" y="451.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="726.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,350 samples, 0.20%)</title><rect x="725.3" y="499.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.3" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,350 samples, 0.20%)</title><rect x="725.3" y="483.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="728.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5,962 samples, 0.88%)</title><rect x="727.6" y="499.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$172/214915877.accept (5,962 samples, 0.88%)</title><rect x="727.6" y="483.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5,962 samples, 0.88%)</title><rect x="727.6" y="467.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,357 samples, 0.35%)</title><rect x="727.6" y="451.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$176/1906951774.accept (2,357 samples, 0.35%)</title><rect x="727.6" y="435.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,357 samples, 0.35%)</title><rect x="727.6" y="419.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,357 samples, 0.35%)</title><rect x="727.6" y="403.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,357 samples, 0.35%)</title><rect x="727.6" y="387.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,357 samples, 0.35%)</title><rect x="727.6" y="371.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,357 samples, 0.35%)</title><rect x="727.6" y="355.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,357 samples, 0.35%)</title><rect x="727.6" y="339.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,302 samples, 0.34%)</title><rect x="727.6" y="323.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="730.6" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,941 samples, 0.29%)</title><rect x="731.7" y="451.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.7" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,941 samples, 0.29%)</title><rect x="731.7" y="435.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,059 samples, 0.16%)</title><rect x="731.7" y="419.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,059 samples, 0.16%)</title><rect x="731.7" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,059 samples, 0.16%)</title><rect x="731.7" y="387.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="734.7" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (882 samples, 0.13%)</title><rect x="733.6" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (882 samples, 0.13%)</title><rect x="733.6" y="403.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,664 samples, 0.25%)</title><rect x="735.1" y="451.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,664 samples, 0.25%)</title><rect x="735.1" y="435.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="738.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,861 samples, 0.27%)</title><rect x="738.0" y="499.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,861 samples, 0.27%)</title><rect x="738.0" y="483.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="741.0" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1,262 samples, 0.19%)</title><rect x="741.2" y="531.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (1,262 samples, 0.19%)</title><rect x="741.2" y="515.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.2" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (1,262 samples, 0.19%)</title><rect x="741.2" y="499.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="744.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,186 samples, 0.32%)</title><rect x="743.4" y="563.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,186 samples, 0.32%)</title><rect x="743.4" y="547.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,186 samples, 0.32%)</title><rect x="743.4" y="531.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (920 samples, 0.14%)</title><rect x="743.4" y="515.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="746.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,266 samples, 0.19%)</title><rect x="745.0" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.0" y="526.0"></text>
</g>
<g>
<title>byte[] (1,266 samples, 0.19%)</title><rect x="745.0" y="499.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="748.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.getBodyPublisher (1,374 samples, 0.20%)</title><rect x="747.2" y="563.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (1,374 samples, 0.20%)</title><rect x="747.2" y="547.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (1,374 samples, 0.20%)</title><rect x="747.2" y="531.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="750.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.requestBuilderFor (43,247 samples, 6.37%)</title><rect x="749.6" y="563.0" width="75.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.6" y="574.0">ru/mail/..</text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2,496 samples, 0.37%)</title><rect x="749.6" y="547.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2,496 samples, 0.37%)</title><rect x="749.6" y="531.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (705 samples, 0.10%)</title><rect x="749.6" y="515.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="752.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,791 samples, 0.26%)</title><rect x="750.8" y="515.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,791 samples, 0.26%)</title><rect x="750.8" y="499.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="753.8" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.dividedBy (17,548 samples, 2.59%)</title><rect x="754.0" y="547.0" width="30.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.0" y="558.0">ja..</text>
</g>
<g>
<title>java/math/BigDecimal.divide (1,729 samples, 0.25%)</title><rect x="754.0" y="531.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.0" y="542.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (1,729 samples, 0.25%)</title><rect x="754.0" y="515.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.0" y="526.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divide (1,729 samples, 0.25%)</title><rect x="754.0" y="499.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.0" y="510.0"></text>
</g>
<g>
<title>java/math/BigDecimal.divideAndRound (1,729 samples, 0.25%)</title><rect x="754.0" y="483.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.0" y="494.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (1,729 samples, 0.25%)</title><rect x="754.0" y="467.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.0" y="478.0"></text>
</g>
<g>
<title>java.math.BigDecimal (1,729 samples, 0.25%)</title><rect x="754.0" y="451.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="757.0" y="462.0"></text>
</g>
<g>
<title>java/time/Duration.create (12,514 samples, 1.84%)</title><rect x="757.0" y="531.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.0" y="542.0">j..</text>
</g>
<g>
<title>java/math/BigDecimal.movePointRight (1,611 samples, 0.24%)</title><rect x="757.0" y="515.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.0" y="526.0"></text>
</g>
<g>
<title>java.math.BigDecimal (1,611 samples, 0.24%)</title><rect x="757.0" y="499.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="760.0" y="510.0"></text>
</g>
<g>
<title>java/math/BigDecimal.toBigIntegerExact (2,624 samples, 0.39%)</title><rect x="759.8" y="515.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.8" y="526.0"></text>
</g>
<g>
<title>java/math/BigDecimal.inflated (2,624 samples, 0.39%)</title><rect x="759.8" y="499.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.8" y="510.0"></text>
</g>
<g>
<title>java/math/BigInteger.valueOf (2,624 samples, 0.39%)</title><rect x="759.8" y="483.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.8" y="494.0"></text>
</g>
<g>
<title>java.math.BigInteger (1,649 samples, 0.24%)</title><rect x="759.8" y="467.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="762.8" y="478.0"></text>
</g>
<g>
<title>java/math/BigInteger.&lt;init&gt; (975 samples, 0.14%)</title><rect x="762.6" y="467.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.6" y="478.0"></text>
</g>
<g>
<title>int[] (975 samples, 0.14%)</title><rect x="762.6" y="451.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="765.6" y="462.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainder (7,277 samples, 1.07%)</title><rect x="764.3" y="515.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.3" y="526.0"></text>
</g>
<g>
<title>java/math/BigInteger.divideAndRemainderKnuth (7,277 samples, 1.07%)</title><rect x="764.3" y="499.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.3" y="510.0"></text>
</g>
<g>
<title>java.math.MutableBigInteger (2,843 samples, 0.42%)</title><rect x="764.3" y="483.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="767.3" y="494.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (982 samples, 0.14%)</title><rect x="769.3" y="483.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.3" y="494.0"></text>
</g>
<g>
<title>int[] (982 samples, 0.14%)</title><rect x="769.3" y="467.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="772.3" y="478.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (1,774 samples, 0.26%)</title><rect x="771.0" y="483.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.0" y="494.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.divideKnuth (1,774 samples, 0.26%)</title><rect x="771.0" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.0" y="478.0"></text>
</g>
<g>
<title>java.math.MutableBigInteger (893 samples, 0.13%)</title><rect x="771.0" y="451.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="774.0" y="462.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.&lt;init&gt; (881 samples, 0.13%)</title><rect x="772.5" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (881 samples, 0.13%)</title><rect x="772.5" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.5" y="446.0"></text>
</g>
<g>
<title>int[] (881 samples, 0.13%)</title><rect x="772.5" y="419.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="775.5" y="430.0"></text>
</g>
<g>
<title>java/math/MutableBigInteger.toBigInteger (1,678 samples, 0.25%)</title><rect x="774.1" y="483.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.1" y="494.0"></text>
</g>
<g>
<title>java.math.BigInteger (1,678 samples, 0.25%)</title><rect x="774.1" y="467.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="777.1" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (1,002 samples, 0.15%)</title><rect x="777.0" y="515.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.0" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.create (1,002 samples, 0.15%)</title><rect x="777.0" y="499.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.0" y="510.0"></text>
</g>
<g>
<title>java.time.Duration (1,002 samples, 0.15%)</title><rect x="777.0" y="483.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="780.0" y="494.0"></text>
</g>
<g>
<title>java/time/Duration.toBigDecimalSeconds (3,305 samples, 0.49%)</title><rect x="778.7" y="531.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.7" y="542.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (1,585 samples, 0.23%)</title><rect x="778.7" y="515.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.7" y="526.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (1,585 samples, 0.23%)</title><rect x="778.7" y="499.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.7" y="510.0"></text>
</g>
<g>
<title>java/math/BigDecimal.add (1,585 samples, 0.23%)</title><rect x="778.7" y="483.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.7" y="494.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (1,585 samples, 0.23%)</title><rect x="778.7" y="467.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.7" y="478.0"></text>
</g>
<g>
<title>java.math.BigDecimal (1,585 samples, 0.23%)</title><rect x="778.7" y="451.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="781.7" y="462.0"></text>
</g>
<g>
<title>java/math/BigDecimal.valueOf (1,720 samples, 0.25%)</title><rect x="781.5" y="515.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.5" y="526.0"></text>
</g>
<g>
<title>java.math.BigDecimal (1,720 samples, 0.25%)</title><rect x="781.5" y="499.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="784.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3,419 samples, 0.50%)</title><rect x="784.5" y="547.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3,419 samples, 0.50%)</title><rect x="784.5" y="531.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3,419 samples, 0.50%)</title><rect x="784.5" y="515.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.5" y="526.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3,419 samples, 0.50%)</title><rect x="784.5" y="499.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,389 samples, 0.20%)</title><rect x="784.5" y="483.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,389 samples, 0.20%)</title><rect x="784.5" y="467.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="787.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$168/769855991.apply (2,030 samples, 0.30%)</title><rect x="786.9" y="483.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (2,030 samples, 0.30%)</title><rect x="786.9" y="467.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.9" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,142 samples, 0.17%)</title><rect x="786.9" y="451.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="789.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (888 samples, 0.13%)</title><rect x="788.9" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (888 samples, 0.13%)</title><rect x="788.9" y="435.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="791.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Nets.provideURI (19,784 samples, 2.91%)</title><rect x="790.4" y="547.0" width="34.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.4" y="558.0">ru..</text>
</g>
<g>
<title>java.net.URI (2,520 samples, 0.37%)</title><rect x="790.4" y="531.0" width="4.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="793.4" y="542.0"></text>
</g>
<g>
<title>java.net.URI (594 samples, 0.09%)</title><rect x="794.8" y="531.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,270 samples, 0.63%)</title><rect x="795.8" y="531.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (4,270 samples, 0.63%)</title><rect x="795.8" y="515.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,270 samples, 0.63%)</title><rect x="795.8" y="499.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,487 samples, 0.22%)</title><rect x="795.8" y="483.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1,487 samples, 0.22%)</title><rect x="795.8" y="467.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,783 samples, 0.41%)</title><rect x="798.4" y="483.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,783 samples, 0.41%)</title><rect x="798.4" y="467.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.4" y="478.0"></text>
</g>
<g>
<title>byte[] (2,631 samples, 0.39%)</title><rect x="798.4" y="451.0" width="4.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="801.4" y="462.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.02%)</title><rect x="803.0" y="451.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="806.0" y="462.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (12,400 samples, 1.83%)</title><rect x="803.2" y="531.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.2" y="542.0">j..</text>
</g>
<g>
<title>java.net.URI$Parser (1,347 samples, 0.20%)</title><rect x="803.2" y="515.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="806.2" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (11,053 samples, 1.63%)</title><rect x="805.6" y="515.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,987 samples, 0.29%)</title><rect x="805.6" y="499.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,987 samples, 0.29%)</title><rect x="805.6" y="483.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1,107 samples, 0.16%)</title><rect x="805.6" y="467.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="808.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (880 samples, 0.13%)</title><rect x="807.5" y="467.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.5" y="478.0"></text>
</g>
<g>
<title>byte[] (880 samples, 0.13%)</title><rect x="807.5" y="451.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="810.5" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (9,066 samples, 1.34%)</title><rect x="809.0" y="499.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,461 samples, 0.66%)</title><rect x="809.0" y="483.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,461 samples, 0.66%)</title><rect x="809.0" y="467.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,938 samples, 0.29%)</title><rect x="809.0" y="451.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="812.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,523 samples, 0.37%)</title><rect x="812.4" y="451.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.4" y="462.0"></text>
</g>
<g>
<title>byte[] (2,523 samples, 0.37%)</title><rect x="812.4" y="435.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="815.4" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4,605 samples, 0.68%)</title><rect x="816.8" y="483.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,121 samples, 0.31%)</title><rect x="816.8" y="467.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,121 samples, 0.31%)</title><rect x="816.8" y="451.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (899 samples, 0.13%)</title><rect x="816.8" y="435.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="819.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,222 samples, 0.18%)</title><rect x="818.3" y="435.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.3" y="446.0"></text>
</g>
<g>
<title>byte[] (1,222 samples, 0.18%)</title><rect x="818.3" y="419.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="821.3" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2,484 samples, 0.37%)</title><rect x="820.5" y="467.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.5" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2,484 samples, 0.37%)</title><rect x="820.5" y="451.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,484 samples, 0.37%)</title><rect x="820.5" y="435.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,484 samples, 0.37%)</title><rect x="820.5" y="419.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,178 samples, 0.17%)</title><rect x="820.5" y="403.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="823.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,306 samples, 0.19%)</title><rect x="822.5" y="403.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.5" y="414.0"></text>
</g>
<g>
<title>byte[] (1,306 samples, 0.19%)</title><rect x="822.5" y="387.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="825.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (593 samples, 0.09%)</title><rect x="824.8" y="643.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (593 samples, 0.09%)</title><rect x="824.8" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$160/18761757.get$Lambda (593 samples, 0.09%)</title><rect x="824.8" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$160 (593 samples, 0.09%)</title><rect x="824.8" y="595.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="827.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.nodesForKey (38,890 samples, 5.73%)</title><rect x="825.8" y="659.0" width="67.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.8" y="670.0">ru/mail..</text>
</g>
<g>
<title>java.util.HashSet (1,321 samples, 0.19%)</title><rect x="825.8" y="643.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="828.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,399 samples, 0.21%)</title><rect x="828.1" y="643.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (1,399 samples, 0.21%)</title><rect x="828.1" y="627.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="831.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4,898 samples, 0.72%)</title><rect x="830.6" y="643.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (4,898 samples, 0.72%)</title><rect x="830.6" y="627.0" width="8.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="833.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (4,894 samples, 0.72%)</title><rect x="839.1" y="643.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (4,894 samples, 0.72%)</title><rect x="839.1" y="627.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (4,894 samples, 0.72%)</title><rect x="839.1" y="611.0" width="8.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="842.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/topology/ServiceTopology.addReplicasForKey (26,378 samples, 3.89%)</title><rect x="847.6" y="643.0" width="45.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.6" y="654.0">ru/m..</text>
</g>
<g>
<title>java/util/HashSet.add (19,527 samples, 2.88%)</title><rect x="847.6" y="627.0" width="33.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.6" y="638.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.put (19,527 samples, 2.88%)</title><rect x="847.6" y="611.0" width="33.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.6" y="622.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.putVal (19,527 samples, 2.88%)</title><rect x="847.6" y="595.0" width="33.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.6" y="606.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.newNode (11,704 samples, 1.72%)</title><rect x="847.6" y="579.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.6" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (11,704 samples, 1.72%)</title><rect x="847.6" y="563.0" width="20.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="850.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (7,823 samples, 1.15%)</title><rect x="867.9" y="579.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.9" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (5,037 samples, 0.74%)</title><rect x="867.9" y="563.0" width="8.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="870.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,786 samples, 0.41%)</title><rect x="876.7" y="563.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3,703 samples, 0.55%)</title><rect x="881.5" y="627.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.5" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (3,703 samples, 0.55%)</title><rect x="881.5" y="611.0" width="6.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="884.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (3,069 samples, 0.45%)</title><rect x="888.0" y="627.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.0" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (3,069 samples, 0.45%)</title><rect x="888.0" y="611.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="891.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.wrapString (7,503 samples, 1.11%)</title><rect x="893.4" y="675.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,386 samples, 0.65%)</title><rect x="893.4" y="659.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,386 samples, 0.65%)</title><rect x="893.4" y="643.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.4" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,386 samples, 0.65%)</title><rect x="893.4" y="627.0" width="7.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="896.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/util/Bytes.toBytes (3,117 samples, 0.46%)</title><rect x="901.0" y="659.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (3,117 samples, 0.46%)</title><rect x="901.0" y="643.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.0" y="654.0"></text>
</g>
<g>
<title>byte[] (3,117 samples, 0.46%)</title><rect x="901.0" y="627.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.parseReplicasParameter (5,601 samples, 0.83%)</title><rect x="906.5" y="723.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.5" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ReplicasHolder (5,601 samples, 0.83%)</title><rect x="906.5" y="707.0" width="9.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="909.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.respond (6,563 samples, 0.97%)</title><rect x="916.2" y="723.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,247 samples, 0.18%)</title><rect x="916.2" y="707.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,247 samples, 0.18%)</title><rect x="916.2" y="691.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$219/102607679.get$Lambda (1,247 samples, 0.18%)</title><rect x="916.2" y="675.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.2" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$219 (1,247 samples, 0.18%)</title><rect x="916.2" y="659.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="919.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5,316 samples, 0.78%)</title><rect x="918.4" y="707.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5,316 samples, 0.78%)</title><rect x="918.4" y="691.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,571 samples, 0.53%)</title><rect x="918.4" y="675.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="921.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,745 samples, 0.26%)</title><rect x="924.6" y="675.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,745 samples, 0.26%)</title><rect x="924.6" y="659.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="927.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,381 samples, 0.20%)</title><rect x="927.6" y="803.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,381 samples, 0.20%)</title><rect x="927.6" y="787.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,381 samples, 0.20%)</title><rect x="927.6" y="771.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,381 samples, 0.20%)</title><rect x="927.6" y="755.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,381 samples, 0.20%)</title><rect x="927.6" y="739.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,381 samples, 0.20%)</title><rect x="927.6" y="723.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,381 samples, 0.20%)</title><rect x="927.6" y="707.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,381 samples, 0.20%)</title><rect x="927.6" y="691.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,381 samples, 0.20%)</title><rect x="927.6" y="675.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,381 samples, 0.20%)</title><rect x="927.6" y="659.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,381 samples, 0.20%)</title><rect x="927.6" y="643.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,381 samples, 0.20%)</title><rect x="927.6" y="627.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,381 samples, 0.20%)</title><rect x="927.6" y="611.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,381 samples, 0.20%)</title><rect x="927.6" y="595.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,381 samples, 0.20%)</title><rect x="927.6" y="579.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,381 samples, 0.20%)</title><rect x="927.6" y="563.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1,381 samples, 0.20%)</title><rect x="927.6" y="547.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,381 samples, 0.20%)</title><rect x="927.6" y="531.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="930.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (22,113 samples, 3.26%)</title><rect x="930.0" y="803.0" width="38.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.0" y="814.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (495 samples, 0.07%)</title><rect x="930.0" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (495 samples, 0.07%)</title><rect x="930.0" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$348/455497525.get$Lambda (363 samples, 0.05%)</title><rect x="930.0" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$348 (363 samples, 0.05%)</title><rect x="930.0" y="739.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="933.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1684015092.linkToTargetMethod (552 samples, 0.08%)</title><rect x="930.9" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (552 samples, 0.08%)</title><rect x="930.9" y="771.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$349/1518863725.get$Lambda (552 samples, 0.08%)</title><rect x="930.9" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$349 (552 samples, 0.08%)</title><rect x="930.9" y="739.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="933.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4,624 samples, 0.68%)</title><rect x="931.8" y="787.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$350/367522421.accept (3,737 samples, 0.55%)</title><rect x="931.8" y="771.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (3,737 samples, 0.55%)</title><rect x="931.8" y="755.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (3,737 samples, 0.55%)</title><rect x="931.8" y="739.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (3,737 samples, 0.55%)</title><rect x="931.8" y="723.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (3,737 samples, 0.55%)</title><rect x="931.8" y="707.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (3,737 samples, 0.55%)</title><rect x="931.8" y="691.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,737 samples, 0.55%)</title><rect x="931.8" y="675.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,737 samples, 0.55%)</title><rect x="931.8" y="659.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,737 samples, 0.55%)</title><rect x="931.8" y="643.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (3,737 samples, 0.55%)</title><rect x="931.8" y="627.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1370831110.run (3,737 samples, 0.55%)</title><rect x="931.8" y="611.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (3,737 samples, 0.55%)</title><rect x="931.8" y="595.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,068 samples, 0.16%)</title><rect x="931.8" y="579.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,068 samples, 0.16%)</title><rect x="931.8" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,068 samples, 0.16%)</title><rect x="931.8" y="547.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (539 samples, 0.08%)</title><rect x="931.8" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (539 samples, 0.08%)</title><rect x="931.8" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (539 samples, 0.08%)</title><rect x="931.8" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (539 samples, 0.08%)</title><rect x="931.8" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (539 samples, 0.08%)</title><rect x="931.8" y="467.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="934.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (529 samples, 0.08%)</title><rect x="932.8" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (529 samples, 0.08%)</title><rect x="932.8" y="515.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (529 samples, 0.08%)</title><rect x="932.8" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (529 samples, 0.08%)</title><rect x="932.8" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (529 samples, 0.08%)</title><rect x="932.8" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (525 samples, 0.08%)</title><rect x="932.8" y="451.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="935.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (354 samples, 0.05%)</title><rect x="933.7" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (354 samples, 0.05%)</title><rect x="933.7" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (354 samples, 0.05%)</title><rect x="933.7" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="936.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$373/945708893.get$Lambda (354 samples, 0.05%)</title><rect x="933.7" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$373 (354 samples, 0.05%)</title><rect x="933.7" y="515.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="936.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2,315 samples, 0.34%)</title><rect x="934.3" y="579.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,660 samples, 0.24%)</title><rect x="934.3" y="563.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,121 samples, 0.17%)</title><rect x="934.3" y="547.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,121 samples, 0.17%)</title><rect x="934.3" y="531.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="937.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (539 samples, 0.08%)</title><rect x="936.3" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (539 samples, 0.08%)</title><rect x="936.3" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.3" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (539 samples, 0.08%)</title><rect x="936.3" y="515.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="939.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (655 samples, 0.10%)</title><rect x="937.2" y="563.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$234/665902816.get (655 samples, 0.10%)</title><rect x="937.2" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (655 samples, 0.10%)</title><rect x="937.2" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (655 samples, 0.10%)</title><rect x="937.2" y="515.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (650 samples, 0.10%)</title><rect x="937.2" y="499.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.2" y="510.0"></text>
</g>
<g>
<title>byte[] (643 samples, 0.09%)</title><rect x="937.2" y="483.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$353/1876530093.accept (887 samples, 0.13%)</title><rect x="938.3" y="771.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (887 samples, 0.13%)</title><rect x="938.3" y="755.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$349/1518863725.run (887 samples, 0.13%)</title><rect x="938.3" y="739.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (887 samples, 0.13%)</title><rect x="938.3" y="723.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (887 samples, 0.13%)</title><rect x="938.3" y="707.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (887 samples, 0.13%)</title><rect x="938.3" y="691.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (887 samples, 0.13%)</title><rect x="938.3" y="675.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (887 samples, 0.13%)</title><rect x="938.3" y="659.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="941.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1,026 samples, 0.15%)</title><rect x="939.9" y="787.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (501 samples, 0.07%)</title><rect x="939.9" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (501 samples, 0.07%)</title><rect x="939.9" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (501 samples, 0.07%)</title><rect x="939.9" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (501 samples, 0.07%)</title><rect x="939.9" y="723.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (501 samples, 0.07%)</title><rect x="939.9" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (501 samples, 0.07%)</title><rect x="939.9" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.9" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (501 samples, 0.07%)</title><rect x="939.9" y="675.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="942.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (525 samples, 0.08%)</title><rect x="940.8" y="771.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.8" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (525 samples, 0.08%)</title><rect x="940.8" y="755.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="943.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,565 samples, 0.53%)</title><rect x="941.7" y="787.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$258/1773028224.run (1,789 samples, 0.26%)</title><rect x="941.7" y="771.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,789 samples, 0.26%)</title><rect x="941.7" y="755.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,789 samples, 0.26%)</title><rect x="941.7" y="739.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,789 samples, 0.26%)</title><rect x="941.7" y="723.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,789 samples, 0.26%)</title><rect x="941.7" y="707.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="944.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,789 samples, 0.26%)</title><rect x="941.7" y="691.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="944.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$245/1370831110.run (1,789 samples, 0.26%)</title><rect x="941.7" y="675.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,789 samples, 0.26%)</title><rect x="941.7" y="659.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,789 samples, 0.26%)</title><rect x="941.7" y="643.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,789 samples, 0.26%)</title><rect x="941.7" y="627.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1,252 samples, 0.18%)</title><rect x="941.7" y="611.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,252 samples, 0.18%)</title><rect x="941.7" y="595.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,252 samples, 0.18%)</title><rect x="941.7" y="579.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (867 samples, 0.13%)</title><rect x="941.7" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/447718425.invoke (867 samples, 0.13%)</title><rect x="941.7" y="547.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (867 samples, 0.13%)</title><rect x="941.7" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (867 samples, 0.13%)</title><rect x="941.7" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (867 samples, 0.13%)</title><rect x="941.7" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.7" y="510.0"></text>
</g>
<g>
<title>byte[] (867 samples, 0.13%)</title><rect x="941.7" y="483.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="944.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (385 samples, 0.06%)</title><rect x="943.2" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (385 samples, 0.06%)</title><rect x="943.2" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (385 samples, 0.06%)</title><rect x="943.2" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$373/945708893.get$Lambda (385 samples, 0.06%)</title><rect x="943.2" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$373 (385 samples, 0.06%)</title><rect x="943.2" y="499.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="946.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (537 samples, 0.08%)</title><rect x="943.8" y="611.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (537 samples, 0.08%)</title><rect x="943.8" y="595.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (537 samples, 0.08%)</title><rect x="943.8" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (537 samples, 0.08%)</title><rect x="943.8" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (537 samples, 0.08%)</title><rect x="943.8" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (537 samples, 0.08%)</title><rect x="943.8" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (534 samples, 0.08%)</title><rect x="943.8" y="515.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="946.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/1151414921.run (1,776 samples, 0.26%)</title><rect x="944.8" y="771.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,776 samples, 0.26%)</title><rect x="944.8" y="755.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (711 samples, 0.10%)</title><rect x="944.8" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (711 samples, 0.10%)</title><rect x="944.8" y="723.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$365/1924560206.get$Lambda (711 samples, 0.10%)</title><rect x="944.8" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$365 (711 samples, 0.10%)</title><rect x="944.8" y="691.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="947.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,065 samples, 0.16%)</title><rect x="946.0" y="739.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,065 samples, 0.16%)</title><rect x="946.0" y="723.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,065 samples, 0.16%)</title><rect x="946.0" y="707.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,061 samples, 0.16%)</title><rect x="946.0" y="691.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="949.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,909 samples, 0.58%)</title><rect x="947.9" y="787.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.9" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (652 samples, 0.10%)</title><rect x="947.9" y="771.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.9" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (652 samples, 0.10%)</title><rect x="947.9" y="755.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.9" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (652 samples, 0.10%)</title><rect x="947.9" y="739.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.9" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (652 samples, 0.10%)</title><rect x="947.9" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.9" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (652 samples, 0.10%)</title><rect x="947.9" y="707.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="950.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,257 samples, 0.48%)</title><rect x="949.0" y="771.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="952.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (434 samples, 0.06%)</title><rect x="949.0" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (434 samples, 0.06%)</title><rect x="949.0" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$464/719120093.get$Lambda (434 samples, 0.06%)</title><rect x="949.0" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$464 (434 samples, 0.06%)</title><rect x="949.0" y="707.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="952.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (826 samples, 0.12%)</title><rect x="949.7" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.7" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (826 samples, 0.12%)</title><rect x="949.7" y="739.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="952.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (470 samples, 0.07%)</title><rect x="951.2" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.2" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (470 samples, 0.07%)</title><rect x="951.2" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.2" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (470 samples, 0.07%)</title><rect x="951.2" y="723.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="954.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,527 samples, 0.22%)</title><rect x="952.0" y="755.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (681 samples, 0.10%)</title><rect x="952.0" y="739.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="955.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (846 samples, 0.12%)</title><rect x="953.2" y="739.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (846 samples, 0.12%)</title><rect x="953.2" y="723.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.2" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (846 samples, 0.12%)</title><rect x="953.2" y="707.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="956.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3,934 samples, 0.58%)</title><rect x="954.7" y="787.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (347 samples, 0.05%)</title><rect x="954.7" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (347 samples, 0.05%)</title><rect x="954.7" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$347/1745151109.get$Lambda (347 samples, 0.05%)</title><rect x="954.7" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.7" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$347 (347 samples, 0.05%)</title><rect x="954.7" y="723.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="957.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,164 samples, 0.32%)</title><rect x="955.3" y="771.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (928 samples, 0.14%)</title><rect x="955.3" y="755.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (928 samples, 0.14%)</title><rect x="955.3" y="739.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="958.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,236 samples, 0.18%)</title><rect x="956.9" y="755.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.9" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,236 samples, 0.18%)</title><rect x="956.9" y="739.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="959.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,423 samples, 0.21%)</title><rect x="959.0" y="771.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,423 samples, 0.21%)</title><rect x="959.0" y="755.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="962.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1,979 samples, 0.29%)</title><rect x="961.5" y="787.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (542 samples, 0.08%)</title><rect x="961.5" y="771.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="964.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (542 samples, 0.08%)</title><rect x="961.5" y="755.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="964.5" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (542 samples, 0.08%)</title><rect x="961.5" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.5" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (542 samples, 0.08%)</title><rect x="961.5" y="723.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.5" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (542 samples, 0.08%)</title><rect x="961.5" y="707.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="964.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,437 samples, 0.21%)</title><rect x="962.4" y="771.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,437 samples, 0.21%)</title><rect x="962.4" y="755.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,437 samples, 0.21%)</title><rect x="962.4" y="739.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.4" y="750.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,437 samples, 0.21%)</title><rect x="962.4" y="723.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="965.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,128 samples, 0.17%)</title><rect x="964.9" y="787.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,128 samples, 0.17%)</title><rect x="964.9" y="771.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,128 samples, 0.17%)</title><rect x="964.9" y="755.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,127 samples, 0.17%)</title><rect x="964.9" y="739.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (413 samples, 0.06%)</title><rect x="964.9" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.9" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (413 samples, 0.06%)</title><rect x="964.9" y="707.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="967.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (714 samples, 0.11%)</title><rect x="965.7" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (714 samples, 0.11%)</title><rect x="965.7" y="707.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (714 samples, 0.11%)</title><rect x="965.7" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (714 samples, 0.11%)</title><rect x="965.7" y="675.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (714 samples, 0.11%)</title><rect x="965.7" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (714 samples, 0.11%)</title><rect x="965.7" y="643.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="968.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (514 samples, 0.08%)</title><rect x="966.9" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (514 samples, 0.08%)</title><rect x="966.9" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (514 samples, 0.08%)</title><rect x="966.9" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (514 samples, 0.08%)</title><rect x="966.9" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (448 samples, 0.07%)</title><rect x="966.9" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.9" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (448 samples, 0.07%)</title><rect x="966.9" y="707.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="969.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (381 samples, 0.06%)</title><rect x="967.8" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (381 samples, 0.06%)</title><rect x="967.8" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (381 samples, 0.06%)</title><rect x="967.8" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (381 samples, 0.06%)</title><rect x="967.8" y="739.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (127,451 samples, 18.78%)</title><rect x="968.5" y="803.0" width="221.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.5" y="814.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6,138 samples, 0.90%)</title><rect x="968.5" y="787.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.5" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6,138 samples, 0.90%)</title><rect x="968.5" y="771.0" width="10.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="971.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (121,313 samples, 17.87%)</title><rect x="979.1" y="787.0" width="210.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (121,313 samples, 17.87%)</title><rect x="979.1" y="771.0" width="210.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.1" y="782.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (121,313 samples, 17.87%)</title><rect x="979.1" y="755.0" width="210.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.1" y="766.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18,590 samples, 2.74%)</title><rect x="979.1" y="739.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.1" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18,590 samples, 2.74%)</title><rect x="979.1" y="723.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.1" y="734.0">on..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (12,198 samples, 1.80%)</title><rect x="979.1" y="707.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.1" y="718.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8,319 samples, 1.23%)</title><rect x="979.1" y="691.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8,319 samples, 1.23%)</title><rect x="979.1" y="675.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,319 samples, 1.23%)</title><rect x="979.1" y="659.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,319 samples, 1.23%)</title><rect x="979.1" y="643.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1,356 samples, 0.20%)</title><rect x="979.1" y="627.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="982.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,963 samples, 1.03%)</title><rect x="981.5" y="627.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.5" y="638.0"></text>
</g>
<g>
<title>byte[] (6,963 samples, 1.03%)</title><rect x="981.5" y="611.0" width="12.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="984.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (3,879 samples, 0.57%)</title><rect x="993.6" y="691.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,573 samples, 0.38%)</title><rect x="993.6" y="675.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,573 samples, 0.38%)</title><rect x="993.6" y="659.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$142/964833577.get$Lambda (2,573 samples, 0.38%)</title><rect x="993.6" y="643.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.6" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$142 (2,573 samples, 0.38%)</title><rect x="993.6" y="627.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="996.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (1,306 samples, 0.19%)</title><rect x="998.1" y="675.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1056538042.linkToTargetMethod (1,245 samples, 0.18%)</title><rect x="998.1" y="659.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,245 samples, 0.18%)</title><rect x="998.1" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$147/2080107681.get$Lambda (1,245 samples, 0.18%)</title><rect x="998.1" y="627.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$147 (1,245 samples, 0.18%)</title><rect x="998.1" y="611.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1001.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6,392 samples, 0.94%)</title><rect x="1000.3" y="707.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,392 samples, 0.94%)</title><rect x="1000.3" y="691.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1003.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,392 samples, 0.94%)</title><rect x="1000.3" y="675.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (3,421 samples, 0.50%)</title><rect x="1000.3" y="659.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1003.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,971 samples, 0.44%)</title><rect x="1006.3" y="659.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.3" y="670.0"></text>
</g>
<g>
<title>byte[] (2,971 samples, 0.44%)</title><rect x="1006.3" y="643.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1009.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (31,126 samples, 4.59%)</title><rect x="1011.4" y="739.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.4" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (4,609 samples, 0.68%)</title><rect x="1011.4" y="723.0" width="8.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1014.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7,401 samples, 1.09%)</title><rect x="1019.4" y="723.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (5,083 samples, 0.75%)</title><rect x="1019.4" y="707.0" width="8.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1022.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (2,318 samples, 0.34%)</title><rect x="1028.3" y="707.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1031.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19,116 samples, 2.82%)</title><rect x="1032.3" y="723.0" width="33.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1035.3" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (19,116 samples, 2.82%)</title><rect x="1032.3" y="707.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.3" y="718.0">on..</text>
</g>
<g>
<title>char[] (10,153 samples, 1.50%)</title><rect x="1032.3" y="691.0" width="17.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1035.3" y="702.0"></text>
</g>
<g>
<title>char[] (603 samples, 0.09%)</title><rect x="1050.0" y="691.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1053.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (2,512 samples, 0.37%)</title><rect x="1051.0" y="691.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1054.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,848 samples, 0.86%)</title><rect x="1055.4" y="691.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,848 samples, 0.86%)</title><rect x="1055.4" y="675.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,848 samples, 0.86%)</title><rect x="1055.4" y="659.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.4" y="670.0"></text>
</g>
<g>
<title>byte[] (5,848 samples, 0.86%)</title><rect x="1055.4" y="643.0" width="10.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1058.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8,067 samples, 1.19%)</title><rect x="1065.5" y="739.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>byte[] (8,067 samples, 1.19%)</title><rect x="1065.5" y="723.0" width="14.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1068.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,798 samples, 0.41%)</title><rect x="1079.6" y="739.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,798 samples, 0.41%)</title><rect x="1079.6" y="723.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,798 samples, 0.41%)</title><rect x="1079.6" y="707.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1,447 samples, 0.21%)</title><rect x="1079.6" y="691.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1082.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,351 samples, 0.20%)</title><rect x="1082.1" y="691.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.1" y="702.0"></text>
</g>
<g>
<title>byte[] (1,351 samples, 0.20%)</title><rect x="1082.1" y="675.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1085.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60,732 samples, 8.95%)</title><rect x="1084.4" y="739.0" width="105.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.4" y="750.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (60,732 samples, 8.95%)</title><rect x="1084.4" y="723.0" width="105.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.4" y="734.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (15,244 samples, 2.25%)</title><rect x="1084.4" y="707.0" width="26.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1087.4" y="718.0">c..</text>
</g>
<g>
<title>char[] (4,785 samples, 0.70%)</title><rect x="1110.9" y="707.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1113.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (18,329 samples, 2.70%)</title><rect x="1119.2" y="707.0" width="31.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1122.2" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22,374 samples, 3.30%)</title><rect x="1151.1" y="707.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.1" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22,374 samples, 3.30%)</title><rect x="1151.1" y="691.0" width="38.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.1" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22,374 samples, 3.30%)</title><rect x="1151.1" y="675.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1154.1" y="686.0">jav..</text>
</g>
<g>
<title>byte[] (21,584 samples, 3.18%)</title><rect x="1151.1" y="659.0" width="37.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1154.1" y="670.0">byt..</text>
</g>
<g>
<title>byte[] (790 samples, 0.12%)</title><rect x="1188.6" y="659.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.6" y="670.0"></text>
</g>
</g>
</svg>
