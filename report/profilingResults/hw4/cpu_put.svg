<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (6,864 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (2 samples, 0.03%)</title><rect x="10.0" y="963.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.10%)</title><rect x="10.3" y="995.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.3" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="10.5" y="979.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.5" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.04%)</title><rect x="10.5" y="963.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.5" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="10.7" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.7" y="958.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.03%)</title><rect x="10.7" y="931.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="11.5" y="995.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="14.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,737 samples, 69.01%)</title><rect x="12.4" y="995.0" width="814.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.4" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,737 samples, 69.01%)</title><rect x="12.4" y="979.0" width="814.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.4" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,736 samples, 69.00%)</title><rect x="12.4" y="963.0" width="814.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.4" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (22 samples, 0.32%)</title><rect x="12.4" y="947.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.32%)</title><rect x="12.4" y="931.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.32%)</title><rect x="12.4" y="915.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.03%)</title><rect x="12.6" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.28%)</title><rect x="12.9" y="899.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$99/752494240.run (2 samples, 0.03%)</title><rect x="15.8" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (566 samples, 8.25%)</title><rect x="16.2" y="947.0" width="97.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.2" y="958.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (554 samples, 8.07%)</title><rect x="18.1" y="931.0" width="95.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.1" y="942.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (4 samples, 0.06%)</title><rect x="18.6" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (430 samples, 6.26%)</title><rect x="19.3" y="915.0" width="73.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.3" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.12%)</title><rect x="19.6" y="899.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="20.7" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="23.7" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="20.7" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.7" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="20.7" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.7" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="20.7" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.13%)</title><rect x="21.0" y="899.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.10%)</title><rect x="21.3" y="883.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.10%)</title><rect x="21.3" y="867.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="22.2" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="22.2" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="22.2" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (50 samples, 0.73%)</title><rect x="22.5" y="899.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 0.73%)</title><rect x="22.5" y="883.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (48 samples, 0.70%)</title><rect x="22.7" y="867.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 0.70%)</title><rect x="22.7" y="851.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 0.70%)</title><rect x="22.7" y="835.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.7" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.17%)</title><rect x="22.7" y="819.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="25.7" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="23.1" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.1" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="23.4" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.4" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="23.8" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="26.8" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.04%)</title><rect x="24.1" y="803.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="27.1" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (35 samples, 0.51%)</title><rect x="24.8" y="819.0" width="6.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="27.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.42%)</title><rect x="25.8" y="803.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="28.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.42%)</title><rect x="25.8" y="787.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="28.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 0.35%)</title><rect x="26.7" y="771.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="29.7" y="782.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.32%)</title><rect x="26.8" y="755.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.32%)</title><rect x="26.8" y="739.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.8" y="750.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 0.32%)</title><rect x="26.8" y="723.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.8" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.32%)</title><rect x="26.8" y="707.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.32%)</title><rect x="26.8" y="691.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="29.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (361 samples, 5.26%)</title><rect x="31.1" y="899.0" width="62.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.1" y="910.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (361 samples, 5.26%)</title><rect x="31.1" y="883.0" width="62.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.1" y="894.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park (159 samples, 2.32%)</title><rect x="31.7" y="867.0" width="27.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="34.7" y="878.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.04%)</title><rect x="33.2" y="851.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="36.2" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="33.7" y="851.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.7" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (33 samples, 0.48%)</title><rect x="34.2" y="851.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="37.2" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (9 samples, 0.13%)</title><rect x="36.6" y="835.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="39.6" y="846.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="38.2" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="41.2" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="38.5" y="835.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="41.5" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.03%)</title><rect x="39.1" y="835.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="42.1" y="846.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.03%)</title><rect x="39.6" y="835.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="42.6" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.06%)</title><rect x="39.9" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="42.9" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (85 samples, 1.24%)</title><rect x="40.8" y="851.0" width="14.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="43.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.57%)</title><rect x="48.7" y="835.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="51.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.04%)</title><rect x="48.7" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="51.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.52%)</title><rect x="49.2" y="819.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.39%)</title><rect x="50.6" y="803.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.6" y="814.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.36%)</title><rect x="50.7" y="787.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="53.7" y="798.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.25%)</title><rect x="51.4" y="771.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.4" y="782.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.06%)</title><rect x="53.5" y="755.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.5" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (3 samples, 0.04%)</title><rect x="53.7" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.7" y="750.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="54.4" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.4" y="782.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="54.7" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.7" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="55.4" y="851.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="58.4" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (4 samples, 0.06%)</title><rect x="55.9" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="58.9" y="862.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="56.9" y="851.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="59.9" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.07%)</title><rect x="57.8" y="851.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="60.8" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.03%)</title><rect x="58.7" y="851.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="61.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (197 samples, 2.87%)</title><rect x="59.0" y="867.0" width="33.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="62.0" y="878.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="59.0" y="851.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="62.0" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.06%)</title><rect x="59.7" y="851.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="62.7" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="60.5" y="851.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="63.5" y="862.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (185 samples, 2.70%)</title><rect x="61.1" y="851.0" width="31.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="64.1" y="862.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.80%)</title><rect x="83.4" y="835.0" width="9.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="86.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 0.79%)</title><rect x="83.6" y="819.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="86.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 0.57%)</title><rect x="86.2" y="803.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="89.2" y="814.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.54%)</title><rect x="86.5" y="787.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.5" y="798.0"></text>
</g>
<g>
<title>futex_wait (34 samples, 0.50%)</title><rect x="87.0" y="771.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.0" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.23%)</title><rect x="87.5" y="755.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.5" y="766.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.17%)</title><rect x="88.2" y="739.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.2" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.10%)</title><rect x="89.1" y="723.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.1" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (10 samples, 0.15%)</title><rect x="90.3" y="755.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.3" y="766.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.04%)</title><rect x="91.5" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="92.2" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.2" y="766.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="92.5" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="95.5" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="92.9" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="95.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (43 samples, 0.63%)</title><rect x="93.2" y="915.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (43 samples, 0.63%)</title><rect x="93.2" y="899.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (33 samples, 0.48%)</title><rect x="93.5" y="883.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="95.4" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.17%)</title><rect x="96.0" y="867.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.17%)</title><rect x="96.0" y="851.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (6 samples, 0.09%)</title><rect x="96.0" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.09%)</title><rect x="97.0" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.09%)</title><rect x="97.0" y="819.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="100.0" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.06%)</title><rect x="97.3" y="803.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="100.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="97.7" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="97.7" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="97.7" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.7" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="97.7" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.7" y="750.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="97.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (2 samples, 0.03%)</title><rect x="98.0" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="98.4" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.04%)</title><rect x="98.4" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.04%)</title><rect x="98.4" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="98.9" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (8 samples, 0.12%)</title><rect x="99.2" y="883.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (8 samples, 0.12%)</title><rect x="99.2" y="867.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (7 samples, 0.10%)</title><rect x="99.2" y="851.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (74 samples, 1.08%)</title><rect x="100.6" y="915.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (74 samples, 1.08%)</title><rect x="100.6" y="899.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (74 samples, 1.08%)</title><rect x="100.6" y="883.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (74 samples, 1.08%)</title><rect x="100.6" y="867.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (74 samples, 1.08%)</title><rect x="100.6" y="851.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.6" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.17%)</title><rect x="100.9" y="835.0" width="2.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="103.9" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="101.5" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="104.5" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.06%)</title><rect x="102.3" y="819.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="105.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (60 samples, 0.87%)</title><rect x="103.0" y="835.0" width="10.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="106.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.67%)</title><rect x="105.4" y="819.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="108.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.66%)</title><rect x="105.6" y="803.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="108.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.63%)</title><rect x="105.9" y="787.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.9" y="798.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.61%)</title><rect x="106.1" y="771.0" width="7.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="109.1" y="782.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.60%)</title><rect x="106.1" y="755.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.1" y="766.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 0.50%)</title><rect x="107.3" y="739.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.3" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 0.50%)</title><rect x="107.3" y="723.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 0.50%)</title><rect x="107.3" y="707.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="110.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$113/53756968.run (423 samples, 6.16%)</title><rect x="113.5" y="947.0" width="72.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.5" y="958.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (423 samples, 6.16%)</title><rect x="113.5" y="931.0" width="72.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.5" y="942.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (423 samples, 6.16%)</title><rect x="113.5" y="915.0" width="72.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="926.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (423 samples, 6.16%)</title><rect x="113.5" y="899.0" width="72.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.5" y="910.0">ru/mail/..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.03%)</title><rect x="114.2" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.03%)</title><rect x="114.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (416 samples, 6.06%)</title><rect x="114.7" y="883.0" width="71.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.7" y="894.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.09%)</title><rect x="114.7" y="867.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.7" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.09%)</title><rect x="114.7" y="851.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="115.7" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.7" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="115.7" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (2 samples, 0.03%)</title><rect x="116.1" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.1" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.03%)</title><rect x="116.1" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (400 samples, 5.83%)</title><rect x="116.4" y="867.0" width="68.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.4" y="878.0">sun/nio..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="117.3" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.3" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="117.3" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.3" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (7 samples, 0.10%)</title><rect x="117.6" y="851.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.6" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.07%)</title><rect x="118.0" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (4 samples, 0.06%)</title><rect x="118.0" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.0" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.06%)</title><rect x="118.0" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putByte (3 samples, 0.04%)</title><rect x="118.1" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (369 samples, 5.38%)</title><rect x="119.0" y="851.0" width="63.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.0" y="862.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (369 samples, 5.38%)</title><rect x="119.0" y="835.0" width="63.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.0" y="846.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (369 samples, 5.38%)</title><rect x="119.0" y="819.0" width="63.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.0" y="830.0">sun/nio..</text>
</g>
<g>
<title>[unknown] (364 samples, 5.30%)</title><rect x="119.7" y="803.0" width="62.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="122.7" y="814.0">[unkno..</text>
</g>
<g>
<title>__libc_write (361 samples, 5.26%)</title><rect x="119.7" y="787.0" width="62.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="122.7" y="798.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (293 samples, 4.27%)</title><rect x="131.4" y="771.0" width="50.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.4" y="782.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (293 samples, 4.27%)</title><rect x="131.4" y="755.0" width="50.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="134.4" y="766.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_write (262 samples, 3.82%)</title><rect x="136.7" y="739.0" width="45.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.7" y="750.0">__x6..</text>
</g>
<g>
<title>ksys_write (262 samples, 3.82%)</title><rect x="136.7" y="723.0" width="45.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.7" y="734.0">ksys..</text>
</g>
<g>
<title>__f_unlock_pos (3 samples, 0.04%)</title><rect x="137.0" y="707.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.0" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="137.0" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="140.0" y="702.0"></text>
</g>
<g>
<title>__fdget_pos (10 samples, 0.15%)</title><rect x="137.6" y="707.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.6" y="718.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.12%)</title><rect x="137.7" y="691.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="140.7" y="702.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.10%)</title><rect x="137.9" y="675.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.9" y="686.0"></text>
</g>
<g>
<title>vfs_write (244 samples, 3.55%)</title><rect x="139.8" y="707.0" width="41.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.8" y="718.0">vfs..</text>
</g>
<g>
<title>__sb_start_write (5 samples, 0.07%)</title><rect x="140.1" y="691.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="143.1" y="702.0"></text>
</g>
<g>
<title>__vfs_write (219 samples, 3.19%)</title><rect x="141.0" y="691.0" width="37.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.0" y="702.0">__v..</text>
</g>
<g>
<title>new_sync_write (218 samples, 3.18%)</title><rect x="141.2" y="675.0" width="37.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.2" y="686.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (215 samples, 3.13%)</title><rect x="141.5" y="659.0" width="37.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.5" y="670.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (203 samples, 2.96%)</title><rect x="141.9" y="643.0" width="34.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="654.0">__..</text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.04%)</title><rect x="142.4" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.4" y="638.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.09%)</title><rect x="142.9" y="627.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="145.9" y="638.0"></text>
</g>
<g>
<title>generic_perform_write (190 samples, 2.77%)</title><rect x="144.1" y="627.0" width="32.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.1" y="638.0">ge..</text>
</g>
<g>
<title>ext4_da_write_begin (46 samples, 0.67%)</title><rect x="145.0" y="611.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="148.0" y="622.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (25 samples, 0.36%)</title><rect x="145.5" y="595.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.5" y="606.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="145.6" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="148.6" y="590.0"></text>
</g>
<g>
<title>jbd2__journal_start (22 samples, 0.32%)</title><rect x="146.0" y="579.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.0" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.06%)</title><rect x="147.4" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.4" y="574.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="148.0" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="151.0" y="574.0"></text>
</g>
<g>
<title>start_this_handle (8 samples, 0.12%)</title><rect x="148.4" y="563.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="151.4" y="574.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.03%)</title><rect x="149.2" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.2" y="558.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.03%)</title><rect x="149.8" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.8" y="606.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (13 samples, 0.19%)</title><rect x="150.3" y="595.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.3" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (12 samples, 0.17%)</title><rect x="150.5" y="579.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="153.5" y="590.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.13%)</title><rect x="151.0" y="563.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.0" y="574.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.09%)</title><rect x="151.5" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.5" y="558.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="152.2" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="155.2" y="542.0"></text>
</g>
<g>
<title>wait_for_stable_page (2 samples, 0.03%)</title><rect x="152.5" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="155.5" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_end (125 samples, 1.82%)</title><rect x="152.9" y="611.0" width="21.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.9" y="622.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (13 samples, 0.19%)</title><rect x="153.2" y="595.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="156.2" y="606.0"></text>
</g>
<g>
<title>jbd2_journal_stop (13 samples, 0.19%)</title><rect x="153.2" y="579.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="156.2" y="590.0"></text>
</g>
<g>
<title>__wake_up (4 samples, 0.06%)</title><rect x="154.6" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="157.6" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.06%)</title><rect x="154.6" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="157.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="154.7" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="157.7" y="542.0"></text>
</g>
<g>
<title>generic_write_end (110 samples, 1.60%)</title><rect x="155.4" y="595.0" width="18.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.4" y="606.0"></text>
</g>
<g>
<title>__mark_inode_dirty (94 samples, 1.37%)</title><rect x="156.0" y="579.0" width="16.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.0" y="590.0"></text>
</g>
<g>
<title>ext4_dirty_inode (93 samples, 1.35%)</title><rect x="156.1" y="563.0" width="16.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.1" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (6 samples, 0.09%)</title><rect x="156.3" y="547.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.3" y="558.0"></text>
</g>
<g>
<title>ext4_journal_check_start (3 samples, 0.04%)</title><rect x="156.8" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.8" y="542.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (85 samples, 1.24%)</title><rect x="157.5" y="547.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="160.5" y="558.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.03%)</title><rect x="157.8" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="160.8" y="542.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (58 samples, 0.84%)</title><rect x="158.2" y="531.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.2" y="542.0"></text>
</g>
<g>
<title>__brelse (4 samples, 0.06%)</title><rect x="161.1" y="515.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="164.1" y="526.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (4 samples, 0.06%)</title><rect x="161.8" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.8" y="526.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (29 samples, 0.42%)</title><rect x="162.5" y="515.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="165.5" y="526.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (28 samples, 0.41%)</title><rect x="162.7" y="499.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.7" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="163.0" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.0" y="494.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (12 samples, 0.17%)</title><rect x="163.3" y="483.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="166.3" y="494.0"></text>
</g>
<g>
<title>crypto_shash_update (12 samples, 0.17%)</title><rect x="165.4" y="483.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.4" y="494.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (11 samples, 0.16%)</title><rect x="165.6" y="467.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="168.6" y="478.0"></text>
</g>
<g>
<title>from_kgid (2 samples, 0.03%)</title><rect x="167.5" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.5" y="526.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="167.5" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.5" y="510.0"></text>
</g>
<g>
<title>from_kprojid (2 samples, 0.03%)</title><rect x="167.8" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="170.8" y="526.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="167.8" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="170.8" y="510.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (23 samples, 0.34%)</title><rect x="168.2" y="531.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.2" y="542.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (14 samples, 0.20%)</title><rect x="168.3" y="515.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="171.3" y="526.0"></text>
</g>
<g>
<title>__getblk_gfp (6 samples, 0.09%)</title><rect x="169.5" y="499.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.5" y="510.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.06%)</title><rect x="169.9" y="483.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="172.9" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (6 samples, 0.09%)</title><rect x="170.7" y="515.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="173.7" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (4 samples, 0.06%)</title><rect x="171.1" y="499.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="174.1" y="510.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (4 samples, 0.06%)</title><rect x="171.1" y="483.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.1" y="494.0"></text>
</g>
<g>
<title>block_write_end (11 samples, 0.16%)</title><rect x="172.1" y="579.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="175.1" y="590.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (10 samples, 0.15%)</title><rect x="172.1" y="563.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="175.1" y="574.0"></text>
</g>
<g>
<title>mark_buffer_dirty (5 samples, 0.07%)</title><rect x="173.0" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.0" y="558.0"></text>
</g>
<g>
<title>__set_page_dirty (2 samples, 0.03%)</title><rect x="173.5" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="176.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="173.5" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.5" y="526.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (9 samples, 0.13%)</title><rect x="174.5" y="611.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="177.5" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="174.9" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="177.9" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.07%)</title><rect x="175.2" y="595.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.2" y="606.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (4 samples, 0.06%)</title><rect x="176.1" y="611.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.1" y="622.0"></text>
</g>
<g>
<title>down_write_trylock (4 samples, 0.06%)</title><rect x="176.8" y="643.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.8" y="654.0"></text>
</g>
<g>
<title>ext4_write_checks (4 samples, 0.06%)</title><rect x="177.4" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.4" y="654.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.03%)</title><rect x="177.8" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="180.8" y="638.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (2 samples, 0.03%)</title><rect x="177.8" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.8" y="622.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.06%)</title><rect x="178.8" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.8" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.19%)</title><rect x="179.5" y="691.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.5" y="702.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.13%)</title><rect x="179.7" y="675.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.7" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="179.8" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.8" y="670.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="179.8" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.8" y="654.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.07%)</title><rect x="180.4" y="659.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="183.4" y="670.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.04%)</title><rect x="180.5" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="183.5" y="654.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.04%)</title><rect x="181.2" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="184.2" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="181.7" y="787.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="184.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.12%)</title><rect x="182.4" y="851.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.4" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.09%)</title><rect x="182.4" y="835.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.4" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.03%)</title><rect x="183.1" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="183.5" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.12%)</title><rect x="183.8" y="851.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.12%)</title><rect x="183.8" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.8" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.07%)</title><rect x="184.0" y="819.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.06%)</title><rect x="184.1" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.nextIndex (2 samples, 0.03%)</title><rect x="184.5" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.07%)</title><rect x="185.2" y="867.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.04%)</title><rect x="185.5" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$99/752494240.run (3,725 samples, 54.27%)</title><rect x="186.2" y="947.0" width="640.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.2" y="958.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$99/752494240.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (3,725 samples, 54.27%)</title><rect x="186.2" y="931.0" width="640.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.2" y="942.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (3,725 samples, 54.27%)</title><rect x="186.2" y="915.0" width="640.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.2" y="926.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$97/686139236.process (3,725 samples, 54.27%)</title><rect x="186.2" y="899.0" width="640.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.2" y="910.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$97/686139236.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (3,725 samples, 54.27%)</title><rect x="186.2" y="883.0" width="640.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.2" y="894.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (3,722 samples, 54.22%)</title><rect x="186.7" y="867.0" width="639.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.7" y="878.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy (3,679 samples, 53.60%)</title><rect x="187.2" y="851.0" width="632.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.2" y="862.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.07%)</title><rect x="187.4" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.4" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (5 samples, 0.07%)</title><rect x="187.4" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.4" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_2 (3 samples, 0.04%)</title><rect x="187.8" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (2 samples, 0.03%)</title><rect x="187.9" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethodName (7 samples, 0.10%)</title><rect x="188.3" y="835.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (2 samples, 0.03%)</title><rect x="189.1" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$106/2084124506.process (1,312 samples, 19.11%)</title><rect x="189.5" y="835.0" width="225.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.5" y="846.0">ru/mail/polis/service/zvladn7/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$2 (1,311 samples, 19.10%)</title><rect x="189.5" y="819.0" width="225.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.5" y="830.0">ru/mail/polis/service/zvladn7/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (956 samples, 13.93%)</title><rect x="189.5" y="803.0" width="164.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.5" y="814.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.15%)</title><rect x="191.5" y="787.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.15%)</title><rect x="191.5" y="771.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.15%)</title><rect x="191.5" y="755.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="192.9" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="195.9" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="192.9" y="723.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="195.9" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="192.9" y="707.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="195.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (926 samples, 13.49%)</title><rect x="193.3" y="787.0" width="159.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.3" y="798.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (45 samples, 0.66%)</title><rect x="193.4" y="771.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.4" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="197.9" y="755.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="200.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.25%)</title><rect x="198.2" y="755.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.25%)</title><rect x="198.2" y="739.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.25%)</title><rect x="198.2" y="723.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (880 samples, 12.82%)</title><rect x="201.2" y="771.0" width="151.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.2" y="782.0">one/nio/net/Session..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="201.3" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="204.3" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="201.5" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="204.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="201.5" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="204.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (876 samples, 12.76%)</title><rect x="201.9" y="755.0" width="150.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.9" y="766.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (874 samples, 12.73%)</title><rect x="202.2" y="739.0" width="150.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.2" y="750.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.06%)</title><rect x="202.9" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (866 samples, 12.62%)</title><rect x="203.6" y="723.0" width="148.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.6" y="734.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.26%)</title><rect x="204.6" y="707.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="207.6" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.06%)</title><rect x="205.8" y="691.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="208.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.09%)</title><rect x="206.5" y="691.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="209.5" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (4 samples, 0.06%)</title><rect x="206.8" y="675.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="209.8" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="207.7" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="210.7" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="208.0" y="707.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="211.0" y="718.0"></text>
</g>
<g>
<title>__send (833 samples, 12.14%)</title><rect x="208.4" y="707.0" width="143.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="211.4" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (784 samples, 11.42%)</title><rect x="216.8" y="691.0" width="134.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="219.8" y="702.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.04%)</title><rect x="216.8" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (781 samples, 11.38%)</title><rect x="217.3" y="675.0" width="134.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="220.3" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (761 samples, 11.09%)</title><rect x="220.8" y="659.0" width="130.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="223.8" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (757 samples, 11.03%)</title><rect x="220.9" y="643.0" width="130.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.9" y="654.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="222.1" y="627.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="225.1" y="638.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.06%)</title><rect x="222.5" y="627.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="225.5" y="638.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="222.8" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.8" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.03%)</title><rect x="223.2" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.2" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (729 samples, 10.62%)</title><rect x="223.7" y="627.0" width="125.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="226.7" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (711 samples, 10.36%)</title><rect x="224.5" y="611.0" width="122.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="227.5" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (707 samples, 10.30%)</title><rect x="225.2" y="595.0" width="121.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.2" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="225.2" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.2" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="225.6" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="228.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="225.6" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.6" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="226.3" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="229.3" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="226.8" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="229.8" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (4 samples, 0.06%)</title><rect x="227.3" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="230.3" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (6 samples, 0.09%)</title><rect x="228.2" y="579.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.2" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="229.2" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="232.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (680 samples, 9.91%)</title><rect x="229.7" y="579.0" width="116.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.7" y="590.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.09%)</title><rect x="231.4" y="563.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="232.6" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="235.6" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.09%)</title><rect x="233.1" y="563.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.1" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="233.3" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.3" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="233.8" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.8" y="558.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.06%)</title><rect x="234.3" y="563.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.3" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (8 samples, 0.12%)</title><rect x="235.0" y="563.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.0" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7 samples, 0.10%)</title><rect x="235.2" y="547.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (45 samples, 0.66%)</title><rect x="236.4" y="563.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="239.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (38 samples, 0.55%)</title><rect x="237.6" y="547.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="240.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (18 samples, 0.26%)</title><rect x="238.3" y="531.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (17 samples, 0.25%)</title><rect x="238.3" y="515.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="241.3" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="240.9" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.06%)</title><rect x="241.4" y="531.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="244.4" y="542.0"></text>
</g>
<g>
<title>ksize (10 samples, 0.15%)</title><rect x="242.1" y="531.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="245.1" y="542.0"></text>
</g>
<g>
<title>__ksize (10 samples, 0.15%)</title><rect x="242.1" y="515.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="245.1" y="526.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.03%)</title><rect x="243.8" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="246.8" y="542.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="244.1" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="247.1" y="574.0"></text>
</g>
<g>
<title>tcp_push (581 samples, 8.46%)</title><rect x="245.0" y="563.0" width="99.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="248.0" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (579 samples, 8.44%)</title><rect x="245.2" y="547.0" width="99.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="248.2" y="558.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="245.7" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="248.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (574 samples, 8.36%)</title><rect x="246.0" y="531.0" width="98.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="249.0" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (537 samples, 7.82%)</title><rect x="247.6" y="515.0" width="92.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="250.6" y="526.0">__tcp_trans..</text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.04%)</title><rect x="250.8" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="253.8" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (505 samples, 7.36%)</title><rect x="251.5" y="499.0" width="86.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="254.5" y="510.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (502 samples, 7.31%)</title><rect x="251.7" y="483.0" width="86.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="254.7" y="494.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (491 samples, 7.15%)</title><rect x="252.7" y="467.0" width="84.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.7" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.09%)</title><rect x="253.1" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.1" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="253.4" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="256.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="253.8" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="256.8" y="446.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.03%)</title><rect x="253.8" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="256.8" y="430.0"></text>
</g>
<g>
<title>ip_output (479 samples, 6.98%)</title><rect x="254.1" y="451.0" width="82.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="257.1" y="462.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.03%)</title><rect x="254.8" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (455 samples, 6.63%)</title><rect x="255.1" y="435.0" width="78.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="258.1" y="446.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="255.5" y="419.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="258.5" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (448 samples, 6.53%)</title><rect x="256.2" y="419.0" width="77.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="259.2" y="430.0">__ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (438 samples, 6.38%)</title><rect x="257.9" y="403.0" width="75.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="260.9" y="414.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (383 samples, 5.58%)</title><rect x="260.1" y="387.0" width="65.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.1" y="398.0">__local..</text>
</g>
<g>
<title>do_softirq.part.20 (382 samples, 5.57%)</title><rect x="260.3" y="371.0" width="65.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="263.3" y="382.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (377 samples, 5.49%)</title><rect x="261.2" y="355.0" width="64.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.2" y="366.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (374 samples, 5.45%)</title><rect x="261.2" y="339.0" width="64.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="264.2" y="350.0">__softi..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="262.7" y="323.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.7" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.06%)</title><rect x="263.1" y="323.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="266.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (357 samples, 5.20%)</title><rect x="263.7" y="323.0" width="61.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.7" y="334.0">net_rx..</text>
</g>
<g>
<title>process_backlog (350 samples, 5.10%)</title><rect x="264.9" y="307.0" width="60.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="267.9" y="318.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (345 samples, 5.03%)</title><rect x="265.8" y="291.0" width="59.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.8" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (344 samples, 5.01%)</title><rect x="265.8" y="275.0" width="59.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.8" y="286.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.10%)</title><rect x="266.0" y="259.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (335 samples, 4.88%)</title><rect x="267.2" y="259.0" width="57.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="270.2" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (6 samples, 0.09%)</title><rect x="267.4" y="243.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (327 samples, 4.76%)</title><rect x="268.4" y="243.0" width="56.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="271.4" y="254.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (322 samples, 4.69%)</title><rect x="268.6" y="227.0" width="55.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.6" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (319 samples, 4.65%)</title><rect x="268.7" y="211.0" width="54.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="271.7" y="222.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (316 samples, 4.60%)</title><rect x="268.7" y="195.0" width="54.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.7" y="206.0">ip_pr..</text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="269.8" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (308 samples, 4.49%)</title><rect x="270.1" y="179.0" width="53.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.1" y="190.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (19 samples, 0.28%)</title><rect x="272.0" y="163.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.0" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="274.7" y="147.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.7" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="275.3" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.3" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="275.6" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.6" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="276.1" y="163.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="279.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (21 samples, 0.31%)</title><rect x="276.5" y="163.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="279.5" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="276.8" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="279.8" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (16 samples, 0.23%)</title><rect x="277.2" y="147.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="280.2" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (16 samples, 0.23%)</title><rect x="277.2" y="131.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="280.2" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (9 samples, 0.13%)</title><rect x="278.2" y="115.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.2" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (4 samples, 0.06%)</title><rect x="278.5" y="99.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="281.5" y="110.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (3 samples, 0.04%)</title><rect x="279.2" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="282.2" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (248 samples, 3.61%)</title><rect x="280.1" y="163.0" width="42.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.1" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (246 samples, 3.58%)</title><rect x="280.4" y="147.0" width="42.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.4" y="158.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="282.0" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.0" y="142.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.10%)</title><rect x="282.3" y="131.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="285.3" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.09%)</title><rect x="282.5" y="115.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.07%)</title><rect x="282.7" y="99.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.07%)</title><rect x="282.7" y="83.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="285.7" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="283.5" y="131.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.5" y="142.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="284.2" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="287.2" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (127 samples, 1.85%)</title><rect x="284.7" y="131.0" width="21.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="287.7" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (124 samples, 1.81%)</title><rect x="285.2" y="115.0" width="21.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="288.2" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (123 samples, 1.79%)</title><rect x="285.2" y="99.0" width="21.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="288.2" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (123 samples, 1.79%)</title><rect x="285.2" y="83.0" width="21.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="288.2" y="94.0">_..</text>
</g>
<g>
<title>tcp_ack (69 samples, 1.01%)</title><rect x="306.5" y="131.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="309.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.39%)</title><rect x="310.3" y="115.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="310.3" y="99.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.06%)</title><rect x="310.3" y="83.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.34%)</title><rect x="311.0" y="99.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="314.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.26%)</title><rect x="311.5" y="83.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.5" y="94.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.13%)</title><rect x="313.1" y="67.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="316.1" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.12%)</title><rect x="313.3" y="51.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.09%)</title><rect x="313.6" y="35.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.6" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="314.6" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.6" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="315.0" y="115.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (5 samples, 0.07%)</title><rect x="315.7" y="115.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.7" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="316.5" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="319.5" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.06%)</title><rect x="317.2" y="115.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.2" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.04%)</title><rect x="317.9" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="320.9" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.12%)</title><rect x="318.4" y="131.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.4" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="319.8" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.8" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="320.3" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.3" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="320.5" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="323.5" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="321.0" y="131.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.0" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.04%)</title><rect x="321.7" y="131.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.7" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="322.4" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.4" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="323.1" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="326.1" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="323.6" y="211.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="326.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (4 samples, 0.06%)</title><rect x="323.9" y="227.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.9" y="238.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="325.1" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.04%)</title><rect x="325.5" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.5" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (42 samples, 0.61%)</title><rect x="326.0" y="387.0" width="7.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="329.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (40 samples, 0.58%)</title><rect x="326.0" y="371.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.0" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.28%)</title><rect x="327.0" y="355.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.0" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.15%)</title><rect x="328.0" y="339.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="331.0" y="350.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.10%)</title><rect x="328.4" y="323.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.09%)</title><rect x="328.6" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.6" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.09%)</title><rect x="328.6" y="291.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="331.6" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="329.9" y="339.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.9" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.09%)</title><rect x="330.3" y="355.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.3" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="331.5" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="334.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.07%)</title><rect x="331.8" y="355.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="334.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="332.3" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="335.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="332.8" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="335.8" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.23%)</title><rect x="333.4" y="435.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.4" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.04%)</title><rect x="333.4" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="336.4" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (13 samples, 0.19%)</title><rect x="333.9" y="419.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="336.9" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (12 samples, 0.17%)</title><rect x="334.1" y="403.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="337.1" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (10 samples, 0.15%)</title><rect x="334.2" y="387.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="337.2" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.04%)</title><rect x="334.6" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="337.6" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (5 samples, 0.07%)</title><rect x="335.1" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="338.1" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.06%)</title><rect x="335.3" y="355.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.03%)</title><rect x="336.1" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.1" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.06%)</title><rect x="336.5" y="451.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.07%)</title><rect x="337.1" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.1" y="478.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="338.0" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="341.0" y="494.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.06%)</title><rect x="338.4" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.4" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="338.5" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="341.5" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="338.7" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.7" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (3 samples, 0.04%)</title><rect x="339.0" y="499.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="342.0" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="339.6" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.6" y="510.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="340.2" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="343.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="340.6" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.6" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.17%)</title><rect x="341.1" y="515.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.12%)</title><rect x="341.8" y="499.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.8" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="342.6" y="483.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="345.6" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="342.6" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="345.6" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="343.3" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="346.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.07%)</title><rect x="343.9" y="515.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="346.9" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.12%)</title><rect x="344.9" y="563.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="345.1" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="348.1" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="345.4" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.4" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="345.9" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="348.9" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.16%)</title><rect x="346.9" y="611.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="349.9" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.06%)</title><rect x="347.3" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="350.3" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.06%)</title><rect x="347.3" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.3" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="347.6" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="350.6" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.03%)</title><rect x="348.0" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="351.0" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.03%)</title><rect x="348.0" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="351.0" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.03%)</title><rect x="348.3" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="351.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.17%)</title><rect x="349.0" y="627.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.0" y="638.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.16%)</title><rect x="349.0" y="611.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.16%)</title><rect x="349.0" y="595.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="352.0" y="606.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.15%)</title><rect x="349.2" y="579.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="352.2" y="590.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="351.2" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.2" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="351.6" y="707.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="354.6" y="718.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.03%)</title><rect x="352.1" y="707.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="355.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.12%)</title><rect x="352.4" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="353.1" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="353.1" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="353.8" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.8" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="353.8" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="356.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (344 samples, 5.01%)</title><rect x="354.2" y="803.0" width="59.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.2" y="814.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (343 samples, 5.00%)</title><rect x="354.3" y="787.0" width="59.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.3" y="798.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (12 samples, 0.17%)</title><rect x="354.3" y="771.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (12 samples, 0.17%)</title><rect x="354.3" y="755.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (12 samples, 0.17%)</title><rect x="354.3" y="739.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (6 samples, 0.09%)</title><rect x="355.4" y="723.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (6 samples, 0.09%)</title><rect x="355.4" y="707.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (11 samples, 0.16%)</title><rect x="356.4" y="771.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (11 samples, 0.16%)</title><rect x="356.4" y="755.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (11 samples, 0.16%)</title><rect x="356.4" y="739.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.4" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.10%)</title><rect x="357.1" y="723.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="360.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$110/2006668916.run (320 samples, 4.66%)</title><rect x="358.3" y="771.0" width="55.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.3" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (318 samples, 4.63%)</title><rect x="358.6" y="755.0" width="54.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.6" y="766.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (318 samples, 4.63%)</title><rect x="358.6" y="739.0" width="54.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.6" y="750.0">ru/ma..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="358.6" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="361.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.16%)</title><rect x="359.0" y="723.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.0" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="360.2" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="363.2" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="360.2" y="691.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="363.2" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="360.2" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="363.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="360.2" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="363.2" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="360.2" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="363.2" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="360.2" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="363.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (298 samples, 4.34%)</title><rect x="360.9" y="723.0" width="51.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.9" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (279 samples, 4.06%)</title><rect x="363.4" y="707.0" width="48.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.4" y="718.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.06%)</title><rect x="388.0" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (4 samples, 0.06%)</title><rect x="388.0" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="388.7" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (4 samples, 0.06%)</title><rect x="389.4" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (4 samples, 0.06%)</title><rect x="389.4" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64$Cell.cas (2 samples, 0.03%)</title><rect x="389.6" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (2 samples, 0.03%)</title><rect x="389.6" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="389.6" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (14 samples, 0.20%)</title><rect x="390.1" y="691.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (6 samples, 0.09%)</title><rect x="390.4" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.04%)</title><rect x="391.0" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.09%)</title><rect x="391.5" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.09%)</title><rect x="391.5" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.09%)</title><rect x="391.5" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.5" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.09%)</title><rect x="391.5" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="392.0" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="392.0" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (110 samples, 1.60%)</title><rect x="392.5" y="691.0" width="18.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (106 samples, 1.54%)</title><rect x="393.2" y="675.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (106 samples, 1.54%)</title><rect x="393.2" y="659.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.2" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (106 samples, 1.54%)</title><rect x="393.2" y="643.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (15 samples, 0.22%)</title><rect x="404.0" y="627.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.0" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (15 samples, 0.22%)</title><rect x="404.0" y="611.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.0" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (28 samples, 0.41%)</title><rect x="406.6" y="627.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="409.6" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="411.4" y="707.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="414.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="411.6" y="691.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="414.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="411.8" y="675.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="414.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (7 samples, 0.10%)</title><rect x="412.1" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.10%)</title><rect x="412.1" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.10%)</title><rect x="412.1" y="691.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="412.1" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="412.1" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="412.1" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.09%)</title><rect x="412.1" y="627.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.09%)</title><rect x="412.1" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.07%)</title><rect x="412.3" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.wrapArray (9 samples, 0.13%)</title><rect x="413.3" y="803.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.13%)</title><rect x="413.3" y="787.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.13%)</title><rect x="413.3" y="771.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.13%)</title><rect x="413.3" y="755.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.13%)</title><rect x="413.3" y="739.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="413.6" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="414.2" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="414.5" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="414.5" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$2 (3 samples, 0.04%)</title><rect x="415.0" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (2,255 samples, 32.85%)</title><rect x="415.5" y="835.0" width="387.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.5" y="846.0">ru/mail/polis/service/zvladn7/ServiceHelper.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.26%)</title><rect x="416.1" y="819.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1146147158.invoke (18 samples, 0.26%)</title><rect x="416.1" y="803.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.13%)</title><rect x="416.9" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="417.3" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="417.3" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.03%)</title><rect x="417.3" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$Stringifiers$ObjectStringifier.valueOf (4 samples, 0.06%)</title><rect x="417.8" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.06%)</title><rect x="417.8" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.04%)</title><rect x="418.6" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (29 samples, 0.42%)</title><rect x="419.1" y="819.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (26 samples, 0.38%)</title><rect x="419.1" y="803.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (22 samples, 0.32%)</title><rect x="419.8" y="787.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="423.6" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="423.8" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,356 samples, 19.76%)</title><rect x="424.1" y="819.0" width="233.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,356 samples, 19.76%)</title><rect x="424.1" y="803.0" width="233.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.1" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (17 samples, 0.25%)</title><rect x="424.5" y="787.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.22%)</title><rect x="424.8" y="771.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.06%)</title><rect x="425.5" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.06%)</title><rect x="425.5" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.10%)</title><rect x="426.2" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (316 samples, 4.60%)</title><rect x="427.4" y="787.0" width="54.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.4" y="798.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.16%)</title><rect x="427.6" y="771.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="430.6" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.13%)</title><rect x="427.6" y="755.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="430.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.10%)</title><rect x="427.7" y="739.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="430.7" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="428.1" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="431.1" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="428.1" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="431.1" y="718.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="428.6" y="723.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="431.6" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="429.1" y="755.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="432.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (304 samples, 4.43%)</title><rect x="429.5" y="771.0" width="52.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.5" y="782.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (20 samples, 0.29%)</title><rect x="430.3" y="755.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="433.3" y="766.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="431.4" y="739.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="434.4" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.15%)</title><rect x="431.9" y="739.0" width="1.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="434.9" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="432.9" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="435.9" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="433.8" y="755.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="436.8" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.06%)</title><rect x="434.3" y="755.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="437.3" y="766.0"></text>
</g>
<g>
<title>__recv (272 samples, 3.96%)</title><rect x="435.0" y="755.0" width="46.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="438.0" y="766.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (217 samples, 3.16%)</title><rect x="444.2" y="739.0" width="37.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="447.2" y="750.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.07%)</title><rect x="444.2" y="723.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="447.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (212 samples, 3.09%)</title><rect x="445.1" y="723.0" width="36.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.1" y="734.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (194 samples, 2.83%)</title><rect x="448.2" y="707.0" width="33.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.2" y="718.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (194 samples, 2.83%)</title><rect x="448.2" y="691.0" width="33.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="451.2" y="702.0">__..</text>
</g>
<g>
<title>fput (8 samples, 0.12%)</title><rect x="448.4" y="675.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.4" y="686.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.12%)</title><rect x="448.4" y="659.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="451.4" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (177 samples, 2.58%)</title><rect x="449.7" y="675.0" width="30.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.7" y="686.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (167 samples, 2.43%)</title><rect x="450.3" y="659.0" width="28.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.3" y="670.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (167 samples, 2.43%)</title><rect x="450.3" y="643.0" width="28.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="453.3" y="654.0">tc..</text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.16%)</title><rect x="454.7" y="627.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="457.7" y="638.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.15%)</title><rect x="454.9" y="611.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.9" y="622.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.07%)</title><rect x="454.9" y="595.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.9" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.07%)</title><rect x="455.8" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.8" y="606.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.06%)</title><rect x="455.8" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.8" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="456.8" y="627.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="459.8" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="457.3" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.3" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="457.8" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="460.8" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (42 samples, 0.61%)</title><rect x="458.5" y="627.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.5" y="638.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.06%)</title><rect x="458.9" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="461.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="459.0" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.0" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="459.5" y="611.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="459.5" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.5" y="606.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.07%)</title><rect x="460.2" y="611.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="463.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="460.6" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="463.6" y="606.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.03%)</title><rect x="461.1" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="464.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="461.1" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.1" y="606.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.03%)</title><rect x="461.4" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="464.4" y="622.0"></text>
</g>
<g>
<title>wait_woken (23 samples, 0.34%)</title><rect x="461.8" y="611.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.8" y="622.0"></text>
</g>
<g>
<title>schedule_timeout (20 samples, 0.29%)</title><rect x="462.3" y="595.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.3" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.26%)</title><rect x="462.5" y="579.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.5" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (44 samples, 0.64%)</title><rect x="465.7" y="627.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="468.7" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (42 samples, 0.61%)</title><rect x="465.9" y="611.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.9" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (28 samples, 0.41%)</title><rect x="468.3" y="595.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="471.3" y="606.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="468.7" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="471.7" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.09%)</title><rect x="469.2" y="579.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="472.2" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.22%)</title><rect x="470.2" y="579.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.2" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (12 samples, 0.17%)</title><rect x="470.7" y="563.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="473.7" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (21 samples, 0.31%)</title><rect x="473.3" y="627.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="476.3" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (19 samples, 0.28%)</title><rect x="473.6" y="611.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.6" y="622.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.47 (19 samples, 0.28%)</title><rect x="473.6" y="595.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.6" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 0.26%)</title><rect x="473.8" y="579.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.8" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (17 samples, 0.25%)</title><rect x="474.0" y="563.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="477.0" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (17 samples, 0.25%)</title><rect x="474.0" y="547.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.0" y="558.0"></text>
</g>
<g>
<title>ip_local_out (17 samples, 0.25%)</title><rect x="474.0" y="531.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="477.0" y="542.0"></text>
</g>
<g>
<title>ip_output (17 samples, 0.25%)</title><rect x="474.0" y="515.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.0" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (15 samples, 0.22%)</title><rect x="474.0" y="499.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.0" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (14 samples, 0.20%)</title><rect x="474.2" y="483.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.2" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (14 samples, 0.20%)</title><rect x="474.2" y="467.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="477.2" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (9 samples, 0.13%)</title><rect x="474.5" y="451.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.5" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.20 (9 samples, 0.13%)</title><rect x="474.5" y="435.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (9 samples, 0.13%)</title><rect x="474.5" y="419.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.5" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 0.13%)</title><rect x="474.5" y="403.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.5" y="414.0"></text>
</g>
<g>
<title>net_rx_action (9 samples, 0.13%)</title><rect x="474.5" y="387.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.5" y="398.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 0.12%)</title><rect x="474.7" y="371.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="477.7" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 0.12%)</title><rect x="474.7" y="355.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.7" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 0.12%)</title><rect x="474.7" y="339.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.7" y="350.0"></text>
</g>
<g>
<title>ip_rcv (8 samples, 0.12%)</title><rect x="474.7" y="323.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.12%)</title><rect x="474.7" y="307.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="477.7" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (8 samples, 0.12%)</title><rect x="474.7" y="291.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="477.7" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.12%)</title><rect x="474.7" y="275.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.7" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 0.12%)</title><rect x="474.7" y="259.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="477.7" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.10%)</title><rect x="474.8" y="243.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.8" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.06%)</title><rect x="475.4" y="227.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.4" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.06%)</title><rect x="475.4" y="211.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.4" y="222.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.04%)</title><rect x="475.4" y="195.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.4" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.04%)</title><rect x="476.1" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="479.1" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.04%)</title><rect x="476.1" y="435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.1" y="446.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="476.9" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.9" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.06%)</title><rect x="477.3" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.3" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="477.4" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.4" y="622.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="477.4" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.4" y="606.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="477.4" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.4" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="477.9" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="480.9" y="638.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.03%)</title><rect x="478.6" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.6" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.09%)</title><rect x="479.0" y="659.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="482.0" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.06%)</title><rect x="479.0" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.0" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.06%)</title><rect x="479.0" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.06%)</title><rect x="479.0" y="611.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.0" y="622.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (2 samples, 0.03%)</title><rect x="479.7" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.7" y="654.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.03%)</title><rect x="479.7" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.7" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.12%)</title><rect x="480.2" y="675.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.2" y="686.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="480.3" y="659.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="483.3" y="670.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="480.3" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.3" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="480.3" y="627.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="481.2" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (92 samples, 1.34%)</title><rect x="481.7" y="787.0" width="15.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="481.7" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="481.7" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="481.7" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.19%)</title><rect x="482.1" y="771.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="482.8" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.09%)</title><rect x="483.3" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.07%)</title><rect x="483.4" y="739.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (36 samples, 0.52%)</title><rect x="484.3" y="771.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.3" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="484.8" y="755.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="487.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.42%)</title><rect x="485.5" y="755.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.42%)</title><rect x="485.5" y="739.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.13%)</title><rect x="490.5" y="771.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.06%)</title><rect x="492.0" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="492.4" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (28 samples, 0.41%)</title><rect x="492.7" y="771.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.22%)</title><rect x="494.8" y="755.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.22%)</title><rect x="494.8" y="739.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.8" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="496.9" y="723.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="499.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (77 samples, 1.12%)</title><rect x="497.5" y="787.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.5" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="510.1" y="771.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="513.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.15%)</title><rect x="510.8" y="787.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="512.2" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="512.2" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (150 samples, 2.19%)</title><rect x="512.5" y="787.0" width="25.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.5" y="798.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (4 samples, 0.06%)</title><rect x="512.7" y="771.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="515.7" y="782.0"></text>
</g>
<g>
<title>__GI___setsockopt (144 samples, 2.10%)</title><rect x="513.4" y="771.0" width="24.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="516.4" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 1.40%)</title><rect x="521.4" y="755.0" width="16.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.03%)</title><rect x="521.4" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (94 samples, 1.37%)</title><rect x="521.8" y="739.0" width="16.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (79 samples, 1.15%)</title><rect x="524.4" y="723.0" width="13.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="527.4" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.03%)</title><rect x="524.5" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="527.5" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (70 samples, 1.02%)</title><rect x="524.9" y="707.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="527.9" y="718.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (4 samples, 0.06%)</title><rect x="525.4" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.4" y="702.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (2 samples, 0.03%)</title><rect x="526.3" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="529.3" y="702.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="526.8" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="529.8" y="702.0"></text>
</g>
<g>
<title>security_socket_setsockopt (11 samples, 0.16%)</title><rect x="527.5" y="691.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="530.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.04%)</title><rect x="527.6" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="530.6" y="686.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="527.8" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="530.8" y="670.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (5 samples, 0.07%)</title><rect x="528.1" y="675.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="531.1" y="686.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.06%)</title><rect x="528.3" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.3" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.03%)</title><rect x="529.0" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="532.0" y="686.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.03%)</title><rect x="529.3" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="532.3" y="702.0"></text>
</g>
<g>
<title>sock_setsockopt (29 samples, 0.42%)</title><rect x="529.7" y="691.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="532.7" y="702.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.15%)</title><rect x="530.7" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="533.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="531.1" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="534.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="531.8" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.8" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="531.8" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.8" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="532.1" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="535.1" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (11 samples, 0.16%)</title><rect x="532.4" y="675.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="535.4" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="533.8" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.8" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="534.3" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.3" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.19%)</title><rect x="534.7" y="691.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="537.7" y="702.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.15%)</title><rect x="535.0" y="675.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="538.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.15%)</title><rect x="535.0" y="659.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.0" y="670.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.13%)</title><rect x="535.2" y="643.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.2" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 0.07%)</title><rect x="536.9" y="707.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (687 samples, 10.01%)</title><rect x="538.3" y="787.0" width="118.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.3" y="798.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (16 samples, 0.23%)</title><rect x="539.3" y="771.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="542.3" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="540.3" y="755.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="543.3" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.10%)</title><rect x="540.7" y="755.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="543.7" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (5 samples, 0.07%)</title><rect x="541.0" y="739.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="544.0" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.06%)</title><rect x="542.1" y="771.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="545.1" y="782.0"></text>
</g>
<g>
<title>__send (658 samples, 9.59%)</title><rect x="542.9" y="771.0" width="113.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="545.9" y="782.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (612 samples, 8.92%)</title><rect x="550.8" y="755.0" width="105.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="553.8" y="766.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.06%)</title><rect x="550.8" y="739.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (608 samples, 8.86%)</title><rect x="551.5" y="739.0" width="104.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="554.5" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (594 samples, 8.65%)</title><rect x="552.7" y="723.0" width="102.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.7" y="734.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (594 samples, 8.65%)</title><rect x="552.7" y="707.0" width="102.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="555.7" y="718.0">__sys_sendto</text>
</g>
<g>
<title>fput (5 samples, 0.07%)</title><rect x="552.7" y="691.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.7" y="702.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.07%)</title><rect x="552.7" y="675.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.7" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (587 samples, 8.55%)</title><rect x="553.6" y="691.0" width="100.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.6" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (573 samples, 8.35%)</title><rect x="553.9" y="675.0" width="98.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.9" y="686.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (570 samples, 8.30%)</title><rect x="554.3" y="659.0" width="98.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="557.3" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="554.3" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.3" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="554.6" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="557.6" y="654.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.03%)</title><rect x="555.1" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="558.1" y="654.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.04%)</title><rect x="555.5" y="643.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="558.5" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (557 samples, 8.11%)</title><rect x="556.0" y="643.0" width="95.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.0" y="654.0">tcp_sendmsg..</text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="558.7" y="627.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.7" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.07%)</title><rect x="559.4" y="627.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="562.4" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="559.4" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.4" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="560.3" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="563.3" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (21 samples, 0.31%)</title><rect x="560.6" y="627.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.6" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.26%)</title><rect x="561.1" y="611.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.1" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (8 samples, 0.12%)</title><rect x="561.5" y="595.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.5" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.10%)</title><rect x="561.5" y="579.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="564.5" y="590.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="562.4" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="565.4" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.07%)</title><rect x="563.0" y="595.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.0" y="606.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="563.9" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="566.9" y="606.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="563.9" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="566.9" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="564.2" y="627.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="567.2" y="638.0"></text>
</g>
<g>
<title>tcp_push (499 samples, 7.27%)</title><rect x="564.9" y="627.0" width="85.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="567.9" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (493 samples, 7.18%)</title><rect x="565.3" y="611.0" width="84.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.3" y="622.0">__tcp_push..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="565.4" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.4" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (487 samples, 7.09%)</title><rect x="566.3" y="595.0" width="83.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="569.3" y="606.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (459 samples, 6.69%)</title><rect x="568.2" y="579.0" width="78.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="571.2" y="590.0">__tcp_tra..</text>
</g>
<g>
<title>ip_queue_xmit (439 samples, 6.40%)</title><rect x="570.6" y="563.0" width="75.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="573.6" y="574.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (438 samples, 6.38%)</title><rect x="570.8" y="547.0" width="75.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="573.8" y="558.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (426 samples, 6.21%)</title><rect x="571.6" y="531.0" width="73.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="574.6" y="542.0">ip_local..</text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.15%)</title><rect x="571.8" y="515.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="574.8" y="526.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="573.0" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.0" y="510.0"></text>
</g>
<g>
<title>ip_output (412 samples, 6.00%)</title><rect x="573.7" y="515.0" width="70.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.7" y="526.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.03%)</title><rect x="574.0" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.0" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (386 samples, 5.62%)</title><rect x="574.4" y="499.0" width="66.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.4" y="510.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (386 samples, 5.62%)</title><rect x="574.4" y="483.0" width="66.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.4" y="494.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (383 samples, 5.58%)</title><rect x="574.7" y="467.0" width="65.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.7" y="478.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (344 samples, 5.01%)</title><rect x="576.4" y="451.0" width="59.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="579.4" y="462.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (342 samples, 4.98%)</title><rect x="576.8" y="435.0" width="58.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.8" y="446.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (341 samples, 4.97%)</title><rect x="577.0" y="419.0" width="58.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.0" y="430.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (339 samples, 4.94%)</title><rect x="577.0" y="403.0" width="58.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="580.0" y="414.0">__soft..</text>
</g>
<g>
<title>net_rx_action (331 samples, 4.82%)</title><rect x="578.0" y="387.0" width="56.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.0" y="398.0">net_rx..</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.04%)</title><rect x="578.5" y="371.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="581.5" y="382.0"></text>
</g>
<g>
<title>process_backlog (325 samples, 4.73%)</title><rect x="579.0" y="371.0" width="55.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.0" y="382.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (317 samples, 4.62%)</title><rect x="580.2" y="355.0" width="54.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="583.2" y="366.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (316 samples, 4.60%)</title><rect x="580.2" y="339.0" width="54.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="583.2" y="350.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.06%)</title><rect x="580.2" y="323.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="583.2" y="334.0"></text>
</g>
<g>
<title>ip_rcv (312 samples, 4.55%)</title><rect x="580.9" y="323.0" width="53.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.9" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.03%)</title><rect x="581.3" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="584.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (307 samples, 4.47%)</title><rect x="581.6" y="307.0" width="52.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.6" y="318.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (305 samples, 4.44%)</title><rect x="581.8" y="291.0" width="52.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="584.8" y="302.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (303 samples, 4.41%)</title><rect x="581.8" y="275.0" width="52.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="584.8" y="286.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (303 samples, 4.41%)</title><rect x="581.8" y="259.0" width="52.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="584.8" y="270.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="582.3" y="243.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="582.8" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="585.8" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (295 samples, 4.30%)</title><rect x="583.2" y="243.0" width="50.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.2" y="254.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.06%)</title><rect x="583.8" y="227.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="586.8" y="238.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="584.5" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.5" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (16 samples, 0.23%)</title><rect x="585.2" y="227.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="588.2" y="238.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="585.4" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.4" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (10 samples, 0.15%)</title><rect x="585.9" y="211.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="588.9" y="222.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (9 samples, 0.13%)</title><rect x="586.1" y="195.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="589.1" y="206.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (6 samples, 0.09%)</title><rect x="586.2" y="179.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="589.2" y="190.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.04%)</title><rect x="586.6" y="163.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="589.6" y="174.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (2 samples, 0.03%)</title><rect x="587.3" y="179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="590.3" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="587.6" y="211.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="590.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (267 samples, 3.89%)</title><rect x="588.0" y="227.0" width="45.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.0" y="238.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="588.0" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.0" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (265 samples, 3.86%)</title><rect x="588.3" y="211.0" width="45.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.3" y="222.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="590.0" y="195.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="593.0" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="590.0" y="179.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="593.0" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="590.2" y="163.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.2" y="174.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="590.2" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="593.2" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="590.2" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.2" y="142.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="590.7" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="593.7" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="591.1" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="594.1" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (170 samples, 2.48%)</title><rect x="591.9" y="195.0" width="29.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="594.9" y="206.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="591.9" y="179.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="594.9" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (168 samples, 2.45%)</title><rect x="592.3" y="179.0" width="28.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="595.3" y="190.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (168 samples, 2.45%)</title><rect x="592.3" y="163.0" width="28.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.3" y="174.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (167 samples, 2.43%)</title><rect x="592.4" y="147.0" width="28.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="595.4" y="158.0">_r..</text>
</g>
<g>
<title>tcp_ack (48 samples, 0.70%)</title><rect x="621.1" y="195.0" width="8.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="624.1" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.26%)</title><rect x="624.2" y="179.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="627.2" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.10%)</title><rect x="624.2" y="163.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="627.2" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.10%)</title><rect x="624.2" y="147.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="627.2" y="158.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="625.1" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.1" y="142.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.16%)</title><rect x="625.4" y="163.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.4" y="174.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.16%)</title><rect x="625.4" y="147.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.4" y="158.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.09%)</title><rect x="626.3" y="131.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="629.3" y="142.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.09%)</title><rect x="626.3" y="115.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.3" y="126.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="626.6" y="99.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.6" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="627.3" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="630.3" y="190.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.04%)</title><rect x="627.7" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.7" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (3 samples, 0.04%)</title><rect x="628.2" y="179.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.2" y="190.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="628.9" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.9" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.06%)</title><rect x="629.4" y="195.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.4" y="206.0"></text>
</g>
<g>
<title>tcp_event_data_recv (11 samples, 0.16%)</title><rect x="630.1" y="195.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.1" y="206.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.37 (4 samples, 0.06%)</title><rect x="631.3" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.3" y="190.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.37 (2 samples, 0.03%)</title><rect x="632.0" y="195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="635.0" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="632.3" y="195.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="635.3" y="206.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="632.3" y="179.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="635.3" y="190.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="633.4" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="636.4" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="633.9" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.9" y="286.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="634.9" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.9" y="398.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="635.2" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.2" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (28 samples, 0.41%)</title><rect x="635.6" y="451.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="638.6" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (28 samples, 0.41%)</title><rect x="635.6" y="435.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.6" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (17 samples, 0.25%)</title><rect x="635.8" y="419.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.8" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.13%)</title><rect x="636.4" y="403.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.4" y="414.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="637.1" y="387.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="640.1" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="637.1" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="640.1" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="637.1" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.1" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="638.3" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.3" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.12%)</title><rect x="638.9" y="419.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.9" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="639.5" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.5" y="414.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="639.9" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="642.9" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.26%)</title><rect x="640.7" y="499.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.7" y="510.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (17 samples, 0.25%)</title><rect x="640.9" y="483.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="643.9" y="494.0"></text>
</g>
<g>
<title>selinux_ip_postroute (17 samples, 0.25%)</title><rect x="640.9" y="467.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.9" y="478.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (13 samples, 0.19%)</title><rect x="641.4" y="451.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.4" y="462.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.04%)</title><rect x="642.3" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.3" y="446.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (5 samples, 0.07%)</title><rect x="642.8" y="435.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.8" y="446.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.07%)</title><rect x="642.8" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.8" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.06%)</title><rect x="643.8" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.8" y="510.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.04%)</title><rect x="644.9" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="647.9" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="645.4" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.4" y="542.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="646.1" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.1" y="574.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="646.2" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.09%)</title><rect x="647.8" y="579.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.8" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="648.5" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="651.5" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="648.5" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="651.5" y="558.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="648.5" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.5" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="648.8" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="651.8" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="649.5" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.5" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.06%)</title><rect x="650.0" y="611.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.0" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.06%)</title><rect x="650.7" y="627.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.7" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.06%)</title><rect x="650.7" y="611.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="653.7" y="622.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="651.4" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.4" y="638.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="651.7" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.7" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.10%)</title><rect x="652.6" y="675.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="655.6" y="686.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.07%)</title><rect x="652.6" y="659.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="655.6" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.06%)</title><rect x="652.8" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.8" y="654.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (4 samples, 0.06%)</title><rect x="653.8" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="656.8" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="654.5" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="657.5" y="702.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="654.5" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="657.5" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="654.5" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.5" y="670.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="654.5" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="657.5" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.10%)</title><rect x="654.8" y="723.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="657.8" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.07%)</title><rect x="655.2" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.2" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.06%)</title><rect x="655.4" y="691.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.4" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.06%)</title><rect x="656.6" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.6" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="656.6" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="659.6" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="656.6" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="659.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="656.6" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="659.6" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (3 samples, 0.04%)</title><rect x="656.6" y="723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="659.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (843 samples, 12.28%)</title><rect x="657.2" y="819.0" width="145.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.2" y="830.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.13%)</title><rect x="659.7" y="803.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.13%)</title><rect x="659.7" y="787.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.13%)</title><rect x="659.7" y="771.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="660.5" y="755.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="663.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="660.9" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="663.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="660.9" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="663.9" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="660.9" y="723.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="663.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (808 samples, 11.77%)</title><rect x="661.2" y="803.0" width="138.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.2" y="814.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.60%)</title><rect x="661.5" y="787.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.5" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="665.5" y="771.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="668.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.22%)</title><rect x="665.8" y="771.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.22%)</title><rect x="665.8" y="755.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (15 samples, 0.22%)</title><rect x="665.8" y="739.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (765 samples, 11.15%)</title><rect x="668.6" y="787.0" width="131.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.6" y="798.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (765 samples, 11.15%)</title><rect x="668.6" y="771.0" width="131.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.6" y="782.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (763 samples, 11.12%)</title><rect x="668.9" y="755.0" width="131.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.9" y="766.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="669.6" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (757 samples, 11.03%)</title><rect x="670.0" y="739.0" width="130.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.0" y="750.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.17%)</title><rect x="671.5" y="723.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="674.5" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="672.7" y="707.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="675.7" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="673.1" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="676.1" y="702.0"></text>
</g>
<g>
<title>__send (734 samples, 10.69%)</title><rect x="673.8" y="723.0" width="126.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="676.8" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (696 samples, 10.14%)</title><rect x="680.3" y="707.0" width="119.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="683.3" y="718.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (695 samples, 10.13%)</title><rect x="680.5" y="691.0" width="119.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.5" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (684 samples, 9.97%)</title><rect x="682.2" y="675.0" width="117.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.2" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (684 samples, 9.97%)</title><rect x="682.2" y="659.0" width="117.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.2" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (663 samples, 9.66%)</title><rect x="683.9" y="643.0" width="114.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="686.9" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (646 samples, 9.41%)</title><rect x="684.2" y="627.0" width="111.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="687.2" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (643 samples, 9.37%)</title><rect x="684.8" y="611.0" width="110.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="687.8" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="685.3" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="688.3" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="685.3" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="688.3" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="685.3" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (8 samples, 0.12%)</title><rect x="686.3" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.3" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="687.7" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (621 samples, 9.05%)</title><rect x="688.0" y="595.0" width="106.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="691.0" y="606.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="690.8" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="693.8" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.10%)</title><rect x="691.1" y="579.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.1" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="691.6" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.6" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.06%)</title><rect x="692.5" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.5" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.06%)</title><rect x="692.5" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="695.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (35 samples, 0.51%)</title><rect x="693.2" y="579.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="696.2" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (30 samples, 0.44%)</title><rect x="693.9" y="563.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (12 samples, 0.17%)</title><rect x="694.4" y="547.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.17%)</title><rect x="694.4" y="531.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.4" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="696.1" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="699.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.06%)</title><rect x="696.6" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="699.6" y="558.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.09%)</title><rect x="697.3" y="547.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="700.3" y="558.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.09%)</title><rect x="697.3" y="531.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="700.3" y="542.0"></text>
</g>
<g>
<title>should_failslab (4 samples, 0.06%)</title><rect x="698.3" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.3" y="558.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.06%)</title><rect x="699.2" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.2" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="699.5" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="702.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (543 samples, 7.91%)</title><rect x="700.1" y="579.0" width="93.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.1" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (540 samples, 7.87%)</title><rect x="700.4" y="563.0" width="92.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="703.4" y="574.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (538 samples, 7.84%)</title><rect x="700.7" y="547.0" width="92.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.7" y="558.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (505 samples, 7.36%)</title><rect x="702.5" y="531.0" width="86.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="705.5" y="542.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.03%)</title><rect x="706.4" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="709.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (476 samples, 6.93%)</title><rect x="706.8" y="515.0" width="81.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="709.8" y="526.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (475 samples, 6.92%)</title><rect x="706.8" y="499.0" width="81.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="709.8" y="510.0">__ip_queu..</text>
</g>
<g>
<title>ip_local_out (463 samples, 6.75%)</title><rect x="707.8" y="483.0" width="79.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.8" y="494.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.12%)</title><rect x="708.3" y="467.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="711.3" y="478.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="708.8" y="451.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="711.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="709.2" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.2" y="462.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.03%)</title><rect x="709.2" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="712.2" y="446.0"></text>
</g>
<g>
<title>ip_output (446 samples, 6.50%)</title><rect x="709.7" y="467.0" width="76.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.7" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (417 samples, 6.08%)</title><rect x="710.7" y="451.0" width="71.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.7" y="462.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.07%)</title><rect x="710.7" y="435.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.7" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (408 samples, 5.94%)</title><rect x="711.6" y="435.0" width="70.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.6" y="446.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (399 samples, 5.81%)</title><rect x="712.8" y="419.0" width="68.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.8" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (337 samples, 4.91%)</title><rect x="715.2" y="403.0" width="57.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.2" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (333 samples, 4.85%)</title><rect x="715.9" y="387.0" width="57.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="718.9" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (328 samples, 4.78%)</title><rect x="716.7" y="371.0" width="56.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="719.7" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (328 samples, 4.78%)</title><rect x="716.7" y="355.0" width="56.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="719.7" y="366.0">__soft..</text>
</g>
<g>
<title>net_rx_action (317 samples, 4.62%)</title><rect x="718.3" y="339.0" width="54.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.3" y="350.0">net_r..</text>
</g>
<g>
<title>process_backlog (312 samples, 4.55%)</title><rect x="719.1" y="323.0" width="53.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.1" y="334.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (303 samples, 4.41%)</title><rect x="720.5" y="307.0" width="52.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="723.5" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (302 samples, 4.40%)</title><rect x="720.5" y="291.0" width="51.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="723.5" y="302.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (14 samples, 0.20%)</title><rect x="720.7" y="275.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (284 samples, 4.14%)</title><rect x="723.1" y="275.0" width="48.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.1" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="723.6" y="259.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (4 samples, 0.06%)</title><rect x="723.9" y="259.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (273 samples, 3.98%)</title><rect x="724.6" y="259.0" width="47.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.6" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (269 samples, 3.92%)</title><rect x="725.0" y="243.0" width="46.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="728.0" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (268 samples, 3.90%)</title><rect x="725.0" y="227.0" width="46.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.0" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (268 samples, 3.90%)</title><rect x="725.0" y="211.0" width="46.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="728.0" y="222.0">ip_p..</text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="725.5" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="726.0" y="195.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="729.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (260 samples, 3.79%)</title><rect x="726.4" y="195.0" width="44.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="729.4" y="206.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (15 samples, 0.22%)</title><rect x="727.6" y="179.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.6" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="729.6" y="163.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="732.6" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="730.3" y="179.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="733.3" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (33 samples, 0.48%)</title><rect x="731.0" y="179.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.0" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="731.2" y="163.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.2" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="732.0" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.0" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (20 samples, 0.29%)</title><rect x="732.4" y="163.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.4" y="174.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (15 samples, 0.22%)</title><rect x="733.2" y="147.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.2" y="158.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (10 samples, 0.15%)</title><rect x="734.1" y="131.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="737.1" y="142.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.04%)</title><rect x="735.1" y="115.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.1" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (5 samples, 0.07%)</title><rect x="735.8" y="163.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="738.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (198 samples, 2.88%)</title><rect x="736.7" y="179.0" width="34.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.7" y="190.0">tc..</text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="736.8" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="739.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (194 samples, 2.83%)</title><rect x="737.4" y="163.0" width="33.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.4" y="174.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.10%)</title><rect x="738.6" y="147.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="741.6" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.10%)</title><rect x="738.6" y="131.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="741.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="739.1" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.1" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="739.1" y="99.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="742.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="739.1" y="83.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="742.1" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="739.8" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.8" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="740.3" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="743.3" y="158.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="740.8" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (87 samples, 1.27%)</title><rect x="741.1" y="147.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="744.1" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (85 samples, 1.24%)</title><rect x="741.5" y="131.0" width="14.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="744.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (85 samples, 1.24%)</title><rect x="741.5" y="115.0" width="14.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="744.5" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (85 samples, 1.24%)</title><rect x="741.5" y="99.0" width="14.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="744.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (63 samples, 0.92%)</title><rect x="756.1" y="147.0" width="10.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.1" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.32%)</title><rect x="759.9" y="131.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="762.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="759.9" y="115.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="762.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="759.9" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.29%)</title><rect x="760.2" y="115.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="763.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (19 samples, 0.28%)</title><rect x="760.2" y="99.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="763.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (12 samples, 0.17%)</title><rect x="761.4" y="83.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="764.4" y="94.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.16%)</title><rect x="761.6" y="67.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.07%)</title><rect x="762.6" y="51.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="765.6" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="763.7" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (7 samples, 0.10%)</title><rect x="764.5" y="131.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="767.5" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="766.1" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.1" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.04%)</title><rect x="766.4" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.4" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.10%)</title><rect x="766.9" y="147.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="769.9" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.06%)</title><rect x="768.1" y="147.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.1" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="768.8" y="147.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.8" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="768.8" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.8" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="769.2" y="131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.2" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.09%)</title><rect x="769.5" y="147.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="772.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="770.7" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="773.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.03%)</title><rect x="771.6" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="774.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.04%)</title><rect x="771.9" y="275.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="774.9" y="286.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="772.8" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.8" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (47 samples, 0.68%)</title><rect x="773.1" y="403.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="776.1" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (45 samples, 0.66%)</title><rect x="773.1" y="387.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.29%)</title><rect x="774.3" y="371.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="777.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.17%)</title><rect x="774.7" y="355.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.7" y="366.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.09%)</title><rect x="775.0" y="339.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="778.0" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.09%)</title><rect x="775.0" y="323.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="778.0" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.07%)</title><rect x="775.2" y="307.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.2" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="776.4" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.4" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.06%)</title><rect x="776.7" y="355.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.7" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="777.4" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.4" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.09%)</title><rect x="777.8" y="371.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="780.8" y="382.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="778.8" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.12%)</title><rect x="779.1" y="371.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.1" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="779.8" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="782.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="780.5" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="783.5" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="780.9" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.9" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="781.4" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="784.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.04%)</title><rect x="781.7" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.29%)</title><rect x="782.4" y="451.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.4" y="462.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.04%)</title><rect x="782.4" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.4" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (17 samples, 0.25%)</title><rect x="782.9" y="435.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="785.9" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (16 samples, 0.23%)</title><rect x="782.9" y="419.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.9" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (9 samples, 0.13%)</title><rect x="783.4" y="403.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.4" y="414.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (5 samples, 0.07%)</title><rect x="783.6" y="387.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="786.6" y="398.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (3 samples, 0.04%)</title><rect x="784.5" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="787.5" y="398.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.04%)</title><rect x="784.5" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="787.5" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (3 samples, 0.04%)</title><rect x="785.1" y="403.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="788.1" y="414.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.04%)</title><rect x="785.8" y="451.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.07%)</title><rect x="786.5" y="467.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="789.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.09%)</title><rect x="787.4" y="483.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.4" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="788.6" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="788.6" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.6" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="788.9" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="791.9" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="789.4" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="792.4" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="790.0" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="793.0" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="790.3" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="793.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.12%)</title><rect x="790.8" y="531.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.8" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.09%)</title><rect x="791.2" y="515.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="794.2" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="791.9" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="794.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="791.9" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.9" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="792.2" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.09%)</title><rect x="793.4" y="579.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.4" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="793.6" y="563.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.6" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="793.9" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="796.9" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="794.4" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="797.4" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="794.8" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="797.8" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (12 samples, 0.17%)</title><rect x="795.5" y="627.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="798.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="795.5" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="798.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="795.5" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="798.5" y="606.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.07%)</title><rect x="796.0" y="611.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="799.0" y="622.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.07%)</title><rect x="796.0" y="595.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="799.0" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.03%)</title><rect x="796.8" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="799.8" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (2 samples, 0.03%)</title><rect x="796.8" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.8" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (2 samples, 0.03%)</title><rect x="797.2" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="800.2" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.03%)</title><rect x="797.5" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="800.5" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.16%)</title><rect x="797.9" y="643.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.9" y="654.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.13%)</title><rect x="797.9" y="627.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="800.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.13%)</title><rect x="797.9" y="611.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="800.9" y="622.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.12%)</title><rect x="798.0" y="595.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="801.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="799.4" y="627.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="802.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.17%)</title><rect x="800.1" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.16%)</title><rect x="800.3" y="787.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.16%)</title><rect x="800.3" y="771.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.09%)</title><rect x="802.2" y="819.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3 samples, 0.04%)</title><rect x="802.7" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.isLocal (10 samples, 0.15%)</title><rect x="803.2" y="835.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equals (10 samples, 0.15%)</title><rect x="803.2" y="819.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.nodeFor (86 samples, 1.25%)</title><rect x="804.9" y="835.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.nodeFor (84 samples, 1.22%)</title><rect x="805.3" y="819.0" width="14.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.03%)</title><rect x="805.4" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.firstKey (28 samples, 0.41%)</title><rect x="805.8" y="803.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.8" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.subLowest (28 samples, 0.41%)</title><rect x="805.8" y="787.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (28 samples, 0.41%)</title><rect x="805.8" y="771.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (28 samples, 0.41%)</title><rect x="805.8" y="755.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (12 samples, 0.17%)</title><rect x="808.5" y="739.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.5" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (8 samples, 0.12%)</title><rect x="810.6" y="803.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.isEmpty (7 samples, 0.10%)</title><rect x="810.8" y="787.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (7 samples, 0.10%)</title><rect x="810.8" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (7 samples, 0.10%)</title><rect x="810.8" y="755.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.06%)</title><rect x="811.3" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (18 samples, 0.26%)</title><rect x="812.0" y="803.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.0" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (16 samples, 0.23%)</title><rect x="812.3" y="787.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.15%)</title><rect x="813.3" y="771.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.3" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.firstKey (3 samples, 0.04%)</title><rect x="815.1" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.04%)</title><rect x="815.1" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (21 samples, 0.31%)</title><rect x="815.6" y="803.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.07%)</title><rect x="816.3" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.17%)</title><rect x="817.1" y="787.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.13%)</title><rect x="817.5" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3 samples, 0.04%)</title><rect x="819.2" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3 samples, 0.04%)</title><rect x="819.2" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="819.2" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="819.2" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="819.4" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.wrapString (39 samples, 0.57%)</title><rect x="819.7" y="851.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.16%)</title><rect x="819.7" y="835.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.16%)</title><rect x="819.7" y="819.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="820.9" y="803.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="823.9" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="820.9" y="787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="823.9" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="820.9" y="771.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="823.9" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="820.9" y="755.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="823.9" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="821.1" y="739.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="824.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.toBytes (28 samples, 0.41%)</title><rect x="821.6" y="835.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (28 samples, 0.41%)</title><rect x="821.6" y="819.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.07%)</title><rect x="822.3" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="822.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.22%)</title><rect x="823.1" y="803.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.20%)</title><rect x="823.3" y="787.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.07%)</title><rect x="824.7" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.04%)</title><rect x="825.0" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy (4 samples, 0.06%)</title><rect x="825.7" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.7" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,563 samples, 22.77%)</title><rect x="826.8" y="995.0" width="268.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.8" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="827.6" y="979.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="830.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="827.6" y="963.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="830.6" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="827.6" y="947.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="830.6" y="958.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="828.0" y="979.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="831.0" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.06%)</title><rect x="828.3" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="829.0" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.0" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (17 samples, 0.25%)</title><rect x="829.3" y="979.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (17 samples, 0.25%)</title><rect x="829.3" y="963.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (11 samples, 0.16%)</title><rect x="830.4" y="947.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (551 samples, 8.03%)</title><rect x="832.3" y="979.0" width="94.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.3" y="990.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.06%)</title><rect x="833.1" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (542 samples, 7.90%)</title><rect x="833.8" y="963.0" width="93.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.8" y="974.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.06%)</title><rect x="836.0" y="947.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="839.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (504 samples, 7.34%)</title><rect x="836.7" y="947.0" width="86.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="839.7" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8 samples, 0.12%)</title><rect x="836.7" y="931.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="839.7" y="942.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.12%)</title><rect x="836.7" y="915.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="839.7" y="926.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.09%)</title><rect x="837.1" y="899.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="840.1" y="910.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="837.4" y="883.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="840.4" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="838.1" y="931.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="841.1" y="942.0"></text>
</g>
<g>
<title>epoll_wait (491 samples, 7.15%)</title><rect x="838.8" y="931.0" width="84.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="841.8" y="942.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (393 samples, 5.73%)</title><rect x="855.6" y="915.0" width="67.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="858.6" y="926.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.07%)</title><rect x="855.6" y="899.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="858.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (388 samples, 5.65%)</title><rect x="856.5" y="899.0" width="66.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="859.5" y="910.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (363 samples, 5.29%)</title><rect x="860.6" y="883.0" width="62.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.6" y="894.0">__x64_..</text>
</g>
<g>
<title>do_epoll_wait (361 samples, 5.26%)</title><rect x="860.8" y="867.0" width="62.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.8" y="878.0">do_epo..</text>
</g>
<g>
<title>__fdget (11 samples, 0.16%)</title><rect x="861.3" y="851.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="864.3" y="862.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.16%)</title><rect x="861.3" y="835.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.3" y="846.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.10%)</title><rect x="862.0" y="819.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.0" y="830.0"></text>
</g>
<g>
<title>ep_poll (332 samples, 4.84%)</title><rect x="863.4" y="851.0" width="57.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.4" y="862.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (280 samples, 4.08%)</title><rect x="866.6" y="835.0" width="48.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="869.6" y="846.0">ep_s..</text>
</g>
<g>
<title>ep_send_events_proc (211 samples, 3.07%)</title><rect x="877.1" y="819.0" width="36.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="880.1" y="830.0">ep_..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (156 samples, 2.27%)</title><rect x="884.5" y="803.0" width="26.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="887.5" y="814.0">e..</text>
</g>
<g>
<title>sock_poll (120 samples, 1.75%)</title><rect x="890.2" y="787.0" width="20.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="893.2" y="798.0"></text>
</g>
<g>
<title>tcp_poll (35 samples, 0.51%)</title><rect x="902.2" y="771.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="905.2" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (6 samples, 0.09%)</title><rect x="907.2" y="755.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.2" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (15 samples, 0.22%)</title><rect x="908.2" y="771.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="911.2" y="782.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.04%)</title><rect x="910.8" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.8" y="798.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.17%)</title><rect x="911.3" y="803.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.3" y="814.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.06%)</title><rect x="913.4" y="819.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="916.4" y="830.0"></text>
</g>
<g>
<title>mutex_unlock (4 samples, 0.06%)</title><rect x="914.1" y="819.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="917.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="914.8" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.8" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (30 samples, 0.44%)</title><rect x="915.1" y="835.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="918.1" y="846.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="915.1" y="819.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="918.1" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (28 samples, 0.41%)</title><rect x="915.5" y="819.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.5" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="915.6" y="803.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.6" y="814.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.36%)</title><rect x="916.0" y="803.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.0" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (21 samples, 0.31%)</title><rect x="916.7" y="787.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.7" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="919.8" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="922.8" y="782.0"></text>
</g>
<g>
<title>fput (14 samples, 0.20%)</title><rect x="920.4" y="851.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="923.4" y="862.0"></text>
</g>
<g>
<title>fput_many (14 samples, 0.20%)</title><rect x="920.4" y="835.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.4" y="846.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.10%)</title><rect x="923.4" y="947.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="926.4" y="958.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="924.6" y="947.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="927.6" y="958.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.15%)</title><rect x="924.9" y="947.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="927.9" y="958.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.03%)</title><rect x="926.6" y="947.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="929.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (977 samples, 14.23%)</title><rect x="927.0" y="979.0" width="167.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.0" y="990.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (969 samples, 14.12%)</title><rect x="928.2" y="963.0" width="166.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.2" y="974.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (2 samples, 0.03%)</title><rect x="928.2" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (2 samples, 0.03%)</title><rect x="928.2" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (2 samples, 0.03%)</title><rect x="928.2" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="928.2" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.03%)</title><rect x="928.2" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="928.2" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="928.2" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="928.2" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="928.2" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="928.2" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="928.2" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="928.2" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="928.2" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (658 samples, 9.59%)</title><rect x="928.5" y="947.0" width="113.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.5" y="958.0">one/nio/http/H..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="934.4" y="931.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="937.4" y="942.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="935.1" y="931.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="938.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (363 samples, 5.29%)</title><rect x="935.7" y="931.0" width="62.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.7" y="942.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (363 samples, 5.29%)</title><rect x="935.7" y="915.0" width="62.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.7" y="926.0">one/ni..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (316 samples, 4.60%)</title><rect x="936.4" y="899.0" width="54.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="939.4" y="910.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (27 samples, 0.39%)</title><rect x="936.4" y="883.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (27 samples, 0.39%)</title><rect x="936.4" y="867.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="937.8" y="851.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="937.8" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.07%)</title><rect x="937.8" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (13 samples, 0.19%)</title><rect x="938.8" y="851.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.16%)</title><rect x="939.2" y="835.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.16%)</title><rect x="939.2" y="819.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.16%)</title><rect x="939.2" y="803.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (289 samples, 4.21%)</title><rect x="941.1" y="883.0" width="49.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.1" y="894.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (288 samples, 4.20%)</title><rect x="941.2" y="867.0" width="49.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.2" y="878.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (288 samples, 4.20%)</title><rect x="941.2" y="851.0" width="49.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.2" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (288 samples, 4.20%)</title><rect x="941.2" y="835.0" width="49.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.2" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (21 samples, 0.31%)</title><rect x="944.9" y="819.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.15%)</title><rect x="946.7" y="803.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.15%)</title><rect x="946.7" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.10%)</title><rect x="947.3" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.03%)</title><rect x="947.9" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="947.9" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="947.9" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.09%)</title><rect x="948.5" y="819.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.09%)</title><rect x="948.5" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.09%)</title><rect x="948.5" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.06%)</title><rect x="948.5" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.06%)</title><rect x="948.5" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.06%)</title><rect x="948.5" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.5" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.04%)</title><rect x="948.5" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="951.5" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="948.6" y="707.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="951.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="949.2" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="949.2" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="949.2" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="949.2" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="949.2" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (236 samples, 3.44%)</title><rect x="949.5" y="819.0" width="40.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.5" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (236 samples, 3.44%)</title><rect x="949.5" y="803.0" width="40.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.5" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (236 samples, 3.44%)</title><rect x="949.5" y="787.0" width="40.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.5" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (236 samples, 3.44%)</title><rect x="949.5" y="771.0" width="40.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.5" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.09%)</title><rect x="949.8" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (228 samples, 3.32%)</title><rect x="950.9" y="755.0" width="39.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.9" y="766.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.04%)</title><rect x="951.2" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="954.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.57%)</title><rect x="951.7" y="739.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="954.7" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="952.6" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="955.6" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="952.9" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="955.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.13%)</title><rect x="953.3" y="723.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.3" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.04%)</title><rect x="954.8" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="957.8" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.04%)</title><rect x="955.5" y="723.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="958.5" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="956.0" y="723.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="959.0" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (9 samples, 0.13%)</title><rect x="956.5" y="723.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="959.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (178 samples, 2.59%)</title><rect x="958.4" y="739.0" width="30.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="961.4" y="750.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (135 samples, 1.97%)</title><rect x="965.8" y="723.0" width="23.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="968.8" y="734.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="965.8" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="968.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (133 samples, 1.94%)</title><rect x="966.2" y="707.0" width="22.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.2" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (125 samples, 1.82%)</title><rect x="967.5" y="691.0" width="21.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="970.5" y="702.0">_..</text>
</g>
<g>
<title>do_futex (119 samples, 1.73%)</title><rect x="968.1" y="675.0" width="20.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="971.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (116 samples, 1.69%)</title><rect x="968.2" y="659.0" width="20.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="971.2" y="670.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.06%)</title><rect x="969.4" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.4" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.03%)</title><rect x="969.8" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="972.8" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.15%)</title><rect x="970.3" y="643.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (94 samples, 1.37%)</title><rect x="972.0" y="643.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="975.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (90 samples, 1.31%)</title><rect x="972.7" y="627.0" width="15.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="975.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (90 samples, 1.31%)</title><rect x="972.7" y="611.0" width="15.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="975.7" y="622.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="988.2" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="991.2" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="988.5" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.5" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.09%)</title><rect x="989.0" y="739.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="992.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.06%)</title><rect x="990.1" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (41 samples, 0.60%)</title><rect x="990.8" y="899.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (41 samples, 0.60%)</title><rect x="990.8" y="883.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (22 samples, 0.32%)</title><rect x="990.8" y="867.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (19 samples, 0.28%)</title><rect x="994.5" y="867.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (19 samples, 0.28%)</title><rect x="994.5" y="851.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (19 samples, 0.28%)</title><rect x="994.5" y="835.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.03%)</title><rect x="997.8" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="997.8" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="997.8" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.8" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="997.8" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.8" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="997.8" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1000.8" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="997.8" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="997.8" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1000.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (52 samples, 0.76%)</title><rect x="998.1" y="931.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1001.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.15%)</title><rect x="998.5" y="915.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.5" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="998.5" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1001.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.12%)</title><rect x="998.8" y="899.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.12%)</title><rect x="998.8" y="883.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.12%)</title><rect x="998.8" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="999.7" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.38%)</title><rect x="1000.2" y="915.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.2" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.36%)</title><rect x="1000.4" y="899.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.4" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (14 samples, 0.20%)</title><rect x="1004.7" y="915.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (46 samples, 0.67%)</title><rect x="1007.1" y="931.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.1" y="942.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (12 samples, 0.17%)</title><rect x="1008.6" y="915.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.6" y="926.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.15%)</title><rect x="1010.7" y="915.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1013.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.20%)</title><rect x="1012.4" y="915.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.20%)</title><rect x="1012.4" y="899.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.4" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (155 samples, 2.26%)</title><rect x="1015.0" y="931.0" width="26.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.0" y="942.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.50%)</title><rect x="1035.8" y="915.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1038.8" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="1040.4" y="899.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.4" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.06%)</title><rect x="1040.4" y="883.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.4" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1040.6" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1041.1" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1041.1" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.04%)</title><rect x="1041.1" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="1041.1" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.1" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="1041.1" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1044.1" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1041.1" y="819.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1044.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="1041.6" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.6" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="1041.6" y="931.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (307 samples, 4.47%)</title><rect x="1042.0" y="947.0" width="52.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (305 samples, 4.44%)</title><rect x="1042.3" y="931.0" width="52.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.3" y="942.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (38 samples, 0.55%)</title><rect x="1044.2" y="915.0" width="6.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1047.2" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1044.7" y="899.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.7" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (5 samples, 0.07%)</title><rect x="1045.1" y="899.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1048.1" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (11 samples, 0.16%)</title><rect x="1045.9" y="899.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1048.9" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.23%)</title><rect x="1047.8" y="899.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1050.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (4 samples, 0.06%)</title><rect x="1049.9" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1052.9" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="1050.8" y="915.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1053.8" y="926.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="1051.3" y="915.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1054.3" y="926.0"></text>
</g>
<g>
<title>__recv (244 samples, 3.55%)</title><rect x="1051.8" y="915.0" width="41.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1054.8" y="926.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (179 samples, 2.61%)</title><rect x="1063.0" y="899.0" width="30.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1066.0" y="910.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.04%)</title><rect x="1063.0" y="883.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1066.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (176 samples, 2.56%)</title><rect x="1063.5" y="883.0" width="30.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1066.5" y="894.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (145 samples, 2.11%)</title><rect x="1068.8" y="867.0" width="24.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1071.8" y="878.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (140 samples, 2.04%)</title><rect x="1068.8" y="851.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.8" y="862.0">_..</text>
</g>
<g>
<title>sock_recvmsg (119 samples, 1.73%)</title><rect x="1070.0" y="835.0" width="20.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1073.0" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1070.3" y="819.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.3" y="830.0"></text>
</g>
<g>
<title>inet6_recvmsg (101 samples, 1.47%)</title><rect x="1070.7" y="819.0" width="17.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1073.7" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (97 samples, 1.41%)</title><rect x="1071.4" y="803.0" width="16.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1074.4" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.26%)</title><rect x="1072.6" y="787.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1075.6" y="798.0"></text>
</g>
<g>
<title>skb_release_all (17 samples, 0.25%)</title><rect x="1072.6" y="771.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.6" y="782.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.09%)</title><rect x="1072.6" y="755.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1075.6" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (11 samples, 0.16%)</title><rect x="1073.6" y="755.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1076.6" y="766.0"></text>
</g>
<g>
<title>dst_release (9 samples, 0.13%)</title><rect x="1073.6" y="739.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1076.6" y="750.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1075.2" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1078.2" y="750.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="1075.7" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1078.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="1076.0" y="787.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1079.0" y="798.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.07%)</title><rect x="1076.7" y="787.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1079.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="1076.7" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1079.7" y="782.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.09%)</title><rect x="1077.6" y="787.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1080.6" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (38 samples, 0.55%)</title><rect x="1078.6" y="787.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1081.6" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (35 samples, 0.51%)</title><rect x="1078.8" y="771.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1081.8" y="782.0"></text>
</g>
<g>
<title>simple_copy_to_iter (26 samples, 0.38%)</title><rect x="1080.3" y="755.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.3" y="766.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1080.3" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1083.3" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.09%)</title><rect x="1080.7" y="739.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.7" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.22%)</title><rect x="1081.7" y="739.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1084.7" y="750.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.19%)</title><rect x="1081.9" y="723.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1084.9" y="734.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="1084.4" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1087.4" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.03%)</title><rect x="1084.8" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1087.8" y="782.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.10%)</title><rect x="1085.1" y="787.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1088.1" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.13%)</title><rect x="1086.3" y="787.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1089.3" y="798.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.13%)</title><rect x="1086.3" y="771.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.3" y="782.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1086.5" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.5" y="766.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.09%)</title><rect x="1086.9" y="755.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.9" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.19%)</title><rect x="1088.1" y="819.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1091.1" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.04%)</title><rect x="1088.1" y="803.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.1" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="1088.1" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1091.1" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="1088.1" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.1" y="782.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (10 samples, 0.15%)</title><rect x="1088.6" y="803.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1091.6" y="814.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.15%)</title><rect x="1088.6" y="787.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1091.6" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.20%)</title><rect x="1090.5" y="835.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1093.5" y="846.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.13%)</title><rect x="1090.5" y="819.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1093.5" y="830.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.13%)</title><rect x="1090.5" y="803.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1093.5" y="814.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.12%)</title><rect x="1090.6" y="787.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1093.6" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="1092.0" y="819.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1095.0" y="830.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="1093.0" y="851.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1096.0" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.09%)</title><rect x="1093.7" y="915.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1096.7" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1094.9" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.9" y="990.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="1094.9" y="963.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1097.9" y="974.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1094.9" y="947.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1097.9" y="958.0"></text>
</g>
<g>
<title>start_thread (550 samples, 8.01%)</title><rect x="1095.4" y="995.0" width="94.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1098.4" y="1006.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (550 samples, 8.01%)</title><rect x="1095.4" y="979.0" width="94.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1098.4" y="990.0">thread_nati..</text>
</g>
<g>
<title>Thread::call_run() (550 samples, 8.01%)</title><rect x="1095.4" y="963.0" width="94.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1098.4" y="974.0">Thread::cal..</text>
</g>
<g>
<title>GangWorker::loop() (540 samples, 7.87%)</title><rect x="1095.4" y="947.0" width="92.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.4" y="958.0">GangWorker:..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (217 samples, 3.16%)</title><rect x="1095.4" y="931.0" width="37.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.4" y="942.0">G1C..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (216 samples, 3.15%)</title><rect x="1095.4" y="915.0" width="37.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.4" y="926.0">G1C..</text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (110 samples, 1.60%)</title><rect x="1096.3" y="899.0" width="18.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1099.3" y="910.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (78 samples, 1.14%)</title><rect x="1096.8" y="883.0" width="13.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1099.8" y="894.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (66 samples, 0.96%)</title><rect x="1098.7" y="867.0" width="11.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.7" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (57 samples, 0.83%)</title><rect x="1099.9" y="851.0" width="9.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1102.9" y="862.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (42 samples, 0.61%)</title><rect x="1102.0" y="835.0" width="7.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.0" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (10 samples, 0.15%)</title><rect x="1107.5" y="819.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.5" y="830.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.04%)</title><rect x="1109.2" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1112.2" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1109.7" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1112.7" y="862.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.03%)</title><rect x="1109.7" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1112.7" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1109.7" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1112.7" y="830.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (28 samples, 0.41%)</title><rect x="1110.4" y="883.0" width="4.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1113.4" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (15 samples, 0.22%)</title><rect x="1111.8" y="867.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1114.8" y="878.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (13 samples, 0.19%)</title><rect x="1112.0" y="851.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.0" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1113.8" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1116.8" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1114.4" y="867.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1117.4" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1114.9" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1117.9" y="878.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (98 samples, 1.43%)</title><rect x="1115.4" y="899.0" width="16.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.4" y="910.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (83 samples, 1.21%)</title><rect x="1117.8" y="883.0" width="14.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.8" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (77 samples, 1.12%)</title><rect x="1118.8" y="867.0" width="13.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.8" y="878.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (62 samples, 0.90%)</title><rect x="1120.7" y="851.0" width="10.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.7" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (11 samples, 0.16%)</title><rect x="1129.3" y="835.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1132.3" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1131.6" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.6" y="862.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (7 samples, 0.10%)</title><rect x="1132.9" y="931.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.9" y="942.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (4 samples, 0.06%)</title><rect x="1133.3" y="915.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.3" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (165 samples, 2.40%)</title><rect x="1134.3" y="931.0" width="28.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.3" y="942.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (34 samples, 0.50%)</title><rect x="1134.3" y="915.0" width="5.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.3" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (22 samples, 0.32%)</title><rect x="1136.0" y="899.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.0" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (11 samples, 0.16%)</title><rect x="1137.7" y="883.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.7" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.07%)</title><rect x="1138.8" y="867.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.8" y="878.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (104 samples, 1.52%)</title><rect x="1140.1" y="915.0" width="17.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1143.1" y="926.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (104 samples, 1.52%)</title><rect x="1140.1" y="899.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1143.1" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (104 samples, 1.52%)</title><rect x="1140.1" y="883.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.1" y="894.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (104 samples, 1.52%)</title><rect x="1140.1" y="867.0" width="17.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.1" y="878.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (104 samples, 1.52%)</title><rect x="1140.1" y="851.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.1" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (64 samples, 0.93%)</title><rect x="1140.3" y="835.0" width="11.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.3" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (45 samples, 0.66%)</title><rect x="1143.2" y="819.0" width="7.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.2" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.17%)</title><rect x="1148.9" y="803.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.9" y="814.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (39 samples, 0.57%)</title><rect x="1151.3" y="835.0" width="6.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.3" y="846.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (34 samples, 0.50%)</title><rect x="1151.5" y="819.0" width="5.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.5" y="830.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (13 samples, 0.19%)</title><rect x="1152.9" y="803.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.9" y="814.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (6 samples, 0.09%)</title><rect x="1153.7" y="787.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.7" y="798.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (4 samples, 0.06%)</title><rect x="1153.7" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.7" y="782.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.03%)</title><rect x="1154.8" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.8" y="798.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.03%)</title><rect x="1155.1" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.1" y="814.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.577] (2 samples, 0.03%)</title><rect x="1155.4" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.4" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (6 samples, 0.09%)</title><rect x="1156.3" y="803.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.3" y="814.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.06%)</title><rect x="1156.6" y="787.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.6" y="798.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (20 samples, 0.29%)</title><rect x="1158.0" y="915.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.0" y="926.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (20 samples, 0.29%)</title><rect x="1158.0" y="899.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.0" y="910.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (20 samples, 0.29%)</title><rect x="1158.0" y="883.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.0" y="894.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (18 samples, 0.26%)</title><rect x="1158.2" y="867.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.2" y="878.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (14 samples, 0.20%)</title><rect x="1158.4" y="851.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.4" y="862.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.03%)</title><rect x="1159.2" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.2" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.06%)</title><rect x="1159.6" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.6" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1159.9" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.9" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1160.4" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.4" y="846.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (3 samples, 0.04%)</title><rect x="1160.8" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.8" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.09%)</title><rect x="1161.5" y="915.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.5" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.06%)</title><rect x="1161.6" y="899.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.6" y="910.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1161.8" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.8" y="894.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1161.8" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.8" y="878.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.03%)</title><rect x="1161.8" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.8" y="862.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.03%)</title><rect x="1161.8" y="835.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.8" y="846.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (143 samples, 2.08%)</title><rect x="1162.7" y="931.0" width="24.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.7" y="942.0">G..</text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (143 samples, 2.08%)</title><rect x="1162.7" y="915.0" width="24.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.7" y="926.0">H..</text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (136 samples, 1.98%)</title><rect x="1162.7" y="899.0" width="23.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.7" y="910.0">G..</text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (21 samples, 0.31%)</title><rect x="1171.6" y="883.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.6" y="894.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (3 samples, 0.04%)</title><rect x="1175.2" y="883.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.2" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (56 samples, 0.82%)</title><rect x="1175.7" y="883.0" width="9.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.7" y="894.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_reference(void*, unsigned int) [clone .part.54] (9 samples, 0.13%)</title><rect x="1178.3" y="867.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.3" y="878.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (13 samples, 0.19%)</title><rect x="1180.0" y="867.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.0" y="878.0"></text>
</g>
<g>
<title>BitMap::par_at_put(unsigned long, bool) (4 samples, 0.06%)</title><rect x="1181.2" y="851.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (18 samples, 0.26%)</title><rect x="1182.3" y="867.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.3" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1185.5" y="883.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="894.0"></text>
</g>
<g>
<title>MarkBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (4 samples, 0.06%)</title><rect x="1186.0" y="899.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.0" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1186.7" y="899.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="910.0"></text>
</g>
<g>
<title>ParallelCleaningTask::work(unsigned int) (4 samples, 0.06%)</title><rect x="1187.2" y="931.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.2" y="942.0"></text>
</g>
<g>
<title>nmethod::do_unloading(bool) (3 samples, 0.04%)</title><rect x="1187.4" y="915.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>CompiledMethod::unload_nmethod_caches(bool) (2 samples, 0.03%)</title><rect x="1187.6" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.6" y="910.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (2 samples, 0.03%)</title><rect x="1187.6" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (8 samples, 0.12%)</title><rect x="1188.3" y="947.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.3" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 0.12%)</title><rect x="1188.3" y="931.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.12%)</title><rect x="1188.3" y="915.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="926.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (7 samples, 0.10%)</title><rect x="1188.3" y="899.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.3" y="910.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (7 samples, 0.10%)</title><rect x="1188.3" y="883.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.3" y="894.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 0.06%)</title><rect x="1188.3" y="867.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.04%)</title><rect x="1188.5" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.04%)</title><rect x="1189.0" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
</g>
</svg>
