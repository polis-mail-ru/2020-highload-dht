<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (174,123 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (106,184 samples, 60.98%)</title><rect x="10.0" y="371.0" width="719.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (106,184 samples, 60.98%)</title><rect x="10.0" y="355.0" width="719.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (106,184 samples, 60.98%)</title><rect x="10.0" y="339.0" width="719.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,624 samples, 1.51%)</title><rect x="10.0" y="323.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,624 samples, 1.51%)</title><rect x="10.0" y="307.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,565 samples, 1.47%)</title><rect x="10.0" y="291.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,565 samples, 1.47%)</title><rect x="10.0" y="275.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,565 samples, 1.47%)</title><rect x="10.0" y="259.0" width="17.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (59 samples, 0.03%)</title><rect x="27.4" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (59 samples, 0.03%)</title><rect x="27.4" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (59 samples, 0.03%)</title><rect x="27.4" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (59 samples, 0.03%)</title><rect x="27.4" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (59 samples, 0.03%)</title><rect x="27.4" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="30.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$113/53756968.run (834 samples, 0.48%)</title><rect x="27.8" y="323.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (834 samples, 0.48%)</title><rect x="27.8" y="307.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (833 samples, 0.48%)</title><rect x="27.8" y="291.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (833 samples, 0.48%)</title><rect x="27.8" y="275.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (530 samples, 0.30%)</title><rect x="28.0" y="259.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (384 samples, 0.22%)</title><rect x="28.0" y="243.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="31.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (146 samples, 0.08%)</title><rect x="30.6" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.6" y="254.0"></text>
</g>
<g>
<title>byte[] (146 samples, 0.08%)</title><rect x="30.6" y="227.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.6" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (40 samples, 0.02%)</title><rect x="31.7" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (40 samples, 0.02%)</title><rect x="31.7" y="243.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (40 samples, 0.02%)</title><rect x="31.7" y="227.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (40 samples, 0.02%)</title><rect x="31.7" y="211.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/230448576.getAsBoolean (40 samples, 0.02%)</title><rect x="31.7" y="195.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (40 samples, 0.02%)</title><rect x="31.7" y="179.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (40 samples, 0.02%)</title><rect x="31.7" y="163.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (40 samples, 0.02%)</title><rect x="31.7" y="147.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable$$Lambda$114/1788610210.apply (40 samples, 0.02%)</title><rect x="31.7" y="131.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.lambda$iterator$0 (40 samples, 0.02%)</title><rect x="31.7" y="115.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (40 samples, 0.02%)</title><rect x="31.7" y="99.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="34.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (91 samples, 0.05%)</title><rect x="31.9" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (91 samples, 0.05%)</title><rect x="31.9" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (91 samples, 0.05%)</title><rect x="31.9" y="227.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="34.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (130 samples, 0.07%)</title><rect x="32.6" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (130 samples, 0.07%)</title><rect x="32.6" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (130 samples, 0.07%)</title><rect x="32.6" y="227.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="35.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$99/752494240.run (102,726 samples, 59.00%)</title><rect x="33.4" y="323.0" width="696.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.4" y="334.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$99/752494240.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (102,726 samples, 59.00%)</title><rect x="33.4" y="307.0" width="696.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.4" y="318.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (102,726 samples, 59.00%)</title><rect x="33.4" y="291.0" width="696.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.4" y="302.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$97/686139236.process (102,726 samples, 59.00%)</title><rect x="33.4" y="275.0" width="696.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.4" y="286.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$97/686139236.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (102,726 samples, 59.00%)</title><rect x="33.4" y="259.0" width="696.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.4" y="270.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (102,726 samples, 59.00%)</title><rect x="33.4" y="243.0" width="696.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.4" y="254.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2013703173.linkToTargetMethod (2,387 samples, 1.37%)</title><rect x="33.4" y="227.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,387 samples, 1.37%)</title><rect x="33.4" y="211.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$106/2084124506.get$Lambda (2,387 samples, 1.37%)</title><rect x="33.4" y="195.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.4" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.ServiceHelper$$Lambda$106 (2,387 samples, 1.37%)</title><rect x="33.4" y="179.0" width="16.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy (92,759 samples, 53.27%)</title><rect x="49.6" y="227.0" width="628.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.6" y="238.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$106/2084124506.process (34,403 samples, 19.76%)</title><rect x="49.6" y="211.0" width="233.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.6" y="222.0">ru/mail/polis/service/zvladn7/S..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$2 (34,403 samples, 19.76%)</title><rect x="49.6" y="195.0" width="233.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.6" y="206.0">ru/mail/polis/service/zvladn7/S..</text>
</g>
<g>
<title>one.nio.http.Response (1,811 samples, 1.04%)</title><rect x="49.6" y="179.0" width="12.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="52.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8,830 samples, 5.07%)</title><rect x="61.9" y="179.0" width="59.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.9" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8,830 samples, 5.07%)</title><rect x="61.9" y="163.0" width="59.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.9" y="174.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6,088 samples, 3.50%)</title><rect x="61.9" y="147.0" width="41.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.9" y="158.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6,088 samples, 3.50%)</title><rect x="61.9" y="131.0" width="41.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.9" y="142.0">one..</text>
</g>
<g>
<title>byte[] (5,942 samples, 3.41%)</title><rect x="61.9" y="115.0" width="40.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="64.9" y="126.0">byt..</text>
</g>
<g>
<title>byte[] (146 samples, 0.08%)</title><rect x="102.2" y="115.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="105.2" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,742 samples, 1.57%)</title><rect x="103.1" y="147.0" width="18.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.1" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2,742 samples, 1.57%)</title><rect x="103.1" y="131.0" width="18.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="106.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6,853 samples, 3.94%)</title><rect x="121.7" y="179.0" width="46.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.7" y="190.0">one/..</text>
</g>
<g>
<title>byte[] (2,811 samples, 1.61%)</title><rect x="121.7" y="163.0" width="19.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="124.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (2,317 samples, 1.33%)</title><rect x="140.8" y="163.0" width="15.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="143.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1,725 samples, 0.99%)</title><rect x="156.5" y="163.0" width="11.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="159.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (13,470 samples, 7.74%)</title><rect x="168.2" y="179.0" width="91.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.2" y="190.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,720 samples, 0.99%)</title><rect x="168.2" y="163.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,720 samples, 0.99%)</title><rect x="168.2" y="147.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$110/2006668916.get$Lambda (1,720 samples, 0.99%)</title><rect x="168.2" y="131.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.2" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.LsmDAOImpl$$Lambda$110 (1,720 samples, 0.99%)</title><rect x="168.2" y="115.0" width="11.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="171.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (11,750 samples, 6.75%)</title><rect x="179.8" y="163.0" width="79.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.8" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (146 samples, 0.08%)</title><rect x="179.8" y="147.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (146 samples, 0.08%)</title><rect x="179.8" y="131.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (146 samples, 0.08%)</title><rect x="179.8" y="115.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.8" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (129 samples, 0.07%)</title><rect x="179.8" y="99.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.8" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (129 samples, 0.07%)</title><rect x="179.8" y="83.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.8" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (78 samples, 0.04%)</title><rect x="179.8" y="67.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.8" y="78.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (78 samples, 0.04%)</title><rect x="179.8" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="182.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (51 samples, 0.03%)</title><rect x="180.3" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (51 samples, 0.03%)</title><rect x="180.3" y="51.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (51 samples, 0.03%)</title><rect x="180.3" y="35.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="183.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$110/2006668916.run (11,604 samples, 6.66%)</title><rect x="180.8" y="147.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (11,604 samples, 6.66%)</title><rect x="180.8" y="131.0" width="78.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.8" y="142.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (11,604 samples, 6.66%)</title><rect x="180.8" y="115.0" width="78.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.8" y="126.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6,739 samples, 3.87%)</title><rect x="180.8" y="99.0" width="45.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.8" y="110.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6,739 samples, 3.87%)</title><rect x="180.8" y="83.0" width="45.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="183.8" y="94.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (653 samples, 0.38%)</title><rect x="226.5" y="99.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (653 samples, 0.38%)</title><rect x="226.5" y="83.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (217 samples, 0.12%)</title><rect x="226.5" y="67.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="229.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (436 samples, 0.25%)</title><rect x="227.9" y="67.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="230.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (1,716 samples, 0.99%)</title><rect x="230.9" y="99.0" width="11.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="233.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (2,496 samples, 1.43%)</title><rect x="242.5" y="99.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,496 samples, 1.43%)</title><rect x="242.5" y="83.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,496 samples, 1.43%)</title><rect x="242.5" y="67.0" width="16.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="245.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.wrapArray (3,439 samples, 1.98%)</title><rect x="259.4" y="179.0" width="23.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.4" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,439 samples, 1.98%)</title><rect x="259.4" y="163.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.4" y="174.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,439 samples, 1.98%)</title><rect x="259.4" y="147.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.4" y="158.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,439 samples, 1.98%)</title><rect x="259.4" y="131.0" width="23.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="262.4" y="142.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (48,820 samples, 28.04%)</title><rect x="282.8" y="211.0" width="330.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.8" y="222.0">ru/mail/polis/service/zvladn7/ServiceHelper.p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (315 samples, 0.18%)</title><rect x="282.8" y="195.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1146147158.invoke (315 samples, 0.18%)</title><rect x="282.8" y="179.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (315 samples, 0.18%)</title><rect x="282.8" y="163.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (93 samples, 0.05%)</title><rect x="282.8" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.05%)</title><rect x="282.8" y="131.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="285.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (222 samples, 0.13%)</title><rect x="283.4" y="147.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (222 samples, 0.13%)</title><rect x="283.4" y="131.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.4" y="142.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.13%)</title><rect x="283.4" y="115.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="286.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (47,889 samples, 27.50%)</title><rect x="284.9" y="195.0" width="324.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="287.9" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (47,889 samples, 27.50%)</title><rect x="284.9" y="179.0" width="324.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.9" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (266 samples, 0.15%)</title><rect x="284.9" y="163.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="287.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (43,228 samples, 24.83%)</title><rect x="286.7" y="163.0" width="292.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.7" y="174.0">one/nio/http/HttpClient$ResponseReader...</text>
</g>
<g>
<title>byte[] (19,760 samples, 11.35%)</title><rect x="286.7" y="147.0" width="133.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="289.7" y="158.0">byte[]</text>
</g>
<g>
<title>byte[] (23,468 samples, 13.48%)</title><rect x="420.6" y="147.0" width="159.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.6" y="158.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3,274 samples, 1.88%)</title><rect x="579.6" y="163.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.6" y="174.0">o..</text>
</g>
<g>
<title>byte[] (69 samples, 0.04%)</title><rect x="579.6" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="582.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (119 samples, 0.07%)</title><rect x="580.1" y="147.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (119 samples, 0.07%)</title><rect x="580.1" y="131.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.03%)</title><rect x="580.1" y="115.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="583.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.04%)</title><rect x="580.4" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.4" y="126.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.04%)</title><rect x="580.4" y="99.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="583.4" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (90 samples, 0.05%)</title><rect x="580.9" y="147.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="583.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,702 samples, 1.55%)</title><rect x="581.5" y="147.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,702 samples, 1.55%)</title><rect x="581.5" y="131.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,702 samples, 1.55%)</title><rect x="581.5" y="115.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.5" y="126.0"></text>
</g>
<g>
<title>char[] (1,915 samples, 1.10%)</title><rect x="581.5" y="99.0" width="13.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="584.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (364 samples, 0.21%)</title><rect x="594.5" y="99.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="597.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (423 samples, 0.24%)</title><rect x="597.0" y="99.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (423 samples, 0.24%)</title><rect x="597.0" y="83.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (423 samples, 0.24%)</title><rect x="597.0" y="67.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.0" y="78.0"></text>
</g>
<g>
<title>byte[] (423 samples, 0.24%)</title><rect x="597.0" y="51.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="600.0" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (75 samples, 0.04%)</title><rect x="599.8" y="147.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 0.04%)</title><rect x="599.8" y="131.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="602.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (219 samples, 0.13%)</title><rect x="600.3" y="147.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (219 samples, 0.13%)</title><rect x="600.3" y="131.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (219 samples, 0.13%)</title><rect x="600.3" y="115.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.07%)</title><rect x="600.3" y="99.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="603.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (105 samples, 0.06%)</title><rect x="601.1" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.1" y="110.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.06%)</title><rect x="601.1" y="83.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="604.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (796 samples, 0.46%)</title><rect x="601.8" y="163.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (796 samples, 0.46%)</title><rect x="601.8" y="147.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.8" y="158.0"></text>
</g>
<g>
<title>byte[] (796 samples, 0.46%)</title><rect x="601.8" y="131.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="604.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (215 samples, 0.12%)</title><rect x="607.2" y="163.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (215 samples, 0.12%)</title><rect x="607.2" y="147.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (215 samples, 0.12%)</title><rect x="607.2" y="131.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.05%)</title><rect x="607.2" y="115.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="610.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (126 samples, 0.07%)</title><rect x="607.8" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.8" y="126.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.07%)</title><rect x="607.8" y="99.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="610.8" y="110.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (110 samples, 0.06%)</title><rect x="608.7" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.7" y="174.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (110 samples, 0.06%)</title><rect x="608.7" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.7" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (110 samples, 0.06%)</title><rect x="608.7" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.7" y="142.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (110 samples, 0.06%)</title><rect x="608.7" y="115.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="611.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (616 samples, 0.35%)</title><rect x="609.4" y="195.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (616 samples, 0.35%)</title><rect x="609.4" y="179.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (440 samples, 0.25%)</title><rect x="609.4" y="163.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (440 samples, 0.25%)</title><rect x="609.4" y="147.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.4" y="158.0"></text>
</g>
<g>
<title>byte[] (440 samples, 0.25%)</title><rect x="609.4" y="131.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.4" y="142.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (176 samples, 0.10%)</title><rect x="612.4" y="163.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.4" y="174.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (176 samples, 0.10%)</title><rect x="612.4" y="147.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="615.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.nodeFor (9,536 samples, 5.48%)</title><rect x="613.6" y="211.0" width="64.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.6" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.nodeFor (9,536 samples, 5.48%)</title><rect x="613.6" y="195.0" width="64.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.6" y="206.0">ru/mail..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (3,539 samples, 2.03%)</title><rect x="613.6" y="179.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.6" y="190.0">j..</text>
</g>
<g>
<title>java.lang.Integer (3,539 samples, 2.03%)</title><rect x="613.6" y="163.0" width="24.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="616.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (2,427 samples, 1.39%)</title><rect x="637.6" y="179.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2,427 samples, 1.39%)</title><rect x="637.6" y="163.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (2,427 samples, 1.39%)</title><rect x="637.6" y="147.0" width="16.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="640.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,570 samples, 2.05%)</title><rect x="654.0" y="179.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.0" y="190.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,570 samples, 2.05%)</title><rect x="654.0" y="163.0" width="24.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.0" y="174.0">j..</text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,570 samples, 2.05%)</title><rect x="654.0" y="147.0" width="24.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="657.0" y="158.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.wrapString (7,580 samples, 4.35%)</title><rect x="678.2" y="227.0" width="51.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.2" y="238.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,534 samples, 2.03%)</title><rect x="678.2" y="211.0" width="24.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.2" y="222.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,534 samples, 2.03%)</title><rect x="678.2" y="195.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.2" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,534 samples, 2.03%)</title><rect x="678.2" y="179.0" width="24.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="681.2" y="190.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.toBytes (4,046 samples, 2.32%)</title><rect x="702.2" y="211.0" width="27.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.2" y="222.0">r..</text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (4,046 samples, 2.32%)</title><rect x="702.2" y="195.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.2" y="206.0">o..</text>
</g>
<g>
<title>byte[] (4,046 samples, 2.32%)</title><rect x="702.2" y="179.0" width="27.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="705.2" y="190.0">b..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67,939 samples, 39.02%)</title><rect x="729.6" y="371.0" width="460.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.6" y="382.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,324 samples, 1.33%)</title><rect x="729.6" y="355.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.6" y="366.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,324 samples, 1.33%)</title><rect x="729.6" y="339.0" width="15.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="732.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65,615 samples, 37.68%)</title><rect x="745.3" y="355.0" width="444.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.3" y="366.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65,615 samples, 37.68%)</title><rect x="745.3" y="339.0" width="444.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.3" y="350.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (65,615 samples, 37.68%)</title><rect x="745.3" y="323.0" width="444.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.3" y="334.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12,433 samples, 7.14%)</title><rect x="745.3" y="307.0" width="84.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.3" y="318.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12,433 samples, 7.14%)</title><rect x="745.3" y="291.0" width="84.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.3" y="302.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (8,273 samples, 4.75%)</title><rect x="745.3" y="275.0" width="56.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.3" y="286.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4,721 samples, 2.71%)</title><rect x="745.3" y="259.0" width="32.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.3" y="270.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,721 samples, 2.71%)</title><rect x="745.3" y="243.0" width="32.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.3" y="254.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (4,721 samples, 2.71%)</title><rect x="745.3" y="227.0" width="32.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.3" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,721 samples, 2.71%)</title><rect x="745.3" y="211.0" width="32.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.3" y="222.0">ja..</text>
</g>
<g>
<title>java.lang.String (1,678 samples, 0.96%)</title><rect x="745.3" y="195.0" width="11.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="748.3" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,043 samples, 1.75%)</title><rect x="756.7" y="195.0" width="20.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.7" y="206.0"></text>
</g>
<g>
<title>byte[] (3,043 samples, 1.75%)</title><rect x="756.7" y="179.0" width="20.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="759.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (3,552 samples, 2.04%)</title><rect x="777.3" y="259.0" width="24.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.3" y="270.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,328 samples, 1.34%)</title><rect x="777.3" y="243.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,328 samples, 1.34%)</title><rect x="777.3" y="227.0" width="15.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$97/686139236.get$Lambda (2,328 samples, 1.34%)</title><rect x="777.3" y="211.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.3" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$97 (2,328 samples, 1.34%)</title><rect x="777.3" y="195.0" width="15.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="780.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (1,224 samples, 0.70%)</title><rect x="793.1" y="243.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,189 samples, 0.68%)</title><rect x="793.1" y="227.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,189 samples, 0.68%)</title><rect x="793.1" y="211.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$99/752494240.get$Lambda (1,189 samples, 0.68%)</title><rect x="793.1" y="195.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.1" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$99 (1,189 samples, 0.68%)</title><rect x="793.1" y="179.0" width="8.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="796.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,160 samples, 2.39%)</title><rect x="801.4" y="275.0" width="28.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.4" y="286.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (4,160 samples, 2.39%)</title><rect x="801.4" y="259.0" width="28.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.4" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,160 samples, 2.39%)</title><rect x="801.4" y="243.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.4" y="254.0">ja..</text>
</g>
<g>
<title>java.lang.String (1,722 samples, 0.99%)</title><rect x="801.4" y="227.0" width="11.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="804.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,438 samples, 1.40%)</title><rect x="813.1" y="227.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.1" y="238.0"></text>
</g>
<g>
<title>byte[] (2,438 samples, 1.40%)</title><rect x="813.1" y="211.0" width="16.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="816.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22,503 samples, 12.92%)</title><rect x="829.6" y="307.0" width="152.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.6" y="318.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one.nio.http.Request (3,139 samples, 1.80%)</title><rect x="829.6" y="291.0" width="21.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="832.6" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,755 samples, 3.31%)</title><rect x="850.9" y="291.0" width="39.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.9" y="302.0">one..</text>
</g>
<g>
<title>java.lang.String[] (5,546 samples, 3.19%)</title><rect x="850.9" y="275.0" width="37.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="853.9" y="286.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (209 samples, 0.12%)</title><rect x="888.5" y="275.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="891.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,609 samples, 7.82%)</title><rect x="889.9" y="291.0" width="92.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.9" y="302.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,609 samples, 7.82%)</title><rect x="889.9" y="275.0" width="92.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.9" y="286.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (7,489 samples, 4.30%)</title><rect x="889.9" y="259.0" width="50.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="892.9" y="270.0">char[]</text>
</g>
<g>
<title>char[] (366 samples, 0.21%)</title><rect x="940.6" y="259.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="943.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (1,684 samples, 0.97%)</title><rect x="943.1" y="259.0" width="11.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="946.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,070 samples, 2.34%)</title><rect x="954.5" y="259.0" width="27.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.5" y="270.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,070 samples, 2.34%)</title><rect x="954.5" y="243.0" width="27.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.5" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,070 samples, 2.34%)</title><rect x="954.5" y="227.0" width="27.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.5" y="238.0">j..</text>
</g>
<g>
<title>byte[] (4,029 samples, 2.31%)</title><rect x="954.5" y="211.0" width="27.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="957.5" y="222.0">b..</text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="981.8" y="211.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="984.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3,246 samples, 1.86%)</title><rect x="982.1" y="307.0" width="22.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.1" y="318.0">o..</text>
</g>
<g>
<title>byte[] (3,246 samples, 1.86%)</title><rect x="982.1" y="291.0" width="22.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="985.1" y="302.0">b..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,455 samples, 1.98%)</title><rect x="1004.1" y="307.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.1" y="318.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (3,455 samples, 1.98%)</title><rect x="1004.1" y="291.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.1" y="302.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,455 samples, 1.98%)</title><rect x="1004.1" y="275.0" width="23.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.1" y="286.0">j..</text>
</g>
<g>
<title>java.lang.String (1,759 samples, 1.01%)</title><rect x="1004.1" y="259.0" width="11.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1007.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,696 samples, 0.97%)</title><rect x="1016.0" y="259.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.0" y="270.0"></text>
</g>
<g>
<title>byte[] (1,696 samples, 0.97%)</title><rect x="1016.0" y="243.0" width="11.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1019.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,978 samples, 13.77%)</title><rect x="1027.5" y="307.0" width="162.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.5" y="318.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,978 samples, 13.77%)</title><rect x="1027.5" y="291.0" width="162.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.5" y="302.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (11,227 samples, 6.45%)</title><rect x="1027.5" y="275.0" width="76.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1030.5" y="286.0">char[]</text>
</g>
<g>
<title>char[] (155 samples, 0.09%)</title><rect x="1103.6" y="275.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (4,508 samples, 2.59%)</title><rect x="1104.6" y="275.0" width="30.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1107.6" y="286.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,088 samples, 4.64%)</title><rect x="1135.2" y="275.0" width="54.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.2" y="286.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,088 samples, 4.64%)</title><rect x="1135.2" y="259.0" width="54.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.2" y="270.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8,088 samples, 4.64%)</title><rect x="1135.2" y="243.0" width="54.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.2" y="254.0">java/..</text>
</g>
<g>
<title>byte[] (8,087 samples, 4.64%)</title><rect x="1135.2" y="227.0" width="54.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1138.2" y="238.0">byte[]</text>
</g>
</g>
</svg>
