<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (6,321 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,308 samples, 99.79%)</title><rect x="10.9" y="867.0" width="1177.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26 samples, 0.41%)</title><rect x="11.1" y="851.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (25 samples, 0.40%)</title><rect x="11.3" y="835.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.36%)</title><rect x="11.7" y="819.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (23 samples, 0.36%)</title><rect x="11.7" y="803.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.25%)</title><rect x="13.0" y="787.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.25%)</title><rect x="13.0" y="771.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="16.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 0.24%)</title><rect x="13.2" y="755.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="16.2" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (15 samples, 0.24%)</title><rect x="13.2" y="739.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.2" y="750.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.22%)</title><rect x="13.2" y="723.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="16.2" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (7 samples, 0.11%)</title><rect x="13.9" y="707.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="16.9" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.06%)</title><rect x="14.5" y="691.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="17.5" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.05%)</title><rect x="14.7" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="17.7" y="686.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.05%)</title><rect x="14.7" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.7" y="670.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="14.9" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="17.9" y="654.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="15.4" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.4" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="15.4" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.4" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="15.4" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="18.4" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="15.4" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.4" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="15.4" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="18.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,281 samples, 99.37%)</title><rect x="16.0" y="851.0" width="1172.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.0" y="862.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,281 samples, 99.37%)</title><rect x="16.0" y="835.0" width="1172.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.0" y="846.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,257 samples, 98.99%)</title><rect x="16.0" y="819.0" width="1168.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.0" y="830.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6,253 samples, 98.92%)</title><rect x="16.0" y="803.0" width="1167.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.0" y="814.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6,253 samples, 98.92%)</title><rect x="16.0" y="787.0" width="1167.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.0" y="798.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (6,252 samples, 98.91%)</title><rect x="16.0" y="771.0" width="1167.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.0" y="782.0">RequestHandler1_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (74 samples, 1.17%)</title><rect x="16.0" y="755.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (72 samples, 1.14%)</title><rect x="16.3" y="739.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="16.3" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 1.11%)</title><rect x="16.7" y="723.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 1.11%)</title><rect x="16.7" y="707.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (70 samples, 1.11%)</title><rect x="16.7" y="691.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (70 samples, 1.11%)</title><rect x="16.7" y="675.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.7" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.06%)</title><rect x="17.1" y="659.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="20.1" y="670.0"></text>
</g>
<g>
<title>__send (64 samples, 1.01%)</title><rect x="17.8" y="659.0" width="12.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="20.8" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.95%)</title><rect x="18.6" y="643.0" width="11.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="21.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.95%)</title><rect x="18.6" y="627.0" width="11.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sendto (60 samples, 0.95%)</title><rect x="18.6" y="611.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="21.6" y="622.0"></text>
</g>
<g>
<title>__sys_sendto (60 samples, 0.95%)</title><rect x="18.6" y="595.0" width="11.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="21.6" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (60 samples, 0.95%)</title><rect x="18.6" y="579.0" width="11.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.6" y="590.0"></text>
</g>
<g>
<title>inet6_sendmsg (55 samples, 0.87%)</title><rect x="18.8" y="563.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (55 samples, 0.87%)</title><rect x="18.8" y="547.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="21.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (52 samples, 0.82%)</title><rect x="19.3" y="531.0" width="9.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="22.3" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="20.1" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="23.1" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="20.1" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="23.1" y="510.0"></text>
</g>
<g>
<title>tcp_push (43 samples, 0.68%)</title><rect x="20.8" y="515.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.8" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (43 samples, 0.68%)</title><rect x="20.8" y="499.0" width="8.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.8" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (43 samples, 0.68%)</title><rect x="20.8" y="483.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.8" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 0.65%)</title><rect x="21.0" y="467.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.0" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (41 samples, 0.65%)</title><rect x="21.0" y="451.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.0" y="462.0"></text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 0.65%)</title><rect x="21.0" y="435.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.0" y="446.0"></text>
</g>
<g>
<title>ip_local_out (39 samples, 0.62%)</title><rect x="21.0" y="419.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="24.0" y="430.0"></text>
</g>
<g>
<title>ip_output (39 samples, 0.62%)</title><rect x="21.0" y="403.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.0" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (35 samples, 0.55%)</title><rect x="21.2" y="387.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="24.2" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (35 samples, 0.55%)</title><rect x="21.2" y="371.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.2" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 0.55%)</title><rect x="21.2" y="355.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (27 samples, 0.43%)</title><rect x="21.8" y="339.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="24.8" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.20 (27 samples, 0.43%)</title><rect x="21.8" y="323.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.8" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 0.41%)</title><rect x="21.9" y="307.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.9" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 0.41%)</title><rect x="21.9" y="291.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>net_rx_action (24 samples, 0.38%)</title><rect x="22.1" y="275.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.1" y="286.0"></text>
</g>
<g>
<title>process_backlog (23 samples, 0.36%)</title><rect x="22.3" y="259.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.3" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 0.35%)</title><rect x="22.5" y="243.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="25.5" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 0.35%)</title><rect x="22.5" y="227.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 0.33%)</title><rect x="22.7" y="211.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 0.33%)</title><rect x="22.7" y="195.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="25.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (21 samples, 0.33%)</title><rect x="22.7" y="179.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 0.32%)</title><rect x="22.7" y="163.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.7" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 0.32%)</title><rect x="22.7" y="147.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="25.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.32%)</title><rect x="22.7" y="131.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 0.28%)</title><rect x="23.1" y="115.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.1" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.28%)</title><rect x="23.1" y="99.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.14%)</title><rect x="23.4" y="83.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.14%)</title><rect x="23.4" y="67.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="26.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.14%)</title><rect x="23.4" y="51.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="23.4" y="35.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.06%)</title><rect x="25.1" y="83.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.1" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.08%)</title><rect x="26.8" y="339.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.8" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.06%)</title><rect x="26.8" y="323.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="29.8" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="26.8" y="307.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.8" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="26.8" y="291.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="29.8" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="27.7" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="30.7" y="398.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.05%)</title><rect x="27.7" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="30.7" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.05%)</title><rect x="27.7" y="355.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="30.7" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.05%)</title><rect x="27.7" y="339.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="30.7" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="28.3" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.3" y="430.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="29.0" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="32.0" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="29.0" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.0" y="558.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="29.0" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.0" y="542.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.03%)</title><rect x="29.4" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="32.4" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.03%)</title><rect x="29.4" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.05%)</title><rect x="29.8" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.05%)</title><rect x="29.8" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (6,175 samples, 97.69%)</title><rect x="30.3" y="755.0" width="1152.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.3" y="766.0">ru/mail/polis/service/zvladn7/BasicService.get</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.06%)</title><rect x="30.5" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.06%)</title><rect x="30.5" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="30.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (2 samples, 0.03%)</title><rect x="30.5" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.03%)</title><rect x="31.3" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="31.3" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (6,166 samples, 97.55%)</title><rect x="31.7" y="739.0" width="1151.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.7" y="750.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (152 samples, 2.40%)</title><rect x="31.7" y="723.0" width="28.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.7" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (152 samples, 2.40%)</title><rect x="31.7" y="707.0" width="28.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.7" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (152 samples, 2.40%)</title><rect x="31.7" y="691.0" width="28.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.7" y="702.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (152 samples, 2.40%)</title><rect x="31.7" y="675.0" width="28.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.7" y="686.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (151 samples, 2.39%)</title><rect x="31.8" y="659.0" width="28.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="670.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (151 samples, 2.39%)</title><rect x="31.8" y="643.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.8" y="654.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.30%)</title><rect x="31.8" y="627.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.8" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.30%)</title><rect x="31.8" y="611.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.8" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.30%)</title><rect x="31.8" y="595.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.30%)</title><rect x="31.8" y="579.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.30%)</title><rect x="31.8" y="563.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.8" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$99/1511943480.compare (16 samples, 0.25%)</title><rect x="32.4" y="547.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.4" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.25%)</title><rect x="32.4" y="531.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.4" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (16 samples, 0.25%)</title><rect x="32.4" y="515.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.4" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.24%)</title><rect x="32.6" y="499.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.09%)</title><rect x="33.3" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.09%)</title><rect x="33.3" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.3" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.06%)</title><rect x="33.3" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.3" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.05%)</title><rect x="33.5" y="435.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="36.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="34.1" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$97/1945080538.apply (2 samples, 0.03%)</title><rect x="34.5" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (2 samples, 0.03%)</title><rect x="34.5" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.compareTo (2 samples, 0.03%)</title><rect x="35.0" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (132 samples, 2.09%)</title><rect x="35.4" y="627.0" width="24.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.4" y="638.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (132 samples, 2.09%)</title><rect x="35.4" y="611.0" width="24.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.4" y="622.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (132 samples, 2.09%)</title><rect x="35.4" y="595.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.4" y="606.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (132 samples, 2.09%)</title><rect x="35.4" y="579.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.4" y="590.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (132 samples, 2.09%)</title><rect x="35.4" y="563.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.4" y="574.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (132 samples, 2.09%)</title><rect x="35.4" y="547.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.4" y="558.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (130 samples, 2.06%)</title><rect x="35.4" y="531.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.4" y="542.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (129 samples, 2.04%)</title><rect x="35.6" y="515.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.6" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (129 samples, 2.04%)</title><rect x="35.6" y="499.0" width="24.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.6" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (129 samples, 2.04%)</title><rect x="35.6" y="483.0" width="24.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.6" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (55 samples, 0.87%)</title><rect x="35.8" y="467.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (17 samples, 0.27%)</title><rect x="36.3" y="451.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.27%)</title><rect x="36.3" y="435.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.27%)</title><rect x="36.3" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.24%)</title><rect x="36.5" y="403.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.21%)</title><rect x="36.7" y="387.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 0.21%)</title><rect x="36.7" y="371.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.21%)</title><rect x="36.7" y="355.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.21%)</title><rect x="36.7" y="339.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="39.7" y="350.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.21%)</title><rect x="36.7" y="323.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="39.7" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.13%)</title><rect x="37.6" y="307.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.6" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.13%)</title><rect x="37.6" y="291.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="40.6" y="302.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.13%)</title><rect x="37.6" y="275.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="40.6" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.13%)</title><rect x="37.6" y="259.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="40.6" y="270.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.11%)</title><rect x="37.8" y="243.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.8" y="254.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.06%)</title><rect x="38.0" y="227.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.0" y="238.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.05%)</title><rect x="38.2" y="211.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.2" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="38.7" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.7" y="238.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="38.7" y="211.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="41.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (35 samples, 0.55%)</title><rect x="39.5" y="451.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (34 samples, 0.54%)</title><rect x="39.7" y="435.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.49%)</title><rect x="40.1" y="419.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (31 samples, 0.49%)</title><rect x="40.1" y="403.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (31 samples, 0.49%)</title><rect x="40.1" y="387.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (31 samples, 0.49%)</title><rect x="40.1" y="371.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.49%)</title><rect x="40.1" y="355.0" width="5.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="43.1" y="366.0"></text>
</g>
<g>
<title>pread64 (31 samples, 0.49%)</title><rect x="40.1" y="339.0" width="5.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="43.1" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.25%)</title><rect x="42.9" y="323.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.9" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.25%)</title><rect x="42.9" y="307.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="45.9" y="318.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.19%)</title><rect x="43.6" y="291.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="46.6" y="302.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.19%)</title><rect x="43.6" y="275.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.6" y="286.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.17%)</title><rect x="43.8" y="259.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.8" y="270.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.11%)</title><rect x="44.0" y="243.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="47.0" y="254.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.11%)</title><rect x="44.0" y="227.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.0" y="238.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.09%)</title><rect x="44.2" y="211.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="47.2" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.08%)</title><rect x="44.3" y="195.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.3" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="44.7" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.7" y="190.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="45.5" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.5" y="254.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="45.5" y="227.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="48.5" y="238.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="45.5" y="211.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.5" y="222.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="45.5" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="48.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (14 samples, 0.22%)</title><rect x="46.0" y="467.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.22%)</title><rect x="46.0" y="451.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.22%)</title><rect x="46.0" y="435.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.22%)</title><rect x="46.0" y="419.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.21%)</title><rect x="46.2" y="403.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 0.21%)</title><rect x="46.2" y="387.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.21%)</title><rect x="46.2" y="371.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.21%)</title><rect x="46.2" y="355.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="49.2" y="366.0"></text>
</g>
<g>
<title>pread64 (13 samples, 0.21%)</title><rect x="46.2" y="339.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="49.2" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="47.3" y="323.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.3" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="47.3" y="307.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="50.3" y="318.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.08%)</title><rect x="47.7" y="291.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.7" y="302.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.08%)</title><rect x="47.7" y="275.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.7" y="286.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.06%)</title><rect x="47.9" y="259.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="50.9" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="48.3" y="243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.3" y="254.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="48.3" y="227.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (59 samples, 0.93%)</title><rect x="48.6" y="467.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (59 samples, 0.93%)</title><rect x="48.6" y="451.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (49 samples, 0.78%)</title><rect x="49.0" y="435.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.06%)</title><rect x="49.0" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (44 samples, 0.70%)</title><rect x="49.8" y="419.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (44 samples, 0.70%)</title><rect x="49.8" y="403.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (43 samples, 0.68%)</title><rect x="49.9" y="387.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.66%)</title><rect x="50.1" y="371.0" width="7.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="53.1" y="382.0"></text>
</g>
<g>
<title>pread64 (42 samples, 0.66%)</title><rect x="50.1" y="355.0" width="7.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="53.1" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.41%)</title><rect x="53.1" y="339.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="56.1" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.41%)</title><rect x="53.1" y="323.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="56.1" y="334.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.22%)</title><rect x="55.2" y="307.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.2" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.21%)</title><rect x="55.2" y="291.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.2" y="302.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="55.2" y="275.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.2" y="286.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="55.2" y="259.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.2" y="270.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="55.2" y="243.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="58.2" y="254.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.13%)</title><rect x="56.1" y="275.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.1" y="286.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.08%)</title><rect x="56.1" y="259.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.1" y="270.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.08%)</title><rect x="56.1" y="243.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.1" y="254.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.08%)</title><rect x="56.1" y="227.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.1" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.08%)</title><rect x="56.1" y="211.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.1" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="56.3" y="195.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.3" y="206.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="57.0" y="259.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="60.0" y="270.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="57.2" y="243.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.13%)</title><rect x="58.2" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.05%)</title><rect x="59.1" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$99/1511943480.compare (2 samples, 0.03%)</title><rect x="59.7" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.03%)</title><rect x="59.7" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.7" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (2 samples, 0.03%)</title><rect x="59.7" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.03%)</title><rect x="59.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (6,014 samples, 95.14%)</title><rect x="60.0" y="723.0" width="1122.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.0" y="734.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (6,003 samples, 94.97%)</title><rect x="60.0" y="707.0" width="1120.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.0" y="718.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (833 samples, 13.18%)</title><rect x="60.0" y="691.0" width="155.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.0" y="702.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (833 samples, 13.18%)</title><rect x="60.0" y="675.0" width="155.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.0" y="686.0">com/google/common/co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (826 samples, 13.07%)</title><rect x="61.3" y="659.0" width="154.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.3" y="670.0">java/util/PriorityQu..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (826 samples, 13.07%)</title><rect x="61.3" y="643.0" width="154.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.3" y="654.0">java/util/PriorityQu..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (825 samples, 13.05%)</title><rect x="61.5" y="627.0" width="154.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.5" y="638.0">java/util/PriorityQu..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (824 samples, 13.04%)</title><rect x="61.7" y="611.0" width="153.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.7" y="622.0">java/util/PriorityQ..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (823 samples, 13.02%)</title><rect x="61.9" y="595.0" width="153.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.9" y="606.0">com/google/common/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (823 samples, 13.02%)</title><rect x="61.9" y="579.0" width="153.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.9" y="590.0">com/google/common/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (814 samples, 12.88%)</title><rect x="62.3" y="563.0" width="151.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.3" y="574.0">com/google/common/c..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (812 samples, 12.85%)</title><rect x="62.6" y="547.0" width="151.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.6" y="558.0">ru/mail/polis/dao/z..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (812 samples, 12.85%)</title><rect x="62.6" y="531.0" width="151.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.6" y="542.0">ru/mail/polis/dao/z..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (812 samples, 12.85%)</title><rect x="62.6" y="515.0" width="151.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.6" y="526.0">ru/mail/polis/dao/z..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.05%)</title><rect x="62.6" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="62.6" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="62.8" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (313 samples, 4.95%)</title><rect x="63.2" y="499.0" width="58.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.2" y="510.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.06%)</title><rect x="63.4" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="63.4" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="63.4" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="63.6" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="63.8" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="63.8" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.8" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="63.8" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (2 samples, 0.03%)</title><rect x="64.1" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (2 samples, 0.03%)</title><rect x="64.1" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (102 samples, 1.61%)</title><rect x="64.5" y="483.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (102 samples, 1.61%)</title><rect x="64.5" y="467.0" width="19.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (102 samples, 1.61%)</title><rect x="64.5" y="451.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.08%)</title><rect x="64.9" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.9" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.08%)</title><rect x="64.9" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.9" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="65.4" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.4" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="65.4" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="65.4" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (93 samples, 1.47%)</title><rect x="65.8" y="435.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.05%)</title><rect x="65.8" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (82 samples, 1.30%)</title><rect x="66.4" y="419.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (82 samples, 1.30%)</title><rect x="66.4" y="403.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (80 samples, 1.27%)</title><rect x="66.8" y="387.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.8" y="398.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.27%)</title><rect x="66.8" y="371.0" width="14.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="69.8" y="382.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="66.8" y="355.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="69.8" y="366.0"></text>
</g>
<g>
<title>pread64 (78 samples, 1.23%)</title><rect x="67.1" y="355.0" width="14.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="70.1" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.68%)</title><rect x="73.7" y="339.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.7" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="73.7" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.7" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.65%)</title><rect x="74.0" y="323.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.0" y="334.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (31 samples, 0.49%)</title><rect x="75.9" y="307.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.9" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (31 samples, 0.49%)</title><rect x="75.9" y="291.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.9" y="302.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="76.5" y="275.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.5" y="286.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="76.5" y="259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="79.5" y="270.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 0.41%)</title><rect x="76.8" y="275.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.8" y="286.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.27%)</title><rect x="77.2" y="259.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.2" y="270.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.27%)</title><rect x="77.2" y="243.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="80.2" y="254.0"></text>
</g>
<g>
<title>ext4_file_read_iter (16 samples, 0.25%)</title><rect x="77.2" y="227.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.2" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (14 samples, 0.22%)</title><rect x="77.6" y="211.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="80.6" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.05%)</title><rect x="78.1" y="195.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="78.3" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.3" y="190.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="78.9" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.9" y="206.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.05%)</title><rect x="79.3" y="195.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.3" y="206.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.05%)</title><rect x="79.3" y="179.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="82.3" y="190.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="79.3" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="82.3" y="174.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="79.8" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.8" y="206.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.03%)</title><rect x="79.8" y="179.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="82.8" y="190.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.09%)</title><rect x="80.6" y="259.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.6" y="270.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.09%)</title><rect x="80.6" y="243.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.6" y="254.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.05%)</title><rect x="81.1" y="227.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.13%)</title><rect x="81.7" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.7" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="81.9" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.9" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="81.9" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.06%)</title><rect x="82.4" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.03%)</title><rect x="83.2" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (204 samples, 3.23%)</title><rect x="83.6" y="483.0" width="38.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.6" y="494.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (204 samples, 3.23%)</title><rect x="83.6" y="467.0" width="38.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.6" y="478.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="84.1" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.1" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="84.1" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.1" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="84.1" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (196 samples, 3.10%)</title><rect x="84.7" y="451.0" width="36.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.7" y="462.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.13%)</title><rect x="84.7" y="435.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.13%)</title><rect x="84.7" y="419.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (7 samples, 0.11%)</title><rect x="84.9" y="403.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.08%)</title><rect x="85.2" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (5 samples, 0.08%)</title><rect x="85.2" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (5 samples, 0.08%)</title><rect x="85.2" y="355.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (4 samples, 0.06%)</title><rect x="85.4" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.4" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="85.4" y="323.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="88.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (185 samples, 2.93%)</title><rect x="86.2" y="435.0" width="34.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.2" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (184 samples, 2.91%)</title><rect x="86.4" y="419.0" width="34.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.4" y="430.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (184 samples, 2.91%)</title><rect x="86.4" y="403.0" width="34.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.4" y="414.0">su..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.80%)</title><rect x="87.1" y="387.0" width="33.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="90.1" y="398.0">[u..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="87.1" y="371.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="90.1" y="382.0"></text>
</g>
<g>
<title>pread64 (174 samples, 2.75%)</title><rect x="87.7" y="371.0" width="32.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="90.7" y="382.0">pr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 1.72%)</title><rect x="99.8" y="355.0" width="20.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.8" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.06%)</title><rect x="99.8" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.8" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (104 samples, 1.65%)</title><rect x="100.7" y="339.0" width="19.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.7" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (72 samples, 1.14%)</title><rect x="106.7" y="323.0" width="13.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.7" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (71 samples, 1.12%)</title><rect x="106.9" y="307.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.9" y="318.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="107.1" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.1" y="302.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="107.1" y="275.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.1" y="286.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="107.1" y="259.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.1" y="270.0"></text>
</g>
<g>
<title>vfs_read (63 samples, 1.00%)</title><rect x="108.4" y="291.0" width="11.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.4" y="302.0"></text>
</g>
<g>
<title>__vfs_read (39 samples, 0.62%)</title><rect x="108.8" y="275.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="111.8" y="286.0"></text>
</g>
<g>
<title>new_sync_read (38 samples, 0.60%)</title><rect x="108.9" y="259.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="111.9" y="270.0"></text>
</g>
<g>
<title>ext4_file_read_iter (34 samples, 0.54%)</title><rect x="109.5" y="243.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.5" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (33 samples, 0.52%)</title><rect x="109.7" y="227.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.7" y="238.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.03%)</title><rect x="110.4" y="211.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.4" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.11%)</title><rect x="110.8" y="211.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.8" y="222.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.09%)</title><rect x="111.0" y="195.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.0" y="206.0"></text>
</g>
<g>
<title>pagecache_get_page (17 samples, 0.27%)</title><rect x="112.1" y="211.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.1" y="222.0"></text>
</g>
<g>
<title>find_get_entry (14 samples, 0.22%)</title><rect x="112.5" y="195.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="115.5" y="206.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.06%)</title><rect x="114.4" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.4" y="190.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.05%)</title><rect x="115.3" y="211.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.3" y="222.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.05%)</title><rect x="115.3" y="195.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.3" y="206.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="115.5" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.5" y="190.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.05%)</title><rect x="116.0" y="275.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.0" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (19 samples, 0.30%)</title><rect x="116.6" y="275.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.6" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="116.6" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.6" y="270.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="117.0" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="120.0" y="270.0"></text>
</g>
<g>
<title>security_file_permission (15 samples, 0.24%)</title><rect x="117.3" y="259.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.3" y="270.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="117.5" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="120.5" y="254.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="117.9" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="120.9" y="254.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="117.9" y="227.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.9" y="238.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.03%)</title><rect x="117.9" y="211.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.9" y="222.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.05%)</title><rect x="118.3" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.3" y="254.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.11%)</title><rect x="118.8" y="243.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.8" y="254.0"></text>
</g>
<g>
<title>__inode_security_revalidate (4 samples, 0.06%)</title><rect x="119.4" y="227.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.4" y="238.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.03%)</title><rect x="120.1" y="387.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="123.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.05%)</title><rect x="120.7" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.03%)</title><rect x="121.3" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="121.3" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (152 samples, 2.40%)</title><rect x="121.6" y="499.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.6" y="510.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (150 samples, 2.37%)</title><rect x="122.0" y="483.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.0" y="494.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (148 samples, 2.34%)</title><rect x="122.4" y="467.0" width="27.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.4" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.06%)</title><rect x="122.8" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.8" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.06%)</title><rect x="122.8" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.8" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="123.1" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.1" y="430.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="123.1" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="123.1" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (130 samples, 2.06%)</title><rect x="123.5" y="451.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.5" y="462.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.16%)</title><rect x="123.9" y="435.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.03%)</title><rect x="124.8" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.8" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.05%)</title><rect x="125.2" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.05%)</title><rect x="125.2" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.03%)</title><rect x="125.4" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (116 samples, 1.84%)</title><rect x="125.7" y="435.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.7" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (116 samples, 1.84%)</title><rect x="125.7" y="419.0" width="21.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.7" y="430.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (116 samples, 1.84%)</title><rect x="125.7" y="403.0" width="21.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.7" y="414.0">s..</text>
</g>
<g>
<title>[unknown] (115 samples, 1.82%)</title><rect x="125.9" y="387.0" width="21.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="128.9" y="398.0">[..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="125.9" y="371.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="128.9" y="382.0"></text>
</g>
<g>
<title>pread64 (113 samples, 1.79%)</title><rect x="126.3" y="371.0" width="21.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="129.3" y="382.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 1.15%)</title><rect x="133.8" y="355.0" width="13.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="136.8" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 1.14%)</title><rect x="134.0" y="339.0" width="13.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.0" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (55 samples, 0.87%)</title><rect x="137.1" y="323.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="140.1" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (54 samples, 0.85%)</title><rect x="137.3" y="307.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.3" y="318.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.13%)</title><rect x="137.5" y="291.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="140.5" y="302.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.13%)</title><rect x="137.5" y="275.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="140.5" y="286.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.11%)</title><rect x="137.7" y="259.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.7" y="270.0"></text>
</g>
<g>
<title>vfs_read (43 samples, 0.68%)</title><rect x="139.4" y="291.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="142.4" y="302.0"></text>
</g>
<g>
<title>__vfs_read (29 samples, 0.46%)</title><rect x="140.3" y="275.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.3" y="286.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.44%)</title><rect x="140.5" y="259.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="143.5" y="270.0"></text>
</g>
<g>
<title>ext4_file_read_iter (25 samples, 0.40%)</title><rect x="141.0" y="243.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.0" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (23 samples, 0.36%)</title><rect x="141.4" y="227.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="144.4" y="238.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.06%)</title><rect x="141.8" y="211.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.8" y="222.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="142.0" y="195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.0" y="206.0"></text>
</g>
<g>
<title>pagecache_get_page (13 samples, 0.21%)</title><rect x="142.7" y="211.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.7" y="222.0"></text>
</g>
<g>
<title>find_get_entry (13 samples, 0.21%)</title><rect x="142.7" y="195.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.7" y="206.0"></text>
</g>
<g>
<title>xas_load (9 samples, 0.14%)</title><rect x="143.5" y="179.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="146.5" y="190.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="144.8" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.8" y="174.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.05%)</title><rect x="145.2" y="211.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="148.2" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.14%)</title><rect x="145.7" y="275.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="148.7" y="286.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.09%)</title><rect x="146.3" y="259.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="149.3" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.06%)</title><rect x="146.6" y="243.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="147.4" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (12 samples, 0.19%)</title><rect x="147.8" y="451.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.09%)</title><rect x="148.9" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (344 samples, 5.44%)</title><rect x="150.0" y="499.0" width="64.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.0" y="510.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (343 samples, 5.43%)</title><rect x="150.2" y="483.0" width="64.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.2" y="494.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (12 samples, 0.19%)</title><rect x="150.9" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.9" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (12 samples, 0.19%)</title><rect x="150.9" y="451.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.9" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.08%)</title><rect x="152.2" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.2" y="446.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.06%)</title><rect x="152.4" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.06%)</title><rect x="152.4" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (308 samples, 4.87%)</title><rect x="153.2" y="467.0" width="57.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.2" y="478.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (14 samples, 0.22%)</title><rect x="153.7" y="451.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.08%)</title><rect x="154.7" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.06%)</title><rect x="155.6" y="435.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.05%)</title><rect x="155.8" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.05%)</title><rect x="155.8" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.03%)</title><rect x="156.0" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (282 samples, 4.46%)</title><rect x="156.4" y="451.0" width="52.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.4" y="462.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (282 samples, 4.46%)</title><rect x="156.4" y="435.0" width="52.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.4" y="446.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (282 samples, 4.46%)</title><rect x="156.4" y="419.0" width="52.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.4" y="430.0">sun/n..</text>
</g>
<g>
<title>[unknown] (276 samples, 4.37%)</title><rect x="157.5" y="403.0" width="51.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="160.5" y="414.0">[unkn..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.09%)</title><rect x="157.5" y="387.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="160.5" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="158.6" y="387.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="161.6" y="398.0"></text>
</g>
<g>
<title>pread64 (268 samples, 4.24%)</title><rect x="159.0" y="387.0" width="50.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="162.0" y="398.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (154 samples, 2.44%)</title><rect x="180.3" y="371.0" width="28.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="183.3" y="382.0">en..</text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.05%)</title><rect x="180.3" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="183.3" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (151 samples, 2.39%)</title><rect x="180.8" y="355.0" width="28.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.8" y="366.0">do..</text>
</g>
<g>
<title>__x64_sys_pread64 (118 samples, 1.87%)</title><rect x="187.0" y="339.0" width="22.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="190.0" y="350.0">_..</text>
</g>
<g>
<title>ksys_pread64 (118 samples, 1.87%)</title><rect x="187.0" y="323.0" width="22.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="190.0" y="334.0">k..</text>
</g>
<g>
<title>__fdget (12 samples, 0.19%)</title><rect x="187.3" y="307.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="190.3" y="318.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.19%)</title><rect x="187.3" y="291.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="190.3" y="302.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="188.5" y="275.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.5" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="189.6" y="307.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="192.6" y="318.0"></text>
</g>
<g>
<title>vfs_read (101 samples, 1.60%)</title><rect x="190.1" y="307.0" width="18.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.1" y="318.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.05%)</title><rect x="191.8" y="291.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.8" y="302.0"></text>
</g>
<g>
<title>__vfs_read (57 samples, 0.90%)</title><rect x="192.4" y="291.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="195.4" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.03%)</title><rect x="192.6" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.6" y="286.0"></text>
</g>
<g>
<title>new_sync_read (54 samples, 0.85%)</title><rect x="192.9" y="275.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="195.9" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (50 samples, 0.79%)</title><rect x="193.7" y="259.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.7" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="195.4" y="243.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.4" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (38 samples, 0.60%)</title><rect x="195.7" y="243.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.7" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (16 samples, 0.25%)</title><rect x="197.4" y="227.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.4" y="238.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="198.2" y="211.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.2" y="222.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (10 samples, 0.16%)</title><rect x="198.5" y="211.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="201.5" y="222.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.11%)</title><rect x="200.6" y="227.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="203.6" y="238.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.11%)</title><rect x="200.6" y="211.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="203.6" y="222.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.06%)</title><rect x="201.2" y="195.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="204.2" y="206.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.08%)</title><rect x="201.9" y="227.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="204.9" y="238.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.08%)</title><rect x="201.9" y="211.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="204.9" y="222.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="202.5" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="205.5" y="206.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.06%)</title><rect x="203.0" y="291.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="206.0" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (28 samples, 0.44%)</title><rect x="203.8" y="291.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="206.8" y="302.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="204.3" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.3" y="286.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 0.33%)</title><rect x="204.7" y="275.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.7" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.05%)</title><rect x="205.6" y="259.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.6" y="270.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.06%)</title><rect x="206.4" y="259.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="209.4" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (8 samples, 0.13%)</title><rect x="207.1" y="259.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="210.1" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.03%)</title><rect x="208.1" y="243.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="211.1" y="254.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.03%)</title><rect x="208.6" y="275.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.14%)</title><rect x="209.0" y="451.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (7 samples, 0.11%)</title><rect x="209.4" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (19 samples, 0.30%)</title><rect x="210.7" y="467.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="213.7" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="212.9" y="451.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="215.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.06%)</title><rect x="213.5" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$99/1511943480.compare (7 samples, 0.11%)</title><rect x="214.2" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.2" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.11%)</title><rect x="214.2" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.2" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (7 samples, 0.11%)</title><rect x="214.2" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.2" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.11%)</title><rect x="214.2" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.43%)</title><rect x="215.5" y="691.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (27 samples, 0.43%)</title><rect x="215.5" y="675.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.43%)</title><rect x="215.5" y="659.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.5" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.05%)</title><rect x="215.5" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.05%)</title><rect x="215.5" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.5" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.05%)</title><rect x="215.5" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.05%)</title><rect x="215.5" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.05%)</title><rect x="215.5" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.5" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$99/1511943480.compare (3 samples, 0.05%)</title><rect x="215.5" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.5" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.05%)</title><rect x="215.5" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.5" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (3 samples, 0.05%)</title><rect x="215.5" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.5" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.05%)</title><rect x="215.5" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="215.5" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="215.5" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="215.5" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (24 samples, 0.38%)</title><rect x="216.1" y="643.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (24 samples, 0.38%)</title><rect x="216.1" y="627.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (24 samples, 0.38%)</title><rect x="216.1" y="611.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (24 samples, 0.38%)</title><rect x="216.1" y="595.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.38%)</title><rect x="216.1" y="579.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.38%)</title><rect x="216.1" y="563.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.35%)</title><rect x="216.1" y="547.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (22 samples, 0.35%)</title><rect x="216.1" y="531.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (22 samples, 0.35%)</title><rect x="216.1" y="515.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (22 samples, 0.35%)</title><rect x="216.1" y="499.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (9 samples, 0.14%)</title><rect x="216.1" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (5 samples, 0.08%)</title><rect x="216.1" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.08%)</title><rect x="216.1" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.08%)</title><rect x="216.1" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.08%)</title><rect x="216.1" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.08%)</title><rect x="216.1" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.08%)</title><rect x="216.1" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.08%)</title><rect x="216.1" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="216.1" y="355.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="219.1" y="366.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.06%)</title><rect x="216.3" y="339.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="219.3" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="216.5" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.5" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="216.5" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="219.5" y="318.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.05%)</title><rect x="216.5" y="291.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="219.5" y="302.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.03%)</title><rect x="216.7" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="219.7" y="286.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="216.7" y="259.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="219.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.06%)</title><rect x="217.0" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.06%)</title><rect x="217.0" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.06%)</title><rect x="217.0" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.06%)</title><rect x="217.0" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.06%)</title><rect x="217.0" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.06%)</title><rect x="217.0" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="217.0" y="371.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="220.0" y="382.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.06%)</title><rect x="217.0" y="355.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="220.0" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="217.2" y="339.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="220.2" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="217.2" y="323.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="220.2" y="334.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="217.4" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.4" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.03%)</title><rect x="217.4" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (3 samples, 0.05%)</title><rect x="217.8" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.05%)</title><rect x="217.8" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.05%)</title><rect x="217.8" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.05%)</title><rect x="217.8" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.03%)</title><rect x="218.0" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.03%)</title><rect x="218.0" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="218.0" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="218.0" y="371.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="221.0" y="382.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.03%)</title><rect x="218.0" y="355.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="221.0" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="218.0" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.0" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="218.0" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.0" y="334.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="218.0" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.0" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.03%)</title><rect x="218.0" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.0" y="302.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="218.0" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="221.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.16%)</title><rect x="218.3" y="483.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.16%)</title><rect x="218.3" y="467.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.14%)</title><rect x="218.3" y="451.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="218.3" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.11%)</title><rect x="218.7" y="435.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.11%)</title><rect x="218.7" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.11%)</title><rect x="218.7" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="218.7" y="387.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="221.7" y="398.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.09%)</title><rect x="218.9" y="371.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="219.1" y="355.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.1" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="219.1" y="339.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="222.1" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.06%)</title><rect x="219.3" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="222.3" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.06%)</title><rect x="219.3" y="307.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="222.3" y="318.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="219.6" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$99/1511943480.compare (2 samples, 0.03%)</title><rect x="220.2" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.2" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.03%)</title><rect x="220.2" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.2" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (2 samples, 0.03%)</title><rect x="220.2" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.2" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.03%)</title><rect x="220.2" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (5,143 samples, 81.36%)</title><rect x="220.6" y="691.0" width="960.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.6" y="702.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList</text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,143 samples, 81.36%)</title><rect x="220.6" y="675.0" width="960.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.6" y="686.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (2 samples, 0.03%)</title><rect x="220.8" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.8" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (4 samples, 0.06%)</title><rect x="221.1" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (4 samples, 0.06%)</title><rect x="221.1" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (4 samples, 0.06%)</title><rect x="221.1" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (4 samples, 0.06%)</title><rect x="221.1" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (3 samples, 0.05%)</title><rect x="221.3" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$104/515740218.accept (5,136 samples, 81.25%)</title><rect x="221.9" y="659.0" width="958.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.9" y="670.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$104/515740218.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (5,135 samples, 81.24%)</title><rect x="222.1" y="643.0" width="958.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.1" y="654.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10</text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="222.3" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="222.3" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="222.3" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="222.3" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (5,132 samples, 81.19%)</title><rect x="222.6" y="627.0" width="958.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.6" y="638.0">ru/mail/polis/dao/zvladn7/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (5,131 samples, 81.17%)</title><rect x="222.8" y="611.0" width="957.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="225.8" y="622.0">ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (5,130 samples, 81.16%)</title><rect x="223.0" y="595.0" width="957.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.0" y="606.0">ru/mail/polis/dao/zvladn7/SSTable.getElementPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (31 samples, 0.49%)</title><rect x="223.6" y="579.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.6" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (12 samples, 0.19%)</title><rect x="224.1" y="563.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.1" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.08%)</title><rect x="225.1" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (2 samples, 0.03%)</title><rect x="226.0" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.0" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.19%)</title><rect x="226.4" y="563.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.08%)</title><rect x="226.9" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.9" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="226.9" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="227.5" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.5" y="542.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.06%)</title><rect x="227.9" y="547.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="230.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.06%)</title><rect x="228.6" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (5,096 samples, 80.62%)</title><rect x="229.3" y="579.0" width="951.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.3" y="590.0">ru/mail/polis/dao/zvladn7/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (101 samples, 1.60%)</title><rect x="231.0" y="563.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (69 samples, 1.09%)</title><rect x="237.0" y="547.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.0" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="239.6" y="531.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="242.6" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="239.6" y="515.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="242.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="239.6" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="242.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (52 samples, 0.82%)</title><rect x="240.2" y="531.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.27%)</title><rect x="246.7" y="515.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="247.3" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.19%)</title><rect x="247.6" y="499.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.17%)</title><rect x="247.8" y="483.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.14%)</title><rect x="248.2" y="467.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (4 samples, 0.06%)</title><rect x="249.9" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (2 samples, 0.03%)</title><rect x="250.3" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.3" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (25 samples, 0.40%)</title><rect x="250.6" y="563.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (23 samples, 0.36%)</title><rect x="251.0" y="547.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,791 samples, 28.33%)</title><rect x="255.3" y="563.0" width="334.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.3" y="574.0">ru/mail/polis/dao/zvladn7/SSTable.getOffset</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,790 samples, 28.32%)</title><rect x="255.5" y="547.0" width="334.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.5" y="558.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,790 samples, 28.32%)</title><rect x="255.5" y="531.0" width="334.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.5" y="542.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (50 samples, 0.79%)</title><rect x="257.0" y="515.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.0" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (49 samples, 0.78%)</title><rect x="257.2" y="499.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.11%)</title><rect x="260.9" y="483.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.9" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (22 samples, 0.35%)</title><rect x="262.2" y="483.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.2" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (18 samples, 0.28%)</title><rect x="263.0" y="467.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (17 samples, 0.27%)</title><rect x="263.1" y="451.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (12 samples, 0.19%)</title><rect x="266.3" y="515.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.3" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (12 samples, 0.19%)</title><rect x="266.3" y="499.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.3" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.08%)</title><rect x="267.6" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.6" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.06%)</title><rect x="267.8" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.06%)</title><rect x="267.8" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,641 samples, 25.96%)</title><rect x="268.6" y="515.0" width="306.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.6" y="526.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (106 samples, 1.68%)</title><rect x="269.3" y="499.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="276.8" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (64 samples, 1.01%)</title><rect x="277.1" y="483.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.03%)</title><rect x="278.6" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.11%)</title><rect x="279.0" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.06%)</title><rect x="279.6" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (2 samples, 0.03%)</title><rect x="279.9" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.9" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="280.3" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="280.3" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.3" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="280.3" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (44 samples, 0.70%)</title><rect x="280.9" y="467.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (39 samples, 0.62%)</title><rect x="281.8" y="451.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (12 samples, 0.19%)</title><rect x="286.7" y="435.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.05%)</title><rect x="288.3" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,359 samples, 21.50%)</title><rect x="289.1" y="499.0" width="253.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.1" y="510.0">sun/nio/ch/IOUtil.readIntoNativeBu..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="289.6" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.6" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="289.6" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="289.6" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="292.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="289.6" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,354 samples, 21.42%)</title><rect x="290.0" y="483.0" width="252.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.0" y="494.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,323 samples, 20.93%)</title><rect x="295.8" y="467.0" width="247.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.8" y="478.0">sun/nio/ch/FileDispatcherImpl.pre..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.08%)</title><rect x="300.3" y="451.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="303.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (1,284 samples, 20.31%)</title><rect x="301.2" y="451.0" width="239.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="304.2" y="462.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (13 samples, 0.21%)</title><rect x="301.2" y="435.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="304.2" y="446.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (15 samples, 0.24%)</title><rect x="303.6" y="435.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="306.6" y="446.0"></text>
</g>
<g>
<title>pread64 (1,256 samples, 19.87%)</title><rect x="306.4" y="435.0" width="234.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="309.4" y="446.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (748 samples, 11.83%)</title><rect x="401.3" y="419.0" width="139.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="404.3" y="430.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_pread64 (23 samples, 0.36%)</title><rect x="401.3" y="403.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="404.3" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (725 samples, 11.47%)</title><rect x="405.6" y="403.0" width="135.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="408.6" y="414.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (542 samples, 8.57%)</title><rect x="439.0" y="387.0" width="101.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="442.0" y="398.0">__x64_sys_pr..</text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="439.2" y="371.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.2" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (537 samples, 8.50%)</title><rect x="439.7" y="371.0" width="100.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.7" y="382.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (73 samples, 1.15%)</title><rect x="439.9" y="355.0" width="13.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.9" y="366.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="439.9" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="442.9" y="350.0"></text>
</g>
<g>
<title>__fget_light (71 samples, 1.12%)</title><rect x="440.3" y="339.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="443.3" y="350.0"></text>
</g>
<g>
<title>__fget (64 samples, 1.01%)</title><rect x="441.6" y="323.0" width="12.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.6" y="334.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="453.6" y="355.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="456.6" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.09%)</title><rect x="454.3" y="355.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.3" y="366.0"></text>
</g>
<g>
<title>fput (16 samples, 0.25%)</title><rect x="455.6" y="355.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.6" y="366.0"></text>
</g>
<g>
<title>fput_many (16 samples, 0.25%)</title><rect x="455.6" y="339.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="458.6" y="350.0"></text>
</g>
<g>
<title>vfs_read (435 samples, 6.88%)</title><rect x="458.8" y="355.0" width="81.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.8" y="366.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.08%)</title><rect x="461.8" y="339.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.8" y="350.0"></text>
</g>
<g>
<title>__vfs_read (312 samples, 4.94%)</title><rect x="462.7" y="339.0" width="58.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.7" y="350.0">__vfs_..</text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.16%)</title><rect x="463.1" y="323.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="466.1" y="334.0"></text>
</g>
<g>
<title>new_sync_read (299 samples, 4.73%)</title><rect x="465.1" y="323.0" width="55.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="468.1" y="334.0">new_s..</text>
</g>
<g>
<title>ext4_file_read_iter (280 samples, 4.43%)</title><rect x="467.9" y="307.0" width="52.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.9" y="318.0">ext4_..</text>
</g>
<g>
<title>generic_file_read_iter (263 samples, 4.16%)</title><rect x="470.5" y="291.0" width="49.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.5" y="302.0">gener..</text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.06%)</title><rect x="480.2" y="275.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.2" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (71 samples, 1.12%)</title><rect x="481.0" y="275.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.0" y="286.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.16%)</title><rect x="483.2" y="259.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="486.2" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (43 samples, 0.68%)</title><rect x="485.1" y="259.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.1" y="270.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.09%)</title><rect x="493.1" y="259.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="496.1" y="270.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="494.2" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.2" y="286.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.05%)</title><rect x="494.6" y="275.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="497.6" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (101 samples, 1.60%)</title><rect x="495.2" y="275.0" width="18.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.2" y="286.0"></text>
</g>
<g>
<title>find_get_entry (95 samples, 1.50%)</title><rect x="495.9" y="259.0" width="17.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.9" y="270.0"></text>
</g>
<g>
<title>xas_load (45 samples, 0.71%)</title><rect x="505.3" y="243.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="508.3" y="254.0"></text>
</g>
<g>
<title>xas_start (13 samples, 0.21%)</title><rect x="511.2" y="227.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="514.2" y="238.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="513.7" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="516.7" y="270.0"></text>
</g>
<g>
<title>touch_atime (30 samples, 0.47%)</title><rect x="514.0" y="275.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="517.0" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (24 samples, 0.38%)</title><rect x="515.0" y="259.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="518.0" y="270.0"></text>
</g>
<g>
<title>current_time (18 samples, 0.28%)</title><rect x="515.7" y="243.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="518.7" y="254.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (7 samples, 0.11%)</title><rect x="517.6" y="227.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="520.6" y="238.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="519.1" y="243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="522.1" y="254.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="519.8" y="291.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="522.8" y="302.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.05%)</title><rect x="520.4" y="307.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="523.4" y="318.0"></text>
</g>
<g>
<title>fsnotify (14 samples, 0.22%)</title><rect x="520.9" y="339.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="523.9" y="350.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="523.6" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.6" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (86 samples, 1.36%)</title><rect x="523.9" y="339.0" width="16.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.9" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.11%)</title><rect x="523.9" y="323.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="526.9" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="525.2" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="528.2" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="525.6" y="323.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.6" y="334.0"></text>
</g>
<g>
<title>security_file_permission (71 samples, 1.12%)</title><rect x="526.4" y="323.0" width="13.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.4" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.06%)</title><rect x="528.4" y="307.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="531.4" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (17 samples, 0.27%)</title><rect x="529.3" y="307.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="532.3" y="318.0"></text>
</g>
<g>
<title>common_file_perm (17 samples, 0.27%)</title><rect x="529.3" y="291.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="532.3" y="302.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.06%)</title><rect x="531.8" y="275.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="534.8" y="286.0"></text>
</g>
<g>
<title>fsnotify (15 samples, 0.24%)</title><rect x="532.7" y="307.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="535.7" y="318.0"></text>
</g>
<g>
<title>selinux_file_permission (22 samples, 0.35%)</title><rect x="535.5" y="307.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="538.5" y="318.0"></text>
</g>
<g>
<title>__inode_security_revalidate (8 samples, 0.13%)</title><rect x="537.4" y="291.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.4" y="302.0"></text>
</g>
<g>
<title>avc_policy_seqno (3 samples, 0.05%)</title><rect x="539.0" y="291.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.0" y="302.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.03%)</title><rect x="539.6" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="542.6" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.06%)</title><rect x="540.2" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.2" y="398.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.06%)</title><rect x="541.1" y="451.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="544.1" y="462.0"></text>
</g>
<g>
<title>pread64 (5 samples, 0.08%)</title><rect x="541.8" y="451.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="544.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (167 samples, 2.64%)</title><rect x="543.0" y="499.0" width="31.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.0" y="510.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (35 samples, 0.55%)</title><rect x="545.8" y="483.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.8" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (15 samples, 0.24%)</title><rect x="547.1" y="467.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="548.0" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="548.0" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.13%)</title><rect x="548.4" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (13 samples, 0.21%)</title><rect x="549.9" y="467.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.08%)</title><rect x="551.4" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="551.6" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="551.9" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (117 samples, 1.85%)</title><rect x="552.3" y="483.0" width="21.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.3" y="494.0">s..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.13%)</title><rect x="572.5" y="467.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.5" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.08%)</title><rect x="573.0" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="573.4" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.4" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.05%)</title><rect x="573.4" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.06%)</title><rect x="574.1" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.1" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="574.1" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="574.1" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.03%)</title><rect x="574.5" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (75 samples, 1.19%)</title><rect x="574.9" y="515.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.05%)</title><rect x="584.8" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (19 samples, 0.30%)</title><rect x="585.3" y="499.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.06%)</title><rect x="588.9" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,166 samples, 50.09%)</title><rect x="589.6" y="563.0" width="591.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.6" y="574.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,141 samples, 49.69%)</title><rect x="594.3" y="547.0" width="586.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.3" y="558.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (79 samples, 1.25%)</title><rect x="605.1" y="531.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.1" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (67 samples, 1.06%)</title><rect x="607.4" y="515.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.4" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (51 samples, 0.81%)</title><rect x="610.4" y="499.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.4" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (27 samples, 0.43%)</title><rect x="614.8" y="483.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (27 samples, 0.43%)</title><rect x="614.8" y="467.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,914 samples, 46.10%)</title><rect x="620.1" y="531.0" width="544.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.1" y="542.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="620.4" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (75 samples, 1.19%)</title><rect x="620.8" y="515.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="621.2" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.2" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="621.2" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (71 samples, 1.12%)</title><rect x="621.6" y="499.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.6" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (5 samples, 0.08%)</title><rect x="624.9" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.9" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.16%)</title><rect x="625.9" y="483.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.16%)</title><rect x="625.9" y="467.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.16%)</title><rect x="625.9" y="451.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (38 samples, 0.60%)</title><rect x="627.7" y="483.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (34 samples, 0.54%)</title><rect x="628.5" y="467.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (34 samples, 0.54%)</title><rect x="628.5" y="451.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (29 samples, 0.46%)</title><rect x="629.4" y="435.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (11 samples, 0.17%)</title><rect x="632.8" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.8" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="633.9" y="403.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="636.9" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (3 samples, 0.05%)</title><rect x="634.8" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (3 samples, 0.05%)</title><rect x="634.8" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,748 samples, 43.47%)</title><rect x="635.6" y="515.0" width="513.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.6" y="526.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,745 samples, 43.43%)</title><rect x="636.1" y="499.0" width="512.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.1" y="510.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,743 samples, 43.40%)</title><rect x="636.5" y="483.0" width="512.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.5" y="494.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (6 samples, 0.09%)</title><rect x="646.4" y="467.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="649.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (2,671 samples, 42.26%)</title><rect x="647.5" y="467.0" width="498.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="650.5" y="478.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (29 samples, 0.46%)</title><rect x="647.5" y="451.0" width="5.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="650.5" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (26 samples, 0.41%)</title><rect x="652.9" y="451.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="655.9" y="462.0"></text>
</g>
<g>
<title>pread64 (2,616 samples, 41.39%)</title><rect x="657.8" y="451.0" width="488.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="660.8" y="462.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,538 samples, 24.33%)</title><rect x="858.8" y="435.0" width="287.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="861.8" y="446.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (26 samples, 0.41%)</title><rect x="858.8" y="419.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="861.8" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1,511 samples, 23.90%)</title><rect x="863.9" y="419.0" width="282.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="866.9" y="430.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,148 samples, 18.16%)</title><rect x="929.2" y="403.0" width="214.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="932.2" y="414.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (8 samples, 0.13%)</title><rect x="929.2" y="387.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="932.2" y="398.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="930.7" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="933.7" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (1,137 samples, 17.99%)</title><rect x="931.3" y="387.0" width="212.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.3" y="398.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (96 samples, 1.52%)</title><rect x="933.5" y="371.0" width="17.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.5" y="382.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="933.5" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.5" y="366.0"></text>
</g>
<g>
<title>__fget_light (94 samples, 1.49%)</title><rect x="933.9" y="355.0" width="17.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="936.9" y="366.0"></text>
</g>
<g>
<title>__fget (82 samples, 1.30%)</title><rect x="936.1" y="339.0" width="15.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.1" y="350.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.14%)</title><rect x="951.4" y="371.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="954.4" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (13 samples, 0.21%)</title><rect x="953.1" y="371.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.1" y="382.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.09%)</title><rect x="955.5" y="371.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="958.5" y="382.0"></text>
</g>
<g>
<title>fput (23 samples, 0.36%)</title><rect x="956.7" y="371.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="959.7" y="382.0"></text>
</g>
<g>
<title>fput_many (23 samples, 0.36%)</title><rect x="956.7" y="355.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="959.7" y="366.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.06%)</title><rect x="960.9" y="371.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.9" y="382.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.08%)</title><rect x="961.7" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="964.7" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="962.6" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="965.6" y="382.0"></text>
</g>
<g>
<title>vfs_read (967 samples, 15.30%)</title><rect x="963.0" y="371.0" width="180.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="966.0" y="382.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (19 samples, 0.30%)</title><rect x="969.5" y="355.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="972.5" y="366.0"></text>
</g>
<g>
<title>__vfs_read (656 samples, 10.38%)</title><rect x="973.1" y="355.0" width="122.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.1" y="366.0">__vfs_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="974.0" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.0" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (43 samples, 0.68%)</title><rect x="974.4" y="339.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.4" y="350.0"></text>
</g>
<g>
<title>new_sync_read (605 samples, 9.57%)</title><rect x="982.6" y="339.0" width="112.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="985.6" y="350.0">new_sync_read</text>
</g>
<g>
<title>ext4_file_read_iter (559 samples, 8.84%)</title><rect x="988.9" y="323.0" width="104.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="991.9" y="334.0">ext4_file_re..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="993.8" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.8" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.06%)</title><rect x="994.2" y="307.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.2" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (521 samples, 8.24%)</title><rect x="994.9" y="307.0" width="97.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="997.9" y="318.0">generic_fil..</text>
</g>
<g>
<title>_cond_resched (8 samples, 0.13%)</title><rect x="1010.8" y="291.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1013.8" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.08%)</title><rect x="1011.3" y="275.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1014.3" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (8 samples, 0.13%)</title><rect x="1012.5" y="291.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1015.5" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (196 samples, 3.10%)</title><rect x="1014.0" y="291.0" width="36.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.0" y="302.0">cop..</text>
</g>
<g>
<title>_cond_resched (8 samples, 0.13%)</title><rect x="1021.6" y="275.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1024.6" y="286.0"></text>
</g>
<g>
<title>rcu_all_qs (6 samples, 0.09%)</title><rect x="1022.0" y="259.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1025.0" y="270.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (17 samples, 0.27%)</title><rect x="1023.1" y="275.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1026.1" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (113 samples, 1.79%)</title><rect x="1026.3" y="275.0" width="21.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.3" y="286.0">c..</text>
</g>
<g>
<title>copyout (15 samples, 0.24%)</title><rect x="1047.4" y="275.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.4" y="286.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1050.2" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.2" y="286.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.09%)</title><rect x="1050.6" y="291.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1053.6" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="1051.7" y="291.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1054.7" y="302.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.09%)</title><rect x="1052.0" y="291.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.0" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (163 samples, 2.58%)</title><rect x="1053.2" y="291.0" width="30.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.2" y="302.0">pa..</text>
</g>
<g>
<title>find_get_entry (154 samples, 2.44%)</title><rect x="1054.5" y="275.0" width="28.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.5" y="286.0">fi..</text>
</g>
<g>
<title>xas_load (71 samples, 1.12%)</title><rect x="1069.8" y="259.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1072.8" y="270.0"></text>
</g>
<g>
<title>xas_start (12 samples, 0.19%)</title><rect x="1080.8" y="243.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1083.8" y="254.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="1083.2" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1086.2" y="286.0"></text>
</g>
<g>
<title>touch_atime (45 samples, 0.71%)</title><rect x="1083.8" y="291.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.8" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (36 samples, 0.57%)</title><rect x="1085.5" y="275.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1088.5" y="286.0"></text>
</g>
<g>
<title>current_time (26 samples, 0.41%)</title><rect x="1087.0" y="259.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1090.0" y="270.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (12 samples, 0.19%)</title><rect x="1089.0" y="243.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1092.0" y="254.0"></text>
</g>
<g>
<title>timespec64_trunc (3 samples, 0.05%)</title><rect x="1091.2" y="243.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.2" y="254.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="1091.8" y="259.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1094.8" y="270.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.06%)</title><rect x="1092.6" y="307.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.6" y="318.0"></text>
</g>
<g>
<title>iov_iter_init (11 samples, 0.17%)</title><rect x="1093.5" y="323.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1096.5" y="334.0"></text>
</g>
<g>
<title>fsnotify (30 samples, 0.47%)</title><rect x="1095.5" y="355.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1098.5" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (225 samples, 3.56%)</title><rect x="1101.3" y="355.0" width="42.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1104.3" y="366.0">rw_v..</text>
</g>
<g>
<title>__fsnotify_parent (17 samples, 0.27%)</title><rect x="1101.9" y="339.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1104.9" y="350.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.08%)</title><rect x="1105.1" y="339.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1108.1" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (21 samples, 0.33%)</title><rect x="1106.0" y="339.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1109.0" y="350.0"></text>
</g>
<g>
<title>security_file_permission (171 samples, 2.71%)</title><rect x="1109.9" y="339.0" width="31.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1112.9" y="350.0">se..</text>
</g>
<g>
<title>__fsnotify_parent (16 samples, 0.25%)</title><rect x="1113.6" y="323.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1116.6" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (45 samples, 0.71%)</title><rect x="1116.8" y="323.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1119.8" y="334.0"></text>
</g>
<g>
<title>common_file_perm (44 samples, 0.70%)</title><rect x="1117.0" y="307.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1120.0" y="318.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.08%)</title><rect x="1124.3" y="291.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1127.3" y="302.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.16%)</title><rect x="1125.2" y="323.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1128.2" y="334.0"></text>
</g>
<g>
<title>fsnotify (24 samples, 0.38%)</title><rect x="1127.1" y="323.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.1" y="334.0"></text>
</g>
<g>
<title>selinux_file_permission (55 samples, 0.87%)</title><rect x="1131.6" y="323.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.6" y="334.0"></text>
</g>
<g>
<title>__inode_security_revalidate (18 samples, 0.28%)</title><rect x="1137.7" y="307.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.7" y="318.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1140.2" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1143.2" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1140.7" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1143.7" y="302.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="1141.1" y="307.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.1" y="318.0"></text>
</g>
<g>
<title>selinux_file_permission (8 samples, 0.13%)</title><rect x="1141.8" y="339.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1144.8" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.19%)</title><rect x="1143.7" y="403.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.7" y="414.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.11%)</title><rect x="1146.5" y="467.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1149.5" y="478.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.05%)</title><rect x="1147.8" y="467.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1150.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (82 samples, 1.30%)</title><rect x="1148.7" y="515.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (26 samples, 0.41%)</title><rect x="1149.3" y="499.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.3" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.08%)</title><rect x="1149.7" y="483.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.7" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (7 samples, 0.11%)</title><rect x="1150.6" y="483.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.6" y="494.0"></text>
</g>
<g>
<title>vtable stub (12 samples, 0.19%)</title><rect x="1151.9" y="483.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1154.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (35 samples, 0.55%)</title><rect x="1154.2" y="499.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (18 samples, 0.28%)</title><rect x="1160.7" y="499.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (36 samples, 0.57%)</title><rect x="1164.1" y="531.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.1" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.06%)</title><rect x="1164.4" y="515.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.4" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.06%)</title><rect x="1164.4" y="499.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.4" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.06%)</title><rect x="1164.4" y="483.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.4" y="494.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.05%)</title><rect x="1164.6" y="467.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1167.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (30 samples, 0.47%)</title><rect x="1165.2" y="515.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.2" y="526.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.03%)</title><rect x="1169.8" y="499.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1172.8" y="510.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1170.2" y="499.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1173.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (53 samples, 0.84%)</title><rect x="1170.8" y="531.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.8" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="1180.3" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.3" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="1180.3" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="1180.3" y="483.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (11 samples, 0.17%)</title><rect x="1180.7" y="707.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.7" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.17%)</title><rect x="1180.7" y="691.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (11 samples, 0.17%)</title><rect x="1180.7" y="675.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (11 samples, 0.17%)</title><rect x="1180.7" y="659.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.17%)</title><rect x="1180.7" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (11 samples, 0.17%)</title><rect x="1180.7" y="627.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.17%)</title><rect x="1180.7" y="611.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (11 samples, 0.17%)</title><rect x="1180.7" y="595.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.05%)</title><rect x="1182.2" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1182.3" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1182.3" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.updateCache (2 samples, 0.03%)</title><rect x="1182.7" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="1182.7" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="1182.7" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.05%)</title><rect x="1183.3" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="1183.5" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="1183.5" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (24 samples, 0.38%)</title><rect x="1184.0" y="819.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (21 samples, 0.33%)</title><rect x="1184.0" y="803.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.06%)</title><rect x="1184.2" y="787.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>__recv (15 samples, 0.24%)</title><rect x="1185.1" y="787.0" width="2.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.17%)</title><rect x="1185.9" y="771.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.17%)</title><rect x="1185.9" y="755.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.17%)</title><rect x="1185.9" y="739.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.16%)</title><rect x="1185.9" y="723.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.13%)</title><rect x="1186.1" y="707.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.06%)</title><rect x="1186.3" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.06%)</title><rect x="1186.3" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="1187.0" y="691.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1187.0" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1190.0" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="1187.0" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="1187.0" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.05%)</title><rect x="1187.9" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.13%)</title><rect x="1188.5" y="867.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.13%)</title><rect x="1188.5" y="851.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (8 samples, 0.13%)</title><rect x="1188.5" y="835.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.11%)</title><rect x="1188.5" y="819.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.11%)</title><rect x="1188.5" y="803.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.08%)</title><rect x="1188.9" y="787.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.06%)</title><rect x="1189.1" y="771.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1189.1" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1189.1" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
</g>
</svg>
