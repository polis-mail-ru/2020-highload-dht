<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (4,683 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.0" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (1 samples, 0.02%)</title><rect x="10.0" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="883.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (1 samples, 0.02%)</title><rect x="10.0" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.11%)</title><rect x="10.3" y="931.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="10.3" y="915.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="10.5" y="915.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="10.5" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.02%)</title><rect x="10.8" y="899.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.8" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="11.0" y="915.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="11.5" y="931.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="14.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.5" y="915.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.5" y="926.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.02%)</title><rect x="11.5" y="899.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="14.5" y="910.0"></text>
</g>
<g>
<title>_IO_vsnprintf (1 samples, 0.02%)</title><rect x="11.8" y="915.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="14.8" y="926.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (1 samples, 0.02%)</title><rect x="11.8" y="899.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="14.8" y="910.0"></text>
</g>
<g>
<title>__printf_fp_l (1 samples, 0.02%)</title><rect x="11.8" y="883.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="14.8" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.26%)</title><rect x="12.0" y="931.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="15.0" y="942.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="12.0" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.0" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.21%)</title><rect x="12.3" y="915.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.3" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (10 samples, 0.21%)</title><rect x="12.3" y="899.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.3" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="14.8" y="915.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.8" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,653 samples, 99.36%)</title><rect x="15.0" y="931.0" width="1172.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.43%)</title><rect x="15.3" y="915.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 0.38%)</title><rect x="15.8" y="899.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="15.8" y="883.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="18.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.34%)</title><rect x="16.0" y="883.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="19.0" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="16.0" y="867.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="19.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.32%)</title><rect x="16.3" y="867.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="19.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.32%)</title><rect x="16.3" y="851.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.32%)</title><rect x="16.3" y="835.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="19.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 0.32%)</title><rect x="16.3" y="819.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.3" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (15 samples, 0.32%)</title><rect x="16.3" y="803.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="19.3" y="814.0"></text>
</g>
<g>
<title>ep_poll (15 samples, 0.32%)</title><rect x="16.3" y="787.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="19.3" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (10 samples, 0.21%)</title><rect x="17.1" y="771.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="20.1" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.15%)</title><rect x="17.6" y="755.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="20.6" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.11%)</title><rect x="18.1" y="739.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="21.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.09%)</title><rect x="18.3" y="723.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="21.3" y="734.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="19.1" y="707.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="22.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="19.3" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="22.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.04%)</title><rect x="19.6" y="771.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="19.6" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="22.6" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="19.8" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.8" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="19.8" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.8" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="19.8" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.8" y="718.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="20.1" y="883.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="23.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4,632 samples, 98.91%)</title><rect x="20.3" y="915.0" width="1167.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.3" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,631 samples, 98.89%)</title><rect x="20.6" y="899.0" width="1166.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.6" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,619 samples, 98.63%)</title><rect x="20.6" y="883.0" width="1163.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.6" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,610 samples, 98.44%)</title><rect x="21.3" y="867.0" width="1161.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.3" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,610 samples, 98.44%)</title><rect x="21.3" y="851.0" width="1161.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.3" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (4,609 samples, 98.42%)</title><rect x="21.3" y="835.0" width="1161.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.3" y="846.0">RequestHandler1_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 1.24%)</title><rect x="21.3" y="819.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (58 samples, 1.24%)</title><rect x="21.3" y="803.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.09%)</title><rect x="21.3" y="787.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.3" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="22.1" y="771.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="25.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 1.15%)</title><rect x="22.3" y="787.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 1.15%)</title><rect x="22.3" y="771.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (54 samples, 1.15%)</title><rect x="22.3" y="755.0" width="13.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (54 samples, 1.15%)</title><rect x="22.3" y="739.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.3" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="22.6" y="723.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="25.6" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="22.6" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.02%)</title><rect x="22.9" y="707.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.9" y="718.0"></text>
</g>
<g>
<title>__send (51 samples, 1.09%)</title><rect x="23.1" y="723.0" width="12.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="26.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.05%)</title><rect x="23.6" y="707.0" width="12.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="23.6" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 1.02%)</title><rect x="23.9" y="691.0" width="12.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="26.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_sendto (48 samples, 1.02%)</title><rect x="23.9" y="675.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.9" y="686.0"></text>
</g>
<g>
<title>__sys_sendto (48 samples, 1.02%)</title><rect x="23.9" y="659.0" width="12.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.9" y="670.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="23.9" y="643.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.9" y="654.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="23.9" y="627.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (47 samples, 1.00%)</title><rect x="24.1" y="643.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.1" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (43 samples, 0.92%)</title><rect x="24.6" y="627.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.6" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 0.90%)</title><rect x="24.9" y="611.0" width="10.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.9" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (42 samples, 0.90%)</title><rect x="24.9" y="595.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.9" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="25.1" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.1" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="25.1" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="28.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.04%)</title><rect x="25.4" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="28.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.04%)</title><rect x="25.4" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="28.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (1 samples, 0.02%)</title><rect x="25.6" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="25.6" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.6" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="25.9" y="579.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="28.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (36 samples, 0.77%)</title><rect x="26.1" y="579.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.1" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (36 samples, 0.77%)</title><rect x="26.1" y="563.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="29.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (36 samples, 0.77%)</title><rect x="26.1" y="547.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.1" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="26.1" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="29.1" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (33 samples, 0.70%)</title><rect x="26.4" y="531.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.4" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 0.70%)</title><rect x="26.4" y="515.0" width="8.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.4" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (33 samples, 0.70%)</title><rect x="26.4" y="499.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="29.4" y="510.0"></text>
</g>
<g>
<title>ip_local_out (33 samples, 0.70%)</title><rect x="26.4" y="483.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="29.4" y="494.0"></text>
</g>
<g>
<title>ip_output (33 samples, 0.70%)</title><rect x="26.4" y="467.0" width="8.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.4" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (30 samples, 0.64%)</title><rect x="26.9" y="451.0" width="7.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="29.9" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (30 samples, 0.64%)</title><rect x="26.9" y="435.0" width="7.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.9" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="26.9" y="419.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 0.62%)</title><rect x="27.1" y="419.0" width="7.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.1" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (28 samples, 0.60%)</title><rect x="27.1" y="403.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.1" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.20 (28 samples, 0.60%)</title><rect x="27.1" y="387.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.1" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 0.56%)</title><rect x="27.6" y="371.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.6" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 0.56%)</title><rect x="27.6" y="355.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 0.53%)</title><rect x="27.9" y="339.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.9" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="27.9" y="323.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (24 samples, 0.51%)</title><rect x="28.1" y="323.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (24 samples, 0.51%)</title><rect x="28.1" y="307.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 0.49%)</title><rect x="28.1" y="291.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="31.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (22 samples, 0.47%)</title><rect x="28.1" y="275.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="31.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (22 samples, 0.47%)</title><rect x="28.1" y="259.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.1" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (22 samples, 0.47%)</title><rect x="28.1" y="243.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.1" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 0.47%)</title><rect x="28.1" y="227.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.1" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (22 samples, 0.47%)</title><rect x="28.1" y="211.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="31.1" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="28.1" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 0.45%)</title><rect x="28.4" y="195.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="31.4" y="206.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="28.6" y="179.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="28.9" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.9" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="28.9" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="31.9" y="174.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="28.9" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.9" y="158.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.02%)</title><rect x="28.9" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 0.38%)</title><rect x="29.2" y="179.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.38%)</title><rect x="29.2" y="163.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.2" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.09%)</title><rect x="29.2" y="147.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="32.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.09%)</title><rect x="29.2" y="131.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="29.2" y="115.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.2" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="29.2" y="99.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.2" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="29.4" y="99.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="29.4" y="83.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="32.4" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="29.9" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.9" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.15%)</title><rect x="30.2" y="147.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.2" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.15%)</title><rect x="30.2" y="131.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.15%)</title><rect x="30.2" y="115.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.2" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.15%)</title><rect x="30.2" y="99.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.13%)</title><rect x="31.9" y="147.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="34.9" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="32.2" y="131.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="32.2" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.2" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="32.2" y="99.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="35.2" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="32.4" y="99.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.4" y="110.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.04%)</title><rect x="32.9" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (1 samples, 0.02%)</title><rect x="33.4" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.4" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.02%)</title><rect x="33.7" y="275.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="36.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="33.9" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="36.9" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="34.2" y="403.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="34.2" y="387.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="34.2" y="371.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.2" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="34.4" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="37.4" y="462.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.02%)</title><rect x="34.4" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="37.4" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="34.7" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.7" y="542.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="34.7" y="515.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.7" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="34.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.9" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="35.2" y="579.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="38.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="35.2" y="563.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.2" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="35.4" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.4" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="35.7" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.7" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="35.7" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.06%)</title><rect x="36.0" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="36.0" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.06%)</title><rect x="36.0" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="36.5" y="771.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (4,548 samples, 97.12%)</title><rect x="36.7" y="819.0" width="1146.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.7" y="830.0">ru/mail/polis/service/zvladn7/BasicService.get</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (4,544 samples, 97.03%)</title><rect x="36.7" y="803.0" width="1145.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="814.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (176 samples, 3.76%)</title><rect x="36.7" y="787.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.7" y="798.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (176 samples, 3.76%)</title><rect x="36.7" y="771.0" width="44.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.7" y="782.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (176 samples, 3.76%)</title><rect x="36.7" y="755.0" width="44.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="766.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (175 samples, 3.74%)</title><rect x="37.0" y="739.0" width="44.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.0" y="750.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (175 samples, 3.74%)</title><rect x="37.0" y="723.0" width="44.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.0" y="734.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (175 samples, 3.74%)</title><rect x="37.0" y="707.0" width="44.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.0" y="718.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.09%)</title><rect x="37.0" y="691.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.0" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.02%)</title><rect x="37.0" y="675.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.hasNext (3 samples, 0.06%)</title><rect x="37.2" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.2" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (16 samples, 0.34%)</title><rect x="38.0" y="691.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.34%)</title><rect x="38.0" y="675.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (16 samples, 0.34%)</title><rect x="38.0" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.34%)</title><rect x="38.0" y="643.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.34%)</title><rect x="38.0" y="627.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.04%)</title><rect x="38.2" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$96/491361846.compare (13 samples, 0.28%)</title><rect x="38.7" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.28%)</title><rect x="38.7" y="595.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (13 samples, 0.28%)</title><rect x="38.7" y="579.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.26%)</title><rect x="39.0" y="563.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.11%)</title><rect x="39.2" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.11%)</title><rect x="39.2" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="39.5" y="515.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="39.5" y="499.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.5" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.06%)</title><rect x="39.7" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$94/2131252786.apply (6 samples, 0.13%)</title><rect x="40.5" y="547.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (6 samples, 0.13%)</title><rect x="40.5" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.13%)</title><rect x="40.5" y="515.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.13%)</title><rect x="40.5" y="499.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.13%)</title><rect x="40.5" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="40.7" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="41.5" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="41.5" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="41.5" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.5" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (155 samples, 3.31%)</title><rect x="42.0" y="691.0" width="39.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.0" y="702.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (155 samples, 3.31%)</title><rect x="42.0" y="675.0" width="39.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.0" y="686.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (155 samples, 3.31%)</title><rect x="42.0" y="659.0" width="39.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.0" y="670.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (155 samples, 3.31%)</title><rect x="42.0" y="643.0" width="39.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="654.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (155 samples, 3.31%)</title><rect x="42.0" y="627.0" width="39.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.0" y="638.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (155 samples, 3.31%)</title><rect x="42.0" y="611.0" width="39.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.0" y="622.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (153 samples, 3.27%)</title><rect x="42.0" y="595.0" width="38.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.0" y="606.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (153 samples, 3.27%)</title><rect x="42.0" y="579.0" width="38.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (153 samples, 3.27%)</title><rect x="42.0" y="563.0" width="38.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (153 samples, 3.27%)</title><rect x="42.0" y="547.0" width="38.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.0" y="558.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="42.0" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="42.0" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="42.0" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="42.0" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (62 samples, 1.32%)</title><rect x="42.3" y="531.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="42.3" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="42.3" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="42.3" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="42.3" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="42.3" y="451.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="42.3" y="435.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.3" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="42.3" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="42.5" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="42.5" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (26 samples, 0.56%)</title><rect x="42.8" y="515.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (26 samples, 0.56%)</title><rect x="42.8" y="499.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (26 samples, 0.56%)</title><rect x="42.8" y="483.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (26 samples, 0.56%)</title><rect x="42.8" y="467.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="43.0" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.41%)</title><rect x="43.3" y="451.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 0.41%)</title><rect x="43.3" y="435.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 0.41%)</title><rect x="43.3" y="419.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="43.3" y="403.0" width="4.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="46.3" y="414.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="43.3" y="387.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="46.3" y="398.0"></text>
</g>
<g>
<title>pread64 (18 samples, 0.38%)</title><rect x="43.5" y="387.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="46.5" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.13%)</title><rect x="46.5" y="371.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="49.5" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.13%)</title><rect x="46.5" y="355.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.5" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.09%)</title><rect x="47.0" y="339.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.0" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.09%)</title><rect x="47.0" y="323.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.0" y="334.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="47.0" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.0" y="318.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="47.0" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.0" y="302.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.06%)</title><rect x="47.3" y="307.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.3" y="318.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.04%)</title><rect x="47.3" y="291.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.3" y="302.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.04%)</title><rect x="47.3" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.3" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.04%)</title><rect x="47.3" y="259.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="50.3" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.04%)</title><rect x="47.3" y="243.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="50.3" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="47.3" y="227.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.3" y="238.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.02%)</title><rect x="47.5" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.5" y="222.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="47.5" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.5" y="206.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="47.8" y="291.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="50.8" y="302.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="47.8" y="275.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="50.8" y="286.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="47.8" y="259.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.11%)</title><rect x="48.0" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="48.8" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (34 samples, 0.73%)</title><rect x="49.3" y="515.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (34 samples, 0.73%)</title><rect x="49.3" y="499.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="49.3" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.3" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="49.3" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 0.68%)</title><rect x="49.6" y="483.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="49.6" y="467.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="49.6" y="451.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="49.6" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 0.64%)</title><rect x="49.8" y="467.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (30 samples, 0.64%)</title><rect x="49.8" y="451.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (30 samples, 0.64%)</title><rect x="49.8" y="435.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.8" y="446.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.02%)</title><rect x="50.3" y="419.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="53.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.58%)</title><rect x="50.6" y="419.0" width="6.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="53.6" y="430.0"></text>
</g>
<g>
<title>pread64 (27 samples, 0.58%)</title><rect x="50.6" y="403.0" width="6.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="53.6" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.36%)</title><rect x="53.1" y="387.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="56.1" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.36%)</title><rect x="53.1" y="371.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="56.1" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.32%)</title><rect x="53.6" y="355.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="56.6" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.32%)</title><rect x="53.6" y="339.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="56.6" y="350.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="53.6" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.6" y="334.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="53.6" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="56.6" y="318.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="53.6" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="56.6" y="302.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="54.1" y="323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="57.1" y="334.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="54.3" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.3" y="334.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.23%)</title><rect x="54.6" y="323.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.15%)</title><rect x="54.6" y="307.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.6" y="318.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.15%)</title><rect x="54.6" y="291.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.6" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.11%)</title><rect x="54.9" y="275.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.9" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.11%)</title><rect x="54.9" y="259.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="57.9" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="55.1" y="243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.1" y="254.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="55.4" y="243.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.4" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="55.6" y="243.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="58.6" y="254.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="55.6" y="227.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="58.6" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="56.1" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="59.1" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.09%)</title><rect x="56.4" y="307.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.4" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="56.6" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.6" y="302.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="56.9" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.9" y="302.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="56.9" y="275.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="57.4" y="467.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.4" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="57.4" y="451.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="57.6" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="57.6" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (34 samples, 0.73%)</title><rect x="57.9" y="531.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.02%)</title><rect x="57.9" y="515.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (33 samples, 0.70%)</title><rect x="58.1" y="515.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (33 samples, 0.70%)</title><rect x="58.1" y="499.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.66%)</title><rect x="58.1" y="483.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="58.4" y="467.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="58.4" y="451.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="58.4" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (28 samples, 0.60%)</title><rect x="58.6" y="467.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (28 samples, 0.60%)</title><rect x="58.6" y="451.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (28 samples, 0.60%)</title><rect x="58.6" y="435.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.58%)</title><rect x="58.9" y="419.0" width="6.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.9" y="430.0"></text>
</g>
<g>
<title>pread64 (27 samples, 0.58%)</title><rect x="58.9" y="403.0" width="6.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="61.9" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.36%)</title><rect x="61.4" y="387.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="64.4" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.36%)</title><rect x="61.4" y="371.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.4" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.26%)</title><rect x="62.7" y="355.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.7" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.26%)</title><rect x="62.7" y="339.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.7" y="350.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="62.7" y="323.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="65.7" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="62.7" y="307.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.7" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="62.7" y="291.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.7" y="302.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="62.9" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="65.9" y="334.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="62.9" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="65.9" y="318.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.21%)</title><rect x="63.2" y="323.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="66.2" y="334.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.09%)</title><rect x="63.7" y="307.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="66.7" y="318.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.09%)</title><rect x="63.7" y="291.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="66.7" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.09%)</title><rect x="63.7" y="275.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="66.7" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.09%)</title><rect x="63.7" y="259.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="66.7" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="63.7" y="243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.7" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="63.7" y="227.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="66.7" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="63.9" y="243.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="66.9" y="254.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.06%)</title><rect x="63.9" y="227.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.9" y="238.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="64.2" y="211.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="67.2" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.09%)</title><rect x="64.7" y="307.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="67.7" y="318.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="64.7" y="291.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.7" y="302.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="64.7" y="275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="67.7" y="286.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="64.7" y="259.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="67.7" y="270.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="64.9" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.9" y="254.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.04%)</title><rect x="65.2" y="275.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="68.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="65.7" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.04%)</title><rect x="65.9" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (55 samples, 1.17%)</title><rect x="66.4" y="531.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (55 samples, 1.17%)</title><rect x="66.4" y="515.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="66.4" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.4" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="66.4" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.4" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="66.4" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.4" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="66.4" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="66.4" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (53 samples, 1.13%)</title><rect x="66.7" y="499.0" width="13.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="66.7" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="66.7" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.7" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.02%)</title><rect x="66.7" y="451.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="66.7" y="435.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.7" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="66.7" y="419.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.7" y="430.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="66.9" y="451.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="69.9" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="67.2" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.2" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="67.2" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.02%)</title><rect x="67.2" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.2" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.02%)</title><rect x="67.2" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (49 samples, 1.05%)</title><rect x="67.5" y="483.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (49 samples, 1.05%)</title><rect x="67.5" y="467.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (49 samples, 1.05%)</title><rect x="67.5" y="451.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.05%)</title><rect x="67.5" y="435.0" width="12.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="70.5" y="446.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="67.5" y="419.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="70.5" y="430.0"></text>
</g>
<g>
<title>pread64 (48 samples, 1.02%)</title><rect x="67.7" y="419.0" width="12.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.7" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.60%)</title><rect x="72.7" y="403.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.7" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.02%)</title><rect x="72.7" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="75.7" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.58%)</title><rect x="73.0" y="387.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.0" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.43%)</title><rect x="74.8" y="371.0" width="5.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="77.8" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.43%)</title><rect x="74.8" y="355.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="77.8" y="366.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="75.0" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.0" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="75.0" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.0" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="75.0" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.0" y="318.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.38%)</title><rect x="75.3" y="339.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="78.3" y="350.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.28%)</title><rect x="75.3" y="323.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.3" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="75.5" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.5" y="318.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.23%)</title><rect x="75.8" y="307.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.21%)</title><rect x="76.0" y="291.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="79.0" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.21%)</title><rect x="76.0" y="275.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.0" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.13%)</title><rect x="76.8" y="259.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="79.8" y="270.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.11%)</title><rect x="77.0" y="243.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="80.0" y="254.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="77.8" y="227.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.8" y="238.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.02%)</title><rect x="78.0" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="81.0" y="222.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="78.3" y="259.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.3" y="270.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="78.3" y="243.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.3" y="254.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="78.5" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.5" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.09%)</title><rect x="78.8" y="323.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.8" y="334.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.06%)</title><rect x="78.8" y="307.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.8" y="318.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="78.8" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.8" y="302.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="79.3" y="291.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.3" y="302.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="79.3" y="275.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.3" y="286.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="79.5" y="307.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="82.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="79.8" y="483.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.8" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="79.8" y="467.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="79.8" y="451.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="80.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="80.0" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="80.3" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$96/491361846.compare (2 samples, 0.04%)</title><rect x="80.6" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.04%)</title><rect x="80.6" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.6" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (2 samples, 0.04%)</title><rect x="80.6" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.6" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.04%)</title><rect x="80.6" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="80.6" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="80.6" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.6" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="80.6" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.04%)</title><rect x="81.1" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.02%)</title><rect x="81.1" y="771.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.02%)</title><rect x="81.1" y="755.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.02%)</title><rect x="81.3" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$119/985731125.apply (1 samples, 0.02%)</title><rect x="81.3" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$iterator$4 (1 samples, 0.02%)</title><rect x="81.3" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (1 samples, 0.02%)</title><rect x="81.3" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (4,366 samples, 93.23%)</title><rect x="81.6" y="787.0" width="1100.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.6" y="798.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.02%)</title><rect x="81.6" y="771.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.6" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.02%)</title><rect x="81.6" y="755.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.6" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="81.6" y="739.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (4,350 samples, 92.89%)</title><rect x="81.8" y="771.0" width="1096.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.8" y="782.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (632 samples, 13.50%)</title><rect x="81.8" y="755.0" width="159.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.8" y="766.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (631 samples, 13.47%)</title><rect x="82.1" y="739.0" width="159.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.1" y="750.0">com/google/common/co..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.02%)</title><rect x="82.8" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="734.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="82.8" y="707.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="85.8" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (626 samples, 13.37%)</title><rect x="83.1" y="723.0" width="157.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="734.0">java/util/PriorityQu..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (626 samples, 13.37%)</title><rect x="83.1" y="707.0" width="157.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.1" y="718.0">java/util/PriorityQu..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (625 samples, 13.35%)</title><rect x="83.3" y="691.0" width="157.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.3" y="702.0">java/util/PriorityQu..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (625 samples, 13.35%)</title><rect x="83.3" y="675.0" width="157.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.3" y="686.0">java/util/PriorityQu..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (625 samples, 13.35%)</title><rect x="83.3" y="659.0" width="157.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.3" y="670.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (625 samples, 13.35%)</title><rect x="83.3" y="643.0" width="157.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.3" y="654.0">com/google/common/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (613 samples, 13.09%)</title><rect x="83.3" y="627.0" width="154.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.3" y="638.0">com/google/common/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (613 samples, 13.09%)</title><rect x="83.3" y="611.0" width="154.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.3" y="622.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (613 samples, 13.09%)</title><rect x="83.3" y="595.0" width="154.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.3" y="606.0">ru/mail/polis/dao/zv..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (610 samples, 13.03%)</title><rect x="84.1" y="579.0" width="153.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.1" y="590.0">ru/mail/polis/dao/z..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.11%)</title><rect x="84.3" y="563.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="84.6" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="84.6" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (3 samples, 0.06%)</title><rect x="84.8" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (233 samples, 4.98%)</title><rect x="85.6" y="563.0" width="58.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.6" y="574.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.09%)</title><rect x="85.6" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="85.8" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="85.8" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.8" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.1" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (87 samples, 1.86%)</title><rect x="86.6" y="547.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.6" y="558.0">r..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (87 samples, 1.86%)</title><rect x="86.6" y="531.0" width="21.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.6" y="542.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (87 samples, 1.86%)</title><rect x="86.6" y="515.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.6" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.11%)</title><rect x="87.1" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.11%)</title><rect x="87.1" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.1" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="88.1" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.1" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="88.1" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="88.1" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (76 samples, 1.62%)</title><rect x="88.4" y="499.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.17%)</title><rect x="88.4" y="483.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.17%)</title><rect x="88.4" y="467.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="89.4" y="451.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="89.4" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.06%)</title><rect x="89.6" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.6" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="90.4" y="483.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.4" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="90.4" y="467.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.4" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="90.6" y="483.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="93.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (58 samples, 1.24%)</title><rect x="90.9" y="483.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (58 samples, 1.24%)</title><rect x="90.9" y="467.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (58 samples, 1.24%)</title><rect x="90.9" y="451.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 1.22%)</title><rect x="90.9" y="435.0" width="14.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="93.9" y="446.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="90.9" y="419.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="93.9" y="430.0"></text>
</g>
<g>
<title>pread64 (56 samples, 1.20%)</title><rect x="91.1" y="419.0" width="14.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="94.1" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.68%)</title><rect x="97.2" y="403.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.2" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.04%)</title><rect x="97.2" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="100.2" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.64%)</title><rect x="97.7" y="387.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (23 samples, 0.49%)</title><rect x="99.5" y="371.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.5" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (23 samples, 0.49%)</title><rect x="99.5" y="355.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="102.5" y="366.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="99.5" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="102.5" y="350.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.04%)</title><rect x="99.5" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.5" y="334.0"></text>
</g>
<g>
<title>vfs_read (21 samples, 0.45%)</title><rect x="100.0" y="339.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.0" y="350.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.34%)</title><rect x="100.2" y="323.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.2" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="100.2" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="103.2" y="318.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.32%)</title><rect x="100.5" y="307.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.5" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.30%)</title><rect x="100.7" y="291.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.7" y="302.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="101.2" y="275.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.2" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.23%)</title><rect x="101.5" y="275.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="104.5" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.11%)</title><rect x="102.5" y="259.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="105.5" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.06%)</title><rect x="102.7" y="243.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="105.7" y="254.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="103.5" y="243.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.5" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="103.7" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.7" y="270.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="104.0" y="243.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.0" y="254.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="104.2" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.2" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.06%)</title><rect x="104.5" y="323.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="107.5" y="334.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.06%)</title><rect x="104.5" y="307.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="107.5" y="318.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="104.7" y="291.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.7" y="302.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="105.0" y="291.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.0" y="302.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.02%)</title><rect x="105.2" y="435.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="108.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.15%)</title><rect x="105.5" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.09%)</title><rect x="106.3" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="107.3" y="483.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="107.3" y="467.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="107.3" y="451.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.09%)</title><rect x="107.5" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="108.3" y="483.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (142 samples, 3.03%)</title><rect x="108.5" y="547.0" width="35.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.5" y="558.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.02%)</title><rect x="108.8" y="531.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.8" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.02%)</title><rect x="108.8" y="515.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (140 samples, 2.99%)</title><rect x="109.0" y="531.0" width="35.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.0" y="542.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.02%)</title><rect x="109.3" y="515.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.3" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.02%)</title><rect x="109.3" y="499.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (136 samples, 2.90%)</title><rect x="109.5" y="515.0" width="34.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.5" y="526.0">su..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="109.8" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="110.3" y="499.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="110.3" y="483.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="110.3" y="467.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (130 samples, 2.78%)</title><rect x="110.5" y="499.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.5" y="510.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (130 samples, 2.78%)</title><rect x="110.5" y="483.0" width="32.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.5" y="494.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (130 samples, 2.78%)</title><rect x="110.5" y="467.0" width="32.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.5" y="478.0">su..</text>
</g>
<g>
<title>[unknown] (126 samples, 2.69%)</title><rect x="111.0" y="451.0" width="31.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="114.0" y="462.0">[u..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="111.0" y="435.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="114.0" y="446.0"></text>
</g>
<g>
<title>pread64 (125 samples, 2.67%)</title><rect x="111.3" y="435.0" width="31.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="114.3" y="446.0">pr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.52%)</title><rect x="124.9" y="419.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.9" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 1.52%)</title><rect x="124.9" y="403.0" width="17.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.9" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (53 samples, 1.13%)</title><rect x="129.2" y="387.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="132.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (53 samples, 1.13%)</title><rect x="129.2" y="371.0" width="13.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.2" y="382.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.13%)</title><rect x="129.4" y="355.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.4" y="366.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.13%)</title><rect x="129.4" y="339.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.4" y="350.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="129.9" y="323.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.9" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="130.9" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.9" y="366.0"></text>
</g>
<g>
<title>vfs_read (45 samples, 0.96%)</title><rect x="131.2" y="355.0" width="11.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="134.2" y="366.0"></text>
</g>
<g>
<title>__vfs_read (33 samples, 0.70%)</title><rect x="131.5" y="339.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.5" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.04%)</title><rect x="131.5" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.5" y="334.0"></text>
</g>
<g>
<title>new_sync_read (31 samples, 0.66%)</title><rect x="132.0" y="323.0" width="7.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.0" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (29 samples, 0.62%)</title><rect x="132.5" y="307.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="135.5" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (26 samples, 0.56%)</title><rect x="133.2" y="291.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.2" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.21%)</title><rect x="134.2" y="275.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="137.2" y="286.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.09%)</title><rect x="135.2" y="259.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.2" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.04%)</title><rect x="136.2" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="139.2" y="270.0"></text>
</g>
<g>
<title>pagecache_get_page (11 samples, 0.23%)</title><rect x="136.7" y="275.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="139.7" y="286.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.23%)</title><rect x="136.7" y="259.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.7" y="270.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.13%)</title><rect x="138.0" y="243.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.0" y="254.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.09%)</title><rect x="138.5" y="227.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.5" y="238.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="139.5" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.5" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="139.5" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="142.5" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="139.5" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="142.5" y="254.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="139.8" y="339.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.8" y="350.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="140.0" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.0" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.19%)</title><rect x="140.3" y="339.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.3" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="140.3" y="323.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="143.3" y="334.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.17%)</title><rect x="140.5" y="323.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.5" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.06%)</title><rect x="140.5" y="307.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.5" y="318.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="140.5" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="143.5" y="302.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="140.8" y="291.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.8" y="302.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="141.0" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="144.0" y="286.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="141.0" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.0" y="270.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="141.0" y="243.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.0" y="254.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="141.0" y="227.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.0" y="238.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="141.0" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.0" y="222.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="141.0" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="144.0" y="206.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="141.0" y="179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.0" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="141.0" y="163.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="144.0" y="174.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="141.3" y="307.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.3" y="318.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.09%)</title><rect x="141.5" y="307.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="144.5" y="318.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="142.0" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.0" y="302.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="142.0" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.0" y="286.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="142.3" y="291.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.3" y="302.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.02%)</title><rect x="142.5" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.5" y="398.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="142.8" y="451.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="145.8" y="462.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="143.0" y="451.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="146.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="143.3" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="143.3" y="483.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="143.5" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="143.5" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.04%)</title><rect x="143.8" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="143.8" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.8" y="510.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.02%)</title><rect x="144.1" y="483.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="147.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (130 samples, 2.78%)</title><rect x="144.3" y="563.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="574.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.13%)</title><rect x="144.3" y="547.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.3" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="144.6" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="144.8" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (3 samples, 0.06%)</title><rect x="145.8" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="146.3" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (121 samples, 2.58%)</title><rect x="146.6" y="547.0" width="30.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.6" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (121 samples, 2.58%)</title><rect x="146.6" y="531.0" width="30.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="542.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.11%)</title><rect x="147.3" y="515.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.3" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.11%)</title><rect x="147.3" y="499.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.3" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="148.1" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.1" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="148.1" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="148.1" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.09%)</title><rect x="148.6" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.09%)</title><rect x="148.6" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="148.6" y="483.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.6" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.09%)</title><rect x="148.6" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.09%)</title><rect x="148.6" y="451.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (95 samples, 2.03%)</title><rect x="149.6" y="515.0" width="23.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.6" y="526.0">s..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="150.1" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="150.4" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (88 samples, 1.88%)</title><rect x="150.9" y="499.0" width="22.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.9" y="510.0">s..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.02%)</title><rect x="150.9" y="483.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.9" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.02%)</title><rect x="150.9" y="467.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="150.9" y="451.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.9" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="150.9" y="435.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (87 samples, 1.86%)</title><rect x="151.1" y="483.0" width="21.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.1" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (87 samples, 1.86%)</title><rect x="151.1" y="467.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.1" y="478.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.02%)</title><rect x="151.9" y="451.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="154.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.77%)</title><rect x="152.1" y="451.0" width="20.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="155.1" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="152.1" y="435.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="155.1" y="446.0"></text>
</g>
<g>
<title>pread64 (82 samples, 1.75%)</title><rect x="152.4" y="435.0" width="20.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="155.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.22%)</title><rect x="158.7" y="419.0" width="14.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.02%)</title><rect x="158.7" y="403.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="161.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 1.20%)</title><rect x="158.9" y="403.0" width="14.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="161.9" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (47 samples, 1.00%)</title><rect x="161.2" y="387.0" width="11.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="164.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (47 samples, 1.00%)</title><rect x="161.2" y="371.0" width="11.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.2" y="382.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.11%)</title><rect x="161.2" y="355.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="164.2" y="366.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="161.2" y="339.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.2" y="350.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="161.2" y="323.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.2" y="334.0"></text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="162.4" y="355.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="165.4" y="366.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.06%)</title><rect x="162.4" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="165.4" y="350.0"></text>
</g>
<g>
<title>vfs_read (39 samples, 0.83%)</title><rect x="163.2" y="355.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="166.2" y="366.0"></text>
</g>
<g>
<title>__vfs_read (25 samples, 0.53%)</title><rect x="163.7" y="339.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="166.7" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="163.7" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.7" y="334.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="164.0" y="323.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="167.0" y="334.0"></text>
</g>
<g>
<title>new_sync_read (23 samples, 0.49%)</title><rect x="164.2" y="323.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.2" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (23 samples, 0.49%)</title><rect x="164.2" y="307.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.2" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (22 samples, 0.47%)</title><rect x="164.2" y="291.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="167.2" y="302.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="165.5" y="275.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.5" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.09%)</title><rect x="165.7" y="275.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.7" y="286.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="165.7" y="259.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="168.7" y="270.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="165.7" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="168.7" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.06%)</title><rect x="166.0" y="259.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="169.0" y="270.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.21%)</title><rect x="166.7" y="275.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="169.7" y="286.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.21%)</title><rect x="166.7" y="259.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.7" y="270.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="168.7" y="243.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="171.7" y="254.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.02%)</title><rect x="169.0" y="227.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.0" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="169.2" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.2" y="286.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="169.5" y="275.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.5" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="169.5" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.5" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="169.5" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.5" y="254.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="169.5" y="227.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.5" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="169.8" y="291.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.8" y="302.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="170.0" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="173.0" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.23%)</title><rect x="170.3" y="339.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.3" y="350.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.19%)</title><rect x="170.8" y="323.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="173.8" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.04%)</title><rect x="171.0" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.0" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="171.5" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="174.5" y="318.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="171.5" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.5" y="302.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="171.8" y="307.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.8" y="318.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.09%)</title><rect x="172.0" y="307.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="175.0" y="318.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="172.8" y="291.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="173.0" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="173.0" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="173.3" y="499.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="173.5" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (12 samples, 0.26%)</title><rect x="173.8" y="515.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.06%)</title><rect x="175.8" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="176.6" y="499.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.02%)</title><rect x="176.8" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (241 samples, 5.15%)</title><rect x="177.1" y="563.0" width="60.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.1" y="574.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (241 samples, 5.15%)</title><rect x="177.1" y="547.0" width="60.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.1" y="558.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.19%)</title><rect x="177.8" y="531.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.8" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.19%)</title><rect x="177.8" y="515.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.8" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="178.1" y="499.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.1" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.15%)</title><rect x="178.3" y="499.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.3" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.11%)</title><rect x="178.8" y="483.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.11%)</title><rect x="178.8" y="467.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.09%)</title><rect x="180.1" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.1" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.09%)</title><rect x="180.1" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.1" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="180.1" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.1" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="180.6" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="180.6" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (223 samples, 4.76%)</title><rect x="181.1" y="531.0" width="56.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.1" y="542.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.13%)</title><rect x="182.4" y="515.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.4" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="182.4" y="499.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.11%)</title><rect x="182.6" y="499.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="182.6" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="182.9" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.9" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="183.4" y="483.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="186.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="183.6" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.02%)</title><rect x="183.6" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.02%)</title><rect x="183.6" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.02%)</title><rect x="183.6" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.04%)</title><rect x="183.9" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (196 samples, 4.19%)</title><rect x="184.4" y="515.0" width="49.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.4" y="526.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (195 samples, 4.16%)</title><rect x="184.6" y="499.0" width="49.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.6" y="510.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (195 samples, 4.16%)</title><rect x="184.6" y="483.0" width="49.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.6" y="494.0">sun/n..</text>
</g>
<g>
<title>[unknown] (194 samples, 4.14%)</title><rect x="184.9" y="467.0" width="48.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="187.9" y="478.0">[unk..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.06%)</title><rect x="184.9" y="451.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="187.9" y="462.0"></text>
</g>
<g>
<title>pread64 (191 samples, 4.08%)</title><rect x="185.6" y="451.0" width="48.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="188.6" y="462.0">prea..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 2.14%)</title><rect x="208.6" y="435.0" width="25.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.6" y="446.0">e..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 2.14%)</title><rect x="208.6" y="419.0" width="25.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.6" y="430.0">d..</text>
</g>
<g>
<title>__x64_sys_pread64 (77 samples, 1.64%)</title><rect x="214.1" y="403.0" width="19.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.1" y="414.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="214.1" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="217.1" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (76 samples, 1.62%)</title><rect x="214.4" y="387.0" width="19.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="217.4" y="398.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.11%)</title><rect x="214.9" y="371.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="217.9" y="382.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="214.9" y="355.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="217.9" y="366.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="215.4" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.4" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="216.1" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="219.1" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.06%)</title><rect x="216.4" y="371.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="219.4" y="382.0"></text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="217.1" y="371.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="220.1" y="382.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.06%)</title><rect x="217.1" y="355.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.1" y="366.0"></text>
</g>
<g>
<title>vfs_read (62 samples, 1.32%)</title><rect x="217.9" y="371.0" width="15.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="220.9" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="218.6" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="221.6" y="366.0"></text>
</g>
<g>
<title>__vfs_read (44 samples, 0.94%)</title><rect x="218.9" y="355.0" width="11.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="221.9" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="218.9" y="339.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.9" y="350.0"></text>
</g>
<g>
<title>new_sync_read (43 samples, 0.92%)</title><rect x="219.1" y="339.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (42 samples, 0.90%)</title><rect x="219.4" y="323.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="222.4" y="334.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="219.9" y="307.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.9" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (39 samples, 0.83%)</title><rect x="220.1" y="307.0" width="9.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="223.1" y="318.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="221.9" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.9" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.06%)</title><rect x="222.2" y="291.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.2" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.23%)</title><rect x="222.9" y="291.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.9" y="302.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="223.4" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="226.4" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.13%)</title><rect x="223.7" y="275.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="226.7" y="286.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.04%)</title><rect x="225.2" y="275.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="228.2" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (12 samples, 0.26%)</title><rect x="225.7" y="291.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="228.7" y="302.0"></text>
</g>
<g>
<title>find_get_entry (12 samples, 0.26%)</title><rect x="225.7" y="275.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="228.7" y="286.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.13%)</title><rect x="227.2" y="259.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.2" y="270.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.06%)</title><rect x="228.0" y="243.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="231.0" y="254.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.11%)</title><rect x="228.7" y="291.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="231.7" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.11%)</title><rect x="228.7" y="275.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.7" y="286.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.04%)</title><rect x="229.5" y="259.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.5" y="270.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.04%)</title><rect x="229.5" y="243.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.5" y="254.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.06%)</title><rect x="230.0" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.0" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.23%)</title><rect x="230.7" y="355.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="233.7" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="231.0" y="339.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.0" y="350.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.17%)</title><rect x="231.2" y="339.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.2" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.04%)</title><rect x="231.5" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="234.5" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="232.0" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.0" y="334.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="232.0" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="235.0" y="318.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.06%)</title><rect x="232.5" y="323.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="235.5" y="334.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.04%)</title><rect x="232.7" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="235.7" y="318.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="233.3" y="339.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="236.3" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.02%)</title><rect x="233.5" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="236.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.17%)</title><rect x="233.8" y="515.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.09%)</title><rect x="234.0" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.0" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.04%)</title><rect x="234.0" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.0" y="494.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="234.5" y="483.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="237.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.06%)</title><rect x="235.0" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.13%)</title><rect x="235.8" y="515.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.11%)</title><rect x="236.0" y="499.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.0" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.04%)</title><rect x="236.3" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.3" y="494.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="236.8" y="483.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="239.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="237.3" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.02%)</title><rect x="237.3" y="515.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.02%)</title><rect x="237.5" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="237.5" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.5" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$96/491361846.compare (12 samples, 0.26%)</title><rect x="237.8" y="627.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.8" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.26%)</title><rect x="237.8" y="611.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (12 samples, 0.26%)</title><rect x="237.8" y="595.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.26%)</title><rect x="237.8" y="579.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.15%)</title><rect x="238.0" y="563.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.13%)</title><rect x="238.3" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.3" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.13%)</title><rect x="238.3" y="531.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="238.8" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.8" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="239.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="239.3" y="499.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.3" y="510.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.02%)</title><rect x="239.5" y="515.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="242.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$94/2131252786.apply (4 samples, 0.09%)</title><rect x="239.8" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (4 samples, 0.09%)</title><rect x="239.8" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.09%)</title><rect x="239.8" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.04%)</title><rect x="240.3" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="240.3" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="240.3" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="240.6" y="467.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="240.6" y="451.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="240.6" y="435.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.6" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="240.6" y="419.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.6" y="430.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.02%)</title><rect x="240.8" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.09%)</title><rect x="241.1" y="755.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.09%)</title><rect x="241.1" y="739.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.09%)</title><rect x="241.1" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.02%)</title><rect x="241.1" y="707.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.1" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="241.3" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.3" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="241.3" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.3" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="241.3" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="241.3" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="241.3" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.02%)</title><rect x="241.3" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.3" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$96/491361846.compare (2 samples, 0.04%)</title><rect x="241.6" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.04%)</title><rect x="241.6" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (2 samples, 0.04%)</title><rect x="241.6" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.04%)</title><rect x="241.6" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$94/2131252786.apply (2 samples, 0.04%)</title><rect x="241.6" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (2 samples, 0.04%)</title><rect x="241.6" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="241.6" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="241.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="241.8" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="241.8" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (3,714 samples, 79.31%)</title><rect x="242.1" y="755.0" width="935.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.1" y="766.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList</text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,714 samples, 79.31%)</title><rect x="242.1" y="739.0" width="935.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.1" y="750.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.02%)</title><rect x="242.3" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="242.3" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="242.3" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (1 samples, 0.02%)</title><rect x="242.3" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (1 samples, 0.02%)</title><rect x="242.3" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.3" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.02%)</title><rect x="242.6" y="723.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.6" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="242.6" y="707.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.02%)</title><rect x="242.6" y="691.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (1 samples, 0.02%)</title><rect x="242.6" y="675.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.tooLow (1 samples, 0.02%)</title><rect x="242.6" y="659.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$101/358387649.accept (3,711 samples, 79.24%)</title><rect x="242.8" y="723.0" width="935.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.8" y="734.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$101/358387649.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (3,707 samples, 79.16%)</title><rect x="243.8" y="707.0" width="934.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.8" y="718.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (3,707 samples, 79.16%)</title><rect x="243.8" y="691.0" width="934.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.8" y="702.0">ru/mail/polis/dao/zvladn7/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (3,707 samples, 79.16%)</title><rect x="243.8" y="675.0" width="934.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.8" y="686.0">ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (3,706 samples, 79.14%)</title><rect x="244.1" y="659.0" width="933.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.1" y="670.0">ru/mail/polis/dao/zvladn7/SSTable.getElementPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.30%)</title><rect x="245.1" y="643.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.15%)</title><rect x="245.6" y="627.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.6" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.06%)</title><rect x="245.8" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (3 samples, 0.06%)</title><rect x="246.6" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="247.4" y="627.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.4" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.09%)</title><rect x="247.6" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.6" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.04%)</title><rect x="248.1" y="611.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="251.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (3,688 samples, 78.75%)</title><rect x="248.6" y="643.0" width="929.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.6" y="654.0">ru/mail/polis/dao/zvladn7/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (98 samples, 2.09%)</title><rect x="257.2" y="627.0" width="24.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.2" y="638.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.09%)</title><rect x="258.7" y="611.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="261.7" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="258.7" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="261.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.06%)</title><rect x="259.0" y="595.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="262.0" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.06%)</title><rect x="259.0" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="262.0" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="259.0" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="262.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="259.0" y="547.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="262.0" y="558.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="259.0" y="531.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="262.0" y="542.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="259.2" y="547.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="262.2" y="558.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="259.5" y="563.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="262.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (88 samples, 1.88%)</title><rect x="259.7" y="611.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.7" y="622.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="259.7" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="262.7" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="259.7" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="262.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="259.7" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="262.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="260.0" y="563.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="263.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (86 samples, 1.84%)</title><rect x="260.2" y="595.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.2" y="606.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (45 samples, 0.96%)</title><rect x="270.5" y="579.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="271.8" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (27 samples, 0.58%)</title><rect x="272.3" y="563.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="275.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (25 samples, 0.53%)</title><rect x="272.8" y="547.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (24 samples, 0.51%)</title><rect x="273.1" y="531.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.21%)</title><rect x="279.1" y="563.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.1" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="279.1" y="547.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="282.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.19%)</title><rect x="279.4" y="547.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="281.4" y="531.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="281.6" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="284.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="281.6" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="281.6" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (3 samples, 0.06%)</title><rect x="281.9" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,317 samples, 28.12%)</title><rect x="282.6" y="627.0" width="331.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.6" y="638.0">ru/mail/polis/dao/zvladn7/SSTable.getOffset</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="282.6" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.6" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="282.6" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.6" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="282.6" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="285.6" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="282.6" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="285.6" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="282.6" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="285.6" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="282.6" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="285.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.04%)</title><rect x="282.9" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,314 samples, 28.06%)</title><rect x="283.4" y="611.0" width="331.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.4" y="622.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,314 samples, 28.06%)</title><rect x="283.4" y="595.0" width="331.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="606.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.06%)</title><rect x="286.2" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (58 samples, 1.24%)</title><rect x="286.9" y="579.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (58 samples, 1.24%)</title><rect x="286.9" y="563.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (8 samples, 0.17%)</title><rect x="291.2" y="547.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.2" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="293.0" y="531.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.0" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.11%)</title><rect x="293.2" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.2" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="294.5" y="547.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.5" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (27 samples, 0.58%)</title><rect x="294.7" y="547.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.7" y="558.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (21 samples, 0.45%)</title><rect x="295.7" y="531.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (21 samples, 0.45%)</title><rect x="295.7" y="515.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/access/SharedSecrets.getJavaLangAccess (2 samples, 0.04%)</title><rect x="301.0" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="301.3" y="515.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.11%)</title><rect x="301.5" y="579.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.11%)</title><rect x="301.5" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.5" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="301.8" y="547.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.8" y="558.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.09%)</title><rect x="301.8" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.09%)</title><rect x="301.8" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,187 samples, 25.35%)</title><rect x="302.8" y="579.0" width="299.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.8" y="590.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (56 samples, 1.20%)</title><rect x="303.8" y="563.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="304.8" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="304.8" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.8" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (50 samples, 1.07%)</title><rect x="305.3" y="547.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.09%)</title><rect x="310.6" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.06%)</title><rect x="310.9" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.9" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.04%)</title><rect x="311.6" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="311.6" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (23 samples, 0.49%)</title><rect x="312.1" y="531.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (7 samples, 0.15%)</title><rect x="316.1" y="515.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.09%)</title><rect x="316.4" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.04%)</title><rect x="316.9" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (2 samples, 0.04%)</title><rect x="317.4" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.4" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (16 samples, 0.34%)</title><rect x="317.9" y="563.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.9" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (16 samples, 0.34%)</title><rect x="317.9" y="547.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.9" y="558.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="321.9" y="563.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="324.9" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="322.2" y="563.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="325.2" y="574.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="323.0" y="563.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="326.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (969 samples, 20.69%)</title><rect x="323.7" y="563.0" width="244.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.7" y="574.0">sun/nio/ch/IOUtil.readIntoNative..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.09%)</title><rect x="325.0" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.0" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.09%)</title><rect x="325.0" y="531.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="325.5" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="325.5" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (960 samples, 20.50%)</title><rect x="326.0" y="547.0" width="241.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.0" y="558.0">sun/nio/ch/FileDispatcherImpl.pr..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (960 samples, 20.50%)</title><rect x="326.0" y="531.0" width="241.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.0" y="542.0">sun/nio/ch/FileDispatcherImpl.pr..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.09%)</title><rect x="330.5" y="515.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="333.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (932 samples, 19.90%)</title><rect x="331.5" y="515.0" width="234.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="334.5" y="526.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (11 samples, 0.23%)</title><rect x="331.5" y="499.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="334.5" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (10 samples, 0.21%)</title><rect x="334.3" y="499.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="337.3" y="510.0"></text>
</g>
<g>
<title>pread64 (911 samples, 19.45%)</title><rect x="336.8" y="499.0" width="229.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="339.8" y="510.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (571 samples, 12.19%)</title><rect x="422.5" y="483.0" width="143.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="425.5" y="494.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.23%)</title><rect x="422.5" y="467.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="425.5" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="425.3" y="467.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="428.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (559 samples, 11.94%)</title><rect x="425.5" y="467.0" width="140.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.5" y="478.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (440 samples, 9.40%)</title><rect x="454.5" y="451.0" width="110.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="457.5" y="462.0">__x64_sys_pre..</text>
</g>
<g>
<title>ksys_pread64 (440 samples, 9.40%)</title><rect x="454.5" y="435.0" width="110.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="457.5" y="446.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (41 samples, 0.88%)</title><rect x="456.2" y="419.0" width="10.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.2" y="430.0"></text>
</g>
<g>
<title>__fget_light (41 samples, 0.88%)</title><rect x="456.2" y="403.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="459.2" y="414.0"></text>
</g>
<g>
<title>__fget (36 samples, 0.77%)</title><rect x="457.5" y="387.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.5" y="398.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="466.6" y="419.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.6" y="430.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.09%)</title><rect x="467.8" y="419.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="470.8" y="430.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.06%)</title><rect x="468.8" y="419.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.8" y="430.0"></text>
</g>
<g>
<title>fput (8 samples, 0.17%)</title><rect x="469.6" y="419.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="472.6" y="430.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.17%)</title><rect x="469.6" y="403.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.6" y="414.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="471.6" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="474.6" y="430.0"></text>
</g>
<g>
<title>vfs_read (371 samples, 7.92%)</title><rect x="471.9" y="419.0" width="93.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.9" y="430.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.09%)</title><rect x="475.1" y="403.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="478.1" y="414.0"></text>
</g>
<g>
<title>__vfs_read (247 samples, 5.27%)</title><rect x="476.2" y="403.0" width="62.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="479.2" y="414.0">__vfs_..</text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.30%)</title><rect x="476.2" y="387.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="479.2" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="479.7" y="387.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.7" y="398.0"></text>
</g>
<g>
<title>new_sync_read (232 samples, 4.95%)</title><rect x="479.9" y="387.0" width="58.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.9" y="398.0">new_sy..</text>
</g>
<g>
<title>ext4_file_read_iter (219 samples, 4.68%)</title><rect x="483.0" y="371.0" width="55.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="486.0" y="382.0">ext4_..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="485.0" y="355.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="488.0" y="366.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="485.2" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="488.2" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (205 samples, 4.38%)</title><rect x="485.5" y="355.0" width="51.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.5" y="366.0">gener..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="494.5" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="497.5" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="494.8" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.8" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.06%)</title><rect x="495.1" y="339.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.1" y="350.0"></text>
</g>
<g>
<title>copy_page_to_iter (47 samples, 1.00%)</title><rect x="495.8" y="339.0" width="11.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.8" y="350.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="497.6" y="323.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="500.6" y="334.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.17%)</title><rect x="497.8" y="323.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="500.8" y="334.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (25 samples, 0.53%)</title><rect x="499.8" y="323.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="502.8" y="334.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.13%)</title><rect x="506.1" y="323.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.1" y="334.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="507.7" y="339.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.7" y="350.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.17%)</title><rect x="507.9" y="339.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="510.9" y="350.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.06%)</title><rect x="509.9" y="339.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.9" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (83 samples, 1.77%)</title><rect x="510.7" y="339.0" width="20.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="513.7" y="350.0"></text>
</g>
<g>
<title>find_get_entry (68 samples, 1.45%)</title><rect x="513.4" y="323.0" width="17.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="516.4" y="334.0"></text>
</g>
<g>
<title>xas_load (28 samples, 0.60%)</title><rect x="522.3" y="307.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="525.3" y="318.0"></text>
</g>
<g>
<title>xas_start (10 samples, 0.21%)</title><rect x="526.8" y="291.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.8" y="302.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.11%)</title><rect x="529.3" y="307.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.3" y="318.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.09%)</title><rect x="530.6" y="323.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="533.6" y="334.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="531.6" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.6" y="350.0"></text>
</g>
<g>
<title>touch_atime (20 samples, 0.43%)</title><rect x="532.1" y="339.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.1" y="350.0"></text>
</g>
<g>
<title>atime_needs_update (16 samples, 0.34%)</title><rect x="533.1" y="323.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.1" y="334.0"></text>
</g>
<g>
<title>current_time (7 samples, 0.15%)</title><rect x="534.1" y="307.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.1" y="318.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (5 samples, 0.11%)</title><rect x="534.4" y="291.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="537.4" y="302.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.02%)</title><rect x="535.6" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="538.6" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.09%)</title><rect x="535.9" y="307.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="538.9" y="318.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.02%)</title><rect x="536.9" y="307.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.9" y="318.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.04%)</title><rect x="537.1" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.1" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="537.6" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="540.6" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="538.1" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.1" y="382.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.26%)</title><rect x="538.4" y="403.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="541.4" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (95 samples, 2.03%)</title><rect x="541.4" y="403.0" width="24.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.4" y="414.0">r..</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.11%)</title><rect x="542.2" y="387.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="545.2" y="398.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="543.4" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.4" y="398.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.17%)</title><rect x="543.7" y="387.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="546.7" y="398.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="545.7" y="387.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="548.7" y="398.0"></text>
</g>
<g>
<title>security_file_permission (71 samples, 1.52%)</title><rect x="546.2" y="387.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.2" y="398.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.13%)</title><rect x="548.7" y="371.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="551.7" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (16 samples, 0.34%)</title><rect x="550.2" y="371.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.2" y="382.0"></text>
</g>
<g>
<title>common_file_perm (16 samples, 0.34%)</title><rect x="550.2" y="355.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="553.2" y="366.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.11%)</title><rect x="553.0" y="339.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="556.0" y="350.0"></text>
</g>
<g>
<title>avc_policy_seqno (1 samples, 0.02%)</title><rect x="554.3" y="371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="557.3" y="382.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="554.5" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.5" y="382.0"></text>
</g>
<g>
<title>fsnotify (14 samples, 0.30%)</title><rect x="555.0" y="371.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="558.0" y="382.0"></text>
</g>
<g>
<title>selinux_file_permission (22 samples, 0.47%)</title><rect x="558.6" y="371.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="561.6" y="382.0"></text>
</g>
<g>
<title>__inode_security_revalidate (6 samples, 0.13%)</title><rect x="562.3" y="355.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="565.3" y="366.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="563.3" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.3" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="563.3" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="566.3" y="334.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="563.6" y="339.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.6" y="350.0"></text>
</g>
<g>
<title>avc_policy_seqno (1 samples, 0.02%)</title><rect x="563.8" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="566.8" y="366.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.11%)</title><rect x="564.1" y="387.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="567.1" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="565.4" y="451.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="568.4" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="565.4" y="435.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.4" y="446.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="565.4" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.4" y="430.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="565.4" y="403.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.06%)</title><rect x="565.6" y="451.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.6" y="462.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.06%)</title><rect x="566.4" y="515.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="569.4" y="526.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.06%)</title><rect x="567.1" y="515.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="570.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (128 samples, 2.73%)</title><rect x="567.9" y="563.0" width="32.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.9" y="574.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (22 samples, 0.47%)</title><rect x="584.8" y="547.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.8" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.15%)</title><rect x="586.8" y="531.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.8" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.09%)</title><rect x="588.5" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="589.3" y="515.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="589.5" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="589.8" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (39 samples, 0.83%)</title><rect x="590.3" y="547.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.3" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="597.4" y="531.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.4" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="597.4" y="515.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.4" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="597.4" y="499.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.4" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="597.4" y="483.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.4" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="597.4" y="467.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.4" y="478.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="597.4" y="451.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="600.4" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="597.4" y="435.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.04%)</title><rect x="597.6" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.6" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.04%)</title><rect x="597.6" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="597.6" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="597.6" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.6" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.09%)</title><rect x="598.1" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.1" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.04%)</title><rect x="598.6" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.04%)</title><rect x="598.6" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (2 samples, 0.04%)</title><rect x="598.6" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (4 samples, 0.09%)</title><rect x="599.1" y="531.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.11%)</title><rect x="600.1" y="563.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.04%)</title><rect x="600.6" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="601.1" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.1" y="558.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.04%)</title><rect x="601.4" y="563.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="604.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (50 samples, 1.07%)</title><rect x="601.9" y="579.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.9" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="609.7" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="612.7" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="609.7" y="547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="612.7" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="609.7" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="612.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (15 samples, 0.32%)</title><rect x="610.0" y="563.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.0" y="574.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.02%)</title><rect x="613.0" y="547.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="616.0" y="558.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.04%)</title><rect x="613.2" y="547.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="616.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="613.7" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.02%)</title><rect x="614.5" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,235 samples, 47.73%)</title><rect x="614.7" y="627.0" width="563.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.7" y="638.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (6 samples, 0.13%)</title><rect x="624.6" y="611.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.6" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (6 samples, 0.13%)</title><rect x="624.6" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,190 samples, 46.76%)</title><rect x="626.1" y="611.0" width="551.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.1" y="622.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (18 samples, 0.38%)</title><rect x="634.6" y="595.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.6" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.36%)</title><rect x="634.9" y="579.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="636.4" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.4" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="636.4" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.4" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="636.4" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.4" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="636.4" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.4" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="636.4" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.4" y="510.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="636.4" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="639.4" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (10 samples, 0.21%)</title><rect x="636.7" y="563.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.7" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.17%)</title><rect x="637.2" y="547.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.15%)</title><rect x="637.4" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (36 samples, 0.77%)</title><rect x="639.2" y="595.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.2" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (33 samples, 0.70%)</title><rect x="639.9" y="579.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (22 samples, 0.47%)</title><rect x="642.7" y="563.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.7" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (22 samples, 0.47%)</title><rect x="642.7" y="547.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (22 samples, 0.47%)</title><rect x="642.7" y="531.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (3 samples, 0.06%)</title><rect x="648.3" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,032 samples, 43.39%)</title><rect x="649.0" y="595.0" width="512.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.0" y="606.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.17%)</title><rect x="649.5" y="579.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.21%)</title><rect x="651.5" y="579.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="651.8" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="651.8" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.8" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.15%)</title><rect x="652.3" y="563.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.15%)</title><rect x="652.3" y="547.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,970 samples, 42.07%)</title><rect x="654.0" y="579.0" width="496.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.0" y="590.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,970 samples, 42.07%)</title><rect x="654.0" y="563.0" width="496.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.0" y="574.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,967 samples, 42.00%)</title><rect x="654.8" y="547.0" width="495.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.8" y="558.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.15%)</title><rect x="664.6" y="531.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="667.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (1,908 samples, 40.74%)</title><rect x="666.4" y="531.0" width="480.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="669.4" y="542.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (22 samples, 0.47%)</title><rect x="666.4" y="515.0" width="5.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="669.4" y="526.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (21 samples, 0.45%)</title><rect x="671.9" y="515.0" width="5.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="674.9" y="526.0"></text>
</g>
<g>
<title>pread64 (1,865 samples, 39.82%)</title><rect x="677.2" y="515.0" width="470.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="680.2" y="526.0">pread64</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="866.0" y="499.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="869.0" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="866.0" y="483.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="869.0" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="866.0" y="467.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="869.0" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="866.0" y="451.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="869.0" y="462.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="866.0" y="435.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.0" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,115 samples, 23.81%)</title><rect x="866.2" y="499.0" width="281.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="869.2" y="510.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.36%)</title><rect x="866.2" y="483.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.2" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.04%)</title><rect x="870.5" y="483.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="873.5" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (1,096 samples, 23.40%)</title><rect x="871.0" y="483.0" width="276.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.0" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (833 samples, 17.79%)</title><rect x="936.5" y="467.0" width="209.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.5" y="478.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="936.5" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="939.5" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (832 samples, 17.77%)</title><rect x="936.8" y="451.0" width="209.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.8" y="462.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (72 samples, 1.54%)</title><rect x="939.5" y="435.0" width="18.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="942.5" y="446.0"></text>
</g>
<g>
<title>__fget_light (72 samples, 1.54%)</title><rect x="939.5" y="419.0" width="18.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.5" y="430.0"></text>
</g>
<g>
<title>__fget (68 samples, 1.45%)</title><rect x="940.5" y="403.0" width="17.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.5" y="414.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.13%)</title><rect x="957.7" y="435.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="960.7" y="446.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.11%)</title><rect x="959.2" y="435.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="962.2" y="446.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="960.5" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.5" y="446.0"></text>
</g>
<g>
<title>fput (23 samples, 0.49%)</title><rect x="960.7" y="435.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.7" y="446.0"></text>
</g>
<g>
<title>fput_many (23 samples, 0.49%)</title><rect x="960.7" y="419.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.7" y="430.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.09%)</title><rect x="966.5" y="435.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.5" y="446.0"></text>
</g>
<g>
<title>vfs_read (710 samples, 15.16%)</title><rect x="967.5" y="435.0" width="178.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="970.5" y="446.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (12 samples, 0.26%)</title><rect x="975.3" y="419.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="978.3" y="430.0"></text>
</g>
<g>
<title>__vfs_read (447 samples, 9.55%)</title><rect x="978.3" y="419.0" width="112.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.3" y="430.0">__vfs_read</text>
</g>
<g>
<title>ext4_file_read_iter (22 samples, 0.47%)</title><rect x="979.9" y="403.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="982.9" y="414.0"></text>
</g>
<g>
<title>new_sync_read (419 samples, 8.95%)</title><rect x="985.4" y="403.0" width="105.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="988.4" y="414.0">new_sync_read</text>
</g>
<g>
<title>ext4_file_read_iter (390 samples, 8.33%)</title><rect x="991.2" y="387.0" width="98.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.2" y="398.0">ext4_file_re..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="998.0" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.0" y="382.0"></text>
</g>
<g>
<title>generic_file_read_iter (356 samples, 7.60%)</title><rect x="998.5" y="371.0" width="89.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1001.5" y="382.0">generic_fi..</text>
</g>
<g>
<title>_cond_resched (10 samples, 0.21%)</title><rect x="1015.9" y="355.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1018.9" y="366.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.11%)</title><rect x="1017.1" y="339.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.1" y="350.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.13%)</title><rect x="1018.4" y="355.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.4" y="366.0"></text>
</g>
<g>
<title>copy_page_to_iter (105 samples, 2.24%)</title><rect x="1019.9" y="355.0" width="26.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.9" y="366.0">c..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.11%)</title><rect x="1028.0" y="339.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1031.0" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.11%)</title><rect x="1028.0" y="323.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1031.0" y="334.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.21%)</title><rect x="1029.2" y="339.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.2" y="350.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (52 samples, 1.11%)</title><rect x="1031.8" y="339.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1034.8" y="350.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.11%)</title><rect x="1044.9" y="339.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1047.9" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1046.1" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1049.1" y="350.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.04%)</title><rect x="1046.4" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1049.4" y="366.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="1046.9" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1049.9" y="366.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.11%)</title><rect x="1047.4" y="355.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1050.4" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (123 samples, 2.63%)</title><rect x="1048.6" y="355.0" width="31.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1051.6" y="366.0">pa..</text>
</g>
<g>
<title>find_get_entry (120 samples, 2.56%)</title><rect x="1049.4" y="339.0" width="30.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1052.4" y="350.0">fi..</text>
</g>
<g>
<title>xas_load (55 samples, 1.17%)</title><rect x="1065.5" y="323.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.5" y="334.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1076.4" y="307.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1079.4" y="318.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1076.4" y="291.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1079.4" y="302.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1076.4" y="275.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1079.4" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1076.4" y="259.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1079.4" y="270.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="1076.4" y="243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1079.4" y="254.0"></text>
</g>
<g>
<title>scsi_softirq_done (1 samples, 0.02%)</title><rect x="1076.4" y="227.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.4" y="238.0"></text>
</g>
<g>
<title>scsi_finish_command (1 samples, 0.02%)</title><rect x="1076.4" y="211.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1079.4" y="222.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="1076.4" y="195.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1079.4" y="206.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="1076.4" y="179.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.4" y="190.0"></text>
</g>
<g>
<title>blk_update_request (1 samples, 0.02%)</title><rect x="1076.4" y="163.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1079.4" y="174.0"></text>
</g>
<g>
<title>bio_endio (1 samples, 0.02%)</title><rect x="1076.4" y="147.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1079.4" y="158.0"></text>
</g>
<g>
<title>end_bio_bh_io_sync (1 samples, 0.02%)</title><rect x="1076.4" y="131.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1079.4" y="142.0"></text>
</g>
<g>
<title>bio_put (1 samples, 0.02%)</title><rect x="1076.4" y="115.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1079.4" y="126.0"></text>
</g>
<g>
<title>bio_free (1 samples, 0.02%)</title><rect x="1076.4" y="99.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1079.4" y="110.0"></text>
</g>
<g>
<title>mempool_free (1 samples, 0.02%)</title><rect x="1076.4" y="83.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1079.4" y="94.0"></text>
</g>
<g>
<title>mempool_free_slab (1 samples, 0.02%)</title><rect x="1076.4" y="67.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1079.4" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1076.4" y="51.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1079.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1076.4" y="35.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1079.4" y="46.0"></text>
</g>
<g>
<title>xas_start (11 samples, 0.23%)</title><rect x="1076.6" y="307.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1079.6" y="318.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.02%)</title><rect x="1079.4" y="323.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1082.4" y="334.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.06%)</title><rect x="1079.6" y="355.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.6" y="366.0"></text>
</g>
<g>
<title>touch_atime (31 samples, 0.66%)</title><rect x="1080.4" y="355.0" width="7.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.4" y="366.0"></text>
</g>
<g>
<title>atime_needs_update (22 samples, 0.47%)</title><rect x="1081.7" y="339.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1084.7" y="350.0"></text>
</g>
<g>
<title>current_time (11 samples, 0.23%)</title><rect x="1083.9" y="323.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1086.9" y="334.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.09%)</title><rect x="1085.2" y="307.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1088.2" y="318.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.04%)</title><rect x="1086.2" y="307.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1089.2" y="318.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.04%)</title><rect x="1086.7" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1089.7" y="334.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.09%)</title><rect x="1087.2" y="339.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1090.2" y="350.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.04%)</title><rect x="1088.2" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1091.2" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="1088.7" y="371.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1091.7" y="382.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.04%)</title><rect x="1089.5" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1092.5" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (4 samples, 0.09%)</title><rect x="1090.0" y="387.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1093.0" y="398.0"></text>
</g>
<g>
<title>fsnotify (22 samples, 0.47%)</title><rect x="1091.0" y="419.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1094.0" y="430.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1096.3" y="403.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1099.3" y="414.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1096.3" y="387.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1099.3" y="398.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1096.3" y="371.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1099.3" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1096.3" y="355.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1099.3" y="366.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1096.3" y="339.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1099.3" y="350.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1096.3" y="323.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.3" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1096.3" y="307.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.3" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (197 samples, 4.21%)</title><rect x="1096.5" y="419.0" width="49.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1099.5" y="430.0">rw_ve..</text>
</g>
<g>
<title>__fsnotify_parent (10 samples, 0.21%)</title><rect x="1098.5" y="403.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.5" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.04%)</title><rect x="1101.1" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1104.1" y="414.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.21%)</title><rect x="1101.6" y="403.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1104.6" y="414.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.06%)</title><rect x="1104.1" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.1" y="414.0"></text>
</g>
<g>
<title>security_file_permission (157 samples, 3.35%)</title><rect x="1104.8" y="403.0" width="39.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1107.8" y="414.0">sec..</text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.19%)</title><rect x="1110.1" y="387.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1113.1" y="398.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.04%)</title><rect x="1112.4" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.4" y="398.0"></text>
</g>
<g>
<title>apparmor_file_permission (35 samples, 0.75%)</title><rect x="1112.9" y="387.0" width="8.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1115.9" y="398.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.04%)</title><rect x="1112.9" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.9" y="382.0"></text>
</g>
<g>
<title>common_file_perm (33 samples, 0.70%)</title><rect x="1113.4" y="371.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1116.4" y="382.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.11%)</title><rect x="1120.5" y="355.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.5" y="366.0"></text>
</g>
<g>
<title>avc_policy_seqno (1 samples, 0.02%)</title><rect x="1121.7" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1124.7" y="398.0"></text>
</g>
<g>
<title>common_file_perm (11 samples, 0.23%)</title><rect x="1122.0" y="387.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.0" y="398.0"></text>
</g>
<g>
<title>fsnotify (35 samples, 0.75%)</title><rect x="1124.7" y="387.0" width="8.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1127.7" y="398.0"></text>
</g>
<g>
<title>selinux_file_permission (43 samples, 0.92%)</title><rect x="1133.6" y="387.0" width="10.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.6" y="398.0"></text>
</g>
<g>
<title>__inode_security_revalidate (12 samples, 0.26%)</title><rect x="1140.9" y="371.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.9" y="382.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.06%)</title><rect x="1143.1" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.1" y="366.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="1143.9" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.9" y="382.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.15%)</title><rect x="1144.4" y="403.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1147.4" y="414.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="1146.2" y="419.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1149.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.06%)</title><rect x="1146.4" y="467.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.4" y="478.0"></text>
</g>
<g>
<title>fdval (8 samples, 0.17%)</title><rect x="1147.2" y="531.0" width="2.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1150.2" y="542.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.06%)</title><rect x="1149.2" y="531.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1152.2" y="542.0"></text>
</g>
<g>
<title>pread64@plt (2 samples, 0.04%)</title><rect x="1149.9" y="531.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1152.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.23%)</title><rect x="1150.4" y="579.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.23%)</title><rect x="1150.4" y="563.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.4" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="1152.5" y="547.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.5" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="1152.5" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1152.5" y="515.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="1152.5" y="499.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.5" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.04%)</title><rect x="1152.7" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.7" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="1153.0" y="531.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.02%)</title><rect x="1153.0" y="515.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.02%)</title><rect x="1153.0" y="499.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (31 samples, 0.66%)</title><rect x="1153.2" y="579.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (21 samples, 0.45%)</title><rect x="1154.2" y="563.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.06%)</title><rect x="1158.8" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (5 samples, 0.11%)</title><rect x="1159.5" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="1160.8" y="563.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (27 samples, 0.58%)</title><rect x="1161.0" y="595.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.0" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.17%)</title><rect x="1161.0" y="579.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.0" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.15%)</title><rect x="1161.3" y="563.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.3" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="1161.3" y="547.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.3" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.13%)</title><rect x="1161.5" y="547.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.5" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (3 samples, 0.06%)</title><rect x="1162.0" y="531.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.0" y="542.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1162.8" y="531.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1165.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (19 samples, 0.41%)</title><rect x="1163.0" y="579.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (40 samples, 0.85%)</title><rect x="1167.8" y="595.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.8" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.11%)</title><rect x="1176.6" y="579.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.6" y="590.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="1176.6" y="563.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.09%)</title><rect x="1176.9" y="563.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.9" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="1176.9" y="547.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.9" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (1 samples, 0.02%)</title><rect x="1177.7" y="531.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (15 samples, 0.32%)</title><rect x="1177.9" y="771.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.9" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.32%)</title><rect x="1177.9" y="755.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (15 samples, 0.32%)</title><rect x="1177.9" y="739.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (14 samples, 0.30%)</title><rect x="1178.2" y="723.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (14 samples, 0.30%)</title><rect x="1178.2" y="707.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.02%)</title><rect x="1178.2" y="691.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.02%)</title><rect x="1178.2" y="675.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="1178.2" y="659.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1178.2" y="643.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1178.2" y="627.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.2" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1178.2" y="611.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (13 samples, 0.28%)</title><rect x="1178.4" y="691.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.28%)</title><rect x="1178.4" y="675.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="1178.9" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="1178.9" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="1178.9" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1178.9" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.9" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1178.9" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.9" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1179.2" y="611.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.19%)</title><rect x="1179.4" y="659.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.13%)</title><rect x="1180.2" y="643.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.13%)</title><rect x="1180.2" y="627.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.06%)</title><rect x="1180.9" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1180.9" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.9" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="1181.2" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.2" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.02%)</title><rect x="1181.4" y="579.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1184.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (4 samples, 0.09%)</title><rect x="1181.7" y="803.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1181.7" y="787.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1181.7" y="771.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (3 samples, 0.06%)</title><rect x="1181.9" y="787.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (3 samples, 0.06%)</title><rect x="1181.9" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.06%)</title><rect x="1181.9" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="1182.2" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.2" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1182.2" y="723.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1185.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1182.4" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="1182.7" y="835.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1182.7" y="819.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1182.7" y="803.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.11%)</title><rect x="1182.9" y="867.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1182.9" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1182.9" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.06%)</title><rect x="1183.4" y="851.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.02%)</title><rect x="1184.2" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.26%)</title><rect x="1184.5" y="883.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.26%)</title><rect x="1184.5" y="867.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.5" y="878.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1185.0" y="851.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1188.0" y="862.0"></text>
</g>
<g>
<title>__recv (9 samples, 0.19%)</title><rect x="1185.2" y="851.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1188.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.19%)</title><rect x="1185.2" y="835.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.19%)</title><rect x="1185.2" y="819.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 0.19%)</title><rect x="1185.2" y="803.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.2" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 0.19%)</title><rect x="1185.2" y="787.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.19%)</title><rect x="1185.2" y="771.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (8 samples, 0.17%)</title><rect x="1185.2" y="755.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.2" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1185.2" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.2" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.15%)</title><rect x="1185.5" y="739.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="1185.5" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="1185.5" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1188.5" y="718.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="1185.5" y="691.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1185.7" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="1185.7" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.7" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="1186.0" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1189.0" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="1186.0" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1189.0" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="1186.2" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1186.2" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1186.5" y="723.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1186.7" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.7" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1186.7" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1187.0" y="723.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1190.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1187.2" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.02%)</title><rect x="1187.2" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.02%)</title><rect x="1187.2" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.21%)</title><rect x="1187.5" y="931.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1190.5" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.21%)</title><rect x="1187.5" y="915.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1190.5" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.21%)</title><rect x="1187.5" y="899.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.15%)</title><rect x="1187.5" y="883.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.5" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.13%)</title><rect x="1187.5" y="867.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1187.5" y="851.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.5" y="862.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="1187.5" y="835.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.5" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1187.5" y="819.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1190.5" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.7" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.02%)</title><rect x="1187.7" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.02%)</title><rect x="1187.7" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.09%)</title><rect x="1188.0" y="851.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="862.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.04%)</title><rect x="1188.0" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.0" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1188.5" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1188.5" y="819.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.02%)</title><rect x="1188.5" y="803.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1188.7" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.02%)</title><rect x="1188.7" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>metadata_Relocation::unpack_data() (1 samples, 0.02%)</title><rect x="1188.7" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1189.0" y="867.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.02%)</title><rect x="1189.0" y="851.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (1 samples, 0.02%)</title><rect x="1189.0" y="835.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1189.0" y="819.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="1189.0" y="803.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="1189.0" y="787.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.02%)</title><rect x="1189.2" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.02%)</title><rect x="1189.2" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.02%)</title><rect x="1189.2" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1189.2" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1189.2" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.02%)</title><rect x="1189.2" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.2" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.02%)</title><rect x="1189.2" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.2" y="798.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.02%)</title><rect x="1189.2" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="1189.2" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.2" y="766.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.02%)</title><rect x="1189.2" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.2" y="750.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.04%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1189.5" y="851.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.02%)</title><rect x="1189.5" y="835.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.02%)</title><rect x="1189.5" y="819.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.5" y="803.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.02%)</title><rect x="1189.5" y="787.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.5" y="771.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.5" y="755.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (1 samples, 0.02%)</title><rect x="1189.7" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.02%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.7" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="766.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.02%)</title><rect x="1189.7" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1192.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.7" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1192.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.7" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1192.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1189.7" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1192.7" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.7" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1189.7" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1189.7" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1189.7" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1192.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1189.7" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1192.7" y="622.0"></text>
</g>
</g>
</svg>
