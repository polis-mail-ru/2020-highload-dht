<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (7,131 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="10.0" y="899.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="10.0" y="883.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (3 samples, 0.04%)</title><rect x="10.0" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="10.0" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.03%)</title><rect x="10.5" y="899.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.07%)</title><rect x="11.0" y="899.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="14.0" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="11.2" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.03%)</title><rect x="11.2" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.2" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="11.5" y="883.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="14.5" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.07%)</title><rect x="11.8" y="899.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="14.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="12.2" y="883.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="12.2" y="867.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="15.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.04%)</title><rect x="12.2" y="851.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="15.2" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="12.2" y="835.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.2" y="846.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.04%)</title><rect x="12.2" y="819.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="15.2" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="12.2" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7,073 samples, 99.19%)</title><rect x="12.6" y="899.0" width="1170.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.6" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,073 samples, 99.19%)</title><rect x="12.6" y="883.0" width="1170.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.6" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,073 samples, 99.19%)</title><rect x="12.6" y="867.0" width="1170.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.6" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.07%)</title><rect x="12.6" y="851.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.07%)</title><rect x="12.6" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.07%)</title><rect x="12.6" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.07%)</title><rect x="12.6" y="803.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.07%)</title><rect x="12.6" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="12.6" y="771.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="13.0" y="771.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="16.0" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="13.0" y="755.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="16.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$98/1861781073.run (7,068 samples, 99.12%)</title><rect x="13.5" y="851.0" width="1169.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.5" y="862.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$98/1861781073.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$1 (7,068 samples, 99.12%)</title><rect x="13.5" y="835.0" width="1169.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.5" y="846.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$1</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (7,068 samples, 99.12%)</title><rect x="13.5" y="819.0" width="1169.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.5" y="830.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$119/1411889274.process (7,068 samples, 99.12%)</title><rect x="13.5" y="803.0" width="1169.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.5" y="814.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$119/1411889274.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$4 (7,068 samples, 99.12%)</title><rect x="13.5" y="787.0" width="1169.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.5" y="798.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$get$4</text>
</g>
<g>
<title>java/util/LinkedHashMap.get (2 samples, 0.03%)</title><rect x="13.5" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (44 samples, 0.62%)</title><rect x="13.8" y="771.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (43 samples, 0.60%)</title><rect x="13.8" y="755.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.59%)</title><rect x="14.0" y="739.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.59%)</title><rect x="14.0" y="723.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (40 samples, 0.56%)</title><rect x="14.3" y="707.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (40 samples, 0.56%)</title><rect x="14.3" y="691.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.3" y="702.0"></text>
</g>
<g>
<title>__send (39 samples, 0.55%)</title><rect x="14.5" y="675.0" width="6.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.49%)</title><rect x="15.1" y="659.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.48%)</title><rect x="15.3" y="643.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (33 samples, 0.46%)</title><rect x="15.3" y="627.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.3" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (33 samples, 0.46%)</title><rect x="15.3" y="611.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.3" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (32 samples, 0.45%)</title><rect x="15.3" y="595.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.3" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (31 samples, 0.43%)</title><rect x="15.3" y="579.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (31 samples, 0.43%)</title><rect x="15.3" y="563.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="18.3" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (30 samples, 0.42%)</title><rect x="15.5" y="547.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.5" y="558.0"></text>
</g>
<g>
<title>tcp_push (28 samples, 0.39%)</title><rect x="15.8" y="531.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.8" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (28 samples, 0.39%)</title><rect x="15.8" y="515.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.8" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (28 samples, 0.39%)</title><rect x="15.8" y="499.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.8" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (26 samples, 0.36%)</title><rect x="15.8" y="483.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (25 samples, 0.35%)</title><rect x="16.0" y="467.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.0" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 0.35%)</title><rect x="16.0" y="451.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.0" y="462.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.35%)</title><rect x="16.0" y="435.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="19.0" y="446.0"></text>
</g>
<g>
<title>ip_output (25 samples, 0.35%)</title><rect x="16.0" y="419.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="19.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (25 samples, 0.35%)</title><rect x="16.0" y="403.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="19.0" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (25 samples, 0.35%)</title><rect x="16.0" y="387.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.0" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (24 samples, 0.34%)</title><rect x="16.1" y="371.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.1" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 0.31%)</title><rect x="16.5" y="355.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.5" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (22 samples, 0.31%)</title><rect x="16.5" y="339.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.5" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (22 samples, 0.31%)</title><rect x="16.5" y="323.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.5" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (22 samples, 0.31%)</title><rect x="16.5" y="307.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.5" y="318.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 0.31%)</title><rect x="16.5" y="291.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.5" y="302.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 0.31%)</title><rect x="16.5" y="275.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="19.5" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (21 samples, 0.29%)</title><rect x="16.6" y="259.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.6" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (21 samples, 0.29%)</title><rect x="16.6" y="243.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 0.28%)</title><rect x="16.8" y="227.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (19 samples, 0.27%)</title><rect x="16.8" y="211.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.8" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (19 samples, 0.27%)</title><rect x="16.8" y="195.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 0.27%)</title><rect x="16.8" y="179.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="19.8" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 0.27%)</title><rect x="16.8" y="163.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="19.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 0.27%)</title><rect x="16.8" y="147.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.22%)</title><rect x="17.3" y="131.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.22%)</title><rect x="17.3" y="115.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.3" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="17.3" y="99.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.3" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="17.3" y="83.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="17.3" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="20.3" y="78.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="17.3" y="51.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="17.3" y="35.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.3" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.11%)</title><rect x="17.8" y="99.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.11%)</title><rect x="17.8" y="83.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.8" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.11%)</title><rect x="17.8" y="67.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.11%)</title><rect x="17.8" y="51.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.04%)</title><rect x="19.1" y="99.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="22.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (7,020 samples, 98.44%)</title><rect x="21.1" y="771.0" width="1161.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.1" y="782.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (94 samples, 1.32%)</title><rect x="21.1" y="755.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (94 samples, 1.32%)</title><rect x="21.1" y="739.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (94 samples, 1.32%)</title><rect x="21.1" y="723.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (94 samples, 1.32%)</title><rect x="21.1" y="707.0" width="15.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (94 samples, 1.32%)</title><rect x="21.1" y="691.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (92 samples, 1.29%)</title><rect x="21.1" y="675.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.1" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.08%)</title><rect x="21.1" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.08%)</title><rect x="21.1" y="643.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.08%)</title><rect x="21.1" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.08%)</title><rect x="21.1" y="611.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.08%)</title><rect x="21.1" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.1" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/905690591.compare (4 samples, 0.06%)</title><rect x="21.4" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.4" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.06%)</title><rect x="21.4" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.4" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (4 samples, 0.06%)</title><rect x="21.4" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.4" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.06%)</title><rect x="21.4" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="21.4" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="21.4" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.4" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="21.4" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (86 samples, 1.21%)</title><rect x="22.1" y="659.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (86 samples, 1.21%)</title><rect x="22.1" y="643.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (86 samples, 1.21%)</title><rect x="22.1" y="627.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (86 samples, 1.21%)</title><rect x="22.1" y="611.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (86 samples, 1.21%)</title><rect x="22.1" y="595.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (86 samples, 1.21%)</title><rect x="22.1" y="579.0" width="14.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (82 samples, 1.15%)</title><rect x="22.1" y="563.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (81 samples, 1.14%)</title><rect x="22.2" y="547.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (81 samples, 1.14%)</title><rect x="22.2" y="531.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (81 samples, 1.14%)</title><rect x="22.2" y="515.0" width="13.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (31 samples, 0.43%)</title><rect x="22.2" y="499.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (11 samples, 0.15%)</title><rect x="22.2" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.15%)</title><rect x="22.2" y="467.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.15%)</title><rect x="22.2" y="451.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.15%)</title><rect x="22.2" y="435.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.13%)</title><rect x="22.2" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.13%)</title><rect x="22.2" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.13%)</title><rect x="22.2" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.13%)</title><rect x="22.2" y="371.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="25.2" y="382.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.13%)</title><rect x="22.2" y="355.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="25.2" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="23.2" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.2" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="23.2" y="323.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.2" y="334.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="23.2" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="23.7" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.7" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="23.7" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 0.28%)</title><rect x="24.1" y="483.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 0.28%)</title><rect x="24.1" y="467.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.28%)</title><rect x="24.1" y="451.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.25%)</title><rect x="24.1" y="435.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.25%)</title><rect x="24.1" y="419.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.25%)</title><rect x="24.1" y="403.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="24.1" y="387.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="27.1" y="398.0"></text>
</g>
<g>
<title>pread64 (17 samples, 0.24%)</title><rect x="24.2" y="371.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="27.2" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.13%)</title><rect x="25.6" y="355.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.6" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.13%)</title><rect x="25.6" y="339.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.6" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.10%)</title><rect x="25.9" y="323.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="28.9" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.10%)</title><rect x="25.9" y="307.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.9" y="318.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="25.9" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="28.9" y="302.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="25.9" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.9" y="286.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="25.9" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.9" y="270.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.07%)</title><rect x="26.2" y="291.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="29.2" y="302.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.06%)</title><rect x="26.4" y="275.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="29.4" y="286.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.06%)</title><rect x="26.4" y="259.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="29.4" y="270.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.06%)</title><rect x="26.4" y="243.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.4" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.04%)</title><rect x="26.5" y="227.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="27.0" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="27.0" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (13 samples, 0.18%)</title><rect x="27.4" y="499.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.18%)</title><rect x="27.4" y="483.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.18%)</title><rect x="27.4" y="467.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.14%)</title><rect x="27.4" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.14%)</title><rect x="27.4" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.14%)</title><rect x="27.4" y="419.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.14%)</title><rect x="27.4" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.4" y="414.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.13%)</title><rect x="27.5" y="387.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.5" y="398.0"></text>
</g>
<g>
<title>pread64 (9 samples, 0.13%)</title><rect x="27.5" y="371.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="30.5" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="28.0" y="355.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="31.0" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="28.0" y="339.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.0" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.04%)</title><rect x="28.5" y="323.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.5" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.04%)</title><rect x="28.5" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="31.5" y="318.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.04%)</title><rect x="28.5" y="291.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.5" y="302.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.03%)</title><rect x="28.5" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.5" y="286.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="28.5" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.5" y="270.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.03%)</title><rect x="28.5" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.5" y="254.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.03%)</title><rect x="28.5" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="29.0" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="29.2" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (37 samples, 0.52%)</title><rect x="29.5" y="499.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (37 samples, 0.52%)</title><rect x="29.5" y="483.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.03%)</title><rect x="29.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.5" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.03%)</title><rect x="29.5" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="29.9" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.9" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="29.9" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.9" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="29.9" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.9" y="446.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="29.9" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.9" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="29.9" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.43%)</title><rect x="30.2" y="467.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (27 samples, 0.38%)</title><rect x="30.4" y="451.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (27 samples, 0.38%)</title><rect x="30.4" y="435.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 0.38%)</title><rect x="30.4" y="419.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.38%)</title><rect x="30.4" y="403.0" width="4.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="33.4" y="414.0"></text>
</g>
<g>
<title>pread64 (27 samples, 0.38%)</title><rect x="30.4" y="387.0" width="4.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="33.4" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.25%)</title><rect x="31.8" y="371.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="34.8" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.25%)</title><rect x="31.8" y="355.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="34.8" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.21%)</title><rect x="32.3" y="339.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.3" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.21%)</title><rect x="32.3" y="323.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.3" y="334.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.18%)</title><rect x="32.7" y="307.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.7" y="318.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.17%)</title><rect x="32.7" y="291.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.7" y="302.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.15%)</title><rect x="32.8" y="275.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="35.8" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.13%)</title><rect x="33.2" y="259.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.2" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.13%)</title><rect x="33.2" y="243.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.2" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="33.5" y="227.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="36.5" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="34.0" y="227.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.0" y="238.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="34.0" y="211.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="34.8" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="35.0" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/905690591.compare (4 samples, 0.06%)</title><rect x="35.6" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.6" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.06%)</title><rect x="35.6" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.6" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (4 samples, 0.06%)</title><rect x="35.6" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.6" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.06%)</title><rect x="35.6" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.03%)</title><rect x="36.3" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.3" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="36.3" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (6,926 samples, 97.13%)</title><rect x="36.6" y="755.0" width="1146.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.6" y="766.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (6,922 samples, 97.07%)</title><rect x="36.8" y="739.0" width="1145.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.8" y="750.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (914 samples, 12.82%)</title><rect x="36.8" y="723.0" width="151.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.8" y="734.0">com/google/common/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (914 samples, 12.82%)</title><rect x="36.8" y="707.0" width="151.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.8" y="718.0">com/google/common/c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (911 samples, 12.78%)</title><rect x="37.3" y="691.0" width="150.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.3" y="702.0">java/util/PriorityQ..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (911 samples, 12.78%)</title><rect x="37.3" y="675.0" width="150.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.3" y="686.0">java/util/PriorityQ..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (908 samples, 12.73%)</title><rect x="37.6" y="659.0" width="150.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.6" y="670.0">java/util/PriorityQ..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (908 samples, 12.73%)</title><rect x="37.6" y="643.0" width="150.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.6" y="654.0">java/util/PriorityQ..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (907 samples, 12.72%)</title><rect x="37.8" y="627.0" width="150.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.8" y="638.0">com/google/common/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (907 samples, 12.72%)</title><rect x="37.8" y="611.0" width="150.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.8" y="622.0">com/google/common/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (881 samples, 12.35%)</title><rect x="38.1" y="595.0" width="145.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.1" y="606.0">com/google/common/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (875 samples, 12.27%)</title><rect x="39.1" y="579.0" width="144.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.1" y="590.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (875 samples, 12.27%)</title><rect x="39.1" y="563.0" width="144.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.1" y="574.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (875 samples, 12.27%)</title><rect x="39.1" y="547.0" width="144.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.1" y="558.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="39.5" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="39.5" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="39.5" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (378 samples, 5.30%)</title><rect x="39.8" y="531.0" width="62.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.8" y="542.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.14%)</title><rect x="40.3" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="40.6" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="41.1" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="41.3" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="41.6" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="41.6" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (3 samples, 0.04%)</title><rect x="41.9" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (3 samples, 0.04%)</title><rect x="41.9" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.03%)</title><rect x="42.1" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (117 samples, 1.64%)</title><rect x="42.4" y="515.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="42.4" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="42.4" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="42.4" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (115 samples, 1.61%)</title><rect x="42.8" y="499.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (113 samples, 1.58%)</title><rect x="43.1" y="483.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.06%)</title><rect x="43.3" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.3" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.06%)</title><rect x="43.3" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.3" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.06%)</title><rect x="43.3" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.3" y="446.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.06%)</title><rect x="43.3" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.06%)</title><rect x="43.3" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (106 samples, 1.49%)</title><rect x="44.1" y="467.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (96 samples, 1.35%)</title><rect x="44.3" y="451.0" width="15.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (96 samples, 1.35%)</title><rect x="44.3" y="435.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (96 samples, 1.35%)</title><rect x="44.3" y="419.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.25%)</title><rect x="44.9" y="403.0" width="14.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="47.9" y="414.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="44.9" y="387.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="47.9" y="398.0"></text>
</g>
<g>
<title>pread64 (86 samples, 1.21%)</title><rect x="45.4" y="387.0" width="14.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="48.4" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.67%)</title><rect x="51.7" y="371.0" width="7.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.66%)</title><rect x="51.9" y="355.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (36 samples, 0.50%)</title><rect x="53.7" y="339.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="56.7" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (36 samples, 0.50%)</title><rect x="53.7" y="323.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.7" y="334.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="53.9" y="307.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="56.9" y="318.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="53.9" y="291.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="56.9" y="302.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="54.0" y="275.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.0" y="286.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.03%)</title><rect x="54.5" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.5" y="318.0"></text>
</g>
<g>
<title>vfs_read (28 samples, 0.39%)</title><rect x="55.0" y="307.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.0" y="318.0"></text>
</g>
<g>
<title>__vfs_read (18 samples, 0.25%)</title><rect x="55.2" y="291.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.2" y="302.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.24%)</title><rect x="55.3" y="275.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.3" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (17 samples, 0.24%)</title><rect x="55.3" y="259.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="58.3" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (16 samples, 0.22%)</title><rect x="55.5" y="243.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="58.5" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.10%)</title><rect x="55.8" y="227.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.8" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="56.5" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.5" y="222.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.07%)</title><rect x="57.2" y="227.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.2" y="238.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.07%)</title><rect x="57.2" y="211.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.2" y="222.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="57.5" y="195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.5" y="206.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="58.2" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.2" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.08%)</title><rect x="58.6" y="291.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.6" y="302.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="58.6" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.6" y="286.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.06%)</title><rect x="59.0" y="275.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.0" y="286.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.04%)</title><rect x="59.6" y="403.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="62.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.13%)</title><rect x="60.1" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (8 samples, 0.11%)</title><rect x="60.3" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (245 samples, 3.44%)</title><rect x="61.8" y="515.0" width="40.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.8" y="526.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (239 samples, 3.35%)</title><rect x="62.8" y="499.0" width="39.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.8" y="510.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (230 samples, 3.23%)</title><rect x="63.6" y="483.0" width="38.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.6" y="494.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (201 samples, 2.82%)</title><rect x="63.6" y="467.0" width="33.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.6" y="478.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (201 samples, 2.82%)</title><rect x="63.6" y="451.0" width="33.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.6" y="462.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (201 samples, 2.82%)</title><rect x="63.6" y="435.0" width="33.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.6" y="446.0">su..</text>
</g>
<g>
<title>[unknown] (195 samples, 2.73%)</title><rect x="64.3" y="419.0" width="32.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="67.3" y="430.0">[u..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="64.3" y="403.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="67.3" y="414.0"></text>
</g>
<g>
<title>pread64 (193 samples, 2.71%)</title><rect x="64.6" y="403.0" width="31.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="67.6" y="414.0">pr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (118 samples, 1.65%)</title><rect x="77.0" y="387.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="80.0" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 1.65%)</title><rect x="77.0" y="371.0" width="19.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="80.0" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (94 samples, 1.32%)</title><rect x="80.8" y="355.0" width="15.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="83.8" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (92 samples, 1.29%)</title><rect x="81.0" y="339.0" width="15.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="84.0" y="350.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="81.0" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.0" y="334.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="81.0" y="307.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.0" y="318.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="81.2" y="291.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="84.2" y="302.0"></text>
</g>
<g>
<title>vfs_read (86 samples, 1.21%)</title><rect x="82.0" y="323.0" width="14.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.0" y="334.0"></text>
</g>
<g>
<title>__vfs_read (56 samples, 0.79%)</title><rect x="82.3" y="307.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.3" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.06%)</title><rect x="82.3" y="291.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="85.3" y="302.0"></text>
</g>
<g>
<title>new_sync_read (52 samples, 0.73%)</title><rect x="83.0" y="291.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.0" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (47 samples, 0.66%)</title><rect x="83.6" y="275.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.6" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (44 samples, 0.62%)</title><rect x="84.1" y="259.0" width="7.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="87.1" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.14%)</title><rect x="86.6" y="243.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.6" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.07%)</title><rect x="87.3" y="227.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.3" y="238.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="88.3" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.3" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (11 samples, 0.15%)</title><rect x="88.6" y="243.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.6" y="254.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.14%)</title><rect x="88.8" y="227.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.8" y="238.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.07%)</title><rect x="89.6" y="211.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.6" y="222.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="90.1" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.1" y="206.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.08%)</title><rect x="90.4" y="243.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="93.4" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.06%)</title><rect x="90.6" y="227.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.6" y="238.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="90.9" y="211.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.9" y="222.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="91.6" y="307.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.6" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (25 samples, 0.35%)</title><rect x="92.1" y="307.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.1" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="92.7" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.7" y="302.0"></text>
</g>
<g>
<title>security_file_permission (17 samples, 0.24%)</title><rect x="93.2" y="291.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.2" y="302.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="93.9" y="275.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="96.9" y="286.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="93.9" y="259.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.9" y="270.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="94.6" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.6" y="286.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.08%)</title><rect x="95.1" y="275.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.1" y="286.0"></text>
</g>
<g>
<title>__inode_security_revalidate (5 samples, 0.07%)</title><rect x="95.2" y="259.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.2" y="270.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.03%)</title><rect x="96.5" y="419.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="99.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (29 samples, 0.41%)</title><rect x="96.9" y="467.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.9" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.10%)</title><rect x="97.4" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="97.7" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (19 samples, 0.27%)</title><rect x="98.5" y="451.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.5" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="100.8" y="435.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="103.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.06%)</title><rect x="101.7" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (129 samples, 1.81%)</title><rect x="102.3" y="531.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.3" y="542.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.10%)</title><rect x="102.3" y="515.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="102.5" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="102.8" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="103.0" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="103.0" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="103.0" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (122 samples, 1.71%)</title><rect x="103.5" y="515.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (119 samples, 1.67%)</title><rect x="104.0" y="499.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.08%)</title><rect x="104.2" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.2" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.08%)</title><rect x="104.2" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.2" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="104.8" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.8" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="104.8" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="104.8" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.04%)</title><rect x="105.1" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.1" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.04%)</title><rect x="105.1" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.1" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="105.1" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.1" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="105.1" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="105.1" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (103 samples, 1.44%)</title><rect x="105.6" y="483.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (93 samples, 1.30%)</title><rect x="106.0" y="467.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (93 samples, 1.30%)</title><rect x="106.0" y="451.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (93 samples, 1.30%)</title><rect x="106.0" y="435.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.26%)</title><rect x="106.3" y="419.0" width="14.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="109.3" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="106.3" y="403.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="109.3" y="414.0"></text>
</g>
<g>
<title>pread64 (87 samples, 1.22%)</title><rect x="106.8" y="403.0" width="14.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="109.8" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.81%)</title><rect x="111.6" y="387.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="114.6" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.80%)</title><rect x="111.8" y="371.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="114.8" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (44 samples, 0.62%)</title><rect x="113.9" y="355.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="116.9" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (44 samples, 0.62%)</title><rect x="113.9" y="339.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.9" y="350.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.10%)</title><rect x="113.9" y="323.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.9" y="334.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.10%)</title><rect x="113.9" y="307.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.9" y="318.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="114.1" y="291.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="117.1" y="302.0"></text>
</g>
<g>
<title>vfs_read (36 samples, 0.50%)</title><rect x="115.2" y="323.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="118.2" y="334.0"></text>
</g>
<g>
<title>__vfs_read (23 samples, 0.32%)</title><rect x="115.4" y="307.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.4" y="318.0"></text>
</g>
<g>
<title>new_sync_read (23 samples, 0.32%)</title><rect x="115.4" y="291.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.4" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (18 samples, 0.25%)</title><rect x="115.9" y="275.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.9" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (17 samples, 0.24%)</title><rect x="116.1" y="259.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="119.1" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.08%)</title><rect x="116.4" y="243.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="119.4" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.06%)</title><rect x="116.6" y="227.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.6" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.10%)</title><rect x="117.4" y="243.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.4" y="254.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.10%)</title><rect x="117.4" y="227.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.4" y="238.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="118.1" y="211.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.1" y="222.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="118.6" y="243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="121.6" y="254.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="118.9" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.9" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (12 samples, 0.17%)</title><rect x="119.2" y="307.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.2" y="318.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.15%)</title><rect x="119.4" y="291.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.4" y="302.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="119.5" y="275.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.5" y="286.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="119.7" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.7" y="270.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.03%)</title><rect x="119.7" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.7" y="254.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.08%)</title><rect x="120.2" y="275.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.2" y="286.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.04%)</title><rect x="120.7" y="259.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.11%)</title><rect x="121.4" y="467.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.4" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="121.7" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.7" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="121.7" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.7" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="121.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="122.2" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.07%)</title><rect x="122.7" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="123.2" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (364 samples, 5.10%)</title><rect x="123.7" y="531.0" width="60.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.7" y="542.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (361 samples, 5.06%)</title><rect x="124.2" y="515.0" width="59.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.2" y="526.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (16 samples, 0.22%)</title><rect x="124.7" y="499.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.7" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (16 samples, 0.22%)</title><rect x="124.7" y="483.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.7" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.10%)</title><rect x="126.2" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.2" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.10%)</title><rect x="126.2" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.10%)</title><rect x="126.2" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.07%)</title><rect x="127.3" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.3" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.06%)</title><rect x="127.5" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.5" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="127.7" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.7" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="127.7" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="127.7" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (323 samples, 4.53%)</title><rect x="128.1" y="499.0" width="53.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.1" y="510.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="128.3" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (286 samples, 4.01%)</title><rect x="128.6" y="483.0" width="47.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.6" y="494.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (286 samples, 4.01%)</title><rect x="128.6" y="467.0" width="47.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.6" y="478.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (286 samples, 4.01%)</title><rect x="128.6" y="451.0" width="47.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.6" y="462.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.03%)</title><rect x="130.5" y="435.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="133.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (273 samples, 3.83%)</title><rect x="130.8" y="435.0" width="45.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="133.8" y="446.0">[unk..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.06%)</title><rect x="130.8" y="419.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="133.8" y="430.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="131.5" y="419.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="134.5" y="430.0"></text>
</g>
<g>
<title>pread64 (267 samples, 3.74%)</title><rect x="131.8" y="419.0" width="44.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="134.8" y="430.0">prea..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (167 samples, 2.34%)</title><rect x="148.3" y="403.0" width="27.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.3" y="414.0">e..</text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="148.3" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="151.3" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (165 samples, 2.31%)</title><rect x="148.7" y="387.0" width="27.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="151.7" y="398.0">d..</text>
</g>
<g>
<title>__x64_sys_pread64 (130 samples, 1.82%)</title><rect x="154.5" y="371.0" width="21.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.5" y="382.0">_..</text>
</g>
<g>
<title>ksys_pread64 (130 samples, 1.82%)</title><rect x="154.5" y="355.0" width="21.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="157.5" y="366.0">k..</text>
</g>
<g>
<title>__fdget (13 samples, 0.18%)</title><rect x="154.6" y="339.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="157.6" y="350.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.18%)</title><rect x="154.6" y="323.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.6" y="334.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.18%)</title><rect x="154.6" y="307.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.6" y="318.0"></text>
</g>
<g>
<title>vfs_read (114 samples, 1.60%)</title><rect x="157.1" y="339.0" width="18.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.1" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="158.4" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="161.4" y="334.0"></text>
</g>
<g>
<title>__vfs_read (69 samples, 0.97%)</title><rect x="158.8" y="323.0" width="11.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="161.8" y="334.0"></text>
</g>
<g>
<title>new_sync_read (67 samples, 0.94%)</title><rect x="159.1" y="307.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="162.1" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (62 samples, 0.87%)</title><rect x="159.9" y="291.0" width="10.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="162.9" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (53 samples, 0.74%)</title><rect x="161.4" y="275.0" width="8.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.4" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (15 samples, 0.21%)</title><rect x="163.7" y="259.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.7" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.08%)</title><rect x="164.7" y="243.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.7" y="254.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="165.7" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="168.7" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (15 samples, 0.21%)</title><rect x="166.4" y="259.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="169.4" y="270.0"></text>
</g>
<g>
<title>find_get_entry (15 samples, 0.21%)</title><rect x="166.4" y="243.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="169.4" y="254.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.11%)</title><rect x="167.4" y="227.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="170.4" y="238.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.04%)</title><rect x="168.2" y="211.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="171.2" y="222.0"></text>
</g>
<g>
<title>touch_atime (8 samples, 0.11%)</title><rect x="168.9" y="259.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.9" y="270.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.07%)</title><rect x="169.2" y="243.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.2" y="254.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="169.5" y="227.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.5" y="238.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="169.5" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.5" y="222.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.10%)</title><rect x="170.2" y="323.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.2" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (28 samples, 0.39%)</title><rect x="171.3" y="323.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.3" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="171.3" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.3" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="171.8" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.8" y="318.0"></text>
</g>
<g>
<title>security_file_permission (23 samples, 0.32%)</title><rect x="172.2" y="307.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.2" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.08%)</title><rect x="172.8" y="291.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="175.8" y="302.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.08%)</title><rect x="172.8" y="275.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="175.8" y="286.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="173.8" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="176.8" y="302.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="174.2" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="177.2" y="302.0"></text>
</g>
<g>
<title>selinux_file_permission (8 samples, 0.11%)</title><rect x="174.6" y="291.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.6" y="302.0"></text>
</g>
<g>
<title>__inode_security_revalidate (4 samples, 0.06%)</title><rect x="174.8" y="275.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="177.8" y="286.0"></text>
</g>
<g>
<title>avc_policy_seqno (2 samples, 0.03%)</title><rect x="175.6" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="178.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (34 samples, 0.48%)</title><rect x="176.0" y="483.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.0" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.11%)</title><rect x="176.5" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.5" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.11%)</title><rect x="176.5" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="177.5" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (23 samples, 0.32%)</title><rect x="177.8" y="467.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.8" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="181.1" y="451.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="184.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.14%)</title><rect x="181.6" y="499.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.04%)</title><rect x="182.8" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.06%)</title><rect x="183.3" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.3" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/905690591.compare (24 samples, 0.34%)</title><rect x="183.9" y="595.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.34%)</title><rect x="183.9" y="579.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (23 samples, 0.32%)</title><rect x="184.1" y="563.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.1" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (22 samples, 0.31%)</title><rect x="184.2" y="547.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.10%)</title><rect x="184.6" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.10%)</title><rect x="184.6" y="515.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.6" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.08%)</title><rect x="184.6" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="184.7" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.7" y="494.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="185.1" y="483.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="188.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$116/492989515.apply (11 samples, 0.15%)</title><rect x="185.7" y="531.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (9 samples, 0.13%)</title><rect x="186.1" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.13%)</title><rect x="186.1" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.1" y="510.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="186.4" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="189.4" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="186.4" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.4" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="186.4" y="451.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="189.4" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="186.4" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="189.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.07%)</title><rect x="186.7" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="186.7" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="186.7" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="186.7" y="435.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (42 samples, 0.59%)</title><rect x="188.1" y="723.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (42 samples, 0.59%)</title><rect x="188.1" y="707.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (42 samples, 0.59%)</title><rect x="188.1" y="691.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.1" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="188.1" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="188.1" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.04%)</title><rect x="188.1" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.04%)</title><rect x="188.1" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.04%)</title><rect x="188.1" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$118/905690591.compare (3 samples, 0.04%)</title><rect x="188.1" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.1" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.04%)</title><rect x="188.1" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.1" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (3 samples, 0.04%)</title><rect x="188.1" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.1" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.04%)</title><rect x="188.1" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$116/492989515.apply (3 samples, 0.04%)</title><rect x="188.1" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (3 samples, 0.04%)</title><rect x="188.1" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="188.1" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="188.1" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="188.1" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="188.1" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="188.2" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="188.2" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="188.2" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.2" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="188.2" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.2" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (39 samples, 0.55%)</title><rect x="188.5" y="675.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (39 samples, 0.55%)</title><rect x="188.5" y="659.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (39 samples, 0.55%)</title><rect x="188.5" y="643.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (39 samples, 0.55%)</title><rect x="188.5" y="627.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.55%)</title><rect x="188.5" y="611.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.55%)</title><rect x="188.5" y="595.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (38 samples, 0.53%)</title><rect x="188.5" y="579.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (38 samples, 0.53%)</title><rect x="188.5" y="563.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (38 samples, 0.53%)</title><rect x="188.5" y="547.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (38 samples, 0.53%)</title><rect x="188.5" y="531.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (18 samples, 0.25%)</title><rect x="188.5" y="515.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (5 samples, 0.07%)</title><rect x="188.5" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.07%)</title><rect x="188.5" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.07%)</title><rect x="188.5" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.06%)</title><rect x="188.7" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.06%)</title><rect x="188.7" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.06%)</title><rect x="188.7" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.06%)</title><rect x="188.7" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="188.7" y="387.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="191.7" y="398.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.06%)</title><rect x="188.7" y="371.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="191.7" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="188.7" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.7" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="188.7" y="339.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="191.7" y="350.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.04%)</title><rect x="188.9" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.9" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.04%)</title><rect x="188.9" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="191.9" y="318.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="189.0" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.0" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="189.0" y="275.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.0" y="286.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="189.0" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.18%)</title><rect x="189.4" y="499.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.18%)</title><rect x="189.4" y="483.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.17%)</title><rect x="189.5" y="467.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.15%)</title><rect x="189.5" y="451.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.15%)</title><rect x="189.5" y="435.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.15%)</title><rect x="189.5" y="419.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="189.5" y="403.0" width="1.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="192.5" y="414.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.15%)</title><rect x="189.5" y="387.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="192.5" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.11%)</title><rect x="190.0" y="371.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.0" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.10%)</title><rect x="190.2" y="355.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="193.2" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.08%)</title><rect x="190.4" y="339.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="193.4" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.08%)</title><rect x="190.4" y="323.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="193.4" y="334.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.08%)</title><rect x="190.4" y="307.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.4" y="318.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.06%)</title><rect x="190.4" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.4" y="302.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="190.5" y="275.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.5" y="286.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.04%)</title><rect x="190.5" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.5" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.04%)</title><rect x="190.5" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="193.5" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="191.0" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.0" y="302.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="191.0" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (6 samples, 0.08%)</title><rect x="191.5" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.08%)</title><rect x="191.5" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.08%)</title><rect x="191.5" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.08%)</title><rect x="191.5" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.08%)</title><rect x="191.5" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.08%)</title><rect x="191.5" y="435.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.08%)</title><rect x="191.5" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="191.5" y="403.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="194.5" y="414.0"></text>
</g>
<g>
<title>pread64 (6 samples, 0.08%)</title><rect x="191.5" y="387.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="194.5" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="191.9" y="371.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="194.9" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="191.9" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="194.9" y="366.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.04%)</title><rect x="192.0" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="195.0" y="350.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.04%)</title><rect x="192.0" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="195.0" y="334.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="192.0" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.0" y="318.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="192.0" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="195.0" y="302.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="192.0" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.20%)</title><rect x="192.5" y="515.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.20%)</title><rect x="192.5" y="499.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.17%)</title><rect x="192.7" y="483.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.17%)</title><rect x="192.7" y="467.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.17%)</title><rect x="192.7" y="451.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.17%)</title><rect x="192.7" y="435.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.17%)</title><rect x="192.7" y="419.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>pread64 (11 samples, 0.15%)</title><rect x="192.8" y="403.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="195.8" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.11%)</title><rect x="193.3" y="387.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.3" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.11%)</title><rect x="193.3" y="371.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="196.3" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.10%)</title><rect x="193.5" y="355.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="196.5" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.10%)</title><rect x="193.5" y="339.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="196.5" y="350.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.10%)</title><rect x="193.5" y="323.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.5" y="334.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.06%)</title><rect x="193.5" y="307.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.5" y="318.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="193.7" y="291.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="196.7" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.03%)</title><rect x="193.8" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="196.8" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.03%)</title><rect x="193.8" y="259.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="196.8" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.04%)</title><rect x="194.2" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.2" y="318.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="194.2" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="197.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (5,966 samples, 83.66%)</title><rect x="195.0" y="723.0" width="987.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.0" y="734.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList</text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,966 samples, 83.66%)</title><rect x="195.0" y="707.0" width="987.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.0" y="718.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (4 samples, 0.06%)</title><rect x="195.0" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="195.0" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="195.0" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (3 samples, 0.04%)</title><rect x="195.0" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$128/327364468.accept (5,961 samples, 83.59%)</title><rect x="195.8" y="691.0" width="986.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.8" y="702.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$128/327364468.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (5,960 samples, 83.58%)</title><rect x="196.0" y="675.0" width="986.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.0" y="686.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (5,960 samples, 83.58%)</title><rect x="196.0" y="659.0" width="986.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.0" y="670.0">ru/mail/polis/dao/zvladn7/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (5,958 samples, 83.55%)</title><rect x="196.3" y="643.0" width="985.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.3" y="654.0">ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (5,957 samples, 83.54%)</title><rect x="196.5" y="627.0" width="985.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.5" y="638.0">ru/mail/polis/dao/zvladn7/SSTable.getElementPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (45 samples, 0.63%)</title><rect x="197.0" y="611.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.10%)</title><rect x="199.3" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.3" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.08%)</title><rect x="199.5" y="579.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.5" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (23 samples, 0.32%)</title><rect x="200.5" y="595.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.5" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (9 samples, 0.13%)</title><rect x="202.8" y="579.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="205.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (5,909 samples, 82.86%)</title><rect x="204.4" y="611.0" width="977.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.4" y="622.0">ru/mail/polis/dao/zvladn7/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (114 samples, 1.60%)</title><rect x="204.6" y="595.0" width="18.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.6" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="204.9" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="207.9" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="205.1" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="208.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="205.1" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="208.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="205.1" y="531.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="208.1" y="542.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="205.1" y="515.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="208.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (109 samples, 1.53%)</title><rect x="205.4" y="579.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.4" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="207.6" y="563.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="210.6" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="207.6" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="210.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (94 samples, 1.32%)</title><rect x="207.9" y="563.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (79 samples, 1.11%)</title><rect x="210.4" y="547.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (34 samples, 0.48%)</title><rect x="214.9" y="531.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (25 samples, 0.35%)</title><rect x="216.3" y="515.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.3" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (25 samples, 0.35%)</title><rect x="216.3" y="499.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (18 samples, 0.25%)</title><rect x="220.5" y="531.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (14 samples, 0.20%)</title><rect x="221.1" y="515.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (3 samples, 0.04%)</title><rect x="223.5" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.5" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (3 samples, 0.04%)</title><rect x="223.5" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (41 samples, 0.57%)</title><rect x="224.0" y="595.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (19 samples, 0.27%)</title><rect x="225.4" y="579.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (13 samples, 0.18%)</title><rect x="228.6" y="579.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.6" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="230.7" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (2,130 samples, 29.87%)</title><rect x="231.1" y="595.0" width="352.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.1" y="606.0">ru/mail/polis/dao/zvladn7/SSTable.getOffset</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="231.1" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="231.1" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,125 samples, 29.80%)</title><rect x="231.9" y="579.0" width="351.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.9" y="590.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,093 samples, 29.35%)</title><rect x="237.2" y="563.0" width="346.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.2" y="574.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (5 samples, 0.07%)</title><rect x="240.8" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (81 samples, 1.14%)</title><rect x="241.7" y="547.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.7" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (81 samples, 1.14%)</title><rect x="241.7" y="531.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (12 samples, 0.17%)</title><rect x="247.0" y="515.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.0" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (8 samples, 0.11%)</title><rect x="248.9" y="515.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="249.9" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.9" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (29 samples, 0.41%)</title><rect x="250.3" y="515.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.3" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (26 samples, 0.36%)</title><rect x="250.6" y="499.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (26 samples, 0.36%)</title><rect x="250.6" y="483.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (7 samples, 0.10%)</title><rect x="255.1" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.1" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.10%)</title><rect x="255.1" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.1" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.10%)</title><rect x="255.1" y="515.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.1" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.10%)</title><rect x="255.1" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.10%)</title><rect x="255.1" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,856 samples, 26.03%)</title><rect x="256.2" y="547.0" width="307.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.2" y="558.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (67 samples, 0.94%)</title><rect x="258.4" y="531.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="258.5" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="258.5" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (63 samples, 0.88%)</title><rect x="258.9" y="515.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.9" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="267.0" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.11%)</title><rect x="267.5" y="499.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.03%)</title><rect x="269.0" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.03%)</title><rect x="269.0" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="269.5" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,580 samples, 22.16%)</title><rect x="269.8" y="531.0" width="261.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.8" y="542.0">sun/nio/ch/IOUtil.readIntoNativeBuf..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (30 samples, 0.42%)</title><rect x="270.0" y="515.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,549 samples, 21.72%)</title><rect x="274.9" y="515.0" width="256.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.9" y="526.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,548 samples, 21.71%)</title><rect x="275.1" y="499.0" width="256.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.1" y="510.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (8 samples, 0.11%)</title><rect x="280.6" y="483.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="283.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (1,499 samples, 21.02%)</title><rect x="281.9" y="483.0" width="248.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="284.9" y="494.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.14%)</title><rect x="281.9" y="467.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="284.9" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (14 samples, 0.20%)</title><rect x="283.5" y="467.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="286.5" y="478.0"></text>
</g>
<g>
<title>pread64 (1,475 samples, 20.68%)</title><rect x="285.8" y="467.0" width="244.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="288.8" y="478.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (902 samples, 12.65%)</title><rect x="380.7" y="451.0" width="149.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.7" y="462.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.17%)</title><rect x="380.7" y="435.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (890 samples, 12.48%)</title><rect x="382.6" y="435.0" width="147.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.6" y="446.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (702 samples, 9.84%)</title><rect x="413.8" y="419.0" width="116.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="416.8" y="430.0">__x64_sys_prea..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="413.8" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="416.8" y="414.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="414.1" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.1" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (698 samples, 9.79%)</title><rect x="414.4" y="403.0" width="115.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="417.4" y="414.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (54 samples, 0.76%)</title><rect x="416.9" y="387.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.9" y="398.0"></text>
</g>
<g>
<title>__fget_light (53 samples, 0.74%)</title><rect x="417.1" y="371.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.1" y="382.0"></text>
</g>
<g>
<title>__fget (43 samples, 0.60%)</title><rect x="418.7" y="355.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.7" y="366.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="425.8" y="387.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.8" y="398.0"></text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.11%)</title><rect x="426.8" y="387.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="429.8" y="398.0"></text>
</g>
<g>
<title>fput (17 samples, 0.24%)</title><rect x="428.3" y="387.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="431.3" y="398.0"></text>
</g>
<g>
<title>fput_many (17 samples, 0.24%)</title><rect x="428.3" y="371.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.3" y="382.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="431.3" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.3" y="398.0"></text>
</g>
<g>
<title>vfs_read (593 samples, 8.32%)</title><rect x="431.8" y="387.0" width="98.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="434.8" y="398.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.06%)</title><rect x="435.4" y="371.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (391 samples, 5.48%)</title><rect x="436.1" y="371.0" width="64.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.1" y="382.0">__vfs_r..</text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.20%)</title><rect x="436.8" y="355.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.8" y="366.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.04%)</title><rect x="439.1" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="442.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (370 samples, 5.19%)</title><rect x="439.6" y="355.0" width="61.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.6" y="366.0">new_sy..</text>
</g>
<g>
<title>ext4_file_read_iter (339 samples, 4.75%)</title><rect x="443.7" y="339.0" width="56.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.7" y="350.0">ext4_f..</text>
</g>
<g>
<title>generic_file_read_iter (317 samples, 4.45%)</title><rect x="446.5" y="323.0" width="52.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="449.5" y="334.0">gener..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.07%)</title><rect x="458.3" y="307.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="461.3" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="458.6" y="291.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="461.6" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.08%)</title><rect x="459.1" y="307.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="462.1" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (76 samples, 1.07%)</title><rect x="460.1" y="307.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="463.1" y="318.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.04%)</title><rect x="465.1" y="291.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.1" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="465.2" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.2" y="286.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.08%)</title><rect x="465.6" y="291.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.6" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (30 samples, 0.42%)</title><rect x="466.5" y="291.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.5" y="302.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.08%)</title><rect x="471.5" y="291.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.5" y="302.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.07%)</title><rect x="472.8" y="307.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.8" y="318.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.08%)</title><rect x="473.7" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="476.7" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (115 samples, 1.61%)</title><rect x="474.7" y="307.0" width="19.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.7" y="318.0"></text>
</g>
<g>
<title>find_get_entry (105 samples, 1.47%)</title><rect x="475.5" y="291.0" width="17.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.5" y="302.0"></text>
</g>
<g>
<title>xas_load (44 samples, 0.62%)</title><rect x="485.4" y="275.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.4" y="286.0"></text>
</g>
<g>
<title>xas_start (12 samples, 0.17%)</title><rect x="490.7" y="259.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="493.7" y="270.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.07%)</title><rect x="492.9" y="291.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.9" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="493.7" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.7" y="318.0"></text>
</g>
<g>
<title>touch_atime (30 samples, 0.42%)</title><rect x="494.0" y="307.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.0" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (27 samples, 0.38%)</title><rect x="494.3" y="291.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="497.3" y="302.0"></text>
</g>
<g>
<title>current_time (14 samples, 0.20%)</title><rect x="496.0" y="275.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.0" y="286.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (8 samples, 0.11%)</title><rect x="496.7" y="259.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="499.7" y="270.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.03%)</title><rect x="498.0" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="501.0" y="270.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.03%)</title><rect x="498.5" y="275.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="501.5" y="286.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.04%)</title><rect x="499.0" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.0" y="334.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.08%)</title><rect x="499.8" y="339.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="502.8" y="350.0"></text>
</g>
<g>
<title>fsnotify (16 samples, 0.22%)</title><rect x="500.8" y="371.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.8" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (159 samples, 2.23%)</title><rect x="503.6" y="371.0" width="26.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="506.6" y="382.0">r..</text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.11%)</title><rect x="504.3" y="355.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.3" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (24 samples, 0.34%)</title><rect x="505.8" y="355.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.8" y="366.0"></text>
</g>
<g>
<title>security_file_permission (111 samples, 1.56%)</title><rect x="509.7" y="355.0" width="18.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.7" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.06%)</title><rect x="513.5" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="516.5" y="350.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.04%)</title><rect x="514.2" y="339.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.2" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (32 samples, 0.45%)</title><rect x="514.7" y="339.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.7" y="350.0"></text>
</g>
<g>
<title>common_file_perm (31 samples, 0.43%)</title><rect x="514.9" y="323.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.9" y="334.0"></text>
</g>
<g>
<title>aa_file_perm (7 samples, 0.10%)</title><rect x="518.8" y="307.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.8" y="318.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="520.0" y="339.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="523.0" y="350.0"></text>
</g>
<g>
<title>fsnotify (16 samples, 0.22%)</title><rect x="520.7" y="339.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.7" y="350.0"></text>
</g>
<g>
<title>selinux_file_permission (29 samples, 0.41%)</title><rect x="523.3" y="339.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.3" y="350.0"></text>
</g>
<g>
<title>__inode_security_revalidate (14 samples, 0.20%)</title><rect x="525.6" y="323.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="528.6" y="334.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.07%)</title><rect x="526.9" y="307.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="529.9" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="527.4" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="530.4" y="302.0"></text>
</g>
<g>
<title>selinux_file_permission (11 samples, 0.15%)</title><rect x="528.1" y="355.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="531.1" y="366.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.08%)</title><rect x="529.9" y="483.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="532.9" y="494.0"></text>
</g>
<g>
<title>pread64 (2 samples, 0.03%)</title><rect x="530.9" y="483.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="533.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (187 samples, 2.62%)</title><rect x="531.2" y="531.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.2" y="542.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (112 samples, 1.57%)</title><rect x="532.6" y="515.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (10 samples, 0.14%)</title><rect x="534.1" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.06%)</title><rect x="535.1" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (92 samples, 1.29%)</title><rect x="535.9" y="499.0" width="15.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.08%)</title><rect x="549.9" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (65 samples, 0.91%)</title><rect x="551.1" y="515.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.1" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.08%)</title><rect x="560.2" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.2" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.08%)</title><rect x="560.2" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.08%)</title><rect x="560.2" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="560.4" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (3 samples, 0.04%)</title><rect x="560.7" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.7" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (3 samples, 0.04%)</title><rect x="561.2" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.2" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.03%)</title><rect x="561.4" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.03%)</title><rect x="561.4" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (2 samples, 0.03%)</title><rect x="561.4" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="561.9" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.10%)</title><rect x="562.2" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="562.2" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (5 samples, 0.07%)</title><rect x="562.5" y="515.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (108 samples, 1.51%)</title><rect x="563.3" y="547.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.3" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="576.3" y="531.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="579.3" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="576.3" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="579.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="576.3" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="579.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.06%)</title><rect x="576.8" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (23 samples, 0.32%)</title><rect x="577.4" y="531.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.4" y="542.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (3 samples, 0.04%)</title><rect x="579.9" y="515.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="582.9" y="526.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (5 samples, 0.07%)</title><rect x="580.4" y="515.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="583.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (14 samples, 0.20%)</title><rect x="581.2" y="547.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="583.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,616 samples, 50.71%)</title><rect x="583.9" y="595.0" width="598.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.9" y="606.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (5 samples, 0.07%)</title><rect x="586.0" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,598 samples, 50.46%)</title><rect x="586.8" y="579.0" width="595.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.8" y="590.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (58 samples, 0.81%)</title><rect x="596.9" y="563.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.9" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (39 samples, 0.55%)</title><rect x="600.1" y="547.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.1" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="606.2" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (100 samples, 1.40%)</title><rect x="606.5" y="563.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.5" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (100 samples, 1.40%)</title><rect x="606.5" y="547.0" width="16.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.5" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (43 samples, 0.60%)</title><rect x="616.0" y="531.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.0" y="542.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (42 samples, 0.59%)</title><rect x="616.1" y="515.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (41 samples, 0.57%)</title><rect x="616.3" y="499.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (6 samples, 0.08%)</title><rect x="623.1" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,257 samples, 45.67%)</title><rect x="624.1" y="563.0" width="538.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.1" y="574.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.06%)</title><rect x="624.7" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (80 samples, 1.12%)</title><rect x="625.4" y="547.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.07%)</title><rect x="626.7" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.7" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="627.1" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (67 samples, 0.94%)</title><rect x="627.6" y="531.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (14 samples, 0.20%)</title><rect x="628.7" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.08%)</title><rect x="630.0" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (4 samples, 0.06%)</title><rect x="630.4" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.4" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.06%)</title><rect x="631.0" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="631.2" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.2" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="631.2" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.2" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="631.7" y="515.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="634.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (37 samples, 0.52%)</title><rect x="632.4" y="515.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (37 samples, 0.52%)</title><rect x="632.4" y="499.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (34 samples, 0.48%)</title><rect x="632.8" y="483.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (19 samples, 0.27%)</title><rect x="635.3" y="467.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (4 samples, 0.06%)</title><rect x="637.8" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3,095 samples, 43.40%)</title><rect x="638.8" y="547.0" width="512.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.8" y="558.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3,095 samples, 43.40%)</title><rect x="638.8" y="531.0" width="512.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.8" y="542.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3,094 samples, 43.39%)</title><rect x="639.0" y="515.0" width="511.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.0" y="526.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.10%)</title><rect x="649.9" y="499.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="652.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (3,007 samples, 42.17%)</title><rect x="651.0" y="499.0" width="497.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="654.0" y="510.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (35 samples, 0.49%)</title><rect x="651.0" y="483.0" width="5.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="654.0" y="494.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (20 samples, 0.28%)</title><rect x="656.8" y="483.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="659.8" y="494.0"></text>
</g>
<g>
<title>pread64 (2,952 samples, 41.40%)</title><rect x="660.2" y="483.0" width="488.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="663.2" y="494.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,848 samples, 25.92%)</title><rect x="842.8" y="467.0" width="305.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="845.8" y="478.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (34 samples, 0.48%)</title><rect x="842.8" y="451.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="845.8" y="462.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="848.5" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="851.5" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1,812 samples, 25.41%)</title><rect x="848.8" y="451.0" width="299.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="851.8" y="462.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,419 samples, 19.90%)</title><rect x="912.7" y="435.0" width="234.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.7" y="446.0">__x64_sys_pread64</text>
</g>
<g>
<title>fput (6 samples, 0.08%)</title><rect x="913.0" y="419.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.0" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (1,409 samples, 19.76%)</title><rect x="914.0" y="419.0" width="233.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="917.0" y="430.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (119 samples, 1.67%)</title><rect x="917.8" y="403.0" width="19.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="920.8" y="414.0"></text>
</g>
<g>
<title>__fget_light (118 samples, 1.65%)</title><rect x="918.0" y="387.0" width="19.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="921.0" y="398.0"></text>
</g>
<g>
<title>__fget (102 samples, 1.43%)</title><rect x="920.6" y="371.0" width="16.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="923.6" y="382.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.20%)</title><rect x="937.5" y="403.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.5" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (14 samples, 0.20%)</title><rect x="939.8" y="403.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.8" y="414.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.14%)</title><rect x="942.1" y="403.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.1" y="414.0"></text>
</g>
<g>
<title>fput (31 samples, 0.43%)</title><rect x="943.8" y="403.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.8" y="414.0"></text>
</g>
<g>
<title>fput_many (31 samples, 0.43%)</title><rect x="943.8" y="387.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="946.8" y="398.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.06%)</title><rect x="948.9" y="403.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.9" y="414.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.07%)</title><rect x="949.6" y="403.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="952.6" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="950.4" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="953.4" y="414.0"></text>
</g>
<g>
<title>vfs_read (1,187 samples, 16.65%)</title><rect x="950.7" y="403.0" width="196.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.7" y="414.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (20 samples, 0.28%)</title><rect x="958.5" y="387.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="961.5" y="398.0"></text>
</g>
<g>
<title>__vfs_read (743 samples, 10.42%)</title><rect x="961.8" y="387.0" width="123.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.8" y="398.0">__vfs_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="962.5" y="371.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="965.5" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (28 samples, 0.39%)</title><rect x="963.5" y="371.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.5" y="382.0"></text>
</g>
<g>
<title>new_sync_read (704 samples, 9.87%)</title><rect x="968.3" y="371.0" width="116.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="971.3" y="382.0">new_sync_read</text>
</g>
<g>
<title>ext4_file_read_iter (640 samples, 8.97%)</title><rect x="977.0" y="355.0" width="105.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="980.0" y="366.0">ext4_file_rea..</text>
</g>
<g>
<title>_cond_resched (7 samples, 0.10%)</title><rect x="984.0" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.0" y="350.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.06%)</title><rect x="985.1" y="339.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="988.1" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (582 samples, 8.16%)</title><rect x="985.8" y="339.0" width="96.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="988.8" y="350.0">generic_fil..</text>
</g>
<g>
<title>_cond_resched (8 samples, 0.11%)</title><rect x="1004.2" y="323.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1007.2" y="334.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1005.2" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1008.2" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (10 samples, 0.14%)</title><rect x="1005.5" y="323.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1008.5" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (164 samples, 2.30%)</title><rect x="1007.2" y="323.0" width="27.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.2" y="334.0">c..</text>
</g>
<g>
<title>_cond_resched (6 samples, 0.08%)</title><rect x="1014.9" y="307.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.9" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="1015.4" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1018.4" y="302.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (16 samples, 0.22%)</title><rect x="1015.9" y="307.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.9" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (76 samples, 1.07%)</title><rect x="1018.6" y="307.0" width="12.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1021.6" y="318.0"></text>
</g>
<g>
<title>copyout (12 samples, 0.17%)</title><rect x="1031.1" y="307.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1034.1" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.10%)</title><rect x="1033.1" y="307.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1036.1" y="318.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.08%)</title><rect x="1034.3" y="323.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.3" y="334.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.15%)</title><rect x="1035.3" y="323.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.3" y="334.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.08%)</title><rect x="1037.1" y="323.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1040.1" y="334.0"></text>
</g>
<g>
<title>pagecache_get_page (198 samples, 2.78%)</title><rect x="1038.1" y="323.0" width="32.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1041.1" y="334.0">pa..</text>
</g>
<g>
<title>find_get_entry (184 samples, 2.58%)</title><rect x="1040.1" y="307.0" width="30.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1043.1" y="318.0">fi..</text>
</g>
<g>
<title>xas_load (85 samples, 1.19%)</title><rect x="1056.3" y="291.0" width="14.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.3" y="302.0"></text>
</g>
<g>
<title>xas_start (21 samples, 0.29%)</title><rect x="1066.9" y="275.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1069.9" y="286.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="1070.5" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1073.5" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1070.9" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1073.9" y="334.0"></text>
</g>
<g>
<title>touch_atime (66 samples, 0.93%)</title><rect x="1071.2" y="323.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1074.2" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (46 samples, 0.65%)</title><rect x="1074.3" y="307.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1077.3" y="318.0"></text>
</g>
<g>
<title>current_time (27 samples, 0.38%)</title><rect x="1076.8" y="291.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1079.8" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (16 samples, 0.22%)</title><rect x="1077.5" y="275.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1080.5" y="286.0"></text>
</g>
<g>
<title>timespec64_trunc (7 samples, 0.10%)</title><rect x="1080.1" y="275.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1083.1" y="286.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.04%)</title><rect x="1081.3" y="291.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1084.3" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="1082.1" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1085.1" y="350.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="1082.4" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1085.4" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.06%)</title><rect x="1082.9" y="355.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1085.9" y="366.0"></text>
</g>
<g>
<title>iov_iter_init (7 samples, 0.10%)</title><rect x="1083.6" y="355.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1086.6" y="366.0"></text>
</g>
<g>
<title>fsnotify (44 samples, 0.62%)</title><rect x="1084.8" y="387.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1087.8" y="398.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="1092.0" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1095.0" y="398.0"></text>
</g>
<g>
<title>rw_verify_area (330 samples, 4.63%)</title><rect x="1092.4" y="387.0" width="54.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1095.4" y="398.0">rw_ve..</text>
</g>
<g>
<title>__fsnotify_parent (21 samples, 0.29%)</title><rect x="1093.0" y="371.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1096.0" y="382.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="1096.5" y="371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1099.5" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (21 samples, 0.29%)</title><rect x="1097.0" y="371.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1100.0" y="382.0"></text>
</g>
<g>
<title>security_file_permission (264 samples, 3.70%)</title><rect x="1100.6" y="371.0" width="43.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1103.6" y="382.0">secu..</text>
</g>
<g>
<title>__fsnotify_parent (16 samples, 0.22%)</title><rect x="1108.1" y="355.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.1" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (70 samples, 0.98%)</title><rect x="1110.9" y="355.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.9" y="366.0"></text>
</g>
<g>
<title>common_file_perm (70 samples, 0.98%)</title><rect x="1110.9" y="339.0" width="11.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.9" y="350.0"></text>
</g>
<g>
<title>aa_file_perm (12 samples, 0.17%)</title><rect x="1120.5" y="323.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.5" y="334.0"></text>
</g>
<g>
<title>common_file_perm (22 samples, 0.31%)</title><rect x="1122.7" y="355.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1125.7" y="366.0"></text>
</g>
<g>
<title>fsnotify (40 samples, 0.56%)</title><rect x="1126.3" y="355.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1129.3" y="366.0"></text>
</g>
<g>
<title>selinux_file_permission (69 samples, 0.97%)</title><rect x="1132.9" y="355.0" width="11.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.9" y="366.0"></text>
</g>
<g>
<title>__inode_security_revalidate (17 samples, 0.24%)</title><rect x="1140.7" y="339.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1143.7" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="1143.0" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.0" y="334.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.04%)</title><rect x="1143.5" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.5" y="350.0"></text>
</g>
<g>
<title>avc_policy_seqno (2 samples, 0.03%)</title><rect x="1144.0" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.0" y="350.0"></text>
</g>
<g>
<title>selinux_file_permission (16 samples, 0.22%)</title><rect x="1144.3" y="371.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1147.3" y="382.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="1147.1" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1150.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.08%)</title><rect x="1147.6" y="435.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.6" y="446.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.03%)</title><rect x="1148.6" y="499.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1151.6" y="510.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.10%)</title><rect x="1149.0" y="499.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1152.0" y="510.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.06%)</title><rect x="1150.1" y="499.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1153.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="1150.9" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="1150.9" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (71 samples, 1.00%)</title><rect x="1151.3" y="547.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.3" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (36 samples, 0.50%)</title><rect x="1152.3" y="531.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.06%)</title><rect x="1154.3" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (10 samples, 0.14%)</title><rect x="1154.9" y="515.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.9" y="526.0"></text>
</g>
<g>
<title>vtable stub (10 samples, 0.14%)</title><rect x="1156.6" y="515.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1159.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (29 samples, 0.41%)</title><rect x="1158.2" y="531.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (44 samples, 0.62%)</title><rect x="1163.0" y="563.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.0" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="1163.2" y="547.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.2" y="558.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="1163.2" y="531.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.2" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="1163.2" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (39 samples, 0.55%)</title><rect x="1163.9" y="547.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.9" y="558.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1169.8" y="531.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1172.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (72 samples, 1.01%)</title><rect x="1170.3" y="563.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.3" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="1181.9" y="547.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.9" y="558.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="1181.9" y="531.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="1181.9" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (3 samples, 0.04%)</title><rect x="1182.2" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.2" y="750.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="1182.2" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.04%)</title><rect x="1182.2" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1182.2" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1182.2" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.04%)</title><rect x="1182.2" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.04%)</title><rect x="1182.2" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.04%)</title><rect x="1182.2" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lockAction (2 samples, 0.03%)</title><rect x="1182.7" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (33 samples, 0.46%)</title><rect x="1183.1" y="899.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.18%)</title><rect x="1183.1" y="883.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.17%)</title><rect x="1183.2" y="867.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.17%)</title><rect x="1183.2" y="851.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.15%)</title><rect x="1183.4" y="835.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1186.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.14%)</title><rect x="1183.5" y="819.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.14%)</title><rect x="1183.5" y="803.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 0.14%)</title><rect x="1183.5" y="787.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1186.5" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (10 samples, 0.14%)</title><rect x="1183.5" y="771.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.5" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1183.5" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1183.5" y="739.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.11%)</title><rect x="1183.9" y="755.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.9" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 0.06%)</title><rect x="1184.2" y="739.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="1184.5" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (20 samples, 0.28%)</title><rect x="1185.2" y="883.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.2" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.07%)</title><rect x="1185.2" y="867.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.2" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.06%)</title><rect x="1185.4" y="851.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="1185.4" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.4" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="1185.4" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1188.4" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (2 samples, 0.03%)</title><rect x="1185.7" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (15 samples, 0.21%)</title><rect x="1186.0" y="867.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11 samples, 0.15%)</title><rect x="1186.0" y="851.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 0.10%)</title><rect x="1186.0" y="835.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 0.10%)</title><rect x="1186.0" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.0" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (4 samples, 0.06%)</title><rect x="1186.0" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.04%)</title><rect x="1186.0" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="1186.0" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.03%)</title><rect x="1186.7" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="1186.7" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.04%)</title><rect x="1187.2" y="835.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1190.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="1187.4" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.06%)</title><rect x="1187.8" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.06%)</title><rect x="1187.8" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.04%)</title><rect x="1188.0" y="819.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1188.2" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1188.2" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="1188.2" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.03%)</title><rect x="1188.2" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.03%)</title><rect x="1188.2" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.2" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.03%)</title><rect x="1188.2" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1191.2" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1188.2" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.2" y="718.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.13%)</title><rect x="1188.5" y="899.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.5" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.13%)</title><rect x="1188.5" y="883.0" width="1.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1191.5" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.13%)</title><rect x="1188.5" y="867.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.10%)</title><rect x="1188.5" y="851.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.08%)</title><rect x="1188.5" y="835.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.08%)</title><rect x="1188.5" y="819.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.06%)</title><rect x="1188.7" y="803.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1188.7" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1188.7" y="771.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.7" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (2 samples, 0.03%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
</g>
</svg>
