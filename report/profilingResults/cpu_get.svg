<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1317"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1317"> </text>
<g id="frames">
<g>
<title>all (1,991 samples, 100.00%)</title><rect x="10.0" y="1283.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1294.0">all</text>
</g>
<g>
<title>[unknown] (5 samples, 0.25%)</title><rect x="10.0" y="1267.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="10.0" y="1251.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1262.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (2 samples, 0.10%)</title><rect x="10.0" y="1235.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="10.6" y="1219.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.6" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="10.6" y="1203.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.6" y="1214.0"></text>
</g>
<g>
<title>_IO_vsnprintf (1 samples, 0.05%)</title><rect x="11.2" y="1251.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.2" y="1262.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.05%)</title><rect x="11.2" y="1235.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.2" y="1246.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.05%)</title><rect x="11.8" y="1251.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.8" y="1262.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.05%)</title><rect x="12.4" y="1251.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.4" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="13.0" y="1267.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.0" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="13.0" y="1251.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.0" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="13.0" y="1235.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.0" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="13.0" y="1219.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.0" y="1230.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="13.0" y="1203.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.0" y="1214.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="13.0" y="1187.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.0" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="13.0" y="1171.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.0" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="13.0" y="1155.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.0" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.05%)</title><rect x="13.0" y="1139.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.0" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.05%)</title><rect x="13.6" y="1267.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="16.6" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="13.6" y="1251.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.6" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="13.6" y="1235.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.6" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="13.6" y="1219.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.6" y="1230.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="13.6" y="1203.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.6" y="1214.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 0.05%)</title><rect x="14.1" y="1267.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="17.1" y="1278.0"></text>
</g>
<g>
<title>edge_order(CFGEdge**, CFGEdge**) (1 samples, 0.05%)</title><rect x="14.1" y="1251.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="17.1" y="1262.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,934 samples, 97.14%)</title><rect x="14.7" y="1267.0" width="1146.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.7" y="1278.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (1,934 samples, 97.14%)</title><rect x="14.7" y="1251.0" width="1146.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.7" y="1262.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,934 samples, 97.14%)</title><rect x="14.7" y="1235.0" width="1146.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.7" y="1246.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,933 samples, 97.09%)</title><rect x="15.3" y="1219.0" width="1145.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="1230.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,933 samples, 97.09%)</title><rect x="15.3" y="1203.0" width="1145.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="1214.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,933 samples, 97.09%)</title><rect x="15.3" y="1187.0" width="1145.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.3" y="1198.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (1,932 samples, 97.04%)</title><rect x="15.3" y="1171.0" width="1145.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.3" y="1182.0">RequestHandler1_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.30%)</title><rect x="15.3" y="1155.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.25%)</title><rect x="15.9" y="1139.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.25%)</title><rect x="15.9" y="1123.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.25%)</title><rect x="15.9" y="1107.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.25%)</title><rect x="15.9" y="1091.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.25%)</title><rect x="15.9" y="1075.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.9" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.05%)</title><rect x="15.9" y="1059.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="18.9" y="1070.0"></text>
</g>
<g>
<title>__send (4 samples, 0.20%)</title><rect x="16.5" y="1059.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="19.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.20%)</title><rect x="16.5" y="1043.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.20%)</title><rect x="16.5" y="1027.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.5" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.15%)</title><rect x="17.1" y="1011.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.1" y="1022.0"></text>
</g>
<g>
<title>__sys_sendto (3 samples, 0.15%)</title><rect x="17.1" y="995.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="20.1" y="1006.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.15%)</title><rect x="17.1" y="979.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.1" y="990.0"></text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.15%)</title><rect x="17.1" y="963.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="20.1" y="974.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.15%)</title><rect x="17.1" y="947.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.1" y="958.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.15%)</title><rect x="17.1" y="931.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.1" y="942.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.15%)</title><rect x="17.1" y="915.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="20.1" y="926.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.15%)</title><rect x="17.1" y="899.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="20.1" y="910.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.15%)</title><rect x="17.1" y="883.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.1" y="894.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.10%)</title><rect x="17.1" y="867.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="20.1" y="878.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.10%)</title><rect x="17.1" y="851.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.1" y="862.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.10%)</title><rect x="17.1" y="835.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.1" y="846.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.10%)</title><rect x="17.1" y="819.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.1" y="830.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.10%)</title><rect x="17.1" y="803.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="20.1" y="814.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="17.7" y="787.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="20.7" y="798.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="17.7" y="771.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="20.7" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="17.7" y="755.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="20.7" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="17.7" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.7" y="750.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.05%)</title><rect x="17.7" y="723.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="20.7" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.05%)</title><rect x="17.7" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.7" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="17.7" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="20.7" y="702.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="17.7" y="675.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.7" y="686.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="17.7" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="20.7" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="17.7" y="643.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="20.7" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="17.7" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="20.7" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="17.7" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="20.7" y="622.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.05%)</title><rect x="17.7" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.7" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="18.3" y="867.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="21.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (1,926 samples, 96.74%)</title><rect x="18.9" y="1155.0" width="1141.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.9" y="1166.0">ru/mail/polis/service/zvladn7/BasicService.get</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.05%)</title><rect x="18.9" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.9" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.05%)</title><rect x="18.9" y="1123.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="1134.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.05%)</title><rect x="18.9" y="1107.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="1118.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (1 samples, 0.05%)</title><rect x="18.9" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,925 samples, 96.69%)</title><rect x="19.5" y="1139.0" width="1140.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.5" y="1150.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.20%)</title><rect x="19.5" y="1123.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.15%)</title><rect x="20.1" y="1107.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.1" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.15%)</title><rect x="20.1" y="1091.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.15%)</title><rect x="20.1" y="1075.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.15%)</title><rect x="20.1" y="1059.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="20.1" y="1043.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.1" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.15%)</title><rect x="20.1" y="1027.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.1" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.15%)</title><rect x="20.1" y="1011.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.1" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.15%)</title><rect x="20.1" y="995.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.1" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.15%)</title><rect x="20.1" y="979.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.1" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.15%)</title><rect x="20.1" y="963.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.1" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.15%)</title><rect x="20.1" y="947.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.1" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.15%)</title><rect x="20.1" y="931.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (3 samples, 0.15%)</title><rect x="20.1" y="915.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (3 samples, 0.15%)</title><rect x="20.1" y="899.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (3 samples, 0.15%)</title><rect x="20.1" y="883.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (1 samples, 0.05%)</title><rect x="20.1" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1 samples, 0.05%)</title><rect x="20.1" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="20.1" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="20.1" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="20.1" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="20.1" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="20.1" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="20.1" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="20.1" y="739.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.1" y="750.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.05%)</title><rect x="20.1" y="723.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="23.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1 samples, 0.05%)</title><rect x="20.7" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="20.7" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="20.7" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="20.7" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="20.7" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="20.7" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="20.7" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="20.7" y="755.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="23.7" y="766.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.05%)</title><rect x="20.7" y="739.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="23.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="20.7" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="23.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="20.7" y="707.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.05%)</title><rect x="20.7" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.7" y="702.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.05%)</title><rect x="20.7" y="675.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.7" y="686.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="20.7" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="23.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="20.7" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="23.7" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="20.7" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="21.3" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="21.3" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="21.3" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="21.3" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="21.3" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="21.3" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.3" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.05%)</title><rect x="21.9" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.9" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.05%)</title><rect x="21.9" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$93/1018417577.apply (1 samples, 0.05%)</title><rect x="21.9" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$iterator$3 (1 samples, 0.05%)</title><rect x="21.9" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (1 samples, 0.05%)</title><rect x="21.9" y="1059.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.&lt;init&gt; (1 samples, 0.05%)</title><rect x="21.9" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (1,920 samples, 96.43%)</title><rect x="22.4" y="1123.0" width="1138.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.4" y="1134.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (1,920 samples, 96.43%)</title><rect x="22.4" y="1107.0" width="1138.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.4" y="1118.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (534 samples, 26.82%)</title><rect x="22.4" y="1091.0" width="316.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.4" y="1102.0">com/google/common/collect/Iterators.mergeSo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (533 samples, 26.77%)</title><rect x="23.0" y="1075.0" width="315.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.0" y="1086.0">com/google/common/collect/Iterators$Merging..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.10%)</title><rect x="27.2" y="1059.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.2" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (200 samples, 10.05%)</title><rect x="28.4" y="1059.0" width="118.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.4" y="1070.0">java/util/Prio..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (200 samples, 10.05%)</title><rect x="28.4" y="1043.0" width="118.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="1054.0">java/util/Prio..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (200 samples, 10.05%)</title><rect x="28.4" y="1027.0" width="118.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.4" y="1038.0">java/util/Prio..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (200 samples, 10.05%)</title><rect x="28.4" y="1011.0" width="118.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.4" y="1022.0">java/util/Prio..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (200 samples, 10.05%)</title><rect x="28.4" y="995.0" width="118.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.4" y="1006.0">com/google/com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (200 samples, 10.05%)</title><rect x="28.4" y="979.0" width="118.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.4" y="990.0">com/google/com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (198 samples, 9.94%)</title><rect x="28.4" y="963.0" width="117.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.4" y="974.0">com/google/com..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (198 samples, 9.94%)</title><rect x="28.4" y="947.0" width="117.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.4" y="958.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (198 samples, 9.94%)</title><rect x="28.4" y="931.0" width="117.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.4" y="942.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (198 samples, 9.94%)</title><rect x="28.4" y="915.0" width="117.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.4" y="926.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (92 samples, 4.62%)</title><rect x="28.4" y="899.0" width="54.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="910.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (29 samples, 1.46%)</title><rect x="29.0" y="883.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (29 samples, 1.46%)</title><rect x="29.0" y="867.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (29 samples, 1.46%)</title><rect x="29.0" y="851.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="29.0" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.0" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="29.0" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="29.0" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (27 samples, 1.36%)</title><rect x="29.6" y="835.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (27 samples, 1.36%)</title><rect x="29.6" y="819.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (27 samples, 1.36%)</title><rect x="29.6" y="803.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (25 samples, 1.26%)</title><rect x="30.7" y="787.0" width="14.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 1.21%)</title><rect x="31.3" y="771.0" width="14.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.3" y="782.0"></text>
</g>
<g>
<title>pread64 (24 samples, 1.21%)</title><rect x="31.3" y="755.0" width="14.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="34.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.65%)</title><rect x="37.9" y="739.0" width="7.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="40.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.65%)</title><rect x="37.9" y="723.0" width="7.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.35%)</title><rect x="41.4" y="707.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="44.4" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.35%)</title><rect x="41.4" y="691.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="44.4" y="702.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="41.4" y="675.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.4" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="41.4" y="659.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="44.4" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="42.0" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="45.0" y="654.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.25%)</title><rect x="42.6" y="675.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.6" y="686.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.10%)</title><rect x="42.6" y="659.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.6" y="670.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.10%)</title><rect x="42.6" y="643.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.6" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.10%)</title><rect x="42.6" y="627.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="45.6" y="638.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.10%)</title><rect x="42.6" y="611.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.6" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.05%)</title><rect x="42.6" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.6" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.05%)</title><rect x="43.2" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.2" y="606.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.05%)</title><rect x="43.2" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.2" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.15%)</title><rect x="43.8" y="659.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.8" y="670.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.15%)</title><rect x="43.8" y="643.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.8" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="43.8" y="627.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="46.8" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="44.4" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.4" y="638.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="44.4" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.4" y="622.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="45.0" y="627.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="45.6" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (62 samples, 3.11%)</title><rect x="46.2" y="883.0" width="36.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.2" y="894.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (62 samples, 3.11%)</title><rect x="46.2" y="867.0" width="36.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.2" y="878.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.25%)</title><rect x="46.2" y="851.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.2" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.25%)</title><rect x="46.2" y="835.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.25%)</title><rect x="46.2" y="819.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (56 samples, 2.81%)</title><rect x="49.1" y="851.0" width="33.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.1" y="862.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.10%)</title><rect x="50.3" y="835.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.3" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.10%)</title><rect x="50.3" y="819.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.10%)</title><rect x="50.3" y="803.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="50.3" y="787.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="53.3" y="798.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.05%)</title><rect x="50.9" y="787.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="53.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (52 samples, 2.61%)</title><rect x="51.5" y="835.0" width="30.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="846.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (52 samples, 2.61%)</title><rect x="51.5" y="819.0" width="30.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.5" y="830.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (48 samples, 2.41%)</title><rect x="53.9" y="803.0" width="28.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.9" y="814.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="54.5" y="787.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="57.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 2.26%)</title><rect x="55.0" y="787.0" width="26.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="58.0" y="798.0">[..</text>
</g>
<g>
<title>pread64 (45 samples, 2.26%)</title><rect x="55.0" y="771.0" width="26.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="58.0" y="782.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.26%)</title><rect x="66.9" y="755.0" width="14.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 1.26%)</title><rect x="66.9" y="739.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 1.00%)</title><rect x="69.9" y="723.0" width="11.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.9" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 1.00%)</title><rect x="69.9" y="707.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.9" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="69.9" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.9" y="702.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="69.9" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.9" y="686.0"></text>
</g>
<g>
<title>vfs_read (19 samples, 0.95%)</title><rect x="70.5" y="691.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.5" y="702.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.60%)</title><rect x="71.0" y="675.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.0" y="686.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.60%)</title><rect x="71.0" y="659.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.0" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.50%)</title><rect x="72.2" y="643.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="75.2" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.50%)</title><rect x="72.2" y="627.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="75.2" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.10%)</title><rect x="72.8" y="611.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.8" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.10%)</title><rect x="72.8" y="595.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.8" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.25%)</title><rect x="74.0" y="611.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.0" y="622.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.25%)</title><rect x="74.0" y="595.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="77.0" y="606.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.10%)</title><rect x="77.0" y="611.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.0" y="622.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.05%)</title><rect x="77.6" y="595.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="80.6" y="606.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.05%)</title><rect x="77.6" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.6" y="590.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.05%)</title><rect x="77.6" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.6" y="574.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.10%)</title><rect x="78.2" y="675.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.2" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.20%)</title><rect x="79.3" y="675.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.3" y="686.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.20%)</title><rect x="79.3" y="659.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="82.3" y="670.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.20%)</title><rect x="79.3" y="643.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.3" y="654.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.10%)</title><rect x="80.5" y="627.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.5" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="81.1" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="84.1" y="622.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.05%)</title><rect x="81.7" y="787.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="84.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="82.3" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (28 samples, 1.41%)</title><rect x="82.9" y="899.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.9" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.10%)</title><rect x="82.9" y="883.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (26 samples, 1.31%)</title><rect x="84.1" y="883.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (26 samples, 1.31%)</title><rect x="84.1" y="867.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (26 samples, 1.31%)</title><rect x="84.1" y="851.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 1.31%)</title><rect x="84.1" y="835.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 1.31%)</title><rect x="84.1" y="819.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (25 samples, 1.26%)</title><rect x="84.7" y="803.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 1.26%)</title><rect x="84.7" y="787.0" width="14.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="87.7" y="798.0"></text>
</g>
<g>
<title>pread64 (25 samples, 1.26%)</title><rect x="84.7" y="771.0" width="14.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="87.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.80%)</title><rect x="90.0" y="755.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="93.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.05%)</title><rect x="90.0" y="739.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.75%)</title><rect x="90.6" y="739.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.60%)</title><rect x="92.4" y="723.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.4" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.60%)</title><rect x="92.4" y="707.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="95.4" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="92.4" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="95.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="92.4" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="95.4" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="92.4" y="659.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="95.4" y="670.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.55%)</title><rect x="93.0" y="691.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="96.0" y="702.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.35%)</title><rect x="93.6" y="675.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="96.6" y="686.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.35%)</title><rect x="93.6" y="659.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.6" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.35%)</title><rect x="93.6" y="643.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.6" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.35%)</title><rect x="93.6" y="627.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="96.6" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.05%)</title><rect x="94.2" y="611.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="97.2" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="94.2" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.2" y="606.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.05%)</title><rect x="94.8" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.8" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.20%)</title><rect x="95.3" y="611.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.3" y="622.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.20%)</title><rect x="95.3" y="595.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.3" y="606.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.20%)</title><rect x="95.3" y="579.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.3" y="590.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.05%)</title><rect x="97.1" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.1" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.15%)</title><rect x="97.7" y="675.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.7" y="686.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.15%)</title><rect x="97.7" y="659.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="100.7" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="98.3" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.3" y="654.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.05%)</title><rect x="98.9" y="643.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="101.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (78 samples, 3.92%)</title><rect x="99.5" y="899.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="910.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (77 samples, 3.87%)</title><rect x="100.1" y="883.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.1" y="894.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.20%)</title><rect x="100.1" y="867.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.1" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.20%)</title><rect x="100.1" y="851.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.20%)</title><rect x="100.1" y="835.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (69 samples, 3.47%)</title><rect x="102.5" y="867.0" width="40.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.5" y="878.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="103.0" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.0" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="103.0" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="103.0" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="103.0" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (67 samples, 3.37%)</title><rect x="103.6" y="851.0" width="39.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (67 samples, 3.37%)</title><rect x="103.6" y="835.0" width="39.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="846.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (64 samples, 3.21%)</title><rect x="105.4" y="819.0" width="38.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.4" y="830.0">sun..</text>
</g>
<g>
<title>[unknown] (64 samples, 3.21%)</title><rect x="105.4" y="803.0" width="38.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.4" y="814.0">[un..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.10%)</title><rect x="105.4" y="787.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.4" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="106.6" y="787.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="109.6" y="798.0"></text>
</g>
<g>
<title>pread64 (61 samples, 3.06%)</title><rect x="107.2" y="787.0" width="36.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="110.2" y="798.0">pre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 1.71%)</title><rect x="123.2" y="771.0" width="20.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.10%)</title><rect x="123.2" y="755.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="126.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.61%)</title><rect x="124.4" y="755.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (24 samples, 1.21%)</title><rect x="129.1" y="739.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="132.1" y="750.0"></text>
</g>
<g>
<title>ksys_pread64 (24 samples, 1.21%)</title><rect x="129.1" y="723.0" width="14.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.1" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="129.1" y="707.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.1" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="129.1" y="691.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="132.1" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="129.7" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.7" y="686.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 1.10%)</title><rect x="130.3" y="707.0" width="13.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="133.3" y="718.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.85%)</title><rect x="130.9" y="691.0" width="10.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="133.9" y="702.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.85%)</title><rect x="130.9" y="675.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.9" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (15 samples, 0.75%)</title><rect x="132.1" y="659.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.1" y="670.0"></text>
</g>
<g>
<title>generic_file_read_iter (15 samples, 0.75%)</title><rect x="132.1" y="643.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.1" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="133.3" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="136.3" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="133.3" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.3" y="622.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.05%)</title><rect x="133.9" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="136.9" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.30%)</title><rect x="134.5" y="627.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.5" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="135.6" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.6" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.15%)</title><rect x="136.2" y="611.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.2" y="622.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.05%)</title><rect x="138.0" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.0" y="638.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.15%)</title><rect x="138.6" y="627.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="141.6" y="638.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.15%)</title><rect x="138.6" y="611.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.6" y="622.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.05%)</title><rect x="139.8" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.8" y="606.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.05%)</title><rect x="139.8" y="579.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.8" y="590.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.05%)</title><rect x="140.4" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="143.4" y="638.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.05%)</title><rect x="140.4" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.4" y="622.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.05%)</title><rect x="140.4" y="595.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.4" y="606.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="141.0" y="691.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.0" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.15%)</title><rect x="141.6" y="691.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.6" y="702.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="141.6" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.10%)</title><rect x="142.2" y="675.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="145.2" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="142.2" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="145.2" y="670.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="142.8" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.20%)</title><rect x="143.4" y="867.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.4" y="878.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$89/14152727.compare (2 samples, 0.10%)</title><rect x="145.7" y="963.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.7" y="974.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.10%)</title><rect x="145.7" y="947.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.7" y="958.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$87/959901455.compare (2 samples, 0.10%)</title><rect x="145.7" y="931.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.7" y="942.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.10%)</title><rect x="145.7" y="915.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$86/513695478.apply (2 samples, 0.10%)</title><rect x="145.7" y="899.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (2 samples, 0.10%)</title><rect x="145.7" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.10%)</title><rect x="145.7" y="867.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.10%)</title><rect x="145.7" y="851.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.7" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="145.7" y="835.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.3" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.3" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="146.3" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.3" y="814.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (324 samples, 16.27%)</title><rect x="146.9" y="1059.0" width="192.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.9" y="1070.0">java/util/Spliterators$1A..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (324 samples, 16.27%)</title><rect x="146.9" y="1043.0" width="192.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.9" y="1054.0">java/util/stream/StreamSp..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (324 samples, 16.27%)</title><rect x="146.9" y="1027.0" width="192.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.9" y="1038.0">java/util/stream/StreamSp..</text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (324 samples, 16.27%)</title><rect x="146.9" y="1011.0" width="192.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.9" y="1022.0">java/util/Spliterator.get..</text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (324 samples, 16.27%)</title><rect x="146.9" y="995.0" width="192.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.9" y="1006.0">java/util/Spliterators$It..</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (7 samples, 0.35%)</title><rect x="146.9" y="979.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.9" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (7 samples, 0.35%)</title><rect x="146.9" y="963.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.9" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (317 samples, 15.92%)</title><rect x="151.1" y="979.0" width="187.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.1" y="990.0">java/util/TreeMap$Naviga..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (196 samples, 9.84%)</title><rect x="220.4" y="963.0" width="116.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.4" y="974.0">java/util/Tree..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (196 samples, 9.84%)</title><rect x="220.4" y="947.0" width="116.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.4" y="958.0">java/util/Tree..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (196 samples, 9.84%)</title><rect x="220.4" y="931.0" width="116.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.4" y="942.0">java/util/Tree..</text>
</g>
<g>
<title>java/util/TreeMap.successor (189 samples, 9.49%)</title><rect x="224.5" y="915.0" width="112.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.5" y="926.0">java/util/Tree..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (4 samples, 0.20%)</title><rect x="336.6" y="963.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.15%)</title><rect x="338.9" y="1091.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.15%)</title><rect x="338.9" y="1075.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.9" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="338.9" y="1059.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.9" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.15%)</title><rect x="338.9" y="1043.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.9" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.15%)</title><rect x="338.9" y="1027.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.9" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.15%)</title><rect x="338.9" y="1011.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.9" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.15%)</title><rect x="338.9" y="995.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.9" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.15%)</title><rect x="338.9" y="979.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.9" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.15%)</title><rect x="338.9" y="963.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.9" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.15%)</title><rect x="338.9" y="947.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (3 samples, 0.15%)</title><rect x="338.9" y="931.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (3 samples, 0.15%)</title><rect x="338.9" y="915.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (3 samples, 0.15%)</title><rect x="338.9" y="899.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (1 samples, 0.05%)</title><rect x="338.9" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1 samples, 0.05%)</title><rect x="338.9" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="338.9" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="338.9" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="338.9" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="338.9" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="338.9" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="338.9" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="338.9" y="755.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="341.9" y="766.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.05%)</title><rect x="338.9" y="739.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="341.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="338.9" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="338.9" y="707.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1 samples, 0.05%)</title><rect x="339.5" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="339.5" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="339.5" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="339.5" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="339.5" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="339.5" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="339.5" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="339.5" y="771.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="342.5" y="782.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.05%)</title><rect x="339.5" y="755.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="342.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="339.5" y="739.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="342.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.05%)</title><rect x="339.5" y="723.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="342.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="340.1" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="340.1" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="340.1" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="340.1" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="340.1" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="340.1" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="340.1" y="787.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="343.1" y="798.0"></text>
</g>
<g>
<title>pread64 (1 samples, 0.05%)</title><rect x="340.1" y="771.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="343.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (1,383 samples, 69.46%)</title><rect x="340.7" y="1091.0" width="819.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.7" y="1102.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,383 samples, 69.46%)</title><rect x="340.7" y="1075.0" width="819.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.7" y="1086.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.05%)</title><rect x="340.7" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.7" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="340.7" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.7" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.05%)</title><rect x="340.7" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (1 samples, 0.05%)</title><rect x="340.7" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLastEntry (1 samples, 0.05%)</title><rect x="340.7" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$90/1558126979.accept (1,382 samples, 69.41%)</title><rect x="341.3" y="1059.0" width="819.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.3" y="1070.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$90/1558126979.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$6 (1,382 samples, 69.41%)</title><rect x="341.3" y="1043.0" width="819.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.3" y="1054.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$6</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (1,382 samples, 69.41%)</title><rect x="341.3" y="1027.0" width="819.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.3" y="1038.0">ru/mail/polis/dao/zvladn7/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (1,381 samples, 69.36%)</title><rect x="341.9" y="1011.0" width="818.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.9" y="1022.0">ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (1,381 samples, 69.36%)</title><rect x="341.9" y="995.0" width="818.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.9" y="1006.0">ru/mail/polis/dao/zvladn7/SSTable.getElementPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.40%)</title><rect x="342.5" y="979.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.5" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.40%)</title><rect x="342.5" y="963.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.5" y="974.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="346.6" y="947.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="349.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (1,372 samples, 68.91%)</title><rect x="347.2" y="979.0" width="813.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.2" y="990.0">ru/mail/polis/dao/zvladn7/SSTable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (429 samples, 21.55%)</title><rect x="349.6" y="963.0" width="254.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.6" y="974.0">ru/mail/polis/dao/zvladn7/SSTable...</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.35%)</title><rect x="351.4" y="947.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (419 samples, 21.04%)</title><rect x="355.5" y="947.0" width="248.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.5" y="958.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (419 samples, 21.04%)</title><rect x="355.5" y="931.0" width="248.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.5" y="942.0">sun/nio/ch/FileChannelImpl.readIn..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (21 samples, 1.05%)</title><rect x="355.5" y="915.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.5" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (21 samples, 1.05%)</title><rect x="355.5" y="899.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (21 samples, 1.05%)</title><rect x="355.5" y="883.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.10%)</title><rect x="368.0" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.0" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.10%)</title><rect x="368.0" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.0" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.10%)</title><rect x="368.0" y="883.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (373 samples, 18.73%)</title><rect x="369.2" y="915.0" width="221.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.2" y="926.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.25%)</title><rect x="369.2" y="899.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.2" y="910.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.25%)</title><rect x="369.2" y="883.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.25%)</title><rect x="369.2" y="867.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="371.5" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (368 samples, 18.48%)</title><rect x="372.1" y="899.0" width="218.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.1" y="910.0">sun/nio/ch/IOUtil.readIntoNat..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (368 samples, 18.48%)</title><rect x="372.1" y="883.0" width="218.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.1" y="894.0">sun/nio/ch/FileDispatcherImpl..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (343 samples, 17.23%)</title><rect x="386.3" y="867.0" width="203.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.3" y="878.0">sun/nio/ch/FileDispatcherIm..</text>
</g>
<g>
<title>[unknown] (341 samples, 17.13%)</title><rect x="387.5" y="851.0" width="202.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="390.5" y="862.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.20%)</title><rect x="387.5" y="835.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="390.5" y="846.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.30%)</title><rect x="389.9" y="835.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="392.9" y="846.0"></text>
</g>
<g>
<title>pread64 (331 samples, 16.62%)</title><rect x="393.5" y="835.0" width="196.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="396.5" y="846.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (192 samples, 9.64%)</title><rect x="475.8" y="819.0" width="113.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.8" y="830.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.15%)</title><rect x="475.8" y="803.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (189 samples, 9.49%)</title><rect x="477.6" y="803.0" width="112.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="480.6" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (146 samples, 7.33%)</title><rect x="503.1" y="787.0" width="86.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="506.1" y="798.0">__x64_sys_..</text>
</g>
<g>
<title>ksys_pread64 (146 samples, 7.33%)</title><rect x="503.1" y="771.0" width="86.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="506.1" y="782.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (19 samples, 0.95%)</title><rect x="504.9" y="755.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.95%)</title><rect x="504.9" y="739.0" width="11.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.9" y="750.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.90%)</title><rect x="505.5" y="723.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.5" y="734.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.15%)</title><rect x="516.1" y="755.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="519.1" y="766.0"></text>
</g>
<g>
<title>fput (2 samples, 0.10%)</title><rect x="517.9" y="755.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="520.9" y="766.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.10%)</title><rect x="517.9" y="739.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="520.9" y="750.0"></text>
</g>
<g>
<title>vfs_read (119 samples, 5.98%)</title><rect x="519.1" y="755.0" width="70.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="522.1" y="766.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.10%)</title><rect x="520.9" y="739.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.9" y="750.0"></text>
</g>
<g>
<title>__vfs_read (81 samples, 4.07%)</title><rect x="522.1" y="739.0" width="48.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="525.1" y="750.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.15%)</title><rect x="522.1" y="723.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="525.1" y="734.0"></text>
</g>
<g>
<title>new_sync_read (78 samples, 3.92%)</title><rect x="523.8" y="723.0" width="46.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.8" y="734.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (74 samples, 3.72%)</title><rect x="526.2" y="707.0" width="43.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="529.2" y="718.0">ext4..</text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.05%)</title><rect x="527.4" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="530.4" y="702.0"></text>
</g>
<g>
<title>generic_file_read_iter (71 samples, 3.57%)</title><rect x="528.0" y="691.0" width="42.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="531.0" y="702.0">gene..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="533.9" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.9" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="533.9" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="536.9" y="670.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.10%)</title><rect x="534.5" y="675.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="537.5" y="686.0"></text>
</g>
<g>
<title>copy_page_to_iter (26 samples, 1.31%)</title><rect x="535.7" y="675.0" width="15.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.7" y="686.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.10%)</title><rect x="541.0" y="659.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.0" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.10%)</title><rect x="541.0" y="643.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.0" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (15 samples, 0.75%)</title><rect x="542.2" y="659.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="545.2" y="670.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.05%)</title><rect x="551.1" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="554.1" y="686.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.05%)</title><rect x="551.7" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.7" y="686.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.10%)</title><rect x="552.3" y="675.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.3" y="686.0"></text>
</g>
<g>
<title>pagecache_get_page (21 samples, 1.05%)</title><rect x="553.5" y="675.0" width="12.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="556.5" y="686.0"></text>
</g>
<g>
<title>find_get_entry (20 samples, 1.00%)</title><rect x="554.1" y="659.0" width="11.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="557.1" y="670.0"></text>
</g>
<g>
<title>xas_load (9 samples, 0.45%)</title><rect x="560.6" y="643.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.6" y="654.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.05%)</title><rect x="565.3" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="568.3" y="638.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.35%)</title><rect x="565.9" y="675.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.9" y="686.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.30%)</title><rect x="566.5" y="659.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.5" y="670.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.15%)</title><rect x="567.1" y="643.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.1" y="654.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="567.7" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.7" y="638.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.05%)</title><rect x="568.3" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.3" y="638.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.10%)</title><rect x="568.9" y="643.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.9" y="654.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.30%)</title><rect x="570.1" y="739.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.1" y="750.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.05%)</title><rect x="573.6" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="576.6" y="750.0"></text>
</g>
<g>
<title>rw_verify_area (26 samples, 1.31%)</title><rect x="574.2" y="739.0" width="15.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="577.2" y="750.0"></text>
</g>
<g>
<title>security_file_permission (25 samples, 1.26%)</title><rect x="574.8" y="723.0" width="14.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="577.8" y="734.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.10%)</title><rect x="574.8" y="707.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="577.8" y="718.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.30%)</title><rect x="576.0" y="707.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.0" y="718.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.30%)</title><rect x="576.0" y="691.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="579.0" y="702.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="579.0" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="582.0" y="686.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.25%)</title><rect x="579.6" y="707.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.6" y="718.0"></text>
</g>
<g>
<title>selinux_file_permission (12 samples, 0.60%)</title><rect x="582.5" y="707.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.5" y="718.0"></text>
</g>
<g>
<title>__inode_security_revalidate (4 samples, 0.20%)</title><rect x="587.3" y="691.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="590.3" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="589.0" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="589.6" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (22 samples, 1.10%)</title><rect x="590.2" y="915.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.30%)</title><rect x="599.7" y="899.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.7" y="910.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.05%)</title><rect x="602.7" y="883.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="605.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="603.3" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (939 samples, 47.16%)</title><rect x="603.9" y="963.0" width="556.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.9" y="974.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (938 samples, 47.11%)</title><rect x="604.4" y="947.0" width="556.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.4" y="958.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (37 samples, 1.86%)</title><rect x="604.4" y="931.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.4" y="942.0">s..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (37 samples, 1.86%)</title><rect x="604.4" y="915.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.4" y="926.0">j..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (37 samples, 1.86%)</title><rect x="604.4" y="899.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="910.0">j..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (865 samples, 43.45%)</title><rect x="626.4" y="931.0" width="512.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.4" y="942.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (12 samples, 0.60%)</title><rect x="627.0" y="915.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.0" y="926.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.60%)</title><rect x="627.0" y="899.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (12 samples, 0.60%)</title><rect x="627.0" y="883.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.0" y="894.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="630.5" y="867.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="633.5" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="631.1" y="867.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="634.1" y="878.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="631.7" y="867.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="634.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.15%)</title><rect x="632.3" y="867.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (852 samples, 42.79%)</title><rect x="634.1" y="915.0" width="504.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.1" y="926.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (852 samples, 42.79%)</title><rect x="634.1" y="899.0" width="504.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.1" y="910.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (814 samples, 40.88%)</title><rect x="656.0" y="883.0" width="482.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.0" y="894.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.20%)</title><rect x="662.5" y="867.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="665.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (798 samples, 40.08%)</title><rect x="664.9" y="867.0" width="472.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="667.9" y="878.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.45%)</title><rect x="664.9" y="851.0" width="5.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="667.9" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.30%)</title><rect x="670.2" y="851.0" width="3.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="673.2" y="862.0"></text>
</g>
<g>
<title>pread64 (783 samples, 39.33%)</title><rect x="673.8" y="851.0" width="464.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="676.8" y="862.0">pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (430 samples, 21.60%)</title><rect x="883.0" y="835.0" width="254.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.0" y="846.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.20%)</title><rect x="883.0" y="819.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.0" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="885.4" y="819.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (425 samples, 21.35%)</title><rect x="886.0" y="819.0" width="251.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.0" y="830.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (308 samples, 15.47%)</title><rect x="953.5" y="803.0" width="182.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="956.5" y="814.0">__x64_sys_pread64</text>
</g>
<g>
<title>ksys_pread64 (308 samples, 15.47%)</title><rect x="953.5" y="787.0" width="182.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.5" y="798.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (33 samples, 1.66%)</title><rect x="957.7" y="771.0" width="19.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (33 samples, 1.66%)</title><rect x="957.7" y="755.0" width="19.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="960.7" y="766.0"></text>
</g>
<g>
<title>__fget (30 samples, 1.51%)</title><rect x="959.5" y="739.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="962.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="977.2" y="771.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.2" y="782.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.15%)</title><rect x="977.8" y="771.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="980.8" y="782.0"></text>
</g>
<g>
<title>fput (6 samples, 0.30%)</title><rect x="979.6" y="771.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="982.6" y="782.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.30%)</title><rect x="979.6" y="755.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="982.6" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="983.2" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="986.2" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="983.8" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="986.8" y="782.0"></text>
</g>
<g>
<title>vfs_read (256 samples, 12.86%)</title><rect x="984.3" y="771.0" width="151.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="987.3" y="782.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.20%)</title><rect x="991.5" y="755.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.5" y="766.0"></text>
</g>
<g>
<title>__vfs_read (173 samples, 8.69%)</title><rect x="993.8" y="755.0" width="102.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.8" y="766.0">__vfs_read</text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.25%)</title><rect x="993.8" y="739.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.8" y="750.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.05%)</title><rect x="996.8" y="739.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.8" y="750.0"></text>
</g>
<g>
<title>new_sync_read (167 samples, 8.39%)</title><rect x="997.4" y="739.0" width="99.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1000.4" y="750.0">new_sync_read</text>
</g>
<g>
<title>ext4_file_read_iter (160 samples, 8.04%)</title><rect x="1000.9" y="723.0" width="94.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.9" y="734.0">ext4_file_r..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1005.1" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1008.1" y="718.0"></text>
</g>
<g>
<title>generic_file_read_iter (152 samples, 7.63%)</title><rect x="1005.7" y="707.0" width="90.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.7" y="718.0">generic_fi..</text>
</g>
<g>
<title>_cond_resched (3 samples, 0.15%)</title><rect x="1016.9" y="691.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.9" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.10%)</title><rect x="1017.5" y="675.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.5" y="686.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.05%)</title><rect x="1018.7" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1021.7" y="702.0"></text>
</g>
<g>
<title>copy_page_to_iter (58 samples, 2.91%)</title><rect x="1019.3" y="691.0" width="34.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1022.3" y="702.0">co..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1025.8" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1028.8" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (18 samples, 0.90%)</title><rect x="1026.4" y="675.0" width="10.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1029.4" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (19 samples, 0.95%)</title><rect x="1037.1" y="675.0" width="11.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1040.1" y="686.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.40%)</title><rect x="1048.4" y="675.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1051.4" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1053.1" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1056.1" y="686.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.05%)</title><rect x="1053.7" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.7" y="702.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.15%)</title><rect x="1054.3" y="691.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.3" y="702.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.15%)</title><rect x="1056.1" y="691.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1059.1" y="702.0"></text>
</g>
<g>
<title>pagecache_get_page (51 samples, 2.56%)</title><rect x="1057.8" y="691.0" width="30.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1060.8" y="702.0">pa..</text>
</g>
<g>
<title>find_get_entry (47 samples, 2.36%)</title><rect x="1059.0" y="675.0" width="27.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1062.0" y="686.0">f..</text>
</g>
<g>
<title>xas_load (23 samples, 1.16%)</title><rect x="1073.2" y="659.0" width="13.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1076.2" y="670.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.15%)</title><rect x="1085.1" y="643.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1088.1" y="654.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.10%)</title><rect x="1086.9" y="675.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1089.9" y="686.0"></text>
</g>
<g>
<title>touch_atime (13 samples, 0.65%)</title><rect x="1088.1" y="691.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1091.1" y="702.0"></text>
</g>
<g>
<title>atime_needs_update (12 samples, 0.60%)</title><rect x="1088.7" y="675.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1091.7" y="686.0"></text>
</g>
<g>
<title>current_time (8 samples, 0.40%)</title><rect x="1090.4" y="659.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1093.4" y="670.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.20%)</title><rect x="1092.2" y="643.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.2" y="654.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.05%)</title><rect x="1094.6" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1097.6" y="654.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="1095.2" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.2" y="670.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.05%)</title><rect x="1095.8" y="723.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.8" y="734.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.45%)</title><rect x="1096.4" y="755.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.4" y="766.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.05%)</title><rect x="1101.7" y="755.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1104.7" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (57 samples, 2.86%)</title><rect x="1102.3" y="755.0" width="33.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.3" y="766.0">rw..</text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.15%)</title><rect x="1102.3" y="739.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1105.3" y="750.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.25%)</title><rect x="1104.1" y="739.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.1" y="750.0"></text>
</g>
<g>
<title>security_file_permission (49 samples, 2.46%)</title><rect x="1107.0" y="739.0" width="29.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1110.0" y="750.0">se..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.10%)</title><rect x="1110.0" y="723.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1113.0" y="734.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.05%)</title><rect x="1111.2" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1114.2" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.65%)</title><rect x="1111.8" y="723.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1114.8" y="734.0"></text>
</g>
<g>
<title>common_file_perm (13 samples, 0.65%)</title><rect x="1111.8" y="707.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1114.8" y="718.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.15%)</title><rect x="1117.7" y="691.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1120.7" y="702.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.25%)</title><rect x="1119.5" y="723.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.5" y="734.0"></text>
</g>
<g>
<title>selinux_file_permission (23 samples, 1.16%)</title><rect x="1122.4" y="723.0" width="13.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.4" y="734.0"></text>
</g>
<g>
<title>__inode_security_revalidate (8 samples, 0.40%)</title><rect x="1130.1" y="707.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.1" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1132.5" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1135.5" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1132.5" y="675.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1135.5" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.15%)</title><rect x="1133.1" y="691.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.1" y="702.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.10%)</title><rect x="1134.9" y="707.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.9" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.15%)</title><rect x="1136.1" y="803.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1139.1" y="814.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.05%)</title><rect x="1137.8" y="867.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1140.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="1138.4" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (33 samples, 1.66%)</title><rect x="1139.0" y="931.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.50%)</title><rect x="1152.7" y="915.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.15%)</title><rect x="1158.6" y="931.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.05%)</title><rect x="1160.4" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.4" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="1160.4" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.4" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1160.4" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.4" y="1150.0"></text>
</g>
<g>
<title>start_thread (49 samples, 2.46%)</title><rect x="1161.0" y="1267.0" width="29.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1164.0" y="1278.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (49 samples, 2.46%)</title><rect x="1161.0" y="1251.0" width="29.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1164.0" y="1262.0">th..</text>
</g>
<g>
<title>Thread::call_run() (49 samples, 2.46%)</title><rect x="1161.0" y="1235.0" width="29.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.0" y="1246.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.50%)</title><rect x="1161.0" y="1219.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.0" y="1230.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.35%)</title><rect x="1161.0" y="1203.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.0" y="1214.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="1161.0" y="1187.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.0" y="1198.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.05%)</title><rect x="1161.0" y="1171.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.0" y="1182.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (2 samples, 0.10%)</title><rect x="1161.6" y="1187.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.6" y="1198.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1161.6" y="1171.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.6" y="1182.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.05%)</title><rect x="1161.6" y="1155.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1164.6" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, unsigned int, unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="1162.1" y="1171.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.1" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 0.05%)</title><rect x="1162.1" y="1155.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.1" y="1166.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="1162.7" y="1187.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.7" y="1198.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="1162.7" y="1171.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.7" y="1182.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.05%)</title><rect x="1163.3" y="1171.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.3" y="1182.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1163.3" y="1155.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.3" y="1166.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1163.3" y="1139.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.3" y="1150.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="1163.3" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.3" y="1134.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.10%)</title><rect x="1163.9" y="1171.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.9" y="1182.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="1164.5" y="1155.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.5" y="1166.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.15%)</title><rect x="1165.1" y="1203.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.1" y="1214.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.10%)</title><rect x="1165.1" y="1187.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.1" y="1198.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (1 samples, 0.05%)</title><rect x="1165.7" y="1171.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.7" y="1182.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="1165.7" y="1155.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.7" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="1166.3" y="1187.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1169.3" y="1198.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (35 samples, 1.76%)</title><rect x="1166.9" y="1219.0" width="20.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="1230.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (35 samples, 1.76%)</title><rect x="1166.9" y="1203.0" width="20.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.9" y="1214.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (35 samples, 1.76%)</title><rect x="1166.9" y="1187.0" width="20.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="1198.0"></text>
</g>
<g>
<title>Arena::~Arena() (1 samples, 0.05%)</title><rect x="1166.9" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.9" y="1182.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (34 samples, 1.71%)</title><rect x="1167.5" y="1171.0" width="20.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.5" y="1182.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (34 samples, 1.71%)</title><rect x="1167.5" y="1155.0" width="20.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.5" y="1166.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 0.90%)</title><rect x="1167.5" y="1139.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.5" y="1150.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.05%)</title><rect x="1167.5" y="1123.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.5" y="1134.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.05%)</title><rect x="1167.5" y="1107.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.5" y="1118.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.05%)</title><rect x="1167.5" y="1091.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.5" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="1167.5" y="1075.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.5" y="1086.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.10%)</title><rect x="1168.1" y="1123.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.1" y="1134.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.10%)</title><rect x="1168.1" y="1107.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.1" y="1118.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.05%)</title><rect x="1168.7" y="1091.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.7" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1168.7" y="1075.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.7" y="1086.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="1168.7" y="1059.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.7" y="1070.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1168.7" y="1043.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.7" y="1054.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="1168.7" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.7" y="1038.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1168.7" y="1011.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.7" y="1022.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="1168.7" y="995.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.7" y="1006.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1168.7" y="979.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.7" y="990.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="1168.7" y="963.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.7" y="974.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1168.7" y="947.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.7" y="958.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="1168.7" y="931.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.7" y="942.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="1168.7" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.7" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.10%)</title><rect x="1169.3" y="1123.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.3" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.10%)</title><rect x="1169.3" y="1107.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.3" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1169.3" y="1091.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.3" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.05%)</title><rect x="1169.8" y="1091.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.8" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.05%)</title><rect x="1169.8" y="1075.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.8" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (13 samples, 0.65%)</title><rect x="1170.4" y="1123.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.10%)</title><rect x="1170.4" y="1107.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.4" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.05%)</title><rect x="1171.0" y="1091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.0" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1171.0" y="1075.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.0" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.10%)</title><rect x="1171.6" y="1107.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.6" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.05%)</title><rect x="1171.6" y="1091.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.6" y="1102.0"></text>
</g>
<g>
<title>MachIdealNode::rule() const (1 samples, 0.05%)</title><rect x="1171.6" y="1075.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.05%)</title><rect x="1172.2" y="1091.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.2" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.05%)</title><rect x="1172.8" y="1107.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.8" y="1118.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1172.8" y="1091.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.8" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.10%)</title><rect x="1173.4" y="1107.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.4" y="1118.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.05%)</title><rect x="1174.0" y="1091.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1177.0" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.05%)</title><rect x="1174.6" y="1107.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.6" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1174.6" y="1091.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.10%)</title><rect x="1175.2" y="1107.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.2" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1175.8" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.8" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.15%)</title><rect x="1176.4" y="1107.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.4" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.15%)</title><rect x="1176.4" y="1091.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.4" y="1102.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.05%)</title><rect x="1177.0" y="1075.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.0" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1177.6" y="1075.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.6" y="1086.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 0.55%)</title><rect x="1178.1" y="1139.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.1" y="1150.0"></text>
</g>
<g>
<title>Compile::optimize_loops(PhaseIterGVN&amp;, LoopOptsMode) [clone .part.338] (5 samples, 0.25%)</title><rect x="1178.1" y="1123.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.25%)</title><rect x="1178.1" y="1107.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.1" y="1118.0"></text>
</g>
<g>
<title>Compile::cleanup_loop_predicates(PhaseIterGVN&amp;) (1 samples, 0.05%)</title><rect x="1178.1" y="1091.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1178.7" y="1091.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.15%)</title><rect x="1179.3" y="1091.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (3 samples, 0.15%)</title><rect x="1179.3" y="1075.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.10%)</title><rect x="1179.9" y="1059.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1180.5" y="1043.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.122] (1 samples, 0.05%)</title><rect x="1180.5" y="1027.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.5" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.05%)</title><rect x="1181.1" y="1123.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.1" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.05%)</title><rect x="1181.1" y="1107.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="1181.1" y="1091.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.1" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="1181.1" y="1075.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="1181.1" y="1059.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.1" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.05%)</title><rect x="1181.1" y="1043.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.1" y="1054.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.237] (1 samples, 0.05%)</title><rect x="1181.1" y="1027.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="1038.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.05%)</title><rect x="1181.1" y="1011.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.10%)</title><rect x="1181.7" y="1123.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.7" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1181.7" y="1107.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.7" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1182.3" y="1107.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="1118.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.05%)</title><rect x="1182.3" y="1091.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.15%)</title><rect x="1182.9" y="1123.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.10%)</title><rect x="1182.9" y="1107.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.9" y="1118.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1182.9" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.9" y="1102.0"></text>
</g>
<g>
<title>RootNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1183.5" y="1091.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.5" y="1102.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.05%)</title><rect x="1184.1" y="1107.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.1" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.25%)</title><rect x="1184.7" y="1139.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.7" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.25%)</title><rect x="1184.7" y="1123.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.25%)</title><rect x="1184.7" y="1107.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.25%)</title><rect x="1184.7" y="1091.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.25%)</title><rect x="1184.7" y="1075.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.25%)</title><rect x="1184.7" y="1059.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.7" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.20%)</title><rect x="1184.7" y="1043.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.20%)</title><rect x="1184.7" y="1027.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.20%)</title><rect x="1184.7" y="1011.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.20%)</title><rect x="1184.7" y="995.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.20%)</title><rect x="1184.7" y="979.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.20%)</title><rect x="1184.7" y="963.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.7" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1184.7" y="947.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.7" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.10%)</title><rect x="1184.7" y="931.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.10%)</title><rect x="1184.7" y="915.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.10%)</title><rect x="1184.7" y="899.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.10%)</title><rect x="1184.7" y="883.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.10%)</title><rect x="1184.7" y="867.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.7" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1184.7" y="851.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1184.7" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1184.7" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1184.7" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1184.7" y="787.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1184.7" y="771.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1184.7" y="755.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1184.7" y="739.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1184.7" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1184.7" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1184.7" y="691.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1184.7" y="675.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.7" y="686.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1184.7" y="659.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.7" y="670.0"></text>
</g>
<g>
<title>ciMethod::call_profile_at_bci(int) (1 samples, 0.05%)</title><rect x="1184.7" y="643.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.7" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="851.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.3" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="835.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="803.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="771.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="739.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="675.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="659.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.3" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="627.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.3" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="595.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="579.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="563.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="547.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="531.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="515.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="499.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="483.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="467.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="451.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="435.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.3" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="419.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="403.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="387.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="371.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="355.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="339.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.3" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="323.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.3" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="307.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="291.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="275.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="259.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="243.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.3" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="227.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.3" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="211.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.3" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="195.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="179.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.3" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="163.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.3" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.3" y="147.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="158.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.3" y="131.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.3" y="142.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.3" y="115.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.3" y="126.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.3" y="99.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.3" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.3" y="83.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.3" y="67.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="78.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.05%)</title><rect x="1185.3" y="51.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="62.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Node*, Compile*) (1 samples, 0.05%)</title><rect x="1185.3" y="35.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1185.9" y="947.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1185.9" y="931.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.10%)</title><rect x="1185.9" y="915.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.10%)</title><rect x="1185.9" y="899.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.10%)</title><rect x="1185.9" y="883.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.10%)</title><rect x="1185.9" y="867.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.10%)</title><rect x="1185.9" y="851.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1185.9" y="835.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.10%)</title><rect x="1185.9" y="819.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.10%)</title><rect x="1185.9" y="803.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.10%)</title><rect x="1185.9" y="787.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.10%)</title><rect x="1185.9" y="771.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.10%)</title><rect x="1185.9" y="755.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1185.9" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1185.9" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1185.9" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1185.9" y="691.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1185.9" y="675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1185.9" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="670.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1185.9" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1185.9" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1185.9" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.05%)</title><rect x="1185.9" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="606.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1185.9" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.05%)</title><rect x="1185.9" y="563.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="574.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1185.9" y="547.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="558.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.05%)</title><rect x="1185.9" y="531.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1188.9" y="542.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.4" y="739.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.4" y="723.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.4" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.4" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.4" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.4" y="675.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.4" y="659.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.4" y="643.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.4" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.4" y="611.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.4" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.4" y="579.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.4" y="563.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.4" y="547.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.4" y="531.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.4" y="515.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.4" y="499.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.4" y="483.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1186.4" y="467.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1186.4" y="451.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1186.4" y="435.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="446.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1186.4" y="419.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="430.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1186.4" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.4" y="414.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1186.4" y="387.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.4" y="398.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1186.4" y="371.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.4" y="382.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1186.4" y="355.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="366.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1186.4" y="339.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="350.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1186.4" y="323.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="334.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*) (1 samples, 0.05%)</title><rect x="1186.4" y="307.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.0" y="1043.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.0" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.0" y="1027.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.0" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.0" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.0" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.0" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.0" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.0" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.0" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.0" y="931.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.0" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.0" y="915.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.0" y="899.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.0" y="883.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.0" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.0" y="851.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.0" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.0" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.0" y="819.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.0" y="803.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.0" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.0" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.0" y="755.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.0" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.0" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.0" y="723.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.0" y="707.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.0" y="691.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.0" y="675.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.0" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.05%)</title><rect x="1187.0" y="643.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.05%)</title><rect x="1187.0" y="627.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="638.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1187.0" y="611.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.0" y="622.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1187.0" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.0" y="606.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.05%)</title><rect x="1187.0" y="579.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="590.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.20%)</title><rect x="1187.6" y="1219.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.6" y="1230.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.20%)</title><rect x="1187.6" y="1203.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="1214.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (4 samples, 0.20%)</title><rect x="1187.6" y="1187.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.6" y="1198.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.20%)</title><rect x="1187.6" y="1171.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="1182.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.20%)</title><rect x="1187.6" y="1155.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.20%)</title><rect x="1187.6" y="1139.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.6" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (3 samples, 0.15%)</title><rect x="1187.6" y="1123.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="1134.0"></text>
</g>
<g>
<title>FreeHeap(void*) (1 samples, 0.05%)</title><rect x="1187.6" y="1107.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1190.6" y="1118.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::flush() (2 samples, 0.10%)</title><rect x="1188.2" y="1107.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="1118.0"></text>
</g>
<g>
<title>G1PLABAllocator::flush_and_retire_stats() (1 samples, 0.05%)</title><rect x="1188.2" y="1091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.2" y="1102.0"></text>
</g>
<g>
<title>PLAB::flush_and_retire_stats(PLABStats*) (1 samples, 0.05%)</title><rect x="1188.2" y="1075.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.2" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.05%)</title><rect x="1188.2" y="1059.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.2" y="1070.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="1188.2" y="1043.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.2" y="1054.0"></text>
</g>
<g>
<title>PtrQueue::flush_impl() (1 samples, 0.05%)</title><rect x="1188.8" y="1091.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.8" y="1102.0"></text>
</g>
<g>
<title>G1ConcurrentRefine::adjust(double, unsigned long, double) (1 samples, 0.05%)</title><rect x="1189.4" y="1123.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="1134.0"></text>
</g>
</g>
</svg>
