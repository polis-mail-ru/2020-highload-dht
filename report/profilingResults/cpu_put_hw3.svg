<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (4,361 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.0" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (1 samples, 0.02%)</title><rect x="10.0" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="10.0" y="883.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.09%)</title><rect x="10.3" y="947.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.3" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="10.3" y="931.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.05%)</title><rect x="10.3" y="915.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="10.3" y="899.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="10.3" y="883.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="894.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="10.3" y="867.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.3" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="10.5" y="899.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.8" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.8" y="942.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.02%)</title><rect x="10.8" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.1" y="931.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.1" y="942.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="11.1" y="915.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="14.1" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="11.1" y="899.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="11.4" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.4" y="958.0"></text>
</g>
<g>
<title>_IO_vsscanf (1 samples, 0.02%)</title><rect x="11.4" y="931.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.4" y="942.0"></text>
</g>
<g>
<title>_IO_vfscanf_internal (1 samples, 0.02%)</title><rect x="11.4" y="915.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="14.4" y="926.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="11.6" y="931.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="14.6" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.28%)</title><rect x="11.9" y="947.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.9" y="958.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="11.9" y="931.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.9" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="12.2" y="931.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.23%)</title><rect x="12.4" y="931.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="12.4" y="915.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="15.4" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="12.4" y="899.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="15.4" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="12.7" y="883.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.7" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="12.7" y="867.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="15.7" y="878.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.18%)</title><rect x="13.0" y="915.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="16.0" y="926.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.16%)</title><rect x="13.2" y="899.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="16.2" y="910.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.14%)</title><rect x="13.5" y="883.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="15.1" y="947.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.1" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,021 samples, 69.27%)</title><rect x="15.4" y="947.0" width="817.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.4" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,021 samples, 69.27%)</title><rect x="15.4" y="931.0" width="817.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.4" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,021 samples, 69.27%)</title><rect x="15.4" y="915.0" width="817.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.4" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (15 samples, 0.34%)</title><rect x="19.5" y="899.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.34%)</title><rect x="19.5" y="883.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.34%)</title><rect x="19.5" y="867.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.34%)</title><rect x="19.5" y="851.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.09%)</title><rect x="22.4" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (464 samples, 10.64%)</title><rect x="23.5" y="899.0" width="125.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.5" y="910.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (459 samples, 10.53%)</title><rect x="24.9" y="883.0" width="124.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.9" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (321 samples, 7.36%)</title><rect x="24.9" y="867.0" width="86.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.9" y="878.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.02%)</title><rect x="25.7" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.37%)</title><rect x="26.0" y="851.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.34%)</title><rect x="26.2" y="835.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.34%)</title><rect x="26.2" y="819.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.11%)</title><rect x="28.9" y="803.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="28.9" y="787.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="31.9" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="28.9" y="771.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="31.9" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.09%)</title><rect x="29.2" y="771.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="32.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (46 samples, 1.05%)</title><rect x="30.3" y="851.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (46 samples, 1.05%)</title><rect x="30.3" y="835.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (43 samples, 0.99%)</title><rect x="30.6" y="819.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.99%)</title><rect x="30.6" y="803.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 0.99%)</title><rect x="30.6" y="787.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.6" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.16%)</title><rect x="30.6" y="771.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="33.6" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="30.6" y="755.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="33.6" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="31.1" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="34.1" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="31.4" y="755.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="34.4" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="31.6" y="755.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="34.6" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="32.2" y="755.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="35.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 0.83%)</title><rect x="32.5" y="771.0" width="9.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="35.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.73%)</title><rect x="33.5" y="755.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="33.5" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.71%)</title><rect x="33.8" y="739.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.71%)</title><rect x="33.8" y="723.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.8" y="734.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.71%)</title><rect x="33.8" y="707.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.69%)</title><rect x="34.1" y="691.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.1" y="702.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="34.9" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.9" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="35.2" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.2" y="686.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="35.4" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.55%)</title><rect x="35.7" y="675.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.7" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 0.55%)</title><rect x="35.7" y="659.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.55%)</title><rect x="35.7" y="643.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="38.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.05%)</title><rect x="42.2" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.07%)</title><rect x="42.7" y="851.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (252 samples, 5.78%)</title><rect x="43.6" y="851.0" width="68.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.6" y="862.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (249 samples, 5.71%)</title><rect x="44.4" y="835.0" width="67.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="846.0">jdk/int..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="44.9" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="47.9" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="45.2" y="819.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="48.2" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (98 samples, 2.25%)</title><rect x="45.4" y="819.0" width="26.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="48.4" y="830.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.07%)</title><rect x="47.3" y="803.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="50.3" y="814.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="48.2" y="803.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="51.2" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.32%)</title><rect x="48.7" y="803.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="51.7" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.14%)</title><rect x="50.3" y="787.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="53.3" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.02%)</title><rect x="51.1" y="771.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="54.1" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="51.4" y="771.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="54.4" y="782.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="51.7" y="771.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="54.7" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="51.9" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="54.9" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.02%)</title><rect x="52.2" y="787.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="55.2" y="798.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="52.5" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="55.5" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="52.8" y="803.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.8" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (61 samples, 1.40%)</title><rect x="53.0" y="803.0" width="16.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="56.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.57%)</title><rect x="62.8" y="787.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="62.8" y="771.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.55%)</title><rect x="63.0" y="771.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="66.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.30%)</title><rect x="66.0" y="755.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.0" y="766.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.25%)</title><rect x="66.3" y="739.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="69.3" y="750.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.16%)</title><rect x="66.8" y="723.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.8" y="734.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="67.9" y="707.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.9" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.02%)</title><rect x="68.4" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.4" y="702.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.05%)</title><rect x="68.7" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="71.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="69.3" y="739.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="72.3" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="69.5" y="803.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="72.5" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.07%)</title><rect x="69.8" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="72.8" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.07%)</title><rect x="70.6" y="803.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="73.6" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="71.4" y="803.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="74.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 3.35%)</title><rect x="72.0" y="819.0" width="39.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="75.0" y="830.0">[un..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="72.0" y="803.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="75.0" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="72.5" y="803.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="75.5" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="73.3" y="803.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="76.3" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="73.6" y="803.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="76.6" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (139 samples, 3.19%)</title><rect x="73.9" y="803.0" width="37.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.9" y="814.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.05%)</title><rect x="99.0" y="787.0" width="12.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="99.0" y="771.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.01%)</title><rect x="99.6" y="771.0" width="11.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="102.6" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.66%)</title><rect x="103.6" y="755.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.6" y="766.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.57%)</title><rect x="104.4" y="739.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.4" y="750.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 0.53%)</title><rect x="105.0" y="723.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="108.0" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.18%)</title><rect x="106.3" y="707.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="109.3" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="106.6" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.6" y="702.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="106.9" y="691.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.9" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.11%)</title><rect x="107.1" y="691.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.1" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="108.0" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.0" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.18%)</title><rect x="108.5" y="707.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="108.8" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="111.8" y="702.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="109.0" y="691.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.0" y="702.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.07%)</title><rect x="109.8" y="691.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.8" y="702.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="110.7" y="707.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.7" y="718.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="110.9" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.9" y="718.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="111.2" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.2" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="111.5" y="819.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="114.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (37 samples, 0.85%)</title><rect x="111.7" y="867.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (37 samples, 0.85%)</title><rect x="111.7" y="851.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (37 samples, 0.85%)</title><rect x="111.7" y="835.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (21 samples, 0.48%)</title><rect x="116.1" y="819.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="116.1" y="803.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="116.1" y="787.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.46%)</title><rect x="116.3" y="803.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="116.3" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.41%)</title><rect x="116.9" y="787.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.9" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.09%)</title><rect x="117.1" y="771.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="120.1" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="117.1" y="755.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="120.1" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="117.7" y="755.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="120.7" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="118.0" y="755.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="121.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.30%)</title><rect x="118.2" y="771.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="121.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="118.2" y="755.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="121.2" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (12 samples, 0.28%)</title><rect x="118.5" y="755.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="121.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="121.2" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="124.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="121.2" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="121.2" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.2" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="121.2" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.2" y="702.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="121.2" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.2" y="686.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="121.5" y="659.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (101 samples, 2.32%)</title><rect x="121.7" y="867.0" width="27.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.7" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (101 samples, 2.32%)</title><rect x="121.7" y="851.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (101 samples, 2.32%)</title><rect x="121.7" y="835.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.7" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (99 samples, 2.27%)</title><rect x="122.0" y="819.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.0" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (99 samples, 2.27%)</title><rect x="122.0" y="803.0" width="26.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.0" y="814.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.30%)</title><rect x="122.0" y="787.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="125.0" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="122.6" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="125.6" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.07%)</title><rect x="122.8" y="771.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="125.8" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="123.6" y="771.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="126.6" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="124.2" y="755.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="127.2" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="124.5" y="771.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="127.5" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="124.7" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="127.7" y="782.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="125.0" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="128.0" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="125.3" y="771.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="128.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (86 samples, 1.97%)</title><rect x="125.5" y="787.0" width="23.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="128.5" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 1.61%)</title><rect x="129.9" y="771.0" width="18.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="129.9" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="132.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.56%)</title><rect x="130.4" y="755.0" width="18.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="133.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (63 samples, 1.44%)</title><rect x="131.8" y="739.0" width="17.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.8" y="750.0"></text>
</g>
<g>
<title>do_futex (63 samples, 1.44%)</title><rect x="131.8" y="723.0" width="17.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="134.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (63 samples, 1.44%)</title><rect x="131.8" y="707.0" width="17.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.8" y="718.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="132.8" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.8" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.14%)</title><rect x="133.1" y="691.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.1" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="133.9" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="136.9" y="686.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.05%)</title><rect x="134.2" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.2" y="686.0"></text>
</g>
<g>
<title>wake_up_q (52 samples, 1.19%)</title><rect x="134.7" y="691.0" width="14.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="134.7" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="137.7" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (51 samples, 1.17%)</title><rect x="135.0" y="675.0" width="13.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 1.17%)</title><rect x="135.0" y="659.0" width="13.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="148.8" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$117/2050636716.run (695 samples, 15.94%)</title><rect x="149.1" y="899.0" width="188.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.1" y="910.0">ru/mail/polis/dao/zvladn..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$9 (695 samples, 15.94%)</title><rect x="149.1" y="883.0" width="188.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.1" y="894.0">ru/mail/polis/dao/zvladn..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (695 samples, 15.94%)</title><rect x="149.1" y="867.0" width="188.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.1" y="878.0">ru/mail/polis/dao/zvladn..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (695 samples, 15.94%)</title><rect x="149.1" y="851.0" width="188.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.1" y="862.0">ru/mail/polis/dao/zvladn..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.05%)</title><rect x="149.9" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="149.9" y="819.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="152.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="150.2" y="803.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="153.2" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="150.2" y="787.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="153.2" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="150.2" y="771.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="153.2" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="150.2" y="755.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="153.2" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="150.4" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="150.4" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.4" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="150.4" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.4" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="150.4" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.4" y="798.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.18%)</title><rect x="150.7" y="835.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.18%)</title><rect x="150.7" y="819.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.18%)</title><rect x="150.7" y="803.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (1 samples, 0.02%)</title><rect x="150.7" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.16%)</title><rect x="151.0" y="787.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$123/872803863.getAsBoolean (5 samples, 0.11%)</title><rect x="151.5" y="771.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.11%)</title><rect x="151.5" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.11%)</title><rect x="151.5" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="151.5" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.05%)</title><rect x="151.5" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.05%)</title><rect x="151.5" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.05%)</title><rect x="151.5" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.07%)</title><rect x="152.1" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable$$Lambda$119/269571981.apply (3 samples, 0.07%)</title><rect x="152.1" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.lambda$iterator$0 (3 samples, 0.07%)</title><rect x="152.1" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.&lt;init&gt; (3 samples, 0.07%)</title><rect x="152.1" y="675.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (681 samples, 15.62%)</title><rect x="152.9" y="835.0" width="184.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.9" y="846.0">sun/nio/ch/FileChannelIm..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.07%)</title><rect x="153.4" y="819.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.4" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.07%)</title><rect x="153.4" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.07%)</title><rect x="153.4" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (664 samples, 15.23%)</title><rect x="154.2" y="819.0" width="179.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.2" y="830.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="154.5" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="154.8" y="803.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.8" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="154.8" y="787.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.8" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (8 samples, 0.18%)</title><rect x="155.0" y="803.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.14%)</title><rect x="155.0" y="787.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.14%)</title><rect x="155.0" y="771.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.0" y="782.0"></text>
</g>
<g>
<title>jlong_arraycopy (1 samples, 0.02%)</title><rect x="156.4" y="755.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="159.4" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.05%)</title><rect x="156.7" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.05%)</title><rect x="156.7" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (632 samples, 14.49%)</title><rect x="157.2" y="803.0" width="171.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.2" y="814.0">sun/nio/ch/IOUtil.writ..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (632 samples, 14.49%)</title><rect x="157.2" y="787.0" width="171.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.2" y="798.0">sun/nio/ch/FileDispatc..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (631 samples, 14.47%)</title><rect x="157.5" y="771.0" width="170.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.5" y="782.0">sun/nio/ch/FileDispatc..</text>
</g>
<g>
<title>[unknown] (618 samples, 14.17%)</title><rect x="159.6" y="755.0" width="167.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="162.6" y="766.0">[unknown]</text>
</g>
<g>
<title>__libc_write (612 samples, 14.03%)</title><rect x="159.6" y="739.0" width="165.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="162.6" y="750.0">__libc_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (511 samples, 11.72%)</title><rect x="187.0" y="723.0" width="138.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="190.0" y="734.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="187.0" y="707.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="190.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (510 samples, 11.69%)</title><rect x="187.2" y="707.0" width="138.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.2" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (476 samples, 10.91%)</title><rect x="196.4" y="691.0" width="128.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="199.4" y="702.0">__x64_sys_write</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="196.7" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.7" y="686.0"></text>
</g>
<g>
<title>ksys_write (474 samples, 10.87%)</title><rect x="197.0" y="675.0" width="128.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.0" y="686.0">ksys_write</text>
</g>
<g>
<title>__f_unlock_pos (6 samples, 0.14%)</title><rect x="198.6" y="659.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="201.6" y="670.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.11%)</title><rect x="198.9" y="643.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.9" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (13 samples, 0.30%)</title><rect x="200.2" y="659.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.28%)</title><rect x="200.5" y="643.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.5" y="654.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.25%)</title><rect x="200.8" y="627.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="203.7" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="206.7" y="670.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="204.0" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.0" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="204.3" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="207.3" y="670.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="204.3" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="207.3" y="654.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="204.8" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="207.8" y="670.0"></text>
</g>
<g>
<title>vfs_write (444 samples, 10.18%)</title><rect x="205.1" y="659.0" width="120.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="208.1" y="670.0">vfs_write</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="207.3" y="643.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="210.3" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.09%)</title><rect x="207.5" y="643.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="210.5" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="208.3" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="211.3" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="208.3" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="211.3" y="622.0"></text>
</g>
<g>
<title>__vfs_write (396 samples, 9.08%)</title><rect x="208.6" y="643.0" width="107.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="211.6" y="654.0">__vfs_write</text>
</g>
<g>
<title>ext4_file_write_iter (5 samples, 0.11%)</title><rect x="208.9" y="627.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.9" y="638.0"></text>
</g>
<g>
<title>new_sync_write (390 samples, 8.94%)</title><rect x="210.2" y="627.0" width="105.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.2" y="638.0">new_sync_write</text>
</g>
<g>
<title>ext4_file_write_iter (387 samples, 8.87%)</title><rect x="210.8" y="611.0" width="104.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="213.8" y="622.0">ext4_file_wr..</text>
</g>
<g>
<title>__generic_file_write_iter (375 samples, 8.60%)</title><rect x="211.9" y="595.0" width="101.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.9" y="606.0">__generic_fi..</text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.07%)</title><rect x="214.0" y="579.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.0" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_end (7 samples, 0.16%)</title><rect x="214.8" y="579.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.8" y="590.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.09%)</title><rect x="216.7" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="219.7" y="590.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.05%)</title><rect x="217.3" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.3" y="574.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.02%)</title><rect x="217.5" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="220.5" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (351 samples, 8.05%)</title><rect x="217.8" y="579.0" width="95.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.8" y="590.0">generic_per..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.07%)</title><rect x="218.9" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="221.9" y="574.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="219.7" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.7" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (91 samples, 2.09%)</title><rect x="220.0" y="563.0" width="24.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.0" y="574.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (43 samples, 0.99%)</title><rect x="223.5" y="547.0" width="11.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="226.5" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (41 samples, 0.94%)</title><rect x="224.0" y="531.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="227.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.11%)</title><rect x="225.9" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.9" y="526.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.07%)</title><rect x="227.3" y="515.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.3" y="526.0"></text>
</g>
<g>
<title>start_this_handle (26 samples, 0.60%)</title><rect x="228.1" y="515.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.1" y="526.0"></text>
</g>
<g>
<title>_raw_read_lock (8 samples, 0.18%)</title><rect x="231.6" y="499.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.6" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (5 samples, 0.11%)</title><rect x="233.8" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.8" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="235.1" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="238.1" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="235.1" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="238.1" y="542.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.07%)</title><rect x="235.4" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.4" y="558.0"></text>
</g>
<g>
<title>ext4_nonda_switch (6 samples, 0.14%)</title><rect x="236.2" y="547.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="239.2" y="558.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (22 samples, 0.50%)</title><rect x="237.8" y="547.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="240.8" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (19 samples, 0.44%)</title><rect x="238.4" y="531.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.4" y="542.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="239.7" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.7" y="526.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="239.7" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.7" y="510.0"></text>
</g>
<g>
<title>find_get_entry (12 samples, 0.28%)</title><rect x="240.0" y="515.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="243.0" y="526.0"></text>
</g>
<g>
<title>xas_load (9 samples, 0.21%)</title><rect x="240.8" y="499.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.8" y="510.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.05%)</title><rect x="242.7" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="245.7" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="243.2" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.2" y="526.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="243.5" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.5" y="542.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.05%)</title><rect x="243.8" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.8" y="558.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="244.3" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="247.3" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (232 samples, 5.32%)</title><rect x="244.6" y="563.0" width="62.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="247.6" y="574.0">ext4_d..</text>
</g>
<g>
<title>__ext4_journal_stop (21 samples, 0.48%)</title><rect x="246.5" y="547.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="249.5" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (20 samples, 0.46%)</title><rect x="246.8" y="531.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.8" y="542.0"></text>
</g>
<g>
<title>__wake_up (9 samples, 0.21%)</title><rect x="248.1" y="515.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="251.1" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.16%)</title><rect x="248.1" y="499.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.1" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.09%)</title><rect x="248.4" y="483.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="251.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="249.5" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="250.0" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.14%)</title><rect x="250.5" y="515.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.5" y="526.0"></text>
</g>
<g>
<title>generic_write_end (204 samples, 4.68%)</title><rect x="252.2" y="547.0" width="55.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="255.2" y="558.0">gener..</text>
</g>
<g>
<title>__mark_inode_dirty (178 samples, 4.08%)</title><rect x="254.9" y="531.0" width="48.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.9" y="542.0">__ma..</text>
</g>
<g>
<title>ext4_dirty_inode (172 samples, 3.94%)</title><rect x="256.5" y="515.0" width="46.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="259.5" y="526.0">ext4..</text>
</g>
<g>
<title>__ext4_journal_start_sb (7 samples, 0.16%)</title><rect x="256.5" y="499.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="259.5" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.05%)</title><rect x="257.0" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.0" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="257.3" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.3" y="478.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="257.3" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="260.3" y="462.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.07%)</title><rect x="257.6" y="483.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.6" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.09%)</title><rect x="258.4" y="499.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="261.4" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.07%)</title><rect x="258.7" y="483.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.7" y="494.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="259.5" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.5" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (159 samples, 3.65%)</title><rect x="260.0" y="499.0" width="43.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="263.0" y="510.0">ext4..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="260.3" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.3" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (122 samples, 2.80%)</title><rect x="260.6" y="483.0" width="33.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.6" y="494.0">ex..</text>
</g>
<g>
<title>__brelse (1 samples, 0.02%)</title><rect x="267.6" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="270.6" y="478.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (9 samples, 0.21%)</title><rect x="267.9" y="467.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="270.9" y="478.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.07%)</title><rect x="269.5" y="451.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.5" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="270.0" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.0" y="446.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="270.3" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.07%)</title><rect x="270.6" y="467.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.6" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.02%)</title><rect x="271.4" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.4" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (74 samples, 1.70%)</title><rect x="271.7" y="467.0" width="20.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.7" y="478.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.05%)</title><rect x="271.7" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="274.7" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (72 samples, 1.65%)</title><rect x="272.2" y="451.0" width="19.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.2" y="462.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="274.9" y="435.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.9" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (29 samples, 0.66%)</title><rect x="275.7" y="435.0" width="7.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.7" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (30 samples, 0.69%)</title><rect x="283.6" y="435.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="286.6" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (21 samples, 0.48%)</title><rect x="286.0" y="419.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="289.0" y="430.0"></text>
</g>
<g>
<title>from_kprojid (4 samples, 0.09%)</title><rect x="291.7" y="467.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="294.7" y="478.0"></text>
</g>
<g>
<title>map_id_up (4 samples, 0.09%)</title><rect x="291.7" y="451.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="294.7" y="462.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.02%)</title><rect x="292.8" y="467.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="295.8" y="478.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.02%)</title><rect x="292.8" y="451.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="295.8" y="462.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.05%)</title><rect x="293.0" y="467.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="296.0" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (35 samples, 0.80%)</title><rect x="293.6" y="483.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="296.6" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (23 samples, 0.53%)</title><rect x="294.4" y="467.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.4" y="478.0"></text>
</g>
<g>
<title>__getblk_gfp (11 samples, 0.25%)</title><rect x="297.4" y="451.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.4" y="462.0"></text>
</g>
<g>
<title>__find_get_block (8 samples, 0.18%)</title><rect x="297.6" y="435.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.6" y="446.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="299.8" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.8" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="299.8" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="302.8" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="300.1" y="435.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="303.1" y="446.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="300.3" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.3" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (6 samples, 0.14%)</title><rect x="300.6" y="467.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.6" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (4 samples, 0.09%)</title><rect x="300.9" y="451.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.9" y="462.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (4 samples, 0.09%)</title><rect x="300.9" y="435.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.9" y="446.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.02%)</title><rect x="302.0" y="451.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.0" y="462.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="302.2" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="305.2" y="478.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.02%)</title><rect x="302.5" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="305.5" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="302.8" y="467.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.8" y="478.0"></text>
</g>
<g>
<title>block_write_end (10 samples, 0.23%)</title><rect x="303.0" y="531.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.0" y="542.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (9 samples, 0.21%)</title><rect x="303.3" y="515.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.3" y="526.0"></text>
</g>
<g>
<title>mark_buffer_dirty (4 samples, 0.09%)</title><rect x="304.7" y="499.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.7" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.05%)</title><rect x="305.7" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="308.7" y="542.0"></text>
</g>
<g>
<title>unlock_page (4 samples, 0.09%)</title><rect x="306.3" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.3" y="542.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.02%)</title><rect x="307.4" y="563.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="310.4" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="307.6" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="310.6" y="574.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (9 samples, 0.21%)</title><rect x="308.2" y="563.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="311.2" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="309.0" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="312.0" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.07%)</title><rect x="309.5" y="547.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="312.5" y="558.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="310.3" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.3" y="558.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (8 samples, 0.18%)</title><rect x="310.6" y="563.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.6" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="312.8" y="579.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="315.8" y="590.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="313.0" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="316.0" y="590.0"></text>
</g>
<g>
<title>down_write_trylock (4 samples, 0.09%)</title><rect x="313.3" y="595.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.3" y="606.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.05%)</title><rect x="314.4" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="317.4" y="606.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.02%)</title><rect x="314.4" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.4" y="590.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.02%)</title><rect x="314.7" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.7" y="590.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.02%)</title><rect x="314.7" y="563.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="317.7" y="574.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.05%)</title><rect x="314.9" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.9" y="606.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.02%)</title><rect x="315.5" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.5" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="315.8" y="643.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="318.8" y="654.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.07%)</title><rect x="316.0" y="643.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.0" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (31 samples, 0.71%)</title><rect x="316.8" y="643.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.8" y="654.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="316.8" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="319.8" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.18%)</title><rect x="317.1" y="627.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.1" y="638.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 0.48%)</title><rect x="319.3" y="627.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="322.3" y="638.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="320.9" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.9" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.11%)</title><rect x="321.2" y="611.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="324.2" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="321.2" y="595.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.2" y="606.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.09%)</title><rect x="321.4" y="595.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.4" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.05%)</title><rect x="322.0" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.0" y="590.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="322.5" y="611.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="325.5" y="622.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.14%)</title><rect x="323.3" y="611.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="326.3" y="622.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.07%)</title><rect x="324.1" y="595.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="327.1" y="606.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="324.4" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.4" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="324.4" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.4" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="324.7" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.7" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="325.0" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.0" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.09%)</title><rect x="325.2" y="739.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="328.2" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="326.3" y="739.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="329.3" y="750.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="326.8" y="755.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="329.8" y="766.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.09%)</title><rect x="327.1" y="755.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="330.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.23%)</title><rect x="328.2" y="803.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="329.6" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.07%)</title><rect x="329.6" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="329.6" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.02%)</title><rect x="329.6" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.6" y="750.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="329.8" y="755.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="332.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.05%)</title><rect x="330.4" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (11 samples, 0.25%)</title><rect x="330.9" y="803.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.18%)</title><rect x="331.4" y="787.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.18%)</title><rect x="331.4" y="771.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.4" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.05%)</title><rect x="331.7" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.05%)</title><rect x="331.7" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (3 samples, 0.07%)</title><rect x="332.3" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.3" y="766.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="333.1" y="755.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="336.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.02%)</title><rect x="333.6" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (12 samples, 0.28%)</title><rect x="333.9" y="819.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.05%)</title><rect x="336.6" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/913708564.run (1,832 samples, 42.01%)</title><rect x="337.1" y="899.0" width="495.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.1" y="910.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/913708564.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$7 (1,829 samples, 41.94%)</title><rect x="337.9" y="883.0" width="494.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.9" y="894.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$7</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (1,829 samples, 41.94%)</title><rect x="337.9" y="867.0" width="494.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.9" y="878.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$92/149115048.process (1,829 samples, 41.94%)</title><rect x="337.9" y="851.0" width="494.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.9" y="862.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$92/149115048.proc..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$5 (1,829 samples, 41.94%)</title><rect x="337.9" y="835.0" width="494.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.9" y="846.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$5</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (1,829 samples, 41.94%)</title><rect x="337.9" y="819.0" width="494.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.9" y="830.0">ru/mail/polis/service/zvladn7/AsyncService.handleUpsert</text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (2 samples, 0.05%)</title><rect x="339.0" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.0" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (88 samples, 2.02%)</title><rect x="339.6" y="803.0" width="23.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.6" y="814.0">c..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (88 samples, 2.02%)</title><rect x="339.6" y="787.0" width="23.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.6" y="798.0">c..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (77 samples, 1.77%)</title><rect x="340.1" y="771.0" width="20.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.1" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="346.9" y="755.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="349.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$LoadingValueReference.&lt;init&gt; (2 samples, 0.05%)</title><rect x="347.1" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Stopwatch.createUnstarted (2 samples, 0.05%)</title><rect x="347.1" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.1" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="347.1" y="723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="350.1" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1196148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1196148ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="347.1" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="350.1" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="347.4" y="707.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="350.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="347.4" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="350.4" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="347.4" y="675.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="350.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.postWriteCleanup (5 samples, 0.11%)</title><rect x="347.7" y="755.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.runUnlockedCleanup (5 samples, 0.11%)</title><rect x="347.7" y="739.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.processPendingNotifications (5 samples, 0.11%)</title><rect x="347.7" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (5 samples, 0.11%)</title><rect x="347.7" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="349.0" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="349.0" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="349.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="349.0" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="349.0" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="349.0" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.0" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="349.0" y="659.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="352.0" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="349.0" y="643.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="352.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="349.0" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="352.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="349.0" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="349.0" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="352.0" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="349.0" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.0" y="590.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="349.0" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="349.3" y="659.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="352.3" y="670.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="349.3" y="643.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="352.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 0.87%)</title><rect x="349.6" y="755.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.6" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="359.0" y="739.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="362.0" y="750.0"></text>
</g>
<g>
<title>os::Posix::supports_monotonic_clock() (2 samples, 0.05%)</title><rect x="359.3" y="739.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="362.3" y="750.0"></text>
</g>
<g>
<title>os::Posix::clock_gettime(int, timespec*) (1 samples, 0.02%)</title><rect x="359.9" y="755.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="362.9" y="766.0"></text>
</g>
<g>
<title>os::Posix::supports_monotonic_clock() (2 samples, 0.05%)</title><rect x="360.1" y="755.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="363.1" y="766.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="360.7" y="755.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="363.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.hash (9 samples, 0.21%)</title><rect x="360.9" y="771.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence.hash (9 samples, 0.21%)</title><rect x="360.9" y="755.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence$Equals.doHash (9 samples, 0.21%)</title><rect x="360.9" y="739.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.11%)</title><rect x="361.8" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.11%)</title><rect x="361.8" y="707.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (1 samples, 0.02%)</title><rect x="363.1" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.53%)</title><rect x="363.4" y="803.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.53%)</title><rect x="363.4" y="787.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (23 samples, 0.53%)</title><rect x="363.4" y="771.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="366.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (12 samples, 0.28%)</title><rect x="366.4" y="755.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.25%)</title><rect x="366.4" y="739.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (11 samples, 0.25%)</title><rect x="366.4" y="723.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (5 samples, 0.11%)</title><rect x="366.4" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 0.14%)</title><rect x="367.7" y="707.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (6 samples, 0.14%)</title><rect x="367.7" y="691.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.7" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="369.1" y="675.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="372.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="369.3" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.3" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="369.3" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="372.3" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="369.3" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="372.3" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="369.3" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="372.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="369.3" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="372.3" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="369.3" y="659.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="372.3" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="369.6" y="803.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="372.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="370.4" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="373.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="370.4" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="370.4" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,205 samples, 27.63%)</title><rect x="370.7" y="803.0" width="326.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.7" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="375.8" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="378.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="375.8" y="771.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="378.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.28%)</title><rect x="376.4" y="787.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.28%)</title><rect x="376.4" y="771.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.28%)</title><rect x="376.4" y="755.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.4" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="378.0" y="739.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="381.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.11%)</title><rect x="378.3" y="739.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="381.3" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="378.3" y="723.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="381.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.09%)</title><rect x="378.5" y="723.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="381.5" y="734.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.09%)</title><rect x="378.5" y="707.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="381.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,160 samples, 26.60%)</title><rect x="379.6" y="787.0" width="313.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (64 samples, 1.47%)</title><rect x="379.9" y="771.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.9" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="396.1" y="755.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="399.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="396.7" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.7" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="396.7" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="399.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="396.7" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="399.7" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="396.7" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="399.7" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="396.7" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="399.7" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="396.7" y="675.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="399.7" y="686.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="396.7" y="659.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="399.7" y="670.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.02%)</title><rect x="396.9" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="399.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,095 samples, 25.11%)</title><rect x="397.2" y="771.0" width="296.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.2" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>ClassLoaderData::holder_phantom() const (1 samples, 0.02%)</title><rect x="397.2" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="400.2" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="397.5" y="755.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="400.5" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="397.5" y="739.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="400.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="397.5" y="723.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="400.5" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="397.5" y="707.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="400.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="397.5" y="691.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="400.5" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="397.5" y="675.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="400.5" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="397.5" y="659.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="400.5" y="670.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="397.5" y="643.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="400.5" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="397.5" y="627.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="400.5" y="638.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (1 samples, 0.02%)</title><rect x="397.5" y="611.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="400.5" y="622.0"></text>
</g>
<g>
<title>HeapRegionType::get_trace_type() (1 samples, 0.02%)</title><rect x="397.5" y="595.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="400.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,093 samples, 25.06%)</title><rect x="397.7" y="755.0" width="295.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="399.4" y="739.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.05%)</title><rect x="399.6" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,084 samples, 24.86%)</title><rect x="400.2" y="739.0" width="293.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.2" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,084 samples, 24.86%)</title><rect x="400.2" y="723.0" width="293.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.2" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (25 samples, 0.57%)</title><rect x="401.5" y="707.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="404.5" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="403.7" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="406.7" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="404.2" y="691.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="407.2" y="702.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested(JavaThread*) (1 samples, 0.02%)</title><rect x="404.8" y="691.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="407.8" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.09%)</title><rect x="405.0" y="691.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="408.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.18%)</title><rect x="406.1" y="691.0" width="2.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="409.1" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (6 samples, 0.14%)</title><rect x="406.7" y="675.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="409.7" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.18%)</title><rect x="408.3" y="707.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="411.3" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="410.5" y="707.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="413.5" y="718.0"></text>
</g>
<g>
<title>__send (1,043 samples, 23.92%)</title><rect x="411.0" y="707.0" width="282.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="414.0" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (964 samples, 22.11%)</title><rect x="432.4" y="691.0" width="260.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="435.4" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (8 samples, 0.18%)</title><rect x="432.4" y="675.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="435.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (956 samples, 21.92%)</title><rect x="434.5" y="675.0" width="258.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="437.5" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.05%)</title><rect x="441.0" y="659.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="444.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (930 samples, 21.33%)</title><rect x="441.6" y="659.0" width="251.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.6" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (926 samples, 21.23%)</title><rect x="441.6" y="643.0" width="250.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="444.6" y="654.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="443.2" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="446.2" y="638.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="443.5" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="446.5" y="638.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="443.5" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="446.5" y="622.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="444.0" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.0" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.02%)</title><rect x="444.3" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.3" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (898 samples, 20.59%)</title><rect x="444.6" y="627.0" width="242.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.6" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (864 samples, 19.81%)</title><rect x="445.9" y="611.0" width="233.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.9" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (859 samples, 19.70%)</title><rect x="447.3" y="595.0" width="232.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.3" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="447.3" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="450.3" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="447.8" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="448.1" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (4 samples, 0.09%)</title><rect x="448.9" y="579.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.9" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (9 samples, 0.21%)</title><rect x="450.0" y="579.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="453.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.21%)</title><rect x="450.0" y="563.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.0" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="452.4" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="452.7" y="563.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="452.9" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.9" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="453.2" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="456.2" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.05%)</title><rect x="453.5" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.5" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.11%)</title><rect x="454.0" y="579.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (823 samples, 18.87%)</title><rect x="455.4" y="579.0" width="222.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="458.4" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="460.0" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="463.0" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.05%)</title><rect x="460.8" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.8" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.14%)</title><rect x="461.3" y="563.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.3" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (13 samples, 0.30%)</title><rect x="463.0" y="563.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.0" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.11%)</title><rect x="463.8" y="547.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.8" y="558.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="465.1" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.1" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.07%)</title><rect x="465.7" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.7" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="466.5" y="563.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (60 samples, 1.38%)</title><rect x="466.7" y="563.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (57 samples, 1.31%)</title><rect x="467.3" y="547.0" width="15.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="469.4" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (26 samples, 0.60%)</title><rect x="469.7" y="531.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (24 samples, 0.55%)</title><rect x="470.0" y="515.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="473.0" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.11%)</title><rect x="474.3" y="499.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="477.3" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="475.7" y="499.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="478.7" y="510.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="475.7" y="483.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.7" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.05%)</title><rect x="475.9" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.9" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="476.5" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.5" y="526.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="476.8" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="479.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (15 samples, 0.34%)</title><rect x="477.3" y="531.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="480.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="480.8" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.8" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="481.1" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="484.1" y="526.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.11%)</title><rect x="481.4" y="531.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="484.4" y="542.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.11%)</title><rect x="481.4" y="515.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.4" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="482.7" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="485.7" y="558.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.14%)</title><rect x="483.0" y="563.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.0" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="484.3" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.3" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="484.6" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.6" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="485.1" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="488.1" y="574.0"></text>
</g>
<g>
<title>tcp_push (697 samples, 15.98%)</title><rect x="485.4" y="563.0" width="188.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.4" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (694 samples, 15.91%)</title><rect x="486.2" y="547.0" width="187.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.2" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.05%)</title><rect x="486.5" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="489.5" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="487.0" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.0" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="487.3" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.3" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="487.6" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="490.6" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (687 samples, 15.75%)</title><rect x="488.1" y="531.0" width="185.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.1" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="490.6" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.6" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (637 samples, 14.61%)</title><rect x="491.1" y="515.0" width="172.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="494.1" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="498.1" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.1" y="510.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.09%)</title><rect x="498.4" y="499.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.4" y="510.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="499.5" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.5" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.07%)</title><rect x="499.8" y="499.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.8" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="500.6" y="499.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.6" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (593 samples, 13.60%)</title><rect x="500.8" y="499.0" width="160.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.8" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (585 samples, 13.41%)</title><rect x="501.4" y="483.0" width="158.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="504.4" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="502.5" y="467.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="505.5" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="502.7" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="505.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (573 samples, 13.14%)</title><rect x="503.0" y="467.0" width="155.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.0" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.09%)</title><rect x="503.3" y="451.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="506.3" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="503.3" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="506.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="503.8" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="506.8" y="446.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="503.8" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="506.8" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="504.1" y="435.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.1" y="446.0"></text>
</g>
<g>
<title>ip_output (566 samples, 12.98%)</title><rect x="504.3" y="451.0" width="153.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="507.3" y="462.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="506.0" y="435.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.0" y="446.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="506.0" y="419.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.0" y="430.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="506.0" y="403.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.0" y="414.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="506.0" y="387.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.0" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="506.0" y="371.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="509.0" y="382.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="506.0" y="355.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.0" y="366.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="506.0" y="339.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="509.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="506.0" y="323.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.0" y="334.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.05%)</title><rect x="506.2" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.2" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (508 samples, 11.65%)</title><rect x="506.8" y="435.0" width="137.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="509.8" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="507.1" y="419.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.1" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (502 samples, 11.51%)</title><rect x="507.3" y="419.0" width="135.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.3" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (493 samples, 11.30%)</title><rect x="509.2" y="403.0" width="133.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="512.2" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (425 samples, 9.75%)</title><rect x="513.5" y="387.0" width="115.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="516.5" y="398.0">__local_bh_ena..</text>
</g>
<g>
<title>do_softirq.part.20 (421 samples, 9.65%)</title><rect x="514.6" y="371.0" width="113.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="517.6" y="382.0">do_softirq.par..</text>
</g>
<g>
<title>do_softirq_own_stack (418 samples, 9.58%)</title><rect x="515.4" y="355.0" width="113.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.4" y="366.0">do_softirq_own..</text>
</g>
<g>
<title>__softirqentry_text_start (405 samples, 9.29%)</title><rect x="515.4" y="339.0" width="109.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.4" y="350.0">__softirqentr..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="520.0" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.0" y="334.0"></text>
</g>
<g>
<title>net_rx_action (381 samples, 8.74%)</title><rect x="520.3" y="323.0" width="103.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="523.3" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (377 samples, 8.64%)</title><rect x="521.4" y="307.0" width="102.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.4" y="318.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (371 samples, 8.51%)</title><rect x="522.7" y="291.0" width="100.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.7" y="302.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="522.7" y="275.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="525.7" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (369 samples, 8.46%)</title><rect x="523.0" y="275.0" width="99.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.0" y="286.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.25%)</title><rect x="523.8" y="259.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="526.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (355 samples, 8.14%)</title><rect x="526.8" y="259.0" width="96.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="529.8" y="270.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="527.3" y="243.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.14%)</title><rect x="527.9" y="243.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (5 samples, 0.11%)</title><rect x="529.5" y="243.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="532.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (339 samples, 7.77%)</title><rect x="530.9" y="243.0" width="91.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="533.9" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (330 samples, 7.57%)</title><rect x="531.9" y="227.0" width="89.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="534.9" y="238.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (328 samples, 7.52%)</title><rect x="532.5" y="211.0" width="88.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="535.5" y="222.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (325 samples, 7.45%)</title><rect x="532.8" y="195.0" width="87.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="535.8" y="206.0">ip_protoco..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="534.9" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="537.9" y="190.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.44 (1 samples, 0.02%)</title><rect x="535.2" y="179.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.2" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="535.5" y="179.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="538.5" y="190.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="536.0" y="179.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (4 samples, 0.09%)</title><rect x="536.3" y="179.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="539.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (308 samples, 7.06%)</title><rect x="537.4" y="179.0" width="83.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.4" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="541.4" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.4" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.48%)</title><rect x="541.7" y="163.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="544.7" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.07%)</title><rect x="546.6" y="147.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="549.6" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="547.4" y="163.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="550.4" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.09%)</title><rect x="547.6" y="163.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="550.6" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="548.7" y="163.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.7" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (37 samples, 0.85%)</title><rect x="549.3" y="163.0" width="10.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="552.3" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="549.3" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.3" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="549.8" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="552.8" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="550.1" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="553.1" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (29 samples, 0.66%)</title><rect x="550.6" y="147.0" width="7.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.6" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (24 samples, 0.55%)</title><rect x="552.0" y="131.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.0" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.02%)</title><rect x="554.9" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="557.9" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (11 samples, 0.25%)</title><rect x="555.2" y="115.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.2" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.02%)</title><rect x="556.3" y="99.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="559.3" y="110.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.07%)</title><rect x="556.6" y="99.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="559.6" y="110.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (3 samples, 0.07%)</title><rect x="557.4" y="99.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.4" y="110.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="557.4" y="83.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.4" y="94.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.02%)</title><rect x="558.2" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.2" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.07%)</title><rect x="558.5" y="147.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="561.5" y="158.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.07%)</title><rect x="559.3" y="163.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.3" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="560.1" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (223 samples, 5.11%)</title><rect x="560.4" y="163.0" width="60.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.4" y="174.0">tcp_v4..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="561.2" y="147.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.2" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="561.4" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="564.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="561.7" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="564.7" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="562.0" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="565.0" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (216 samples, 4.95%)</title><rect x="562.3" y="147.0" width="58.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="565.3" y="158.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (10 samples, 0.23%)</title><rect x="564.4" y="131.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="567.4" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.18%)</title><rect x="565.0" y="115.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.0" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.18%)</title><rect x="565.0" y="99.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.0" y="110.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.16%)</title><rect x="565.2" y="83.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="568.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.16%)</title><rect x="565.2" y="67.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.2" y="78.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="567.1" y="131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="570.1" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.07%)</title><rect x="567.4" y="131.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="570.4" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.09%)</title><rect x="568.2" y="131.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.2" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="569.3" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.3" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="569.6" y="131.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="572.6" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (67 samples, 1.54%)</title><rect x="569.8" y="131.0" width="18.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="572.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (66 samples, 1.51%)</title><rect x="570.1" y="115.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (65 samples, 1.49%)</title><rect x="570.1" y="99.0" width="17.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="573.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (64 samples, 1.47%)</title><rect x="570.4" y="83.0" width="17.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="573.4" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="587.7" y="99.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="590.7" y="110.0"></text>
</g>
<g>
<title>tcp_ack (92 samples, 2.11%)</title><rect x="588.0" y="131.0" width="24.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="591.0" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (46 samples, 1.05%)</title><rect x="595.0" y="115.0" width="12.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="598.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.23%)</title><rect x="595.3" y="99.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="598.3" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="595.5" y="83.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="598.5" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.18%)</title><rect x="595.8" y="83.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="598.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="597.4" y="67.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="600.4" y="78.0"></text>
</g>
<g>
<title>skb_release_all (34 samples, 0.78%)</title><rect x="598.0" y="99.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.0" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="598.0" y="83.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.0" y="94.0"></text>
</g>
<g>
<title>skb_release_data (31 samples, 0.71%)</title><rect x="598.2" y="83.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (13 samples, 0.30%)</title><rect x="603.1" y="67.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.1" y="78.0"></text>
</g>
<g>
<title>kfree (13 samples, 0.30%)</title><rect x="603.1" y="51.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="606.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.21%)</title><rect x="604.2" y="35.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="607.2" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="606.6" y="83.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="609.6" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="607.2" y="99.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.2" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="607.4" y="115.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.4" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="608.0" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.0" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.05%)</title><rect x="608.3" y="115.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="611.3" y="126.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="608.8" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.8" y="126.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="609.1" y="115.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.1" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (7 samples, 0.16%)</title><rect x="609.3" y="115.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.3" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="611.2" y="115.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.2" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="611.5" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="614.5" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.07%)</title><rect x="612.0" y="115.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.0" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.11%)</title><rect x="612.9" y="131.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="615.9" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="614.2" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="617.2" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.25%)</title><rect x="614.7" y="131.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="617.7" y="142.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="615.3" y="115.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="618.3" y="126.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.09%)</title><rect x="615.6" y="115.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.6" y="126.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="616.1" y="99.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="619.1" y="110.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.09%)</title><rect x="616.6" y="115.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="619.6" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.09%)</title><rect x="617.7" y="131.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.7" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="618.8" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.8" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="619.1" y="131.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.1" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="619.3" y="131.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.3" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="620.2" y="131.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="623.2" y="142.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="620.4" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="623.4" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="620.7" y="195.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="621.2" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="624.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (4 samples, 0.09%)</title><rect x="621.5" y="227.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="624.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.02%)</title><rect x="622.6" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="625.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="622.9" y="275.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="625.9" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="623.1" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="626.1" y="302.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.14%)</title><rect x="623.4" y="323.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="626.4" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="625.0" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.0" y="350.0"></text>
</g>
<g>
<title>net_rx_action (12 samples, 0.28%)</title><rect x="625.3" y="339.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="628.3" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (52 samples, 1.19%)</title><rect x="628.5" y="387.0" width="14.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="631.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (50 samples, 1.15%)</title><rect x="628.5" y="371.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (32 samples, 0.73%)</title><rect x="630.7" y="355.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="633.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="631.3" y="339.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.3" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (27 samples, 0.62%)</title><rect x="631.5" y="339.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.5" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.07%)</title><rect x="632.3" y="323.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="635.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.32%)</title><rect x="633.1" y="323.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.1" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (13 samples, 0.30%)</title><rect x="633.4" y="307.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="636.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (11 samples, 0.25%)</title><rect x="634.0" y="291.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.0" y="302.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="636.9" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.9" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (6 samples, 0.14%)</title><rect x="637.2" y="323.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.2" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="638.8" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.14%)</title><rect x="639.4" y="355.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="642.4" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="641.0" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.0" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="641.3" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.3" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="641.5" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.5" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="641.8" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.8" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="642.1" y="371.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.1" y="382.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.02%)</title><rect x="642.3" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.3" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="642.6" y="403.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="645.6" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.09%)</title><rect x="643.2" y="419.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (43 samples, 0.99%)</title><rect x="644.2" y="435.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.2" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.05%)</title><rect x="644.2" y="419.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="647.2" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (41 samples, 0.94%)</title><rect x="644.8" y="419.0" width="11.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="647.8" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (41 samples, 0.94%)</title><rect x="644.8" y="403.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="647.8" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (30 samples, 0.69%)</title><rect x="646.1" y="387.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="649.1" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (7 samples, 0.16%)</title><rect x="650.5" y="371.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="653.5" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (7 samples, 0.16%)</title><rect x="652.4" y="371.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.4" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.14%)</title><rect x="652.6" y="355.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="655.6" y="366.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.02%)</title><rect x="654.3" y="387.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.3" y="398.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (5 samples, 0.11%)</title><rect x="654.5" y="387.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="657.5" y="398.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (6 samples, 0.14%)</title><rect x="655.9" y="435.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.9" y="446.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="657.5" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="660.5" y="462.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.07%)</title><rect x="658.0" y="467.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="661.0" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="658.9" y="467.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="661.9" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="659.7" y="483.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="662.7" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="660.5" y="483.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.05%)</title><rect x="660.7" y="483.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="663.7" y="494.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.14%)</title><rect x="661.3" y="499.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="664.3" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="661.3" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="664.3" y="494.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.11%)</title><rect x="661.6" y="483.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="664.6" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="662.6" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.6" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="662.9" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="665.9" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="663.2" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="666.2" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="663.5" y="515.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="666.5" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (8 samples, 0.18%)</title><rect x="663.7" y="515.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="666.7" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="665.9" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="668.9" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="666.4" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="669.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="666.4" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="669.4" y="510.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.11%)</title><rect x="666.7" y="515.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="669.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="668.1" y="515.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="671.1" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.21%)</title><rect x="668.3" y="515.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.14%)</title><rect x="669.1" y="499.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="669.7" y="483.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.7" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="669.9" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.9" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="669.9" y="467.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="672.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="670.5" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.5" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="670.8" y="515.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="673.8" y="526.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (4 samples, 0.09%)</title><rect x="671.0" y="515.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="672.1" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="675.1" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="672.4" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="675.4" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="672.7" y="499.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="672.7" y="483.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.7" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="672.9" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="675.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="673.5" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.5" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="674.0" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="677.0" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.30%)</title><rect x="674.3" y="563.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="677.3" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.11%)</title><rect x="675.4" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.09%)</title><rect x="676.7" y="547.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.7" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="677.5" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.5" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="677.8" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.8" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.11%)</title><rect x="678.1" y="579.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.1" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="679.4" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="682.4" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (27 samples, 0.62%)</title><rect x="679.7" y="611.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.7" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (14 samples, 0.32%)</title><rect x="680.2" y="595.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="683.2" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (14 samples, 0.32%)</title><rect x="680.2" y="579.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="683.2" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="683.5" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.5" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (10 samples, 0.23%)</title><rect x="684.0" y="595.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.0" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.23%)</title><rect x="684.0" y="579.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="687.0" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.02%)</title><rect x="686.7" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="689.7" y="606.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.05%)</title><rect x="687.0" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="690.0" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.39%)</title><rect x="687.5" y="627.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="690.5" y="638.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.34%)</title><rect x="687.5" y="611.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.34%)</title><rect x="687.5" y="595.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.5" y="606.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.30%)</title><rect x="688.1" y="579.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="691.1" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="691.6" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="694.6" y="622.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.07%)</title><rect x="692.1" y="643.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="695.1" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="692.9" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="695.9" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="693.2" y="707.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="696.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.28%)</title><rect x="693.5" y="787.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="695.7" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.09%)</title><rect x="695.7" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="696.7" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="696.7" y="787.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="699.7" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="696.7" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="699.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="696.7" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="699.7" y="766.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="696.7" y="739.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="699.7" y="750.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="696.7" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="699.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="697.0" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="700.0" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="697.0" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="700.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="697.0" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="700.0" y="750.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="697.0" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="700.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.02%)</title><rect x="697.3" y="771.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="700.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (369 samples, 8.46%)</title><rect x="697.5" y="803.0" width="99.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.5" y="814.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (358 samples, 8.21%)</title><rect x="700.5" y="787.0" width="96.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.5" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (17 samples, 0.39%)</title><rect x="700.5" y="771.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (17 samples, 0.39%)</title><rect x="700.5" y="755.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (13 samples, 0.30%)</title><rect x="701.6" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.21%)</title><rect x="701.6" y="723.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.21%)</title><rect x="701.6" y="707.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.6" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (9 samples, 0.21%)</title><rect x="701.6" y="691.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.6" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (9 samples, 0.21%)</title><rect x="701.6" y="675.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.6" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.07%)</title><rect x="704.0" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.07%)</title><rect x="704.0" y="707.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.07%)</title><rect x="704.0" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.02%)</title><rect x="704.8" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.02%)</title><rect x="704.8" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (10 samples, 0.23%)</title><rect x="705.1" y="771.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (10 samples, 0.23%)</title><rect x="705.1" y="755.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (4 samples, 0.09%)</title><rect x="705.4" y="739.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.07%)</title><rect x="705.7" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (5 samples, 0.11%)</title><rect x="706.5" y="739.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.11%)</title><rect x="706.5" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.11%)</title><rect x="706.5" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.11%)</title><rect x="706.5" y="691.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.5" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (5 samples, 0.11%)</title><rect x="706.5" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$104/1117559508.run (331 samples, 7.59%)</title><rect x="707.8" y="771.0" width="89.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.8" y="782.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (331 samples, 7.59%)</title><rect x="707.8" y="755.0" width="89.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.8" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="708.1" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (329 samples, 7.54%)</title><rect x="708.4" y="739.0" width="89.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.4" y="750.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.21%)</title><rect x="708.4" y="723.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.07%)</title><rect x="710.0" y="707.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (320 samples, 7.34%)</title><rect x="710.8" y="723.0" width="86.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.8" y="734.0">java/util/..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="712.4" y="707.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="715.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (310 samples, 7.11%)</title><rect x="712.7" y="707.0" width="83.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.7" y="718.0">java/util..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.23%)</title><rect x="718.4" y="691.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.05%)</title><rect x="721.1" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.05%)</title><rect x="721.1" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (10 samples, 0.23%)</title><rect x="721.6" y="691.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.07%)</title><rect x="721.6" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="722.2" y="659.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="722.2" y="643.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.16%)</title><rect x="722.4" y="675.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.16%)</title><rect x="722.4" y="659.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.09%)</title><rect x="723.2" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.2" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.09%)</title><rect x="723.2" y="627.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (267 samples, 6.12%)</title><rect x="724.3" y="691.0" width="72.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.3" y="702.0">java/uti..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (267 samples, 6.12%)</title><rect x="724.3" y="675.0" width="72.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.3" y="686.0">java/nio..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (116 samples, 2.66%)</title><rect x="765.2" y="659.0" width="31.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.2" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (116 samples, 2.66%)</title><rect x="765.2" y="643.0" width="31.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.2" y="654.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="787.6" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="787.6" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.6" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (31 samples, 0.71%)</title><rect x="788.2" y="627.0" width="8.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="791.2" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="796.6" y="707.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="799.6" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="796.8" y="691.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="799.8" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="797.1" y="691.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="800.1" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="797.1" y="675.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="800.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapArray (7 samples, 0.16%)</title><rect x="797.4" y="803.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="797.4" y="787.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="797.4" y="771.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="797.4" y="755.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="797.4" y="739.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (4 samples, 0.09%)</title><rect x="798.2" y="723.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (124 samples, 2.84%)</title><rect x="799.3" y="803.0" width="33.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.3" y="814.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.94%)</title><rect x="799.3" y="787.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.94%)</title><rect x="799.3" y="771.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.3" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="799.3" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="802.3" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="799.3" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="802.3" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="799.3" y="723.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="802.3" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="799.3" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="802.3" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="799.3" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="802.3" y="702.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="799.3" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="802.3" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="799.6" y="675.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="802.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.89%)</title><rect x="799.8" y="755.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.89%)</title><rect x="799.8" y="739.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.25%)</title><rect x="804.2" y="723.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.28%)</title><rect x="807.1" y="723.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.09%)</title><rect x="807.9" y="707.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="809.0" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.0" y="718.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.09%)</title><rect x="809.3" y="707.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (83 samples, 1.90%)</title><rect x="810.4" y="787.0" width="22.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.4" y="798.0">r..</text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (83 samples, 1.90%)</title><rect x="810.4" y="771.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.4" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.05%)</title><rect x="810.4" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (34 samples, 0.78%)</title><rect x="810.9" y="755.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (33 samples, 0.76%)</title><rect x="810.9" y="739.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="815.8" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (12 samples, 0.28%)</title><rect x="816.1" y="723.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.05%)</title><rect x="819.3" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="819.8" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.02%)</title><rect x="819.8" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (47 samples, 1.08%)</title><rect x="820.1" y="755.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (24 samples, 0.55%)</title><rect x="820.1" y="739.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (8 samples, 0.18%)</title><rect x="824.4" y="723.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.53%)</title><rect x="826.6" y="739.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.16%)</title><rect x="829.0" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.14%)</title><rect x="830.9" y="723.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="832.6" y="723.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="835.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="832.6" y="707.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="832.6" y="691.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.6" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,189 samples, 27.26%)</title><rect x="832.8" y="947.0" width="321.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.8" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.11%)</title><rect x="833.9" y="931.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="836.9" y="942.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.02%)</title><rect x="835.3" y="931.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="838.3" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.07%)</title><rect x="835.5" y="931.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (424 samples, 9.72%)</title><rect x="836.4" y="931.0" width="114.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.4" y="942.0">one/nio/net/Na..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (419 samples, 9.61%)</title><rect x="837.7" y="915.0" width="113.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.7" y="926.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.07%)</title><rect x="839.9" y="899.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="842.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (398 samples, 9.13%)</title><rect x="840.7" y="899.0" width="107.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="843.7" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (10 samples, 0.23%)</title><rect x="840.7" y="883.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="843.7" y="894.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.23%)</title><rect x="840.7" y="867.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="843.7" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="841.8" y="851.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="844.8" y="862.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.11%)</title><rect x="842.0" y="851.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="845.0" y="862.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.11%)</title><rect x="842.0" y="835.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="845.0" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="843.4" y="883.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="846.4" y="894.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.07%)</title><rect x="843.7" y="883.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="846.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (384 samples, 8.81%)</title><rect x="844.5" y="883.0" width="103.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="847.5" y="894.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (246 samples, 5.64%)</title><rect x="881.8" y="867.0" width="66.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.8" y="878.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.09%)</title><rect x="881.8" y="851.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="884.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (242 samples, 5.55%)</title><rect x="882.9" y="851.0" width="65.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="885.9" y="862.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (213 samples, 4.88%)</title><rect x="890.5" y="835.0" width="57.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="893.5" y="846.0">__x64_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="890.5" y="819.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.5" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (211 samples, 4.84%)</title><rect x="890.7" y="819.0" width="57.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.7" y="830.0">do_epo..</text>
</g>
<g>
<title>__fdget (5 samples, 0.11%)</title><rect x="891.6" y="803.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.6" y="814.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="891.6" y="787.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.6" y="798.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="891.6" y="771.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.6" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="892.9" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="895.9" y="814.0"></text>
</g>
<g>
<title>ep_poll (194 samples, 4.45%)</title><rect x="893.2" y="803.0" width="52.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="896.2" y="814.0">ep_poll</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="898.6" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="901.6" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (160 samples, 3.67%)</title><rect x="898.9" y="787.0" width="43.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.9" y="798.0">ep_s..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="908.1" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="911.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.02%)</title><rect x="908.6" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="911.6" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (114 samples, 2.61%)</title><rect x="908.9" y="771.0" width="30.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="911.9" y="782.0">ep..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (76 samples, 1.74%)</title><rect x="918.3" y="755.0" width="20.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (66 samples, 1.51%)</title><rect x="920.2" y="739.0" width="17.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.2" y="750.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="928.1" y="723.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="931.1" y="734.0"></text>
</g>
<g>
<title>tcp_poll (22 samples, 0.50%)</title><rect x="928.3" y="723.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="931.3" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.07%)</title><rect x="933.5" y="707.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="936.5" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (14 samples, 0.32%)</title><rect x="934.3" y="723.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="937.3" y="734.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="938.1" y="739.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="941.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.07%)</title><rect x="938.9" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.9" y="766.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.09%)</title><rect x="939.7" y="771.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="942.7" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.11%)</title><rect x="940.8" y="771.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.8" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="942.1" y="787.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="945.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.25%)</title><rect x="942.7" y="787.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="945.7" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="942.7" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="945.7" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.23%)</title><rect x="943.0" y="771.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.0" y="782.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.23%)</title><rect x="943.0" y="755.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="946.0" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.11%)</title><rect x="944.3" y="739.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.3" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.02%)</title><rect x="945.7" y="803.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="948.7" y="814.0"></text>
</g>
<g>
<title>fput (6 samples, 0.14%)</title><rect x="945.9" y="803.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="948.9" y="814.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.14%)</title><rect x="945.9" y="787.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="948.9" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="947.6" y="803.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.6" y="814.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.02%)</title><rect x="947.8" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.8" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="948.1" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.1" y="846.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="948.4" y="899.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="951.4" y="910.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="948.9" y="899.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="951.9" y="910.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.16%)</title><rect x="949.2" y="899.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="952.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (742 samples, 17.01%)</title><rect x="951.1" y="931.0" width="200.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.1" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (731 samples, 16.76%)</title><rect x="954.1" y="915.0" width="197.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.1" y="926.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (397 samples, 9.10%)</title><rect x="954.1" y="899.0" width="107.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.1" y="910.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (7 samples, 0.16%)</title><rect x="958.9" y="883.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.9" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="960.8" y="883.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="963.8" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="961.1" y="883.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="964.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (202 samples, 4.63%)</title><rect x="961.9" y="883.0" width="54.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.9" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (202 samples, 4.63%)</title><rect x="961.9" y="867.0" width="54.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.9" y="878.0">one/n..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (180 samples, 4.13%)</title><rect x="963.0" y="851.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.0" y="862.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.60%)</title><rect x="963.0" y="835.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.60%)</title><rect x="963.0" y="819.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="964.6" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.07%)</title><rect x="964.6" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.6" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="965.4" y="803.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="968.4" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="965.7" y="803.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="968.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (13 samples, 0.30%)</title><rect x="966.5" y="803.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.30%)</title><rect x="966.5" y="787.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.30%)</title><rect x="966.5" y="771.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.30%)</title><rect x="966.5" y="755.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (154 samples, 3.53%)</title><rect x="970.0" y="835.0" width="41.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.0" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (154 samples, 3.53%)</title><rect x="970.0" y="819.0" width="41.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.0" y="830.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (154 samples, 3.53%)</title><rect x="970.0" y="803.0" width="41.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (154 samples, 3.53%)</title><rect x="970.0" y="787.0" width="41.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.0" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (10 samples, 0.23%)</title><rect x="970.0" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.23%)</title><rect x="970.0" y="755.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.23%)</title><rect x="970.0" y="739.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.16%)</title><rect x="970.0" y="723.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.09%)</title><rect x="970.8" y="707.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="971.9" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (58 samples, 1.33%)</title><rect x="972.7" y="771.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (58 samples, 1.33%)</title><rect x="972.7" y="755.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (52 samples, 1.19%)</title><rect x="972.7" y="739.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (50 samples, 1.15%)</title><rect x="972.7" y="723.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (50 samples, 1.15%)</title><rect x="972.7" y="707.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.41%)</title><rect x="980.6" y="691.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.6" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="980.6" y="675.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="983.6" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.14%)</title><rect x="980.8" y="675.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="983.8" y="686.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="980.8" y="659.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="983.8" y="670.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="980.8" y="643.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="983.8" y="654.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="981.1" y="627.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="984.1" y="638.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.05%)</title><rect x="981.4" y="643.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="984.4" y="654.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.05%)</title><rect x="981.9" y="659.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="984.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.25%)</title><rect x="982.5" y="675.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="985.5" y="686.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="982.5" y="659.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="985.5" y="670.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (10 samples, 0.23%)</title><rect x="982.7" y="659.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="985.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="984.6" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="984.6" y="627.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="984.6" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="987.6" y="622.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="984.6" y="595.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.6" y="606.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.07%)</title><rect x="984.6" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="987.6" y="590.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="984.9" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="987.9" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="984.9" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.9" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="984.9" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="987.9" y="542.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="985.2" y="563.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="988.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.07%)</title><rect x="985.4" y="691.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.05%)</title><rect x="986.3" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.14%)</title><rect x="986.8" y="739.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (86 samples, 1.97%)</title><rect x="988.4" y="771.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.4" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (86 samples, 1.97%)</title><rect x="988.4" y="755.0" width="23.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (86 samples, 1.97%)</title><rect x="988.4" y="739.0" width="23.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (85 samples, 1.95%)</title><rect x="988.7" y="723.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.7" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (85 samples, 1.95%)</title><rect x="988.7" y="707.0" width="23.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="991.7" y="718.0">j..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="988.7" y="691.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="991.7" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="989.0" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="992.0" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.41%)</title><rect x="989.5" y="691.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="992.5" y="702.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.05%)</title><rect x="990.0" y="675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.0" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.07%)</title><rect x="990.6" y="675.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.6" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="991.4" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.4" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="991.7" y="675.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.7" y="686.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="991.9" y="675.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.9" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.09%)</title><rect x="992.5" y="675.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="995.5" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="993.6" y="675.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="996.6" y="686.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="994.1" y="675.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="997.1" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (63 samples, 1.44%)</title><rect x="994.4" y="691.0" width="17.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="997.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 1.19%)</title><rect x="997.3" y="675.0" width="14.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1000.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 1.19%)</title><rect x="997.3" y="659.0" width="14.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 1.08%)</title><rect x="998.7" y="643.0" width="12.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1001.7" y="654.0"></text>
</g>
<g>
<title>do_futex (46 samples, 1.05%)</title><rect x="999.0" y="627.0" width="12.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.0" y="638.0"></text>
</g>
<g>
<title>futex_wake (44 samples, 1.01%)</title><rect x="999.5" y="611.0" width="11.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1002.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1000.1" y="595.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1003.1" y="606.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1000.3" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1003.3" y="606.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.02%)</title><rect x="1000.3" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1003.3" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.09%)</title><rect x="1000.6" y="595.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1003.6" y="606.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.83%)</title><rect x="1001.7" y="595.0" width="9.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1004.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.80%)</title><rect x="1001.9" y="579.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1004.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.80%)</title><rect x="1001.9" y="563.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1004.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1011.4" y="691.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1014.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (18 samples, 0.41%)</title><rect x="1011.7" y="851.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.41%)</title><rect x="1011.7" y="835.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.25%)</title><rect x="1011.7" y="819.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.16%)</title><rect x="1014.7" y="819.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.16%)</title><rect x="1014.7" y="803.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.16%)</title><rect x="1014.7" y="787.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (59 samples, 1.35%)</title><rect x="1016.6" y="883.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1019.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (40 samples, 0.92%)</title><rect x="1016.8" y="867.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.8" y="878.0"></text>
</g>
<g>
<title>ClassLoaderData::holder_phantom() const (1 samples, 0.02%)</title><rect x="1016.8" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.8" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1017.1" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1020.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="1017.1" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.1" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1017.1" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.1" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1017.1" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1020.1" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1017.1" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1020.1" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1017.1" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1020.1" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="1017.1" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.1" y="766.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1017.1" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.1" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="1017.1" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.1" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1017.1" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1020.1" y="718.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="1017.1" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1020.1" y="702.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.02%)</title><rect x="1017.1" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1020.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (38 samples, 0.87%)</title><rect x="1017.4" y="851.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (38 samples, 0.87%)</title><rect x="1017.4" y="835.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (38 samples, 0.87%)</title><rect x="1017.4" y="819.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="1027.7" y="867.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="1027.7" y="851.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.7" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1027.7" y="835.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1030.7" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1027.7" y="819.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1030.7" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1027.7" y="803.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1030.7" y="814.0"></text>
</g>
<g>
<title>JfrAllocationTracer::~JfrAllocationTracer() (1 samples, 0.02%)</title><rect x="1027.7" y="787.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1030.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1027.9" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1030.9" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1027.9" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1030.9" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1027.9" y="803.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1030.9" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1027.9" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1030.9" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1027.9" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1030.9" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1027.9" y="755.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1030.9" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="1027.9" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1030.9" y="750.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.02%)</title><rect x="1027.9" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1030.9" y="734.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1028.2" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1031.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (15 samples, 0.34%)</title><rect x="1028.5" y="867.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1031.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (98 samples, 2.25%)</title><rect x="1032.5" y="883.0" width="26.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.5" y="894.0">o..</text>
</g>
<g>
<title>java/lang/String.regionMatches (82 samples, 1.88%)</title><rect x="1036.9" y="867.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.9" y="878.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (75 samples, 1.72%)</title><rect x="1038.7" y="851.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="1059.0" y="883.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="1059.0" y="867.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.0" y="878.0"></text>
</g>
<g>
<title>ClassLoaderData::holder_phantom() const (1 samples, 0.02%)</title><rect x="1059.9" y="851.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="1060.1" y="851.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1063.1" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1060.4" y="835.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.4" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1060.4" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="1060.4" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1063.4" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1060.7" y="803.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1063.7" y="814.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="1060.7" y="787.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1060.9" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1060.9" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="1060.9" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.9" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1060.9" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1063.9" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1060.9" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.9" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1060.9" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.9" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1060.9" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.9" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1061.2" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.2" y="766.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="1061.2" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="1061.5" y="899.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (333 samples, 7.64%)</title><rect x="1061.7" y="899.0" width="90.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.7" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (319 samples, 7.31%)</title><rect x="1062.6" y="883.0" width="86.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.6" y="894.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (44 samples, 1.01%)</title><rect x="1064.5" y="867.0" width="11.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1067.5" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (9 samples, 0.21%)</title><rect x="1065.8" y="851.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.8" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="1068.2" y="851.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.2" y="862.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.11%)</title><rect x="1069.1" y="851.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1072.1" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.41%)</title><rect x="1070.4" y="851.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1073.4" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.09%)</title><rect x="1072.6" y="835.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1075.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (6 samples, 0.14%)</title><rect x="1073.7" y="835.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.7" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.09%)</title><rect x="1075.3" y="851.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1078.3" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="1076.4" y="867.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1079.4" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.11%)</title><rect x="1077.2" y="867.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1080.2" y="878.0"></text>
</g>
<g>
<title>__recv (258 samples, 5.92%)</title><rect x="1078.5" y="867.0" width="69.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1081.5" y="878.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 4.38%)</title><rect x="1096.6" y="851.0" width="51.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1099.6" y="862.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.05%)</title><rect x="1096.6" y="835.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1099.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (189 samples, 4.33%)</title><rect x="1097.2" y="835.0" width="51.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1100.2" y="846.0">do_sy..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.07%)</title><rect x="1101.8" y="819.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1104.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (168 samples, 3.85%)</title><rect x="1102.6" y="819.0" width="45.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1105.6" y="830.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (165 samples, 3.78%)</title><rect x="1102.6" y="803.0" width="44.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.6" y="814.0">__sy..</text>
</g>
<g>
<title>sock_recvmsg (144 samples, 3.30%)</title><rect x="1103.4" y="787.0" width="39.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1106.4" y="798.0">soc..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.07%)</title><rect x="1103.4" y="771.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1106.4" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (119 samples, 2.73%)</title><rect x="1104.2" y="771.0" width="32.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1107.2" y="782.0">in..</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="1104.5" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1107.5" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1104.8" y="755.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1107.8" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (116 samples, 2.66%)</title><rect x="1105.0" y="755.0" width="31.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1108.0" y="766.0">tc..</text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.53%)</title><rect x="1111.3" y="739.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1114.3" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="1111.3" y="723.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.3" y="734.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.46%)</title><rect x="1112.1" y="723.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.1" y="734.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="1112.1" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1115.1" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1112.6" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1115.6" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (16 samples, 0.37%)</title><rect x="1112.9" y="707.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.9" y="718.0"></text>
</g>
<g>
<title>dst_release (12 samples, 0.28%)</title><rect x="1112.9" y="691.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1115.9" y="702.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.09%)</title><rect x="1116.1" y="691.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1119.1" y="702.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1117.2" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1120.2" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="1117.5" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1120.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1117.8" y="739.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1120.8" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.14%)</title><rect x="1118.0" y="739.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1121.0" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="1118.0" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1121.0" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1118.6" y="723.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1121.6" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1118.6" y="707.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1121.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="1118.8" y="723.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.8" y="734.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.11%)</title><rect x="1119.6" y="739.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="1119.6" y="723.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1122.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1120.5" y="723.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1123.5" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1120.5" y="707.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.5" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1120.7" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.7" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (41 samples, 0.94%)</title><rect x="1121.0" y="739.0" width="11.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.0" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (41 samples, 0.94%)</title><rect x="1121.0" y="723.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.0" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (26 samples, 0.60%)</title><rect x="1125.1" y="707.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1128.1" y="718.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.14%)</title><rect x="1125.3" y="691.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1128.3" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.16%)</title><rect x="1127.0" y="691.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.0" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.25%)</title><rect x="1128.8" y="691.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1131.8" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.18%)</title><rect x="1129.7" y="675.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.7" y="686.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1131.8" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.8" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.07%)</title><rect x="1132.1" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.1" y="750.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1132.6" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1135.6" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.23%)</title><rect x="1132.9" y="739.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1135.9" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="1133.4" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1136.4" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.14%)</title><rect x="1134.0" y="723.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1137.0" y="734.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.11%)</title><rect x="1134.0" y="707.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1137.0" y="718.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.09%)</title><rect x="1134.3" y="691.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.3" y="702.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1135.3" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1138.3" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.07%)</title><rect x="1135.6" y="739.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1138.6" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (22 samples, 0.50%)</title><rect x="1136.4" y="771.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1139.4" y="782.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1136.7" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.7" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.23%)</title><rect x="1137.0" y="755.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1140.0" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.23%)</title><rect x="1137.0" y="739.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.0" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.23%)</title><rect x="1137.0" y="723.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.0" y="734.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (10 samples, 0.23%)</title><rect x="1139.7" y="755.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1142.7" y="766.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.23%)</title><rect x="1139.7" y="739.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1142.7" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (18 samples, 0.41%)</title><rect x="1142.4" y="787.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.4" y="798.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.32%)</title><rect x="1142.9" y="771.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.32%)</title><rect x="1142.9" y="755.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1145.9" y="766.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.21%)</title><rect x="1144.3" y="739.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1147.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1146.7" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.7" y="782.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1147.2" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1150.2" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="1147.5" y="803.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.5" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1148.1" y="819.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1151.1" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1148.1" y="803.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1151.1" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1148.1" y="787.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.1" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1148.1" y="771.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.1" y="782.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1148.1" y="755.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.1" y="766.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1148.1" y="739.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.1" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1148.1" y="723.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.1" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="1148.3" y="867.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1151.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (11 samples, 0.25%)</title><rect x="1148.9" y="883.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.02%)</title><rect x="1151.6" y="867.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.23%)</title><rect x="1151.8" y="931.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.8" y="942.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.18%)</title><rect x="1152.4" y="915.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1155.4" y="926.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.11%)</title><rect x="1153.2" y="899.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1156.2" y="910.0"></text>
</g>
<g>
<title>start_thread (131 samples, 3.00%)</title><rect x="1154.6" y="947.0" width="35.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1157.6" y="958.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (131 samples, 3.00%)</title><rect x="1154.6" y="931.0" width="35.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1157.6" y="942.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (131 samples, 3.00%)</title><rect x="1154.6" y="915.0" width="35.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.6" y="926.0">Thr..</text>
</g>
<g>
<title>GangWorker::loop() (128 samples, 2.94%)</title><rect x="1154.6" y="899.0" width="34.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.6" y="910.0">Ga..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (4 samples, 0.09%)</title><rect x="1154.6" y="883.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.6" y="894.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (4 samples, 0.09%)</title><rect x="1154.6" y="867.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.6" y="878.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.05%)</title><rect x="1154.6" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.6" y="862.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (2 samples, 0.05%)</title><rect x="1154.6" y="835.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.6" y="846.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.05%)</title><rect x="1154.6" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.6" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1154.6" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.6" y="814.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.02%)</title><rect x="1154.8" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.8" y="798.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (2 samples, 0.05%)</title><rect x="1155.1" y="851.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.1" y="862.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.05%)</title><rect x="1155.1" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.1" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1155.1" y="819.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.1" y="830.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.02%)</title><rect x="1155.4" y="803.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.4" y="814.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (120 samples, 2.75%)</title><rect x="1155.6" y="883.0" width="32.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.6" y="894.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (70 samples, 1.61%)</title><rect x="1155.6" y="867.0" width="19.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.6" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (60 samples, 1.38%)</title><rect x="1157.5" y="851.0" width="16.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.5" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (27 samples, 0.62%)</title><rect x="1166.2" y="835.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.2" y="846.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (2 samples, 0.05%)</title><rect x="1170.2" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.2" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="1170.2" y="803.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.2" y="814.0"></text>
</g>
<g>
<title>PLAB::retire() (1 samples, 0.02%)</title><rect x="1170.5" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.5" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.23%)</title><rect x="1170.8" y="819.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.8" y="830.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.02%)</title><rect x="1173.2" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.2" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1173.5" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.5" y="846.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.07%)</title><rect x="1173.8" y="851.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.8" y="862.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::do_spin_master_work(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="1173.8" y="835.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.8" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="1174.0" y="835.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (48 samples, 1.10%)</title><rect x="1174.6" y="867.0" width="13.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.6" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (48 samples, 1.10%)</title><rect x="1174.6" y="851.0" width="13.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.6" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (48 samples, 1.10%)</title><rect x="1174.6" y="835.0" width="13.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.6" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (48 samples, 1.10%)</title><rect x="1174.6" y="819.0" width="13.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.6" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (48 samples, 1.10%)</title><rect x="1174.6" y="803.0" width="13.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.6" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1174.6" y="787.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.6" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (43 samples, 0.99%)</title><rect x="1174.8" y="787.0" width="11.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.8" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (30 samples, 0.69%)</title><rect x="1178.4" y="771.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.4" y="782.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.02%)</title><rect x="1184.0" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.0" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.18%)</title><rect x="1184.3" y="755.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.09%)</title><rect x="1186.5" y="787.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.09%)</title><rect x="1186.5" y="771.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.02%)</title><rect x="1187.0" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.02%)</title><rect x="1187.3" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.02%)</title><rect x="1187.3" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.6" y="867.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="1187.6" y="851.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1187.6" y="835.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.8" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1187.8" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1187.8" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1187.8" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1187.8" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="814.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1188.1" y="883.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.05%)</title><rect x="1188.1" y="867.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.05%)</title><rect x="1188.1" y="851.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1188.4" y="835.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1188.6" y="883.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.6" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.05%)</title><rect x="1188.6" y="867.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (1 samples, 0.02%)</title><rect x="1188.9" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1188.9" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.02%)</title><rect x="1189.2" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.02%)</title><rect x="1189.2" y="883.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.02%)</title><rect x="1189.2" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1189.2" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1189.2" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.02%)</title><rect x="1189.2" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.02%)</title><rect x="1189.2" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.2" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.05%)</title><rect x="1189.5" y="899.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.05%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (2 samples, 0.05%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.05%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.05%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.05%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.5" y="803.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.02%)</title><rect x="1189.5" y="787.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.5" y="771.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.02%)</title><rect x="1189.5" y="755.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print() (1 samples, 0.02%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print_post_evacuate_collection_set() const (1 samples, 0.02%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
<g>
<title>ReferenceProcessorPhaseTimes::print_all_references(unsigned int, bool) const (1 samples, 0.02%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.02%)</title><rect x="1189.7" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="766.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.02%)</title><rect x="1189.7" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="750.0"></text>
</g>
<g>
<title>LogStream::write(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1189.7" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="734.0"></text>
</g>
<g>
<title>LogTargetHandle::print(char const*, ...) (1 samples, 0.02%)</title><rect x="1189.7" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.7" y="718.0"></text>
</g>
<g>
<title>LogDecorations::LogDecorations(LogLevel::type, LogTagSet const&amp;, LogDecorators const&amp;) (1 samples, 0.02%)</title><rect x="1189.7" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="702.0"></text>
</g>
</g>
</svg>
