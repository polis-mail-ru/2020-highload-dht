<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (34,239 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (33,112 samples, 96.71%)</title><rect x="10.0" y="531.0" width="1141.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (33,112 samples, 96.71%)</title><rect x="10.0" y="515.0" width="1141.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (33,112 samples, 96.71%)</title><rect x="10.0" y="499.0" width="1141.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (249 samples, 0.73%)</title><rect x="10.0" y="483.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (249 samples, 0.73%)</title><rect x="10.0" y="467.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (92 samples, 0.27%)</title><rect x="10.0" y="451.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (92 samples, 0.27%)</title><rect x="10.0" y="435.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (92 samples, 0.27%)</title><rect x="10.0" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 0.27%)</title><rect x="10.0" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (92 samples, 0.27%)</title><rect x="10.0" y="387.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (92 samples, 0.27%)</title><rect x="10.0" y="371.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (157 samples, 0.46%)</title><rect x="13.2" y="451.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (157 samples, 0.46%)</title><rect x="13.2" y="435.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (157 samples, 0.46%)</title><rect x="13.2" y="419.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (157 samples, 0.46%)</title><rect x="13.2" y="403.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (157 samples, 0.46%)</title><rect x="13.2" y="387.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (157 samples, 0.46%)</title><rect x="13.2" y="371.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (157 samples, 0.46%)</title><rect x="13.2" y="355.0" width="5.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="16.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$98/1964456450.run (32,863 samples, 95.98%)</title><rect x="18.6" y="483.0" width="1132.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.6" y="494.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$98/1964456450.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$7 (32,863 samples, 95.98%)</title><rect x="18.6" y="467.0" width="1132.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.6" y="478.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$7</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (32,863 samples, 95.98%)</title><rect x="18.6" y="451.0" width="1132.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.6" y="462.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$117/903716948.process (32,863 samples, 95.98%)</title><rect x="18.6" y="435.0" width="1132.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.6" y="446.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$117/903716948.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$3 (32,863 samples, 95.98%)</title><rect x="18.6" y="419.0" width="1132.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.6" y="430.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$get$3</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (32,863 samples, 95.98%)</title><rect x="18.6" y="403.0" width="1132.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.6" y="414.0">ru/mail/polis/service/zvladn7/AsyncService.handleGet</text>
</g>
<g>
<title>com/google/common/cache/LocalCache$LocalManualCache.put (252 samples, 0.74%)</title><rect x="18.6" y="387.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.put (252 samples, 0.74%)</title><rect x="18.6" y="371.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.put (252 samples, 0.74%)</title><rect x="18.6" y="355.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (252 samples, 0.74%)</title><rect x="18.6" y="339.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (252 samples, 0.74%)</title><rect x="18.6" y="323.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (252 samples, 0.74%)</title><rect x="18.6" y="307.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (252 samples, 0.74%)</title><rect x="18.6" y="291.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (252 samples, 0.74%)</title><rect x="18.6" y="275.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (252 samples, 0.74%)</title><rect x="18.6" y="259.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (252 samples, 0.74%)</title><rect x="18.6" y="243.0" width="8.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="21.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (84 samples, 0.25%)</title><rect x="27.3" y="387.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.3" y="398.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (84 samples, 0.25%)</title><rect x="27.3" y="371.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="30.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (32,527 samples, 95.00%)</title><rect x="30.2" y="387.0" width="1121.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.2" y="398.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,030 samples, 3.01%)</title><rect x="30.2" y="371.0" width="35.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.2" y="382.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,030 samples, 3.01%)</title><rect x="30.2" y="355.0" width="35.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.2" y="366.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,030 samples, 3.01%)</title><rect x="30.2" y="339.0" width="35.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.2" y="350.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,030 samples, 3.01%)</title><rect x="30.2" y="323.0" width="35.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.2" y="334.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,030 samples, 3.01%)</title><rect x="30.2" y="307.0" width="35.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.2" y="318.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,030 samples, 3.01%)</title><rect x="30.2" y="291.0" width="35.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.2" y="302.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,030 samples, 3.01%)</title><rect x="30.2" y="275.0" width="35.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.2" y="286.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,030 samples, 3.01%)</title><rect x="30.2" y="259.0" width="35.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.2" y="270.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,030 samples, 3.01%)</title><rect x="30.2" y="243.0" width="35.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.2" y="254.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,030 samples, 3.01%)</title><rect x="30.2" y="227.0" width="35.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.2" y="238.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,030 samples, 3.01%)</title><rect x="30.2" y="211.0" width="35.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.2" y="222.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,030 samples, 3.01%)</title><rect x="30.2" y="195.0" width="35.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.2" y="206.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,030 samples, 3.01%)</title><rect x="30.2" y="179.0" width="35.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.2" y="190.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,030 samples, 3.01%)</title><rect x="30.2" y="163.0" width="35.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.2" y="174.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,030 samples, 3.01%)</title><rect x="30.2" y="147.0" width="35.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.2" y="158.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,030 samples, 3.01%)</title><rect x="30.2" y="131.0" width="35.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.2" y="142.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (407 samples, 1.19%)</title><rect x="30.2" y="115.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (128 samples, 0.37%)</title><rect x="30.2" y="99.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (128 samples, 0.37%)</title><rect x="30.2" y="83.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (128 samples, 0.37%)</title><rect x="30.2" y="67.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (20 samples, 0.06%)</title><rect x="30.2" y="51.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.2" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (20 samples, 0.06%)</title><rect x="30.2" y="35.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="33.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (108 samples, 0.32%)</title><rect x="30.9" y="51.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.9" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (108 samples, 0.32%)</title><rect x="30.9" y="35.0" width="3.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="33.9" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (279 samples, 0.81%)</title><rect x="34.6" y="99.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (279 samples, 0.81%)</title><rect x="34.6" y="83.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (29 samples, 0.08%)</title><rect x="34.6" y="67.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.6" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (29 samples, 0.08%)</title><rect x="34.6" y="51.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="37.6" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (250 samples, 0.73%)</title><rect x="35.6" y="67.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.6" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (250 samples, 0.73%)</title><rect x="35.6" y="51.0" width="8.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="38.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (286 samples, 0.84%)</title><rect x="44.2" y="115.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (286 samples, 0.84%)</title><rect x="44.2" y="99.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (286 samples, 0.84%)</title><rect x="44.2" y="83.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (226 samples, 0.66%)</title><rect x="44.2" y="67.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.2" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (226 samples, 0.66%)</title><rect x="44.2" y="51.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="47.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (60 samples, 0.18%)</title><rect x="52.0" y="67.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.0" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (60 samples, 0.18%)</title><rect x="52.0" y="51.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="55.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (337 samples, 0.98%)</title><rect x="54.0" y="115.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (337 samples, 0.98%)</title><rect x="54.0" y="99.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (39 samples, 0.11%)</title><rect x="54.0" y="83.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.0" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (39 samples, 0.11%)</title><rect x="54.0" y="67.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="57.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (298 samples, 0.87%)</title><rect x="55.4" y="83.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.4" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (298 samples, 0.87%)</title><rect x="55.4" y="67.0" width="10.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="58.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (31,497 samples, 91.99%)</title><rect x="65.7" y="371.0" width="1085.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.7" y="382.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (31,497 samples, 91.99%)</title><rect x="65.7" y="355.0" width="1085.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.7" y="366.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,550 samples, 16.21%)</title><rect x="65.7" y="339.0" width="191.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.7" y="350.0">com/google/common/collect..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,550 samples, 16.21%)</title><rect x="65.7" y="323.0" width="191.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.7" y="334.0">com/google/common/collect..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (5,550 samples, 16.21%)</title><rect x="65.7" y="307.0" width="191.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.7" y="318.0">java/util/PriorityQueue.add</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5,550 samples, 16.21%)</title><rect x="65.7" y="291.0" width="191.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.7" y="302.0">java/util/PriorityQueue.o..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5,550 samples, 16.21%)</title><rect x="65.7" y="275.0" width="191.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.7" y="286.0">java/util/PriorityQueue.s..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5,550 samples, 16.21%)</title><rect x="65.7" y="259.0" width="191.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="270.0">java/util/PriorityQueue.s..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,550 samples, 16.21%)</title><rect x="65.7" y="243.0" width="191.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.7" y="254.0">com/google/common/collect..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,550 samples, 16.21%)</title><rect x="65.7" y="227.0" width="191.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.7" y="238.0">com/google/common/collect..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,550 samples, 16.21%)</title><rect x="65.7" y="211.0" width="191.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.7" y="222.0">com/google/common/collect..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (5,550 samples, 16.21%)</title><rect x="65.7" y="195.0" width="191.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.7" y="206.0">ru/mail/polis/dao/zvladn7..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (5,550 samples, 16.21%)</title><rect x="65.7" y="179.0" width="191.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.7" y="190.0">ru/mail/polis/dao/zvladn7..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (5,550 samples, 16.21%)</title><rect x="65.7" y="163.0" width="191.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.7" y="174.0">ru/mail/polis/dao/zvladn7..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (2,356 samples, 6.88%)</title><rect x="65.7" y="147.0" width="81.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.7" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (826 samples, 2.41%)</title><rect x="65.7" y="131.0" width="28.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.7" y="142.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (826 samples, 2.41%)</title><rect x="65.7" y="115.0" width="28.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.7" y="126.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (826 samples, 2.41%)</title><rect x="65.7" y="99.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.7" y="110.0">su..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (118 samples, 0.34%)</title><rect x="65.7" y="83.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.7" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (118 samples, 0.34%)</title><rect x="65.7" y="67.0" width="4.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="68.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (708 samples, 2.07%)</title><rect x="69.7" y="83.0" width="24.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.7" y="94.0">s..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (708 samples, 2.07%)</title><rect x="69.7" y="67.0" width="24.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="72.7" y="78.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,530 samples, 4.47%)</title><rect x="94.1" y="131.0" width="52.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.1" y="142.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,530 samples, 4.47%)</title><rect x="94.1" y="115.0" width="52.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.1" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (146 samples, 0.43%)</title><rect x="94.1" y="99.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.1" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (146 samples, 0.43%)</title><rect x="94.1" y="83.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="97.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,384 samples, 4.04%)</title><rect x="99.2" y="99.0" width="47.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.2" y="110.0">sun/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,384 samples, 4.04%)</title><rect x="99.2" y="83.0" width="47.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="102.2" y="94.0">sun...</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,426 samples, 4.16%)</title><rect x="146.9" y="147.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.9" y="158.0">ru/ma..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,426 samples, 4.16%)</title><rect x="146.9" y="131.0" width="49.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.9" y="142.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,426 samples, 4.16%)</title><rect x="146.9" y="115.0" width="49.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.9" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1,083 samples, 3.16%)</title><rect x="146.9" y="99.0" width="37.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.9" y="110.0">sun..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,083 samples, 3.16%)</title><rect x="146.9" y="83.0" width="37.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="149.9" y="94.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (343 samples, 1.00%)</title><rect x="184.2" y="99.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.2" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (343 samples, 1.00%)</title><rect x="184.2" y="83.0" width="11.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="187.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,768 samples, 5.16%)</title><rect x="196.0" y="147.0" width="60.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.0" y="158.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,768 samples, 5.16%)</title><rect x="196.0" y="131.0" width="60.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.0" y="142.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (256 samples, 0.75%)</title><rect x="196.0" y="115.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.0" y="126.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (256 samples, 0.75%)</title><rect x="196.0" y="99.0" width="8.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="199.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,512 samples, 4.42%)</title><rect x="204.8" y="115.0" width="52.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.8" y="126.0">sun/n..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,512 samples, 4.42%)</title><rect x="204.8" y="99.0" width="52.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="207.8" y="110.0">sun.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (835 samples, 2.44%)</title><rect x="256.9" y="339.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.9" y="350.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (835 samples, 2.44%)</title><rect x="256.9" y="323.0" width="28.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.9" y="334.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (835 samples, 2.44%)</title><rect x="256.9" y="307.0" width="28.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.9" y="318.0">co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (835 samples, 2.44%)</title><rect x="256.9" y="291.0" width="28.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.9" y="302.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (835 samples, 2.44%)</title><rect x="256.9" y="275.0" width="28.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.9" y="286.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (835 samples, 2.44%)</title><rect x="256.9" y="259.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.9" y="270.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (835 samples, 2.44%)</title><rect x="256.9" y="243.0" width="28.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.9" y="254.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (835 samples, 2.44%)</title><rect x="256.9" y="227.0" width="28.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.9" y="238.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (835 samples, 2.44%)</title><rect x="256.9" y="211.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.9" y="222.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (835 samples, 2.44%)</title><rect x="256.9" y="195.0" width="28.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.9" y="206.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (835 samples, 2.44%)</title><rect x="256.9" y="179.0" width="28.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (835 samples, 2.44%)</title><rect x="256.9" y="163.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.9" y="174.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (835 samples, 2.44%)</title><rect x="256.9" y="147.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.9" y="158.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (327 samples, 0.96%)</title><rect x="256.9" y="131.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (103 samples, 0.30%)</title><rect x="256.9" y="115.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (103 samples, 0.30%)</title><rect x="256.9" y="99.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (103 samples, 0.30%)</title><rect x="256.9" y="83.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (13 samples, 0.04%)</title><rect x="256.9" y="67.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.9" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (13 samples, 0.04%)</title><rect x="256.9" y="51.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="259.9" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (90 samples, 0.26%)</title><rect x="257.4" y="67.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.4" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (90 samples, 0.26%)</title><rect x="257.4" y="51.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="260.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (224 samples, 0.65%)</title><rect x="260.5" y="115.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (224 samples, 0.65%)</title><rect x="260.5" y="99.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (23 samples, 0.07%)</title><rect x="260.5" y="83.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.5" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (23 samples, 0.07%)</title><rect x="260.5" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="263.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (201 samples, 0.59%)</title><rect x="261.3" y="83.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (201 samples, 0.59%)</title><rect x="261.3" y="67.0" width="6.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="264.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (238 samples, 0.70%)</title><rect x="268.2" y="131.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (238 samples, 0.70%)</title><rect x="268.2" y="115.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (238 samples, 0.70%)</title><rect x="268.2" y="99.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (179 samples, 0.52%)</title><rect x="268.2" y="83.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.2" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (179 samples, 0.52%)</title><rect x="268.2" y="67.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="271.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (59 samples, 0.17%)</title><rect x="274.4" y="83.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.4" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (59 samples, 0.17%)</title><rect x="274.4" y="67.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="277.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (270 samples, 0.79%)</title><rect x="276.4" y="131.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (270 samples, 0.79%)</title><rect x="276.4" y="115.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (43 samples, 0.13%)</title><rect x="276.4" y="99.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.4" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (43 samples, 0.13%)</title><rect x="276.4" y="83.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="279.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (227 samples, 0.66%)</title><rect x="277.9" y="99.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.9" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (227 samples, 0.66%)</title><rect x="277.9" y="83.0" width="7.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="280.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (25,112 samples, 73.34%)</title><rect x="285.7" y="339.0" width="865.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.7" y="350.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList</text>
</g>
<g>
<title>java/lang/Iterable.forEach (25,112 samples, 73.34%)</title><rect x="285.7" y="323.0" width="865.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.7" y="334.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$123/207046367.accept (25,112 samples, 73.34%)</title><rect x="285.7" y="307.0" width="865.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.7" y="318.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$123/207046367.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (25,112 samples, 73.34%)</title><rect x="285.7" y="291.0" width="865.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.7" y="302.0">ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (25,112 samples, 73.34%)</title><rect x="285.7" y="275.0" width="865.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.7" y="286.0">ru/mail/polis/dao/zvladn7/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (25,112 samples, 73.34%)</title><rect x="285.7" y="259.0" width="865.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="270.0">ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (25,112 samples, 73.34%)</title><rect x="285.7" y="243.0" width="865.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.7" y="254.0">ru/mail/polis/dao/zvladn7/SSTable.getElementPosition</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (25,112 samples, 73.34%)</title><rect x="285.7" y="227.0" width="865.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="238.0">ru/mail/polis/dao/zvladn7/SSTable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (9,026 samples, 26.36%)</title><rect x="285.7" y="211.0" width="311.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.7" y="222.0">ru/mail/polis/dao/zvladn7/SSTable.getOffset</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9,026 samples, 26.36%)</title><rect x="285.7" y="195.0" width="311.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.7" y="206.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9,026 samples, 26.36%)</title><rect x="285.7" y="179.0" width="311.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.7" y="190.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2,221 samples, 6.49%)</title><rect x="285.7" y="163.0" width="76.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.7" y="174.0">sun/nio/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (2,221 samples, 6.49%)</title><rect x="285.7" y="147.0" width="76.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="288.7" y="158.0">sun.nio...</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (6,805 samples, 19.87%)</title><rect x="362.3" y="163.0" width="234.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.3" y="174.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (6,805 samples, 19.87%)</title><rect x="362.3" y="147.0" width="234.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="365.3" y="158.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16,086 samples, 46.98%)</title><rect x="596.8" y="211.0" width="554.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.8" y="222.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16,086 samples, 46.98%)</title><rect x="596.8" y="195.0" width="554.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.8" y="206.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1,853 samples, 5.41%)</title><rect x="596.8" y="179.0" width="63.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.8" y="190.0">sun/nio..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,853 samples, 5.41%)</title><rect x="596.8" y="163.0" width="63.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="599.8" y="174.0">sun.nio..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (14,233 samples, 41.57%)</title><rect x="660.6" y="179.0" width="490.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.6" y="190.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (14,233 samples, 41.57%)</title><rect x="660.6" y="163.0" width="490.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="663.6" y="174.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,127 samples, 3.29%)</title><rect x="1151.2" y="531.0" width="38.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.2" y="542.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,127 samples, 3.29%)</title><rect x="1151.2" y="515.0" width="38.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.2" y="526.0">one..</text>
</g>
<g>
<title>one.nio.http.HttpSession (769 samples, 2.25%)</title><rect x="1151.2" y="499.0" width="26.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1154.2" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (358 samples, 1.05%)</title><rect x="1177.7" y="499.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (358 samples, 1.05%)</title><rect x="1177.7" y="483.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (358 samples, 1.05%)</title><rect x="1177.7" y="467.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (358 samples, 1.05%)</title><rect x="1177.7" y="451.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.7" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (358 samples, 1.05%)</title><rect x="1177.7" y="435.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (358 samples, 1.05%)</title><rect x="1177.7" y="419.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (358 samples, 1.05%)</title><rect x="1177.7" y="403.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (358 samples, 1.05%)</title><rect x="1177.7" y="387.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (358 samples, 1.05%)</title><rect x="1177.7" y="371.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (358 samples, 1.05%)</title><rect x="1177.7" y="355.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (358 samples, 1.05%)</title><rect x="1177.7" y="339.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (358 samples, 1.05%)</title><rect x="1177.7" y="323.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (358 samples, 1.05%)</title><rect x="1177.7" y="307.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (358 samples, 1.05%)</title><rect x="1177.7" y="291.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (358 samples, 1.05%)</title><rect x="1177.7" y="275.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (358 samples, 1.05%)</title><rect x="1177.7" y="259.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1180.7" y="270.0"></text>
</g>
</g>
</svg>
